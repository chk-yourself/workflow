{"version":3,"sources":["assets/feather/feather-sprite.svg","constants/routes.js","components/Firebase/context.js","components/Firebase/Firebase.js","components/Input/Input.js","components/Button/Button.js","pages/SignUp/SignUpForm.js","components/UserFormPage/UserFormPage.js","pages/SignUp/SignUp.js","pages/SignIn/SignInForm.js","pages/PasswordForget/PasswordForgetForm.js","pages/PasswordForget/PasswordForget.js","pages/SignIn/SignIn.js","components/Session/context.js","store/firebase.js","ducks/currentUser/actions.js","ducks/currentUser/types.js","ducks/currentUser/selectors.js","ducks/currentUser/reducer.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","ducks/users/actions.js","ducks/users/types.js","ducks/users/selectors.js","ducks/users/reducer.js","components/ProjectGrid/ProjectGrid.js","utils/utils.js","ducks/tasks/actions.js","ducks/tasks/types.js","ducks/lists/actions.js","ducks/lists/types.js","ducks/subtasks/actions.js","ducks/subtasks/types.js","ducks/projects/actions.js","ducks/projects/types.js","ducks/projects/selectors.js","ducks/projects/reducer.js","ducks/selectedProject/index.js","components/Icon/Icon.js","components/ProjectGrid/ProjectGridContainer.js","components/withOutsideClick/withOutsideClick.js","components/Modal/Modal.js","components/ProjectComposer/ProjectComposer.js","constants/droppableTypes.js","components/ListComposer/ListComposer.js","components/Board/Board.js","ducks/selectedTask/index.js","ducks/lists/selectors.js","ducks/lists/reducer.js","ducks/tasks/selectors.js","ducks/tasks/reducer.js","ducks/subtasks/selectors.js","ducks/subtasks/reducer.js","constants/keys.js","components/TaskComposer/TaskComposer.js","components/Textarea/Textarea.js","components/CardComposer/CardComposer.js","components/Menu/Menu.js","components/Menu/MenuItem.js","components/Popover/Popover.js","components/Popover/PopoverWrapper.js","components/Tag/Tag.jsx","components/Avatar/Avatar.js","components/Calendar/constants.js","components/Calendar/utils.js","components/Radio/Radio.js","components/Calendar/Calendar.js","components/Card/Card.js","components/Checkbox/Checkbox.js","components/Task/Task.js","components/Task/DraggableTask.js","components/Tasks/Tasks.js","components/List/List.js","ducks/comments/actions.js","ducks/comments/types.js","ducks/comments/selectors.js","ducks/comments/reducer.js","components/Toolbar/Toolbar.jsx","components/TaskEditor/TaskEditorAssignMember.js","components/TaskEditor/TaskEditorSection.js","components/MemberSearch/MemberSearch.js","components/TaskEditor/TaskEditorMoreActions.js","components/Subtask/Subtask.js","components/Subtasks/Subtasks.js","components/TaskEditor/TaskEditorComment.js","components/ColorPicker/ColorPicker.js","components/TagsInput/TagsInput.js","components/DatePicker/DatePicker.js","components/TaskEditor/TaskEditorPane.js","components/ProjectIcon/ProjectIcon.js","components/TaskEditor/TaskEditor.js","components/Board/BoardContainer.js","components/Main/Main.jsx","components/Dashboard/DashboardPanel.js","components/Dashboard/TasksDueSoon.js","components/Dashboard/Dashboard.js","components/ExpansionPanel/ExpansionPanelHeader.jsx","components/ExpansionPanel/ExpansionPanelContent.jsx","components/ExpansionPanel/ExpansionPanel.jsx","components/Folder/Folder.jsx","components/UserTasks/UserTasks.jsx","pages/Home/Home.js","pages/PasswordChange/PasswordChangeForm.js","pages/Account/Account.js","pages/Admin/Admin.js","components/Logo/Logo.js","components/Nav/Navbar.js","components/Nav/Sidebar.js","components/Nav/NavLinks.js","components/SignOutButton/SignOutButton.js","components/SearchBar/SearchBar.js","components/Topbar/Topbar.js","components/Header/Header.jsx","pages/App/App.jsx","serviceWorker.js","store/reducers.js","store/history.js","store/index.js","index.js"],"names":["module","exports","__webpack_require__","p","HOME","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","signInWithGoogle","provider","auth","GoogleAuthProvider","addScope","signInWithPopup","then","result","credential","token","accessToken","console","log","user","catch","error","errorCode","code","message","email","alert","signInWithGithub","GithubAuthProvider","signInWithRedirect","createUserWithEmailAndPassword","password","signInWithEmailAndPassword","signOut","passwordReset","sendPasswordResetEmail","passwordUpdate","newPassword","currentUser","updatePassword","getTimestamp","firestore","FieldValue","serverTimestamp","addToArray","value","arrayUnion","removeFromArray","arrayRemove","deleteField","delete","getDocRef","collection","doc","subcollection","arguments","length","undefined","subdoc","docRef","db","concat","createBatch","batch","queryCollection","collectionName","_ref","_ref2","slicedToArray","field","comparisonOperator","where","updateDoc","_ref3","_ref4","newValue","update","objectSpread","lastUpdatedAt","updateBatch","ref","getUserDoc","userId","addUser","_ref5","name","username","_ref5$projectIds","projectIds","_ref5$photoURL","photoURL","userRef","newFolderRef","todayFolderRef","upcomingFolderRef","laterFolderRef","set","folderIds","taskIds","commit","updateUser","addTag","_ref6","taskId","text","_ref6$projectId","_ref6$color","color","taskRef","getTaskDoc","tags","defineProperty","lastUsedAt","merge","projectRef","getProjectDoc","removeTag","_ref7","tag","updateTask","setTagColor","_ref8","updateProject","updateProjectName","_ref9","get","snapshot","docs","forEach","projectName","addProject","_ref10","_ref10$color","_ref10$view","view","_ref10$isPrivate","isPrivate","add","createdAt","listIds","createdBy","memberIds","notes","isFavorited","id","getListDoc","listId","updateList","updateListName","_ref11","listRef","listName","addList","_ref12","_ref12$projectId","_ref12$userId","deleteList","_ref13","addTask","_ref14","_ref14$folderId","folderId","isFolderItem","commentIds","subtaskIds","isCompleted","completedAt","dueDate","assignedTo","folders","ownerId","removeAssignee","_ref16","shouldCommit","folderRef","addAssignee","_ref17","_batch$update","deleteTask","_ref18","subtaskId","deleteSubtask","commentId","commentRef","moveTaskToList","_ref19","origListId","newListId","updatedTaskIds","origListRef","newListRef","moveTaskToFolder","_ref20","_batch$update2","origFolderId","newFolderId","origFolderRef","getSubtaskDoc","addSubtask","_ref21","_ref21$memberIds","_ref21$projectId","_ref21$taskId","_ref21$dueDate","toConsumableArray","updateSubtask","_ref22","_ref22$taskId","subtaskRef","getCommentDoc","addComment","_ref23","_ref23$memberIds","content","isPinned","from","to","likes","updateComment","initializeApp","Input","_ref$className","className","type","onFocus","onChange","onInput","placeholder","isRequired","onBlur","autoComplete","inputRef","hideLabel","label","labelClass","onKeyDown","maxLength","minLength","isReadOnly","Fragment","htmlFor","required","readOnly","tabIndex","defaultProps","Button","children","_ref$type","onClick","_ref$color","_ref$size","size","_ref$variant","variant","disabled","_ref$iconOnly","iconOnly","buttonRef","objectWithoutProperties","INITIAL_STATE","passwordOne","passwordTwo","SignUpForm","possibleConstructorReturn","getPrototypeOf","call","onSubmit","e","_this$state","state","_this$props","history","authUser","uid","setState","push","ROUTES","preventDefault","target","_this$state2","isInvalid","components_Input_Input","components_Button_Button","compose","withRouter","UserFormPage","title","SignUpLink","Link","SignUpPage","components_UserFormPage_UserFormPage","SignUp_SignUpForm","SignInForm","enableGoogleLogin","PasswordForgetForm","PasswordForgetLink","PasswordForgetPage","PasswordForget_PasswordForgetForm","SignInPage","SignIn_SignInForm","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","AuthUserContext","setCurrentUser","fetchCurrentUserData","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","data","sent","t0","stop","_x","apply","loadFolders","fetchFolders","_callee2","_context2","foldersById","_x2","addFolder","folderData","updateFolder","deleteFolder","reorderFolders","loadTasksDueSoon","tasksDueSoon","fetchTasksDueWithinDays","days","startingDate","Date","endingDate","setHours","timeEnd","setDate","getDate","_callee3","_context3","orderBy","tasks","_x3","addTaskDueSoon","taskData","deleteTaskDueSoon","updateTaskDueSoon","syncFolders","_callee6","getState","_context6","onSnapshot","_callee5","querySnapshot","_context5","docChanges","_callee4","change","changeType","_context4","Promise","all","abrupt","_x7","_x6","_x4","_x5","getCurrentUser","getCurrentUserId","getFolders","getFolderIds","getFoldersArray","keys","map","isDefault","getFolder","getTasksDueSoonById","getTasksDueSoonArr","getMergedTags","selectedProject","projectsById","usersById","projectTags","userTags","mergedTags","action","_state$folders","restOfFolders","_toPropertyKey","_state$tasksDueSoon","restOfTasks","withAuthentication","WithAuthentication","_React$Component","inherits","createClass","key","_this2","listener","onAuthStateChanged","Session_context","Provider","connect","currentUserActions","withAuthorization","condition","WithAuthorization","loadUserData","loadUsersById","fetchUsersById","users","fetchUserData","userData","deleteUser","getUsersById","getUserData","getUserTaskIds","getUsersArray","getMembersArray","memberId","tasksById","reducer_toPropertyKey","ProjectTile","ProjectGrid","isEqual","other","prototype","toString","typeArr","valueLen","compare","item1","item2","itemType","i","hasOwnProperty","windowDebouncer","callback","request","_len","args","Array","_key","window","cancelAnimationFrame","requestAnimationFrame","firstThen","first","after","count","_len2","_key2","fn","invokeBeforeExecution","loadTasksById","loadUserTasks","removeTask","updateTasksById","task","_ref4$listId","getStore","_getStore$tasksById$t","fetchProjectTasks","fetchUserTasks","syncUserTasks","_callee7","_context7","_x9","_x8","syncProjectTasks","_callee10","_context10","_ref15","_callee9","_context9","_callee8","_getState","_context8","_x13","_x12","_x10","_x11","loadListsById","listsById","listData","removeList","_getStore","_tasksById$taskId","fetchListsById","lists","fetchUserLists","syncProjectLists","createList","loadSubtasksById","subtasksById","fetchSubtasksById","subtasks","updateSubtasksById","subtask","fetchProjectSubtasks","fetchTaskSubtasks","fetchUserSubtasks","subtaskData","loadProjectsById","loadProject","projectData","fetchProjectsById","projects","fetchProjectLists","projectLists","projectTasks","projectSubtasks","fetchProjectContent","project","reorderLists","updateProjectTags","getProjectsById","getProjectsArray","getProject","getProjectTags","getProjectName","getProjectColor","filter","selectProject","getSelectedProjectId","Icon","width","height","xmlns","xmlnsXlink","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","xlinkHref","featherIcons","ProjectGridContainer","projectObserver","_this$props2","projectsArray","projectTiles","ProjectGrid_ProjectTile","ProjectGrid_ProjectGrid","openProjectComposer","components_Icon_Icon","ownProps","projectSelectors","projectActions","selectProjectAction","withOutsideClick","WrappedComponent","_Component","WithOutsideClick","handleTouch","isTouchEnabled","document","removeEventListener","handleOutsideClick","addEventListener","componentEl","Error","contains","componentInstance","current","onOutsideClick","createRef","innerRef","el","Modal","onModalClose","onModalClick","_this$props$size","classes","modal","button","projectTitle","ProjectComposer","handleSubmit","onClose","components_Modal_Modal","LIST","TASK","FOLDER","isActive","ListComposer","resetForm","onReset","Board","react_beautiful_dnd_esm","droppableId","droppableTypes","direction","provided","droppableProps","components_ListComposer_ListComposer","selectTask","getSelectedTaskId","selectedTask","getListsById","getListName","getSelectedProjectLists","getProjectLists","lists_reducer_toPropertyKey","getTasksById","getListTasks","getFolderTasks","getSimpleTasks","reduce","getTaskTags","taskTags","taskTag","tasks_reducer_toPropertyKey","getSubtasksById","getSubtasksArray","getSimpleSubtasks","_subtasksById$subtask","getActiveSubtasks","getCompletedSubtasks","includes","subtasks_reducer_toPropertyKey","BACKSPACE","ENTER","TAB","ARROW_DOWN","ARROW_UP","TaskComposer","currentUserSelectors","Textarea","autoHeightResize","isAutoHeightResizeEnabled","textareaEl","style","scrollHeight","onDragStart","CardComposer","Textarea_Textarea_Textarea","updateProjectsById","Menu","menuRef","MenuItem","Popover","PopoverWrapper","onPopoverClose","toggleOpen","onButtonClick","prevState","handleClose","matches","alignInner","onWrapperClick","alignOuter","buttonProps","anchorEl","popoverWrapperStyle","offsetTop","offsetLeft","position","top","wrapper","Popover_Popover","popover","align","Tag","onDelete","tagRef","Avatar","getUserInitials","fullName","split","charAt","join","toUpperCase","imgSrc","imgProps","avatar","src","alt","img","backgroundColor","MONTHS","long","short","daysTotal","WEEK_DAYS","narrow","isLeapYear","year","getMonthFirstDay","monthIndex","getDay","isToday","date","isYesterday","today","isTomorrow","isThisYear","getFullYear","getMonthDays","getPrevMonth","month","getNextMonth","getMonthDates","monthDays","monthFirstDay","_getPrevMonth","prevMonth","prevMonthYear","prevMonthDays","daysFromPrevMonth","daysFromNextMonth","prevMonthDates","n","day","thisMonthDates","nextMonthDates","isDate","getSimpleDate","dateObj","getMonth","isSimpleDate","isSameDate","base","dateDay","dateMonth","dateYear","baseDay","baseMonth","baseYear","getNextYears","num","startingYear","item","zeroPad","padStart","toSimpleDateString","simpleDate","toSimpleDateObj","dateString","dateArr","isSDSFormat","test","isWithinDays","timeStart","isPriorDate","toDateString","options","useRelative","format","weekday","slice","trim","Radio","_ref$classes","radio","isChecked","checked","Calendar","isMonthsDropdownActive","isYearsDropdownActive","goToNextMonth","onMonthClick","dateUtils","goToPrevMonth","toggleMonthsDropdown","toggleYearsDropdown","selectMonth","_this$props3","selectYear","onYearClick","_this$props4","selectedDate","onDayClick","dates","years","calendar","PopoverWrapper_PopoverWrapper","yearOption","components_Radio_Radio","monthOption","weekDay","isSelectedDate","CardDetail","icon","Card","handleCardClick","onCardClick","nextProps","indexOf","taskIndex","completedSubtasks","taskMembers","dueDateStr","toDate","isDueToday","isDueTmrw","isPastDue","draggableId","index","draggableProps","dragHandleProps","headerEl","components_Tag_Tag","Card_CardDetail","member","Avatar_Avatar_Avatar","taskSelectors","subtaskSelectors","userSelectors","Checkbox","Task","isFocused","prevPropsName","newName","toggleCompleted","handleTaskClick","onTaskClick","_this$props5","listStyle","components_Checkbox_Checkbox","DraggableTask","components_Task_Task","Tasks","scrollToBottom","listEnd","scrollIntoView","behavior","prevProps","isBoardView","inner","components_Card_Card","Task_DraggableTask","minHeight","isDraggingOver","float","clear","List","handleListDelete","listIndex","isFetchingTasks","isRestricted","components_Menu_Menu","Menu_MenuItem","href","Tasks_Tasks","components_CardComposer_CardComposer","components_TaskComposer_TaskComposer","listActions","loadCommentsById","commentsById","fetchCommentsById","comments","updateCommentsById","comment","fetchTaskComments","fetchUserComments","commentData","deleteComment","getCommentsById","getCommentsArray","comments_reducer_toPropertyKey","Toolbar","TaskEditorAssignMember","TaskEditorSection","MemberSearch","query","selectedMember","selectedIndex","filteredList","memberSearchEl","matchUser","regExp","RegExp","newIndex","persistSelectedMember","onMemberClick","nextIndex","prevIndex","inputEl","focus","assignedMembers","_this$state3","isAssigned","TaskEditorMoreActions","onMenuClick","data-action","appRoot","getElementById","Subtask","portal","appendChild","removeChild","isDragging","ReactDOM","createPortal","Subtasks","isFetching","selectedProjectId","moveSubtask","destination","source","updatedSubtaskIds","splice","subtaskObserver","onDragEnd","components_Subtask_Subtask","subtaskActions","TaskEditorComment","secondsElapsed","tick","handleLikeClick","handleLike","secondsSinceCreation","Math","floor","now","getTime","interval","setInterval","clearInterval","dateCreated","timeCreated","toLocaleTimeString","hour","minute","hour12","dateCreatedString","taskActions","commentActions","ColorPicker","selectedColor","handleColorChange","selectColor","TagsInput","selectedTag","focusedTag","hasExactMatch","matchTag","tagSuggestions","findIndex","persistSelectedTag","assignedTags","handleTagDelete","isColorPickerActive","currentTag","hasTags","colorPickerStyle","currentTagEl","_this$currentTagEl","offsetWidth","offsetHeight","left","ColorPicker_ColorPicker_ColorPicker","DatePicker","currentMonth","currentYear","selectDate","newDate","setCurrentMonth","setCurrentYear","updateDateString","currentDueDate","clearDueDate","display","Calendar_Calendar_Calendar","TaskEditorPane","ProjectIcon","TaskEditorWrapper","handleTaskEditorClose","handleClick","components_TaskEditor_TaskEditorPane","TaskEditor","taskKey","currentValue","updatedValue","currentFocus","newComment","commentFormEl","newSubtaskFormEl","handleMoreActions","dataset","handleCommentLike","assignMember","toggleColorPicker","_this$props6","isProjectTag","isUserTag","tagData","_this$props7","_this$props8","setDueDate","_this$props9","toggleDatePicker","isDatePickerActive","_this$props10","newSubtask","membersListButton","_this$props11","commentObserver","_this3","_this$props12","commentsArray","usersArray","membersArray","projectColor","hasSubtasks","hasComments","isNewCommentInvalid","isNewSubtaskInvalid","commentFormIsFocused","newSubtaskFormIsFocused","taskDueDate","TaskEditor_TaskEditorWrapper","components_Toolbar_Toolbar","TaskEditorAssignMember_TaskEditorAssignMember","MemberSearch_MemberSearch_MemberSearch","TaskEditor_TaskEditorMoreActions","TaskEditor_TaskEditorSection","components_ProjectIcon_ProjectIcon","DatePicker_DatePicker_DatePicker","datePickerEl","click","TagsInput_TagsInput_TagsInput","components_Subtasks_Subtasks","components_TaskEditor_TaskEditorComment","commentSelectors","syncTaskComments","BoardContainer","isMovedWithinList","updatedListIds","toggleTaskEditor","isTaskEditorOpen","onNameChange","onNameBlur","newProjectName","listObserver","taskObserver","updatedProject","utils","selectedTaskId","components_Board_Board","list","components_List_List","components_TaskEditor_TaskEditor","listSelectors","selectTaskAction","Main","main","DashboardPanel","TasksDueSoon","currentUserId","Dashboard_DashboardPanel","Dashboard","toggleProjectComposer","Dashboard_TasksDueSoon","ProjectGrid_ProjectGridContainer","ExpansionPanelHeader","role","ExpansionPanelContent","isExpanded","toggleContent","header","propsIsExpanded","panel","aria-expanded","ExpansionPanel_ExpansionPanelHeader","ExpansionPanel_ExpansionPanelContent","Folder","isDragDisabled","UserTasks","origIndex","isMovedWithinFolder","updatedFolderIds","folderObserver","filters","components_Main_Main","folder","components_Folder_Folder","HomePage","isProjectComposerOpen","createProject","userObserver","ProjectComposer_ProjectComposer_ProjectComposer","Switch","Route","exact","path","render","components_Dashboard_Dashboard","Board_BoardContainer","match","params","components_UserTasks_UserTasks","userActions","PasswordChangeForm","PasswordChange_PasswordChangeForm","AdminPage","loading","getCurrentUserData","Logo","Navbar","viewportWidth","innerWidth","isMobileNavVisible","handleResize","toggleMobileNavVisibility","minWidth","navLinksEl","isMobileView","navbar","navEl","components_Logo_Logo","links","SidebarIcon","Sidebar","onToggle","NavLinksNonAuth","NavLink","NavLinksAuth","Sidebar_SidebarIcon","SearchBar","stopPropagation","Topbar","SearchBar_SearchBar_SearchBar","components_SignOutButton_SignOutButton","Header","isNavExpanded","toggleNav","Sidebar_Sidebar","NavLinks_NavLinksAuth","components_Topbar_Topbar","Navbar_Navbar","NavLinks_NavLinksNonAuth","Header_Header_Header","component","LandingPage","Home_Home","AccountPage","Boolean","location","hostname","combineReducers","createBrowserHistory","basename","store","createStore","reducers","applyMiddleware","thunk","es","context","Router","pages_App_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f1c85f3c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/feather-sprite.0ed672ce.svg\";","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const APP = '/0/';\nexport const HOME = '/0/home/:id';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const PROJECT = '/0/project/:id';\nexport const USER_PROJECTS = '/0/:id/projects';\nexport const USER_TASKS = '/0/:id/tasks';\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import firebase from 'firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\nclass Firebase {\n  constructor() {\n    firebase.initializeApp(config);\n    this.auth = firebase.auth();\n    this.db = firebase.firestore();\n  }\n\n  // Auth API\n\n  get currentUser() {\n    return this.auth.currentUser;\n  }\n\n  signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    provider.addScope('https://www.googleapis.com/auth/contacts.readonly');\n    this.auth\n      .signInWithPopup(provider)\n      .then(result => {\n        if (result.credential) {\n          const token = result.credential.accessToken;\n          console.log(token);\n          const user = result.user;\n        }\n      })\n      .catch(error => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        const email = error.email;\n        const credential = error.credential;\n\n        if (errorCode === 'auth/account-exists-with-different-credential') {\n          alert(\n            'You have already signed up with a different auth provider for that email.'\n          );\n        } else {\n          console.error(error);\n        }\n      });\n  };\n\n  signInWithGithub = () => {\n    const provider = new firebase.auth.GithubAuthProvider();\n    this.auth.signInWithRedirect(provider);\n  };\n\n  createUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  signInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  signOut = () => this.auth.signOut();\n\n  passwordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  passwordUpdate = newPassword =>\n    this.auth.currentUser.updatePassword(newPassword);\n\n  // Utility API\n\n  getTimestamp = () => firebase.firestore.FieldValue.serverTimestamp();\n\n  addToArray = value => firebase.firestore.FieldValue.arrayUnion(value);\n\n  removeFromArray = value => firebase.firestore.FieldValue.arrayRemove(value);\n\n  deleteField = () => firebase.firestore.FieldValue.delete();\n\n  getDocRef = (collection, doc, subcollection = null, subdoc = null) => {\n    const docRef = this.db.doc(`${collection}/${doc}`);\n    return subcollection && subdoc\n      ? docRef.collection(subcollection).doc(subdoc)\n      : docRef;\n  };\n\n  createBatch = () => this.db.batch();\n\n  queryCollection = (collectionName, [field, comparisonOperator, value]) => {\n    return this.db\n      .collection(collectionName)\n      .where(field, comparisonOperator, value);\n  };\n\n  updateDoc = ([collection, doc, subcollection, subdoc], newValue = {}) =>\n    this.getDocRef(collection, doc, subcollection, subdoc).update({\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  updateBatch = (batch, ref, newValue = {}) => {\n    return batch.update(ref, {\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  // User API\n\n  getUserDoc = userId => this.db.collection('users').doc(userId);\n\n  addUser = ({\n    userId,\n    name,\n    username,\n    email,\n    projectIds = [],\n    photoURL = null\n  }) => {\n    const batch = this.db.batch();\n    const userRef = this.getDocRef('users', userId);\n    const newFolderRef = this.getDocRef('users', userId, 'folders', '0');\n    const todayFolderRef = this.getDocRef('users', userId, 'folders', '1');\n    const upcomingFolderRef = this.getDocRef('users', userId, 'folders', '2');\n    const laterFolderRef = this.getDocRef('users', userId, 'folders', '3');\n\n    batch.set(userRef, {\n      userId,\n      name,\n      username,\n      email,\n      projectIds,\n      photoURL,\n      folderIds: [0, 1, 2, 3]\n    });\n\n    batch.set(newFolderRef, {\n      name: 'New Tasks',\n      taskIds: []\n    });\n\n    batch.set(todayFolderRef, {\n      name: 'Today',\n      taskIds: []\n    });\n\n    batch.set(upcomingFolderRef, {\n      name: 'Upcoming',\n      taskIds: []\n    });\n\n    batch.set(laterFolderRef, {\n      name: 'Later',\n      taskIds: []\n    });\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log('User added');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  updateUser = (userId, newValue = {}) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .update(newValue);\n\n  // Tags API\n\n  addTag = ({ taskId, userId, text, projectId = null, color = 'default' }) => {\n    const batch = this.db.batch();\n    const userRef = this.getUserDoc(userId);\n    const taskRef = this.getTaskDoc(taskId);\n\n    batch.update(taskRef, {\n      tags: this.addToArray(text),\n      lastUpdatedAt: this.getTimestamp()\n    });\n\n    batch.set(\n      userRef,\n      {\n        tags: {\n          [text]: {\n            text,\n            color,\n            lastUsedAt: this.getTimestamp()\n          }\n        },\n        lastUpdatedAt: this.getTimestamp()\n      },\n      { merge: true }\n    );\n\n    if (projectId) {\n      const projectRef = this.getProjectDoc(projectId);\n\n      batch.set(\n        projectRef,\n        {\n          tags: {\n            [text]: {\n              text,\n              color,\n              lastUsedAt: this.getTimestamp()\n            }\n          },\n          lastUpdatedAt: this.getTimestamp()\n        },\n        { merge: true }\n      );\n    }\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log('tag added');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  removeTag = ({ taskId, tag }) => {\n    this.updateTask(taskId, {\n      tags: this.removeFromArray(tag)\n    });\n  };\n\n  setTagColor = ({ userId, projectId, tag, color }) => {\n    const batch = this.db.batch();\n    const userRef = this.getUserDoc(userId);\n    const projectRef = this.getProjectDoc(projectId);\n\n    batch.set(\n      userRef,\n      {\n        tags: {\n          [tag]: {\n            color\n          }\n        },\n        lastUpdatedAt: this.getTimestamp()\n      },\n      { merge: true }\n    );\n\n    batch.set(\n      projectRef,\n      {\n        tags: {\n          [tag]: {\n            color\n          }\n        },\n        lastUpdatedAt: this.getTimestamp()\n      },\n      { merge: true }\n    );\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log('tag color updated');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  // Project API\n\n  getProjectDoc = projectId => this.db.collection('projects').doc(projectId);\n\n  updateProject = (projectId, newValue = {}) =>\n    this.getProjectDoc(projectId).update({\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  updateProjectName = ({ projectId, name }) => {\n    const batch = this.db.batch();\n    const projectRef = this.getProjectDoc(projectId);\n\n    // Delete list\n    batch.update(projectRef, {\n      name,\n      lastUpdatedAt: this.getTimestamp()\n    });\n\n    // Update tasks assigned to list\n    this.db\n      .collection('tasks')\n      .where('projectId', '==', projectId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.update(doc.ref, {\n            projectName: name\n          });\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('project name updated');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  addProject = ({\n    userId,\n    name,\n    color = 'default',\n    view = 'board',\n    isPrivate = false\n  }) => {\n    this.db\n      .collection('projects')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastUpdatedAt: null,\n        listIds: [],\n        createdBy: userId,\n        memberIds: [userId],\n        notes: '',\n        isFavorited: false,\n        color,\n        view,\n        isPrivate,\n        name\n      })\n      .then(ref => {\n        this.updateUser(userId, {\n          projectIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  // List API\n\n  getListDoc = listId => this.db.collection('lists').doc(listId);\n\n  updateList = (listId, newValue = {}) =>\n    this.getListDoc(listId).update({\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  updateListName = ({ listId, name }) => {\n    const batch = this.db.batch();\n    const listRef = this.getListDoc(listId);\n\n    // Delete list\n    batch.update(listRef, {\n      name,\n      lastUpdatedAt: this.getTimestamp()\n    });\n\n    // Update tasks assigned to list\n    this.db\n      .collection('tasks')\n      .where('listId', '==', listId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.update(doc.ref, {\n            listName: name\n          });\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('list name updated');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  addList = ({ name, projectId = null, userId = null }) => {\n    this.db\n      .collection('lists')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastUpdatedAt: null,\n        taskIds: [],\n        projectId,\n        name\n      })\n      .then(ref => {\n        if (projectId) {\n          this.updateProject(projectId, {\n            listIds: this.addToArray(ref.id)\n          });\n        }\n        if (userId) {\n          this.updateUser(userId, {\n            listIds: this.addToArray(ref.id)\n          });\n        }\n      });\n  };\n\n  deleteList = ({ listId, projectId }) => {\n    const batch = this.db.batch();\n    const listRef = this.getListDoc(listId);\n    const projectRef = this.getProjectDoc(projectId);\n\n    // Delete list\n    batch.delete(listRef);\n\n    // Remove list id from project\n    batch.update(projectRef, {\n      listIds: this.removeFromArray(listId),\n      lastUpdatedAt: this.getTimestamp()\n    });\n\n    // Delete tasks assigned to list\n    this.db\n      .collection('tasks')\n      .where('listId', '==', listId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('list deleted');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  // Task API\n\n  getTaskDoc = taskId => this.db.collection('tasks').doc(taskId);\n\n  addTask = ({\n    name,\n    projectId,\n    projectName,\n    listId,\n    listName,\n    userId,\n    folderId = null\n  }) => {\n    const isFolderItem = folderId && userId;\n\n    this.db\n      .collection('tasks')\n      .add({\n        createdBy: userId,\n        createdAt: this.getTimestamp(),\n        lastUpdatedAt: null,\n        commentIds: [],\n        subtaskIds: [],\n        isCompleted: false,\n        completedAt: null,\n        dueDate: null,\n        notes: '',\n        assignedTo: isFolderItem ? [userId] : [],\n        folders: isFolderItem\n          ? {\n              [userId]: folderId\n            }\n          : {},\n        ownerId: isFolderItem ? userId : null,\n        listId,\n        listName,\n        projectId,\n        projectName,\n        name\n      })\n      .then(ref => {\n        if (isFolderItem) {\n          this.updateDoc(['users', userId, 'folders', folderId], {\n            taskIds: this.addToArray(ref.id)\n          });\n        } else {\n          this.updateDoc(['lists', listId], {\n            taskIds: this.addToArray(ref.id)\n          });\n        }\n      });\n  };\n\n  updateTask = (taskId, newValue = {}) => {\n    this.getTaskDoc(taskId).update({\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  removeAssignee = ({ taskId, userId, folderId }, batch = this.createBatch(), shouldCommit = true) => {\n    const folderRef = this.getDocRef('users', userId, 'folders', folderId);\n    this.updateBatch(batch, folderRef, {\n      taskIds: this.removeFromArray(taskId)\n    });\n\n    if (shouldCommit) {\n      const taskRef = this.getDocRef('tasks', taskId);\n      this.updateBatch(batch, taskRef, {\n        assignedTo: this.removeFromArray(userId),\n        [`folders.${userId}`]: this.deleteField()\n      });\n  \n      return batch\n        .commit()\n        .then(() => {\n          console.log('Removed member from task');\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    }\n  };\n\n  addAssignee = ({ taskId, projectId, userId }) => {\n    const batch = this.db.batch();\n    const taskRef = this.getDocRef('tasks', taskId);\n    const projectRef = this.getDocRef('projects', projectId);\n    const newFolderRef = this.getDocRef('users', userId, 'folders', '0');\n    batch.update(newFolderRef, {\n      taskIds: this.addToArray(taskId),\n      lastUpdatedAt: this.getTimestamp()\n    });\n    batch.update(taskRef, {\n      assignedTo: this.addToArray(userId),\n      [`folders.${userId}`]: '0',\n      lastUpdatedAt: this.getTimestamp()\n    });\n    batch.update(projectRef, {\n      memberIds: this.addToArray(userId),\n      lastUpdatedAt: this.getTimestamp()\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('Assigned task to member');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  deleteTask = (\n    { taskId, listId, assignedTo, subtaskIds, commentIds, folders },\n    batch = this.createBatch(),\n    shouldCommit = true\n  ) => {\n    const taskRef = this.getDocRef('tasks', taskId);\n    batch.delete(taskRef);\n\n    if (listId) {\n      const listRef = this.getDocRef('lists', listId);\n      this.updateBatch(batch, listRef, {\n        taskIds: this.removeFromArray(taskId)\n      });\n    }\n\n    // Delete subtasks\n    if (subtaskIds.length > 0) {\n      subtaskIds.forEach(subtaskId => {\n        this.deleteSubtask({ subtaskId }, batch, false);\n      });\n      console.log('1. Subtasks deleted.');\n    }\n\n    // Delete task assignments\n    if (assignedTo.length > 0) {\n      assignedTo.forEach(userId => {\n        const folderId = folders[userId];\n        const folderRef = this.getDocRef('users', userId, 'folders', folderId);\n        this.updateBatch(batch, folderRef, {\n          taskIds: this.removeFromArray(taskId)\n        });\n      });\n      console.log('2. Removed task assignments.');\n    }\n\n    // Delete comments\n    if (commentIds.length > 0) {\n      commentIds.forEach(commentId => {\n        const commentRef = this.getDocRef('comments', commentId);\n        batch.delete(commentRef);\n      });\n      console.log('3. Task comments deleted.');\n    }\n\n    if (shouldCommit) {\n      return batch\n      .commit()\n      .then(() => {\n        console.log('task deleted');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n    }\n  };\n\n  moveTaskToList = ({ taskId, origListId, newListId, updatedTaskIds }) => {\n    const batch = this.db.batch();\n    const taskRef = this.getTaskDoc(taskId);\n    const origListRef = this.getListDoc(origListId);\n    const newListRef = this.getListDoc(newListId);\n    batch.update(taskRef, {\n      listId: newListId,\n      lastUpdatedAt: this.getTimestamp()\n    });\n    batch.update(origListRef, {\n      taskIds: this.removeFromArray(taskId),\n      lastUpdatedAt: this.getTimestamp()\n    });\n    batch.update(newListRef, {\n      taskIds: updatedTaskIds,\n      lastUpdatedAt: this.getTimestamp()\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('task moved');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  moveTaskToFolder = ({\n    userId,\n    taskId,\n    origFolderId,\n    newFolderId,\n    updatedTaskIds\n  }) => {\n    const batch = this.db.batch();\n    const taskRef = this.getDocRef('tasks', taskId);\n    const origFolderRef = this.getDocRef(\n      'users',\n      userId,\n      'folders',\n      origFolderId\n    );\n    const newFolderRef = this.getDocRef(\n      'users',\n      userId,\n      'folders',\n      newFolderId\n    );\n    batch.update(taskRef, {\n      [`folders.${userId}`]: newFolderId,\n      lastUpdatedAt: this.getTimestamp()\n    });\n    batch.update(origFolderRef, {\n      taskIds: this.removeFromArray(taskId),\n      lastUpdatedAt: this.getTimestamp()\n    });\n    batch.update(newFolderRef, {\n      taskIds: updatedTaskIds,\n      lastUpdatedAt: this.getTimestamp()\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('Task moved to new folder');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  // Subtask API\n\n  getSubtaskDoc = subtaskId => this.db.collection('subtasks').doc(subtaskId);\n\n  addSubtask = ({\n    userId,\n    name,\n    memberIds = [],\n    projectId = null,\n    taskId = null,\n    dueDate = null\n  }) => {\n    this.db\n      .collection('subtasks')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastUpdatedAt: this.getTimestamp(),\n        isCompleted: false,\n        createdBy: userId,\n        assignedTo: [userId, ...memberIds],\n        completedAt: null,\n        dueDate,\n        projectId,\n        taskId,\n        name\n      })\n      .then(ref => {\n        if (taskId === null) return;\n        this.updateTask(taskId, {\n          subtaskIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  updateSubtask = (subtaskId, newValue = {}) => {\n    this.getSubtaskDoc(subtaskId).update({\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  deleteSubtask = (\n    { subtaskId, taskId = null },\n    batch = this.createBatch(),\n    shouldCommit = true\n  ) => {\n    const subtaskRef = this.getDocRef('subtasks', subtaskId);\n    batch.delete(subtaskRef);\n\n    if (taskId) {\n      const taskRef = this.getTaskDoc(taskId);\n      this.updateBatch(batch, taskRef, {\n        subtaskIds: this.removeFromArray(subtaskId)\n      });\n    }\n\n    if (shouldCommit) {\n      return batch\n        .commit()\n        .then(() => {\n          console.log('Subtask deleted.');\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    }\n  };\n\n  // Comment API\n  getCommentDoc = commentId => this.db.collection('comments').doc(commentId);\n\n  addComment = ({ userId, memberIds = [], projectId, taskId, content }) => {\n    this.db\n      .collection('comments')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastUpdatedAt: this.getTimestamp(),\n        isPinned: false,\n        from: userId,\n        to: memberIds,\n        likes: [],\n        projectId,\n        taskId,\n        content\n      })\n      .then(ref => {\n        this.updateTask(taskId, {\n          commentIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  updateComment = (commentId, newValue = {}) => {\n    this.getCommentDoc(commentId).update({\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n}\n\nexport default Firebase;\n","import React from 'react';\nimport './Input.scss';\n\nconst Input = ({\n  className = '',\n  name,\n  type,\n  value,\n  onFocus,\n  onChange,\n  onInput,\n  placeholder,\n  isRequired,\n  onBlur,\n  autoComplete,\n  inputRef,\n  hideLabel,\n  label,\n  labelClass,\n  onKeyDown,\n  maxLength,\n  minLength,\n  isReadOnly\n}) => {\n  return (\n    <>\n      {!hideLabel && (\n        <label htmlFor={name} className={`input__label ${labelClass}`}>\n          {label}\n        </label>\n      )}\n      <input\n        className={`input ${className}`}\n        id={name}\n        name={name}\n        type={type}\n        value={value}\n        onFocus={onFocus}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={isRequired}\n        onBlur={onBlur}\n        autoComplete={autoComplete}\n        ref={inputRef}\n        onInput={onInput}\n        onKeyDown={onKeyDown}\n        maxLength={maxLength}\n        minLength={minLength}\n        readOnly={isReadOnly}\n        tabIndex={isReadOnly ? -1 : 0}\n      />\n    </>\n  );\n};\n\nInput.defaultProps = {\n  className: ''\n};\n\nexport default Input;\n","import React from 'react';\nimport './Button.scss';\n\nconst Button = ({\n  children,\n  type = 'button',\n  onClick,\n  className = '',\n  color = 'neutral',\n  size = 'md',\n  variant = 'text',\n  disabled,\n  name,\n  iconOnly = false,\n  buttonRef,\n  ...props\n}) => (\n  // eslint-disable-next-line react/button-has-type\n  <button\n    className={`${className} ${color} ${variant} ${!iconOnly ? size : ''} ${\n      iconOnly ? `icon-only icon-only--${size}` : ''\n    }`}\n    type={type}\n    onClick={onClick}\n    disabled={disabled}\n    name={name}\n    ref={buttonRef}\n    {...props}\n  >\n    {children}\n  </button>\n);\n\nButton.defaultProps = {\n  type: 'button',\n  className: '',\n  color: 'neutral',\n  size: 'md',\n  variant: 'text',\n  iconOnly: false\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { withFirebase } from '../../components/Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../../components/Input';\nimport { Button } from '../../components/Button';\n\nconst INITIAL_STATE = {\n  username: '',\n  name: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { username, email, name, passwordOne } = this.state;\n    const { firebase, history } = this.props;\n    firebase\n      .createUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        const userId = authUser.user.uid;\n        const photoURL = authUser.user.photoURL || null;\n        return firebase.addUser({\n          userId,\n          name,\n          username,\n          email,\n          photoURL\n        });\n      })\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const {\n      username,\n      name,\n      email,\n      passwordOne,\n      passwordTwo,\n      error\n    } = this.state;\n    const isInvalid =\n      passwordOne === '' ||\n      passwordTwo === '' ||\n      email === '' ||\n      username === '' ||\n      passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"name\"\n          label=\"Full Name\"\n          value={name}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"username\"\n          label=\"Username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordOne\"\n          label=\"Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          label=\"Confirm Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Create Account\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignUpForm);\n","import React from 'react';\nimport './UserFormPage.scss';\n\nconst UserFormPage = ({ title, children }) => (\n  <main className=\"user-form__container\">\n    <h1 className=\"user-form__title\">{title}</h1>\n    {children}\n  </main>\n);\n\nexport default UserFormPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignUpForm from './SignUpForm';\nimport { UserFormPage } from '../../components/UserFormPage';\nimport * as ROUTES from '../../constants/routes';\nimport './SignUp.scss';\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account?\n    <Link className=\"link--outlined\" to={ROUTES.SIGN_UP}>\n      Sign Up\n    </Link>\n  </p>\n);\n\nconst SignUpPage = () => (\n  <UserFormPage title=\"Create an account\">\n    <SignUpForm />\n  </UserFormPage>\n);\n\nexport default SignUpPage;\nexport { SignUpLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../../components/Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../../components/Input';\nimport { Button } from '../../components/Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email, password } = this.state;\n    this.props.firebase\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  enableGoogleLogin = e => {\n    const { signInWithGoogle } = this.props.firebase;\n    signInWithGoogle();\n    e.preventDefault();\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n    const isInvalid = password === '' || email === '';\n    return (\n      <form className=\"user-form\">\n        {/*\n        <Button\n          type=\"click\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.enableGoogleLogin}\n        >\n          Continue with Google\n        </Button>\n        <Button\n          type=\"click\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.enableGithubLogin}\n        >\n          Continue with Github\n        </Button>\n      */}\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"password\"\n          label=\"Password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Log In\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignInForm);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../../components/Firebase';\nimport { Input } from '../../components/Input';\nimport { Button } from '../../components/Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null\n};\n\nclass PasswordForgetForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .passwordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, error } = this.state;\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Reset My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordForgetForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PasswordForgetForm from './PasswordForgetForm';\nimport { UserFormPage } from '../../components/UserFormPage';\nimport * as ROUTES from '../../constants/routes';\nimport './PasswordForget.scss';\n\nconst PasswordForgetLink = () => (\n  <p className=\"user-form__info\">\n    <Link to={ROUTES.PASSWORD_FORGET} className=\"link--sm\">\n      Forgot Password?\n    </Link>\n  </p>\n);\n\nconst PasswordForgetPage = () => (\n  <UserFormPage title=\"Forgot your password?\">\n    <PasswordForgetForm />\n  </UserFormPage>\n);\n\nexport default PasswordForgetPage;\nexport { PasswordForgetLink };\n","import React from 'react';\nimport SignInForm from './SignInForm';\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { UserFormPage } from '../../components/UserFormPage';\n\nconst SignInPage = () => (\n  <UserFormPage title=\"Log In\">\n    <SignInForm />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </UserFormPage>\n);\n\nexport default SignInPage;\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n","import { Firebase } from '../components/Firebase';\n\nconst firebase = new Firebase();\nexport default firebase;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const setCurrentUser = currentUser => {\n  return {\n    type: types.SET_CURRENT_USER,\n    currentUser\n  };\n};\n\nexport const fetchCurrentUserData = userId => {\n  return async dispatch => {\n    try {\n      const currentUser = await firebase\n        .getDocRef('users', userId)\n        .get()\n        .then(doc => doc.data());\n      dispatch(setCurrentUser(currentUser));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const loadFolders = folders => {\n  return {\n    type: types.LOAD_FOLDERS,\n    folders\n  };\n};\n\nexport const fetchFolders = userId => {\n  return async dispatch => {\n    try {\n      const folders = await firebase\n        .getDocRef('users', userId)\n        .collection('folders')\n        .get()\n        .then(snapshot => {\n          const foldersById = {};\n          snapshot.forEach(doc => {\n            foldersById[doc.id] = {\n              folderId: doc.id,\n              ...doc.data()\n            };\n          });\n          return foldersById;\n        });\n      dispatch(loadFolders(folders));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addFolder = ({ folderId, folderData }) => {\n  return {\n    type: types.ADD_FOLDER,\n    folderId,\n    folderData\n  };\n};\n\nexport const updateFolder = ({ folderId, folderData }) => {\n  return {\n    type: types.UPDATE_FOLDER,\n    folderId,\n    folderData\n  };\n};\n\nexport const deleteFolder = folderId => {\n  return {\n    type: types.DELETE_FOLDER,\n    folderId\n  };\n};\n\nexport const reorderFolders = (userId, folderIds) => {\n  return {\n    type: types.REORDER_FOLDERS,\n    userId,\n    folderIds\n  };\n};\n\nexport const loadTasksDueSoon = tasksDueSoon => {\n  return {\n    type: types.LOAD_TASKS_DUE_SOON,\n    tasksDueSoon\n  };\n};\n\nexport const fetchTasksDueWithinDays = (userId, days) => {\n  const startingDate = new Date();\n  const timeStart = new Date(startingDate.setHours(0, 0, 0, 0));\n  const endingDate = new Date(startingDate);\n  const timeEnd = new Date(endingDate.setDate(endingDate.getDate() + days));\n\n  return async dispatch => {\n    try {\n      const tasksDueSoon = await firebase.db\n        .collection('tasks')\n        .where('assignedTo', 'array-contains', userId)\n        .where('dueDate', '<=', timeEnd)\n        .orderBy('dueDate', 'asc')\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksDueSoon(tasksDueSoon));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addTaskDueSoon = ({ taskId, taskData }) => {\n  return {\n    type: types.ADD_TASK_DUE_SOON,\n    taskId,\n    taskData\n  };\n};\n\nexport const deleteTaskDueSoon = taskId => {\n  return {\n    type: types.DELETE_TASK_DUE_SOON,\n    taskId\n  };\n};\n\nexport const updateTaskDueSoon = ({ taskId, taskData }) => {\n  return {\n    type: types.UPDATE_TASK_DUE_SOON,\n    taskId,\n    taskData\n  };\n};\n\nexport const syncFolders = userId => {\n  return async (dispatch, getState) => {\n    try {\n      firebase\n        .getDocRef('users', userId)\n        .collection('folders')\n        .onSnapshot(async querySnapshot => {\n          querySnapshot.docChanges().forEach(async change => {\n            const [folderId, folderData, changeType] = await Promise.all([\n              change.doc.id,\n              change.doc.data(),\n              change.type\n            ]);\n            const { folders } = getState().currentUser;\n            if (!folders) return;\n            if (changeType === 'added') {\n              if (folderId in folders) return;\n              dispatch(addFolder({ folderId, folderData }));\n              console.log('folder added');\n            } else if (changeType === 'removed') {\n              dispatch(deleteFolder(folderId));\n            } else {\n              dispatch(updateFolder({ folderId, folderData }));\n              console.log(`Updated Folder: ${folderData.name}`);\n            }\n          });\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","export const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const LOAD_FOLDERS = 'LOAD_FOLDERS';\nexport const ADD_FOLDER = 'ADD_FOLDER';\nexport const DELETE_FOLDER = 'DELETE_FOLDER';\nexport const UPDATE_FOLDER = 'UPDATE_FOLDER';\nexport const REORDER_FOLDERS = 'REORDER_FOLDERS';\nexport const UPDATE_FOLDER_IDS = 'UPDATE_FOLDER_IDS';\nexport const LOAD_TASKS_DUE_SOON = 'LOAD_TASKS_DUE_SOON';\nexport const ADD_TASK_DUE_SOON = 'ADD_TASK_DUE_SOON';\nexport const DELETE_TASK_DUE_SOON = 'DELETE_TASK_DUE_SOON';\nexport const UPDATE_TASK_DUE_SOON = 'UPDATE_TASK_DUE_SOON';\n","export const getCurrentUser = state => {\n  return state.currentUser;\n};\n\nexport const getCurrentUserId = state => {\n  const { currentUser } = state;\n  if (!currentUser) return null;\n  return currentUser.userId;\n};\n\nexport const getFolders = state => {\n  const { currentUser } = state;\n  if (!currentUser) return null;\n  return currentUser.folders;\n};\n\nexport const getFolderIds = state => {\n  const { currentUser } = state;\n  if (!currentUser) return [];\n  return currentUser.folderIds;\n};\n\nexport const getFoldersArray = state => {\n  const { currentUser } = state;\n  if (!currentUser) return [];\n  const { folders } = currentUser;\n  if (!folders) return [];\n  return Object.keys(folders).map(folderId => {\n    return {\n      ...folders[folderId],\n      isDefault:\n        folderId === '0' ||\n        folderId === '1' ||\n        folderId === '2' ||\n        folderId === '3'\n    };\n  });\n};\n\nexport const getFolder = (state, folderId) => {\n  const { currentUser } = state;\n  if (!currentUser) return null;\n  return currentUser.folders[folderId];\n};\n\nexport const getTasksDueSoonById = state => {\n  const { currentUser } = state;\n  if (!currentUser) return {};\n  return currentUser.tasksDueSoon;\n};\n\nexport const getTasksDueSoonArr = state => {\n  const { tasksDueSoon } = state.currentUser;\n  if (!tasksDueSoon) return [];\n  return Object.keys(tasksDueSoon).map(taskId => tasksDueSoon[taskId]);\n};\n\nexport const getMergedTags = state => {\n  const {\n    selectedProject: projectId,\n    projectsById,\n    usersById,\n    currentUser\n  } = state;\n  const { userId } = currentUser;\n  if (!projectId) return [];\n  const { tags: projectTags } = projectsById[projectId];\n  const { tags: userTags } = usersById[userId];\n  const mergedTags = { ...userTags, ...projectTags };\n  return Object.keys(mergedTags).map(tag => mergedTags[tag]);\n};\n","import * as types from './types';\n\nconst currentUser = (state = null, action) => {\n  switch (action.type) {\n    case types.SET_CURRENT_USER: {\n      const { currentUser } = action;\n      return currentUser;\n    }\n    case types.LOAD_FOLDERS: {\n      const { folders } = action;\n      return {\n        ...state,\n        folders\n      };\n    }\n    case types.ADD_FOLDER: {\n      const { folderId, folderData } = action;\n      return {\n        ...state,\n        folders: {\n          ...state.folders,\n          [folderId]: {\n            folderId,\n            ...folderData\n          }\n        }\n      };\n    }\n    case types.DELETE_FOLDER: {\n      const { folderId } = action;\n      const { [folderId]: deletedFolder, ...restOfFolders } = state.folders;\n      return {\n        ...state,\n        folders: restOfFolders\n      };\n    }\n    case types.UPDATE_FOLDER: {\n      const { folderId, folderData } = action;\n      return {\n        ...state,\n        folders: {\n          ...state.folders,\n          [folderId]: {\n            ...state.folders[folderId],\n            ...folderData\n          }\n        }\n      };\n    }\n    case types.UPDATE_FOLDER_IDS:\n    case types.REORDER_FOLDERS: {\n      const { folderIds } = action;\n      return {\n        ...state,\n        folderIds\n      };\n    }\n    case types.LOAD_TASKS_DUE_SOON: {\n      const { tasksDueSoon } = action;\n      return {\n        ...state,\n        tasksDueSoon\n      };\n    }\n    case types.ADD_TASK_DUE_SOON: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        tasksDueSoon: {\n          ...state.tasksDueSoon,\n          [taskId]: {\n            taskId,\n            ...taskData\n          }\n        }\n      };\n    }\n    case types.DELETE_TASK_DUE_SOON: {\n      const { taskId } = action;\n      const { [taskId]: deletedTask, ...restOfTasks } = state.tasksDueSoon;\n      return {\n        ...state,\n        tasksDueSoon: restOfTasks\n      };\n    }\n    case types.UPDATE_TASK_DUE_SOON: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        tasksDueSoon: {\n          ...state.tasksDueSoon,\n          [taskId]: {\n            ...state[taskId],\n            ...taskData\n          }\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default currentUser;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { currentUserActions } from '../../ducks/currentUser';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        authUser: null\n      };\n    }\n\n    componentDidMount() {\n      const {\n        firebase,\n        history,\n        fetchCurrentUserData,\n        setCurrentUser\n      } = this.props;\n\n      this.listener = firebase.auth.onAuthStateChanged(authUser => {\n        if (authUser) {\n          fetchCurrentUserData(authUser.uid);\n          this.setState({ authUser });\n          history.push(`/0/home/${authUser.uid}`);\n        } else {\n          history.push(ROUTES.SIGN_IN);\n          setCurrentUser(null);\n          this.setState({ authUser: null });\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  const mapDispatchToProps = dispatch => ({\n    fetchCurrentUserData: userId =>\n      dispatch(currentUserActions.fetchCurrentUserData(userId)),\n    setCurrentUser: currentUser =>\n      dispatch(currentUserActions.setCurrentUser(currentUser))\n  });\n\n  return compose(\n    withRouter,\n    withFirebase,\n    connect(\n      null,\n      mapDispatchToProps\n    )\n  )(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport AuthUserContext from './context';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n\n    componentDidMount() {\n      const { firebase, history } = this.props;\n      this.listener = firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          history.push(ROUTES.SIGN_IN);\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? (\n              <Component userId={authUser.uid} {...this.props} />\n            ) : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n  return compose(\n    withRouter,\n    withFirebase\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadUserData = user => {\n  return {\n    type: types.LOAD_USER_DATA,\n    user\n  };\n};\n\nexport const loadUsersById = usersById => {\n  return {\n    type: types.LOAD_USERS_BY_ID,\n    usersById\n  };\n};\n\nexport const fetchUsersById = () => {\n  return async dispatch => {\n    try {\n      const usersById = await firebase.db\n        .collection('users')\n        .get()\n        .then(snapshot => {\n          const users = {};\n          snapshot.forEach(doc => {\n            users[doc.id] = {\n              userId: doc.id,\n              ...doc.data()\n            };\n          });\n          return users;\n        });\n      dispatch(loadUsersById(usersById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserData = userId => {\n  return async dispatch => {\n    try {\n      const user = await firebase\n        .getUserDoc(userId)\n        .get()\n        .then(doc => doc.data());\n      dispatch(loadUserData(user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addUser = ({ userId, userData }) => {\n  return {\n    type: types.ADD_USER,\n    userId,\n    userData\n  };\n};\n\nexport const deleteUser = userId => {\n  return {\n    type: types.DELETE_USER,\n    userId\n  };\n};\n\nexport const updateUser = ({ userId, userData }) => {\n  return {\n    type: types.UPDATE_USER,\n    userId,\n    userData\n  };\n};\n","export const LOAD_USER_DATA = 'LOAD_USER_DATA';\nexport const LOAD_USERS_BY_ID = 'LOAD_USERS_BY_ID';\nexport const ADD_USER = 'ADD_USER';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const DELETE_USER = 'DELETE_USER';\nexport const LOAD_USER_TASKS = 'LOAD_USER_TASKS';\nexport const ADD_TASK = 'ADD_TASK';\nexport const REORDER_FOLDERS = 'REORDER_FOLDERS';\n","export const getUsersById = state => {\n  return state.usersById;\n};\n\nexport const getUserData = (state, userId) => {\n  return state.usersById[userId];\n};\n\nexport const getUserTaskIds = (state, userId) => {\n  const { taskIds } = state.usersById[userId];\n  if (!taskIds) return [];\n  return taskIds;\n};\n\n// returns array of all users\nexport const getUsersArray = state => {\n  const { usersById } = state;\n  return Object.keys(usersById).map(userId => {\n    return {\n      userId,\n      ...usersById[userId]\n    };\n  });\n};\n\n// returns subset of users\nexport const getMembersArray = (state, memberIds) => {\n  const { usersById } = state;\n  if (!memberIds) return [];\n  return memberIds.map(memberId => usersById[memberId]);\n};\n","import * as types from './types';\n\nconst usersById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_USERS_BY_ID: {\n      const { usersById } = action;\n      return {\n        ...state,\n        ...usersById\n      };\n    }\n    case types.LOAD_USER_DATA: {\n      const { user } = action;\n      return {\n        ...state,\n        ...user\n      };\n    }\n    case types.LOAD_USER_TASKS: {\n      const { userId, tasksById } = action;\n      return {\n        ...state,\n        [userId]: {\n          ...state[userId],\n          tasksById\n        }\n      };\n    }\n    case types.ADD_USER: {\n      const { userId, userData } = action;\n      return {\n        ...state,\n        [userId]: {\n          userId,\n          ...userData\n        }\n      };\n    }\n    case types.DELETE_USER: {\n      const { userId } = action;\n      const { [userId]: deletedUser, ...restOfUsers } = state;\n      return restOfUsers;\n    }\n    case types.UPDATE_USER: {\n      const { userId, userData } = action;\n      return {\n        ...state,\n        [userId]: {\n          ...state[userId],\n          ...userData\n        }\n      };\n    }\n    case types.REORDER_FOLDERS: {\n      const { userId, folderIds } = action;\n      return {\n        ...state,\n        [userId]: {\n          ...state[userId],\n          folderIds\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default usersById;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ProjectTile = ({ projectId, projectName, onClick }) => {\n  return (\n    <li className=\"project-grid__tile\">\n      <Link\n        className=\"project-grid__link\"\n        to={`/0/project/${projectId}`}\n        onClick={onClick}\n      >\n        <span className=\"project-grid__title\">{projectName}</span>\n      </Link>\n    </li>\n  );\n};\n\nconst ProjectGrid = ({ children }) => <ul className=\"project-grid\">{children}</ul>;\n\nexport { ProjectTile, ProjectGrid };\n","\n/**\n * Checks if two arrays or objects are equal\n * @param {Array|Object} value\n * @param {Array|Object} other\n */\n\n// eslint-disable-next-line import/prefer-default-export\nexport const isEqual = (value, other) => {\n  const type = Object.prototype.toString.call(value);\n\n  // If both objects are not the same type, return false\n  if (type !== Object.prototype.toString.call(other)) return false;\n\n  const typeObj = '[object Object]';\n  const typeArr = '[object Array]';\n  // If items are neither objects nor arrays, return false\n  if (type !== typeObj && type !== typeArr) return false;\n\n  // Compare length of two items\n  const valueLen = type === typeArr ? value.length : Object.keys(value).length;\n  const otherLen = type === typeArr ? other.length : Object.keys(other).length;\n  if (valueLen !== otherLen) return false;\n\n  const compare = (item1, item2) => {\n    const typeFunc = '[object Function]';\n    const itemType = Object.prototype.toString.call(item1);\n    if (itemType !== Object.prototype.toString.call(item2)) return false;\n    if (itemType === typeObj || itemType === typeArr) {\n      return isEqual(item1, item2);\n    }\n    if (itemType === typeFunc) {\n      return item1.toString() === item2.toString();\n    }\n    return item1 === item2;\n  };\n\n  if (type === typeArr) {\n    for (let i = 0; i < valueLen; i++) {\n      if (!compare(value[i], other[i])) return false;\n    }\n  } else {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (compare(value[key], other[key]) === false) return false;\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * Delays callback execution until next browser repaint\n * Best used for `scroll` and `resize` window events\n * @param {Function} callback - The function to debounce\n */\n\nexport const windowDebouncer = callback => {\n  let request;\n\n  return (...args) => {\n    const context = this;\n\n    if (request) {\n      window.cancelAnimationFrame(request);\n    }\n\n    request = window.requestAnimationFrame(() => {\n      callback.apply(context, args);\n    });\n  };\n};\n\n\n/**\n * Returns a function that executes the first callback on its initial call\n * then the second callback on subsequent calls\n * @param {Function} first - The function executed only on its initial call\n * @param {Function} after - The function executed on subsequent calls\n */\nexport const firstThen = (first, after) => {\n  let count = 0;\n  return (...args) => {\n    count++;\n    if (count === 1) {\n      return first.apply(this, args);\n    } else {\n      return after.apply(this, args);\n    }\n  }\n};\n\nexport const count = (fn, invokeBeforeExecution) => {\n  let count = 0;\n  return (args) => {\n    count++;\n    if (count <= invokeBeforeExecution) {\n      return true;\n    } else {\n      return fn(args, count);\n    }\n  };\n}","import * as types from './types';\nimport firebase from '../../store/firebase';\nimport { utils } from '../../utils';\n\nexport const loadTasksById = tasksById => {\n  return {\n    type: types.LOAD_TASKS_BY_ID,\n    tasksById\n  };\n};\n\nexport const loadUserTasks = (userId, tasksById) => {\n  return {\n    type: types.LOAD_USER_TASKS,\n    userId,\n    tasksById\n  };\n};\n\nexport const addTask = ({ taskId, taskData }) => {\n  return {\n    type: types.ADD_TASK,\n    taskId,\n    taskData\n  };\n};\n\nexport const removeTask = ({ taskId, listId }) => {\n  console.log(taskId, ' removed');\n  return {\n    type: types.REMOVE_TASK,\n    taskId,\n    listId\n  };\n};\n\nexport const updateTask = ({ taskId, taskData }) => {\n  return {\n    type: types.UPDATE_TASK,\n    taskId,\n    taskData\n  };\n};\n\nexport const updateTasksById = task => {\n  return {\n    type: types.UPDATE_TASKS_BY_ID,\n    task\n  };\n};\n\nexport const addTag = (taskId, tag) => {\n  return {\n    type: types.ADD_TAG,\n    taskId,\n    tag\n  };\n};\n\n// Thunks\n\nexport const deleteTask = ({ taskId, listId = null }) => {\n  return async (dispatch, getStore) => {\n    try {\n      const {\n        folders,\n        subtaskIds,\n        commentIds,\n        assignedTo\n      } = getStore().tasksById[taskId];\n      await firebase.deleteTask({\n        taskId,\n        listId,\n        assignedTo,\n        folders,\n        subtaskIds,\n        commentIds\n      });\n      dispatch(removeTask({ taskId, listId }));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n\nexport const fetchProjectTasks = projectId => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .where('projectId', '==', projectId)\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst handleInitialPayload = async snapshot => {\n  const tasks = await snapshot.docChanges().map(change => {\n    tasks[change.doc.id] = {\n      taskId: change.doc.id,\n      ...change.doc.data()\n    };\n  });\n  console.log(tasks);\n  return tasks;\n};\n\nconst syncTasks = snapshot => {\n  snapshot.docChanges().forEach(change => {\n    const taskId = change.doc.id;\n    const taskData = change.doc.data();\n    if (change.type === 'added') {\n      console.log('added task');\n      return dispatch => {\n        dispatch(addTask({ taskId, taskData }));\n      };\n    }\n    if (change.type === 'removed') {\n      return dispatch => {\n        dispatch(deleteTask(taskId));\n      };\n    } \n      return dispatch => {\n        dispatch(updateTask({ taskId, taskData }));\n      };\n    \n  });\n};\n\nlet count = 0;\nconst handleTaskSubscription = snapshot => {\n  count++;\n  const initialLoad = count === 1;\n  const tasks = {};\n  if (initialLoad) {\n    console.log('is initial load');\n\n    snapshot.docChanges().forEach(change => {\n      tasks[change.doc.id] = {\n        taskId: change.doc.id,\n        ...change.doc.data()\n      };\n    });\n    console.log(tasks);\n    return tasks;\n  }\n  snapshot.docChanges().forEach(change => {\n    const taskId = change.doc.id;\n    const taskData = change.doc.data();\n    if (change.type === 'added') {\n      console.log('added task');\n      return dispatch => {\n        dispatch(addTask({ taskId, taskData }));\n      };\n    } if (change.type === 'removed') {\n      return dispatch => {\n        dispatch(deleteTask(taskId));\n      };\n    } else {\n      return dispatch => {\n        dispatch(updateTask({ taskId, taskData }));\n      };\n    }\n  });\n};\n\n/* const handleTaskSubscription = utils.firstThen(handleInitialPayload, syncTasks); */\n\nexport const fetchUserTasks = userId => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .where('assignedTo', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\n/*\n\nexport const syncUserTasks = userId => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .where('assignedTo', 'array-contains', userId)\n        .onSnapshot(handleTaskSubscription);\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n*/\n\nexport const syncUserTasks = userId => {\n  return async (dispatch, getState) => {\n    try {\n      firebase\n        .queryCollection('tasks', ['assignedTo', 'array-contains', userId])\n        .onSnapshot(async querySnapshot => {\n          querySnapshot.docChanges().forEach(async change => {\n            const [taskId, taskData, changeType] = await Promise.all([\n              change.doc.id,\n              change.doc.data(),\n              change.type\n            ]);\n            if (changeType === 'added') {\n              if (taskId in getState().tasksById) return;\n              dispatch(addTask({ taskId, taskData }));\n              console.log('task added');\n            } else if (changeType === 'removed') {\n              const { listId } = taskData;\n              dispatch(removeTask({ taskId, listId }));\n            } else {\n              dispatch(updateTask({ taskId, taskData }));\n              console.log(`Updated Task: ${taskData.name}`);\n            }\n          });\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const syncProjectTasks = projectId => {\n  return async (dispatch, getState) => {\n    try {\n      firebase\n        .queryCollection('tasks', ['projectId', '==', projectId])\n        .onSnapshot(async querySnapshot => {\n          querySnapshot.docChanges().forEach(async change => {\n            const [taskId, taskData, changeType] = await Promise.all([\n              change.doc.id,\n              change.doc.data(),\n              change.type\n            ]);\n\n            const { tasksById } = getState();\n            if (!tasksById) return;\n            if (changeType === 'added') {\n              if (taskId in tasksById) return;\n              dispatch(addTask({ taskId, taskData }));\n              console.log('task added');\n            } else if (changeType === 'removed') {\n              if (taskId in tasksById === false) return;\n              const { listId } = taskData;\n              dispatch(removeTask({ taskId, listId }));\n            } else {\n              dispatch(updateTask({ taskId, taskData }));\n              console.log(`Updated Task: ${taskData.name}`);\n            }\n          });\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","export const ADD_TASK = 'ADD_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\nexport const UPDATE_TASK = 'UPDATE_TASK';\nexport const SET_TASK_DUE_DATE = 'SET_TASK_DUE_DATE';\nexport const ADD_TASK_SUBTASK = 'ADD_TASK_SUBTASK';\nexport const REMOVE_TASK_SUBTASK = 'REMOVE_TASK_SUBTASK';\nexport const CHANGE_TASK_DESCRIPTION = 'CHANGE_TASK_DESCRIPTION';\nexport const SET_TASK_COLOR = 'SET_TASK_COLOR';\nexport const MOVE_TASK = 'MOVE_TASK';\nexport const LOAD_TASKS_BY_ID = 'LOAD_TASKS_BY_ID';\nexport const UPDATE_TASKS_BY_ID = 'UPDATE_TASKS_BY_ID';\nexport const ADD_TAG = 'ADD_TAG';\nexport const LOAD_USER_TASKS = 'LOAD_USER_TASKS';\nexport const REMOVE_TASK = 'REMOVE_TASK';\n","import * as types from './types';\nimport firebase from '../../store/firebase';\nimport { removeTask } from '../tasks/actions';\n\nexport const loadListsById = listsById => {\n  return {\n    type: types.LOAD_LISTS_BY_ID,\n    listsById\n  };\n};\n\nexport const updateList = ({ listId, listData }) => {\n  return {\n    type: types.UPDATE_LIST,\n    listId,\n    listData\n  };\n};\n\nexport const addList = ({ listId, listData }) => {\n  console.log(listId, listData);\n  return {\n    type: types.ADD_LIST,\n    listId,\n    listData\n  };\n};\n\nexport const removeList = ({ listId, projectId }) => {\n  return {\n    type: types.REMOVE_LIST,\n    listId,\n    projectId\n  };\n};\n\n// Thunks\n\nexport const deleteList = ({ listId, projectId }) => {\n  return async (dispatch, getStore) => {\n    try {\n      const batch = firebase.createBatch();\n      const listRef = firebase.getDocRef('lists', listId);\n      const projectRef = firebase.getDocRef('projects', projectId);\n      const { taskIds } = getStore().listsById[listId];\n      const { tasksById } = getStore();\n      // Delete list\n      batch.delete(listRef);\n\n      // Remove list id from project\n      firebase.updateBatch(batch, projectRef, {\n        listIds: firebase.removeFromArray(listId)\n      });\n\n      return batch\n        .commit()\n        .then(() => {\n          dispatch(removeList({ listId, projectId }));\n          if (taskIds.length > 0) {\n            taskIds.forEach(async taskId => {\n              const { assignedTo, folders, subtaskIds, commentIds } = tasksById[\n                taskId\n              ];\n              await firebase.deleteTask({\n                taskId,\n                assignedTo,\n                folders,\n                subtaskIds,\n                commentIds\n              });\n              dispatch(removeTask({ taskId, listId: null }));\n            });\n          }\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n\nexport const fetchListsById = projectId => {\n  return async dispatch => {\n    try {\n      const listsById = await firebase.db\n        .collection('lists')\n        .where('projectId', '==', projectId)\n        .get()\n        .then(snapshot => {\n          const lists = {};\n          snapshot.forEach(doc => {\n            lists[doc.id] = {\n              listId: doc.id,\n              ...doc.data()\n            };\n          });\n          return lists;\n        });\n      dispatch(loadListsById(listsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserLists = userId => {\n  return async dispatch => {\n    try {\n      const listsById = await firebase.db\n        .collection('lists')\n        .where('userId', '==', userId)\n        .get()\n        .then(snapshot => {\n          const lists = {};\n          snapshot.forEach(doc => {\n            lists[doc.id] = {\n              listId: doc.id,\n              ...doc.data()\n            };\n          });\n          return lists;\n        });\n      dispatch(loadListsById(listsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const syncProjectLists = projectId => {\n  return async (dispatch, getState) => {\n    try {\n      firebase.db\n        .collection('lists')\n        .where('projectId', '==', projectId)\n        .onSnapshot(async querySnapshot => {\n          querySnapshot.docChanges().forEach(async change => {\n            const [listId, listData, changeType] = await Promise.all([\n              change.doc.id,\n              change.doc.data(),\n              change.type\n            ]);\n            if (changeType === 'added') {\n              if (listId in getState().listsById) return;\n              dispatch(addList({ listId, listData }));\n              console.log('list added');\n            } else if (changeType === 'removed') {\n              dispatch(deleteList({ listId, projectId }));\n            } else {\n              dispatch(updateList({ listId, listData }));\n              console.log(`Updated List: ${listData.name}`);\n            }\n          });\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const createList = ({ projectId, name }) => {\n  return async dispatch => {\n    try {\n      firebase.addList({ projectId, name });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","export const LOAD_LISTS_BY_ID = 'LOAD_LISTS_BY_ID';\nexport const FETCH_LISTS_BY_ID = 'FETCH_LISTS_BY_ID';\nexport const DELETE_CARD = 'DELETE_CARD';\nexport const UPDATE_LIST = 'UPDATE_LIST';\nexport const ADD_LIST = 'ADD_LIST';\nexport const DELETE_LIST = 'DELETE_LIST';\nexport const REMOVE_LIST = 'REMOVE_LIST';\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadSubtasksById = subtasksById => {\n  return {\n    type: types.LOAD_SUBTASKS_BY_ID,\n    subtasksById\n  };\n};\n\nexport const fetchSubtasksById = () => {\n  return async dispatch => {\n    try {\n      const subtasksById = await firebase.db\n        .collection('subtasks')\n        .get()\n        .then(snapshot => {\n          const subtasks = {};\n          snapshot.forEach(doc => {\n            subtasks[doc.id] = {\n              subtaskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return subtasks;\n        });\n      dispatch(loadSubtasksById(subtasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateSubtasksById = subtask => {\n  return {\n    type: types.UPDATE_SUBTASKS_BY_ID,\n    subtask\n  };\n};\n\nexport const fetchProjectSubtasks = projectId => {\n  return async dispatch => {\n    try {\n      const subtasksById = await firebase.db\n        .collection('subtasks')\n        .where('projectId', '==', projectId)\n        .get()\n        .then(snapshot => {\n          const subtasks = {};\n          snapshot.forEach(doc => {\n            subtasks[doc.id] = {\n              subtaskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return subtasks;\n        });\n      dispatch(loadSubtasksById(subtasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchTaskSubtasks = taskId => {\n  return async dispatch => {\n    try {\n      const subtasksById = await firebase.db\n        .collection('subtasks')\n        .where('taskId', '==', taskId)\n        .get()\n        .then(snapshot => {\n          const subtasks = {};\n          snapshot.forEach(doc => {\n            subtasks[doc.id] = {\n              subtaskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return subtasks;\n        });\n      dispatch(loadSubtasksById(subtasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserSubtasks = userId => {\n  return async dispatch => {\n    try {\n      const subtasksById = await firebase.db\n        .collection('subtasks')\n        .where('assignedTo', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const subtasks = {};\n          snapshot.forEach(doc => {\n            subtasks[doc.id] = {\n              subtaskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return subtasks;\n        });\n      dispatch(loadSubtasksById(subtasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addSubtask = ({ subtaskId, subtaskData }) => {\n  return {\n    type: types.ADD_SUBTASK,\n    subtaskId,\n    subtaskData\n  };\n};\n\nexport const deleteSubtask = subtaskId => {\n  return {\n    type: types.DELETE_SUBTASK,\n    subtaskId\n  };\n};\n\nexport const updateSubtask = ({ subtaskId, subtaskData }) => {\n  return {\n    type: types.UPDATE_SUBTASK,\n    subtaskId,\n    subtaskData\n  };\n};\n","export const LOAD_SUBTASKS_BY_ID = 'LOAD_SUBTASKS_BY_ID';\nexport const FETCH_SUBTASKS_BY_ID = 'FETCH_SUBTASKS_BY_ID';\nexport const UPDATE_SUBTASKS_BY_ID = 'UPDATE_SUBTASKS_BY_ID';\nexport const ADD_SUBTASK = 'ADD_SUBTASK';\nexport const UPDATE_SUBTASK = 'UPDATE_SUBTASK';\nexport const DELETE_SUBTASK = 'DELETE_SUBTASK';\n","import * as types from './types';\nimport firebase from '../../store/firebase';\nimport { loadListsById } from '../lists/actions';\nimport { loadTasksById } from '../tasks/actions';\nimport { loadSubtasksById } from '../subtasks/actions';\n\nexport const loadProjectsById = projectsById => {\n  return {\n    type: types.LOAD_PROJECTS_BY_ID,\n    projectsById\n  };\n};\n\nexport const loadProject = (projectId, projectData) => {\n  return {\n    type: types.LOAD_PROJECT,\n    projectId,\n    projectData\n  };\n};\n\nexport const fetchProjectsById = userId => {\n  return async dispatch => {\n    try {\n      const projectsById = await firebase.db\n        .collection('projects')\n        .where('memberIds', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const projects = {};\n          snapshot.forEach(doc => {\n            projects[doc.id] = {\n              projectId: doc.id,\n              ...doc.data()\n            };\n          });\n          return projects;\n        });\n      dispatch(loadProjectsById(projectsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchProjectLists = async projectId => {\n  try {\n    const projectLists = await firebase.db\n      .collection('lists')\n      .where('projectId', '==', projectId)\n      .get()\n      .then(snapshot => {\n        const lists = {};\n        snapshot.forEach(doc => {\n          lists[doc.id] = {\n            listId: doc.id,\n            ...doc.data()\n          };\n        });\n        return lists;\n      });\n    return projectLists;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchProjectTasks = async projectId => {\n  try {\n    const projectTasks = await firebase.db\n      .collection('tasks')\n      .where('projectId', '==', projectId)\n      .get()\n      .then(snapshot => {\n        const tasks = {};\n        snapshot.forEach(doc => {\n          tasks[doc.id] = {\n            taskId: doc.id,\n            ...doc.data()\n          };\n        });\n        return tasks;\n      });\n    return projectTasks;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchProjectSubtasks = async projectId => {\n  try {\n    const projectSubtasks = await firebase.db\n      .collection('subtasks')\n      .where('projectId', '==', projectId)\n      .get()\n      .then(snapshot => {\n        const subtasks = {};\n        snapshot.forEach(doc => {\n          subtasks[doc.id] = {\n            subtaskId: doc.id,\n            ...doc.data()\n          };\n        });\n        return subtasks;\n      });\n    return projectSubtasks;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchProjectContent = projectId => {\n  return async dispatch => {\n    try {\n      const subtasks = fetchProjectSubtasks(projectId);\n      const tasks = fetchProjectTasks(projectId);\n      const lists = fetchProjectLists(projectId);\n      const project = await Promise.all([subtasks, tasks, lists]);\n      dispatch(loadSubtasksById(project[0]));\n      dispatch(loadTasksById(project[1]));\n      dispatch(loadListsById(project[2]));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateProject = (projectId, projectData) => {\n  return {\n    type: types.UPDATE_PROJECT,\n    projectId,\n    projectData\n  };\n};\n\nexport const reorderLists = (projectId, listIds) => {\n  return {\n    type: types.REORDER_LISTS,\n    projectId,\n    listIds\n  };\n};\n\nexport const updateProjectTags = (projectId, tags) => {\n  return {\n    type: types.UPDATE_PROJECT_TAGS,\n    projectId,\n    tags\n  };\n};\n","export const LOAD_PROJECTS_BY_ID = 'LOAD_PROJECTS_BY_ID';\nexport const LOAD_PROJECT = 'LOAD_PROJECT';\nexport const UPDATE_PROJECT = 'UPDATE_PROJECT';\nexport const REORDER_LISTS = 'REORDER_LISTS';\nexport const UPDATE_PROJECT_TAGS = 'UPDATE_PROJECT_TAGS';\nexport const ADD_TAG = 'ADD_TAG';","export const getProjectsById = state => {\n  return state.projectsById;\n};\n\nexport const getProjectsArray = state => {\n  const { projectsById } = state;\n  return Object.keys(projectsById).map(projectId => projectsById[projectId]);\n};\n\nexport const getProject = (state, projectId) => {\n  const { projectsById } = state;\n  return projectsById[projectId];\n};\n\nexport const getProjectTags = (state, projectId) => {\n  if (!projectId) return {};\n  const { projectsById } = state;\n  return projectsById[projectId].tags;\n};\n\nexport const getProjectName = (state, projectId) => {\n  if (!projectId) return '';\n  const { projectsById } = state;\n  return projectsById[projectId].name;\n};\n\nexport const getProjectColor = (state, projectId) => {\n  if (!projectId) return '';\n  const { projectsById } = state;\n  return projectsById[projectId].color;\n};\n","import * as types from './types';\nimport { ADD_LIST, REMOVE_LIST } from '../lists/types';\n\nconst projectsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_PROJECTS_BY_ID: {\n      const { projectsById } = action;\n      return {\n        ...state,\n        ...projectsById\n      };\n    }\n    case types.LOAD_PROJECT: {\n      const { projectId, projectData } = action;\n      return {\n        ...state,\n        [projectId]: {\n          projectId,\n          ...projectData\n        }\n      };\n    }\n    case types.UPDATE_PROJECT: {\n      const { projectId, projectData } = action;\n      return {\n        ...state,\n        [projectId]: {\n          ...state[projectId],\n          ...projectData\n        }\n      };\n    }\n    case types.REORDER_LISTS: {\n      const { projectId, listIds } = action;\n      return {\n        ...state,\n        [projectId]: {\n          ...state[projectId],\n          listIds\n        }\n      };\n    }\n    case ADD_LIST: {\n      const { listId, listData } = action;\n      const { projectId } = listData;\n      return {\n        ...state,\n        [projectId]: {\n          ...state[projectId],\n          listIds: [...state[projectId].listIds, listId]\n        }\n      };\n    }\n    case REMOVE_LIST: {\n      const { listId, projectId } = action;\n      return {\n        ...state,\n        [projectId]: {\n          ...state[projectId],\n          listIds: state[projectId].listIds.filter(id => id !== listId)\n        }\n      };\n    }\n    case types.UPDATE_PROJECT_TAGS: {\n      const { projectId, tags } = action;\n      return {\n        ...state,\n        [projectId]: {\n          ...state[projectId],\n          tags: {\n            ...tags\n          }\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default projectsById;\n","export const SELECT_PROJECT = 'SELECT_PROJECT';\n\nexport const selectProject = projectId => {\n  return {\n    type: SELECT_PROJECT,\n    projectId\n  };\n};\n\nconst INITIAL_STATE = null;\n\nexport const selectedProject = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SELECT_PROJECT:\n      return action.projectId;\n    default:\n      return state;\n  }\n};\n\nexport const getSelectedProjectId = state => state.selectedProject;\n\nexport const getSelectedProject = state => {\n  const { selectedProject: projectId, projectsById } = state;\n  return projectsById[projectId];\n};\n","import React from 'react';\nimport featherIcons from '../../assets/feather/feather-sprite.svg';\n\nconst Icon = ({ name, className, width, height }) => (\n  <svg\n    className={`feather feather-${name} ${className}`}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    viewBox=\"0 0 24 24\"\n    width={width}\n    height={height}\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <use xlinkHref={`${featherIcons}#${name}`} />\n  </svg>\n);\n\nIcon.defaultProps = {\n  className: '',\n  width: 24,\n  height: 24\n};\n\nexport default Icon;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ProjectGrid, ProjectTile } from './ProjectGrid';\nimport './ProjectGrid.scss';\nimport { withAuthorization } from '../Session';\nimport { projectActions, projectSelectors } from '../../ducks/projects';\nimport { selectProject as selectProjectAction } from '../../ducks/selectedProject';\nimport { Icon } from '../Icon';\n\nclass ProjectGridContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const { userId, firebase, updateProject } = this.props;\n    this.projectObserver = firebase.db\n      .collection('projects')\n      .where('memberIds', 'array-contains', userId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const projectId = change.doc.id;\n          const projectData = change.doc.data();\n          updateProject(projectId, projectData);\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.projectObserver();\n  }\n\n  render() {\n    const { projectsArray, selectProject } = this.props;\n    const projectTiles = projectsArray.map(project => {\n      const { name: projectName, projectId } = project;\n      return (\n        <ProjectTile\n          key={projectId}\n          projectName={projectName}\n          projectId={projectId}\n          onClick={() => selectProject(projectId)}\n        />\n      );\n    });\n    return (\n      <ProjectGrid>\n        {projectTiles}\n        <button\n          type=\"button\"\n          className=\"project-grid__tile project-grid__btn--add\"\n          onClick={this.props.openProjectComposer}\n        >\n          <Icon name=\"plus-circle\" />\n          Create project\n        </button>\n      </ProjectGrid>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    projectsById: projectSelectors.getProjectsById(state),\n    projectsArray: projectSelectors.getProjectsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchProjectsById: userId =>\n      dispatch(projectActions.fetchProjectsById(userId)),\n    updateProject: (projectId, projectData) =>\n      dispatch(projectActions.updateProject(projectId, projectData)),\n    selectProject: projectId => dispatch(selectProjectAction(projectId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ProjectGridContainer)\n);\n","import React, { Component, createRef } from 'react';\n\nconst withOutsideClick = WrappedComponent => {\n  class WithOutsideClick extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        isTouchEnabled: false\n      };\n      this.componentInstance = createRef();\n    }\n\n    componentDidMount() {\n      document.addEventListener('touchstart', this.handleTouch);\n      document.addEventListener('click', this.handleOutsideClick, false);\n    }\n\n    componentWillUnmount() {\n      const { isTouchEnabled } = this.state;\n      if (isTouchEnabled) {\n        document.removeEventListener('touchstart', this.handleOutsideClick);\n      } else {\n        document.removeEventListener('click', this.handleOutsideClick);\n        document.removeEventListener('touchstart', this.handleTouch);\n      }\n    }\n\n    handleTouch = () => {\n      this.setState({\n        isTouchEnabled: true\n      });\n      // if touch is detected, listen for touch events instead of click events\n      // to improve detection on touch devices\n      // remove touch handler to prevent unnecessary refires\n      document.removeEventListener('touchstart', this.handleTouch);\n      // remove outside click handler from click events\n      document.removeEventListener('click', this.handleOutsideClick);\n      // reattach outside click handler to touchstart events\n      document.addEventListener('touchstart', this.handleOutsideClick);\n    };\n\n    handleOutsideClick = e => {\n      if (!this.componentEl) {\n        throw new Error('Must set component ref to prop innerRef!');\n      }\n      if (\n        this.componentEl.contains(e.target) ||\n        (!this.componentInstance.current.onOutsideClick &&\n          !this.props.onOutsideClick)\n      )\n        return;\n        if (this.componentInstance.current.onOutsideClick) {\n          this.componentInstance.current.onOutsideClick(e);\n        }\n\n      const { onOutsideClick } = this.props;\n      if (onOutsideClick) {\n        onOutsideClick(e);\n      }\n    };\n\n    render() {\n      return (\n        <WrappedComponent\n          ref={this.componentInstance}\n          innerRef={el => (this.componentEl = el)}\n          {...this.props}\n        />\n      );\n    }\n  }\n\n  /*\n  return forwardRef((props, ref) => {\n    return <WithOutsideClick {...props} forwardedRef={ref} />;\n  });\n  */\n  return WithOutsideClick;\n};\n\nexport default withOutsideClick;\n","import React, { Component } from 'react';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { withOutsideClick } from '../withOutsideClick';\nimport './Modal.scss';\n\nclass Modal extends Component {\n  \n  onOutsideClick = e => {\n    const { onModalClose } = this.props;\n    onModalClose(e);\n  };\n\n  render() {\n    const {\n      onModalClose,\n      children,\n      onModalClick,\n      size = 'md',\n      classes,\n      id,\n      innerRef\n    } = this.props;\n    return (\n      <div className={`modal ${classes.modal || ''}`} onClick={onModalClick}>\n        <div\n          id={id}\n          ref={innerRef}\n          className={`modal__content ${\n            classes.content || ''\n          } modal__content--${size}`}\n        >\n          <Button\n            type=\"button\"\n            className={`modal__btn--close ${\n            classes.button || ''\n          }`}\n            onClick={onModalClose}\n            iconOnly\n          >\n            <Icon name=\"x\" />\n          </Button>\n          {children}\n        </div>\n      </div>\n    );\n  }\n}\n\nModal.defaultProps = {\n  classes: {\n    modal: '',\n    content: '',\n    button: ''\n  }\n};\n\nexport default withOutsideClick(Modal);\n","import React, { Component } from 'react';\nimport { Modal } from '../Modal';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\nimport './ProjectComposer.scss';\n\nconst INITIAL_STATE = {\n  projectTitle: ''\n};\n\nexport default class ProjectComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { projectTitle } = this.state;\n    const { handleSubmit, onClose } = this.props;\n    this.props.handleSubmit(projectTitle);\n    this.props.onClose();\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { projectTitle } = this.state;\n    return (\n      <Modal onModalClose={this.props.onClose} size=\"sm\">\n      <h3 className=\"project-composer__title\">Create new project</h3>\n        <form onSubmit={this.onSubmit}>\n          <Input\n            name=\"projectTitle\"\n            title=\"Project Title\"\n            value={projectTitle}\n            onChange={this.onChange}\n            type=\"text\"\n          />\n          <Button\n            className=\"project-composer__btn--add\"\n            type=\"submit\"\n            onClick={this.onSubmit}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Create Project\n          </Button>\n        </form>\n      </Modal>\n    );\n  }\n}\n","export const LIST = 'LIST';\nexport const TASK = 'TASK';\nexport const SUBTASK = 'SUBTASK';\nexport const FOLDER = 'FOLDER';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input } from '../Input';\nimport { Icon } from '../Icon';\nimport { withAuthorization } from '../Session';\nimport { projectSelectors } from '../../ducks/projects';\nimport { Button } from '../Button';\nimport './ListComposer.scss';\n\nconst INITIAL_STATE = {\n  name: '',\n  isActive: false\n};\n\nclass ListComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ name: '' });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { name } = this.state;\n    const { projectId, firebase } = this.props;\n    firebase.addList({ projectId, name });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = e => {\n    if (e.target.value === '') {\n      this.setState({\n        isActive: false\n      });\n    }\n  };\n\n  render() {\n    const { name, isActive } = this.state;\n    return (\n      <div\n        className={`list-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"list-composer__form\" onSubmit={this.onSubmit}>\n          <Input\n            onChange={this.onChange}\n            value={name}\n            placeholder={isActive ? 'Enter list title...' : 'Add a list'}\n            required\n            name=\"name\"\n            hideLabel\n            className=\"list-composer__input\"\n          />\n          {isActive && (\n            <div className=\"list-composer__footer\">\n              <Button\n                className=\"list-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add List\n              </Button>\n              <Button\n                className=\"list-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    projectsById: projectSelectors.getProjectsById(state),\n    projectsArray: projectSelectors.getProjectsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListComposer)\n);\n","import React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { ListComposer } from '../ListComposer';\n\nconst Board = props => {\n  const { projectId, children } = props;\n  return (\n    <Droppable\n      droppableId={projectId}\n      type={droppableTypes.LIST}\n      direction=\"horizontal\"\n    >\n      {provided => (\n        <div\n          className=\"board\"\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n        >\n          {children}\n          {provided.placeholder}\n          <ListComposer projectId={projectId} />\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nexport default Board;\n","export const SELECT_TASK = 'SELECT_TASK';\n\nexport const selectTask = taskId => {\n  return {\n    type: SELECT_TASK,\n    taskId\n  };\n};\n\nconst INITIAL_STATE = null;\n\nexport const selectedTask = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SELECT_TASK:\n      return action.taskId;\n    default:\n      return state;\n  }\n};\n\nexport const getSelectedTaskId = state => state.selectedTask;\n\nexport const getSelectedTask = state => {\n  const { selectedTask: taskId, tasksById } = state;\n  return tasksById[taskId];\n};\n","export const getListsById = state => {\n  return state.listsById;\n};\n\nexport const getListName = (state, listId) => {\n  if (!listId) return '';\n  const { listsById } = state;\n  return listsById[listId].name;\n};\n\nexport const getSelectedProjectLists = state => {\n  const { listsById, projectsById, selectedProject } = state;\n  const project = projectsById[selectedProject];\n  if (!project) return [];\n  const { listIds } = project;\n  if (!listIds) return [];\n\n  return listIds.map(listId => listsById[listId]);\n};\n\nexport const getProjectLists = (state, listIds) => {\n  const { listsById } = state;\n  if (!listIds) return [];\n\n  return listIds.map(listId => listsById[listId]);\n};\n","import * as types from './types';\nimport { ADD_TASK, REMOVE_TASK } from '../tasks/types';\n\nconst listsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_LISTS_BY_ID: {\n      const { listsById } = action;\n      return {\n        ...state,\n        ...listsById\n      };\n    }\n    case types.UPDATE_LIST: {\n      const { listId, listData } = action;\n      return {\n        ...state,\n        [listId]: {\n          ...state[listId],\n          ...listData\n        }\n      };\n    }\n    case types.ADD_LIST: {\n      const { listId, listData } = action;\n      return {\n        ...state,\n        [listId]: {\n          listId,\n          ...listData\n        }\n      };\n    }\n    case types.REMOVE_LIST: {\n      const { listId } = action;\n      const { [listId]: deletedList, ...restOfLists } = state;\n      return restOfLists;\n    }\n    case ADD_TASK: {\n      const { taskId, taskData } = action;\n      const { listId } = taskData;\n      if (!listId) return state;\n      return {\n        ...state,\n        [listId]: {\n          ...state[listId],\n          taskIds: [...state[listId].taskIds, taskId]\n        }\n      };\n    }\n    case REMOVE_TASK: {\n      const { taskId, listId } = action;\n      if (!listId || !(listId in state)) return state;\n      return {\n        ...state,\n        [listId]: {\n          ...state[listId],\n          listIds: state[listId].taskIds.filter(id => id !== taskId)\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default listsById;\n","export const getTasksById = state => {\n  return state.tasksById;\n};\n\nexport const getListTasks = (state, taskIds) => {\n  const { tasksById } = state;\n  return taskIds.map(taskId => tasksById[taskId]);\n};\n\nexport const getFolderTasks = (state, taskIds) => {\n  const { tasksById } = state;\n  return taskIds.map(taskId => tasksById[taskId]);\n};\n\nexport const getSimpleTasks = (state, taskIds) => {\n  const { tasksById } = state;\n  if (!taskIds) return {};\n\n  return taskIds.reduce((tasks, taskId) => {\n    const { name, isCompleted } = tasksById[taskId];\n    tasks[taskId] = {\n      name,\n      isCompleted\n    };\n    return tasks;\n  }, {});\n};\n\nexport const getTaskTags = (state, ownProps) => {\n  if (!ownProps.projectId) return [];\n  const { projectsById } = state;\n  const { projectId, tags: taskTags } = ownProps;\n  const { tags: projectTags } = projectsById[projectId];\n\n  if (!taskTags || !projectTags) return [];\n  return taskTags.map(taskTag => projectTags[taskTag]);\n};\n","import * as types from './types';\n\nconst tasksById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_TASKS_BY_ID: {\n      const { tasksById } = action;\n      return {\n        ...state,\n        ...tasksById\n      };\n    }\n    case types.UPDATE_TASKS_BY_ID: {\n      const { task } = action;\n      console.log('tasks updated');\n      return {\n        ...state,\n        ...task\n      };\n    }\n    case types.ADD_TASK: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        [taskId]: {\n          taskId,\n          ...taskData\n        }\n      };\n    }\n    case types.REMOVE_TASK: {\n      const { taskId } = action;\n      const { [taskId]: deletedTask, ...restOfTasks } = state;\n      return restOfTasks;\n    }\n    case types.UPDATE_TASK: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        [taskId]: {\n          ...state[taskId],\n          ...taskData\n        }\n      };\n    }\n    case types.ADD_TAG: {\n      const { taskId, tag } = action;\n      return {\n        ...state,\n        [taskId]: {\n          ...state[taskId],\n          tags: [...state[taskId].tags, tag]\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default tasksById;\n","export const getSubtasksById = state => {\n  const { subtasksById } = state;\n  return subtasksById;\n};\n\nexport const getSubtasksArray = (state, subtaskIds) => {\n  const { subtasksById } = state;\n  if (!subtaskIds) return [];\n\n  return subtaskIds.map(subtaskId => {\n    return subtasksById[subtaskId];\n  });\n};\n\nexport const getSimpleSubtasks = (state, subtaskIds) => {\n  const { subtasksById } = state;\n  if (!subtaskIds) return {};\n\n  return subtaskIds.reduce((subtasks, subtaskId) => {\n    const { name, isCompleted } = subtasksById[subtaskId];\n        subtasks[subtaskId] = {\n          name,\n          isCompleted\n        };\n        return subtasks;\n      }, {});\n  };\n\nexport const getActiveSubtasks = (state, subtaskIds) => {\n  const subtasks = getSubtasksArray(state, subtaskIds);\n  return subtasks.filter(subtask => !subtask.isCompleted);\n};\n\nexport const getCompletedSubtasks = (state, subtaskIds) => {\n  const subtasks = getSubtasksArray(state, subtaskIds);\n  if (subtasks.includes(undefined)) return [];\n  return subtasks.filter(subtask => subtask.isCompleted);\n};\n","import * as types from './types';\n\nconst subtasksById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_SUBTASKS_BY_ID: {\n      const { subtasksById } = action;\n      return {\n        ...state,\n        ...subtasksById\n      };\n    }\n    case types.ADD_SUBTASK: {\n      const { subtaskId, subtaskData } = action;\n      return {\n        ...state,\n        [subtaskId]: {\n          subtaskId,\n          ...subtaskData\n        }\n      };\n    }\n    case types.DELETE_SUBTASK: {\n      const { subtaskId } = action;\n      const { [subtaskId]: deletedSubtask, ...restOfSubtasks } = state;\n      return restOfSubtasks;\n    }\n    case types.UPDATE_SUBTASK: {\n      const { subtaskId, subtaskData } = action;\n      return {\n        ...state,\n        [subtaskId]: {\n          ...state[subtaskId],\n          ...subtaskData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default subtasksById;\n","export const BACKSPACE = 'Backspace';\nexport const ENTER = 'Enter';\nexport const TAB = 'Tab';\nexport const ARROW_DOWN = 'ArrowDown';\nexport const ARROW_UP = 'ArrowUp';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon } from '../Icon';\nimport { withFirebase } from '../Firebase';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\nimport * as keys from '../../constants/keys';\nimport './TaskComposer.scss';\n\nconst INITIAL_STATE = {\n  name: '',\n  isActive: false\n};\n\nclass TaskComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ name: '' });\n  };\n\n  onSubmit = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { name } = this.state;\n    const {\n      userId,\n      folderId,\n      firebase,\n      projectId,\n      projectName,\n      listId,\n      listName\n    } = this.props;\n    firebase.addTask({\n      name,\n      userId,\n      folderId,\n      projectId,\n      projectName,\n      listId,\n      listName\n    });\n    this.resetForm();\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onBlur = e => {\n    if (e.target.value !== '') return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const { name, isActive } = this.state;\n\n    return (\n      <div\n        className={`task-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"task-composer__form\" onSubmit={this.onSubmit}>\n          <Button\n            className=\"task-composer__btn--submit\"\n            type=\"submit\"\n            onClick={this.onSubmit}\n            iconOnly\n          >\n            <Icon name=\"plus-circle\" />\n          </Button>\n          <Input\n            onChange={this.onChange}\n            value={name}\n            placeholder=\"Add a task\"\n            isRequired\n            name=\"name\"\n            className=\"task-composer__input\"\n            onKeyDown={this.onSubmit}\n            hideLabel\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userId: currentUserSelectors.getCurrentUserId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TaskComposer)\n);\n","import React, { Component, createRef } from 'react';\nimport './Textarea.scss';\n\nexport default class Textarea extends Component {\n  static defaultProps = {\n    isAutoHeightResizeEnabled: true\n  };\n\n  constructor(props) {\n    super(props);\n    this.textareaEl = createRef();\n  }\n\n  componentDidMount() {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n    this.autoHeightResize();\n  }\n\n  autoHeightResize = () => {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n\n    this.textareaEl.current.style.height = '0px'; // resets scroll height\n    this.textareaEl.current.style.height = `${\n      this.textareaEl.current.scrollHeight\n    }px`;\n  };\n\n  render() {\n    const {\n      className,\n      name,\n      value,\n      onChange,\n      placeholder,\n      isRequired,\n      onBlur,\n      onFocus,\n      onKeyDown,\n      onDragStart,\n      isReadOnly\n    } = this.props;\n    return (\n      <textarea\n        className={`textarea ${className}`}\n        id={name}\n        name={name}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={isRequired}\n        onBlur={onBlur}\n        onInput={this.autoHeightResize}\n        ref={this.textareaEl}\n        onFocus={onFocus}\n        onKeyDown={onKeyDown}\n        onDragStart={onDragStart}\n        readOnly={isReadOnly}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon } from '../Icon';\nimport { withFirebase } from '../Firebase';\nimport { projectActions, projectSelectors } from '../../ducks/projects';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport * as keys from '../../constants/keys';\nimport './CardComposer.scss';\n\nconst INITIAL_STATE = {\n  name: '',\n  isActive: false\n};\n\nclass CardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ name: '' });\n  };\n\n  onSubmit = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { name } = this.state;\n    const {\n      firebase,\n      projectId,\n      projectName,\n      listId,\n      listName,\n      userId\n    } = this.props;\n    firebase.addTask({\n      projectId,\n      listId,\n      name,\n      projectName,\n      listName,\n      userId\n    });\n    this.resetForm();\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onBlur = e => {\n    if (e.target.value !== '') return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const { name, isActive } = this.state;\n\n    return (\n      <div\n        className={`card-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"card-composer__form\" onSubmit={this.onSubmit}>\n          <Textarea\n            onChange={this.onChange}\n            value={name}\n            placeholder={isActive ? 'Enter card title...' : 'Add a card'}\n            isRequired\n            name=\"name\"\n            className=\"card-composer__textarea\"\n            isAutoHeightResizeEnabled={false}\n            onKeyDown={this.onSubmit}\n          />\n          {isActive && (\n            <div className=\"card-composer__footer\">\n              <Button\n                className=\"card-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add Card\n              </Button>\n              <Button\n                className=\"card-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userId: currentUserSelectors.getCurrentUserId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateProjectsById: project =>\n      dispatch(projectActions.updateProjectsById(project))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardComposer)\n);\n","import React from 'react';\nimport './Menu.scss';\n\nconst Menu = ({ children, onClick, className = '', menuRef }) => {\n  return (\n    <ul className={`menu ${className}`} onClick={onClick} ref={menuRef}>\n      {children}\n    </ul>\n  );\n};\n\nexport default Menu;\n","import React from 'react';\nimport './Menu.scss';\n\nconst MenuItem = ({ children, className = '' }) => {\n  return <li className={`menu__item ${className}`}>{children}</li>;\n};\n\nexport default MenuItem;\n","import React, { Component } from 'react';\n\nexport default class Popover extends Component {\n  state = {\n    isTouchEnabled: false\n  };\n\n  componentDidMount() {\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick, false);\n  }\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  handleOutsideClick = e => {\n    const { onOutsideClick } = this.props;\n    onOutsideClick(e.target);\n  };\n\n  handleTouch = () => {\n    this.setState({\n      isTouchEnabled: true\n    });\n    // remove touch handler to prevent unnecessary refires\n    document.removeEventListener('touchstart', this.handleTouch);\n    // remove outside click handler from click events\n    document.removeEventListener('click', this.handleOutsideClick);\n    // reattach outside click handler to touchstart events\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  render() {\n    const { className, onClick, style, children } = this.props;\n    return (\n      <div className={`popover ${className}`} onClick={onClick} style={style}>\n        {children}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from '../Button';\nimport Popover from './Popover';\nimport './Popover.scss';\n\nexport default class PopoverWrapper extends Component {\n  state = {\n    isActive: 'isActive' in this.props ? null : false\n  };\n\n  static defaultProps = {\n    classes: {\n      wrapper: '',\n      popover: ''\n    },\n    buttonProps: {},\n    align: 'left',\n    anchorEl: null\n  };\n\n  handleOutsideClick = target => {\n    if (this.componentEl && this.componentEl.contains(target)) return;\n    const { onOutsideClick, onPopoverClose } = this.props;\n\n    if (onOutsideClick) {\n      onOutsideClick();\n    } else {\n      this.setState({\n        isActive: false\n      });\n  \n      if (onPopoverClose) {\n        onPopoverClose();\n      }\n    }\n  };\n\n  toggleOpen = () => {\n    const { onButtonClick } = this.props;\n\n    if (onButtonClick) {\n      onButtonClick();\n    } else {\n      this.setState(prevState => ({\n        isActive: !prevState.isActive\n      }));\n    }\n  };\n\n  handleClose = e => {\n    if ('isActive' in this.props) return;\n    if (e.target.matches('input')) return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const {\n      children,\n      alignInner,\n      onWrapperClick,\n      alignOuter,\n      buttonProps,\n      classes,\n      anchorEl\n    } = this.props;\n    const isActive = 'isActive' in this.props ? this.props.isActive : this.state.isActive;\n\n    let popoverWrapperStyle = null;\n\n    if (anchorEl) {\n      const { offsetTop, offsetLeft } = anchorEl;\n      popoverWrapperStyle = {\n        position: 'absolute',\n        top: offsetTop,\n        [alignOuter]: offsetLeft\n      };\n    }\n\n    return (\n      <div\n        className={`popover-wrapper ${isActive ? 'is-active' : ''} ${\n          classes.wrapper\n        }`}\n        ref={el => (this.componentEl = el)}\n        style={popoverWrapperStyle}\n        onClick={onWrapperClick}\n      >\n        <Button\n          type=\"button\"\n          onClick={this.toggleOpen}\n          buttonRef={this.props.buttonRef}\n          {...buttonProps}\n        />\n        {isActive && (\n          <Popover\n            className={`align-${alignInner} ${classes.popover}`}\n            onClick={this.handleClose}\n            onOutsideClick={this.handleOutsideClick}\n          >\n            {children}\n          </Popover>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport './Tag.scss';\n\nconst Tag = ({ text, color, size, onDelete, className, tagRef, variant }) => (\n  <span\n    className={`tag tag--${size} bg--${color} ${\n      variant !== 'default' ? `tag--${variant}` : ''\n    } ${className}`}\n    ref={tagRef}\n  >\n    {text}\n    {size === 'md' && (\n      <Button\n        type=\"button\"\n        size=\"sm\"\n        className=\"tag__btn--delete\"\n        onClick={onDelete}\n        iconOnly\n      >\n        <Icon name=\"x\" />\n      </Button>\n    )}\n  </span>\n);\n\nTag.defaultProps = {\n  className: '',\n  onDelete: () => null,\n  color: 'default',\n  size: 'md',\n  variant: 'default'\n};\n\nexport default Tag;\n","import React, { Component } from 'react';\nimport './Avatar.scss';\n\nexport default class Avatar extends Component {\n  static defaultProps = {\n    imgSrc: null,\n    classes: {\n      avatar: '',\n      img: '',\n      placeholder: ''\n    },\n    size: 'md',\n    variant: 'circle'\n  };\n\n  getUserInitials = fullName => {\n    return fullName\n      .split(' ')\n      .map(name => name.charAt(0))\n      .join('')\n      .toUpperCase();\n  };\n\n  render() {\n    const {\n      imgSrc,\n      imgProps,\n      classes,\n      fullName,\n      variant,\n      color,\n      size\n    } = this.props;\n    return (\n      <div\n        className={`avatar avatar--${size} avatar--${variant} ${\n          classes.avatar\n        }`}\n      >\n        {imgSrc !== null ? (\n          <img\n            src={imgSrc}\n            alt={fullName}\n            className={`avatar__img ${classes.img}`}\n            {...imgProps}\n          />\n        ) : (\n          <div\n            className={`avatar__placeholder ${classes.placeholder}`}\n            style={{ backgroundColor: color }}\n          >\n            {this.getUserInitials(fullName)}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","// Full names, shortnames, and total days of months,\n// excluding February (depends on leap year)\nexport const MONTHS = [\n  {\n    long: 'January',\n    short: 'Jan',\n    daysTotal: 31\n  },\n  {\n    long: 'February',\n    short: 'Feb',\n    daysTotal: null\n  },\n  {\n    long: 'March',\n    short: 'Mar',\n    daysTotal: 31\n  },\n  {\n    long: 'April',\n    short: 'Apr',\n    daysTotal: 30\n  },\n  {\n    long: 'May',\n    short: 'May',\n    daysTotal: 31\n  },\n  {\n    long: 'June',\n    short: 'Jun',\n    daysTotal: 30\n  },\n  {\n    long: 'July',\n    short: 'Jul',\n    daysTotal: 31\n  },\n  {\n    long: 'August',\n    short: 'Aug',\n    daysTotal: 31\n  },\n  {\n    long: 'September',\n    short: 'Sep',\n    daysTotal: 30\n  },\n  {\n    long: 'October',\n    short: 'Oct',\n    daysTotal: 31\n  },\n  {\n    long: 'November',\n    short: 'Nov',\n    daysTotal: 30\n  },\n  {\n    long: 'December',\n    short: 'Dec',\n    daysTotal: 31\n  }\n];\n\n// Full names and shortnames of days of week\nexport const WEEK_DAYS = [\n  { long: 'Sunday', short: 'Sun', narrow: 'S' },\n  { long: 'Monday', short: 'Mon', narrow: 'M' },\n  { long: 'Tuesday', short: 'Tue', narrow: 'T' },\n  { long: 'Wednesday', short: 'Wed', narrow: 'W' },\n  { long: 'Thursday', short: 'Thu', narrow: 'T' },\n  { long: 'Friday', short: 'Fri', narrow: 'F' },\n  { long: 'Saturday', short: 'Sat', narrow: 'S' }\n];\n","/* eslint-disable default-case */\n/* eslint-disable no-nested-ternary */\nimport { MONTHS, WEEK_DAYS } from './constants';\n\nexport const isLeapYear = year =>\n  (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n\nexport const getMonthFirstDay = (monthIndex, year) =>\n  new Date(year, monthIndex, 1).getDay();\n\nexport const isToday = date =>\n  new Date().setHours(0, 0, 0, 0) === date.setHours(0, 0, 0, 0);\n\nexport const isYesterday = date => {\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  return today.setDate(today.getDate() - 1) === date.setHours(0, 0, 0, 0);\n};\n\nexport const isTomorrow = date => {\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  return today.setDate(today.getDate() + 1) === date.setHours(0, 0, 0, 0);\n};\n\nexport const isThisYear = date => {\n  return date.getFullYear() === new Date().getFullYear();\n};\n\nexport const getMonthDays = (monthIndex, year) => {\n  if (monthIndex === 1) {\n    return isLeapYear(year) ? 29 : 28;\n  }\n  return MONTHS[monthIndex].daysTotal;\n};\n\nexport const getPrevMonth = (monthIndex, year) => {\n  return {\n    month: monthIndex > 0 ? monthIndex - 1 : 11,\n    year: monthIndex > 0 ? year : year - 1\n  };\n};\n\nexport const getNextMonth = (monthIndex, year) => {\n  return {\n    month: monthIndex < 11 ? monthIndex + 1 : 0,\n    year: monthIndex < 11 ? year : year + 1\n  };\n};\n\nexport const getMonthDates = (month, year) => {\n  const monthDays = getMonthDays(month, year);\n  const monthFirstDay = getMonthFirstDay(month, year);\n  const { month: prevMonth, year: prevMonthYear } = getPrevMonth(month, year);\n  const prevMonthDays = getMonthDays(prevMonth, prevMonthYear);\n  const daysFromPrevMonth = monthFirstDay;\n  const daysFromNextMonth = 7 - ((monthFirstDay + monthDays) % 7);\n  const prevMonthDates = [...new Array(daysFromPrevMonth)].map((n, i) => {\n    return {\n      day: prevMonthDays - daysFromPrevMonth + i + 1,\n      month: prevMonth,\n      year: prevMonthYear\n    };\n  });\n\n  const thisMonthDates = [...new Array(monthDays)].map((n, i) => {\n    return {\n      day: i + 1,\n      month,\n      year\n    };\n  });\n\n  const nextMonthDates = [...new Array(daysFromNextMonth)].map((n, i) => {\n    return {\n      day: i + 1,\n      ...getNextMonth(month, year)\n    };\n  });\n\n  return [...prevMonthDates, ...thisMonthDates, ...nextMonthDates];\n};\n\nexport const isDate = date =>\n  Object.prototype.toString.call(date) === '[object Date]';\n\nexport const getSimpleDate = date => {\n  const dateObj =\n    !isDate(date) && typeof date === 'string' ? new Date(date) : date;\n  return {\n    day: dateObj.getDate(),\n    month: dateObj.getMonth(),\n    year: dateObj.getFullYear()\n  };\n};\n\nexport const isSimpleDate = date => {\n  return date && 'day' in date && 'month' in date && 'year' in date;\n};\n\nexport const isSameDate = (date, base = new Date()) => {\n  if (\n    (!isDate(date) && !isSimpleDate(date)) ||\n    (!isDate(base) && !isSimpleDate(base))\n  )\n    return false;\n  const dateDay = date.day || date.getDate();\n  const dateMonth = date.month || date.getMonth();\n  const dateYear = date.year || date.getFullYear();\n  const baseDay = base.day || base.getDate();\n  const baseMonth = base.month || base.getMonth();\n  const baseYear = date.year || base.getFullYear();\n  return (\n    dateDay === baseDay && dateMonth === baseMonth && dateYear === baseYear\n  );\n};\n\nexport const getNextYears = (num, startingYear = new Date().getFullYear()) => {\n  return [...new Array(num)].map((item, i) => {\n    return startingYear + i;\n  });\n};\n\nexport const zeroPad = (value, length) => {\n  return `${value}`.padStart(length, '0');\n};\n\n/**\n * Returns string representation of simple date object with format `mm-dd-yy`\n * @param {Object} date - simple date object\n */\nexport const toSimpleDateString = date => {\n  const simpleDate = isSimpleDate(date)\n    ? date\n    : isDate(date)\n    ? getSimpleDate(date)\n    : undefined;\n  if (!simpleDate) return '';\n  const { day, month, year } = simpleDate;\n  return `${zeroPad(month + 1, 2)}-${zeroPad(day, 2)}-${year - 2000}`;\n};\n\n/**\n * Converts simple date string back to simple date object\n * @param {String} dateString\n */\nexport const toSimpleDateObj = dateString => {\n  const dateArr = dateString.split('-');\n  const month = dateArr[0] - 1;\n  const day = +dateArr[1];\n  const year = +dateArr[2] + 2000;\n  if (day > getMonthDays(month, year)) {\n    return getSimpleDate(new Date(year, month, day));\n  }\n  return {\n    month,\n    day,\n    year\n  };\n};\n\nexport const isSDSFormat = dateString => {\n  return /^\\d{2}-\\d{2}-\\d{2}$/.test(dateString);\n};\n\n/**\n * Checks if date falls within specified time frame\n * @param {Date Object} date - Javascript date object\n * @param {Number} num - The number of days comprising the time frame to check the date against\n * @param {Date Object} startingDate - The first day of the time frame\n */\nexport const isWithinDays = (date, num, startingDate = new Date()) => {\n  const timeStart = startingDate.setHours(0, 0, 0, 0);\n  const endingDate = new Date(startingDate);\n  const timeEnd = endingDate.setDate(endingDate.getDate() + num);\n  return +date >= timeStart && +date < timeEnd;\n};\n\nexport const isPriorDate = (date, baseDate = new Date()) => {\n  return +date < baseDate.setHours(0, 0, 0, 0);\n};\n\nexport const toDateString = (\n  date,\n  options = {\n    useRelative: false,\n    format: {\n      weekday: 'short',\n      month: 'short',\n      day: 'numeric',\n      year: '2-digit'\n    }\n  }\n) => {\n  const { useRelative, format } = options;\n  if (useRelative) {\n    if (isToday(date)) {\n      return 'Today';\n    }\n    if (isYesterday(date)) {\n      return 'Yesterday';\n    }\n    if (isTomorrow(date)) {\n      return 'Tomorrow';\n    }\n    if (isWithinDays(date, 7)) {\n      return WEEK_DAYS[date.getDay()].long;\n    }\n  }\n  return Object.keys(format)\n    .map(key => {\n      switch (key) {\n        case 'weekday': {\n          const value = format[key];\n          const weekday = date.getDay();\n          return WEEK_DAYS[weekday][value];\n        }\n        case 'month': {\n          const value = format[key];\n          const month = date.getMonth();\n          if (value === 'numeric') {\n            return month + 1;\n          } if (value === '2-digit') {\n            return zeroPad(month + 1, 2);\n          } else {\n            return MONTHS[month][value];\n          }\n        }\n        case 'day': {\n          const value = format[key];\n          const day = date.getDate();\n          if (value === '2-digit') {\n            return zeroPad(day, 2);\n          } else {\n            return day;\n          }\n        }\n        case 'year': {\n          const value = format[key];\n          const year = date.getFullYear();\n          if (useRelative && isThisYear(date)) {\n            return null;\n          }\n          if (value === '2-digit') {\n            return `'${+year.slice(2)}`;\n          } else {\n            return year;\n          }\n        }\n      }\n    })\n    .join(' ')\n    .trim();\n};\n","import React from 'react';\n\nconst Radio = ({\n  classes = { radio: '', label: '' },\n  name,\n  id,\n  value,\n  onFocus,\n  onChange,\n  onInput,\n  isRequired,\n  onBlur,\n  inputRef,\n  hideLabel,\n  label,\n  onKeyDown,\n  isChecked\n}) => {\n  return (\n    <>\n      <input\n        className={`radio ${classes.radio}`}\n        id={id}\n        name={name}\n        type=\"radio\"\n        value={value}\n        onFocus={onFocus}\n        onChange={onChange}\n        onBlur={onBlur}\n        ref={inputRef}\n        onInput={onInput}\n        onKeyDown={onKeyDown}\n        required={isRequired}\n        checked={isChecked}\n      />\n      {!hideLabel && (\n        <label htmlFor={id} className={`radio__label ${classes.label}`}>\n          {label}\n        </label>\n      )}\n    </>\n  );\n};\n\nexport default Radio;\n","import React, { Component } from 'react';\nimport * as dateUtils from './utils';\nimport { MONTHS, WEEK_DAYS } from './constants';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { PopoverWrapper } from '../Popover';\nimport { Radio } from '../Radio';\nimport './Calendar.scss';\n\nexport default class Calendar extends Component {\n  state = {\n    isMonthsDropdownActive: false,\n    isYearsDropdownActive: false\n  };\n\n  goToNextMonth = () => {\n    const { month, year, onMonthClick } = this.props;\n    onMonthClick(dateUtils.getNextMonth(month, year));\n  };\n\n  goToPrevMonth = () => {\n    const { month, year, onMonthClick } = this.props;\n    onMonthClick(dateUtils.getPrevMonth(month, year));\n  };\n\n  toggleMonthsDropdown = () => {\n    this.setState(prevState => ({\n      isMonthsDropdownActive: !prevState.isMonthsDropdownActive\n    }));\n  };\n\n  toggleYearsDropdown = () => {\n    this.setState(prevState => ({\n      isYearsDropdownActive: !prevState.isYearsDropdownActive\n    }));\n  };\n\n  selectMonth = e => {\n    const month = +e.target.value;\n    const { onMonthClick, year } = this.props;\n    onMonthClick({ month, year });\n    this.toggleMonthsDropdown();\n  };\n\n  selectYear = e => {\n    const year = +e.target.value;\n    const { onYearClick } = this.props;\n    onYearClick(year);\n    this.toggleYearsDropdown();\n  };\n\n  render() {\n    const { month, year, selectedDate, today, onDayClick, classes } = this.props;\n    const { isMonthsDropdownActive, isYearsDropdownActive } = this.state;\n    const dates = dateUtils.getMonthDates(month, year);\n    const years = dateUtils.getNextYears(4);\n\n    return (\n      <div className={`calendar ${classes.calendar}`}>\n        <div className=\"calendar__year\">\n          <PopoverWrapper\n            isActive={isYearsDropdownActive}\n            onButtonClick={this.toggleYearsDropdown}\n            onOutsideClick={this.toggleYearsDropdown}\n            alignInner=\"left\"\n            classes={{\n              wrapper: 'calendar__years-dropdown-wrapper',\n              popover: 'calendar__years-dropdown'\n            }}\n            buttonProps={{\n              className: `calendar__btn--years-dropdown ${\n                isYearsDropdownActive ? 'is-active' : ''\n              }`,\n              children: (\n                <>\n                  {year}\n                  <Icon name=\"chevron-down\" />\n                </>\n              )\n            }}\n          >\n            <ul className=\"calendar__years-list\">\n              {years.map(yearOption => (\n                <li className=\"calendar__years-item\" key={yearOption}>\n                  <Radio\n                    name=\"year\"\n                    id={yearOption}\n                    value={yearOption}\n                    isChecked={yearOption === year}\n                    label={\n                      yearOption === year ? (\n                        <>\n                          <Icon name=\"check\" />\n                          {yearOption}\n                        </>\n                      ) : (\n                        yearOption\n                      )\n                    }\n                    onChange={this.selectYear}\n                    classes={{\n                      radio: 'calendar__radio',\n                      label: 'calendar__radio-label'\n                    }}\n                  />\n                </li>\n              ))}\n            </ul>\n          </PopoverWrapper>\n        </div>\n        <div className=\"calendar__month\">\n          <PopoverWrapper\n            isActive={isMonthsDropdownActive}\n            onButtonClick={this.toggleMonthsDropdown}\n            onOutsideClick={this.toggleMonthsDropdown}\n            alignInner=\"left\"\n            classes={{\n              wrapper: 'calendar__months-dropdown-wrapper',\n              popover: 'calendar__months-dropdown'\n            }}\n            buttonProps={{\n              className: `calendar__btn--months-dropdown ${\n                isMonthsDropdownActive ? 'is-active' : ''\n              }`,\n              children: (\n                <>\n                  {MONTHS[month].long}\n                  <Icon name=\"chevron-down\" />\n                </>\n              )\n            }}\n          >\n            <ul className=\"calendar__months-list\">\n              {MONTHS.map((monthOption, i) => (\n                <li className=\"calendar__months-item\" key={monthOption.long}>\n                  <Radio\n                    name=\"month\"\n                    id={monthOption.long}\n                    value={i}\n                    isChecked={i === month}\n                    label={\n                      i === month ? (\n                        <>\n                          <Icon name=\"check\" />\n                          {monthOption.long}\n                        </>\n                      ) : (\n                        monthOption.long\n                      )\n                    }\n                    onChange={this.selectMonth}\n                    classes={{\n                      radio: 'calendar__radio',\n                      label: 'calendar__radio-label'\n                    }}\n                  />\n                </li>\n              ))}\n            </ul>\n          </PopoverWrapper>\n          <div className=\"calendar__month--prev-next\">\n            <Button\n              type=\"button\"\n              className=\"calendar__btn--month calendar__btn--prev-month\"\n              size=\"sm\"\n              iconOnly\n              onClick={this.goToPrevMonth}\n            >\n              <Icon name=\"chevron-left\" />\n            </Button>\n            <Button\n              type=\"button\"\n              className=\"calendar__btn--month calendar__btn--next-month\"\n              size=\"sm\"\n              iconOnly\n              onClick={this.goToNextMonth}\n            >\n              <Icon name=\"chevron-right\" />\n            </Button>\n          </div>\n        </div>\n        <div className=\"calendar__week-days\">\n          {WEEK_DAYS.map(day => (\n            <div\n              key={day.long}\n              className={`calendar__week-day ${classes.weekDay}`}\n            >\n              {day.narrow}\n            </div>\n          ))}\n        </div>\n        <div className=\"calendar__days\">\n          {dates.map(date => {\n            const isToday =\n              date.day === today.day &&\n              date.month === today.month &&\n              date.year === today.year;\n            const isSelectedDate =\n              selectedDate &&\n              date.day === selectedDate.day &&\n              date.month === selectedDate.month &&\n              date.year === selectedDate.year;\n            return (\n              <div\n                key={`${date.month}--${date.day}`}\n                className={`calendar__day ${\n                  date.month !== month ? 'calendar__day--prev-next' : ''\n                } ${isToday ? 'is-today' : ''} ${\n                  isSelectedDate ? 'is-selected' : ''\n                } ${classes.day}`}\n              >\n                <Button\n                  type=\"button\"\n                  className=\"calendar__btn--day\"\n                  size=\"sm\"\n                  onClick={() => onDayClick(date)}\n                >\n                  {date.day}\n                </Button>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { userActions, userSelectors } from '../../ducks/users';\nimport { subtaskSelectors } from '../../ducks/subtasks';\nimport './Card.scss';\nimport { Tag } from '../Tag';\nimport { Icon } from '../Icon';\nimport { Avatar } from '../Avatar';\nimport { Button } from '../Button';\nimport { MONTHS, dateUtils } from '../Calendar';\n\nconst CardDetail = ({ icon, children, className = '' }) => (\n  <div className={`card__detail ${className}`}>\n    <Icon name={icon} />\n    {children}\n  </div>\n);\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.taskTags.indexOf(undefined) !== -1) {\n      return false;\n    }\n    return true;\n  }\n\n  handleCardClick = e => {\n    if (e.target.matches('button') || e.target.matches('a')) return;\n    const { taskId, onCardClick } = this.props;\n    onCardClick(taskId);\n  };\n\n  render() {\n    const {\n      name,\n      taskId,\n      taskIndex,\n      taskTags,\n      commentIds,\n      dueDate,\n      subtaskIds,\n      completedSubtasks,\n      taskMembers\n    } = this.props;\n\n    const dueDateStr = dueDate\n      ? dateUtils.toDateString(dueDate.toDate(), {\n          useRelative: true,\n          format: { month: 'short', day: 'numeric' }\n        })\n      : null;\n    const isDueToday = dueDateStr === 'Today';\n    const isDueTmrw = dueDateStr === 'Tomorrow';\n    const isPastDue = dueDate && dateUtils.isPriorDate(dueDate.toDate());\n    return (\n      <Draggable draggableId={taskId} index={taskIndex}>\n        {provided => (\n          <div\n            className=\"card\"\n            onClick={this.handleCardClick}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            style={{\n              ...provided.draggableProps.style,\n              backgroundColor: '#fff'\n            }}\n          >\n            <div className=\"card__header\" ref={el => (this.headerEl = el)}>\n              <div className=\"card__tags\">\n                {taskTags.map(taskTag => (\n                  <Tag\n                    key={taskTag.text}\n                    size=\"sm\"\n                    color={taskTag.color}\n                    variant=\"pill\"\n                    className=\"card__tag\"\n                  />\n                ))}\n              </div>\n              <h3 className=\"card__title\">{name}</h3>\n            </div>\n            <div className=\"card__body\">\n              {dueDate && (\n                <CardDetail\n                  icon=\"calendar\"\n                  className={`card__due-date ${\n                    isDueToday\n                      ? 'is-due-today'\n                      : isDueTmrw\n                      ? 'is-due-tmrw'\n                      : isPastDue\n                      ? 'is-past-due'\n                      : ''\n                  }\n                  `}\n                >\n                  {dueDateStr}\n                </CardDetail>\n              )}\n              {subtaskIds && subtaskIds.length > 0 && (\n                <CardDetail icon=\"check-square\">\n                  {completedSubtasks.length}/{subtaskIds.length}\n                </CardDetail>\n              )}\n              {commentIds && commentIds.length > 0 && (\n                <CardDetail icon=\"message-circle\">\n                  {commentIds.length}\n                </CardDetail>\n              )}\n            </div>\n            <div className=\"card__footer\">\n              {taskMembers && taskMembers.length > 0 && (\n                <div className=\"card__members-wrapper\">\n                  <div className=\"card__members\">\n                    {taskMembers.map(member => {\n                      const { name, photoURL, userId } = member;\n                      return (\n                        <Avatar\n                          classes={{\n                            avatar: 'card__avatar',\n                            placeholder: 'card__avatar-placeholder'\n                          }}\n                          fullName={name}\n                          size=\"sm\"\n                          variant=\"circle\"\n                          imgSrc={photoURL}\n                          key={userId}\n                        />\n                      );\n                    })}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    taskTags: taskSelectors.getTaskTags(state, ownProps),\n    completedSubtasks: subtaskSelectors.getCompletedSubtasks(\n      state,\n      ownProps.subtaskIds\n    ),\n    taskMembers: userSelectors.getMembersArray(state, ownProps.assignedTo)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Card);\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport './Checkbox.scss';\n\nconst Checkbox = ({\n  value,\n  id,\n  name,\n  isChecked,\n  onClick,\n  onChange,\n  className,\n  labelClass,\n  ...props\n}) => {\n  return (\n    <label\n      htmlFor={id}\n      onClick={onClick}\n      className={`checkbox__label ${labelClass}`}\n    >\n      {isChecked && <Icon name=\"check\" />}\n      <input\n        type=\"checkbox\"\n        id={id}\n        value={value}\n        name={name}\n        checked={isChecked}\n        className={`checkbox ${className}`}\n        onChange={onChange}\n        {...props}\n      />\n    </label>\n  );\n};\n\nCheckbox.defaultProps = {\n  className: '',\n  labelClass: ''\n};\n\nexport default Checkbox;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Checkbox } from '../Checkbox';\nimport { Textarea } from '../Textarea';\nimport { withFirebase } from '../Firebase';\nimport * as keys from '../../constants/keys';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport './Task.scss';\n\nclass Task extends Component {\n  state = {\n    isFocused: false,\n    name: this.props.name,\n    prevPropsName: this.props.name\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.name !== state.prevPropsName) {\n      return {\n        name: props.name,\n        prevPropsName: props.name\n      };\n    }\n    return null;\n  }\n\n  onFocus = () => {\n    this.setState({\n      isFocused: true\n    });\n  };\n\n  onChange = e => {\n    this.setState({\n      name: e.target.value\n    });\n  };\n\n  onBlur = () => {\n    const { name, firebase, taskId } = this.props;\n    const { name: newName } = this.state;\n    if (name !== newName) {\n      firebase.updateTask(taskId, {\n        name: newName\n      });\n    }\n    this.setState({\n      isFocused: false\n    });\n  };\n\n  deleteTask = e => {\n    if (e.target.value !== '' || e.key !== keys.BACKSPACE) return;\n    const { taskId, firebase, listId, assignedTo, folders } = this.props;\n    firebase.deleteTask({ taskId, listId, assignedTo, folders });\n  };\n\n  toggleCompleted = () => {\n    const { taskId, isCompleted, firebase } = this.props;\n    firebase.updateTask(taskId, {\n      isCompleted: !isCompleted,\n      completedAt: !isCompleted ? firebase.getTimestamp() : null\n    });\n  };\n\n  handleTaskClick = e => {\n    if (\n      e.target.matches('button') ||\n      e.target.matches('a') ||\n      e.target.matches('label') ||\n      e.target.matches('input[type=\"checkbox\"]')\n    )\n      return;\n    const { taskId, onTaskClick } = this.props;\n    onTaskClick(taskId);\n  };\n\n  render() {\n    const { taskId, isCompleted, innerRef, provided } = this.props;\n    const { isFocused, name } = this.state;\n    const draggableProps = provided\n      ? provided.draggableProps\n      : { style: { listStyle: 'none' } };\n    const dragHandleProps = provided\n      ? provided.dragHandleProps\n      : { style: { listStyle: 'none' } };\n\n    return (\n      <li\n        className={`task ${isFocused ? 'is-focused' : ''}`}\n        onClick={this.handleTaskClick}\n        ref={innerRef}\n        {...draggableProps}\n        {...dragHandleProps}\n      >\n        <Checkbox\n          id={`cb-${taskId}`}\n          value={taskId}\n          name={taskId}\n          isChecked={isCompleted}\n          onChange={this.toggleCompleted}\n          className=\"task__checkbox\"\n          labelClass=\"task__checkbox-label\"\n        />\n        <Textarea\n          value={name}\n          onFocus={this.onFocus}\n          onChange={this.onChange}\n          onBlur={this.onBlur}\n          name={taskId}\n          className=\"task__textarea\"\n          onKeyDown={this.deleteTask}\n        />\n      </li>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userId: currentUserSelectors.getCurrentUserId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Task)\n);\n","import React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport Task from './Task';\n\nconst DraggableTask = ({\n  taskId,\n  index,\n  onTaskClick,\n  listId,\n  folderId,\n  task\n}) => (\n  <Draggable draggableId={taskId} index={index}>\n    {(provided, snapshot) => (\n      <Task\n        innerRef={provided.innerRef}\n        provided={provided}\n        onTaskClick={onTaskClick}\n        listId={listId}\n        folderId={folderId}\n        {...task}\n      />\n    )}\n  </Draggable>\n);\n\nexport default DraggableTask;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { Card } from '../Card';\nimport { DraggableTask } from '../Task';\n\nexport default class Tasks extends Component {\n  /*\n\n  shouldComponentUpdate(nextProps) {\n    if (this.props.cards === nextProps.cards) {\n      return false;\n    }\n    return true;\n  }\n*/\n  componentDidUpdate(prevProps) {\n    if (this.props.tasks.length > prevProps.tasks.length) {\n      this.scrollToBottom();\n    }\n  }\n\n  scrollToBottom = () => {\n    if (!this.listEnd) return;\n    this.listEnd.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  render() {\n    const { listId, tasks, onTaskClick, folderId, view } = this.props;\n    const isBoardView = view === 'board';\n\n    const inner = tasks.map((task, taskIndex) => {\n      return isBoardView ? (\n        <Card\n          key={task.taskId}\n          taskIndex={taskIndex}\n          onCardClick={onTaskClick}\n          {...task}\n        />\n      ) : (\n        <DraggableTask\n          key={task.taskId}\n          index={taskIndex}\n          onTaskClick={onTaskClick}\n          listId={listId}\n          folderId={folderId}\n          taskId={task.taskId}\n          task={task}\n        />\n      );\n    });\n\n    return (\n      <Droppable droppableId={listId || folderId} type={droppableTypes.TASK}>\n        {(provided, snapshot) =>\n          isBoardView ? (\n            <div\n              className=\"list__cards\"\n              ref={provided.innerRef}\n              style={{ minHeight: snapshot.isDraggingOver ? 80 : 16 }}\n              {...provided.droppableProps}\n            >\n              {inner}\n              {provided.placeholder}\n              <div\n                style={{ float: 'left', clear: 'both' }}\n                ref={el => (this.listEnd = el)}\n              />\n            </div>\n          ) : (\n            <ul\n              className=\"list__tasks\"\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {inner}\n              {provided.placeholder}\n            </ul>\n          )\n        }\n      </Droppable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { listActions } from '../../ducks/lists';\nimport { projectSelectors } from '../../ducks/projects';\nimport { TaskComposer } from '../TaskComposer';\nimport { CardComposer } from '../CardComposer';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\nimport { Input } from '../Input';\nimport { Tasks } from '../Tasks';\nimport './List.scss';\n\nclass List extends Component {\n  static defaultProps = {\n    isRestricted: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.name\n    };\n  }\n\n  handleListDelete = e => {\n    e.preventDefault();\n    const { listId, projectId, deleteList } = this.props;\n    deleteList({ listId, projectId });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onBlur = e => {\n    const { name, listId, firebase } = this.props;\n    const { name: newName } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newName !== name) {\n      firebase.updateListName({ listId, name: newName });\n      console.log('updated list name!');\n    }\n  };\n\n  render() {\n    const {\n      tasks,\n      name: listName,\n      onTaskClick,\n      listId,\n      listIndex,\n      isFetchingTasks,\n      isRestricted,\n      projectId,\n      projectName,\n      view\n    } = this.props;\n    if (isFetchingTasks) return null;\n\n    const isBoardView = view === 'board';\n\n    const { name } = this.state;\n\n    return (\n      <Draggable draggableId={listId} index={listIndex}>\n        {provided => (\n          <>\n            <section\n              className={`list is-${view}-view`}\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <header className=\"list__header\">\n                <Input\n                  className=\"list__input--title\"\n                  name=\"name\"\n                  type=\"text\"\n                  value={name}\n                  onChange={this.onChange}\n                  required={!isRestricted}\n                  hideLabel\n                  isReadOnly={isRestricted}\n                  onBlur={this.onBlur}\n                />\n                <PopoverWrapper\n                  classes={{\n                    wrapper: 'list__popover-wrapper',\n                    popover: 'list__popover'\n                  }}\n                  alignInner={isBoardView ? 'left' : 'right'}\n                  buttonProps={{\n                    size: 'medium',\n                    iconOnly: true,\n                    className: 'list__btn--more-actions',\n                    children: <Icon name=\"more-vertical\" />\n                  }}\n                >\n                  <Menu>\n                    <MenuItem>\n                      {!isRestricted && (\n                        <a href=\"\" onClick={this.handleListDelete}>\n                          Delete\n                        </a>\n                      )}\n                    </MenuItem>\n                  </Menu>\n                </PopoverWrapper>\n              </header>\n              <div className=\"list__content\">\n                <Tasks\n                  tasks={tasks}\n                  listId={listId}\n                  onTaskClick={onTaskClick}\n                  view={view}\n                />\n              </div>\n              {provided.placeholder}\n              {isBoardView ? (\n                <CardComposer\n                  listId={listId}\n                  listName={listName}\n                  projectId={projectId}\n                  projectName={projectName}\n                />\n              ) : (\n                <TaskComposer\n                  listId={listId}\n                  listName={listName}\n                  projectId={projectId}\n                  projectName={projectName}\n                />\n              )}\n            </section>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    tasks: taskSelectors.getListTasks(state, ownProps.taskIds),\n    projectName: projectSelectors.getProjectName(state, ownProps.projectId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteList: ({ listId, projectId }) => dispatch(listActions.deleteList({ listId, projectId }))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(List)\n);\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadCommentsById = commentsById => {\n  return {\n    type: types.LOAD_COMMENTS_BY_ID,\n    commentsById\n  };\n};\n\nexport const fetchCommentsById = () => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateCommentsById = comment => {\n  return {\n    type: types.UPDATE_COMMENTS_BY_ID,\n    comment\n  };\n};\n\nexport const fetchTaskComments = taskId => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .where('taskId', '==', taskId)\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserComments = userId => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .where('to', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addComment = ({ commentId, commentData }) => {\n  return {\n    type: types.ADD_COMMENT,\n    commentId,\n    commentData\n  };\n};\n\nexport const deleteComment = commentId => {\n  return {\n    type: types.DELETE_COMMENT,\n    commentId\n  };\n};\n\nexport const updateComment = ({ commentId, commentData }) => {\n  return {\n    type: types.UPDATE_COMMENT,\n    commentId,\n    commentData\n  };\n};\n","export const LOAD_COMMENTS_BY_ID = 'LOAD_COMMENTS_BY_ID';\nexport const FETCH_COMMENTS_BY_ID = 'FETCH_COMMENTS_BY_ID';\nexport const UPDATE_COMMENTS_BY_ID = 'UPDATE_COMMENTS_BY_ID';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const UPDATE_COMMENT = 'UPDATE_COMMENT';\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\n","export const getCommentsById = state => {\n  const { commentsById } = state;\n  return commentsById;\n};\n\nexport const getCommentsArray = (state, commentIds) => {\n  const { commentsById } = state;\n  if (!commentIds) return [];\n  return commentIds.map(commentId => {\n    return commentsById[commentId];\n  });\n};\n","import * as types from './types';\n\nconst commentsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_COMMENTS_BY_ID: {\n      const { commentsById } = action;\n      return {\n        ...state,\n        ...commentsById\n      };\n    }\n    case types.ADD_COMMENT: {\n      const { commentId, commentData } = action;\n      return {\n        ...state,\n        [commentId]: {\n          commentId,\n          ...commentData\n        }\n      };\n    }\n    case types.DELETE_COMMENT: {\n      const { commentId } = action;\n      const { [commentId]: deletedComment, ...restOfComments } = state;\n      return restOfComments;\n    }\n    case types.UPDATE_COMMENT: {\n      const { commentId, commentData } = action;\n      return {\n        ...state,\n        [commentId]: {\n          ...state[commentId],\n          ...commentData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default commentsById;\n","import React from 'react';\nimport './Toolbar.scss';\n\nconst Toolbar = ({ className, children, ...props }) => (\n  <div className={`toolbar ${className}`} {...props}>\n    {children}\n  </div>\n);\n\nToolbar.defaultProps = {\n  className: ''\n};\n\nexport default Toolbar;\n","import React, { Component } from 'react';\nimport { Icon } from '../Icon';\nimport { PopoverWrapper } from '../Popover';\n\nexport default class TaskEditorAssignMember extends Component {\n  render() {\n    const { children } = this.props;\n\n    return (\n      <PopoverWrapper\n        classes={{\n          wrapper: \"task-editor__popover-wrapper task-editor__member-search-popover-wrapper\",\n          popover: \"task-editor__popover task-editor__member-search-popover\"\n        }}\n        alignOuter=\"left\"\n        alignInner=\"left\"\n        buttonProps={{\n          size: 'md',\n          iconOnly: true,\n          className: 'task-editor__toolbar-btn',\n          children: <Icon name=\"users\" />,\n          buttonRef: this.props.buttonRef\n        }}\n      >\n        {children}\n      </PopoverWrapper>\n    );\n  }\n}\n","import React from 'react';\n\nconst TaskEditorSection = ({ size, children }) => (\n  <div className={`task-editor__section${size === 'sm' ? '--sm' : ''}`}>{children}</div>\n);\n\nTaskEditorSection.defaultProps = {\n  size: 'default'\n};\n\nexport default TaskEditorSection;\n","import React, { Component } from 'react';\n\nimport { Input } from '../Input';\nimport { Avatar } from '../Avatar';\nimport { Icon } from '../Icon';\nimport * as keys from '../../constants/keys';\nimport './MemberSearch.scss';\n\nexport default class MemberSearch extends Component {\n  state = {\n    query: '',\n    isActive: false,\n    isTouchEnabled: false,\n    selectedMember: '',\n    selectedIndex: null,\n    filteredList: this.props.users\n  };\n\n  componentDidMount() {\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick, false);\n    this.inputEl.focus();\n  }\n\n  handleOutsideClick = e => {\n    if (this.state.query !== '') return;\n    if (!this.memberSearchEl.contains(e.target)) {\n      this.setState({\n        isActive: false\n      });\n    }\n  };\n\n  handleTouch = () => {\n    this.setState({\n      isTouchEnabled: true\n    });\n    // remove touch handler to prevent unnecessary refires\n    document.removeEventListener('touchstart', this.handleTouch);\n    // remove outside click handler from click events\n    document.removeEventListener('click', this.handleOutsideClick);\n    // reattach outside click handler to touchstart events\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  matchUser = (user, query) => {\n    const { name, email, username } = user;\n    const regExp = new RegExp(query, 'i');\n    return regExp.test(name) || regExp.test(email) || regExp.test(username);\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({\n      query: '',\n      isActive: false,\n      isTouchEnabled: false,\n      selectedMember: '',\n      selectedIndex: null,\n      filteredList: this.props.users\n    });\n  };\n\n  onChange = e => {\n    const { users } = this.props;\n    const { selectedMember, selectedIndex } = this.state;\n    const query = e.target.value;\n    const filteredList = users.filter(user => this.matchUser(user, query));\n    const newIndex = filteredList.indexOf(selectedMember);\n    const persistSelectedMember = newIndex !== -1;\n\n    this.setState({\n      selectedMember: persistSelectedMember\n        ? selectedMember\n        : filteredList.length > 0\n        ? filteredList[0].userId\n        : '',\n      selectedIndex: persistSelectedMember ? newIndex : 0,\n      query,\n      filteredList\n    });\n  };\n\n  onKeyDown = e => {\n    if (\n      e.key !== keys.TAB &&\n      e.key !== keys.ARROW_DOWN &&\n      e.key !== keys.ARROW_UP &&\n      e.key !== keys.ENTER\n    )\n      return;\n\n    const { filteredList, selectedIndex, selectedMember } = this.state;\n    const { onMemberClick } = this.props;\n    const nextIndex =\n      selectedIndex === filteredList.length - 1 ? 0 : selectedIndex + 1;\n    const prevIndex =\n      selectedIndex === 0 ? filteredList.length - 1 : selectedIndex - 1;\n\n    // eslint-disable-next-line default-case\n    switch (e.key) {\n      case keys.ARROW_DOWN:\n      // eslint-disable-next-line no-fallthrough\n      case keys.TAB: {\n        this.setState({\n          selectedMember: filteredList[nextIndex].userId,\n          selectedIndex: nextIndex\n        });\n        break;\n      }\n      case keys.ARROW_UP: {\n        this.setState({\n          selectedMember: filteredList[prevIndex].userId,\n          selectedIndex: prevIndex\n        });\n        break;\n      }\n      case keys.ENTER: {\n        if (selectedMember === '') return;\n        onMemberClick(selectedMember);\n        break;\n      }\n    }\n\n    e.preventDefault();\n  };\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  render() {\n    const { users, onMemberClick, assignedMembers } = this.props;\n    const { query, isActive, filteredList, selectedMember } = this.state;\n\n    return (\n      <div\n        className=\"member-search__wrapper\"\n        ref={el => (this.memberSearchEl = el)}\n      >\n        <Input\n          name=\"query\"\n          className=\"member-search\"\n          onChange={this.onChange}\n          value={query}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          type=\"text\"\n          autoComplete=\"off\"\n          hideLabel\n          placeholder=\"Assign or remove member\"\n          onKeyDown={this.onKeyDown}\n          inputRef={el => (this.inputEl = el)}\n        />\n        {isActive && (\n          <ul className=\"member-search__list\">\n            {filteredList.length > 0 ? (\n              filteredList.map((user, i) => {\n                const { name, photoURL, email, username, userId } = user;\n                const isAssigned =\n                  assignedMembers && assignedMembers.indexOf(userId) !== -1;\n                return (\n                  <li\n                    className={`member-search__item ${\n                      selectedMember === userId ? 'is-selected' : ''\n                    }`}\n                    onClick={() => onMemberClick(userId)}\n                    key={userId}\n                    id={userId}\n                  >\n                    <Icon name={isAssigned ? 'user-minus' : 'user-plus'} />\n                    <Avatar\n                      classes={{\n                        avatar: 'member-search__avatar--sm',\n                        placeholder: 'member-search__avatar-placeholder--sm'\n                      }}\n                      fullName={name}\n                      size=\"sm\"\n                      variant=\"circle\"\n                      imgSrc={photoURL}\n                    />\n                    <span className=\"member-search__info member-search__name\">\n                      {name}\n                    </span>\n                    <span className=\"member-search__info member-search__username\">\n                      {username}\n                    </span>\n                    <span className=\"member-search__info member-search__email\">\n                      {email}\n                    </span>\n                  </li>\n                );\n              })\n            ) : (\n              <li className=\"member-search__item\">\n                <span className=\"member-search__no-match\">\n                  No matches found\n                </span>\n              </li>\n            )}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\n\nconst TaskEditorMoreActions = ({ onMenuClick }) => (\n  <PopoverWrapper\n    classes={{\n      wrapper: 'task-editor__popover-wrapper',\n      popover: 'task-editor__popover'\n    }}\n    alignOuter=\"right\"\n    alignInner=\"right\"\n    buttonProps={{\n      size: 'md',\n      iconOnly: true,\n      className: 'task-editor__toolbar-btn',\n      children: <Icon name=\"more-horizontal\" />\n    }}\n  >\n    <Menu onClick={onMenuClick}>\n      <MenuItem>\n        <a href=\"\" data-action=\"delete\">\n          Delete task\n        </a>\n      </MenuItem>\n    </Menu>\n  </PopoverWrapper>\n);\n\nexport default TaskEditorMoreActions;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Checkbox } from '../Checkbox';\nimport { Textarea } from '../Textarea';\nimport { withFirebase } from '../Firebase';\nimport * as keys from '../../constants/keys';\nimport './Subtask.scss';\n\nconst appRoot = document.getElementById('root');\n\nclass Subtask extends Component {\n  constructor(props) {\n    super(props);\n    this.portal = document.createElement('div');\n    this.state = {\n      name: this.props.name\n    }\n  }\n\n  componentDidMount() {\n    appRoot.appendChild(this.portal);\n  }\n\n  onDragStart = e => {\n    console.log('dragstart');\n    this.setState({\n      isReadOnly: true\n    });\n  };\n\n  onChange = e => {\n    this.setState({\n      name: e.target.value\n    });\n  };\n\n  onBlur = () => {\n    const { name, firebase, subtaskId } = this.props;\n    const { name: newName } = this.state;\n    if (name !== newName) {\n      firebase.updateSubtask(subtaskId, {\n        name: newName\n      });\n    }\n  };\n\n  deleteSubtask = e => {\n    if (e.target.value !== '' || e.key !== keys.BACKSPACE) return;\n    const { subtaskId, taskId, firebase } = this.props;\n    firebase.deleteSubtask({ subtaskId, taskId });\n  };\n\n  toggleCompleted = () => {\n    const { subtaskId, isCompleted, firebase } = this.props;\n    firebase.updateSubtask(subtaskId, {\n      isCompleted: !isCompleted,\n      completedAt: !isCompleted ? firebase.getTimestamp() : null\n    });\n  };\n\n  componentWillUnmount() {\n    appRoot.removeChild(this.portal);\n  }\n\n  render() {\n    const {\n      subtaskId,\n      index,\n      isCompleted\n    } = this.props;\n\n    const { name } = this.state;\n\n    return (\n      <Draggable draggableId={subtaskId} index={index}>\n        {(provided, snapshot) => {\n          const inner = (\n            <li\n              className=\"subtask\"\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <Checkbox\n                id={`cb-${subtaskId}`}\n                value={subtaskId}\n                name={subtaskId}\n                isChecked={isCompleted}\n                onChange={this.toggleCompleted}\n                className=\"subtask__checkbox\"\n                labelClass=\"subtask__checkbox-label\"\n              />\n              <Textarea\n                value={name}\n                onChange={this.onChange}\n                onBlur={this.onBlur}\n                name={subtaskId}\n                className=\"subtask__textarea\"\n                onKeyDown={this.deleteSubtask}\n                onDragStart={this.onDragStart}\n              />\n            </li>\n          );\n          return snapshot.isDragging\n            ? ReactDOM.createPortal(inner, this.portal)\n            : inner;\n        }}\n      </Draggable>\n    );\n  }\n}\n\nexport default withFirebase(Subtask);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { withFirebase } from '../Firebase';\nimport { Subtask } from '../Subtask';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { subtaskActions, subtaskSelectors } from '../../ducks/subtasks';\nimport { getSelectedProjectId } from '../../ducks/selectedProject';\nimport './Subtasks.scss';\n\nclass Subtasks extends Component {\n  state = {\n    isFetching: !this.props.selectedProjectId || !this.props.projectId\n  };\n\n  componentDidMount() {\n    const {\n      firebase,\n      fetchTaskSubtasks,\n      addSubtask,\n      updateSubtask,\n      deleteSubtask,\n      taskId,\n      projectId,\n      selectedProjectId\n    } = this.props;\n    if (!selectedProjectId || !projectId) {\n      fetchTaskSubtasks(taskId).then(() => {\n        this.setState({\n          isFetching: false\n        });\n      });\n    }\n    this.subtaskObserver = firebase.db\n      .collection('subtasks')\n      .where('taskId', '==', taskId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const subtaskId = change.doc.id;\n          const subtaskData = change.doc.data();\n          if (change.type === 'added') {\n            addSubtask({ subtaskId, subtaskData });\n          }\n          if (change.type === 'modified') {\n            updateSubtask({ subtaskId, subtaskData });\n          }\n          if (change.type === 'removed') {\n            deleteSubtask(subtaskId);\n          }\n        });\n      });\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.subtasks.includes(undefined)) {\n      return false;\n    }\n    return true;\n  }\n\n  moveSubtask = ({ destination, draggableId, source }) => {\n    if (!destination) return;\n    if (destination.index === source.index) return;\n    const { firebase, subtaskIds } = this.props;\n    const updatedSubtaskIds = [...subtaskIds];\n    updatedSubtaskIds.splice(source.index, 1);\n    updatedSubtaskIds.splice(destination.index, 0, draggableId);\n    firebase.updateTask(source.droppableId, {\n      subtaskIds: updatedSubtaskIds\n    });\n  };\n\n  componentWillUnmount() {\n    this.subtaskObserver();\n  }\n\n  render() {\n    const { taskId, subtasks } = this.props;\n    const { isFetching } = this.state;\n    return (\n      <DragDropContext onDragEnd={this.moveSubtask}>\n        <Droppable droppableId={taskId} type={droppableTypes.SUBTASK}>\n          {provided => (\n            <ul\n              className=\"subtasks\"\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {!isFetching &&\n                subtasks.map((subtask, index) => {\n                  return (\n                    <Subtask\n                      subtaskId={subtask.subtaskId}\n                      taskId={taskId}\n                      index={index}\n                      name={subtask.name}\n                      isCompleted={subtask.isCompleted}\n                      key={subtask.subtaskId}\n                    />\n                  );\n                })}\n              {provided.placeholder}\n            </ul>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    subtasks: subtaskSelectors.getSubtasksArray(state, ownProps.subtaskIds),\n    selectedProjectId: getSelectedProjectId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchTaskSubtasks: taskId =>\n      dispatch(subtaskActions.fetchTaskSubtasks(taskId)),\n    addSubtask: ({ subtaskId, subtaskData }) =>\n      dispatch(subtaskActions.addSubtask({ subtaskId, subtaskData })),\n    deleteSubtask: subtaskId =>\n      dispatch(subtaskActions.deleteSubtask(subtaskId)),\n    updateSubtask: ({ subtaskId, subtaskData }) =>\n      dispatch(subtaskActions.updateSubtask({ subtaskId, subtaskData }))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Subtasks)\n);\n","/* eslint-disable no-nested-ternary */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/users';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { commentActions, commentSelectors } from '../../ducks/comments';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { Avatar } from '../Avatar';\nimport { dateUtils } from '../Calendar';\nimport './TaskEditorComment.scss';\n\nclass TaskEditorComment extends Component {\n  state = {\n    secondsElapsed: 0\n  };\n\n  componentDidMount() {\n    const { createdAt } = this.props.comment;\n    const secondsSinceCreation =\n      Math.floor(Date.now() / 1000) -\n      Math.floor(createdAt.toDate().getTime() / 1000);\n\n    this.setState({\n      secondsElapsed: secondsSinceCreation\n    });\n\n    this.interval = setInterval(this.tick, 1000);\n  }\n\n  tick = () => {\n    this.setState(prevState => ({\n      secondsElapsed: prevState.secondsElapsed + 1\n    }));\n  };\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  handleLikeClick = () => {\n    const { handleLike, comment } = this.props;\n    const { commentId } = comment;\n    handleLike(commentId);\n  };\n\n  render() {\n    const { user, comment } = this.props;\n    const { secondsElapsed } = this.state;\n    const { name, photoURL } = user;\n    const {\n      content,\n      createdAt,\n      lastUpdatedAt,\n      likes,\n      to,\n      from,\n      isPinned\n    } = comment;\n    if (!createdAt) return null;\n    const dateCreated = createdAt.toDate();\n    const timeCreated = dateCreated.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true\n    });\n    const dateCreatedString = dateUtils.toDateString(dateCreated, {\n      useRelative: true,\n      format: {\n        weekday: 'short',\n        month: 'short',\n        day: 'numeric',\n        year: '2-digit'\n      }\n    });\n    return (\n      <div\n        className={`task-editor__comment-wrapper ${\n          isPinned ? 'is-pinned' : ''\n        }`}\n      >\n        <Avatar\n          classes={{\n            avatar: 'task-editor__comment-avatar',\n            placeholder: 'task-editor__comment-avatar-placeholder'\n          }}\n          fullName={name}\n          size=\"sm\"\n          variant=\"circle\"\n          imgSrc={photoURL}\n        />\n        <div className=\"task-editor__comment\">\n          <div className=\"task-editor__comment-header\">\n            <div className=\"task-editor__comment-details\">\n              <span className=\"task-editor__name\">{name}</span>\n              <span className=\"task-editor__timestamp\">\n                {secondsElapsed < 60 // less than one minute\n                  ? 'Just now'\n                  : secondsElapsed < 120 // less than 2 minutes\n                  ? '1 minute ago'\n                  : secondsElapsed < 3600 // less than 1 hour\n                  ? `${Math.floor(secondsElapsed / 60)} minutes ago`\n                  : secondsElapsed < 7200 // less than 2 hours\n                  ? '1 hour ago'\n                  : secondsElapsed < 21600 // less than 6 hours\n                  ? `${Math.floor(secondsElapsed / 3600)} hours ago`\n                  : `${dateCreatedString} at ${timeCreated}`}\n              </span>\n            </div>\n            <Button\n              className=\"task-editor__likes\"\n              onClick={this.handleLikeClick}\n              size=\"sm\"\n            >\n              <Icon name=\"thumbs-up\" />\n              <span className=\"task-editor__likes-counter\">\n                {likes.length > 0 ? likes.length : ''}\n              </span>\n            </Button>\n          </div>\n          <div className=\"task-editor__comment-body\">{content}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state, ownProps.comment.from)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateTasksById: task => dispatch(taskActions.updateTasksById(task)),\n    fetchTaskComments: taskId =>\n      dispatch(commentActions.fetchTaskComments(taskId)),\n    addComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.addComment({ commentId, commentData })),\n    deleteComment: commentId =>\n      dispatch(commentActions.deleteComment(commentId)),\n    updateComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.updateComment({ commentId, commentData }))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TaskEditorComment)\n);\n","import React, { Component } from 'react';\nimport { Radio } from '../Radio';\nimport './ColorPicker.scss';\n\nexport default class ColorPicker extends Component {\n  state = {\n    selectedColor: 'default'\n  };\n\n  handleColorChange = e => {\n    const { selectColor } = this.props;\n    this.setState({\n      selectedColor: e.target.value\n    });\n    selectColor(e.target.value);\n  };\n\n  render() {\n    const { style } = this.props;\n    const { selectedColor } = this.state;\n    return (\n      <div className=\"color-picker\" style={style}>\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--default'\n          }}\n          name=\"tagColor\"\n          id=\"colorDefault\"\n          value=\"default\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'default'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--red'\n          }}\n          name=\"tagColor\"\n          id=\"colorRed\"\n          value=\"red\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'red'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--pink'\n          }}\n          name=\"tagColor\"\n          id=\"colorPink\"\n          value=\"pink\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'pink'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--grape'\n          }}\n          name=\"tagColor\"\n          id=\"colorGrape\"\n          value=\"grape\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'grape'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--violet'\n          }}\n          name=\"tagColor\"\n          id=\"colorViolet\"\n          value=\"violet\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'violet'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--indigo'\n          }}\n          name=\"tagColor\"\n          id=\"colorIndigo\"\n          value=\"indigo\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'indigo'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--blue'\n          }}\n          name=\"tagColor\"\n          id=\"colorBlue\"\n          value=\"blue\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'blue'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--cyan'\n          }}\n          name=\"tagColor\"\n          id=\"colorCyan\"\n          value=\"cyan\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'cyan'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--teal'\n          }}\n          name=\"tagColor\"\n          id=\"colorTeal\"\n          value=\"teal\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'teal'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--green'\n          }}\n          name=\"tagColor\"\n          id=\"colorGreen\"\n          value=\"green\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'green'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--yellow'\n          }}\n          name=\"tagColor\"\n          id=\"colorYellow\"\n          value=\"yellow\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'yellow'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--orange'\n          }}\n          name=\"tagColor\"\n          id=\"colorOrange\"\n          value=\"orange\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'orange'}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Tag } from '../Tag';\nimport { Input } from '../Input';\nimport { ColorPicker } from '../ColorPicker';\nimport * as keys from '../../constants/keys';\nimport './TagsInput.scss';\n\nexport default class TagsInput extends Component {\n  state = {\n    value: '',\n    isActive: false,\n    isTouchEnabled: false,\n    selectedTag: '',\n    focusedTag: '',\n    selectedIndex: null,\n    hasExactMatch: null,\n    filteredList: []\n  };\n\n  componentDidMount() {\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick, false);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.assignedTags.indexOf(undefined) !== -1) {\n      return false;\n    }\n    return true;\n  }\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  onFocus = () => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = () => {\n    this.setState({\n      selectedTag: '',\n      selectedIndex: null\n    });\n  };\n\n  resetForm = () => {\n    this.setState({\n      value: '',\n      selectedTag: '',\n      selectedIndex: null,\n      hasExactMatch: null,\n      focusedTag: '',\n      filteredList: []\n    });\n  };\n\n  matchTag = (tag, value) => {\n    const { text } = tag;\n    const regExp = new RegExp(value, 'i');\n    return regExp.test(text);\n  };\n\n  onChange = e => {\n    const { tagSuggestions } = this.props;\n    const { selectedTag, selectedIndex } = this.state;\n    const { value } = e.target;\n    const filteredList = tagSuggestions.filter(tag =>\n      this.matchTag(tag, value)\n    );\n    const hasExactMatch =\n      filteredList.findIndex(item => item.text === value) !== -1;\n    const newIndex = filteredList.indexOf(selectedTag);\n    const persistSelectedTag = newIndex !== -1;\n\n    this.setState({\n      selectedTag: persistSelectedTag\n        ? selectedTag\n        : filteredList.length > 0\n        ? filteredList[0].text\n        : '',\n      selectedIndex: persistSelectedTag ? newIndex : 0,\n      value,\n      filteredList: hasExactMatch\n        ? filteredList\n        : [...filteredList, { text: value, color: 'default' }],\n      hasExactMatch\n    });\n  };\n\n  onKeyDown = e => {\n    if (\n      e.key !== keys.TAB &&\n      e.key !== keys.ARROW_DOWN &&\n      e.key !== keys.ARROW_UP &&\n      e.key !== keys.ENTER &&\n      e.key !== keys.BACKSPACE\n    )\n      return;\n\n    const { filteredList, selectedIndex, selectedTag, value, focusedTag } = this.state;\n    const { addTag, removeTag, assignedTags } = this.props;\n    const nextIndex =\n      selectedIndex === filteredList.length - 1 || selectedIndex === null\n        ? 0\n        : selectedIndex + 1;\n    const prevIndex =\n      selectedIndex === 0 ? filteredList.length - 1 : selectedIndex - 1;\n\n    // eslint-disable-next-line default-case\n    switch (e.key) {\n      case keys.ARROW_DOWN:\n      // eslint-disable-next-line no-fallthrough\n      case keys.TAB: {\n        this.setState({\n          selectedTag: filteredList[nextIndex].text,\n          selectedIndex: nextIndex\n        });\n        break;\n      }\n      case keys.ARROW_UP: {\n        this.setState({\n          selectedTag: filteredList[prevIndex].text,\n          selectedIndex: prevIndex\n        });\n        break;\n      }\n      case keys.ENTER: {\n        if (selectedTag === '' && value === '') return;\n        this.resetForm();\n        addTag(selectedTag === '' ? value : selectedTag);\n        break;\n      }\n      case keys.BACKSPACE: {\n        if (value !== '') return;\n        if (focusedTag === '') {\n        this.setState({\n          focusedTag: assignedTags[assignedTags.length - 1].text\n        });\n      } else {\n        this.resetForm();\n        removeTag(focusedTag);\n      }\n      }\n    }\n    e.preventDefault();\n  };\n\n  handleOutsideClick = e => {\n    if (this.el.contains(e.target)) return;\n\n    this.setState({\n      isActive: false\n    });\n  };\n\n  handleTouch = () => {\n    this.setState({\n      isTouchEnabled: true\n    });\n    // remove touch handler to prevent unnecessary refires\n    document.removeEventListener('touchstart', this.handleTouch);\n    // remove outside click handler from click events\n    document.removeEventListener('click', this.handleOutsideClick);\n    // reattach outside click handler to touchstart events\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  handleTagDelete = tag => {\n    const { removeTag } = this.props;\n    this.resetForm();\n    removeTag(tag);\n  };\n\n  render() {\n    const {\n      isColorPickerActive,\n      assignedTags,\n      setTagColor,\n      currentTag,\n      removeTag\n    } = this.props;\n    const {\n      value,\n      isActive,\n      filteredList,\n      selectedTag,\n      hasExactMatch,\n      focusedTag\n    } = this.state;\n\n    const hasTags = assignedTags && assignedTags.length > 0;\n\n    const colorPickerStyle = {};\n    if (this.currentTagEl) {\n      const {\n        offsetLeft,\n        offsetWidth,\n        offsetTop,\n        offsetHeight\n      } = this.currentTagEl;\n      colorPickerStyle.left = offsetLeft + offsetWidth / 2 - 74; // 74 = 1/2 colorPicker width\n      colorPickerStyle.top = offsetTop + offsetHeight + 9; // 9 = colorPicker arrow height\n    }\n\n    return (\n      <div className={`tags__container ${isActive ? 'is-active' : ''} ${!hasTags ? 'no-tags' : ''}`} ref={el => (this.el = el)}>\n        {assignedTags.map(tag => (\n          <Tag\n            key={tag.text}\n            color={tag.color}\n            size=\"md\"\n            text={tag.text}\n            onDelete={() => this.handleTagDelete(tag.text)}\n            className={focusedTag === tag.text ? 'is-focused' : ''}\n            tagRef={\n              currentTag === tag.text ? el => (this.currentTagEl = el) : null\n            }\n          />\n        ))}\n        <div className=\"tags-input__wrapper\">\n          <Input\n            className=\"tags-input\"\n            onChange={this.onChange}\n            onBlur={this.onBlur}\n            value={value}\n            onFocus={this.onFocus}\n            type=\"text\"\n            autoComplete=\"off\"\n            onKeyDown={this.onKeyDown}\n            hideLabel\n          />\n          {isActive && (\n            <ul className=\"tags-input__list\">\n              {filteredList.map((item, i) => {\n                return (\n                  <li\n                    key={item.text}\n                    className={`tags-input__item ${\n                      selectedTag === item.text ? 'is-selected' : ''\n                    } ${\n                      !hasExactMatch && i === filteredList.length - 1\n                        ? 'tags-input__item--new'\n                        : ''\n                    }`}\n                  >\n                    {!hasExactMatch && i === filteredList.length - 1 ? (\n                      <>\n                        <h4 className=\"tags-input__item--heading\">New Tag</h4>\n                        <span className=\"tags-input__item--text\">\n                          {item.text}\n                        </span>\n                      </>\n                    ) : (\n                      <Tag text={item.text} color={item.color} size=\"sm\" />\n                    )}\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n        </div>\n        {isActive && isColorPickerActive && (\n          <ColorPicker\n            isActive={isColorPickerActive}\n            selectColor={setTagColor}\n            style={colorPickerStyle}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Calendar, dateUtils } from '../Calendar';\nimport { Button } from '../Button';\nimport { Input } from '../Input';\nimport './DatePicker.scss';\n\nexport default class DatePicker extends Component {\n  state = {\n    today: {\n      day: new Date().getDate(),\n      month: new Date().getMonth(),\n      year: new Date().getFullYear()\n    },\n    selectedDate: this.props.selectedDate,\n    currentMonth: this.props.currentMonth,\n    currentYear: this.props.currentYear,\n    dateString: dateUtils.toSimpleDateString(this.props.selectedDate) || ''\n  };\n\n  componentDidMount() {}\n\n  selectDate = date => {\n    if (typeof date === 'string') {\n      const newDate = dateUtils.toSimpleDateObj(date);\n      const { month, year } = newDate;\n      const { currentMonth, currentYear } = this.state;\n      this.setState({\n        selectedDate: newDate\n      });\n      if (month !== currentMonth || year !== currentYear) {\n        this.setCurrentMonth({ month, year });\n      }\n    } else {\n      this.setState({\n        selectedDate: date,\n        dateString: dateUtils.toSimpleDateString(date)\n      });\n    }\n  };\n\n  setCurrentMonth = ({ month, year }) => {\n    this.setState({\n      currentMonth: month,\n      currentYear: year\n    });\n  };\n\n  setCurrentYear = year => {\n    this.setState({\n      currentYear: year\n    });\n  };\n\n  updateDateString = e => {\n    const { value } = e.target;\n    this.setState({\n      dateString: value\n    });\n    if (dateUtils.isSDSFormat(value)) {\n      this.selectDate(value);\n    }\n  };\n\n  setDate = () => {\n    const { selectedDate: currentDueDate, selectDate, onClose } = this.props;\n    const { selectedDate } = this.state;\n    if (\n      !(currentDueDate === null && selectedDate === null) &&\n      !dateUtils.isSameDate(currentDueDate, selectedDate)\n    ) {\n      const { day, month, year } = selectedDate;\n      const date = new Date(year, month, day);\n      selectDate(date);\n    }\n    onClose();\n  };\n\n  clearDueDate = () => {\n    const { selectedDate, selectDate } = this.props;\n    this.selectDate(null);\n    if (selectedDate !== null) {\n      selectDate(null);\n    }\n  };\n\n  render() {\n    const { onClose, isActive, innerRef } = this.props;\n    const {\n      today,\n      selectedDate,\n      currentMonth,\n      currentYear,\n      dateString\n    } = this.state;\n    return (\n      <div className=\"date-picker\" ref={innerRef} style={{display: !isActive ? 'none' : 'block'}}>\n        <div className=\"date-picker__header\">\n          <div className=\"date-picker__due-date-wrapper\">\n            <Input\n              name=\"dueDate\"\n              type=\"text\"\n              label=\"Due Date\"\n              value={dateString}\n              onChange={this.updateDateString}\n              className=\"date-picker__input--due-date\"\n              labelClass=\"date-picker__label--due-date\"\n              placeholder=\"mm-dd-yy\"\n              maxLength={8}\n            />\n          </div>\n        </div>\n        <Calendar\n          classes={{\n            calendar: 'date-picker__calendar',\n            weekDay: 'date-picker__week-day'\n          }}\n          month={currentMonth}\n          year={currentYear}\n          selectedDate={selectedDate}\n          today={today}\n          onDayClick={this.selectDate}\n          onMonthClick={this.setCurrentMonth}\n          onYearClick={this.setCurrentYear}\n        />\n        <div className=\"date-picker__footer\">\n          <Button\n            size=\"sm\"\n            variant=\"text\"\n            color=\"neutral\"\n            className=\"date-picker__btn--clear\"\n            onClick={this.clearDueDate}\n          >\n            Clear\n          </Button>\n          <Button\n            size=\"sm\"\n            variant=\"contained\"\n            color=\"primary\"\n            className=\"date-picker__btn--set-due-date\"\n            onClick={this.setDate}\n          >\n            Done\n          </Button>\n          <Button\n            size=\"sm\"\n            variant=\"text\"\n            color=\"neutral\"\n            className=\"date-picker__btn--cancel\"\n            onClick={onClose}\n          >\n            Cancel\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport './TaskEditorPane.scss';\n\nconst TaskEditorPane = ({ onClose, onClick, children }) => (\n  <div className=\"task-editor-pane\" onClick={onClick}>\n    <Button\n      type=\"button\"\n      className=\"task-editor-pane__btn--close\"\n      onClick={onClose}\n      iconOnly\n    >\n      <Icon name=\"x\" />\n  </Button>\n  { children }\n  </div>\n);\n\nexport default TaskEditorPane;","import React from 'react';\nimport './ProjectIcon.scss';\n\nconst ProjectIcon = ({className, color}) => (\n  <span className={`project-icon bg--${color} ${className}`} />\n);\n\nProjectIcon.defaultProps = {\n  className: '',\n  color: 'default'\n};\n\nexport default ProjectIcon;","/* eslint-disable no-nested-ternary */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withFirebase } from '../Firebase';\nimport {\n  currentUserActions,\n  currentUserSelectors\n} from '../../ducks/currentUser';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { subtaskActions, subtaskSelectors } from '../../ducks/subtasks';\nimport { userSelectors } from '../../ducks/users';\nimport { commentActions, commentSelectors } from '../../ducks/comments';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { Modal } from '../Modal';\nimport { Toolbar } from '../Toolbar';\nimport { Avatar } from '../Avatar';\nimport TaskEditorAssignMember from './TaskEditorAssignMember';\nimport TaskEditorSection from './TaskEditorSection';\nimport { MemberSearch } from '../MemberSearch';\nimport TaskEditorMoreActions from './TaskEditorMoreActions';\nimport * as keys from '../../constants/keys';\nimport { Subtasks } from '../Subtasks';\nimport TaskEditorComment from './TaskEditorComment';\nimport { TagsInput } from '../TagsInput';\nimport './TaskEditor.scss';\nimport { projectSelectors } from '../../ducks/projects';\nimport { DatePicker } from '../DatePicker';\nimport { dateUtils } from '../Calendar';\nimport TaskEditorPane from './TaskEditorPane';\nimport { ProjectIcon } from '../ProjectIcon';\n\nconst TaskEditorWrapper = ({\n  view,\n  handleTaskEditorClose,\n  handleClick,\n  children\n}) => {\n  return view === 'board' ? (\n    <Modal\n      onModalClose={handleTaskEditorClose}\n      classes={{ content: 'task-editor', button: 'task-editor__btn--close' }}\n      onModalClick={handleClick}\n      size=\"lg\"\n      id=\"taskEditor\"\n    >\n      {children}\n    </Modal>\n  ) : (\n    <TaskEditorPane onClose={handleTaskEditorClose} onClick={handleClick}>\n      {children}\n    </TaskEditorPane>\n  );\n};\n\n/*\n  TODO: Break up logic in child components\n  */\n\nclass TaskEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: this.props.commentIds && this.props.commentIds.length > 0,\n      name: this.props.name,\n      notes: this.props.notes,\n      newSubtask: '',\n      newComment: '',\n      currentFocus: null,\n      isColorPickerActive: false,\n      currentTag: null,\n      isDatePickerActive: false,\n      prevProps: {\n        name: this.props.name,\n        notes: this.props.notes\n      }\n    };\n    this.membersListButton = React.createRef();\n  }\n\n  componentDidMount() {\n    const {\n      taskId,\n      firebase,\n      fetchTaskComments,\n      addComment,\n      deleteComment,\n      updateComment\n    } = this.props;\n\n    console.log(taskId);\n    fetchTaskComments(taskId).then(() => {\n      this.setState({\n        isFetching: false\n      });\n    });\n\n    this.commentObserver = firebase.db\n      .collection('comments')\n      .where('taskId', '==', taskId)\n      .onSnapshot(snapshot => {\n        snapshot.docChanges().forEach(change => {\n          const commentId = change.doc.id;\n          const commentData = change.doc.data();\n          if (change.type === 'added') {\n            addComment({ commentId, commentData });\n          }\n          if (change.type === 'modified') {\n            updateComment({ commentId, commentData });\n          }\n          if (change.type === 'removed') {\n            deleteComment(commentId);\n          }\n        });\n      });\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.name !== state.prevProps.name) {\n      return {\n        name: props.name,\n        prevProps: {\n          ...state.prevProps,\n          name: props.name\n        }\n      };\n    }\n    if (props.notes !== state.prevProps.notes) {\n      return {\n        notes: props.notes,\n        prevProps: {\n          ...state.prevProps,\n          notes: props.notes\n        }\n      };\n    }\n    return null;\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  deleteTask = () => {\n    const { taskId, listId, handleTaskEditorClose, deleteTask } = this.props;\n    deleteTask({ taskId, listId });\n    handleTaskEditorClose();\n  };\n\n  onBlur = e => {\n    const taskKey = e.target.name;\n    const { [taskKey]: currentValue, taskId, firebase } = this.props;\n    const { [taskKey]: updatedValue } = this.state;\n\n    // When field loses focus, update task if change is detected\n\n    if (updatedValue !== currentValue) {\n      firebase.updateTask(taskId, {\n        [taskKey]: updatedValue\n      });\n      console.log('updated task!');\n    }\n\n    this.setState({\n      currentFocus: null\n    });\n  };\n\n  addComment = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { userId, firebase, taskId, projectId } = this.props;\n    const { newComment: content } = this.state;\n    firebase.addComment({ userId, content, taskId, projectId });\n    this.resetForm('newComment');\n    e.preventDefault();\n  };\n\n  resetForm = key => {\n    this.setState({\n      [key]: ''\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      currentFocus: e.target.name\n    });\n  };\n\n  handleClick = e => {\n    const { currentFocus } = this.state;\n    if (\n      (currentFocus === 'newComment' &&\n        !this.commentFormEl.contains(e.target)) ||\n      (currentFocus === 'newSubtask' &&\n        !this.newSubtaskFormEl.contains(e.target))\n    ) {\n      this.setState({\n        currentFocus: null\n      });\n    }\n  };\n\n  handleMoreActions = e => {\n    if (!e.target.matches('a')) return;\n    const { action } = e.target.dataset;\n    switch (action) {\n      case 'delete':\n        this.deleteTask();\n        break;\n    }\n    e.preventDefault(); // prevents page reload\n  };\n\n  handleCommentLike = commentId => {\n    const { firebase, userId, commentsById } = this.props;\n    const { likes } = commentsById[commentId];\n\n    if (likes.indexOf(userId) === -1) {\n      firebase.updateComment(commentId, {\n        likes: firebase.addToArray(userId)\n      });\n    } else {\n      firebase.updateComment(commentId, {\n        likes: firebase.removeFromArray(userId)\n      });\n    }\n  };\n\n  assignMember = userId => {\n    const { taskId, projectId, assignedTo, firebase } = this.props;\n\n    if (assignedTo.includes(userId)) {\n      console.log(projectId);\n      if (!projectId) return;\n      const folderId = this.props.folders[userId];\n      firebase.removeAssignee({ taskId, userId, folderId });\n    } else {\n      firebase.addAssignee({ taskId, projectId, userId });\n    }\n  };\n\n  toggleColorPicker = value => {\n    this.setState({\n      isColorPickerActive: value\n    });\n  };\n\n  addTag = text => {\n    console.log(text);\n    const {\n      firebase,\n      currentUser,\n      projectTags,\n      taskId,\n      projectId,\n      addTag\n    } = this.props;\n    const { userId, tags: userTags } = currentUser;\n    const isProjectTag = projectTags && text in projectTags;\n    const isUserTag = userTags && text in userTags;\n    const tagData = isProjectTag\n      ? projectTags[text]\n      : isUserTag\n      ? userTags[text]\n      : { projectId, text };\n\n    firebase\n      .addTag({\n        userId,\n        taskId,\n        projectId,\n        ...tagData\n      })\n      .then(() => {\n        if (!isUserTag && !isProjectTag) {\n          this.setState({\n            currentTag: text\n          });\n          this.toggleColorPicker(true);\n        }\n      });\n  };\n\n  setTagColor = color => {\n    const { userId, projectId, firebase } = this.props;\n    const { currentTag: tag } = this.state;\n    firebase.setTagColor({ userId, projectId, tag, color });\n  };\n\n  removeTag = tag => {\n    const { taskId, firebase } = this.props;\n    firebase.removeTag({ taskId, tag });\n    this.toggleColorPicker(false);\n  };\n\n  setDueDate = date => {\n    const { firebase, taskId } = this.props;\n\n    firebase.updateTask(taskId, {\n      dueDate: date\n    });\n  };\n\n  toggleDatePicker = () => {\n    this.setState(prevState => ({\n      isDatePickerActive: !prevState.isDatePickerActive\n    }));\n  };\n\n  addSubtask = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { userId, firebase, taskId, projectId } = this.props;\n    console.log({ userId, projectId });\n    const { newSubtask: name } = this.state;\n    firebase.addSubtask({ userId, name, taskId, projectId });\n    this.resetForm('newSubtask');\n    e.preventDefault();\n  };\n\n  componentWillUnmount() {\n    this.commentObserver();\n  }\n\n  render() {\n    const {\n      handleTaskEditorClose,\n      taskId,\n      commentIds,\n      assignedTo,\n      commentsArray,\n      usersArray,\n      membersArray,\n      currentUser,\n      taskTags,\n      mergedTags,\n      dueDate,\n      subtaskIds,\n      projectId,\n      completedSubtasks,\n      view,\n      projectName,\n      listName,\n      projectColor\n    } = this.props;\n    const {\n      name,\n      notes,\n      newComment,\n      currentFocus,\n      newSubtask,\n      subtasks,\n      isFetching,\n      isColorPickerActive,\n      isDatePickerActive,\n      currentTag\n    } = this.state;\n    const hasSubtasks = subtaskIds && subtaskIds.length > 0;\n    const hasComments = commentIds && commentIds.length > 0;\n    const isAssigned = !!assignedTo && assignedTo.length > 0;\n    const isNewCommentInvalid = newComment === '';\n    const isNewSubtaskInvalid = newSubtask === '';\n    const commentFormIsFocused = currentFocus === 'newComment';\n    const newSubtaskFormIsFocused = currentFocus === 'newSubtask';\n    const taskDueDate = dueDate\n      ? dateUtils.getSimpleDate(dueDate.toDate())\n      : dateUtils.getSimpleDate(new Date());\n    const dueDateStr = dueDate\n      ? dateUtils.toDateString(dueDate.toDate(), {\n          useRelative: true,\n          format: { month: 'short', day: 'numeric' }\n        })\n      : null;\n    const isDueToday = dueDateStr === 'Today';\n    const isDueTmrw = dueDateStr === 'Tomorrow';\n    const isPastDue = dueDate && dateUtils.isPriorDate(dueDate.toDate());\n\n    return (\n      <TaskEditorWrapper\n        handleTaskEditorClose={handleTaskEditorClose}\n        handleClick={this.handleClick}\n        view={view}\n      >\n        <Toolbar className=\"task-editor__toolbar\">\n          {projectId && (\n            <TaskEditorAssignMember buttonRef={this.membersListButton}>\n              <MemberSearch\n                users={usersArray}\n                assignedMembers={assignedTo}\n                onMemberClick={this.assignMember}\n              />\n            </TaskEditorAssignMember>\n          )}\n          <TaskEditorMoreActions onMenuClick={this.handleMoreActions} />\n        </Toolbar>\n        <form\n          name=\"editTaskForm\"\n          onFocus={this.onFocus}\n          className=\"task-editor__edit-task-form\"\n        >\n          <Textarea\n            className=\"task-editor__textarea--title\"\n            name=\"name\"\n            value={name}\n            onChange={this.onChange}\n            required\n            onBlur={this.onBlur}\n            onFocus={this.onFocus}\n          />\n          {projectId && (\n            <TaskEditorSection>\n              <div className=\"task-editor__project-name\">\n                <ProjectIcon\n                  color={projectColor}\n                  className=\"task-editor__project-icon\"\n                />\n                {projectName}\n              </div>\n              <div className=\"task-editor__list-name\">\n                <Icon name=\"chevron-right\" />\n                {listName}\n              </div>\n            </TaskEditorSection>\n          )}\n          <TaskEditorSection>\n            <Button\n              onClick={this.toggleDatePicker}\n              type=\"button\"\n              className={`task-editor__btn--due-date ${\n                isDatePickerActive ? 'is-active' : ''\n              }`}\n            >\n              <span className=\"task-editor__due-date-icon\">\n                <Icon name=\"calendar\" />\n              </span>\n              <span className=\"task-editor__due-date-wrapper\">\n                {!dueDate ? (\n                  <span className=\"task-editor__no-due-date\">Set due date</span>\n                ) : (\n                  <>\n                    <span className=\"task-editor__section-title--sm\">\n                      Due Date\n                    </span>\n                    <span\n                      className={`task-editor__due-date ${\n                        isDueToday\n                          ? 'is-due-today'\n                          : isDueTmrw\n                          ? 'is-due-tmrw'\n                          : isPastDue\n                          ? 'is-past-due'\n                          : ''\n                      }`}\n                    >\n                      {dueDateStr}\n                    </span>\n                  </>\n                )}\n              </span>\n            </Button>\n            <DatePicker\n              innerRef={el => (this.datePickerEl = el)}\n              onClose={this.toggleDatePicker}\n              selectedDate={dueDate ? taskDueDate : null}\n              currentMonth={taskDueDate.month}\n              currentYear={taskDueDate.year}\n              selectDate={this.setDueDate}\n              isActive={isDatePickerActive}\n            />\n          </TaskEditorSection>\n          <TaskEditorSection>\n            <div className=\"task-editor__section-icon\">\n              <Icon name=\"user\" />\n            </div>\n            {isAssigned && (\n              <div className=\"task-editor__members\">\n                {membersArray.map(member => {\n                  const { name, photoURL, userId } = member;\n                  return (\n                    <Avatar\n                      classes={{\n                        avatar: 'task-editor__avatar',\n                        placeholder: 'task-editor__avatar-placeholder'\n                      }}\n                      fullName={name}\n                      size=\"sm\"\n                      variant=\"circle\"\n                      imgSrc={photoURL}\n                      key={userId}\n                    />\n                  );\n                })}\n              </div>\n            )}\n            {projectId && (\n              <Button\n                type=\"button\"\n                className=\"task-editor__btn--add-member\"\n                onClick={() => this.membersListButton.current.click()}\n              >\n                <Icon name=\"plus\" />\n              </Button>\n            )}\n          </TaskEditorSection>\n          <TaskEditorSection>\n            <div className=\"task-editor__section-icon\">\n              <Icon name=\"tag\" />\n            </div>\n            <TagsInput\n              addTag={this.addTag}\n              tagSuggestions={mergedTags}\n              assignedTags={taskTags}\n              isColorPickerActive={isColorPickerActive}\n              setTagColor={this.setTagColor}\n              removeTag={this.removeTag}\n              currentTag={currentTag}\n            />\n          </TaskEditorSection>\n          <TaskEditorSection>\n            <div className=\"task-editor__section-icon\">\n              <Icon name=\"edit-3\" />\n            </div>\n            <Textarea\n              className=\"task-editor__textarea task-editor__textarea--description\"\n              name=\"notes\"\n              value={notes}\n              onChange={this.onChange}\n              placeholder=\"Add a description\"\n              onBlur={this.onBlur}\n              onFocus={this.onFocus}\n            />\n          </TaskEditorSection>\n        </form>\n        <TaskEditorSection>\n          <div className=\"task-editor__section-header\">\n            <div className=\"task-editor__section-icon\">\n              <Icon name=\"check-square\" />\n            </div>\n            <h3 className=\"task-editor__section-title\">\n              {hasSubtasks && (\n                <span className=\"task-editor__section-detail\">\n                  {completedSubtasks.length}/{subtaskIds.length}\n                </span>\n              )}\n              Subtasks\n            </h3>\n            <hr className=\"task-editor__hr\" />\n          </div>\n          {hasSubtasks && (\n            <Subtasks\n              taskId={taskId}\n              subtaskIds={subtaskIds}\n              projectId={projectId}\n            />\n          )}\n          <div className=\"task-editor__section-icon\">\n            {newSubtaskFormIsFocused ? (\n              <div className=\"task-editor__checkbox\" />\n            ) : (\n              <Icon name=\"plus-circle\" />\n            )}\n          </div>\n          <form\n            name=\"newSubtaskForm\"\n            className={`task-editor__new-subtask-form ${\n              currentFocus === 'newSubtask' ? 'is-focused' : ''\n            }`}\n            ref={el => (this.newSubtaskFormEl = el)}\n            onSubmit={this.addSubtask}\n          >\n            <Textarea\n              className=\"task-editor__textarea task-editor__textarea--new-subtask\"\n              name=\"newSubtask\"\n              value={newSubtask}\n              onChange={this.onChange}\n              placeholder=\"Add a subtask\"\n              onFocus={this.onFocus}\n              onKeyDown={this.addSubtask}\n            />\n            {currentFocus === 'newSubtask' && (\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isNewSubtaskInvalid}\n                onClick={this.addSubtask}\n                className=\"task-editor__btn--add-subtask\"\n              >\n                Add subtask\n              </Button>\n            )}\n          </form>\n        </TaskEditorSection>\n        <TaskEditorSection>\n          <div className=\"task-editor__section-header\">\n            <div className=\"task-editor__section-icon\">\n              <Icon name=\"message-circle\" />\n            </div>\n            <h3 className=\"task-editor__section-title\">\n              {hasComments && (\n                <span className=\"task-editor__section-detail\">\n                  {commentIds.length}\n                </span>\n              )}\n              {hasComments && commentIds.length === 1 ? 'Comment' : 'Comments'}\n            </h3>\n            <hr className=\"task-editor__hr\" />\n          </div>\n\n          {!isFetching && hasComments && (\n            <div className=\"task-editor__comments\">\n              {commentsArray.map(comment => {\n                const { commentId } = comment;\n                return (\n                  <TaskEditorComment\n                    key={commentId}\n                    comment={comment}\n                    handleLike={this.handleCommentLike}\n                  />\n                );\n              })}\n            </div>\n          )}\n          <Avatar\n            classes={{\n              avatar: 'task-editor__avatar',\n              placeholder: 'task-editor__avatar-placeholder'\n            }}\n            fullName={currentUser.name}\n            size=\"sm\"\n            variant=\"circle\"\n            imgSrc={currentUser.photoURL}\n          />\n          <form\n            name=\"commentForm\"\n            className={`task-editor__comment-form ${\n              commentFormIsFocused ? 'is-focused' : ''\n            }`}\n            ref={el => (this.commentFormEl = el)}\n            onSubmit={this.addComment}\n          >\n            <Textarea\n              className=\"task-editor__textarea task-editor__textarea--comment\"\n              name=\"newComment\"\n              value={newComment}\n              onChange={this.onChange}\n              placeholder=\"Write a comment...\"\n              onFocus={this.onFocus}\n              onKeyDown={this.addComment}\n            />\n            {commentFormIsFocused && (\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isNewCommentInvalid}\n                onClick={this.addComment}\n                name=\"newCommentSubmit\"\n                className=\"task-editor__btn--submit-comment\"\n              >\n                Send\n              </Button>\n            )}\n          </form>\n        </TaskEditorSection>\n      </TaskEditorWrapper>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentUser: currentUserSelectors.getCurrentUser(state),\n    commentsArray: commentSelectors.getCommentsArray(\n      state,\n      ownProps.commentIds\n    ),\n    commentsById: commentSelectors.getCommentsById(state),\n    usersArray: userSelectors.getUsersArray(state),\n    membersArray: userSelectors.getMembersArray(state, ownProps.assignedTo),\n    taskTags: taskSelectors.getTaskTags(state, ownProps),\n    mergedTags: currentUserSelectors.getMergedTags(state),\n    projectTags: projectSelectors.getProjectTags(state, ownProps.projectId),\n    completedSubtasks: subtaskSelectors.getCompletedSubtasks(\n      state,\n      ownProps.subtaskIds\n    ),\n    projectColor: projectSelectors.getProjectColor(state, ownProps.projectId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteTask: ({ taskId, listId }) =>\n      dispatch(taskActions.deleteTask({ taskId, listId })),\n    fetchTaskComments: taskId =>\n      dispatch(commentActions.fetchTaskComments(taskId)),\n    syncTaskComments: taskId =>\n      dispatch(commentActions.syncTaskComments(taskId)),\n    addComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.addComment({ commentId, commentData })),\n    deleteComment: commentId =>\n      dispatch(commentActions.deleteComment(commentId)),\n    updateComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.updateComment({ commentId, commentData })),\n    addTag: (taskId, tag) => dispatch(taskActions.addTag(taskId, tag))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TaskEditor)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { withFirebase } from '../Firebase';\nimport { projectActions, projectSelectors } from '../../ducks/projects';\nimport {\n  selectTask as selectTaskAction,\n  getSelectedTaskId\n} from '../../ducks/selectedTask';\nimport {\n  selectProject as selectProjectAction,\n  getSelectedProjectId\n} from '../../ducks/selectedProject';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { subtaskActions, subtaskSelectors } from '../../ducks/subtasks';\nimport Board from './Board';\nimport { Input } from '../Input';\nimport { List } from '../List';\nimport { TaskEditor } from '../TaskEditor';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { utils } from '../../utils';\nimport './Board.scss';\n\nclass BoardContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: true,\n      isTaskEditorOpen: false,\n      projectName: this.props.projectName\n    };\n  }\n\n  componentDidMount() {\n    const {\n      firebase,\n      updateProject,\n      updateProjectTags,\n      projectId,\n      project,\n      addSubtask,\n      updateSubtask,\n      deleteSubtask,\n      selectProject,\n      selectedProjectId,\n      fetchProjectContent,\n      syncProjectLists,\n      syncProjectTasks\n    } = this.props;\n\n    if (selectedProjectId !== projectId) {\n      selectProject(projectId);\n    }\n\n    fetchProjectContent(projectId).then(() => {\n      this.setState({\n        isFetching: false\n      });\n\n      const { subtasksById } = this.props;\n\n      this.listObserver = () => syncProjectLists(projectId);\n      this.listObserver();\n\n      this.taskObserver = () => syncProjectTasks(projectId);\n      this.taskObserver();\n\n      this.projectObserver = firebase\n        .getProjectDoc(projectId)\n        .onSnapshot(snapshot => {\n          const updatedProject = snapshot.data();\n          if (!utils.isEqual(updatedProject.tags, project.tags)) {\n            updateProjectTags(projectId, updatedProject.tags);\n          } else {\n            updateProject(projectId, updatedProject);\n          }\n        });\n\n      this.subtaskObserver = firebase.db\n        .collection('subtasks')\n        .where('projectId', '==', projectId)\n        .onSnapshot(querySnapshot => {\n          querySnapshot.docChanges().forEach(change => {\n            const subtaskId = change.doc.id;\n            const subtaskData = change.doc.data();\n            if (change.type === 'added') {\n              if (subtaskId in subtasksById) return;\n              addSubtask({ subtaskId, subtaskData });\n            }\n            if (change.type === 'modified') {\n              updateSubtask({ subtaskId, subtaskData });\n            }\n            if (change.type === 'removed') {\n              deleteSubtask(subtaskId);\n            }\n          });\n        });\n    });\n    console.log('mounted');\n  }\n\n  componentWillUnmount() {\n    const { selectProject } = this.props;\n    selectProject(null);\n    this.projectObserver();\n    this.listObserver();\n    this.taskObserver();\n    this.subtaskObserver();\n  }\n\n  onDragStart = () => {\n    this.setState({\n      isDragging: true\n    });\n  };\n\n  onDragEnd = ({ destination, draggableId, source, type }) => {\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    const { firebase } = this.props;\n    if (type === droppableTypes.TASK) {\n      const { listsById } = this.props;\n      const isMovedWithinList = source.droppableId === destination.droppableId;\n      const updatedTaskIds = [...listsById[destination.droppableId].taskIds];\n      if (isMovedWithinList) {\n        updatedTaskIds.splice(source.index, 1);\n        updatedTaskIds.splice(destination.index, 0, draggableId);\n        firebase.updateList(source.droppableId, {\n          taskIds: updatedTaskIds\n        });\n      } else {\n        updatedTaskIds.splice(destination.index, 0, draggableId);\n        firebase.moveTaskToList({\n          taskId: draggableId,\n          origListId: source.droppableId,\n          newListId: destination.droppableId,\n          updatedTaskIds\n        });\n      }\n    }\n\n    if (type === droppableTypes.LIST) {\n      const { projectsById, projectId, reorderLists } = this.props;\n      const updatedListIds = [...projectsById[projectId].listIds];\n      updatedListIds.splice(source.index, 1);\n      updatedListIds.splice(destination.index, 0, draggableId);\n      firebase.updateProject(projectId, {\n        listIds: updatedListIds\n      });\n      reorderLists(projectId, updatedListIds);\n    }\n  };\n\n  toggleTaskEditor = () => {\n    const { isTaskEditorOpen } = this.state;\n    if (isTaskEditorOpen) {\n      const { selectTask } = this.props;\n      selectTask(null);\n    }\n    this.setState(prevState => ({\n      isTaskEditorOpen: !prevState.isTaskEditorOpen\n    }));\n  };\n\n  handleTaskClick = taskId => {\n    const { selectTask } = this.props;\n    selectTask(taskId);\n    this.toggleTaskEditor();\n  };\n\n  onNameChange = e => {\n    this.setState({\n      projectName: e.target.value\n    });\n  };\n\n  onNameBlur = e => {\n    const { projectName, projectId, firebase } = this.props;\n    const { projectName: newProjectName } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newProjectName !== projectName) {\n      firebase.updateProjectName({ projectId, name: newProjectName });\n      console.log('updated project name!');\n    }\n  };\n\n  render() {\n    const { isFetching, isTaskEditorOpen, projectName } = this.state;\n    const { lists, tasksById, projectId, userId, selectedTaskId } = this.props;\n    if (isFetching) return null;\n    return (\n      <main className=\"board-container\">\n        <Input\n          className=\"board__input--title\"\n          name=\"projectName\"\n          type=\"text\"\n          value={projectName}\n          onChange={this.onNameChange}\n          required\n          hideLabel\n          onBlur={this.onNameBlur}\n        />\n        <DragDropContext\n          onDragEnd={this.onDragEnd}\n          onDragStart={this.onDragStart}\n        >\n          <Board projectId={projectId}>\n            {lists.map((list, listIndex) => {\n              const { listId, name: listName, taskIds } = list;\n              return (\n                <List\n                  listId={listId}\n                  key={listId}\n                  listIndex={listIndex}\n                  name={listName}\n                  taskIds={taskIds}\n                  isFetchingTasks={isFetching}\n                  onTaskClick={this.handleTaskClick}\n                  projectId={projectId}\n                  view=\"board\"\n                  isRestricted={false}\n                />\n              );\n            })}\n          </Board>\n        </DragDropContext>\n        {isTaskEditorOpen && (\n          <TaskEditor\n            {...tasksById[selectedTaskId]}\n            handleTaskEditorClose={this.toggleTaskEditor}\n            userId={userId}\n            view=\"board\"\n          />\n        )}\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    projectsById: projectSelectors.getProjectsById(state),\n    selectedProjectId: getSelectedProjectId(state),\n    selectedTaskId: getSelectedTaskId(state),\n    listsById: listSelectors.getListsById(state),\n    lists: listSelectors.getSelectedProjectLists(state),\n    subtasksById: subtaskSelectors.getSubtasksById(state),\n    tasksById: taskSelectors.getTasksById(state),\n    project: projectSelectors.getProject(state, ownProps.projectId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchProjectContent: projectId =>\n      dispatch(projectActions.fetchProjectContent(projectId)),\n    updateProject: (projectId, projectData) =>\n      dispatch(projectActions.updateProject(projectId, projectData)),\n    selectProject: projectId => dispatch(selectProjectAction(projectId)),\n    selectTask: taskId => dispatch(selectTaskAction(taskId)),\n    fetchListsById: projectId =>\n      dispatch(listActions.fetchListsById(projectId)),\n    updateList: ({ listId, listData }) =>\n      dispatch(listActions.updateList(listId, listData)),\n    fetchProjectTasks: projectId =>\n      dispatch(taskActions.fetchProjectTasks(projectId)),\n    fetchProjectSubtasks: projectId =>\n      dispatch(subtaskActions.fetchProjectSubtasks(projectId)),\n    reorderLists: (projectId, listIds) =>\n      dispatch(projectActions.reorderLists(projectId, listIds)),\n    updateProjectTags: (projectId, tags) =>\n      dispatch(projectActions.updateProjectTags(projectId, tags)),\n    addSubtask: ({ subtaskId, subtaskData }) =>\n      dispatch(subtaskActions.addSubtask({ subtaskId, subtaskData })),\n    deleteSubtask: subtaskId =>\n      dispatch(subtaskActions.deleteSubtask(subtaskId)),\n    updateSubtask: ({ subtaskId, subtaskData }) =>\n      dispatch(subtaskActions.updateSubtask({ subtaskId, subtaskData })),\n    syncProjectLists: projectId =>\n      dispatch(listActions.syncProjectLists(projectId)),\n    syncProjectTasks: projectId =>\n      dispatch(taskActions.syncProjectTasks(projectId))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardContainer)\n);\n","import React from 'react';\nimport './Main.scss';\n\nconst Main = ({ classes, children, title }) => (\n  <main className={`main ${classes.main || ''}`}>\n    <h1 className={`main__title ${classes.title || ''}`}>{title}</h1>\n    {children}\n  </main>\n);\n\nMain.defaultProps = {\n  classes: {\n    main: '',\n    title: ''\n  }\n};\n\nexport default Main;\n","import React from 'react';\nimport { Icon } from '../Icon';\n\nconst DashboardPanel = ({ name, icon, children, size }) => (\n  <section className={`dashboard__section dashboard__section--${size}`}>\n    <h2 className=\"dashboard__section-header\">\n      <Icon name={icon} className=\"dashboard__section-icon\" />\n      {name}\n    </h2>\n    {children}\n  </section>\n);\n\nDashboardPanel.defaultProps = {\n  size: 'lg'\n};\n\nexport default DashboardPanel;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withFirebase } from '../Firebase';\nimport DashboardPanel from './DashboardPanel';\nimport { Task } from '../Task';\nimport {\n  currentUserActions,\n  currentUserSelectors\n} from '../../ducks/currentUser';\n\nclass TasksDueSoon extends Component {\n  state = {\n    isFetching: true\n  };\n\n  componentDidMount() {\n    const {\n      currentUserId,\n      fetchTasksDueWithinDays,\n      addTaskDueSoon,\n      deleteTaskDueSoon,\n      updateTaskDueSoon,\n      firebase\n    } = this.props;\n    fetchTasksDueWithinDays(currentUserId, 7).then(() => {\n      this.setState({\n        isFetching: false\n      });\n    });\n\n    const startingDate = new Date();\n    const timeStart = startingDate.setHours(0, 0, 0, 0);\n    const endingDate = new Date(startingDate);\n    const timeEnd = endingDate.setDate(endingDate.getDate() + 7);\n\n    this.taskObserver = firebase.db\n      .collection('tasks')\n      .where('assignedTo', 'array-contains', currentUserId)\n      .where('dueDate', '<=', timeEnd)\n      .orderBy('dueDate', 'asc')\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const taskId = change.doc.id;\n          const taskData = change.doc.data();\n          if (change.type === 'added') {\n            console.log('added task');\n            addTaskDueSoon({ taskId, taskData });\n          } else if (change.type === 'removed') {\n            deleteTaskDueSoon(taskId);\n          } else {\n            updateTaskDueSoon({ taskId, taskData });\n          }\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.taskObserver();\n  }\n\n  render() {\n    const { isFetching } = this.state;\n    const { tasksDueSoon, onTaskClick } = this.props;\n    if (isFetching) return null;\n    return (\n      <DashboardPanel icon=\"check-square\" size=\"md\" name=\"Tasks Due Soon\">\n        {tasksDueSoon.map((task, i) => (\n          <Task\n            index={i}\n            key={task.taskId}\n            onTaskClick={onTaskClick}\n            {...task}\n          />\n        ))}\n      </DashboardPanel>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentUserId: currentUserSelectors.getCurrentUserId(state),\n    tasksDueSoon: currentUserSelectors.getTasksDueSoonArr(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchTasksDueWithinDays: (userId, days) =>\n      dispatch(currentUserActions.fetchTasksDueWithinDays(userId, days)),\n    addTaskDueSoon: ({ taskId, taskData }) =>\n      dispatch(currentUserActions.addTaskDueSoon({ taskId, taskData })),\n    updateTaskDueSoon: ({ taskId, taskData }) =>\n      dispatch(currentUserActions.updateTaskDueSoon({ taskId, taskData })),\n    deleteTaskDueSoon: taskId =>\n      dispatch(currentUserActions.deleteTaskDueSoon(taskId))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TasksDueSoon)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport {\n  selectTask as selectTaskAction,\n  getSelectedTaskId\n} from '../../ducks/selectedTask';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport { ProjectGridContainer } from '../ProjectGrid';\nimport TasksDueSoon from './TasksDueSoon';\nimport DashboardPanel from './DashboardPanel';\nimport { TaskEditor } from '../TaskEditor';\nimport './Dashboard.scss';\n\nclass Dashboard extends Component {\n  state = {\n    isTaskEditorOpen: false\n  };\n\n  toggleTaskEditor = () => {\n    const { isTaskEditorOpen } = this.state;\n    if (isTaskEditorOpen) {\n      const { selectTask } = this.props;\n      selectTask(null);\n    }\n    this.setState(prevState => ({\n      isTaskEditorOpen: !prevState.isTaskEditorOpen\n    }));\n  };\n\n  handleTaskClick = taskId => {\n    const { selectTask } = this.props;\n    selectTask(taskId);\n    this.toggleTaskEditor();\n  };\n\n  render() {\n    const {\n      tasksDueSoon,\n      toggleProjectComposer,\n      userId,\n      selectedTaskId\n    } = this.props;\n    const { isTaskEditorOpen } = this.state;\n    return (\n      <main className=\"dashboard\">\n        <h1 className=\"dashboard__header\">Home</h1>\n        <TasksDueSoon onTaskClick={this.handleTaskClick} />\n        <DashboardPanel name=\"Notifications\" icon=\"bell\" size=\"sm\" />\n        <DashboardPanel name=\"Projects\" icon=\"grid\">\n          <ProjectGridContainer openProjectComposer={toggleProjectComposer} />\n        </DashboardPanel>\n        {isTaskEditorOpen && (\n          <TaskEditor\n            {...tasksDueSoon[selectedTaskId]}\n            handleTaskEditorClose={this.toggleTaskEditor}\n            userId={userId}\n            view=\"board\"\n          />\n        )}\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    selectedTaskId: getSelectedTaskId(state),\n    tasksDueSoon: currentUserSelectors.getTasksDueSoonById(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectTask: taskId => dispatch(selectTaskAction(taskId))\n  };\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Dashboard)\n);\n","import React from 'react';\n\nconst ExpansionPanelHeader = ({ children, className, onClick }) => {\n  return (\n    <div>\n      <div\n        className={`expansion-panel__header ${className}`}\n        role=\"button\"\n        onClick={onClick}\n        tabIndex={0}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n\nExpansionPanelHeader.defaultProps = {\n  className: ''\n};\n\nexport default ExpansionPanelHeader;\n","import React from 'react';\n\nconst ExpansionPanelContent = ({ className, children }) => {\n  return <div className={className}>{children}</div>;\n};\n\nExpansionPanelContent.defaultProps = {\n  className: ''\n};\n\nexport default ExpansionPanelContent;\n","import React, { Component } from 'react';\nimport ExpansionPanelHeader from './ExpansionPanelHeader';\nimport ExpansionPanelContent from './ExpansionPanelContent';\n\nexport default class ExpansionPanel extends Component {\n  static defaultProps = {\n    classes: {\n      panel: '',\n      header: '',\n      content: ''\n    },\n    isExpanded: null,\n    onChange: null,\n    id: null\n  };\n\n  state = {\n    isExpanded: false\n  };\n\n  toggleContent = () => {\n    const { onChange, id } = this.props;\n\n    if (!onChange) {\n      this.setState(prevProps => ({\n        isExpanded: !prevProps.isExpanded\n      }));\n    } else {\n      onChange(id);\n    }\n  };\n\n  render() {\n    const { classes, header, content, isExpanded: propsIsExpanded } = this.props;\n    const isExpanded = propsIsExpanded !== null ? propsIsExpanded : this.state.isExpanded;\n\n    return (\n      <div\n        className={`accordion-panel ${classes.panel || ''}`}\n        aria-expanded={isExpanded}\n      >\n        <ExpansionPanelHeader onClick={this.toggleContent} className={classes.header || ''}>\n          {header}\n        </ExpansionPanelHeader>\n        {isExpanded && (\n          <ExpansionPanelContent className={classes.content || ''}>\n            {content}\n          </ExpansionPanelContent>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { TaskComposer } from '../TaskComposer';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\nimport { Input } from '../Input';\nimport { Tasks } from '../Tasks';\nimport { ExpansionPanel } from '../ExpansionPanel';\nimport './Folder.scss';\n\nclass Folder extends Component {\n  state = {\n    name: this.props.name\n  };\n\n  render() {\n    const { tasks, onTaskClick, folderId, index, isRestricted } = this.props;\n    const { name } = this.state;\n    return (\n      <Draggable\n        draggableId={folderId}\n        index={index}\n        isDragDisabled={isRestricted}\n      >\n        {provided => (\n          <>\n            <section\n              className=\"folder\"\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <header className=\"folder__header\">\n                <Input\n                  className=\"folder__input--title\"\n                  name=\"name\"\n                  type=\"text\"\n                  value={name}\n                  onChange={this.onChange}\n                  required={!isRestricted}\n                  hideLabel\n                  isReadOnly={isRestricted}\n                  onBlur={this.onBlur}\n                />\n                <PopoverWrapper\n                  classes={{\n                    wrapper: 'folder__popover-wrapper',\n                    popover: 'folder__popover'\n                  }}\n                  alignInner=\"right\"\n                  buttonProps={{\n                    size: 'medium',\n                    iconOnly: true,\n                    className: 'folder__btn--more-actions',\n                    children: <Icon name=\"more-vertical\" />\n                  }}\n                >\n                  <Menu>\n                    <MenuItem />\n                  </Menu>\n                </PopoverWrapper>\n              </header>\n              <div className=\"folder__content\">\n                <Tasks\n                  tasks={tasks}\n                  listId={null}\n                  folderId={folderId}\n                  onTaskClick={onTaskClick}\n                  view=\"list\"\n                />\n              </div>\n              {provided.placeholder}\n              <TaskComposer\n                listId={null}\n                listName={null}\n                projectId={null}\n                projectName={null}\n                folderId={folderId}\n              />\n            </section>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    tasks: taskSelectors.getFolderTasks(state, ownProps.taskIds)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Folder);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport {\n  currentUserActions,\n  currentUserSelectors\n} from '../../ducks/currentUser';\nimport { taskSelectors, taskActions } from '../../ducks/tasks';\nimport {\n  selectTask as selectTaskAction,\n  getSelectedTaskId\n} from '../../ducks/selectedTask';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { Folder } from '../Folder';\nimport { Main } from '../Main';\nimport { TaskEditor } from '../TaskEditor';\nimport './UserTasks.scss';\n\nclass UserTasks extends Component {\n  state = {\n    isFetching: true,\n    isTaskEditorOpen: false\n  };\n\n  componentDidMount() {\n    const {\n      userId,\n      fetchFolders,\n      fetchUserTasks,\n      syncUserTasks,\n      syncFolders\n    } = this.props;\n    fetchFolders(userId);\n    fetchUserTasks(userId).then(() => {\n      this.setState({\n        isFetching: false\n      });\n\n      this.taskObserver = () => syncUserTasks(userId);\n      this.taskObserver();\n    });\n\n    this.folderObserver = () => syncFolders(userId);\n    this.folderObserver();\n  }\n\n  componentWillUnmount() {\n    this.taskObserver();\n    this.folderObserver();\n  }\n\n  toggleTaskEditor = () => {\n    const { isTaskEditorOpen } = this.state;\n    const { selectTask } = this.props;\n\n    if (isTaskEditorOpen) {\n      selectTask(null);\n    }\n\n    this.setState(prevState => ({\n      isTaskEditorOpen: !prevState.isTaskEditorOpen\n    }));\n  };\n\n  handleTaskClick = taskId => {\n    const { selectTask } = this.props;\n    const { isTaskEditorOpen } = this.state;\n    selectTask(taskId);\n    if (!isTaskEditorOpen) {\n      this.toggleTaskEditor();\n    }\n  };\n\n  onDragEnd = ({ destination, draggableId, source, type }) => {\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    const { firebase, currentUserId } = this.props;\n    if (type === droppableTypes.TASK) {\n      const { foldersById } = this.props;\n      const { droppableId: origFolderId, index: origIndex } = source;\n      const { droppableId: newFolderId, index: newIndex } = destination;\n      const isMovedWithinFolder = origFolderId === newFolderId;\n      const updatedTaskIds = [...foldersById[newFolderId].taskIds];\n      if (isMovedWithinFolder) {\n        updatedTaskIds.splice(origIndex, 1);\n        updatedTaskIds.splice(newIndex, 0, draggableId);\n        firebase.updateDoc(`users/${currentUserId}/folders/${newFolderId}`, {\n          taskIds: updatedTaskIds\n        });\n      } else {\n        updatedTaskIds.splice(newIndex, 0, draggableId);\n        firebase.moveTaskToFolder({\n          userId: currentUserId,\n          taskId: draggableId,\n          origFolderId,\n          newFolderId,\n          updatedTaskIds\n        });\n      }\n    }\n\n    if (type === droppableTypes.FOLDER) {\n      const { folderIds, reorderFolders } = this.props;\n      const updatedFolderIds = [...folderIds];\n      updatedFolderIds.splice(source.index, 1);\n      updatedFolderIds.splice(destination.index, 0, draggableId);\n      firebase.updateDoc(`users/${currentUserId}`, {\n        folderIds: updatedFolderIds\n      });\n      reorderFolders(currentUserId, updatedFolderIds);\n    }\n  };\n\n  onDragStart = () => {\n    this.setState({\n      isDragging: true\n    });\n  };\n\n  render() {\n    const { filters, userId, selectedTaskId, tasksById, folders } = this.props;\n    const { isFetching, isTaskEditorOpen } = this.state;\n    if (isFetching) return null;\n    return (\n      <Main title=\"All Tasks\">\n        <div\n          className={`user-tasks__wrapper ${\n            isTaskEditorOpen ? 'show-task-editor' : ''\n          }`}\n        >\n          <DragDropContext\n            onDragEnd={this.onDragEnd}\n            onDragStart={this.onDragStart}\n          >\n            <Droppable droppableId={userId} type={droppableTypes.FOLDER}>\n              {provided => (\n                <div\n                  className=\"user-tasks\"\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                >\n                  {folders.map((folder, i) => (\n                    <Folder\n                      key={folder.folderId}\n                      userId={userId}\n                      folderId={folder.folderId}\n                      index={i}\n                      name={folder.name}\n                      taskIds={folder.taskIds}\n                      onTaskClick={this.handleTaskClick}\n                      isRestricted={folder.isDefault}\n                    />\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n          {isTaskEditorOpen && (\n            <TaskEditor\n              {...tasksById[selectedTaskId]}\n              handleTaskEditorClose={this.toggleTaskEditor}\n              userId={userId}\n              view=\"list\"\n              key={selectedTaskId}\n            />\n          )}\n        </div>\n      </Main>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUserId: currentUserSelectors.getCurrentUserId(state),\n    foldersById: currentUserSelectors.getFolders(state),\n    folders: currentUserSelectors.getFoldersArray(state),\n    folderIds: currentUserSelectors.getFolderIds(state),\n    tasksById: taskSelectors.getTasksById(state),\n    selectedTaskId: getSelectedTaskId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    syncFolders: userId => dispatch(currentUserActions.syncFolders(userId)),\n    selectTask: taskId => dispatch(selectTaskAction(taskId)),\n    syncUserTasks: userId => dispatch(taskActions.syncUserTasks(userId)),\n    fetchFolders: userId => dispatch(currentUserActions.fetchFolders(userId)),\n    fetchUserTasks: userId => dispatch(taskActions.fetchUserTasks(userId)),\n    reorderFolders: (userId, folderIds) =>\n      dispatch(currentUserActions.reorderFolders(userId, folderIds))\n  };\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(UserTasks)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { withAuthorization } from '../../components/Session';\nimport * as ROUTES from '../../constants/routes';\nimport { userActions } from '../../ducks/users';\nimport { ProjectGridContainer } from '../../components/ProjectGrid';\nimport { ProjectComposer } from '../../components/ProjectComposer';\nimport { BoardContainer } from '../../components/Board';\nimport { projectActions, projectSelectors } from '../../ducks/projects';\nimport { Main } from '../../components/Main';\nimport { Dashboard } from '../../components/Dashboard';\nimport { UserTasks } from '../../components/UserTasks';\nimport './Home.scss';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isProjectComposerOpen: false,\n      isFetching: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      fetchUsersById,\n      fetchProjectsById,\n      updateUser,\n      userId,\n      firebase\n    } = this.props;\n    console.log('mounted home');\n    fetchUsersById()\n      .then(() => fetchProjectsById(userId))\n      .then(() =>\n        this.setState({\n          isFetching: false\n        })\n      );\n    this.userObserver = firebase.getUserDoc(userId).onSnapshot(snapshot => {\n      const userData = snapshot.data();\n      updateUser({ userId, userData });\n    });\n  }\n\n  toggleProjectComposer = () => {\n    this.setState(prevState => ({\n      isProjectComposerOpen: !prevState.isProjectComposerOpen\n    }));\n  };\n\n  createProject = name => {\n    const { userId, firebase } = this.props;\n    firebase.addProject({ userId, name });\n  };\n\n  render() {\n    const { isProjectComposerOpen, isFetching } = this.state;\n    if (isFetching) return null;\n    const { userId, projectsById } = this.props;\n    return (\n      <>\n        {isProjectComposerOpen && (\n          <ProjectComposer\n            onClose={this.toggleProjectComposer}\n            handleSubmit={this.createProject}\n          />\n        )}\n        <Switch>\n          <Route\n            exact\n            path={ROUTES.HOME}\n            render={props => (\n              <Dashboard\n                toggleProjectComposer={this.toggleProjectComposer}\n                {...props}\n              />\n            )}\n          />\n          <Route\n            path={ROUTES.PROJECT}\n            render={props => (\n              <BoardContainer\n                userId={userId}\n                projectId={props.match.params.id}\n                projectName={projectsById[props.match.params.id].name}\n                {...props}\n              />\n            )}\n          />\n          <Route\n            path={ROUTES.USER_PROJECTS}\n            render={props => (\n              <Main title=\"Projects\">\n                <ProjectGridContainer\n                  userId={userId}\n                  openProjectComposer={this.toggleProjectComposer}\n                  {...props}\n                />\n              </Main>\n            )}\n          />\n          <Route\n            path={ROUTES.USER_TASKS}\n            render={props => <UserTasks userId={userId} {...props} />}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    projectsById: projectSelectors.getProjectsById(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUser: ({ userId, userData }) =>\n      dispatch(userActions.updateUser({ userId, userData })),\n    fetchUsersById: () => dispatch(userActions.fetchUsersById()),\n    fetchProjectsById: userId =>\n      dispatch(projectActions.fetchProjectsById(userId))\n  };\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(HomePage)\n);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../../components/Firebase';\nimport { Input } from '../../components/Input';\nimport { Button } from '../../components/Button';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .passwordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n    const isInvalid = passwordOne === '' || passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"passwordOne\"\n          label=\"New Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          label=\"Confirm New Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Change My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React from 'react';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport { PasswordChangeForm } from '../PasswordChange';\nimport { AuthUserContext, withAuthorization } from '../../components/Session';\nimport './Account.scss';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <main className=\"account\">\n        <h1>Account: {authUser.email}</h1>\n        <section className=\"account__section\">\n        <h2>Forgot your password?</h2>\n          <PasswordForgetForm />\n        </section>\n        <section className=\"account__section\">\n        <h2>Change your password.</h2>\n          <PasswordChangeForm />\n        </section>\n      </main>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(AccountPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../../components/Session';\nimport { userActions, userSelectors } from '../../ducks/users';\nimport './Admin.scss';\n\nclass AdminPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      users: {}\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    /*\n    this.props.firebase.users().on('value', snapshot => {\n      this.setState({\n        users: snapshot.val(),\n        loading: false\n      });\n    });\n    */\n  }\n\n  componentWillUnmount() {\n    /*\n    this.props.firebase.users().off();\n    */\n  }\n\n  render() {\n    return (\n      <main className=\"admin\">\n        <h1>Admin</h1>\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentUser: userSelectors.getCurrentUserData(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsersById: () => dispatch(userActions.fetchUsersById())\n  };\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(AdminPage)\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { Icon } from '../Icon';\nimport './Logo.scss';\n\nconst Logo = ({ size, className, onClick }) => {\n  return (\n    <div className={`logo logo--${size} ${className}`}>\n      <Link className=\"logo__link\" to={ROUTES.LANDING} onClick={onClick}>\n        <span className=\"logo__text\">workflow</span>\n      </Link>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React, { Component } from 'react';\nimport './Navbar.scss';\nimport { Logo } from '../Logo';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\n\nexport default class Navbar extends Component {\n  static defaultProps = {\n    minWidth: 768,\n    classes: {\n      navbar: '',\n      links: ''\n    }\n  };\n\n  state = {\n    viewportWidth: window.innerWidth,\n    isMobileNavVisible: false,\n    isTouchEnabled: false\n  };\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick);\n  }\n\n  handleResize = () => {\n    this.setState({\n      viewportWidth: window.innerWidth\n    });\n  };\n\n  toggleMobileNavVisibility = () => {\n    this.setState(prevState => ({\n      isMobileNavVisible: !prevState.isMobileNavVisible\n    }));\n  };\n\n  handleClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    if (!isMobileView) return;\n    if (e.target.matches('button') || e.target.matches('a')) {\n      this.toggleMobileNavVisibility();\n    }\n  };\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n    window.removeEventListener('resize', this.handleResize);\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  handleOutsideClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n    if (\n      !isMobileView ||\n      this.navLinksEl.contains(e.target) ||\n      e.target.matches('button') ||\n      e.target.matches('a')\n    )\n      return;\n    this.setState({\n      isMobileNavVisible: false\n    });\n  };\n\n  handleTouch = () => {\n    const { isTouchEnabled } = this.state;\n    if (isTouchEnabled === true) return;\n    this.setState({\n      isTouchEnabled: true\n    });\n    document.removeEventListener('touchstart', this.handleTouch);\n    document.removeEventListener('click', this.handleOutsideClick);\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  render() {\n    const { viewportWidth, isMobileNavVisible } = this.state;\n    const { minWidth, classes, children } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    return (\n      <nav\n        className={`navbar ${isMobileView ? 'is-collapsed' : ''} ${\n          isMobileView && isMobileNavVisible ? 'show-links' : ''\n        } ${classes.navbar}`}\n        ref={el => (this.navEl = el)}\n      >\n        <Logo className=\"navbar__logo\" onClick={this.handleClick} />\n        {isMobileView && (\n          <Button\n            type=\"button\"\n            color=\"primary\"\n            onClick={this.toggleMobileNavVisibility}\n            iconOnly\n          >\n            <Icon name=\"menu\" />\n          </Button>\n        )}\n        <ul\n          className={`navbar__links ${classes.links}`}\n          onClick={this.handleClick}\n          ref={el => (this.navLinksEl = el)}\n        >\n          {children}\n        </ul>\n      </nav>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Logo } from '../Logo';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport './Sidebar.scss';\n\nexport const SidebarIcon = ({ name }) => {\n  return <Icon name={name} className=\"sidebar__icon\" />;\n};\n\nexport default class Sidebar extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { onToggle, children } = this.props;\n    return (\n      <div className=\"sidebar__canvas\">\n        <Button\n          type=\"button\"\n          onClick={onToggle}\n          className=\"sidebar__btn--toggle\"\n          size=\"sm\"\n          iconOnly\n        >\n          <Icon name=\"bar-chart-2\" />\n        </Button>\n        <div className=\"sidebar\">\n          <nav className=\"sidebar__nav\">\n            <div className=\"sidebar__logo\">\n              <Logo size=\"sm\" />\n            </div>\n            <ul className=\"sidebar__list\">{children}</ul>\n          </nav>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { SidebarIcon } from './Sidebar';\n\nexport const NavLinksNonAuth = ({onClick}) => (\n  <>\n    <li>\n      <NavLink onClick={onClick} to={ROUTES.SIGN_IN}>Log In</NavLink>\n    </li>\n    <li>\n      <NavLink onClick={onClick} to={ROUTES.SIGN_UP}>Get Started</NavLink>\n    </li>\n  </>\n);\n\nexport const NavLinksAuth = ({ userId, onClick }) => (\n  <>\n    <li className=\"sidebar__item\">\n      <NavLink onClick={onClick} className=\"sidebar__link\" to={`/0/home/${userId}`}>\n        <SidebarIcon name=\"home\" />\n        <span className=\"sidebar__section-name\">Home</span>\n      </NavLink>\n    </li>\n    <li className=\"sidebar__item\">\n      <NavLink onClick={onClick} className=\"sidebar__link\" to={`/0/${userId}/projects`}>\n        <SidebarIcon name=\"grid\" />\n        <span className=\"sidebar__section-name\">Projects</span>\n      </NavLink>\n    </li>\n    <li className=\"sidebar__item\">\n      <NavLink onClick={onClick} className=\"sidebar__link\" to={`/0/${userId}/tasks`}>\n        <SidebarIcon name=\"check-square\" />\n        <span className=\"sidebar__section-name\">Tasks</span>\n      </NavLink>\n    </li>\n    <li className=\"sidebar__item\">\n      <NavLink onClick={onClick} className=\"sidebar__link\" to={ROUTES.ADMIN}>\n        <SidebarIcon name=\"settings\" />\n        <span className=\"sidebar__section-name\">Admin</span>\n      </NavLink>\n    </li>\n  </>\n);\n","import React from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Button } from '../Button';\n\nconst SignOutButton = ({ firebase, className }) => (\n  <Button\n    type=\"button\"\n    onClick={firebase.signOut}\n    className={className}\n    color=\"primary\"\n  >\n    Log Out\n  </Button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React, { Component, createRef } from 'react';\nimport { Button } from '../Button';\nimport { Input } from '../Input';\nimport { Icon } from '../Icon';\nimport './SearchBar.scss';\n\nexport default class SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false,\n      query: ''\n    };\n    this.inputEl = createRef();\n  }\n\n  handleClick = e => {\n    const { query } = this.state;\n    const { name } = e.target;\n    e.stopPropagation();\n    if (name === 'search' || query !== '') return;\n    if (name === 'toggle') {\n      this.inputEl.current.focus();\n    }\n    this.setState(state => ({\n      isExpanded: !state.isExpanded\n    }));\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  render() {\n    return (\n      <div\n        onClick={this.handleClick}\n        className={`search-bar${this.state.isExpanded ? ' is-expanded' : ''}`}\n      >\n        <form className=\"search-form\" onSubmit={this.handleSubmit}>\n          <Input\n            name=\"search\"\n            className=\"search-form__input\"\n            type=\"text\"\n            inputRef={this.inputEl}\n            hideLabel\n          />\n          <Input\n            name=\"submit\"\n            className=\"search-form__submit\"\n            type=\"submit\"\n            hideLabel\n          />\n          <Button\n            type=\"button\"\n            onClick={this.handleClick}\n            className=\"search-form__btn\"\n            name=\"toggle\"\n            iconOnly\n          >\n            <Icon name=\"search\" />\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport { PopoverWrapper } from '../Popover';\nimport { Avatar } from '../Avatar';\nimport { Menu, MenuItem } from '../Menu';\nimport { SignOutButton } from '../SignOutButton';\nimport { SearchBar } from '../SearchBar';\nimport * as ROUTES from '../../constants/routes';\nimport './Topbar.scss';\n\nclass Topbar extends Component {\n  render() {\n    const { currentUser } = this.props;\n    return (\n      <div className=\"topbar\">\n        <SearchBar />\n        {currentUser && (\n          <PopoverWrapper\n            classes={{\n              wrapper: 'topbar__user-actions-wrapper',\n              popover: 'topbar__user-actions'\n            }}\n            alignOuter=\"right\"\n            alignInner=\"right\"\n            buttonProps={{\n              size: 'sm',\n              iconOnly: true,\n              className: 'topbar__btn--user-actions',\n              children: (\n                <Avatar\n                  classes={{\n                    avatar: 'topbar__avatar',\n                    placeholder: 'topbar__avatar-placeholder'\n                  }}\n                  fullName={currentUser.name}\n                  size=\"sm\"\n                  variant=\"circle\"\n                  imgSrc={currentUser.photoURL}\n                />\n              )\n            }}\n          >\n            <Menu>\n              <MenuItem>\n                <NavLink className=\"topbar__link\" to={ROUTES.ACCOUNT}>\n                  My Account\n                </NavLink>\n              </MenuItem>\n              <MenuItem>\n                <SignOutButton className=\"topbar__link\" />\n              </MenuItem>\n            </Menu>\n          </PopoverWrapper>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentUser: currentUserSelectors.getCurrentUser(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Topbar);\n","import React, { Component } from 'react';\nimport { AuthUserContext } from '../Session';\nimport { Navbar, NavLinksAuth, NavLinksNonAuth, Sidebar } from '../Nav';\nimport { Avatar } from '../Avatar';\nimport { Topbar } from '../Topbar';\nimport './Header.scss';\n\nexport default class Header extends Component {\n  state = {\n    isNavExpanded: false\n  };\n\n  toggleNav = () => {\n    this.setState(prevState => ({\n      isNavExpanded: !prevState.isNavExpanded\n    }));\n  };\n\n  handleClick = e => {\n    this.setState(state => ({\n      isNavExpanded: false\n    }));\n  };\n\n  render() {\n    const { isNavExpanded } = this.state;\n    return (\n      <header className={`header ${isNavExpanded ? 'expand-nav' : ''}`}>\n        <AuthUserContext.Consumer>\n          {authUser =>\n            authUser ? (\n              <>\n                <Sidebar onToggle={this.toggleNav}>\n                  <NavLinksAuth onClick={this.toggleNav} userId={authUser.uid} />\n                </Sidebar>\n                <Topbar />\n              </>\n            ) : (\n              <Navbar>\n                <NavLinksNonAuth />\n              </Navbar>\n            )\n          }\n        </AuthUserContext.Consumer>\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { LandingPage } from '../Landing';\nimport { SignUpPage } from '../SignUp';\nimport { SignInPage } from '../SignIn';\nimport { PasswordForgetPage } from '../PasswordForget';\nimport { HomePage } from '../Home';\nimport { AccountPage } from '../Account';\nimport { AdminPage } from '../Admin';\nimport { withAuthentication } from '../../components/Session';\nimport { Header } from '../../components/Header';\nimport './App.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Header />\n        <Switch>\n          <Route exact path={ROUTES.LANDING} component={LandingPage} />\n          <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n          <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n          <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n          <Route path={ROUTES.APP} render={props => <HomePage {...props} />} />\n          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n          <Route path={ROUTES.ADMIN} component={AdminPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { projectsById } from '../ducks/projects';\nimport { tasksById } from '../ducks/tasks';\nimport { listsById } from '../ducks/lists';\nimport { usersById } from '../ducks/users';\nimport { subtasksById } from '../ducks/subtasks';\nimport { commentsById } from '../ducks/comments';\nimport { currentUser } from '../ducks/currentUser';\nimport { selectedTask } from '../ducks/selectedTask';\nimport { selectedProject } from '../ducks/selectedProject';\n\nexport default combineReducers({\n  currentUser,\n  projectsById,\n  tasksById,\n  listsById,\n  usersById,\n  subtasksById,\n  commentsById,\n  selectedTask,\n  selectedProject\n});\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory({ basename: process.env.PUBLIC_URL });\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, {}, applyMiddleware(thunk));\nexport default store;\nexport { default as firebase } from './firebase';\nexport { default as history } from './history';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport 'normalize.css';\nimport './index.scss';\nimport { App } from './pages/App';\nimport * as serviceWorker from './serviceWorker';\nimport { FirebaseContext } from './components/Firebase';\nimport store, { firebase, history } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <FirebaseContext.Provider value={firebase}>\n      <Router basename={process.env.PUBLIC_URL} history={history}>\n        <App />\n      </Router>\n    </FirebaseContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}