{"version":3,"sources":["assets/feather/feather-sprite.svg","components/Firebase/context.js","components/Firebase/Firebase.js","constants/routes.js","components/SignOut/SignOutButton.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Navigation/Navigation.js","components/Input/Input.js","components/Button/Button.js","components/SignUp/SignUpForm.js","components/UserFormPage/UserFormPage.js","components/SignUp/SignUp.js","components/SignUp/index.js","components/SignIn/SignInForm.js","components/PasswordForget/PasswordForgetForm.js","components/PasswordForget/PasswordForget.js","components/PasswordForget/index.js","components/SignIn/SignIn.js","store/firebase.js","ducks/user/actions.js","ducks/user/types.js","ducks/user/selectors.js","ducks/user/reducers.js","ducks/current/actions.js","ducks/current/types.js","ducks/current/selectors.js","components/BoardGrid/BoardGrid.js","components/BoardGrid/BoardTile.js","ducks/boards/actions.js","ducks/boards/types.js","ducks/boards/selectors.js","ducks/boards/reducers.js","components/BoardGrid/BoardGridContainer.js","constants/droppableTypes.js","ducks/cards/selectors.js","ducks/cards/actions.js","ducks/cards/types.js","ducks/cards/reducers.js","components/Icon/Icon.js","components/Popover/Popover.js","components/Popover/PopoverWrapper.js","components/Menu/Menu.js","components/Menu/MenuItem.js","components/Card/Card.js","components/Textarea/Textarea.js","components/Card/CardComposer.js","components/List/Cards.js","components/List/List.js","components/List/ListComposer.js","components/Board/Board.js","ducks/lists/actions.js","ducks/lists/types.js","ducks/lists/selectors.js","ducks/lists/reducers.js","components/Modal/Modal.js","components/CardEditor/CardEditor.js","utils/utils.js","components/Board/BoardContainer.js","components/Board/BoardComposer.js","components/Home/Home.js","components/PasswordChange/PasswordChangeForm.js","components/Account/Account.js","components/Header/Header.jsx","components/App/App.js","serviceWorker.js","store/reducers.js","ducks/current/reducers.js","store/history.js","index.js"],"names":["module","exports","__webpack_require__","p","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","createUserWithEmailAndPassword","email","password","auth","signInWithEmailAndPassword","signOut","passwordReset","sendPasswordResetEmail","passwordUpdate","newPassword","currentUser","updatePassword","getTimestamp","firestore","FieldValue","serverTimestamp","addToArray","value","arrayUnion","removeFromArray","arrayRemove","getUserDoc","userId","db","collection","doc","addUser","_ref","name","username","_ref$boardIds","boardIds","set","updateUser","newValue","arguments","length","undefined","update","getBoardDoc","boardId","updateBoard","objectSpread","lastModifiedAt","addBoard","_ref2","boardTitle","add","createdAt","listIds","authorId","memberIds","then","ref","id","getListDoc","listId","updateList","addList","_ref3","listTitle","cardIds","getCardDoc","cardId","addCard","_ref4","cardTitle","updateCard","deleteCard","batch","cardRef","listRef","delete","commit","console","log","catch","error","moveCardToList","_ref5","origListId","newListId","updatedCardIds","origListRef","newListRef","initializeApp","HOME","type","onClick","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","authUser","inherits","createClass","key","_this2","listener","onAuthStateChanged","setState","Session_context","Provider","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","NavigationAuth","className","Link","to","ROUTES","SignOut_SignOutButton","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","Input","Fragment","hideLabel","htmlFor","title","onChange","placeholder","required","isRequired","onBlur","Button","children","_ref$color","color","_ref$size","size","_ref$variant","variant","disabled","_ref$iconOnly","iconOnly","buttonRef","objectWithoutProperties","concat","INITIAL_STATE","passwordOne","passwordTwo","SignUpForm","onSubmit","e","_this$state","user","uid","preventDefault","defineProperty","target","_this$state2","isInvalid","components_Input_Input","components_Button_Button","message","UserFormPage","SignUpPage","components_UserFormPage_UserFormPage","SignUp_SignUpForm","SignUpLink","SignInForm","PasswordForgetForm","PasswordForgetPage","PasswordForget_PasswordForgetForm","PasswordForgetLink","SignInPage","SignIn_SignInForm","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","updateUserBoards","fetchUserData","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","get","data","sent","loadUserData","t0","stop","_x","apply","getUserData","action","toConsumableArray","selectBoard","selectList","selectCard","getCurrentBoardId","current","getCurrentListId","getCurrentCardId","getCurrent","BoardGrid","BoardTile","loadBoardsById","boardsById","fetchBoardsById","where","snapshot","forEach","updateBoardsById","board","reorderLists","updateListIds","getBoardsById","getBoardsArray","keys","map","getBoard","BoardGridContainer","onSnapshot","querySnapshot","docChanges","change","_this$props$user","_this$props","boardsArray","boardTiles","BoardGrid_BoardTile","BoardGrid_BoardGrid","openBoardComposer","connect","userSelectors","boardSelectors","userActions","boardActions","currentActions","CARD","LIST","getCardsById","cardsById","getCardsArray","ownProps","loadCardsById","fetchCardsById","updateCardsById","card","Icon","addClass","trim","xmlns","xmlnsXlink","viewBox","width","height","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","xlinkHref","featherIcons","Popover","handleOutsideClick","onOutsideClick","document","removeEventListener","addEventListener","style","PopoverWrapper","isOpen","componentEl","contains","toggleOpen","prevState","align","buttonProps","wrapperClass","popoverClass","popoverStyle","anchorEl","top","getBoundingClientRect","left","right","el","Popover_Popover","defaultProps","Menu","_ref$className","MenuItem","Card","handleCardClick","matches","onCardClick","handleMoreActions","dataset","_this$props2","onCardDelete","_this$props3","cardIndex","react_beautiful_dnd_esm","draggableId","index","provided","draggableProps","dragHandleProps","innerRef","PopoverWrapper_PopoverWrapper","Icon_Icon","components_Menu_Menu","Menu_MenuItem","href","data-action","Textarea","isActive","CardComposer","resetForm","onFocus","onReset","components_Textarea_Textarea","currentSelectors","Cards","cards","droppableId","droppableTypes","droppableProps","Card_Card_Card","List","handleCardDelete","isDragging","listIndex","isFetchingCards","Cards_Cards","components_Card_CardComposer","cardSelectors","ListComposer","Board","direction","components_List_ListComposer","loadListsById","listsById","fetchListsById","updateListsById","list","getListsById","getListsArray","Modal","onModalClose","onModalClick","CardEditor","cardKey","cardDescription","currentFocus","onSubmitComment","handleModalClick","commentFormRef","subtaskFormRef","cardComment","isCommentFormFocused","setCommentFormRef","element","setSubtaskFormRef","onCardEditorClose","cardSubtask","commentFormIsFocused","components_Modal_Modal","submitSubtask","listSelectors","listsArray","listActions","cardActions","isEqual","other","prototype","toString","typeArr","valueLen","compare","item1","item2","itemType","i","hasOwnProperty","BoardContainer","onDragStart","onDragEnd","destination","source","isMovedWithinList","splice","updatedListIds","toggleCardEditor","isCardEditorOpen","isFetching","boardObserver","updatedBoard","utils","listObserver","cardObserver","_this3","lists","components_List_List","components_Board_Board","components_CardEditor_CardEditor","BoardComposer","handleSubmit","onClose","HomePage","toggleBoardComposer","isBoardComposerOpen","createBoard","BoardComposer_BoardComposer","Switch","Route","exact","path","render","BoardGrid_BoardGridContainer","Board_BoardContainer","match","params","currentBoardId","PasswordChangeForm","PasswordChange_PasswordChangeForm","Header","components_Navigation_Navigation","Header_Header_Header","component","LandingPage","AccountPage","AdminPage","Boolean","window","location","hostname","combineReducers","createBrowserHistory","basename","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","es","context","Router","components_App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.64ed753e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/feather-sprite.0ed672ce.svg\";","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import firebase from 'firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\nclass Firebase {\n  constructor() {\n    firebase.initializeApp(config);\n    this.auth = firebase.auth();\n    this.db = firebase.firestore();\n  }\n\n  // Auth API\n  createUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  signInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  signOut = () => this.auth.signOut();\n\n  passwordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  passwordUpdate = newPassword =>\n    this.auth.currentUser.updatePassword(newPassword);\n\n  // Utility API\n\n  getTimestamp = () => firebase.firestore.FieldValue.serverTimestamp();\n  addToArray = value => firebase.firestore.FieldValue.arrayUnion(value);\n  removeFromArray = value => firebase.firestore.FieldValue.arrayRemove(value);\n\n  // User API\n\n  getUserDoc = userId => this.db.collection('users').doc(userId);\n\n  addUser = ({ userId, name, username, email, boardIds = [] }) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .set({ userId, name, username, email, boardIds });\n\n  updateUser = (userId, newValue = {}) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .update(newValue);\n\n  // Board API\n\n  getBoardDoc = boardId => this.db.collection('boards').doc(boardId);\n\n  updateBoard = (boardId, newValue = {}) =>\n    this.getBoardDoc(boardId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  addBoard = ({ userId, boardTitle }) => {\n    this.db\n      .collection('boards')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        listIds: [],\n        authorId: userId,\n        memberIds: [userId],\n        boardTitle\n      })\n      .then(ref => {\n        this.updateUser(userId, {\n          boardIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  // List API\n\n  getListDoc = listId => this.db.collection('lists').doc(listId);\n\n  updateList = (listId, newValue = {}) =>\n    this.getListDoc(listId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  addList = ({ boardId, listTitle }) => {\n    this.db\n      .collection('lists')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        cardIds: [],\n        boardId,\n        listTitle\n      })\n      .then(ref => {\n        this.updateBoard(boardId, {\n          listIds: this.addToArray(ref.id),\n          lastModifiedAt: this.getTimestamp()\n        });\n      });\n  };\n\n  // Card API\n\n  getCardDoc = cardId => this.db.collection('cards').doc(cardId);\n\n  addCard = ({ boardId, listId, cardTitle }) => {\n    this.db\n      .collection('cards')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        listId,\n        boardId,\n        cardTitle\n      })\n      .then(ref => {\n        this.updateList(listId, {\n          cardIds: this.addToArray(ref.id),\n          lastModifiedAt: this.getTimestamp()\n        });\n      });\n  };\n\n  updateCard = (cardId, newValue = {}) => {\n    this.getCardDoc(cardId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  deleteCard = (cardId, listId) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const listRef = this.getListDoc(listId);\n    batch.delete(cardRef);\n    batch.update(listRef, {\n      cardIds: this.removeFromArray(cardId),\n      lastModifiedAt: this.getTimestamp()\n    });\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log('card deleted');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  moveCardToList = ({ cardId, origListId, newListId, updatedCardIds }) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const origListRef = this.getListDoc(origListId);\n    const newListRef = this.getListDoc(newListId);\n    batch.update(cardRef, {\n      listId: newListId,\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(origListRef, {\n      cardIds: this.removeFromArray(cardId),\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(newListRef, {\n      cardIds: updatedCardIds,\n      lastModifiedAt: this.getTimestamp()\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('card moved');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n}\n\nexport default Firebase;\n","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const BOARD = '/home/board/:id';\n","import React from 'react';\nimport { withFirebase } from '../Firebase';\n\nconst SignOutButton = ({ firebase }) => (\n  <button type=\"button\" onClick={firebase.signOut}>\n    Sign Out\n  </button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        authUser: null\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        authUser\n          ? this.setState({ authUser })\n          : this.setState({ authUser: null });\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport AuthUserContext from './context';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          this.props.history.push(ROUTES.SIGN_IN);\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n  return compose(\n    withRouter,\n    withFirebase\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { SignOutButton } from '../SignOut';\nimport './Navigation.scss';\nimport { AuthUserContext } from '../Session';\n\nconst NavigationAuth = () => (\n  <ul className=\"navlinks\">\n    <li>\n      <Link to={ROUTES.HOME}>Home</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ADMIN}>Admin</Link>\n    </li>\n    <li>\n      <SignOutButton />\n    </li>\n  </ul>\n);\n\nconst NavigationNonAuth = () => (\n  <ul className=\"navlinks\">\n    <li>\n      <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n    </li>\n  </ul>\n);\n\nconst Navigation = () => {\n  return (\n    <nav className=\"navbar\">\n      <span className=\"navbar__logo\">\n        <Link to={ROUTES.LANDING}>workflow</Link>\n      </span>\n      <AuthUserContext.Consumer>\n        {authUser => (authUser ? <NavigationAuth /> : <NavigationNonAuth />)}\n      </AuthUserContext.Consumer>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport './Input.scss';\n\nconst Input = props => {\n  return (\n    <>\n      {!props.hideLabel && (\n        <label htmlFor={props.name} className=\"input__label\">\n          {props.title}\n        </label>\n      )}\n      <input\n        className={props.className}\n        id={props.name}\n        name={props.name}\n        type={props.type}\n        value={props.value}\n        onChange={props.onChange}\n        placeholder={props.placeholder}\n        required={props.isRequired}\n        onBlur={props.onBlur}\n      />\n    </>\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport './Button.scss';\n\nconst Button = ({\n  children,\n  type,\n  onClick,\n  className,\n  color = 'neutral',\n  size = 'medium',\n  variant = 'text',\n  disabled,\n  name,\n  iconOnly = false,\n  buttonRef,\n  ...props\n}) => (\n  <button\n    className={`${className} ${color} ${size} ${variant} ${\n      iconOnly ? 'icon-only' : ''\n    }`}\n    type={type}\n    onClick={onClick}\n    disabled={disabled}\n    name={name}\n    ref={buttonRef}\n  >\n    {children}\n  </button>\n);\n\nexport default Button;\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  username: '',\n  name: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { username, email, name, passwordOne } = this.state;\n    this.props.firebase\n      .createUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        const userId = authUser.user.uid;\n        return this.props.firebase.addUser({\n          userId,\n          name,\n          username,\n          email\n        });\n      })\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const {\n      username,\n      name,\n      email,\n      passwordOne,\n      passwordTwo,\n      error\n    } = this.state;\n    const isInvalid =\n      passwordOne === '' ||\n      passwordTwo === '' ||\n      email === '' ||\n      username === '' ||\n      passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"name\"\n          title=\"Full Name\"\n          value={name}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"username\"\n          title=\"Username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordOne\"\n          title=\"Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          title=\"Confirm Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"large\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Sign Up\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignUpForm);\n","import React from 'react';\nimport './UserFormPage.scss';\n\nconst UserFormPage = ({ title, children }) => (\n  <main className=\"user-form__container\">\n    <h1>{title}</h1>\n    {children}\n  </main>\n);\n\nexport default UserFormPage;\n","import React from 'react';\nimport SignUpForm from './SignUpForm';\nimport { UserFormPage } from '../UserFormPage';\n\nconst SignUpPage = () => (\n  <UserFormPage title=\"Sign Up\">\n    <SignUpForm />\n  </UserFormPage>\n);\n\nexport default SignUpPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nexport { default as SignUpPage } from './SignUp';\nexport { default as SignUpForm } from './SignUpForm';\nexport { SignUpLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose, renderComponent } from 'recompose';\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email, password } = this.state;\n    this.props.firebase\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n    const isInvalid = password === '' || email === '';\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"password\"\n          title=\"Password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"large\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Sign In\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignInForm);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null\n};\n\nclass PasswordForgetForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .passwordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, error } = this.state;\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"large\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Reset My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordForgetForm);\n","import React from 'react';\nimport PasswordForgetForm from './PasswordForgetForm';\nimport { UserFormPage } from '../UserFormPage';\n\nconst PasswordForgetPage = () => (\n  <UserFormPage title=\"Forgot your password?\">\n    <PasswordForgetForm />\n  </UserFormPage>\n);\n\nexport default PasswordForgetPage;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport {default as PasswordForgetForm} from './PasswordForgetForm';\nexport {default as PasswordForgetPage} from './PasswordForget';\nexport {PasswordForgetLink};","import React from 'react';\nimport SignInForm from './SignInForm';\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { UserFormPage } from '../UserFormPage';\n\nconst SignInPage = () => (\n  <UserFormPage title=\"Sign In\">\n    <SignInForm />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </UserFormPage>\n);\n\nexport default SignInPage;\n","import { Firebase } from '../components/Firebase';\n\nconst firebase = new Firebase();\n\nexport default firebase;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const updateUserBoards = boardIds => {\n  return {\n    type: types.UPDATE_USER_BOARDS,\n    boardIds\n  };\n};\n\nexport const fetchUserData = userId => {\n  return async dispatch => {\n    try {\n      const user = await firebase\n        .getUserDoc(userId)\n        .get()\n        .then(doc => doc.data());\n      dispatch(loadUserData(user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const loadUserData = user => {\n  return {\n    type: types.LOAD_USER_DATA,\n    user\n  };\n};\n","export const UPDATE_USER_BOARDS = 'ADD_USER_BOARD';\nexport const LOAD_USER_DATA = 'LOAD_USER_DATA';\nexport const LOAD_USER_BOARDS = 'LOAD_USER_BOARDS';\n","export const getUserData = state => {\n  return state.user;\n};\n","import * as types from './types';\n\nconst user = (state = {}, action) => {\n  switch (action.type) {\n    case types.UPDATE_USER_BOARDS:\n      return {\n        ...state,\n        boardIds: [...action.boardIds]\n      };\n    case types.LOAD_USER_DATA:\n      return {\n        ...state,\n        ...action.user\n      };\n    default:\n      return state;\n  }\n};\n\nexport default user;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const selectBoard = boardId => {\n  return {\n    type: types.SELECT_BOARD,\n    boardId\n  };\n};\n\nexport const selectList = listId => {\n  return {\n    type: types.SELECT_LIST,\n    listId\n  };\n};\n\nexport const selectCard = cardId => {\n  return {\n    type: types.SELECT_CARD,\n    cardId\n  };\n};\n","export const SELECT_BOARD = 'SELECT_BOARD';\nexport const SELECT_LIST = 'SELECT_LIST';\nexport const SELECT_CARD = 'SELECT_CARD';\n","export const getCurrentBoardId = state => {\n  return state.current.boardId;\n};\n\nexport const getCurrentListId = state => {\n  return state.current.listId;\n};\n\nexport const getCurrentCardId = state => {\n  return state.current.cardId;\n};\n\nexport const getCurrent = state => {\n  return state.current;\n};\n","import React, { Component } from 'react';\n\nexport default class BoardGrid extends Component {\n  render() {\n    return <ul className=\"board-grid\">{this.props.children}</ul>;\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BoardTile = props => {\n  const { boardId, boardTitle, onClick } = props;\n  return (\n    <li className=\"board-grid__tile\">\n      <Link\n        className=\"board-grid__link\"\n        to={`/home/board/${boardId}`}\n        onClick={onClick}\n      >\n        <span className=\"board-grid__title\">{boardTitle}</span>\n      </Link>\n    </li>\n  );\n};\n\nexport default BoardTile;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadBoardsById = boardsById => {\n  return {\n    type: types.LOAD_BOARDS_BY_ID,\n    boardsById\n  };\n};\n\nexport const fetchBoardsById = userId => {\n  return async dispatch => {\n    try {\n      const boardsById = await firebase.db\n        .collection('boards')\n        .where('memberIds', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const boardsById = {};\n          snapshot.forEach(doc => {\n            boardsById[doc.id] = doc.data();\n          });\n          return boardsById;\n        });\n      dispatch(loadBoardsById(boardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateBoardsById = board => {\n  return {\n    type: types.UPDATE_BOARDS_BY_ID,\n    board\n  };\n};\n\nexport const reorderLists = (boardId, listIds) => {\n  return {\n    type: types.REORDER_LISTS,\n    boardId,\n    listIds\n  };\n};\n\nexport const updateListIds = (boardId, listIds) => {\n  return {\n    type: types.UPDATE_LIST_IDS,\n    boardId,\n    listIds\n  };\n};\n","export const LOAD_BOARDS_BY_ID = 'LOAD_BOARDS_BY_ID';\nexport const UPDATE_BOARDS_BY_ID = 'UPDATE_BOARDS_BY_ID';\nexport const REORDER_LISTS = 'REORDER_LISTS';\nexport const UPDATE_LIST_IDS = 'UPDATE_LIST_IDS';\n","export const getBoardsById = state => {\n  return state.boardsById;\n};\n\nexport const getBoardsArray = state => {\n  const { boardsById } = state;\n  return Object.keys(boardsById).map(boardId => {\n    return {\n      boardId,\n      ...boardsById[boardId]\n    };\n  });\n};\n\nexport const getBoard = (state, boardId) => {\n  const { boardsById } = state;\n  return boardsById[boardId];\n};\n","import * as types from './types';\n\nconst boardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_BOARDS_BY_ID: {\n      const { boardsById } = action;\n      return {\n        ...state,\n        ...boardsById\n      };\n    }\n    case types.UPDATE_BOARDS_BY_ID: {\n      const { board } = action;\n      return {\n        ...state,\n        ...board\n      };\n    }\n    case types.UPDATE_LIST_IDS:\n    case types.REORDER_LISTS: {\n      const { boardId, listIds } = action;\n      return {\n        ...state,\n        [boardId]: {\n          ...state[boardId],\n          listIds\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default boardsById;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport BoardGrid from './BoardGrid';\nimport BoardTile from './BoardTile';\nimport './BoardGrid.scss';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\n\nclass BoardGridContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  componentDidMount() {\n    const { userId } = this.props.user;\n    this.listener = this.props.firebase.db\n      .collection('boards')\n      .where('memberIds', 'array-contains', userId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const board = {\n            [change.doc.id]: change.doc.data()\n          };\n          this.props.updateBoardsById(board);\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  }\n\n  render() {\n    const { boardIds, userId } = this.props.user;\n    const { boardsArray, selectBoard } = this.props;\n    const boardTiles = boardsArray.map(board => {\n      const { boardTitle, boardId } = board;\n      return (\n        <BoardTile\n          key={boardId}\n          boardTitle={boardTitle}\n          boardId={boardId}\n          onClick={() => selectBoard(boardId)}\n        />\n      );\n    });\n    return (\n      <section>\n        <BoardGrid>\n          {boardTiles}\n          <button\n            type=\"button\"\n            className=\"board-grid__tile board-grid__btn--add\"\n            onClick={this.props.openBoardComposer}\n          >\n            Create new board...\n          </button>\n        </BoardGrid>\n      </section>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUserBoards: boardIds =>\n      dispatch(userActions.updateUserBoards(boardIds)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardGridContainer)\n);\n","export const CARD = 'CARD';\nexport const LIST = 'LIST';\n","export const getCardsById = state => {\n  return state.cardsById;\n};\n\nexport const getCardsArray = (state, ownProps) => {\n  const { cardsById } = state;\n  const { cardIds } = ownProps;\n  return cardIds.map(cardId => cardsById[cardId]);\n};\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadCardsById = cardsById => {\n  return {\n    type: types.LOAD_CARDS_BY_ID,\n    cardsById\n  };\n};\n\nexport const fetchCardsById = boardId => {\n  return async dispatch => {\n    try {\n      const cardsById = await firebase.db\n        .collection('cards')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const cardsById = {};\n          snapshot.forEach(doc => {\n            cardsById[doc.id] = {\n              cardId: doc.id,\n              ...doc.data()\n            };\n          });\n          return cardsById;\n        });\n      dispatch(loadCardsById(cardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateCardsById = card => {\n  return {\n    type: types.UPDATE_CARDS_BY_ID,\n    card\n  };\n};\n","export const ADD_CARD = 'ADD_CARD';\nexport const SET_CARD_DUE_DATE = 'SET_CARD_DUE_DATE';\nexport const ADD_CARD_SUBTASK = 'ADD_CARD_SUBTASK';\nexport const REMOVE_CARD_SUBTASK = 'REMOVE_CARD_SUBTASK';\nexport const CHANGE_CARD_DESCRIPTION = 'CHANGE_CARD_DESCRIPTION';\nexport const SET_CARD_COLOR = 'SET_CARD_COLOR';\nexport const DELETE_CARD = 'DELETE_CARD';\nexport const MOVE_CARD = 'MOVE_CARD';\nexport const LOAD_CARDS_BY_ID = 'LOAD_CARDS_BY_ID';\nexport const UPDATE_CARDS_BY_ID = 'UPDATE_CARDS_BY_ID';\n","import * as types from './types';\n\nconst cardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_CARDS_BY_ID: {\n      const { cardsById } = action;\n      return {\n        ...state,\n        ...cardsById\n      };\n    }\n    case types.UPDATE_CARDS_BY_ID: {\n      const { card } = action;\n      return {\n        ...state,\n        ...card\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default cardsById;\n","import React from 'react';\nimport featherIcons from '../../assets/feather/feather-sprite.svg';\n\nfunction Icon(props) {\n  return (\n    <svg\n      className={`feather feather-${props.name} ${props.addClass || ''}`.trim()}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n      height=\"24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <use xlinkHref={`${featherIcons}#${props.name}`} />\n    </svg>\n  );\n}\n\nexport default Icon;\n","import React, { Component } from 'react';\n\nexport default class Popover extends Component {\n  componentDidMount() {\n    document.addEventListener('click', this.handleOutsideClick, false);\n  }\n\n  handleOutsideClick = e => {\n    const { onOutsideClick } = this.props;\n    onOutsideClick(e);\n    document.removeEventListener('click', this.handleOutsideClick);\n  };\n\n  render() {\n    const { className, onClick, style, children } = this.props;\n    return (\n      <div className={`popover ${className}`} onClick={onClick} style={style}>\n        {children}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from '../Button';\nimport Popover from './Popover';\nimport './Popover.scss';\n\nexport default class PopoverWrapper extends Component {\n  state = {\n    isOpen: false\n  };\n\n  static defaultProps = {\n    wrapperClass: '',\n    popoverClass: '',\n    buttonProps: {},\n    align: 'left'\n  };\n\n  handleOutsideClick = e => {\n    if (!this.componentEl.contains(e.target)) {\n      this.setState({\n        isOpen: false\n      });\n    }\n  };\n\n  toggleOpen = () => {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  };\n\n  render() {\n    const {\n      children,\n      align,\n      buttonProps,\n      wrapperClass,\n      popoverClass\n    } = this.props;\n    const { isOpen } = this.state;\n    let popoverStyle = null;\n\n    if (this.anchorEl) {\n      const { height } = this.anchorEl.getBoundingClientRect();\n\n      popoverStyle = {\n        top: height,\n        left: align === 'left' ? 0 : 'auto',\n        right: align === 'right' ? 0 : 'auto'\n      };\n    }\n\n    return (\n      <div\n        className={`popover-wrapper ${wrapperClass}`}\n        ref={el => (this.componentEl = el)}\n      >\n        <Button\n          type=\"button\"\n          onClick={this.toggleOpen}\n          buttonRef={el => (this.anchorEl = el)}\n          {...buttonProps}\n        />\n        {isOpen && (\n          <Popover\n            className={popoverClass}\n            onClick={this.toggleOpen}\n            style={popoverStyle}\n            onOutsideClick={this.handleOutsideClick}\n            key=\"popover\"\n          >\n            {children}\n          </Popover>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './Menu.scss';\n\nconst Menu = ({ children, onClick, className = '' }) => {\n  return <ul className={`menu ${className}`} onClick={onClick}>{children}</ul>;\n};\n\nexport default Menu;\n","import React from 'react';\nimport './Menu.scss';\n\nconst MenuItem = ({ children, className = '' }) => {\n  return <li className={`menu__item ${className}`}>{children}</li>;\n};\n\nexport default MenuItem;\n","import React, { Component } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport './Card.scss';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { PopoverWrapper } from '../Popover';\nimport { Menu, MenuItem } from '../Menu';\n\nexport default class Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleCardClick = e => {\n    if (e.target.matches('button') || e.target.matches('a')) return;\n    const { cardId, onCardClick } = this.props;\n    onCardClick(cardId);\n  };\n\n  handleMoreActions = e => {\n    if (!e.target.matches('a')) return;\n    const { action } = e.target.dataset;\n    const { cardId, onCardDelete } = this.props;\n    switch (action) {\n      case 'delete':\n        onCardDelete(cardId);\n        break;\n    }\n    e.preventDefault();\n  };\n\n  render() {\n    const { cardTitle, cardId, cardIndex } = this.props;\n    return (\n      <Draggable draggableId={cardId} index={cardIndex}>\n        {provided => (\n          <>\n            <div\n              className=\"card\"\n              onClick={this.handleCardClick}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              ref={provided.innerRef}\n            >\n              <div className=\"card__header\">\n                <PopoverWrapper\n                  wrapperClass=\"card__popover-wrapper\"\n                  popoverClass=\"card__popover\"\n                  align=\"left\"\n                  buttonProps={{\n                    size: 'small',\n                    iconOnly: true,\n                    className: 'card__btn--more-actions',\n                    children: <Icon name=\"more-horizontal\" />\n                  }}\n                >\n                  <Menu onClick={this.handleMoreActions}>\n                    <MenuItem>\n                      <a href=\"\" data-action=\"delete\">\n                        Delete\n                      </a>\n                    </MenuItem>\n                  </Menu>\n                </PopoverWrapper>\n                <div className=\"card__tags\" />\n                <h3 className=\"card__title\">{cardTitle}</h3>\n              </div>\n              <div className=\"card__footer\">\n                <div className=\"card__labels\" />\n              </div>\n            </div>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n","import React from 'react';\nimport './Textarea.scss';\n\nconst Textarea = props => {\n  return (\n    <textarea\n      className={`textarea ${props.className}`}\n      id={props.name}\n      name={props.name}\n      value={props.value}\n      onChange={props.onChange}\n      placeholder={props.placeholder}\n      required={props.isRequired}\n      onBlur={props.onBlur}\n    />\n  );\n};\n\nexport default Textarea;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon } from '../Icon';\nimport { withAuthorization } from '../Session';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport './CardComposer.scss';\n\nconst INITIAL_STATE = {\n  cardTitle: '',\n  isActive: false\n};\n\nclass CardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ cardTitle: '' });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { cardTitle } = this.state;\n    const { boardId } = this.props.current;\n    const { listId } = this.props;\n    this.props.firebase.addCard({ boardId, listId, cardTitle });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onBlur = e => {\n    if (e.target.value !== '') return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const { cardTitle, isActive } = this.state;\n    return (\n      <div\n        className={`card-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"card-composer__form\" onSubmit={this.onSubmit}>\n          <Textarea\n            onChange={this.onChange}\n            value={cardTitle}\n            placeholder={isActive ? 'Enter card title...' : 'Add a card'}\n            isRequired\n            name=\"cardTitle\"\n            className=\"card-composer__textarea\"\n          />\n          {isActive && (\n            <div className=\"card-composer__footer\">\n              <Button\n                className=\"card-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add Card\n              </Button>\n              <Button\n                className=\"card-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"small\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardComposer)\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { Card } from '../Card';\n\nexport default class Cards extends Component {\n  static propTypes = {\n    listId: PropTypes.string.isRequired\n  };\n\n  render() {\n    const { listId, cards, onCardClick, onCardDelete } = this.props;\n    return (\n      <Droppable droppableId={listId} type={droppableTypes.CARD}>\n        {provided => (\n          <div\n            className=\"list__content\"\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n          >\n            {cards.map((card, cardIndex) => {\n              const { cardId, cardTitle } = card;\n              return (\n                <Card\n                  key={cardId}\n                  cardTitle={cardTitle}\n                  cardId={cardId}\n                  cardIndex={cardIndex}\n                  listId={listId}\n                  onCardClick={onCardClick}\n                  onCardDelete={onCardDelete}\n                />\n              );\n            })}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { CardComposer } from '../Card';\nimport Cards from './Cards';\nimport './List.scss';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDragging: this.props.isDragging\n    };\n  }\n\n  handleCardDelete = cardId => {\n    const { listId, firebase } = this.props;\n    console.log({ cardId, listId });\n    firebase.deleteCard(cardId, listId);\n  };\n\n  render() {\n    const {\n      cards,\n      onCardClick,\n      listId,\n      listTitle,\n      listIndex,\n      isFetchingCards\n    } = this.props;\n    if (isFetchingCards) return null;\n\n    return (\n      <Draggable draggableId={listId} index={listIndex}>\n        {provided => (\n          <>\n            <section\n              className=\"list\"\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <header className=\"list__header\">\n                <h2 className=\"list__title\">{listTitle}</h2>\n              </header>\n              <Cards\n                cards={cards}\n                listId={listId}\n                onCardClick={onCardClick}\n                onCardDelete={this.handleCardDelete}\n              />\n              {provided.placeholder}\n              <CardComposer listId={listId} />\n            </section>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state),\n    cards: cardSelectors.getCardsArray(state, ownProps)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => dispatch(userActions.getUserData(userId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(List)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input } from '../Input';\nimport { Icon } from '../Icon';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Button } from '../Button';\nimport './ListComposer.scss';\n\nconst INITIAL_STATE = {\n  listTitle: '',\n  isActive: false\n};\n\nclass ListComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ listTitle: '' });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { listTitle } = this.state;\n    const { boardId } = this.props;\n    this.props.firebase.addList({ boardId, listTitle });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = e => {\n    if (e.target.value === '') {\n      this.setState({\n        isActive: false\n      });\n    }\n  };\n\n  render() {\n    const { listTitle, isActive } = this.state;\n    return (\n      <div\n        className={`list-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"list-composer__form\" onSubmit={this.onSubmit}>\n          <Input\n            onChange={this.onChange}\n            value={listTitle}\n            placeholder={isActive ? 'Enter list title...' : 'Add a list'}\n            required={true}\n            name=\"listTitle\"\n            hideLabel={true}\n            className=\"list-composer__input\"\n          />\n          {isActive && (\n            <div className=\"list-composer__footer\">\n              <Button\n                className=\"list-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add List\n              </Button>\n              <Button\n                className=\"list-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"small\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => dispatch(userActions.getUserData(userId)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListComposer)\n);\n","import React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { ListComposer } from '../List';\n\nconst Board = props => {\n  const { boardId, children } = props;\n  return (\n    <Droppable\n      droppableId={boardId}\n      type={droppableTypes.LIST}\n      direction=\"horizontal\"\n    >\n      {provided => (\n        <div\n          className=\"board\"\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n        >\n          {children}\n          {provided.placeholder}\n          <ListComposer boardId={boardId} />\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nexport default Board;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadListsById = listsById => {\n  return {\n    type: types.LOAD_LISTS_BY_ID,\n    listsById\n  };\n};\n\nexport const fetchListsById = boardId => {\n  return async dispatch => {\n    try {\n      const listsById = await firebase.db\n        .collection('lists')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const listsById = {};\n          snapshot.forEach(doc => {\n            listsById[doc.id] = doc.data();\n          });\n          return listsById;\n        });\n      dispatch(loadListsById(listsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateListsById = list => {\n  return {\n    type: types.UPDATE_LISTS_BY_ID,\n    list\n  };\n};\n","export const LOAD_LISTS_BY_ID = 'LOAD_LISTS_BY_ID';\nexport const FETCH_LISTS_BY_ID = 'FETCH_LISTS_BY_ID';\nexport const UPDATE_LISTS_BY_ID = 'UPDATE_LISTS_BY_ID';\nexport const DELETE_CARD = 'DELETE_CARD';\n","export const getListsById = state => {\n  return state.listsById;\n};\n\nexport const getListsArray = state => {\n  const { listsById, boardsById, current } = state;\n  const { boardId } = current;\n  const board = boardsById[boardId];\n  if (!board) return null;\n  const { listIds } = board;\n\n  return listIds.map(listId => {\n    return {\n      listId,\n      ...listsById[listId]\n    };\n  });\n};\n","import * as types from './types';\n\nconst listsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_LISTS_BY_ID: {\n      const { listsById } = action;\n      return {\n        ...state,\n        ...listsById\n      };\n    }\n    case types.UPDATE_LISTS_BY_ID: {\n      const { list } = action;\n      return {\n        ...state,\n        ...list\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default listsById;\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport './Modal.scss';\n\nconst Modal = ({ onModalClose, children, className, onModalClick }) => {\n  return (\n    <div className=\"modal\" onClick={onModalClick}>\n      <div className={`modal__content ${className}`}>\n        <button\n          type=\"button\"\n          className=\"modal__btn--close\"\n          onClick={onModalClose}\n        >\n          <Icon name=\"x\" />\n        </button>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { Input } from '../Input';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { Modal } from '../Modal';\nimport './CardEditor.scss';\n\nclass CardEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cardId: this.props.card.cardId,\n      cardTitle: this.props.card.cardTitle,\n      cardDescription: this.props.card.cardDescription,\n      cardComment: '',\n      currentFocus: null,\n      isCommentFormFocused: false\n    };\n    this.commentFormRef = null;\n    this.subtaskFormRef = null;\n    this.setCommentFormRef = element => {\n      this.commentFormRef = element;\n    };\n    this.setSubtaskFormRef = element => {\n      this.subtaskFormRef = element;\n    };\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n    console.log('changed');\n  };\n\n  onBlur = e => {\n    const { card, firebase } = this.props;\n    const { cardTitle, cardDescription, currentFocus } = this.state;\n    const cardKey = e.target.name;\n\n    // When field loses focus, update card if change is detected\n\n    if (this.state[cardKey] !== card[cardKey]) {\n      const { cardId } = card;\n      firebase.updateCard(cardId, {\n        [cardKey]: this.state[cardKey]\n      });\n      console.log('updated!');\n    }\n\n    this.setState({\n      currentFocus: null\n    });\n  };\n\n  onSubmitComment = e => {\n    console.log(e.target.value);\n\n    e.preventDefault();\n  };\n\n  onFocus = e => {\n    this.setState({\n      currentFocus: e.target.name\n    });\n  };\n\n  handleModalClick = e => {\n    const { currentFocus } = this.state;\n    if (\n      (currentFocus === 'cardComment' &&\n        !this.commentFormRef.contains(e.target)) ||\n      (currentFocus === 'cardSubtask' &&\n        !this.subtaskFormRef.contains(e.target))\n    ) {\n      this.setState({\n        currentFocus: null\n      });\n    }\n  };\n\n  render() {\n    const { onCardEditorClose, user } = this.props;\n    console.log({user});\n    const {\n      cardTitle,\n      cardDescription,\n      cardComment,\n      currentFocus,\n      cardSubtask\n    } = this.state;\n    const isInvalid = cardComment === '';\n    const commentFormIsFocused = currentFocus === 'cardComment';\n\n    return (\n      <Modal\n        onModalClose={onCardEditorClose}\n        className=\"card-editor\"\n        onModalClick={this.handleModalClick}\n      >\n        <form\n          name=\"editCardForm\"\n          onFocus={this.onFocus}\n          className=\"card-editor__edit-card-form\"\n        >\n          <Input\n            className=\"card-editor__input--title\"\n            name=\"cardTitle\"\n            type=\"text\"\n            value={cardTitle}\n            onChange={this.onChange}\n            required\n            hideLabel\n            onBlur={this.onBlur}\n            onFocus={this.onFocus}\n          />\n          <div\n            className={`card-editor__section ${\n              currentFocus === 'cardDescription' ? 'is-focused' : ''\n            }`}\n          >\n            <div className=\"card-editor__section-icon\">\n              <Icon name=\"edit-3\" />\n            </div>\n            <Textarea\n              className=\"card-editor__textarea--description\"\n              name=\"cardDescription\"\n              value={cardDescription}\n              onChange={this.onChange}\n              placeholder=\"Add a description\"\n              onBlur={this.onBlur}\n              onFocus={this.onFocus}\n            />\n          </div>\n        </form>\n        <div\n          className={`card-editor__section ${\n            currentFocus === 'cardSubtask' ? 'is-focused' : ''\n          }`}\n        >\n          <hr className=\"card-editor__hr\" />\n          <div className=\"card-editor__section-icon\">\n            <Icon name=\"check-square\" />\n          </div>\n          <form\n            name=\"subtaskForm\"\n            className={`card-editor__subtask-form ${\n              currentFocus === 'cardSubtask' ? 'is-focused' : ''\n            }`}\n            onFocus={this.onFocus}\n            ref={this.setSubtaskFormRef}\n          >\n            <Textarea\n              className=\"card-editor__textarea--subtask\"\n              name=\"cardSubtask\"\n              value={cardSubtask}\n              onChange={this.onChange}\n              placeholder=\"Add a subtask\"\n            />\n            {currentFocus === 'cardSubtask' && (\n              <Button\n                type=\"submit\"\n                color=\"secondary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isInvalid}\n                onClick={this.submitSubtask}\n                className=\"card-editor__btn--submit-subtask\"\n              >\n                Add subtask\n              </Button>\n            )}\n          </form>\n        </div>\n        <div\n          className={`card-editor__section ${\n            commentFormIsFocused ? 'is-focused' : ''\n          }`}\n        >\n          <hr className=\"card-editor__hr\" />\n          <div className=\"card-editor__section-icon\">\n            <Icon name=\"message-circle\" />\n          </div>\n          <form\n            name=\"commentForm\"\n            className={`card-editor__comment-form ${\n              commentFormIsFocused ? 'is-focused' : ''\n            }`}\n            onFocus={this.onFocus}\n            ref={this.setCommentFormRef}\n          >\n            <Textarea\n              className=\"card-editor__textarea--comment\"\n              name=\"cardComment\"\n              value={cardComment}\n              onChange={this.onChange}\n              placeholder=\"Write a comment...\"\n            />\n            {commentFormIsFocused && (\n              <Button\n                type=\"submit\"\n                color=\"secondary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isInvalid}\n                onClick={this.onSubmitComment}\n                name=\"cardCommentSubmit\"\n                className=\"card-editor__btn--submit-comment\"\n              >\n                Comment\n              </Button>\n            )}\n          </form>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    current: currentSelectors.getCurrent(state),\n    listsById: listSelectors.getListsById(state),\n    listsArray: listSelectors.getListsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId)),\n    updateListsById: list => dispatch(listActions.updateListsById(list)),\n    updateCardsById: card => dispatch(cardActions.updateCardsById(card)),\n    reorderLists: (boardId, listIds) =>\n      dispatch(boardActions.reorderLists(boardId, listIds))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardEditor)\n);\n","/**\n * Checks if two arrays or objects are equal\n * @param {Array|Object} value\n * @param {Array|Object} other\n */\n\n// eslint-disable-next-line import/prefer-default-export\nexport const isEqual = (value, other) => {\n  const type = Object.prototype.toString.call(value);\n\n  // If both objects are not the same type, return false\n  if (type !== Object.prototype.toString.call(other)) return false;\n\n  const typeObj = '[object Object]';\n  const typeArr = '[object Array]';\n  // If items are neither objects nor arrays, return false\n  if (type !== typeObj && type !== typeArr) return false;\n\n  // Compare length of two items\n  const valueLen = type === typeArr ? value.length : Object.keys(value).length;\n  const otherLen = type === typeArr ? other.length : Object.keys(other).length;\n  if (valueLen !== otherLen) return false;\n\n  const compare = (item1, item2) => {\n    const typeFunc = '[object Function]';\n    const itemType = Object.prototype.toString.call(item1);\n    if (itemType !== Object.prototype.toString.call(item2)) return false;\n    if (itemType === typeObj || itemType === typeArr) {\n      return isEqual(item1, item2);\n    }\n    if (itemType === typeFunc) {\n      return item1.toString() === item2.toString();\n    }\n    return item1 === item2;\n  };\n\n  if (type === typeArr) {\n    for (let i = 0; i < valueLen; i++) {\n      if (!compare(value[i], other[i])) return false;\n    }\n  } else {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (compare(value[key], other[key]) === false) return false;\n      }\n    }\n  }\n  return true;\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport * as ROUTES from '../../constants/routes';\nimport Board from './Board';\nimport { List } from '../List';\nimport { CardEditor } from '../CardEditor';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { utils } from '../../utils';\nimport './Board.scss';\n\nclass BoardContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: true,\n      isDragging: false,\n      isCardEditorOpen: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      current,\n      fetchListsById,\n      fetchCardsById,\n      firebase,\n      updateBoardsById,\n      updateListsById,\n      updateCardsById,\n      boardId,\n      board,\n      updateListIds\n    } = this.props;\n\n    if (current.boardId !== boardId) {\n      this.props.selectBoard(boardId);\n    }\n\n    fetchListsById(boardId);\n    fetchCardsById(boardId).then(() => {\n      this.setState({\n        isFetching: false\n      });\n    });\n    this.boardObserver = firebase.getBoardDoc(boardId).onSnapshot(snapshot => {\n      const updatedBoard = snapshot.data();\n      if (!utils.isEqual(updatedBoard.listIds, board.listIds)) {\n        updateListIds(boardId, updatedBoard.listIds);\n      }\n    });\n    this.listObserver = firebase.db\n      .collection('lists')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const list = {\n            [change.doc.id]: change.doc.data()\n          };\n          updateListsById(list);\n        });\n      });\n    this.cardObserver = firebase.db\n      .collection('cards')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const card = {\n            [change.doc.id]: {\n              cardId: change.doc.id,\n              ...change.doc.data()\n            }\n          };\n          updateCardsById(card);\n        });\n      });\n    console.log('mounted');\n  }\n\n  componentWillUnmount() {\n    this.boardObserver();\n    this.listObserver();\n    this.cardObserver();\n  }\n\n  onDragStart = () => {\n    this.setState({\n      isDragging: true\n    });\n  };\n\n  onDragEnd = ({ destination, draggableId, source, type }) => {\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    const { firebase } = this.props;\n    if (type === droppableTypes.CARD) {\n      const { listsById } = this.props;\n      const isMovedWithinList = source.droppableId === destination.droppableId;\n      const updatedCardIds = [...listsById[destination.droppableId].cardIds];\n      if (isMovedWithinList) {\n        updatedCardIds.splice(source.index, 1);\n        updatedCardIds.splice(destination.index, 0, draggableId);\n        firebase.updateList(source.droppableId, {\n          cardIds: updatedCardIds\n        });\n      } else {\n        updatedCardIds.splice(destination.index, 0, draggableId);\n        firebase.moveCardToList({\n          cardId: draggableId,\n          origListId: source.droppableId,\n          newListId: destination.droppableId,\n          updatedCardIds\n        });\n      }\n    }\n\n    if (type === droppableTypes.LIST) {\n      const { boardsById, current, reorderLists } = this.props;\n      const { boardId } = current;\n      const updatedListIds = [...boardsById[boardId].listIds];\n      updatedListIds.splice(source.index, 1);\n      updatedListIds.splice(destination.index, 0, draggableId);\n      firebase.updateBoard(boardId, {\n        listIds: updatedListIds\n      });\n      reorderLists(boardId, updatedListIds);\n    }\n\n    this.setState({\n      isDragging: false\n    });\n  };\n\n  toggleCardEditor = () => {\n    this.setState(prevState => ({\n      isCardEditorOpen: !prevState.isCardEditorOpen\n    }));\n  };\n\n  handleCardClick = cardId => {\n    this.props.selectCard(cardId);\n    this.toggleCardEditor();\n  };\n\n  render() {\n    const { isFetching, isCardEditorOpen } = this.state;\n    const { current, boardsById, listsArray, cardsById, boardId, board } = this.props;\n    if (isFetching) return null;\n    const { cardId } = current;\n    const { boardTitle } = board;\n    const lists = listsArray.map((list, listIndex) => {\n      const { listId, listTitle, cardIds } = list;\n      return (\n        <List\n          listId={listId}\n          key={listId}\n          listIndex={listIndex}\n          listTitle={listTitle}\n          cardIds={cardIds}\n          isFetchingCards={this.state.isFetching}\n          isDragging={this.state.isDragging}\n          onCardClick={this.handleCardClick}\n        />\n      );\n    });\n\n    return (\n      <main className=\"board-container\">\n        <h1>{boardTitle}</h1>\n        <DragDropContext\n          onDragEnd={this.onDragEnd}\n          onDragStart={this.onDragStart}\n        >\n          <Board boardId={boardId}>{lists}</Board>\n        </DragDropContext>\n        {isCardEditorOpen && (\n          <CardEditor\n            card={cardsById[cardId]}\n            onCardEditorClose={this.toggleCardEditor}\n          />\n        )}\n      </main>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    current: currentSelectors.getCurrent(state),\n    listsById: listSelectors.getListsById(state),\n    listsArray: listSelectors.getListsArray(state),\n    cardsById: cardSelectors.getCardsById(state),\n    board: boardSelectors.getBoard(state, ownProps.boardId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId)),\n    selectCard: cardId => dispatch(currentActions.selectCard(cardId)),\n    fetchListsById: boardId => dispatch(listActions.fetchListsById(boardId)),\n    updateListsById: list => dispatch(listActions.updateListsById(list)),\n    fetchCardsById: boardId => dispatch(cardActions.fetchCardsById(boardId)),\n    updateCardsById: card => dispatch(cardActions.updateCardsById(card)),\n    reorderLists: (boardId, listIds) =>\n      dispatch(boardActions.reorderLists(boardId, listIds)),\n    updateListIds: (boardId, listIds) =>\n      dispatch(boardActions.updateListIds(boardId, listIds))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardContainer)\n);\n","import React, { Component } from 'react';\nimport { Modal } from '../Modal';\nimport { Input } from '../Input';\n\nconst INITIAL_STATE = {\n  boardTitle: ''\n};\n\nexport default class BoardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { boardTitle } = this.state;\n    const { handleSubmit, onClose } = this.props;\n    this.props.handleSubmit(boardTitle);\n    this.props.onClose();\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { boardTitle } = this.state;\n    return (\n      <Modal onModalClose={this.props.onClose}>\n        <form onSubmit={this.onSubmit}>\n          <Input\n            name=\"boardTitle\"\n            title=\"Board Title\"\n            value={boardTitle}\n            onChange={this.onChange}\n            type=\"text\"\n          />\n          <button type=\"submit\">Create Board</button>\n        </form>\n      </Modal>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { withAuthorization } from '../Session';\nimport * as ROUTES from '../../constants/routes';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { currentSelectors } from '../../ducks/current';\nimport { BoardGridContainer } from '../BoardGrid';\nimport { BoardComposer } from '../Board';\nimport { BoardContainer } from '../Board';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport './Home.scss';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isBoardComposerOpen: false,\n      isFetching: true\n    };\n  }\n\n  componentDidMount() {\n    const userId = this.props.firebase.auth.currentUser.uid;\n    console.log('mounted home');\n    this.props.fetchUserData(userId);\n    this.props.fetchBoardsById(userId).then(() =>\n      this.setState({\n        isFetching: false\n      })\n    );\n  }\n\n  toggleBoardComposer = () => {\n    this.setState(prevState => ({\n      isBoardComposerOpen: !prevState.isBoardComposerOpen\n    }));\n  };\n\n  createBoard = boardTitle => {\n    const userId = this.props.user.userId;\n    this.props.firebase.addBoard({ userId, boardTitle });\n  };\n\n  render() {\n    const { isBoardComposerOpen, isFetching } = this.state;\n    const userId = this.props.user.userId;\n    if (isFetching) return null;\n    return (\n      <>\n        {isBoardComposerOpen && (\n          <BoardComposer\n            onClose={this.toggleBoardComposer}\n            handleSubmit={this.createBoard}\n          />\n        )}\n        <Switch>\n          <Route\n            exact\n            path={ROUTES.HOME}\n            render={() => (\n              <main className=\"main\">\n                <h1>Home</h1>\n                {userId && (\n                  <BoardGridContainer\n                    openBoardComposer={this.toggleBoardComposer}\n                  />\n                )}\n              </main>\n            )}\n          />\n          <Route\n            path={ROUTES.BOARD}\n            render={props => <BoardContainer boardId={props.match.params.id} {...props} />}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    currentBoardId: currentSelectors.getCurrentBoardId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUserData: userId => dispatch(userActions.fetchUserData(userId)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(HomePage)\n);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .passwordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n    const isInvalid = passwordOne === '' || passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"passwordOne\"\n          title=\"New Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          title=\"Confirm New Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"large\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Change My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React from 'react';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport { PasswordChangeForm } from '../PasswordChange';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport './Account.scss';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <main className=\"account\">\n        <h1>Account: {authUser.email}</h1>\n        <section className=\"account__section\">\n        <h2>Forgot your password?</h2>\n          <PasswordForgetForm />\n        </section>\n        <section className=\"account__section\">\n        <h2>Change your password.</h2>\n          <PasswordChangeForm />\n        </section>\n      </main>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(AccountPage);\n","import React, { Component } from 'react';\nimport { Navigation } from '../Navigation';\nimport './Header.scss';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <Navigation />\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport { Navigation } from '../Navigation';\nimport * as ROUTES from '../../constants/routes';\nimport { LandingPage } from '../Landing';\nimport { SignUpPage } from '../SignUp';\nimport { SignInPage } from '../SignIn';\nimport { PasswordForgetPage } from '../PasswordForget';\nimport { HomePage } from '../Home';\nimport { AccountPage } from '../Account';\nimport { AdminPage } from '../Admin';\nimport { withAuthentication } from '../Session';\nimport { Board } from '../Board';\nimport {Header} from '../Header';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Header />\n        <Switch>\n          <Route exact path={ROUTES.LANDING} component={LandingPage} />\n          <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n          <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n          <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n          <Route path={ROUTES.HOME} component={HomePage} />\n          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n          <Route path={ROUTES.ADMIN} component={AdminPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { boardsById } from '../ducks/boards';\nimport { cardsById } from '../ducks/cards';\nimport { listsById } from '../ducks/lists';\nimport { user } from '../ducks/user';\nimport { current } from '../ducks/current';\n\nexport default combineReducers({\n  boardsById,\n  cardsById,\n  listsById,\n  user,\n  current\n});\n","import * as types from './types';\n\nconst current = (state = {}, action) => {\n  switch (action.type) {\n    case types.SELECT_BOARD: {\n      const { boardId } = action;\n      return {\n        ...state,\n        boardId\n      };\n    }\n    case types.SELECT_LIST: {\n      const { listId } = action;\n      return {\n        ...state,\n        listId\n      };\n    }\n    case types.SELECT_CARD: {\n      const { cardId } = action;\n      return {\n        ...state,\n        cardId\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport { current };\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\n\nexport default history;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport 'normalize.css';\nimport './index.scss';\nimport { App } from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { FirebaseContext } from './components/Firebase';\nimport reducers from './store/reducers';\nimport firebase from './store/firebase';\nimport history from './store/history';\n\nconst store = createStore(reducers, {}, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <FirebaseContext.Provider value={firebase}>\n      <Router basename={process.env.PUBLIC_URL} history={history}>\n        <App />\n      </Router>\n    </FirebaseContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}