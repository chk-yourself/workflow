{"version":3,"sources":["assets/feather/feather-sprite.svg","constants/routes.js","components/Firebase/context.js","components/Firebase/Firebase.js","components/Input/Input.js","components/Button/Button.js","components/SignUp/SignUpForm.js","components/UserFormPage/UserFormPage.js","components/SignUp/SignUp.js","components/SignIn/SignInForm.js","components/PasswordForget/PasswordForgetForm.js","components/PasswordForget/PasswordForget.js","components/SignIn/SignIn.js","components/Session/context.js","store/firebase.js","ducks/currentUser/actions.js","ducks/currentUser/types.js","ducks/currentUser/selectors.js","ducks/currentUser/reducer.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","ducks/users/actions.js","ducks/users/types.js","ducks/users/selectors.js","ducks/users/reducer.js","ducks/current/actions.js","ducks/current/types.js","ducks/current/selectors.js","components/ProjectGrid/ProjectGrid.js","ducks/projects/actions.js","ducks/projects/types.js","ducks/projects/selectors.js","ducks/projects/reducer.js","components/Icon/Icon.js","components/ProjectGrid/ProjectGridContainer.js","components/withOutsideClick/withOutsideClick.js","components/Modal/Modal.js","components/ProjectComposer/ProjectComposer.js","constants/droppableTypes.js","components/ListComposer/ListComposer.js","components/Board/Board.js","ducks/lists/actions.js","ducks/lists/types.js","ducks/lists/selectors.js","ducks/lists/reducer.js","ducks/tasks/selectors.js","utils/utils.js","ducks/tasks/actions.js","ducks/tasks/types.js","ducks/tasks/reducer.js","ducks/subtasks/actions.js","ducks/subtasks/types.js","ducks/subtasks/selectors.js","ducks/subtasks/reducer.js","constants/keys.js","components/TaskComposer/TaskComposer.js","components/Textarea/Textarea.js","components/CardComposer/CardComposer.js","components/Menu/Menu.js","components/Menu/MenuItem.js","components/Popover/Popover.js","components/Popover/PopoverWrapper.js","components/Tag/Tag.jsx","components/Avatar/Avatar.js","components/Calendar/constants.js","components/Calendar/utils.js","components/Radio/Radio.js","components/Calendar/Calendar.js","components/Card/Card.js","components/Checkbox/Checkbox.js","components/Task/Task.js","components/Task/DraggableTask.js","components/Tasks/Tasks.js","components/List/List.js","ducks/comments/actions.js","ducks/comments/types.js","ducks/comments/selectors.js","ducks/comments/reducer.js","components/Toolbar/Toolbar.jsx","components/TaskEditor/TaskEditorAssignMember.js","components/TaskEditor/TaskEditorSection.js","components/MemberSearch/MemberSearch.js","components/TaskEditor/TaskEditorMoreActions.js","components/Subtask/Subtask.js","components/Subtasks/Subtasks.js","components/TaskEditor/TaskEditorComment.js","components/ColorPicker/ColorPicker.js","components/TagsInput/TagsInput.js","components/DatePicker/DatePicker.js","components/TaskEditor/TaskEditorPane.js","components/ProjectIcon/ProjectIcon.js","components/TaskEditor/TaskEditor.js","components/Board/BoardContainer.js","components/Main/Main.jsx","components/Dashboard/DashboardPanel.js","components/Dashboard/TasksDueSoon.js","components/Dashboard/Dashboard.js","components/ExpansionPanel/ExpansionPanelHeader.jsx","components/ExpansionPanel/ExpansionPanelContent.jsx","components/ExpansionPanel/ExpansionPanel.jsx","components/Folder/Folder.jsx","components/UserTasks/UserTasks.jsx","components/Home/Home.js","components/PasswordChange/PasswordChangeForm.js","components/Account/Account.js","components/Admin/Admin.js","components/Logo/Logo.js","components/Nav/Navbar.js","components/Nav/Sidebar.js","components/Nav/NavLinks.js","components/SignOut/SignOutButton.js","components/SearchBar/SearchBar.js","components/Topbar/Topbar.js","components/Header/Header.jsx","components/App/App.js","serviceWorker.js","store/reducers.js","ducks/current/reducers.js","store/history.js","index.js"],"names":["module","exports","__webpack_require__","p","HOME","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","signInWithGoogle","provider","auth","GoogleAuthProvider","addScope","signInWithPopup","then","result","credential","token","accessToken","console","log","user","catch","error","errorCode","code","message","email","alert","signInWithGithub","GithubAuthProvider","signInWithRedirect","createUserWithEmailAndPassword","password","signInWithEmailAndPassword","signOut","passwordReset","sendPasswordResetEmail","passwordUpdate","newPassword","currentUser","updatePassword","getTimestamp","firestore","FieldValue","serverTimestamp","addToArray","value","arrayUnion","removeFromArray","arrayRemove","deleteField","delete","getDocRef","path","db","doc","updateDoc","newValue","arguments","length","undefined","update","objectSpread","lastUpdatedAt","getUserDoc","userId","collection","addUser","_ref","name","username","_ref$projectIds","projectIds","_ref$photoURL","photoURL","batch","userRef","concat","newFolderRef","todayFolderRef","upcomingFolderRef","laterFolderRef","set","folderIds","taskIds","commit","updateUser","addTag","_ref2","taskId","text","_ref2$projectId","_ref2$color","color","taskRef","getTaskDoc","tags","defineProperty","lastUsedAt","merge","projectRef","getProjectDoc","removeTag","_ref3","tag","updateTask","setTagColor","_ref4","updateProject","updateProjectName","_ref5","where","get","snapshot","docs","forEach","ref","projectName","addProject","_ref6","_ref6$color","_ref6$view","view","_ref6$isPrivate","isPrivate","add","createdAt","listIds","createdBy","memberIds","notes","isFavorited","id","getListDoc","listId","updateList","updateListName","_ref7","listRef","listName","addList","_ref8","_ref8$projectId","_ref8$userId","deleteList","_ref9","addTask","_ref10","_ref10$userId","_ref10$folderId","folderId","isFolderItem","commentIds","subtaskIds","isCompleted","completedAt","dueDate","assignedTo","folders","ownerId","removeAssignee","_ref12","_batch$update","folderRef","addAssignee","_ref13","_batch$update2","deleteTask","_ref14","_ref14$assignedTo","_ref14$folders","memberId","moveTaskToList","_ref15","origListId","newListId","updatedTaskIds","origListRef","newListRef","moveTaskToFolder","_ref16","_batch$update3","origFolderId","newFolderId","origFolderRef","getSubtaskDoc","subtaskId","addSubtask","_ref17","_ref17$memberIds","_ref17$projectId","_ref17$taskId","_ref17$dueDate","toConsumableArray","updateSubtask","deleteSubtask","_ref18","_ref18$taskId","subtaskRef","getCommentDoc","commentId","addComment","_ref19","_ref19$memberIds","content","isPinned","from","to","likes","updateComment","initializeApp","Input","_ref$className","className","type","onFocus","onChange","onInput","placeholder","isRequired","onBlur","autoComplete","inputRef","hideLabel","label","labelClass","onKeyDown","maxLength","minLength","isReadOnly","Fragment","htmlFor","required","readOnly","tabIndex","defaultProps","Button","children","_ref$type","onClick","_ref$color","_ref$size","size","_ref$variant","variant","disabled","_ref$iconOnly","iconOnly","buttonRef","objectWithoutProperties","INITIAL_STATE","passwordOne","passwordTwo","SignUpForm","possibleConstructorReturn","getPrototypeOf","call","onSubmit","e","_this$state","state","_this$props","history","authUser","uid","setState","push","ROUTES","preventDefault","target","_this$state2","isInvalid","components_Input_Input","components_Button_Button","compose","withRouter","UserFormPage","title","SignUpLink","Link","SignUpPage","components_UserFormPage_UserFormPage","SignUp_SignUpForm","SignInForm","enableGoogleLogin","PasswordForgetForm","PasswordForgetLink","PasswordForgetPage","PasswordForget_PasswordForgetForm","SignInPage","SignIn_SignInForm","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","AuthUserContext","setCurrentUser","fetchCurrentUserData","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","data","sent","t0","stop","_x","apply","loadFolders","fetchFolders","_callee2","_context2","foldersById","_x2","addFolder","folderData","updateFolder","deleteFolder","reorderFolders","loadTasksDueSoon","tasksDueSoon","fetchTasksDueWithinDays","days","startingDate","Date","endingDate","setHours","timeEnd","setDate","getDate","_callee3","_context3","orderBy","tasks","_x3","addTaskDueSoon","taskData","deleteTaskDueSoon","updateTaskDueSoon","selectProject","selectList","selectTask","getCurrentUser","getCurrentUserId","getFolders","getFolderIds","getFoldersArray","keys","map","isDefault","getFolder","getTasksDueSoonById","getTasksDueSoonArr","action","_state$folders","restOfFolders","_toPropertyKey","_state$tasksDueSoon","restOfTasks","withAuthentication","WithAuthentication","_React$Component","inherits","createClass","key","_this2","listener","onAuthStateChanged","Session_context","Provider","connect","currentUserActions","withAuthorization","condition","WithAuthorization","loadUserData","loadUsersById","usersById","fetchUsersById","users","fetchUserData","userData","deleteUser","getUsersById","getUserData","getUserTaskIds","getCurrentUserData","currentUserId","current","getUsersArray","getMembersArray","tasksById","reducer_toPropertyKey","selectUser","getCurrentProjectId","getCurrentListId","getCurrentTaskId","getCurrent","getMergedTags","_state$current","projectsById","projectTags","userTags","mergedTags","ProjectTile","ProjectGrid","loadProjectsById","fetchProjectsById","projects","fetchProject","projectData","reorderLists","updateListIds","updateProjectTags","getProjectsById","getProjectsArray","getProject","getProjectTags","getProjectName","getProjectColor","Icon","width","height","xmlns","xmlnsXlink","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","xlinkHref","featherIcons","ProjectGridContainer","projectObserver","onSnapshot","querySnapshot","docChanges","change","_this$props2","projectsArray","projectTiles","project","ProjectGrid_ProjectTile","ProjectGrid_ProjectGrid","openProjectComposer","components_Icon_Icon","ownProps","userSelectors","projectSelectors","projectActions","currentActions","withOutsideClick","WrappedComponent","_Component","WithOutsideClick","handleTouch","isTouchEnabled","document","removeEventListener","handleOutsideClick","addEventListener","componentEl","Error","contains","componentInstance","onOutsideClick","createRef","innerRef","el","Modal","onModalClose","onModalClick","_this$props$size","classes","modal","button","projectTitle","ProjectComposer","handleSubmit","onClose","components_Modal_Modal","LIST","TASK","FOLDER","isActive","ListComposer","resetForm","onReset","currentSelectors","updateProjectsById","Board","react_beautiful_dnd_esm","droppableId","droppableTypes","direction","provided","droppableProps","components_ListComposer_ListComposer","loadListsById","listsById","fetchListsById","lists","fetchUserLists","listData","getListsById","getListName","getUserLists","_usersById$userId","defaultLists","defaultKey","getListsArray","getTasksById","getListTasks","getFolderTasks","getSimpleTasks","reduce","_tasksById$taskId","getTaskTags","taskTags","taskTag","isEqual","other","prototype","toString","typeArr","valueLen","compare","item1","item2","itemType","i","hasOwnProperty","windowDebouncer","callback","request","_len","args","Array","_key","window","cancelAnimationFrame","requestAnimationFrame","firstThen","first","after","count","_len2","_key2","fn","invokeBeforeExecution","loadTasksById","loadUserTasks","fetchProjectTasks","handleTaskSubscription","syncUserTasks","fetchUserTasks","_callee4","_context4","_x4","updateTasksById","task","tasks_reducer_toPropertyKey","loadSubtasksById","subtasksById","fetchSubtasksById","subtasks","updateSubtasksById","subtask","fetchProjectSubtasks","fetchTaskSubtasks","fetchUserSubtasks","subtaskData","getSubtasksById","getSubtasksArray","getSimpleSubtasks","_subtasksById$subtask","getActiveSubtasks","filter","getCompletedSubtasks","includes","subtasks_reducer_toPropertyKey","BACKSPACE","ENTER","TAB","ARROW_DOWN","ARROW_UP","TaskComposer","currentUserSelectors","Textarea","autoHeightResize","isAutoHeightResizeEnabled","textareaEl","style","scrollHeight","onDragStart","CardComposer","Textarea_Textarea_Textarea","Menu","menuRef","MenuItem","Popover","PopoverWrapper","onPopoverClose","toggleOpen","onButtonClick","prevState","handleClose","matches","alignInner","onWrapperClick","alignOuter","buttonProps","anchorEl","popoverWrapperStyle","offsetTop","offsetLeft","position","top","wrapper","Popover_Popover","popover","align","Tag","onDelete","tagRef","Avatar","getUserInitials","fullName","split","charAt","join","toUpperCase","imgSrc","imgProps","avatar","src","alt","img","backgroundColor","MONTHS","long","short","daysTotal","WEEK_DAYS","narrow","isLeapYear","year","getMonthFirstDay","monthIndex","getDay","isToday","date","isYesterday","today","isTomorrow","isThisYear","getFullYear","getMonthDays","getPrevMonth","month","getNextMonth","getMonthDates","monthDays","monthFirstDay","_getPrevMonth","prevMonth","prevMonthYear","prevMonthDays","daysFromPrevMonth","daysFromNextMonth","prevMonthDates","n","day","thisMonthDates","nextMonthDates","isDate","getSimpleDate","dateObj","getMonth","isSimpleDate","isSameDate","base","dateDay","dateMonth","dateYear","baseDay","baseMonth","baseYear","getNextYears","num","startingYear","item","zeroPad","padStart","toSimpleDateString","simpleDate","toSimpleDateObj","dateString","dateArr","isSDSFormat","test","isWithinDays","timeStart","isPriorDate","toDateString","options","useRelative","format","weekday","slice","trim","Radio","_ref$classes","radio","isChecked","checked","Calendar","isMonthsDropdownActive","isYearsDropdownActive","goToNextMonth","onMonthClick","dateUtils","goToPrevMonth","toggleMonthsDropdown","toggleYearsDropdown","selectMonth","_this$props3","selectYear","onYearClick","_this$props4","selectedDate","onDayClick","dates","years","calendar","PopoverWrapper_PopoverWrapper","yearOption","components_Radio_Radio","monthOption","weekDay","isSelectedDate","CardDetail","icon","Card","handleCardClick","onCardClick","nextProps","indexOf","taskIndex","completedSubtasks","taskMembers","dueDateStr","toDate","isDueToday","isDueTmrw","isPastDue","draggableId","index","draggableProps","dragHandleProps","headerEl","components_Tag_Tag","Card_CardDetail","member","Avatar_Avatar_Avatar","taskSelectors","subtaskSelectors","Checkbox","Task","isFocused","prevPropsName","newName","toggleCompleted","handleTaskClick","onTaskClick","_this$props5","listStyle","components_Checkbox_Checkbox","DraggableTask","components_Task_Task","Tasks","scrollToBottom","listEnd","scrollIntoView","behavior","prevProps","isBoardView","inner","components_Card_Card","Task_DraggableTask","minHeight","isDraggingOver","float","clear","List","handleListDelete","listIndex","isFetchingTasks","isRestricted","components_Menu_Menu","Menu_MenuItem","href","Tasks_Tasks","components_CardComposer_CardComposer","components_TaskComposer_TaskComposer","loadCommentsById","commentsById","fetchCommentsById","comments","updateCommentsById","comment","fetchTaskComments","fetchUserComments","commentData","deleteComment","getCommentsById","getCommentsArray","comments_reducer_toPropertyKey","Toolbar","TaskEditorAssignMember","TaskEditorSection","MemberSearch","query","selectedMember","selectedIndex","filteredList","memberSearchEl","matchUser","regExp","RegExp","newIndex","persistSelectedMember","onMemberClick","nextIndex","prevIndex","inputEl","focus","assignedMembers","_this$state3","isAssigned","TaskEditorMoreActions","onMenuClick","data-action","appRoot","getElementById","Subtask","portal","appendChild","removeChild","isDragging","ReactDOM","createPortal","Subtasks","isFetching","currentProject","moveSubtask","destination","source","updatedSubtaskIds","splice","subtaskObserver","onDragEnd","components_Subtask_Subtask","subtaskActions","TaskEditorComment","secondsElapsed","tick","handleLikeClick","handleLike","secondsSinceCreation","Math","floor","now","getTime","interval","setInterval","clearInterval","dateCreated","timeCreated","toLocaleTimeString","hour","minute","hour12","dateCreatedString","taskActions","commentActions","ColorPicker","selectedColor","handleColorChange","selectColor","TagsInput","selectedTag","focusedTag","hasExactMatch","matchTag","tagSuggestions","findIndex","persistSelectedTag","assignedTags","handleTagDelete","isColorPickerActive","currentTag","hasTags","colorPickerStyle","currentTagEl","_this$currentTagEl","offsetWidth","offsetHeight","left","ColorPicker_ColorPicker_ColorPicker","DatePicker","currentMonth","currentYear","selectDate","newDate","setCurrentMonth","setCurrentYear","updateDateString","currentDueDate","clearDueDate","display","Calendar_Calendar_Calendar","TaskEditorPane","ProjectIcon","TaskEditorWrapper","handleTaskEditorClose","handleClick","components_TaskEditor_TaskEditorPane","TaskEditor","currentValue","taskKey","updatedValue","currentFocus","newComment","commentFormEl","newSubtaskFormEl","handleMoreActions","dataset","handleCommentLike","assignMember","toggleColorPicker","_this$props6","isProjectTag","isUserTag","tagData","_this$props7","_this$props8","setDueDate","_this$props9","toggleDatePicker","isDatePickerActive","_this$props10","newSubtask","membersListButton","_this$props11","commentObserver","_this3","_this$props12","commentsArray","usersArray","membersArray","projectColor","hasSubtasks","hasComments","isNewCommentInvalid","isNewSubtaskInvalid","commentFormIsFocused","newSubtaskFormIsFocused","taskDueDate","TaskEditor_TaskEditorWrapper","components_Toolbar_Toolbar","TaskEditorAssignMember_TaskEditorAssignMember","MemberSearch_MemberSearch_MemberSearch","TaskEditor_TaskEditorMoreActions","TaskEditor_TaskEditorSection","components_ProjectIcon_ProjectIcon","DatePicker_DatePicker_DatePicker","datePickerEl","click","TagsInput_TagsInput_TagsInput","components_Subtasks_Subtasks","components_TaskEditor_TaskEditorComment","commentSelectors","syncTaskComments","BoardContainer","isMovedWithinList","updatedListIds","toggleTaskEditor","isTaskEditorOpen","onNameChange","onNameBlur","newProjectName","updatedProject","utils","listObserver","taskObserver","listsArray","components_Board_Board","list","components_List_List","components_TaskEditor_TaskEditor","listSelectors","listActions","Main","main","DashboardPanel","TasksDueSoon","Dashboard_DashboardPanel","Dashboard","toggleProjectComposer","currentTaskId","Dashboard_TasksDueSoon","ProjectGrid_ProjectGridContainer","store","ExpansionPanelHeader","role","ExpansionPanelContent","isExpanded","toggleContent","header","propsIsExpanded","panel","aria-expanded","ExpansionPanel_ExpansionPanelHeader","ExpansionPanel_ExpansionPanelContent","Folder","isDragDisabled","UserTasks","origIndex","isMovedWithinFolder","updatedFolderIds","folderObserver","filters","components_Main_Main","folder","components_Folder_Folder","HomePage","isProjectComposerOpen","createProject","userObserver","ProjectComposer_ProjectComposer_ProjectComposer","Switch","Route","exact","render","components_Dashboard_Dashboard","Board_BoardContainer","match","params","components_UserTasks_UserTasks","currentProjectId","userActions","PasswordChangeForm","PasswordChange_PasswordChangeForm","AdminPage","loading","Logo","Navbar","viewportWidth","innerWidth","isMobileNavVisible","handleResize","toggleMobileNavVisibility","minWidth","navLinksEl","isMobileView","navbar","navEl","components_Logo_Logo","links","SidebarIcon","Sidebar","onToggle","NavLinksNonAuth","NavLink","NavLinksAuth","Sidebar_SidebarIcon","SearchBar","stopPropagation","Topbar","SearchBar_SearchBar_SearchBar","SignOut_SignOutButton","Header","isNavExpanded","toggleNav","Sidebar_Sidebar","NavLinks_NavLinksAuth","components_Topbar_Topbar","Navbar_Navbar","NavLinks_NavLinksNonAuth","Header_Header_Header","component","LandingPage","Home_Home","AccountPage","Boolean","location","hostname","combineReducers","createBrowserHistory","basename","createStore","reducers","applyMiddleware","thunk","es","context","Router","components_App_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.70ccbe78.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/feather-sprite.0ed672ce.svg\";","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const APP = '/0/';\nexport const HOME = '/0/home/:id';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const PROJECT = '/0/project/:id';\nexport const USER_PROJECTS = '/0/:id/projects';\nexport const USER_TASKS = '/0/:id/tasks';\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import firebase from 'firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\nclass Firebase {\n  constructor() {\n    firebase.initializeApp(config);\n    this.auth = firebase.auth();\n    this.db = firebase.firestore();\n  }\n\n  // Auth API\n\n  get currentUser() {\n    return this.auth.currentUser;\n  }\n\n  signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    provider.addScope('https://www.googleapis.com/auth/contacts.readonly');\n    this.auth\n      .signInWithPopup(provider)\n      .then(result => {\n        if (result.credential) {\n          const token = result.credential.accessToken;\n          console.log(token);\n          const user = result.user;\n        }\n      })\n      .catch(error => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        const email = error.email;\n        const credential = error.credential;\n\n        if (errorCode === 'auth/account-exists-with-different-credential') {\n          alert(\n            'You have already signed up with a different auth provider for that email.'\n          );\n        } else {\n          console.error(error);\n        }\n      });\n  };\n\n  signInWithGithub = () => {\n    const provider = new firebase.auth.GithubAuthProvider();\n    this.auth.signInWithRedirect(provider);\n  };\n\n  createUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  signInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  signOut = () => this.auth.signOut();\n\n  passwordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  passwordUpdate = newPassword =>\n    this.auth.currentUser.updatePassword(newPassword);\n\n  // Utility API\n\n  getTimestamp = () => firebase.firestore.FieldValue.serverTimestamp();\n\n  addToArray = value => firebase.firestore.FieldValue.arrayUnion(value);\n\n  removeFromArray = value => firebase.firestore.FieldValue.arrayRemove(value);\n\n  deleteField = () => firebase.firestore.FieldValue.delete();\n\n  getDocRef = path => this.db.doc(path);\n\n  updateDoc = (path, newValue = {}) =>\n    this.getDocRef(path).update({\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  // User API\n\n  getUserDoc = userId => this.db.collection('users').doc(userId);\n\n  addUser = ({\n    userId,\n    name,\n    username,\n    email,\n    projectIds = [],\n    photoURL = null\n  }) => {\n    const batch = this.db.batch();\n    const userRef = this.getDocRef(`users/${userId}`);\n    const newFolderRef = this.getDocRef(`users/${userId}/folders/0`);\n    const todayFolderRef = this.getDocRef(`users/${userId}/folders/1`);\n    const upcomingFolderRef = this.getDocRef(`users/${userId}/folders/2`);\n    const laterFolderRef = this.getDocRef(`users/${userId}/folders/3`);\n\n    batch.set(userRef, {\n      userId,\n      name,\n      username,\n      email,\n      projectIds,\n      photoURL,\n      folderIds: [0, 1, 2, 3]\n    });\n\n    batch.set(newFolderRef, {\n      name: 'New Tasks',\n      taskIds: []\n    });\n\n    batch.set(todayFolderRef, {\n      name: 'Today',\n      taskIds: []\n    });\n\n    batch.set(upcomingFolderRef, {\n      name: 'Upcoming',\n      taskIds: []\n    });\n\n    batch.set(laterFolderRef, {\n      name: 'Later',\n      taskIds: []\n    });\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log('User added');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  updateUser = (userId, newValue = {}) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .update(newValue);\n\n  // Tags API\n\n  addTag = ({ taskId, userId, text, projectId = null, color = 'default' }) => {\n    const batch = this.db.batch();\n    const userRef = this.getUserDoc(userId);\n    const taskRef = this.getTaskDoc(taskId);\n\n    batch.update(taskRef, {\n      tags: this.addToArray(text),\n      lastUpdatedAt: this.getTimestamp()\n    });\n\n    batch.set(\n      userRef,\n      {\n        tags: {\n          [text]: {\n            text,\n            color,\n            lastUsedAt: this.getTimestamp()\n          }\n        },\n        lastUpdatedAt: this.getTimestamp()\n      },\n      { merge: true }\n    );\n\n    if (projectId) {\n      const projectRef = this.getProjectDoc(projectId);\n\n      batch.set(\n        projectRef,\n        {\n          tags: {\n            [text]: {\n              text,\n              color,\n              lastUsedAt: this.getTimestamp()\n            }\n          },\n          lastUpdatedAt: this.getTimestamp()\n        },\n        { merge: true }\n      );\n    }\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log('tag added');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  removeTag = ({ taskId, tag }) => {\n    this.updateTask(taskId, {\n      tags: this.removeFromArray(tag)\n    });\n  };\n\n  setTagColor = ({ userId, projectId, tag, color }) => {\n    const batch = this.db.batch();\n    const userRef = this.getUserDoc(userId);\n    const projectRef = this.getProjectDoc(projectId);\n\n    batch.set(\n      userRef,\n      {\n        tags: {\n          [tag]: {\n            color\n          }\n        },\n        lastUpdatedAt: this.getTimestamp()\n      },\n      { merge: true }\n    );\n\n    batch.set(\n      projectRef,\n      {\n        tags: {\n          [tag]: {\n            color\n          }\n        },\n        lastUpdatedAt: this.getTimestamp()\n      },\n      { merge: true }\n    );\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log('tag color updated');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  // Project API\n\n  getProjectDoc = projectId => this.db.collection('projects').doc(projectId);\n\n  updateProject = (projectId, newValue = {}) =>\n    this.getProjectDoc(projectId).update({\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  updateProjectName = ({ projectId, name }) => {\n    const batch = this.db.batch();\n    const projectRef = this.getProjectDoc(projectId);\n\n    // Delete list\n    batch.update(projectRef, {\n      name,\n      lastUpdatedAt: this.getTimestamp()\n    });\n\n    // Update tasks assigned to list\n    this.db\n      .collection('tasks')\n      .where('projectId', '==', projectId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.update(doc.ref, {\n            projectName: name\n          });\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('project name updated');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  addProject = ({\n    userId,\n    name,\n    color = 'default',\n    view = 'board',\n    isPrivate = false\n  }) => {\n    this.db\n      .collection('projects')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastUpdatedAt: null,\n        listIds: [],\n        createdBy: userId,\n        memberIds: [userId],\n        notes: '',\n        isFavorited: false,\n        color,\n        view,\n        isPrivate,\n        name\n      })\n      .then(ref => {\n        this.updateUser(userId, {\n          projectIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  // List API\n\n  getListDoc = listId => this.db.collection('lists').doc(listId);\n\n  updateList = (listId, newValue = {}) =>\n    this.getListDoc(listId).update({\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  updateListName = ({ listId, name }) => {\n    const batch = this.db.batch();\n    const listRef = this.getListDoc(listId);\n\n    // Delete list\n    batch.update(listRef, {\n      name,\n      lastUpdatedAt: this.getTimestamp()\n    });\n\n    // Update tasks assigned to list\n    this.db\n      .collection('tasks')\n      .where('listId', '==', listId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.update(doc.ref, {\n            listName: name\n          });\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('list name updated');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  addList = ({ name, projectId = null, userId = null }) => {\n    this.db\n      .collection('lists')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastUpdatedAt: null,\n        taskIds: [],\n        projectId,\n        name\n      })\n      .then(ref => {\n        if (projectId) {\n          this.updateProject(projectId, {\n            listIds: this.addToArray(ref.id)\n          });\n        }\n        if (userId) {\n          this.updateUser(userId, {\n            listIds: this.addToArray(ref.id)\n          });\n        }\n      });\n  };\n\n  deleteList = ({ listId, projectId }) => {\n    const batch = this.db.batch();\n    const listRef = this.getListDoc(listId);\n    const projectRef = this.getProjectDoc(projectId);\n\n    // Delete list\n    batch.delete(listRef);\n\n    // Remove list id from project\n    batch.update(projectRef, {\n      listIds: this.removeFromArray(listId),\n      lastUpdatedAt: this.getTimestamp()\n    });\n\n    // Delete tasks assigned to list\n    this.db\n      .collection('tasks')\n      .where('listId', '==', listId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('list deleted');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  // Task API\n\n  getTaskDoc = taskId => this.db.collection('tasks').doc(taskId);\n\n  addTask = ({\n    name,\n    projectId,\n    projectName,\n    listId,\n    listName,\n    userId = null,\n    folderId = null\n  }) => {\n    const isFolderItem = folderId && userId;\n\n    this.db\n      .collection('tasks')\n      .add({\n        createdBy: userId,\n        createdAt: this.getTimestamp(),\n        lastUpdatedAt: null,\n        commentIds: [],\n        subtaskIds: [],\n        isCompleted: false,\n        completedAt: null,\n        dueDate: null,\n        notes: '',\n        assignedTo: isFolderItem ? [userId] : [],\n        folders: isFolderItem\n          ? {\n              [userId]: folderId\n            }\n          : {},\n        ownerId: isFolderItem ? userId : null,\n        listId,\n        listName,\n        projectId,\n        projectName,\n        name\n      })\n      .then(ref => {\n        if (isFolderItem) {\n          this.updateDoc(`users/${userId}/folders/${folderId}`, {\n            taskIds: this.addToArray(ref.id)\n          });\n        } else {\n          this.updateDoc(`lists/${listId}`, {\n            taskIds: this.addToArray(ref.id)\n          });\n        }\n      });\n  };\n\n  updateTask = (taskId, newValue = {}) => {\n    this.getTaskDoc(taskId).update({\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  removeAssignee = ({ taskId, userId, folderId }) => {\n    const batch = this.db.batch();\n    const taskRef = this.getDocRef(`tasks/${taskId}`);\n    const folderRef = this.getDocRef(`users/${userId}/folders/${folderId}`);\n    batch.update(folderRef, {\n      taskIds: this.removeFromArray(taskId),\n      lastUpdatedAt: this.getTimestamp()\n    });\n\n    batch.update(taskRef, {\n      assignedTo: this.removeFromArray(userId),\n      [`folders.${userId}`]: this.deleteField(),\n      lastUpdatedAt: this.getTimestamp()\n    });\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log('Removed member from task');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  addAssignee = ({ taskId, projectId, userId }) => {\n    const batch = this.db.batch();\n    const taskRef = this.getDocRef(`tasks/${taskId}`);\n    const projectRef = this.getDocRef(`projects/${projectId}`);\n    const newFolderRef = this.getDocRef(`users/${userId}/folders/0`);\n    batch.update(newFolderRef, {\n      taskIds: this.addToArray(taskId),\n      lastUpdatedAt: this.getTimestamp()\n    });\n    batch.update(taskRef, {\n      assignedTo: this.addToArray(userId),\n      [`folders.${userId}`]: 0,\n      lastUpdatedAt: this.getTimestamp()\n    });\n    batch.update(projectRef, {\n      memberIds: this.addToArray(userId),\n      lastUpdatedAt: this.getTimestamp()\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('Assigned task to member');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  deleteTask = ({ taskId, listId, assignedTo = [], folders = null }) => {\n    const batch = this.db.batch();\n    const taskRef = this.getDocRef(`tasks/${taskId}`);\n    batch.delete(taskRef);\n\n    if (listId) {\n      const listRef = this.getDocRef(`lists/${listId}`);\n      batch.update(listRef, {\n        taskIds: this.removeFromArray(taskId),\n        lastUpdatedAt: this.getTimestamp()\n      });\n    }\n\n    // Delete subtasks assigned to task\n    this.db\n      .collection('subtasks')\n      .where('taskId', '==', taskId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n        console.log('1. delete task subtasks');\n      })\n      .then(() => {\n        assignedTo.forEach(memberId => {\n          const folderId = folders[memberId];\n          const folderRef = this.getDocRef(\n            `users/${memberId}/folders/${folderId}`\n          );\n          batch.update(folderRef, {\n            taskIds: this.removeFromArray(taskId),\n            lastUpdatedAt: this.getTimestamp()\n          });\n        });\n        console.log('2. remove task assignment');\n      })\n      .then(() => {\n        this.db\n          .collection('comments')\n          .where('taskId', '==', taskId)\n          .get()\n          .then(snapshot => {\n            snapshot.docs.forEach(doc => {\n              batch.delete(doc.ref);\n            });\n            console.log('3. delete task comments');\n            return batch\n              .commit()\n              .then(() => {\n                console.log('task deleted');\n              })\n              .catch(error => {\n                console.error(error);\n              });\n          });\n      });\n  };\n\n  moveTaskToList = ({ taskId, origListId, newListId, updatedTaskIds }) => {\n    const batch = this.db.batch();\n    const taskRef = this.getTaskDoc(taskId);\n    const origListRef = this.getListDoc(origListId);\n    const newListRef = this.getListDoc(newListId);\n    batch.update(taskRef, {\n      listId: newListId,\n      lastUpdatedAt: this.getTimestamp()\n    });\n    batch.update(origListRef, {\n      taskIds: this.removeFromArray(taskId),\n      lastUpdatedAt: this.getTimestamp()\n    });\n    batch.update(newListRef, {\n      taskIds: updatedTaskIds,\n      lastUpdatedAt: this.getTimestamp()\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('task moved');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  moveTaskToFolder = ({ userId, taskId, origFolderId, newFolderId, updatedTaskIds }) => {\n    const batch = this.db.batch();\n    const taskRef = this.getDocRef(`tasks/${taskId}`);\n    const origFolderRef = this.getDocRef(`users/${userId}/folders/${origFolderId}`);\n    const newFolderRef = this.getDocRef(`users/${userId}/folders/${newFolderId}`);\n    batch.update(taskRef, {\n      [`folders.${userId}`]: newFolderId,\n      lastUpdatedAt: this.getTimestamp()\n    });\n    batch.update(origFolderRef, {\n      taskIds: this.removeFromArray(taskId),\n      lastUpdatedAt: this.getTimestamp()\n    });\n    batch.update(newFolderRef, {\n      taskIds: updatedTaskIds,\n      lastUpdatedAt: this.getTimestamp()\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('Task moved to new folder');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  // Subtask API\n\n  getSubtaskDoc = subtaskId => this.db.collection('subtasks').doc(subtaskId);\n\n  addSubtask = ({\n    userId,\n    name,\n    memberIds = [],\n    projectId = null,\n    taskId = null,\n    dueDate = null\n  }) => {\n    this.db\n      .collection('subtasks')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastUpdatedAt: this.getTimestamp(),\n        isCompleted: false,\n        createdBy: userId,\n        assignedTo: [userId, ...memberIds],\n        completedAt: null,\n        dueDate,\n        projectId,\n        taskId,\n        name\n      })\n      .then(ref => {\n        if (taskId === null) return;\n        this.updateTask(taskId, {\n          subtaskIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  updateSubtask = (subtaskId, newValue = {}) => {\n    this.getSubtaskDoc(subtaskId).update({\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  deleteSubtask = ({ subtaskId, taskId = null }) => {\n    const batch = this.db.batch();\n    const subtaskRef = this.getSubtaskDoc(subtaskId);\n    batch.delete(subtaskRef);\n\n    if (taskId) {\n      const taskRef = this.getTaskDoc(taskId);\n      batch.update(taskRef, {\n        subtaskIds: this.removeFromArray(subtaskId),\n        lastUpdatedAt: this.getTimestamp()\n      });\n    }\n    return batch\n      .commit()\n      .then(() => {\n        console.log('subtask deleted');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  // Comment API\n  getCommentDoc = commentId => this.db.collection('comments').doc(commentId);\n\n  addComment = ({ userId, memberIds = [], projectId, taskId, content }) => {\n    this.db\n      .collection('comments')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastUpdatedAt: this.getTimestamp(),\n        isPinned: false,\n        from: userId,\n        to: memberIds,\n        likes: [],\n        projectId,\n        taskId,\n        content\n      })\n      .then(ref => {\n        this.updateTask(taskId, {\n          commentIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  updateComment = (commentId, newValue = {}) => {\n    this.getCommentDoc(commentId).update({\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n}\n\nexport default Firebase;\n","import React from 'react';\nimport './Input.scss';\n\nconst Input = ({\n  className = '',\n  name,\n  type,\n  value,\n  onFocus,\n  onChange,\n  onInput,\n  placeholder,\n  isRequired,\n  onBlur,\n  autoComplete,\n  inputRef,\n  hideLabel,\n  label,\n  labelClass,\n  onKeyDown,\n  maxLength,\n  minLength,\n  isReadOnly\n}) => {\n  return (\n    <>\n      {!hideLabel && (\n        <label htmlFor={name} className={`input__label ${labelClass}`}>\n          {label}\n        </label>\n      )}\n      <input\n        className={`input ${className}`}\n        id={name}\n        name={name}\n        type={type}\n        value={value}\n        onFocus={onFocus}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={isRequired}\n        onBlur={onBlur}\n        autoComplete={autoComplete}\n        ref={inputRef}\n        onInput={onInput}\n        onKeyDown={onKeyDown}\n        maxLength={maxLength}\n        minLength={minLength}\n        readOnly={isReadOnly}\n        tabIndex={isReadOnly ? -1 : 0}\n      />\n    </>\n  );\n};\n\nInput.defaultProps = {\n  className: ''\n};\n\nexport default Input;\n","import React from 'react';\nimport './Button.scss';\n\nconst Button = ({\n  children,\n  type = 'button',\n  onClick,\n  className = '',\n  color = 'neutral',\n  size = 'md',\n  variant = 'text',\n  disabled,\n  name,\n  iconOnly = false,\n  buttonRef,\n  ...props\n}) => (\n  // eslint-disable-next-line react/button-has-type\n  <button\n    className={`${className} ${color} ${variant} ${!iconOnly ? size : ''} ${\n      iconOnly ? `icon-only icon-only--${size}` : ''\n    }`}\n    type={type}\n    onClick={onClick}\n    disabled={disabled}\n    name={name}\n    ref={buttonRef}\n    {...props}\n  >\n    {children}\n  </button>\n);\n\nButton.defaultProps = {\n  type: 'button',\n  className: '',\n  color: 'neutral',\n  size: 'md',\n  variant: 'text',\n  iconOnly: false\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  username: '',\n  name: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { username, email, name, passwordOne } = this.state;\n    const { firebase, history } = this.props;\n    firebase\n      .createUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        const userId = authUser.user.uid;\n        const photoURL = authUser.user.photoURL || null;\n        return firebase.addUser({\n          userId,\n          name,\n          username,\n          email,\n          photoURL\n        });\n      })\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const {\n      username,\n      name,\n      email,\n      passwordOne,\n      passwordTwo,\n      error\n    } = this.state;\n    const isInvalid =\n      passwordOne === '' ||\n      passwordTwo === '' ||\n      email === '' ||\n      username === '' ||\n      passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"name\"\n          label=\"Full Name\"\n          value={name}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"username\"\n          label=\"Username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordOne\"\n          label=\"Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          label=\"Confirm Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Create Account\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignUpForm);\n","import React from 'react';\nimport './UserFormPage.scss';\n\nconst UserFormPage = ({ title, children }) => (\n  <main className=\"user-form__container\">\n    <h1 className=\"user-form__title\">{title}</h1>\n    {children}\n  </main>\n);\n\nexport default UserFormPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignUpForm from './SignUpForm';\nimport { UserFormPage } from '../UserFormPage';\nimport * as ROUTES from '../../constants/routes';\nimport './SignUp.scss';\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account?\n    <Link className=\"link--outlined\" to={ROUTES.SIGN_UP}>\n      Sign Up\n    </Link>\n  </p>\n);\n\nconst SignUpPage = () => (\n  <UserFormPage title=\"Create an account\">\n    <SignUpForm />\n  </UserFormPage>\n);\n\nexport default SignUpPage;\nexport { SignUpLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email, password } = this.state;\n    this.props.firebase\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  enableGoogleLogin = e => {\n    const { signInWithGoogle } = this.props.firebase;\n    signInWithGoogle();\n    e.preventDefault();\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n    const isInvalid = password === '' || email === '';\n    return (\n      <form className=\"user-form\">\n        {/*\n        <Button\n          type=\"click\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.enableGoogleLogin}\n        >\n          Continue with Google\n        </Button>\n        <Button\n          type=\"click\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.enableGithubLogin}\n        >\n          Continue with Github\n        </Button>\n      */}\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"password\"\n          label=\"Password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Log In\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignInForm);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null\n};\n\nclass PasswordForgetForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .passwordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, error } = this.state;\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Reset My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordForgetForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PasswordForgetForm from './PasswordForgetForm';\nimport { UserFormPage } from '../UserFormPage';\nimport * as ROUTES from '../../constants/routes';\nimport './PasswordForget.scss';\n\nconst PasswordForgetLink = () => (\n  <p className=\"user-form__info\">\n    <Link to={ROUTES.PASSWORD_FORGET} className=\"link--sm\">\n      Forgot Password?\n    </Link>\n  </p>\n);\n\nconst PasswordForgetPage = () => (\n  <UserFormPage title=\"Forgot your password?\">\n    <PasswordForgetForm />\n  </UserFormPage>\n);\n\nexport default PasswordForgetPage;\nexport { PasswordForgetLink };\n","import React from 'react';\nimport SignInForm from './SignInForm';\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { UserFormPage } from '../UserFormPage';\n\nconst SignInPage = () => (\n  <UserFormPage title=\"Log In\">\n    <SignInForm />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </UserFormPage>\n);\n\nexport default SignInPage;\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n","import { Firebase } from '../components/Firebase';\n\nconst firebase = new Firebase();\n\nexport default firebase;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const setCurrentUser = currentUser => {\n  return {\n    type: types.SET_CURRENT_USER,\n    currentUser\n  };\n};\n\nexport const fetchCurrentUserData = userId => {\n  return async dispatch => {\n    try {\n      const currentUser = await firebase\n        .getDocRef(`users/${userId}`)\n        .get()\n        .then(doc => doc.data());\n      dispatch(setCurrentUser(currentUser));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const loadFolders = folders => {\n  return {\n    type: types.LOAD_FOLDERS,\n    folders\n  };\n};\n\nexport const fetchFolders = userId => {\n  return async dispatch => {\n    try {\n      const folders = await firebase\n        .getDocRef(`users/${userId}`)\n        .collection('folders')\n        .get()\n        .then(snapshot => {\n          const foldersById = {};\n          snapshot.forEach(doc => {\n            foldersById[doc.id] = {\n              folderId: doc.id,\n              ...doc.data()\n            };\n          });\n          return foldersById;\n        });\n      dispatch(loadFolders(folders));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addFolder = ({ folderId, folderData }) => {\n  return {\n    type: types.ADD_FOLDER,\n    folderId,\n    folderData\n  };\n};\n\nexport const updateFolder = ({ folderId, folderData }) => {\n  return {\n    type: types.UPDATE_FOLDER,\n    folderId,\n    folderData\n  };\n};\n\nexport const deleteFolder = folderId => {\n  return {\n    type: types.DELETE_FOLDER,\n    folderId\n  };\n};\n\nexport const reorderFolders = (userId, folderIds) => {\n  return {\n    type: types.REORDER_FOLDERS,\n    userId,\n    folderIds\n  };\n};\n\nexport const loadTasksDueSoon = tasksDueSoon => {\n  return {\n    type: types.LOAD_TASKS_DUE_SOON,\n    tasksDueSoon\n  };\n};\n\nexport const fetchTasksDueWithinDays = (userId, days) => {\n  const startingDate = new Date();\n  const timeStart = new Date(startingDate.setHours(0, 0, 0, 0));\n  const endingDate = new Date(startingDate);\n  const timeEnd = new Date(endingDate.setDate(endingDate.getDate() + days));\n\n  return async dispatch => {\n    try {\n      const tasksDueSoon = await firebase.db\n        .collection('tasks')\n        .where('assignedTo', 'array-contains', userId)\n        .where('dueDate', '<=', timeEnd)\n        .orderBy('dueDate', 'asc')\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksDueSoon(tasksDueSoon));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addTaskDueSoon = ({ taskId, taskData }) => {\n  return {\n    type: types.ADD_TASK_DUE_SOON,\n    taskId,\n    taskData\n  };\n};\n\nexport const deleteTaskDueSoon = taskId => {\n  return {\n    type: types.DELETE_TASK_DUE_SOON,\n    taskId\n  };\n};\n\nexport const updateTaskDueSoon = ({ taskId, taskData }) => {\n  return {\n    type: types.UPDATE_TASK_DUE_SOON,\n    taskId,\n    taskData\n  };\n};\n\nexport const selectProject = projectId => {\n  return {\n    type: types.SELECT_PROJECT,\n    projectId\n  };\n};\n\nexport const selectList = listId => {\n  return {\n    type: types.SELECT_LIST,\n    listId\n  };\n};\n\nexport const selectTask = taskId => {\n  return {\n    type: types.SELECT_TASK,\n    taskId\n  };\n};\n","export const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const LOAD_FOLDERS = 'LOAD_FOLDERS';\nexport const ADD_FOLDER = 'ADD_FOLDER';\nexport const DELETE_FOLDER = 'DELETE_FOLDER';\nexport const UPDATE_FOLDER = 'UPDATE_FOLDER';\nexport const REORDER_FOLDERS = 'REORDER_FOLDERS';\nexport const UPDATE_FOLDER_IDS = 'UPDATE_FOLDER_IDS';\nexport const LOAD_TASKS_DUE_SOON = 'LOAD_TASKS_DUE_SOON';\nexport const ADD_TASK_DUE_SOON = 'ADD_TASK_DUE_SOON';\nexport const DELETE_TASK_DUE_SOON = 'DELETE_TASK_DUE_SOON';\nexport const UPDATE_TASK_DUE_SOON = 'UPDATE_TASK_DUE_SOON';\nexport const SELECT_PROJECT = 'SELECT_PROJECT';\nexport const SELECT_LIST = 'SELECT_LIST';\nexport const SELECT_TASK = 'SELECT_TASK';\n","export const getCurrentUser = state => {\n  return state.currentUser;\n};\n\nexport const getCurrentUserId = state => {\n  return state.currentUser.userId;\n};\n\nexport const getFolders = state => {\n  const { currentUser } = state;\n  return currentUser.folders;\n};\n\nexport const getFolderIds = state => {\n  const { currentUser } = state;\n  return currentUser.folderIds;\n};\n\nexport const getFoldersArray = state => {\n  const { folders } = state.currentUser;\n  if (!folders) return [];\n  return Object.keys(folders).map(folderId => {\n    return {\n      ...folders[folderId],\n      isDefault:\n        folderId === '0' ||\n        folderId === '1' ||\n        folderId === '2' ||\n        folderId === '3'\n    };\n  });\n};\n\nexport const getFolder = (state, folderId) => {\n  const { currentUser } = state;\n  return currentUser.folders[folderId];\n};\n\nexport const getTasksDueSoonById = state => {\n  return state.currentUser.tasksDueSoon;\n};\n\nexport const getTasksDueSoonArr = state => {\n  const { tasksDueSoon } = state.currentUser;\n  if (!tasksDueSoon) return [];\n  return Object.keys(tasksDueSoon).map(taskId => tasksDueSoon[taskId]);\n};\n","import * as types from './types';\n\nconst currentUser = (state = null, action) => {\n  switch (action.type) {\n    case types.SET_CURRENT_USER: {\n      const { currentUser } = action;\n      return currentUser;\n    }\n    case types.LOAD_FOLDERS: {\n      const { folders } = action;\n      return {\n        ...state,\n        folders\n      };\n    }\n    case types.ADD_FOLDER: {\n      const { folderId, folderData } = action;\n      return {\n        ...state,\n        folders: {\n          ...state.folders,\n          [folderId]: {\n            folderId,\n            ...folderData\n          }\n        }\n      };\n    }\n    case types.DELETE_FOLDER: {\n      const { folderId } = action;\n      const { [folderId]: deletedFolder, ...restOfFolders } = state.folders;\n      return {\n        ...state,\n        folders: restOfFolders\n      };\n    }\n    case types.UPDATE_FOLDER: {\n      const { folderId, folderData } = action;\n      return {\n        ...state,\n        folders: {\n          ...state.folders,\n          [folderId]: {\n            ...state.folders[folderId],\n            ...folderData\n          }\n        }\n      };\n    }\n    case types.UPDATE_FOLDER_IDS:\n    case types.REORDER_FOLDERS: {\n      const { folderIds } = action;\n      return {\n        ...state,\n        folderIds\n      };\n    }\n    case types.LOAD_TASKS_DUE_SOON: {\n      const { tasksDueSoon } = action;\n      return {\n        ...state,\n        tasksDueSoon\n      };\n    }\n    case types.ADD_TASK_DUE_SOON: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        tasksDueSoon: {\n          ...state.tasksDueSoon,\n          [taskId]: {\n            taskId,\n            ...taskData\n          }\n        }\n      };\n    }\n    case types.DELETE_TASK_DUE_SOON: {\n      const { taskId } = action;\n      const { [taskId]: deletedTask, ...restOfTasks } = state.tasksDueSoon;\n      return {\n        ...state,\n        tasksDueSoon: restOfTasks\n      };\n    }\n    case types.UPDATE_TASK_DUE_SOON: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        tasksDueSoon: {\n          ...state.tasksDueSoon,\n          [taskId]: {\n            ...state[taskId],\n            ...taskData\n          }\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default currentUser;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { currentUserActions } from '../../ducks/currentUser';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        authUser: null\n      };\n    }\n\n    componentDidMount() {\n      const { firebase, history, fetchCurrentUserData, setCurrentUser } = this.props;\n\n      this.listener = firebase.auth.onAuthStateChanged(authUser => {\n        if (authUser) {\n          fetchCurrentUserData(authUser.uid);\n          this.setState({ authUser });\n          history.push(`/0/home/${authUser.uid}`);\n        } else {\n          setCurrentUser(null);\n          this.setState({ authUser: null });\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  const mapDispatchToProps = dispatch => ({\n    fetchCurrentUserData: userId =>\n      dispatch(currentUserActions.fetchCurrentUserData(userId)),\n    setCurrentUser: currentUser => dispatch(currentUserActions.setCurrentUser(currentUser))\n  });\n\n  return compose(\n    withRouter,\n    withFirebase,\n    connect(\n      null,\n      mapDispatchToProps\n    )\n  )(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport AuthUserContext from './context';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n\n    componentDidMount() {\n      const { firebase, history } = this.props;\n      this.listener = firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          history.push(ROUTES.SIGN_IN);\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? (\n              <Component userId={authUser.uid} {...this.props} />\n            ) : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n  return compose(\n    withRouter,\n    withFirebase\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadUserData = user => {\n  return {\n    type: types.LOAD_USER_DATA,\n    user\n  };\n};\n\nexport const loadUsersById = usersById => {\n  return {\n    type: types.LOAD_USERS_BY_ID,\n    usersById\n  };\n};\n\nexport const fetchUsersById = () => {\n  return async dispatch => {\n    try {\n      const usersById = await firebase.db\n        .collection('users')\n        .get()\n        .then(snapshot => {\n          const users = {};\n          snapshot.forEach(doc => {\n            users[doc.id] = {\n              userId: doc.id,\n              ...doc.data()\n            };\n          });\n          return users;\n        });\n      dispatch(loadUsersById(usersById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserData = userId => {\n  return async dispatch => {\n    try {\n      const user = await firebase\n        .getUserDoc(userId)\n        .get()\n        .then(doc => doc.data());\n      dispatch(loadUserData(user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addUser = ({ userId, userData }) => {\n  return {\n    type: types.ADD_USER,\n    userId,\n    userData\n  };\n};\n\nexport const deleteUser = userId => {\n  return {\n    type: types.DELETE_USER,\n    userId\n  };\n};\n\nexport const updateUser = ({ userId, userData }) => {\n  return {\n    type: types.UPDATE_USER,\n    userId,\n    userData\n  };\n};\n","export const LOAD_USER_DATA = 'LOAD_USER_DATA';\nexport const LOAD_USERS_BY_ID = 'LOAD_USERS_BY_ID';\nexport const ADD_USER = 'ADD_USER';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const DELETE_USER = 'DELETE_USER';\nexport const LOAD_USER_TASKS = 'LOAD_USER_TASKS';\nexport const ADD_TASK = 'ADD_TASK';\nexport const REORDER_FOLDERS = 'REORDER_FOLDERS';\n","export const getUsersById = state => {\n  return state.usersById;\n};\n\nexport const getUserData = (state, userId) => {\n  return state.usersById[userId];\n};\n\nexport const getUserTaskIds = (state, userId) => {\n  const { taskIds } = state.usersById[userId];\n  if (!taskIds) return [];\n  return taskIds;\n};\n\nexport const getCurrentUserData = state => {\n  const currentUserId = state.current.userId;\n  return state.usersById[currentUserId];\n};\n\n// returns array of all users\nexport const getUsersArray = state => {\n  const { usersById } = state;\n  return Object.keys(usersById).map(userId => {\n    return {\n      userId,\n      ...usersById[userId]\n    };\n  });\n};\n\n// returns subset of users\nexport const getMembersArray = (state, memberIds) => {\n  const { usersById } = state;\n  if (!memberIds) return [];\n  return memberIds.map(memberId => usersById[memberId]);\n};\n","import * as types from './types';\n\nconst usersById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_USERS_BY_ID: {\n      const { usersById } = action;\n      return {\n        ...state,\n        ...usersById\n      };\n    }\n    case types.LOAD_USER_DATA: {\n      const { user } = action;\n      return {\n        ...state,\n        ...user\n      };\n    }\n    case types.LOAD_USER_TASKS: {\n      const { userId, tasksById } = action;\n      return {\n        ...state,\n        [userId]: {\n          ...state[userId],\n          tasksById\n        }\n      };\n    }\n    case types.ADD_USER: {\n      const { userId, userData } = action;\n      return {\n        ...state,\n        [userId]: {\n          userId,\n          ...userData\n        }\n      };\n    }\n    case types.DELETE_USER: {\n      const { userId } = action;\n      const { [userId]: deletedUser, ...restOfUsers } = state;\n      return restOfUsers;\n    }\n    case types.UPDATE_USER: {\n      const { userId, userData } = action;\n      return {\n        ...state,\n        [userId]: {\n          ...state[userId],\n          ...userData\n        }\n      };\n    }\n    case types.REORDER_FOLDERS: {\n      const { userId, folderIds } = action;\n      return {\n        ...state,\n        [userId]: {\n          ...state[userId],\n          folderIds\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default usersById;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const selectUser = userId => {\n  return {\n    type: types.SELECT_USER,\n    userId\n  };\n};\n\nexport const selectProject = projectId => {\n  return {\n    type: types.SELECT_PROJECT,\n    projectId\n  };\n};\n\nexport const selectList = listId => {\n  return {\n    type: types.SELECT_LIST,\n    listId\n  };\n};\n\nexport const selectTask = taskId => {\n  return {\n    type: types.SELECT_TASK,\n    taskId\n  };\n};\n","export const SELECT_PROJECT = 'SELECT_PROJECT';\nexport const SELECT_LIST = 'SELECT_LIST';\nexport const SELECT_TASK = 'SELECT_TASK';\nexport const SELECT_USER = 'SELECT_USER';\n","export const getCurrentUserId = state => {\n  return state.current.userId;\n};\n\nexport const getCurrentProjectId = state => {\n  return state.current.projectId;\n};\n\nexport const getCurrentListId = state => {\n  return state.current.listId;\n};\n\nexport const getCurrentTaskId = state => {\n  return state.current.taskId;\n};\n\nexport const getCurrent = state => {\n  return state.current;\n};\n\nexport const getMergedTags = state => {\n  const { projectId, userId } = state.current;\n  if (!projectId) return [];\n  const { projectsById, usersById } = state;\n  const { tags: projectTags } = projectsById[projectId];\n  const { tags: userTags } = usersById[userId];\n  const mergedTags = { ...userTags, ...projectTags };\n  return Object.keys(mergedTags).map(tag => mergedTags[tag]);\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ProjectTile = ({ projectId, projectName, onClick }) => {\n  return (\n    <li className=\"project-grid__tile\">\n      <Link\n        className=\"project-grid__link\"\n        to={`/0/project/${projectId}`}\n        onClick={onClick}\n      >\n        <span className=\"project-grid__title\">{projectName}</span>\n      </Link>\n    </li>\n  );\n};\n\nconst ProjectGrid = ({ children }) => <ul className=\"project-grid\">{children}</ul>;\n\nexport { ProjectTile, ProjectGrid };\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadProjectsById = projectsById => {\n  return {\n    type: types.LOAD_PROJECTS_BY_ID,\n    projectsById\n  };\n};\n\nexport const fetchProjectsById = userId => {\n  return async dispatch => {\n    try {\n      const projectsById = await firebase.db\n        .collection('projects')\n        .where('memberIds', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const projects = {};\n          snapshot.forEach(doc => {\n            projects[doc.id] = {\n              projectId: doc.id,\n              ...doc.data()\n            };\n          });\n          return projects;\n        });\n      dispatch(loadProjectsById(projectsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchProject = projectId => {\n  return async dispatch => {\n    try {\n      const projectsById = await firebase.db\n        .getProjectDoc(projectId)\n        .get()\n        .then(doc => {\n          const projects = {};\n          projects[doc.id] = {\n            projectId: doc.id,\n            ...doc.data()\n          };\n          return projects;\n        });\n      dispatch(loadProjectsById(projectsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateProject = (projectId, projectData) => {\n  return {\n    type: types.UPDATE_PROJECT,\n    projectId,\n    projectData\n  };\n};\n\nexport const reorderLists = (projectId, listIds) => {\n  return {\n    type: types.REORDER_LISTS,\n    projectId,\n    listIds\n  };\n};\n\nexport const updateListIds = (projectId, listIds) => {\n  return {\n    type: types.UPDATE_LIST_IDS,\n    projectId,\n    listIds\n  };\n};\n\nexport const updateProjectTags = (projectId, tags) => {\n  return {\n    type: types.UPDATE_PROJECT_TAGS,\n    projectId,\n    tags\n  };\n};\n","export const LOAD_PROJECTS_BY_ID = 'LOAD_PROJECTS_BY_ID';\nexport const UPDATE_PROJECT = 'UPDATE_PROJECT';\nexport const REORDER_LISTS = 'REORDER_LISTS';\nexport const UPDATE_LIST_IDS = 'UPDATE_LIST_IDS';\nexport const UPDATE_PROJECT_TAGS = 'UPDATE_PROJECT_TAGS';\nexport const ADD_TAG = 'ADD_TAG';\n","export const getProjectsById = state => {\n  return state.projectsById;\n};\n\nexport const getProjectsArray = state => {\n  const { projectsById } = state;\n  return Object.keys(projectsById).map(projectId => projectsById[projectId]);\n};\n\nexport const getProject = (state, projectId) => {\n  const { projectsById } = state;\n  return projectsById[projectId];\n};\n\nexport const getProjectTags = (state, projectId) => {\n  if (!projectId) return {};\n  const { projectsById } = state;\n  return projectsById[projectId].tags;\n};\n\nexport const getProjectName = (state, projectId) => {\n  if (!projectId) return '';\n  const { projectsById } = state;\n  return projectsById[projectId].name;\n};\n\nexport const getProjectColor = (state, projectId) => {\n  if (!projectId) return '';\n  const { projectsById } = state;\n  return projectsById[projectId].color;\n};\n","import * as types from './types';\n\nconst projectsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_PROJECTS_BY_ID: {\n      const { projectsById } = action;\n      return {\n        ...state,\n        ...projectsById\n      };\n    }\n    case types.UPDATE_PROJECT: {\n      const { projectId, projectData } = action;\n      return {\n        ...state,\n        [projectId]: {\n          ...state[projectId],\n          ...projectData\n        }\n      };\n    }\n    case types.UPDATE_LIST_IDS:\n    case types.REORDER_LISTS: {\n      const { projectId, listIds } = action;\n      return {\n        ...state,\n        [projectId]: {\n          ...state[projectId],\n          listIds\n        }\n      };\n    }\n    case types.UPDATE_PROJECT_TAGS: {\n      const { projectId, tags } = action;\n      return {\n        ...state,\n        [projectId]: {\n          ...state[projectId],\n          tags: {\n            ...tags\n          }\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default projectsById;\n","import React from 'react';\nimport featherIcons from '../../assets/feather/feather-sprite.svg';\n\nconst Icon = ({ name, className, width, height }) => (\n  <svg\n    className={`feather feather-${name} ${className}`}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    viewBox=\"0 0 24 24\"\n    width={width}\n    height={height}\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <use xlinkHref={`${featherIcons}#${name}`} />\n  </svg>\n);\n\nIcon.defaultProps = {\n  className: '',\n  width: 24,\n  height: 24\n};\n\nexport default Icon;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ProjectGrid, ProjectTile } from './ProjectGrid';\nimport './ProjectGrid.scss';\nimport { withAuthorization } from '../Session';\nimport { projectActions, projectSelectors } from '../../ducks/projects';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Icon } from '../Icon';\nimport { userSelectors } from '../../ducks/users';\n\nclass ProjectGridContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const { userId, firebase, updateProject } = this.props;\n    this.projectObserver = firebase.db\n      .collection('projects')\n      .where('memberIds', 'array-contains', userId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const projectId = change.doc.id;\n          const projectData = change.doc.data();\n          updateProject(projectId, projectData);\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.projectObserver();\n  }\n\n  render() {\n    const { projectsArray, selectProject } = this.props;\n    const projectTiles = projectsArray.map(project => {\n      const { name: projectName, projectId } = project;\n      return (\n        <ProjectTile\n          key={projectId}\n          projectName={projectName}\n          projectId={projectId}\n          onClick={() => selectProject(projectId)}\n        />\n      );\n    });\n    return (\n      <ProjectGrid>\n        {projectTiles}\n        <button\n          type=\"button\"\n          className=\"project-grid__tile project-grid__btn--add\"\n          onClick={this.props.openProjectComposer}\n        >\n          <Icon name=\"plus-circle\" />\n          Create project\n        </button>\n      </ProjectGrid>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state, ownProps.userId),\n    projectsById: projectSelectors.getProjectsById(state),\n    projectsArray: projectSelectors.getProjectsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchProjectsById: userId => dispatch(projectActions.fetchProjectsById(userId)),\n    updateProject: (projectId, projectData) =>\n      dispatch(projectActions.updateProject(projectId, projectData)),\n    selectProject: projectId => dispatch(currentActions.selectProject(projectId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ProjectGridContainer)\n);\n","import React, { Component, createRef } from 'react';\n\nconst withOutsideClick = WrappedComponent => {\n  class WithOutsideClick extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        isTouchEnabled: false\n      };\n      this.componentInstance = createRef();\n    }\n\n    componentDidMount() {\n      document.addEventListener('touchstart', this.handleTouch);\n      document.addEventListener('click', this.handleOutsideClick, false);\n    }\n\n    componentWillUnmount() {\n      const { isTouchEnabled } = this.state;\n      if (isTouchEnabled) {\n        document.removeEventListener('touchstart', this.handleOutsideClick);\n      } else {\n        document.removeEventListener('click', this.handleOutsideClick);\n        document.removeEventListener('touchstart', this.handleTouch);\n      }\n    }\n\n    handleTouch = () => {\n      this.setState({\n        isTouchEnabled: true\n      });\n      // if touch is detected, listen for touch events instead of click events\n      // to improve detection on touch devices\n      // remove touch handler to prevent unnecessary refires\n      document.removeEventListener('touchstart', this.handleTouch);\n      // remove outside click handler from click events\n      document.removeEventListener('click', this.handleOutsideClick);\n      // reattach outside click handler to touchstart events\n      document.addEventListener('touchstart', this.handleOutsideClick);\n    };\n\n    handleOutsideClick = e => {\n      if (!this.componentEl) {\n        throw new Error('Must set component ref to prop innerRef!');\n      }\n      if (\n        this.componentEl.contains(e.target) ||\n        (!this.componentInstance.current.onOutsideClick &&\n          !this.props.onOutsideClick)\n      )\n        return;\n        if (this.componentInstance.current.onOutsideClick) {\n          this.componentInstance.current.onOutsideClick(e);\n        }\n\n      const { onOutsideClick } = this.props;\n      if (onOutsideClick) {\n        onOutsideClick(e);\n      }\n    };\n\n    render() {\n      return (\n        <WrappedComponent\n          ref={this.componentInstance}\n          innerRef={el => (this.componentEl = el)}\n          {...this.props}\n        />\n      );\n    }\n  }\n\n  /*\n  return forwardRef((props, ref) => {\n    return <WithOutsideClick {...props} forwardedRef={ref} />;\n  });\n  */\n  return WithOutsideClick;\n};\n\nexport default withOutsideClick;\n","import React, { Component } from 'react';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { withOutsideClick } from '../withOutsideClick';\nimport './Modal.scss';\n\nclass Modal extends Component {\n  \n  onOutsideClick = e => {\n    const { onModalClose } = this.props;\n    onModalClose(e);\n  };\n\n  render() {\n    const {\n      onModalClose,\n      children,\n      onModalClick,\n      size = 'md',\n      classes,\n      id,\n      innerRef\n    } = this.props;\n    return (\n      <div className={`modal ${classes.modal || ''}`} onClick={onModalClick}>\n        <div\n          id={id}\n          ref={innerRef}\n          className={`modal__content ${\n            classes.content || ''\n          } modal__content--${size}`}\n        >\n          <Button\n            type=\"button\"\n            className={`modal__btn--close ${\n            classes.button || ''\n          }`}\n            onClick={onModalClose}\n            iconOnly\n          >\n            <Icon name=\"x\" />\n          </Button>\n          {children}\n        </div>\n      </div>\n    );\n  }\n}\n\nModal.defaultProps = {\n  classes: {\n    modal: '',\n    content: '',\n    button: ''\n  }\n};\n\nexport default withOutsideClick(Modal);\n","import React, { Component } from 'react';\nimport { Modal } from '../Modal';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\nimport './ProjectComposer.scss';\n\nconst INITIAL_STATE = {\n  projectTitle: ''\n};\n\nexport default class ProjectComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { projectTitle } = this.state;\n    const { handleSubmit, onClose } = this.props;\n    this.props.handleSubmit(projectTitle);\n    this.props.onClose();\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { projectTitle } = this.state;\n    return (\n      <Modal onModalClose={this.props.onClose} size=\"sm\">\n      <h3 className=\"project-composer__title\">Create new project</h3>\n        <form onSubmit={this.onSubmit}>\n          <Input\n            name=\"projectTitle\"\n            title=\"Project Title\"\n            value={projectTitle}\n            onChange={this.onChange}\n            type=\"text\"\n          />\n          <Button\n            className=\"project-composer__btn--add\"\n            type=\"submit\"\n            onClick={this.onSubmit}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Create Project\n          </Button>\n        </form>\n      </Modal>\n    );\n  }\n}\n","export const LIST = 'LIST';\nexport const TASK = 'TASK';\nexport const SUBTASK = 'SUBTASK';\nexport const FOLDER = 'FOLDER';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input } from '../Input';\nimport { Icon } from '../Icon';\nimport { withAuthorization } from '../Session';\nimport { projectActions, projectSelectors } from '../../ducks/projects';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Button } from '../Button';\nimport './ListComposer.scss';\n\nconst INITIAL_STATE = {\n  name: '',\n  isActive: false\n};\n\nclass ListComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ name: '' });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { name } = this.state;\n    const { projectId } = this.props;\n    this.props.firebase.addList({ projectId, name });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = e => {\n    if (e.target.value === '') {\n      this.setState({\n        isActive: false\n      });\n    }\n  };\n\n  render() {\n    const { name, isActive } = this.state;\n    return (\n      <div\n        className={`list-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"list-composer__form\" onSubmit={this.onSubmit}>\n          <Input\n            onChange={this.onChange}\n            value={name}\n            placeholder={isActive ? 'Enter list title...' : 'Add a list'}\n            required\n            name=\"name\"\n            hideLabel\n            className=\"list-composer__input\"\n          />\n          {isActive && (\n            <div className=\"list-composer__footer\">\n              <Button\n                className=\"list-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add List\n              </Button>\n              <Button\n                className=\"list-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    projectsById: projectSelectors.getProjectsById(state),\n    projectsArray: projectSelectors.getProjectsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateProjectsById: project => dispatch(projectActions.updateProjectsById(project)),\n    selectProject: projectId => dispatch(currentActions.selectProject(projectId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListComposer)\n);\n","import React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { ListComposer } from '../ListComposer';\n\nconst Board = props => {\n  const { projectId, children } = props;\n  return (\n    <Droppable\n      droppableId={projectId}\n      type={droppableTypes.LIST}\n      direction=\"horizontal\"\n    >\n      {provided => (\n        <div\n          className=\"board\"\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n        >\n          {children}\n          {provided.placeholder}\n          <ListComposer projectId={projectId} />\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nexport default Board;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadListsById = listsById => {\n  return {\n    type: types.LOAD_LISTS_BY_ID,\n    listsById\n  };\n};\n\nexport const fetchListsById = projectId => {\n  return async dispatch => {\n    try {\n      const listsById = await firebase.db\n        .collection('lists')\n        .where('projectId', '==', projectId)\n        .get()\n        .then(snapshot => {\n          const lists = {};\n          snapshot.forEach(doc => {\n            lists[doc.id] = {\n              listId: doc.id,\n              ...doc.data()\n            };\n          });\n          return lists;\n        });\n      dispatch(loadListsById(listsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserLists = userId => {\n  return async dispatch => {\n    try {\n      const listsById = await firebase.db\n        .collection('lists')\n        .where('userId', '==', userId)\n        .get()\n        .then(snapshot => {\n          const lists = {};\n          snapshot.forEach(doc => {\n            lists[doc.id] = {\n              listId: doc.id,\n              ...doc.data()\n            };\n          });\n          return lists;\n        });\n      dispatch(loadListsById(listsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateList = (listId, listData) => {\n  return {\n    type: types.UPDATE_LIST,\n    listId,\n    listData\n  };\n};\n","export const LOAD_LISTS_BY_ID = 'LOAD_LISTS_BY_ID';\nexport const FETCH_LISTS_BY_ID = 'FETCH_LISTS_BY_ID';\nexport const DELETE_CARD = 'DELETE_CARD';\nexport const UPDATE_LIST = 'UPDATE_LIST';\n","export const getListsById = state => {\n  return state.listsById;\n};\n\nexport const getListName = (state, listId) => {\n  if (!listId) return '';\n  const { listsById } = state;\n  return listsById[listId].name;\n};\n\nexport const getUserLists = (state, userId) => {\n  const { usersById, listsById } = state;\n  const { defaultLists, listIds } = usersById[userId];\n  return [\n    ...Object.keys(defaultLists).map(defaultKey => ({\n      listId: null,\n      defaultKey,\n      ...defaultLists[defaultKey],\n      isDefault: true\n    })),\n    ...listIds.map(listId => listsById[listId])\n  ];\n};\n\nexport const getListsArray = state => {\n  const { listsById, projectsById, current } = state;\n  const { projectId } = current;\n  const project = projectsById[projectId];\n  if (!project) return null;\n  const { listIds } = project;\n\n  return listIds.map(listId => listsById[listId]);\n};\n","import * as types from './types';\n\nconst listsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_LISTS_BY_ID: {\n      const { listsById } = action;\n      return {\n        ...state,\n        ...listsById\n      };\n    }\n    case types.UPDATE_LIST: {\n      const { listId, listData } = action;\n      return {\n        ...state,\n        [listId]: {\n          ...state[listId],\n          ...listData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default listsById;\n","export const getTasksById = state => {\n  return state.tasksById;\n};\n\nexport const getListTasks = (state, taskIds) => {\n  const { tasksById } = state;\n  return taskIds.map(taskId => tasksById[taskId]);\n};\n\nexport const getFolderTasks = (state, taskIds) => {\n  const { tasksById } = state;\n  return taskIds.map(taskId => tasksById[taskId]);\n};\n\nexport const getSimpleTasks = (state, taskIds) => {\n  const { tasksById } = state;\n  if (!taskIds) return {};\n\n  return taskIds.reduce((tasks, taskId) => {\n    const { name, isCompleted } = tasksById[taskId];\n    tasks[taskId] = {\n      name,\n      isCompleted\n    };\n    return tasks;\n  }, {});\n};\n\nexport const getTaskTags = (state, ownProps) => {\n  if (!ownProps.projectId) return [];\n  const { projectsById } = state;\n  const { projectId, tags: taskTags } = ownProps;\n  const { tags: projectTags } = projectsById[projectId];\n\n  if (!taskTags || !projectTags) return [];\n  return taskTags.map(taskTag => projectTags[taskTag]);\n};\n","\n/**\n * Checks if two arrays or objects are equal\n * @param {Array|Object} value\n * @param {Array|Object} other\n */\n\n// eslint-disable-next-line import/prefer-default-export\nexport const isEqual = (value, other) => {\n  const type = Object.prototype.toString.call(value);\n\n  // If both objects are not the same type, return false\n  if (type !== Object.prototype.toString.call(other)) return false;\n\n  const typeObj = '[object Object]';\n  const typeArr = '[object Array]';\n  // If items are neither objects nor arrays, return false\n  if (type !== typeObj && type !== typeArr) return false;\n\n  // Compare length of two items\n  const valueLen = type === typeArr ? value.length : Object.keys(value).length;\n  const otherLen = type === typeArr ? other.length : Object.keys(other).length;\n  if (valueLen !== otherLen) return false;\n\n  const compare = (item1, item2) => {\n    const typeFunc = '[object Function]';\n    const itemType = Object.prototype.toString.call(item1);\n    if (itemType !== Object.prototype.toString.call(item2)) return false;\n    if (itemType === typeObj || itemType === typeArr) {\n      return isEqual(item1, item2);\n    }\n    if (itemType === typeFunc) {\n      return item1.toString() === item2.toString();\n    }\n    return item1 === item2;\n  };\n\n  if (type === typeArr) {\n    for (let i = 0; i < valueLen; i++) {\n      if (!compare(value[i], other[i])) return false;\n    }\n  } else {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (compare(value[key], other[key]) === false) return false;\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * Delays callback execution until next browser repaint\n * Best used for `scroll` and `resize` window events\n * @param {Function} callback - The function to debounce\n */\n\nexport const windowDebouncer = callback => {\n  let request;\n\n  return (...args) => {\n    const context = this;\n\n    if (request) {\n      window.cancelAnimationFrame(request);\n    }\n\n    request = window.requestAnimationFrame(() => {\n      callback.apply(context, args);\n    });\n  };\n};\n\n\n/**\n * Returns a function that executes the first callback on its initial call\n * then the second callback on subsequent calls\n * @param {Function} first - The function executed only on its initial call\n * @param {Function} after - The function executed on subsequent calls\n */\nexport const firstThen = (first, after) => {\n  let count = 0;\n  return (...args) => {\n    count++;\n    if (count === 1) {\n      return first.apply(this, args);\n    } else {\n      return after.apply(this, args);\n    }\n  }\n};\n\nexport const count = (fn, invokeBeforeExecution) => {\n  let count = 0;\n  return (args) => {\n    count++;\n    if (count <= invokeBeforeExecution) {\n      return true;\n    } else {\n      return fn(args, count);\n    }\n  };\n}","import * as types from './types';\nimport firebase from '../../store/firebase';\nimport { utils } from '../../utils';\n\nexport const loadTasksById = tasksById => {\n  return {\n    type: types.LOAD_TASKS_BY_ID,\n    tasksById\n  };\n};\n\nexport const loadUserTasks = (userId, tasksById) => {\n  return {\n    type: types.LOAD_USER_TASKS,\n    userId,\n    tasksById\n  };\n};\n\nexport const fetchProjectTasks = projectId => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .where('projectId', '==', projectId)\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst handleInitialPayload = async (snapshot) => {\n          const tasks = await snapshot.docChanges().map(change => {\n            tasks[change.doc.id] = {\n              taskId: change.doc.id,\n              ...change.doc.data()\n            };\n          });\n          console.log(tasks);\n          return tasks;\n}\n\n\n\nconst syncTasks = (snapshot) => {\n  snapshot.docChanges().forEach(change => {\n    const taskId = change.doc.id;\n    const taskData = change.doc.data();\n    if (change.type === 'added') {\n      console.log('added task');\n      return dispatch => {\n        dispatch(addTask({ taskId, taskData }));\n      }\n    } else if (change.type === 'removed') {\n      return dispatch => {\n        dispatch(deleteTask(taskId));\n      }\n    } else {\n      return dispatch => {\n        dispatch(updateTask({ taskId, taskData }));\n      }\n    }\n  });\n};\n\nlet count = 0;\nconst handleTaskSubscription = (snapshot) => {\n  count++;\n  const initialLoad = count === 1;\n  const tasks = {};\n    if (initialLoad) {\n      console.log('is initial load');\n\n      snapshot.docChanges().forEach(change => {\n        tasks[change.doc.id] = {\n          taskId: change.doc.id,\n          ...change.doc.data()\n        };\n      });\n      console.log(tasks);\n      return tasks;\n    } else {\n      snapshot.docChanges().forEach(change => {\n        const taskId = change.doc.id;\n        const taskData = change.doc.data();\n        if (change.type === 'added') {\n          console.log('added task');\n          return dispatch => {\n            dispatch(addTask({ taskId, taskData }));\n          }\n        } else if (change.type === 'removed') {\n          return dispatch => {\n            dispatch(deleteTask(taskId));\n          }\n        } else {\n          return dispatch => {\n            dispatch(updateTask({ taskId, taskData }));\n          }\n        }\n      });\n    }\n}\n\n/*const handleTaskSubscription = utils.firstThen(handleInitialPayload, syncTasks);*/\n\nexport const syncUserTasks = userId => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .where('assignedTo', 'array-contains', userId)\n        .onSnapshot(handleTaskSubscription);\n     dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserTasks = userId => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .where('assignedTo', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addTask = ({ taskId, taskData }) => {\n  return {\n    type: types.ADD_TASK,\n    taskId,\n    taskData\n  };\n};\n\nexport const deleteTask = taskId => {\n  return {\n    type: types.DELETE_TASK,\n    taskId\n  };\n};\n\nexport const updateTask = ({ taskId, taskData }) => {\n  return {\n    type: types.UPDATE_TASK,\n    taskId,\n    taskData\n  };\n};\n\nexport const updateTasksById = task => {\n  return {\n    type: types.UPDATE_TASKS_BY_ID,\n    task\n  };\n};\n\nexport const addTag = (taskId, tag) => {\n  return {\n    type: types.ADD_TAG,\n    taskId,\n    tag\n  };\n};\n","export const ADD_TASK = 'ADD_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\nexport const UPDATE_TASK = 'UPDATE_TASK';\nexport const SET_TASK_DUE_DATE = 'SET_TASK_DUE_DATE';\nexport const ADD_TASK_SUBTASK = 'ADD_TASK_SUBTASK';\nexport const REMOVE_TASK_SUBTASK = 'REMOVE_TASK_SUBTASK';\nexport const CHANGE_TASK_DESCRIPTION = 'CHANGE_TASK_DESCRIPTION';\nexport const SET_TASK_COLOR = 'SET_TASK_COLOR';\nexport const MOVE_TASK = 'MOVE_TASK';\nexport const LOAD_TASKS_BY_ID = 'LOAD_TASKS_BY_ID';\nexport const UPDATE_TASKS_BY_ID = 'UPDATE_TASKS_BY_ID';\nexport const ADD_TAG = 'ADD_TAG';\nexport const LOAD_USER_TASKS = 'LOAD_USER_TASKS';\n","import * as types from './types';\n\nconst tasksById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_TASKS_BY_ID: {\n      const { tasksById } = action;\n      return {\n        ...state,\n        ...tasksById\n      };\n    }\n    case types.UPDATE_TASKS_BY_ID: {\n      const { task } = action;\n      console.log('tasks updated');\n      return {\n        ...state,\n        ...task\n      };\n    }\n    case types.ADD_TASK: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        [taskId]: {\n          taskId,\n          ...taskData\n        }\n      };\n    }\n    case types.DELETE_TASK: {\n      const { taskId } = action;\n      const { [taskId]: deletedTask, ...restOfTasks } = state;\n      return restOfTasks;\n    }\n    case types.UPDATE_TASK: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        [taskId]: {\n          ...state[taskId],\n          ...taskData\n        }\n      };\n    }\n    case types.ADD_TAG: {\n      const { taskId, tag } = action;\n      return {\n        ...state,\n        [taskId]: {\n          ...state[taskId],\n          tags: [...state[taskId].tags, tag]\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default tasksById;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadSubtasksById = subtasksById => {\n  return {\n    type: types.LOAD_SUBTASKS_BY_ID,\n    subtasksById\n  };\n};\n\nexport const fetchSubtasksById = () => {\n  return async dispatch => {\n    try {\n      const subtasksById = await firebase.db\n        .collection('subtasks')\n        .get()\n        .then(snapshot => {\n          const subtasks = {};\n          snapshot.forEach(doc => {\n            subtasks[doc.id] = {\n              subtaskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return subtasks;\n        });\n      dispatch(loadSubtasksById(subtasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateSubtasksById = subtask => {\n  return {\n    type: types.UPDATE_SUBTASKS_BY_ID,\n    subtask\n  };\n};\n\nexport const fetchProjectSubtasks = projectId => {\n  return async dispatch => {\n    try {\n      const subtasksById = await firebase.db\n        .collection('subtasks')\n        .where('projectId', '==', projectId)\n        .get()\n        .then(snapshot => {\n          const subtasks = {};\n          snapshot.forEach(doc => {\n            subtasks[doc.id] = {\n              subtaskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return subtasks;\n        });\n      dispatch(loadSubtasksById(subtasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchTaskSubtasks = taskId => {\n  return async dispatch => {\n    try {\n      const subtasksById = await firebase.db\n        .collection('subtasks')\n        .where('taskId', '==', taskId)\n        .get()\n        .then(snapshot => {\n          const subtasks = {};\n          snapshot.forEach(doc => {\n            subtasks[doc.id] = {\n              subtaskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return subtasks;\n        });\n      dispatch(loadSubtasksById(subtasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserSubtasks = userId => {\n  return async dispatch => {\n    try {\n      const subtasksById = await firebase.db\n        .collection('subtasks')\n        .where('assignedTo', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const subtasks = {};\n          snapshot.forEach(doc => {\n            subtasks[doc.id] = {\n              subtaskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return subtasks;\n        });\n      dispatch(loadSubtasksById(subtasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addSubtask = ({ subtaskId, subtaskData }) => {\n  return {\n    type: types.ADD_SUBTASK,\n    subtaskId,\n    subtaskData\n  };\n};\n\nexport const deleteSubtask = subtaskId => {\n  return {\n    type: types.DELETE_SUBTASK,\n    subtaskId\n  };\n};\n\nexport const updateSubtask = ({ subtaskId, subtaskData }) => {\n  return {\n    type: types.UPDATE_SUBTASK,\n    subtaskId,\n    subtaskData\n  };\n};\n","export const LOAD_SUBTASKS_BY_ID = 'LOAD_SUBTASKS_BY_ID';\nexport const FETCH_SUBTASKS_BY_ID = 'FETCH_SUBTASKS_BY_ID';\nexport const UPDATE_SUBTASKS_BY_ID = 'UPDATE_SUBTASKS_BY_ID';\nexport const ADD_SUBTASK = 'ADD_SUBTASK';\nexport const UPDATE_SUBTASK = 'UPDATE_SUBTASK';\nexport const DELETE_SUBTASK = 'DELETE_SUBTASK';\n","export const getSubtasksById = state => {\n  const { subtasksById } = state;\n  return subtasksById;\n};\n\nexport const getSubtasksArray = (state, subtaskIds) => {\n  const { subtasksById } = state;\n  if (!subtaskIds) return [];\n\n  return subtaskIds.map(subtaskId => {\n    return subtasksById[subtaskId];\n  });\n};\n\nexport const getSimpleSubtasks = (state, subtaskIds) => {\n  const { subtasksById } = state;\n  if (!subtaskIds) return {};\n\n  return subtaskIds.reduce((subtasks, subtaskId) => {\n    const { name, isCompleted } = subtasksById[subtaskId];\n        subtasks[subtaskId] = {\n          name,\n          isCompleted\n        };\n        return subtasks;\n      }, {});\n  };\n\nexport const getActiveSubtasks = (state, subtaskIds) => {\n  const subtasks = getSubtasksArray(state, subtaskIds);\n  return subtasks.filter(subtask => !subtask.isCompleted);\n};\n\nexport const getCompletedSubtasks = (state, subtaskIds) => {\n  const subtasks = getSubtasksArray(state, subtaskIds);\n  if (subtasks.includes(undefined)) return [];\n  return subtasks.filter(subtask => subtask.isCompleted);\n};\n","import * as types from './types';\n\nconst subtasksById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_SUBTASKS_BY_ID: {\n      const { subtasksById } = action;\n      return {\n        ...state,\n        ...subtasksById\n      };\n    }\n    case types.ADD_SUBTASK: {\n      const { subtaskId, subtaskData } = action;\n      return {\n        ...state,\n        [subtaskId]: {\n          subtaskId,\n          ...subtaskData\n        }\n      };\n    }\n    case types.DELETE_SUBTASK: {\n      const { subtaskId } = action;\n      const { [subtaskId]: deletedSubtask, ...restOfSubtasks } = state;\n      return restOfSubtasks;\n    }\n    case types.UPDATE_SUBTASK: {\n      const { subtaskId, subtaskData } = action;\n      return {\n        ...state,\n        [subtaskId]: {\n          ...state[subtaskId],\n          ...subtaskData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default subtasksById;\n","export const BACKSPACE = 'Backspace';\nexport const ENTER = 'Enter';\nexport const TAB = 'Tab';\nexport const ARROW_DOWN = 'ArrowDown';\nexport const ARROW_UP = 'ArrowUp';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon } from '../Icon';\nimport { withFirebase } from '../Firebase';\nimport { projectActions, projectSelectors } from '../../ducks/projects';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\nimport * as keys from '../../constants/keys';\nimport './TaskComposer.scss';\n\nconst INITIAL_STATE = {\n  name: '',\n  isActive: false\n};\n\nclass TaskComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ name: '' });\n  };\n\n  onSubmit = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { name } = this.state;\n    const {\n      userId,\n      folderId,\n      firebase,\n      projectId,\n      projectName,\n      listId,\n      listName\n    } = this.props;\n    firebase.addTask({\n      name,\n      userId,\n      folderId,\n      projectId,\n      projectName,\n      listId,\n      listName\n    });\n    this.resetForm();\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onBlur = e => {\n    if (e.target.value !== '') return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const { name, isActive } = this.state;\n\n    return (\n      <div\n        className={`task-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"task-composer__form\" onSubmit={this.onSubmit}>\n          <Button\n            className=\"task-composer__btn--submit\"\n            type=\"submit\"\n            onClick={this.onSubmit}\n            iconOnly\n          >\n            <Icon name=\"plus-circle\" />\n          </Button>\n          <Input\n            onChange={this.onChange}\n            value={name}\n            placeholder=\"Add a task\"\n            isRequired\n            name=\"name\"\n            className=\"task-composer__input\"\n            onKeyDown={this.onSubmit}\n            hideLabel\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userId: currentUserSelectors.getCurrentUserId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TaskComposer)\n);\n","import React, { Component, createRef } from 'react';\nimport './Textarea.scss';\n\nexport default class Textarea extends Component {\n  static defaultProps = {\n    isAutoHeightResizeEnabled: true\n  };\n\n  constructor(props) {\n    super(props);\n    this.textareaEl = createRef();\n  }\n\n  componentDidMount() {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n    this.autoHeightResize();\n  }\n\n  autoHeightResize = () => {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n\n    this.textareaEl.current.style.height = '0px'; // resets scroll height\n    this.textareaEl.current.style.height = `${\n      this.textareaEl.current.scrollHeight\n    }px`;\n  };\n\n  render() {\n    const {\n      className,\n      name,\n      value,\n      onChange,\n      placeholder,\n      isRequired,\n      onBlur,\n      onFocus,\n      onKeyDown,\n      onDragStart,\n      isReadOnly\n    } = this.props;\n    return (\n      <textarea\n        className={`textarea ${className}`}\n        id={name}\n        name={name}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={isRequired}\n        onBlur={onBlur}\n        onInput={this.autoHeightResize}\n        ref={this.textareaEl}\n        onFocus={onFocus}\n        onKeyDown={onKeyDown}\n        onDragStart={onDragStart}\n        readOnly={isReadOnly}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon } from '../Icon';\nimport { withFirebase } from '../Firebase';\nimport { projectActions, projectSelectors } from '../../ducks/projects';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport * as keys from '../../constants/keys';\nimport './CardComposer.scss';\n\nconst INITIAL_STATE = {\n  name: '',\n  isActive: false\n};\n\nclass CardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ name: '' });\n  };\n\n  onSubmit = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { name } = this.state;\n    const { projectId } = this.props.current;\n    const { listId, firebase, projectName, listName } = this.props;\n    firebase.addTask({ projectId, listId, name, projectName, listName });\n    this.resetForm();\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onBlur = e => {\n    if (e.target.value !== '') return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const { name, isActive } = this.state;\n\n    return (\n      <div\n        className={`card-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"card-composer__form\" onSubmit={this.onSubmit}>\n          <Textarea\n            onChange={this.onChange}\n            value={name}\n            placeholder={isActive ? 'Enter card title...' : 'Add a card'}\n            isRequired\n            name=\"name\"\n            className=\"card-composer__textarea\"\n            isAutoHeightResizeEnabled={false}\n            onKeyDown={this.onSubmit}\n          />\n          {isActive && (\n            <div className=\"card-composer__footer\">\n              <Button\n                className=\"card-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add Card\n              </Button>\n              <Button\n                className=\"card-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    projectsArray: projectSelectors.getProjectsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateProjectsById: project => dispatch(projectActions.updateProjectsById(project))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardComposer)\n);\n","import React from 'react';\nimport './Menu.scss';\n\nconst Menu = ({ children, onClick, className = '', menuRef }) => {\n  return (\n    <ul className={`menu ${className}`} onClick={onClick} ref={menuRef}>\n      {children}\n    </ul>\n  );\n};\n\nexport default Menu;\n","import React from 'react';\nimport './Menu.scss';\n\nconst MenuItem = ({ children, className = '' }) => {\n  return <li className={`menu__item ${className}`}>{children}</li>;\n};\n\nexport default MenuItem;\n","import React, { Component } from 'react';\n\nexport default class Popover extends Component {\n  state = {\n    isTouchEnabled: false\n  };\n\n  componentDidMount() {\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick, false);\n  }\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  handleOutsideClick = e => {\n    const { onOutsideClick } = this.props;\n    onOutsideClick(e.target);\n  };\n\n  handleTouch = () => {\n    this.setState({\n      isTouchEnabled: true\n    });\n    // remove touch handler to prevent unnecessary refires\n    document.removeEventListener('touchstart', this.handleTouch);\n    // remove outside click handler from click events\n    document.removeEventListener('click', this.handleOutsideClick);\n    // reattach outside click handler to touchstart events\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  render() {\n    const { className, onClick, style, children } = this.props;\n    return (\n      <div className={`popover ${className}`} onClick={onClick} style={style}>\n        {children}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from '../Button';\nimport Popover from './Popover';\nimport './Popover.scss';\n\nexport default class PopoverWrapper extends Component {\n  state = {\n    isActive: 'isActive' in this.props ? null : false\n  };\n\n  static defaultProps = {\n    classes: {\n      wrapper: '',\n      popover: ''\n    },\n    buttonProps: {},\n    align: 'left',\n    anchorEl: null\n  };\n\n  handleOutsideClick = target => {\n    if (this.componentEl && this.componentEl.contains(target)) return;\n    const { onOutsideClick, onPopoverClose } = this.props;\n\n    if (onOutsideClick) {\n      onOutsideClick();\n    } else {\n      this.setState({\n        isActive: false\n      });\n  \n      if (onPopoverClose) {\n        onPopoverClose();\n      }\n    }\n  };\n\n  toggleOpen = () => {\n    const { onButtonClick } = this.props;\n\n    if (onButtonClick) {\n      onButtonClick();\n    } else {\n      this.setState(prevState => ({\n        isActive: !prevState.isActive\n      }));\n    }\n  };\n\n  handleClose = e => {\n    if ('isActive' in this.props) return;\n    if (e.target.matches('input')) return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const {\n      children,\n      alignInner,\n      onWrapperClick,\n      alignOuter,\n      buttonProps,\n      classes,\n      anchorEl\n    } = this.props;\n    const isActive = 'isActive' in this.props ? this.props.isActive : this.state.isActive;\n\n    let popoverWrapperStyle = null;\n\n    if (anchorEl) {\n      const { offsetTop, offsetLeft } = anchorEl;\n      popoverWrapperStyle = {\n        position: 'absolute',\n        top: offsetTop,\n        [alignOuter]: offsetLeft\n      };\n    }\n\n    return (\n      <div\n        className={`popover-wrapper ${isActive ? 'is-active' : ''} ${\n          classes.wrapper\n        }`}\n        ref={el => (this.componentEl = el)}\n        style={popoverWrapperStyle}\n        onClick={onWrapperClick}\n      >\n        <Button\n          type=\"button\"\n          onClick={this.toggleOpen}\n          buttonRef={this.props.buttonRef}\n          {...buttonProps}\n        />\n        {isActive && (\n          <Popover\n            className={`align-${alignInner} ${classes.popover}`}\n            onClick={this.handleClose}\n            onOutsideClick={this.handleOutsideClick}\n          >\n            {children}\n          </Popover>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport './Tag.scss';\n\nconst Tag = ({ text, color, size, onDelete, className, tagRef, variant }) => (\n  <span\n    className={`tag tag--${size} bg--${color} ${\n      variant !== 'default' ? `tag--${variant}` : ''\n    } ${className}`}\n    ref={tagRef}\n  >\n    {text}\n    {size === 'md' && (\n      <Button\n        type=\"button\"\n        size=\"sm\"\n        className=\"tag__btn--delete\"\n        onClick={onDelete}\n        iconOnly\n      >\n        <Icon name=\"x\" />\n      </Button>\n    )}\n  </span>\n);\n\nTag.defaultProps = {\n  className: '',\n  onDelete: () => null,\n  color: 'default',\n  size: 'md',\n  variant: 'default'\n};\n\nexport default Tag;\n","import React, { Component } from 'react';\nimport './Avatar.scss';\n\nexport default class Avatar extends Component {\n  static defaultProps = {\n    imgSrc: null,\n    classes: {\n      avatar: '',\n      img: '',\n      placeholder: ''\n    },\n    size: 'md',\n    variant: 'circle'\n  };\n\n  getUserInitials = fullName => {\n    return fullName\n      .split(' ')\n      .map(name => name.charAt(0))\n      .join('')\n      .toUpperCase();\n  };\n\n  render() {\n    const {\n      imgSrc,\n      imgProps,\n      classes,\n      fullName,\n      variant,\n      color,\n      size\n    } = this.props;\n    return (\n      <div\n        className={`avatar avatar--${size} avatar--${variant} ${\n          classes.avatar\n        }`}\n      >\n        {imgSrc !== null ? (\n          <img\n            src={imgSrc}\n            alt={fullName}\n            className={`avatar__img ${classes.img}`}\n            {...imgProps}\n          />\n        ) : (\n          <div\n            className={`avatar__placeholder ${classes.placeholder}`}\n            style={{ backgroundColor: color }}\n          >\n            {this.getUserInitials(fullName)}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","// Full names, shortnames, and total days of months,\n// excluding February (depends on leap year)\nexport const MONTHS = [\n  {\n    long: 'January',\n    short: 'Jan',\n    daysTotal: 31\n  },\n  {\n    long: 'February',\n    short: 'Feb',\n    daysTotal: null\n  },\n  {\n    long: 'March',\n    short: 'Mar',\n    daysTotal: 31\n  },\n  {\n    long: 'April',\n    short: 'Apr',\n    daysTotal: 30\n  },\n  {\n    long: 'May',\n    short: 'May',\n    daysTotal: 31\n  },\n  {\n    long: 'June',\n    short: 'Jun',\n    daysTotal: 30\n  },\n  {\n    long: 'July',\n    short: 'Jul',\n    daysTotal: 31\n  },\n  {\n    long: 'August',\n    short: 'Aug',\n    daysTotal: 31\n  },\n  {\n    long: 'September',\n    short: 'Sep',\n    daysTotal: 30\n  },\n  {\n    long: 'October',\n    short: 'Oct',\n    daysTotal: 31\n  },\n  {\n    long: 'November',\n    short: 'Nov',\n    daysTotal: 30\n  },\n  {\n    long: 'December',\n    short: 'Dec',\n    daysTotal: 31\n  }\n];\n\n// Full names and shortnames of days of week\nexport const WEEK_DAYS = [\n  { long: 'Sunday', short: 'Sun', narrow: 'S' },\n  { long: 'Monday', short: 'Mon', narrow: 'M' },\n  { long: 'Tuesday', short: 'Tue', narrow: 'T' },\n  { long: 'Wednesday', short: 'Wed', narrow: 'W' },\n  { long: 'Thursday', short: 'Thu', narrow: 'T' },\n  { long: 'Friday', short: 'Fri', narrow: 'F' },\n  { long: 'Saturday', short: 'Sat', narrow: 'S' }\n];\n","/* eslint-disable default-case */\n/* eslint-disable no-nested-ternary */\nimport { MONTHS, WEEK_DAYS } from './constants';\n\nexport const isLeapYear = year =>\n  (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n\nexport const getMonthFirstDay = (monthIndex, year) =>\n  new Date(year, monthIndex, 1).getDay();\n\nexport const isToday = date =>\n  new Date().setHours(0, 0, 0, 0) === date.setHours(0, 0, 0, 0);\n\nexport const isYesterday = date => {\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  return today.setDate(today.getDate() - 1) === date.setHours(0, 0, 0, 0);\n};\n\nexport const isTomorrow = date => {\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  return today.setDate(today.getDate() + 1) === date.setHours(0, 0, 0, 0);\n};\n\nexport const isThisYear = date => {\n  return date.getFullYear() === new Date().getFullYear();\n};\n\nexport const getMonthDays = (monthIndex, year) => {\n  if (monthIndex === 1) {\n    return isLeapYear(year) ? 29 : 28;\n  }\n  return MONTHS[monthIndex].daysTotal;\n};\n\nexport const getPrevMonth = (monthIndex, year) => {\n  return {\n    month: monthIndex > 0 ? monthIndex - 1 : 11,\n    year: monthIndex > 0 ? year : year - 1\n  };\n};\n\nexport const getNextMonth = (monthIndex, year) => {\n  return {\n    month: monthIndex < 11 ? monthIndex + 1 : 0,\n    year: monthIndex < 11 ? year : year + 1\n  };\n};\n\nexport const getMonthDates = (month, year) => {\n  const monthDays = getMonthDays(month, year);\n  const monthFirstDay = getMonthFirstDay(month, year);\n  const { month: prevMonth, year: prevMonthYear } = getPrevMonth(month, year);\n  const prevMonthDays = getMonthDays(prevMonth, prevMonthYear);\n  const daysFromPrevMonth = monthFirstDay;\n  const daysFromNextMonth = 7 - ((monthFirstDay + monthDays) % 7);\n  const prevMonthDates = [...new Array(daysFromPrevMonth)].map((n, i) => {\n    return {\n      day: prevMonthDays - daysFromPrevMonth + i + 1,\n      month: prevMonth,\n      year: prevMonthYear\n    };\n  });\n\n  const thisMonthDates = [...new Array(monthDays)].map((n, i) => {\n    return {\n      day: i + 1,\n      month,\n      year\n    };\n  });\n\n  const nextMonthDates = [...new Array(daysFromNextMonth)].map((n, i) => {\n    return {\n      day: i + 1,\n      ...getNextMonth(month, year)\n    };\n  });\n\n  return [...prevMonthDates, ...thisMonthDates, ...nextMonthDates];\n};\n\nexport const isDate = date =>\n  Object.prototype.toString.call(date) === '[object Date]';\n\nexport const getSimpleDate = date => {\n  const dateObj =\n    !isDate(date) && typeof date === 'string' ? new Date(date) : date;\n  return {\n    day: dateObj.getDate(),\n    month: dateObj.getMonth(),\n    year: dateObj.getFullYear()\n  };\n};\n\nexport const isSimpleDate = date => {\n  return date && 'day' in date && 'month' in date && 'year' in date;\n};\n\nexport const isSameDate = (date, base = new Date()) => {\n  if (\n    (!isDate(date) && !isSimpleDate(date)) ||\n    (!isDate(base) && !isSimpleDate(base))\n  )\n    return false;\n  const dateDay = date.day || date.getDate();\n  const dateMonth = date.month || date.getMonth();\n  const dateYear = date.year || date.getFullYear();\n  const baseDay = base.day || base.getDate();\n  const baseMonth = base.month || base.getMonth();\n  const baseYear = date.year || base.getFullYear();\n  return (\n    dateDay === baseDay && dateMonth === baseMonth && dateYear === baseYear\n  );\n};\n\nexport const getNextYears = (num, startingYear = new Date().getFullYear()) => {\n  return [...new Array(num)].map((item, i) => {\n    return startingYear + i;\n  });\n};\n\nexport const zeroPad = (value, length) => {\n  return `${value}`.padStart(length, '0');\n};\n\n/**\n * Returns string representation of simple date object with format `mm-dd-yy`\n * @param {Object} date - simple date object\n */\nexport const toSimpleDateString = date => {\n  const simpleDate = isSimpleDate(date)\n    ? date\n    : isDate(date)\n    ? getSimpleDate(date)\n    : undefined;\n  if (!simpleDate) return '';\n  const { day, month, year } = simpleDate;\n  return `${zeroPad(month + 1, 2)}-${zeroPad(day, 2)}-${year - 2000}`;\n};\n\n/**\n * Converts simple date string back to simple date object\n * @param {String} dateString\n */\nexport const toSimpleDateObj = dateString => {\n  const dateArr = dateString.split('-');\n  const month = dateArr[0] - 1;\n  const day = +dateArr[1];\n  const year = +dateArr[2] + 2000;\n  if (day > getMonthDays(month, year)) {\n    return getSimpleDate(new Date(year, month, day));\n  }\n  return {\n    month,\n    day,\n    year\n  };\n};\n\nexport const isSDSFormat = dateString => {\n  return /^\\d{2}-\\d{2}-\\d{2}$/.test(dateString);\n};\n\n/**\n * Checks if date falls within specified time frame\n * @param {Date Object} date - Javascript date object\n * @param {Number} num - The number of days comprising the time frame to check the date against\n * @param {Date Object} startingDate - The first day of the time frame\n */\nexport const isWithinDays = (date, num, startingDate = new Date()) => {\n  const timeStart = startingDate.setHours(0, 0, 0, 0);\n  const endingDate = new Date(startingDate);\n  const timeEnd = endingDate.setDate(endingDate.getDate() + num);\n  return +date >= timeStart && +date < timeEnd;\n};\n\nexport const isPriorDate = (date, baseDate = new Date()) => {\n  return +date < baseDate.setHours(0, 0, 0, 0);\n};\n\nexport const toDateString = (\n  date,\n  options = {\n    useRelative: false,\n    format: {\n      weekday: 'short',\n      month: 'short',\n      day: 'numeric',\n      year: '2-digit'\n    }\n  }\n) => {\n  const { useRelative, format } = options;\n  if (useRelative) {\n    if (isToday(date)) {\n      return 'Today';\n    }\n    if (isYesterday(date)) {\n      return 'Yesterday';\n    }\n    if (isTomorrow(date)) {\n      return 'Tomorrow';\n    }\n    if (isWithinDays(date, 7)) {\n      return WEEK_DAYS[date.getDay()].long;\n    }\n  }\n  return Object.keys(format)\n    .map(key => {\n      switch (key) {\n        case 'weekday': {\n          const value = format[key];\n          const weekday = date.getDay();\n          return WEEK_DAYS[weekday][value];\n        }\n        case 'month': {\n          const value = format[key];\n          const month = date.getMonth();\n          if (value === 'numeric') {\n            return month + 1;\n          } if (value === '2-digit') {\n            return zeroPad(month + 1, 2);\n          } else {\n            return MONTHS[month][value];\n          }\n        }\n        case 'day': {\n          const value = format[key];\n          const day = date.getDate();\n          if (value === '2-digit') {\n            return zeroPad(day, 2);\n          } else {\n            return day;\n          }\n        }\n        case 'year': {\n          const value = format[key];\n          const year = date.getFullYear();\n          if (useRelative && isThisYear(date)) {\n            return null;\n          }\n          if (value === '2-digit') {\n            return `'${+year.slice(2)}`;\n          } else {\n            return year;\n          }\n        }\n      }\n    })\n    .join(' ')\n    .trim();\n};\n","import React from 'react';\n\nconst Radio = ({\n  classes = { radio: '', label: '' },\n  name,\n  id,\n  value,\n  onFocus,\n  onChange,\n  onInput,\n  isRequired,\n  onBlur,\n  inputRef,\n  hideLabel,\n  label,\n  onKeyDown,\n  isChecked\n}) => {\n  return (\n    <>\n      <input\n        className={`radio ${classes.radio}`}\n        id={id}\n        name={name}\n        type=\"radio\"\n        value={value}\n        onFocus={onFocus}\n        onChange={onChange}\n        onBlur={onBlur}\n        ref={inputRef}\n        onInput={onInput}\n        onKeyDown={onKeyDown}\n        required={isRequired}\n        checked={isChecked}\n      />\n      {!hideLabel && (\n        <label htmlFor={id} className={`radio__label ${classes.label}`}>\n          {label}\n        </label>\n      )}\n    </>\n  );\n};\n\nexport default Radio;\n","import React, { Component } from 'react';\nimport * as dateUtils from './utils';\nimport { MONTHS, WEEK_DAYS } from './constants';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { PopoverWrapper } from '../Popover';\nimport { Radio } from '../Radio';\nimport './Calendar.scss';\n\nexport default class Calendar extends Component {\n  state = {\n    isMonthsDropdownActive: false,\n    isYearsDropdownActive: false\n  };\n\n  goToNextMonth = () => {\n    const { month, year, onMonthClick } = this.props;\n    onMonthClick(dateUtils.getNextMonth(month, year));\n  };\n\n  goToPrevMonth = () => {\n    const { month, year, onMonthClick } = this.props;\n    onMonthClick(dateUtils.getPrevMonth(month, year));\n  };\n\n  toggleMonthsDropdown = () => {\n    this.setState(prevState => ({\n      isMonthsDropdownActive: !prevState.isMonthsDropdownActive\n    }));\n  };\n\n  toggleYearsDropdown = () => {\n    this.setState(prevState => ({\n      isYearsDropdownActive: !prevState.isYearsDropdownActive\n    }));\n  };\n\n  selectMonth = e => {\n    const month = +e.target.value;\n    const { onMonthClick, year } = this.props;\n    onMonthClick({ month, year });\n    this.toggleMonthsDropdown();\n  };\n\n  selectYear = e => {\n    const year = +e.target.value;\n    const { onYearClick } = this.props;\n    onYearClick(year);\n    this.toggleYearsDropdown();\n  };\n\n  render() {\n    const { month, year, selectedDate, today, onDayClick, classes } = this.props;\n    const { isMonthsDropdownActive, isYearsDropdownActive } = this.state;\n    const dates = dateUtils.getMonthDates(month, year);\n    const years = dateUtils.getNextYears(4);\n\n    return (\n      <div className={`calendar ${classes.calendar}`}>\n        <div className=\"calendar__year\">\n          <PopoverWrapper\n            isActive={isYearsDropdownActive}\n            onButtonClick={this.toggleYearsDropdown}\n            onOutsideClick={this.toggleYearsDropdown}\n            alignInner=\"left\"\n            classes={{\n              wrapper: 'calendar__years-dropdown-wrapper',\n              popover: 'calendar__years-dropdown'\n            }}\n            buttonProps={{\n              className: `calendar__btn--years-dropdown ${\n                isYearsDropdownActive ? 'is-active' : ''\n              }`,\n              children: (\n                <>\n                  {year}\n                  <Icon name=\"chevron-down\" />\n                </>\n              )\n            }}\n          >\n            <ul className=\"calendar__years-list\">\n              {years.map(yearOption => (\n                <li className=\"calendar__years-item\" key={yearOption}>\n                  <Radio\n                    name=\"year\"\n                    id={yearOption}\n                    value={yearOption}\n                    isChecked={yearOption === year}\n                    label={\n                      yearOption === year ? (\n                        <>\n                          <Icon name=\"check\" />\n                          {yearOption}\n                        </>\n                      ) : (\n                        yearOption\n                      )\n                    }\n                    onChange={this.selectYear}\n                    classes={{\n                      radio: 'calendar__radio',\n                      label: 'calendar__radio-label'\n                    }}\n                  />\n                </li>\n              ))}\n            </ul>\n          </PopoverWrapper>\n        </div>\n        <div className=\"calendar__month\">\n          <PopoverWrapper\n            isActive={isMonthsDropdownActive}\n            onButtonClick={this.toggleMonthsDropdown}\n            onOutsideClick={this.toggleMonthsDropdown}\n            alignInner=\"left\"\n            classes={{\n              wrapper: 'calendar__months-dropdown-wrapper',\n              popover: 'calendar__months-dropdown'\n            }}\n            buttonProps={{\n              className: `calendar__btn--months-dropdown ${\n                isMonthsDropdownActive ? 'is-active' : ''\n              }`,\n              children: (\n                <>\n                  {MONTHS[month].long}\n                  <Icon name=\"chevron-down\" />\n                </>\n              )\n            }}\n          >\n            <ul className=\"calendar__months-list\">\n              {MONTHS.map((monthOption, i) => (\n                <li className=\"calendar__months-item\" key={monthOption.long}>\n                  <Radio\n                    name=\"month\"\n                    id={monthOption.long}\n                    value={i}\n                    isChecked={i === month}\n                    label={\n                      i === month ? (\n                        <>\n                          <Icon name=\"check\" />\n                          {monthOption.long}\n                        </>\n                      ) : (\n                        monthOption.long\n                      )\n                    }\n                    onChange={this.selectMonth}\n                    classes={{\n                      radio: 'calendar__radio',\n                      label: 'calendar__radio-label'\n                    }}\n                  />\n                </li>\n              ))}\n            </ul>\n          </PopoverWrapper>\n          <div className=\"calendar__month--prev-next\">\n            <Button\n              type=\"button\"\n              className=\"calendar__btn--month calendar__btn--prev-month\"\n              size=\"sm\"\n              iconOnly\n              onClick={this.goToPrevMonth}\n            >\n              <Icon name=\"chevron-left\" />\n            </Button>\n            <Button\n              type=\"button\"\n              className=\"calendar__btn--month calendar__btn--next-month\"\n              size=\"sm\"\n              iconOnly\n              onClick={this.goToNextMonth}\n            >\n              <Icon name=\"chevron-right\" />\n            </Button>\n          </div>\n        </div>\n        <div className=\"calendar__week-days\">\n          {WEEK_DAYS.map(day => (\n            <div\n              key={day.long}\n              className={`calendar__week-day ${classes.weekDay}`}\n            >\n              {day.narrow}\n            </div>\n          ))}\n        </div>\n        <div className=\"calendar__days\">\n          {dates.map(date => {\n            const isToday =\n              date.day === today.day &&\n              date.month === today.month &&\n              date.year === today.year;\n            const isSelectedDate =\n              selectedDate &&\n              date.day === selectedDate.day &&\n              date.month === selectedDate.month &&\n              date.year === selectedDate.year;\n            return (\n              <div\n                key={`${date.month}--${date.day}`}\n                className={`calendar__day ${\n                  date.month !== month ? 'calendar__day--prev-next' : ''\n                } ${isToday ? 'is-today' : ''} ${\n                  isSelectedDate ? 'is-selected' : ''\n                } ${classes.day}`}\n              >\n                <Button\n                  type=\"button\"\n                  className=\"calendar__btn--day\"\n                  size=\"sm\"\n                  onClick={() => onDayClick(date)}\n                >\n                  {date.day}\n                </Button>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { userActions, userSelectors } from '../../ducks/users';\nimport { subtaskSelectors } from '../../ducks/subtasks';\nimport './Card.scss';\nimport { Tag } from '../Tag';\nimport { Icon } from '../Icon';\nimport { Avatar } from '../Avatar';\nimport { Button } from '../Button';\nimport { MONTHS, dateUtils } from '../Calendar';\n\nconst CardDetail = ({ icon, children, className = '' }) => (\n  <div className={`card__detail ${className}`}>\n    <Icon name={icon} />\n    {children}\n  </div>\n);\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.taskTags.indexOf(undefined) !== -1) {\n      return false;\n    }\n    return true;\n  }\n\n  handleCardClick = e => {\n    if (e.target.matches('button') || e.target.matches('a')) return;\n    const { taskId, onCardClick } = this.props;\n    onCardClick(taskId);\n  };\n\n  render() {\n    const {\n      name,\n      taskId,\n      taskIndex,\n      taskTags,\n      commentIds,\n      dueDate,\n      subtaskIds,\n      completedSubtasks,\n      taskMembers\n    } = this.props;\n\n    const dueDateStr = dueDate\n      ? dateUtils.toDateString(dueDate.toDate(), {\n          useRelative: true,\n          format: { month: 'short', day: 'numeric' }\n        })\n      : null;\n    const isDueToday = dueDateStr === 'Today';\n    const isDueTmrw = dueDateStr === 'Tomorrow';\n    const isPastDue = dueDate && dateUtils.isPriorDate(dueDate.toDate());\n    return (\n      <Draggable draggableId={taskId} index={taskIndex}>\n        {provided => (\n          <div\n            className=\"card\"\n            onClick={this.handleCardClick}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            style={{\n              ...provided.draggableProps.style,\n              backgroundColor: '#fff'\n            }}\n          >\n            <div className=\"card__header\" ref={el => (this.headerEl = el)}>\n              <div className=\"card__tags\">\n                {taskTags.map(taskTag => (\n                  <Tag\n                    key={taskTag.text}\n                    size=\"sm\"\n                    color={taskTag.color}\n                    variant=\"pill\"\n                    className=\"card__tag\"\n                  />\n                ))}\n              </div>\n              <h3 className=\"card__title\">{name}</h3>\n            </div>\n            <div className=\"card__body\">\n              {dueDate && (\n                <CardDetail\n                  icon=\"calendar\"\n                  className={`card__due-date ${\n                    isDueToday\n                      ? 'is-due-today'\n                      : isDueTmrw\n                      ? 'is-due-tmrw'\n                      : isPastDue\n                      ? 'is-past-due'\n                      : ''\n                  }\n                  `}\n                >\n                  {dueDateStr}\n                </CardDetail>\n              )}\n              {subtaskIds && subtaskIds.length > 0 && (\n                <CardDetail icon=\"check-square\">\n                  {completedSubtasks.length}/{subtaskIds.length}\n                </CardDetail>\n              )}\n              {commentIds && commentIds.length > 0 && (\n                <CardDetail icon=\"message-circle\">\n                  {commentIds.length}\n                </CardDetail>\n              )}\n            </div>\n            <div className=\"card__footer\">\n              {taskMembers && taskMembers.length > 0 && (\n                <div className=\"card__members-wrapper\">\n                  <div className=\"card__members\">\n                    {taskMembers.map(member => {\n                      const { name, photoURL, userId } = member;\n                      return (\n                        <Avatar\n                          classes={{\n                            avatar: 'card__avatar',\n                            placeholder: 'card__avatar-placeholder'\n                          }}\n                          fullName={name}\n                          size=\"sm\"\n                          variant=\"circle\"\n                          imgSrc={photoURL}\n                          key={userId}\n                        />\n                      );\n                    })}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    taskTags: taskSelectors.getTaskTags(state, ownProps),\n    completedSubtasks: subtaskSelectors.getCompletedSubtasks(\n      state,\n      ownProps.subtaskIds\n    ),\n    taskMembers: userSelectors.getMembersArray(state, ownProps.assignedTo)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Card);\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport './Checkbox.scss';\n\nconst Checkbox = ({\n  value,\n  id,\n  name,\n  isChecked,\n  onClick,\n  onChange,\n  className,\n  labelClass,\n  ...props\n}) => {\n  return (\n    <label\n      htmlFor={id}\n      onClick={onClick}\n      className={`checkbox__label ${labelClass}`}\n    >\n      {isChecked && <Icon name=\"check\" />}\n      <input\n        type=\"checkbox\"\n        id={id}\n        value={value}\n        name={name}\n        checked={isChecked}\n        className={`checkbox ${className}`}\n        onChange={onChange}\n        {...props}\n      />\n    </label>\n  );\n};\n\nCheckbox.defaultProps = {\n  className: '',\n  labelClass: ''\n};\n\nexport default Checkbox;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Checkbox } from '../Checkbox';\nimport { Textarea } from '../Textarea';\nimport { withFirebase } from '../Firebase';\nimport * as keys from '../../constants/keys';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport './Task.scss';\n\nclass Task extends Component {\n  state = {\n    isFocused: false,\n    name: this.props.name,\n    prevPropsName: this.props.name\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.name !== state.prevPropsName) {\n      return {\n        name: props.name,\n        prevPropsName: props.name\n      };\n    }\n    return null;\n  }\n\n  onFocus = () => {\n    this.setState({\n      isFocused: true\n    });\n  };\n\n  onChange = e => {\n    this.setState({\n      name: e.target.value\n    });\n  };\n\n  onBlur = () => {\n    const { name, firebase, taskId } = this.props;\n    const { name: newName } = this.state;\n    if (name !== newName) {\n      firebase.updateTask(taskId, {\n        name: newName\n      });\n    }\n    this.setState({\n      isFocused: false\n    });\n  };\n\n  deleteTask = e => {\n    if (e.target.value !== '' || e.key !== keys.BACKSPACE) return;\n    const { userId, taskId, firebase, listId, folderId, assignedTo, folders } = this.props;\n    firebase.deleteTask({ taskId, listId, assignedTo, folders });\n  };\n\n  toggleCompleted = () => {\n    const { taskId, isCompleted, firebase } = this.props;\n    firebase.updateTask(taskId, {\n      isCompleted: !isCompleted,\n      completedAt: !isCompleted ? firebase.getTimestamp() : null\n    });\n  };\n\n  handleTaskClick = e => {\n    if (\n      e.target.matches('button') ||\n      e.target.matches('a') ||\n      e.target.matches('label') ||\n      e.target.matches('input[type=\"checkbox\"]')\n    )\n      return;\n    const { taskId, onTaskClick } = this.props;\n    onTaskClick(taskId);\n  };\n\n  render() {\n    const { taskId, isCompleted, innerRef, provided } = this.props;\n    const { isFocused, name } = this.state;\n    const draggableProps = provided\n      ? provided.draggableProps\n      : { style: { listStyle: 'none' } };\n    const dragHandleProps = provided\n      ? provided.dragHandleProps\n      : { style: { listStyle: 'none' } };\n\n    return (\n      <li\n        className={`task ${isFocused ? 'is-focused' : ''}`}\n        onClick={this.handleTaskClick}\n        ref={innerRef}\n        {...draggableProps}\n        {...dragHandleProps}\n      >\n        <Checkbox\n          id={`cb-${taskId}`}\n          value={taskId}\n          name={taskId}\n          isChecked={isCompleted}\n          onChange={this.toggleCompleted}\n          className=\"task__checkbox\"\n          labelClass=\"task__checkbox-label\"\n        />\n        <Textarea\n          value={name}\n          onFocus={this.onFocus}\n          onChange={this.onChange}\n          onBlur={this.onBlur}\n          name={taskId}\n          className=\"task__textarea\"\n          onKeyDown={this.deleteTask}\n        />\n      </li>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userId: currentSelectors.getCurrentUserId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Task)\n);\n","import React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport Task from './Task';\n\nconst DraggableTask = ({\n  taskId,\n  index,\n  onTaskClick,\n  listId,\n  folderId,\n  task\n}) => (\n  <Draggable draggableId={taskId} index={index}>\n    {(provided, snapshot) => (\n      <Task\n        innerRef={provided.innerRef}\n        provided={provided}\n        onTaskClick={onTaskClick}\n        listId={listId}\n        folderId={folderId}\n        {...task}\n      />\n    )}\n  </Draggable>\n);\n\nexport default DraggableTask;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { Card } from '../Card';\nimport { DraggableTask } from '../Task';\n\nexport default class Tasks extends Component {\n  /*\n\n  shouldComponentUpdate(nextProps) {\n    if (this.props.cards === nextProps.cards) {\n      return false;\n    }\n    return true;\n  }\n*/\n  componentDidUpdate(prevProps) {\n    if (this.props.tasks.length > prevProps.tasks.length) {\n      this.scrollToBottom();\n    }\n  }\n\n  scrollToBottom = () => {\n    if (!this.listEnd) return;\n    this.listEnd.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  render() {\n    const { listId, tasks, onTaskClick, folderId, view } = this.props;\n    const isBoardView = view === 'board';\n\n    const inner = tasks.map((task, taskIndex) => {\n      return isBoardView ? (\n        <Card\n          key={task.taskId}\n          taskIndex={taskIndex}\n          onCardClick={onTaskClick}\n          {...task}\n        />\n      ) : (\n        <DraggableTask\n          key={task.taskId}\n          index={taskIndex}\n          onTaskClick={onTaskClick}\n          listId={listId}\n          folderId={folderId}\n          taskId={task.taskId}\n          task={task}\n        />\n      );\n    });\n\n    return (\n      <Droppable droppableId={listId || folderId} type={droppableTypes.TASK}>\n        {(provided, snapshot) =>\n          isBoardView ? (\n            <div\n              className=\"list__cards\"\n              ref={provided.innerRef}\n              style={{ minHeight: snapshot.isDraggingOver ? 80 : 16 }}\n              {...provided.droppableProps}\n            >\n              {inner}\n              {provided.placeholder}\n              <div\n                style={{ float: 'left', clear: 'both' }}\n                ref={el => (this.listEnd = el)}\n              />\n            </div>\n          ) : (\n            <ul\n              className=\"list__tasks\"\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {inner}\n              {provided.placeholder}\n            </ul>\n          )\n        }\n      </Droppable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { projectSelectors } from '../../ducks/projects';\nimport { TaskComposer } from '../TaskComposer';\nimport { CardComposer } from '../CardComposer';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\nimport { Input } from '../Input';\nimport { Tasks } from '../Tasks';\nimport './List.scss';\n\nclass List extends Component {\n  static defaultProps = {\n    isRestricted: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.name\n    };\n  }\n\n  handleListDelete = e => {\n    e.preventDefault();\n    const { listId, projectId, firebase } = this.props;\n    firebase.deleteList({ listId, projectId });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onBlur = e => {\n    const { name, listId, firebase } = this.props;\n    const { name: newName } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newName !== name) {\n      firebase.updateListName({ listId, name: newName });\n      console.log('updated list name!');\n    }\n  };\n\n  render() {\n    const {\n      tasks,\n      onTaskClick,\n      listId,\n      listIndex,\n      isFetchingTasks,\n      isRestricted,\n      projectId,\n      view\n    } = this.props;\n    if (isFetchingTasks) return null;\n\n    const isBoardView = view === 'board';\n\n    const { name } = this.state;\n\n    return (\n      <Draggable draggableId={listId} index={listIndex}>\n        {provided => (\n          <>\n            <section\n              className={`list is-${view}-view`}\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <header className=\"list__header\">\n                <Input\n                  className=\"list__input--title\"\n                  name=\"name\"\n                  type=\"text\"\n                  value={name}\n                  onChange={this.onChange}\n                  required={!isRestricted}\n                  hideLabel\n                  isReadOnly={isRestricted}\n                  onBlur={this.onBlur}\n                />\n                <PopoverWrapper\n                  classes={{\n                    wrapper: 'list__popover-wrapper',\n                    popover: 'list__popover'\n                  }}\n                  alignInner={isBoardView ? 'left' : 'right'}\n                  buttonProps={{\n                    size: 'medium',\n                    iconOnly: true,\n                    className: 'list__btn--more-actions',\n                    children: <Icon name=\"more-vertical\" />\n                  }}\n                >\n                  <Menu>\n                    <MenuItem>\n                      {!isRestricted && (\n                        <a href=\"\" onClick={this.handleListDelete}>\n                          Delete\n                        </a>\n                      )}\n                    </MenuItem>\n                  </Menu>\n                </PopoverWrapper>\n              </header>\n              <div className=\"list__content\">\n                <Tasks\n                  tasks={tasks}\n                  listId={listId}\n                  onTaskClick={onTaskClick}\n                  view={view}\n                />\n              </div>\n              {provided.placeholder}\n              {isBoardView ? (\n                <CardComposer\n                  listId={listId}\n                  listName={this.props.name}\n                  projectId={projectId}\n                  projectName={this.props.projectName}\n                />\n              ) : (\n                <TaskComposer\n                  listId={listId}\n                  listName={this.props.name}\n                  projectId={projectId}\n                  projectName={this.props.projectName}\n                />\n              )}\n            </section>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    tasks: taskSelectors.getListTasks(state, ownProps.taskIds),\n    projectName: projectSelectors.getProjectName(state, ownProps.projectId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(List)\n);\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadCommentsById = commentsById => {\n  return {\n    type: types.LOAD_COMMENTS_BY_ID,\n    commentsById\n  };\n};\n\nexport const fetchCommentsById = () => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateCommentsById = comment => {\n  return {\n    type: types.UPDATE_COMMENTS_BY_ID,\n    comment\n  };\n};\n\nexport const fetchTaskComments = taskId => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .where('taskId', '==', taskId)\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserComments = userId => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .where('to', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addComment = ({ commentId, commentData }) => {\n  return {\n    type: types.ADD_COMMENT,\n    commentId,\n    commentData\n  };\n};\n\nexport const deleteComment = commentId => {\n  return {\n    type: types.DELETE_COMMENT,\n    commentId\n  };\n};\n\nexport const updateComment = ({ commentId, commentData }) => {\n  return {\n    type: types.UPDATE_COMMENT,\n    commentId,\n    commentData\n  };\n};\n","export const LOAD_COMMENTS_BY_ID = 'LOAD_COMMENTS_BY_ID';\nexport const FETCH_COMMENTS_BY_ID = 'FETCH_COMMENTS_BY_ID';\nexport const UPDATE_COMMENTS_BY_ID = 'UPDATE_COMMENTS_BY_ID';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const UPDATE_COMMENT = 'UPDATE_COMMENT';\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\n","export const getCommentsById = state => {\n  const { commentsById } = state;\n  return commentsById;\n};\n\nexport const getCommentsArray = (state, commentIds) => {\n  const { commentsById } = state;\n  if (!commentIds) return [];\n  return commentIds.map(commentId => {\n    return commentsById[commentId];\n  });\n};\n","import * as types from './types';\n\nconst commentsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_COMMENTS_BY_ID: {\n      const { commentsById } = action;\n      return {\n        ...state,\n        ...commentsById\n      };\n    }\n    case types.ADD_COMMENT: {\n      const { commentId, commentData } = action;\n      return {\n        ...state,\n        [commentId]: {\n          commentId,\n          ...commentData\n        }\n      };\n    }\n    case types.DELETE_COMMENT: {\n      const { commentId } = action;\n      const { [commentId]: deletedComment, ...restOfComments } = state;\n      return restOfComments;\n    }\n    case types.UPDATE_COMMENT: {\n      const { commentId, commentData } = action;\n      return {\n        ...state,\n        [commentId]: {\n          ...state[commentId],\n          ...commentData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default commentsById;\n","import React from 'react';\nimport './Toolbar.scss';\n\nconst Toolbar = ({ className, children, ...props }) => (\n  <div className={`toolbar ${className}`} {...props}>\n    {children}\n  </div>\n);\n\nToolbar.defaultProps = {\n  className: ''\n};\n\nexport default Toolbar;\n","import React, { Component } from 'react';\nimport { Icon } from '../Icon';\nimport { PopoverWrapper } from '../Popover';\n\nexport default class TaskEditorAssignMember extends Component {\n  render() {\n    const { children } = this.props;\n\n    return (\n      <PopoverWrapper\n        classes={{\n          wrapper: \"task-editor__popover-wrapper task-editor__member-search-popover-wrapper\",\n          popover: \"task-editor__popover task-editor__member-search-popover\"\n        }}\n        alignOuter=\"left\"\n        alignInner=\"left\"\n        buttonProps={{\n          size: 'md',\n          iconOnly: true,\n          className: 'task-editor__toolbar-btn',\n          children: <Icon name=\"users\" />,\n          buttonRef: this.props.buttonRef\n        }}\n      >\n        {children}\n      </PopoverWrapper>\n    );\n  }\n}\n","import React from 'react';\n\nconst TaskEditorSection = ({ size, children }) => (\n  <div className={`task-editor__section${size === 'sm' ? '--sm' : ''}`}>{children}</div>\n);\n\nTaskEditorSection.defaultProps = {\n  size: 'default'\n};\n\nexport default TaskEditorSection;\n","import React, { Component } from 'react';\n\nimport { Input } from '../Input';\nimport { Avatar } from '../Avatar';\nimport { Icon } from '../Icon';\nimport * as keys from '../../constants/keys';\nimport './MemberSearch.scss';\n\nexport default class MemberSearch extends Component {\n  state = {\n    query: '',\n    isActive: false,\n    isTouchEnabled: false,\n    selectedMember: '',\n    selectedIndex: null,\n    filteredList: this.props.users\n  };\n\n  componentDidMount() {\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick, false);\n    this.inputEl.focus();\n  }\n\n  handleOutsideClick = e => {\n    if (this.state.query !== '') return;\n    if (!this.memberSearchEl.contains(e.target)) {\n      this.setState({\n        isActive: false\n      });\n    }\n  };\n\n  handleTouch = () => {\n    this.setState({\n      isTouchEnabled: true\n    });\n    // remove touch handler to prevent unnecessary refires\n    document.removeEventListener('touchstart', this.handleTouch);\n    // remove outside click handler from click events\n    document.removeEventListener('click', this.handleOutsideClick);\n    // reattach outside click handler to touchstart events\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  matchUser = (user, query) => {\n    const { name, email, username } = user;\n    const regExp = new RegExp(query, 'i');\n    return regExp.test(name) || regExp.test(email) || regExp.test(username);\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({\n      query: '',\n      isActive: false,\n      isTouchEnabled: false,\n      selectedMember: '',\n      selectedIndex: null,\n      filteredList: this.props.users\n    });\n  };\n\n  onChange = e => {\n    const { users } = this.props;\n    const { selectedMember, selectedIndex } = this.state;\n    const query = e.target.value;\n    const filteredList = users.filter(user => this.matchUser(user, query));\n    const newIndex = filteredList.indexOf(selectedMember);\n    const persistSelectedMember = newIndex !== -1;\n\n    this.setState({\n      selectedMember: persistSelectedMember\n        ? selectedMember\n        : filteredList.length > 0\n        ? filteredList[0].userId\n        : '',\n      selectedIndex: persistSelectedMember ? newIndex : 0,\n      query,\n      filteredList\n    });\n  };\n\n  onKeyDown = e => {\n    if (\n      e.key !== keys.TAB &&\n      e.key !== keys.ARROW_DOWN &&\n      e.key !== keys.ARROW_UP &&\n      e.key !== keys.ENTER\n    )\n      return;\n\n    const { filteredList, selectedIndex, selectedMember } = this.state;\n    const { onMemberClick } = this.props;\n    const nextIndex =\n      selectedIndex === filteredList.length - 1 ? 0 : selectedIndex + 1;\n    const prevIndex =\n      selectedIndex === 0 ? filteredList.length - 1 : selectedIndex - 1;\n\n    // eslint-disable-next-line default-case\n    switch (e.key) {\n      case keys.ARROW_DOWN:\n      // eslint-disable-next-line no-fallthrough\n      case keys.TAB: {\n        this.setState({\n          selectedMember: filteredList[nextIndex].userId,\n          selectedIndex: nextIndex\n        });\n        break;\n      }\n      case keys.ARROW_UP: {\n        this.setState({\n          selectedMember: filteredList[prevIndex].userId,\n          selectedIndex: prevIndex\n        });\n        break;\n      }\n      case keys.ENTER: {\n        if (selectedMember === '') return;\n        onMemberClick(selectedMember);\n        break;\n      }\n    }\n\n    e.preventDefault();\n  };\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  render() {\n    const { users, onMemberClick, assignedMembers } = this.props;\n    const { query, isActive, filteredList, selectedMember } = this.state;\n\n    return (\n      <div\n        className=\"member-search__wrapper\"\n        ref={el => (this.memberSearchEl = el)}\n      >\n        <Input\n          name=\"query\"\n          className=\"member-search\"\n          onChange={this.onChange}\n          value={query}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          type=\"text\"\n          autoComplete=\"off\"\n          hideLabel\n          placeholder=\"Assign or remove member\"\n          onKeyDown={this.onKeyDown}\n          inputRef={el => (this.inputEl = el)}\n        />\n        {isActive && (\n          <ul className=\"member-search__list\">\n            {filteredList.length > 0 ? (\n              filteredList.map((user, i) => {\n                const { name, photoURL, email, username, userId } = user;\n                const isAssigned =\n                  assignedMembers && assignedMembers.indexOf(userId) !== -1;\n                return (\n                  <li\n                    className={`member-search__item ${\n                      selectedMember === userId ? 'is-selected' : ''\n                    }`}\n                    onClick={() => onMemberClick(userId)}\n                    key={userId}\n                    id={userId}\n                  >\n                    <Icon name={isAssigned ? 'user-minus' : 'user-plus'} />\n                    <Avatar\n                      classes={{\n                        avatar: 'member-search__avatar--sm',\n                        placeholder: 'member-search__avatar-placeholder--sm'\n                      }}\n                      fullName={name}\n                      size=\"sm\"\n                      variant=\"circle\"\n                      imgSrc={photoURL}\n                    />\n                    <span className=\"member-search__info member-search__name\">\n                      {name}\n                    </span>\n                    <span className=\"member-search__info member-search__username\">\n                      {username}\n                    </span>\n                    <span className=\"member-search__info member-search__email\">\n                      {email}\n                    </span>\n                  </li>\n                );\n              })\n            ) : (\n              <li className=\"member-search__item\">\n                <span className=\"member-search__no-match\">\n                  No matches found\n                </span>\n              </li>\n            )}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\n\nconst TaskEditorMoreActions = ({ onMenuClick }) => (\n  <PopoverWrapper\n    classes={{\n      wrapper: 'task-editor__popover-wrapper',\n      popover: 'task-editor__popover'\n    }}\n    alignOuter=\"right\"\n    alignInner=\"right\"\n    buttonProps={{\n      size: 'md',\n      iconOnly: true,\n      className: 'task-editor__toolbar-btn',\n      children: <Icon name=\"more-horizontal\" />\n    }}\n  >\n    <Menu onClick={onMenuClick}>\n      <MenuItem>\n        <a href=\"\" data-action=\"delete\">\n          Delete task\n        </a>\n      </MenuItem>\n    </Menu>\n  </PopoverWrapper>\n);\n\nexport default TaskEditorMoreActions;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Checkbox } from '../Checkbox';\nimport { Textarea } from '../Textarea';\nimport { withFirebase } from '../Firebase';\nimport * as keys from '../../constants/keys';\nimport './Subtask.scss';\n\nconst appRoot = document.getElementById('root');\n\nclass Subtask extends Component {\n  constructor(props) {\n    super(props);\n    this.portal = document.createElement('div');\n    this.state = {\n      name: this.props.name\n    }\n  }\n\n  componentDidMount() {\n    appRoot.appendChild(this.portal);\n  }\n\n  onDragStart = e => {\n    console.log('dragstart');\n    this.setState({\n      isReadOnly: true\n    });\n  };\n\n  onChange = e => {\n    this.setState({\n      name: e.target.value\n    });\n  };\n\n  onBlur = () => {\n    const { name, firebase, subtaskId } = this.props;\n    const { name: newName } = this.state;\n    if (name !== newName) {\n      firebase.updateSubtask(subtaskId, {\n        name: newName\n      });\n    }\n  };\n\n  deleteSubtask = e => {\n    if (e.target.value !== '' || e.key !== keys.BACKSPACE) return;\n    const { subtaskId, taskId, firebase } = this.props;\n    firebase.deleteSubtask({ subtaskId, taskId });\n  };\n\n  toggleCompleted = () => {\n    const { subtaskId, isCompleted, firebase } = this.props;\n    firebase.updateSubtask(subtaskId, {\n      isCompleted: !isCompleted,\n      completedAt: !isCompleted ? firebase.getTimestamp() : null\n    });\n  };\n\n  componentWillUnmount() {\n    appRoot.removeChild(this.portal);\n  }\n\n  render() {\n    const {\n      subtaskId,\n      index,\n      isCompleted\n    } = this.props;\n\n    const { name } = this.state;\n\n    return (\n      <Draggable draggableId={subtaskId} index={index}>\n        {(provided, snapshot) => {\n          const inner = (\n            <li\n              className=\"subtask\"\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <Checkbox\n                id={`cb-${subtaskId}`}\n                value={subtaskId}\n                name={subtaskId}\n                isChecked={isCompleted}\n                onChange={this.toggleCompleted}\n                className=\"subtask__checkbox\"\n                labelClass=\"subtask__checkbox-label\"\n              />\n              <Textarea\n                value={name}\n                onChange={this.onChange}\n                onBlur={this.onBlur}\n                name={subtaskId}\n                className=\"subtask__textarea\"\n                onKeyDown={this.deleteSubtask}\n                onDragStart={this.onDragStart}\n              />\n            </li>\n          );\n          return snapshot.isDragging\n            ? ReactDOM.createPortal(inner, this.portal)\n            : inner;\n        }}\n      </Draggable>\n    );\n  }\n}\n\nexport default withFirebase(Subtask);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { withFirebase } from '../Firebase';\nimport { Subtask } from '../Subtask';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport * as keys from '../../constants/keys';\nimport { subtaskActions, subtaskSelectors } from '../../ducks/subtasks';\nimport { currentSelectors } from '../../ducks/current';\nimport './Subtasks.scss';\n\nclass Subtasks extends Component {\n  state = {\n    isFetching: !this.props.currentProject || !this.props.projectId\n  };\n\n  componentDidMount() {\n    const { firebase, fetchTaskSubtasks, addSubtask, updateSubtask, deleteSubtask, taskId, projectId, currentProject } = this.props;\n    if (!currentProject || !projectId) {\n      fetchTaskSubtasks(taskId).then(() => {\n        this.setState({\n          isFetching: false\n        });\n      });\n    }\n    this.subtaskObserver = firebase.db\n      .collection('subtasks')\n      .where('taskId', '==', taskId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const subtaskId = change.doc.id;\n          const subtaskData = change.doc.data();\n          if (change.type === 'added') {\n            addSubtask({ subtaskId, subtaskData });\n          }\n          if (change.type === 'modified') {\n            updateSubtask({ subtaskId, subtaskData });\n          }\n          if (change.type === 'removed') {\n            deleteSubtask(subtaskId);\n          }\n        });\n      });\n  }\n  \n  shouldComponentUpdate(nextProps) {\n    if (nextProps.subtasks.includes(undefined)) {\n      return false;\n    }\n    return true;\n  }\n\n  moveSubtask = ({ destination, draggableId, source }) => {\n    if (!destination) return;\n    if (destination.index === source.index) return;\n    const { firebase, subtaskIds } = this.props;\n    const updatedSubtaskIds = [...subtaskIds];\n    updatedSubtaskIds.splice(source.index, 1);\n    updatedSubtaskIds.splice(destination.index, 0, draggableId);\n    firebase.updateTask(source.droppableId, {\n      subtaskIds: updatedSubtaskIds\n    });\n  };\n\n  componentWillUnmount() {\n    this.subtaskObserver();\n  }\n\n  render() {\n    const { taskId, subtasks } = this.props;\n    const { isFetching } = this.state;\n    return (\n      <DragDropContext onDragEnd={this.moveSubtask}>\n        <Droppable droppableId={taskId} type={droppableTypes.SUBTASK}>\n          {provided => (\n            <ul\n              className=\"subtasks\"\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {!isFetching && subtasks.map((subtask, index) => {\n                return (\n                  <Subtask\n                    subtaskId={subtask.subtaskId}\n                    taskId={taskId}\n                    index={index}\n                    name={subtask.name}\n                    isCompleted={subtask.isCompleted}\n                    key={subtask.subtaskId}\n                  />\n                );\n              })}\n              {provided.placeholder}\n            </ul>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    subtasks: subtaskSelectors.getSubtasksArray(state, ownProps.subtaskIds),\n    currentProject: currentSelectors.getCurrentProjectId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchTaskSubtasks: taskId =>\n      dispatch(subtaskActions.fetchTaskSubtasks(taskId)),\n      addSubtask: ({ subtaskId, subtaskData }) =>\n      dispatch(subtaskActions.addSubtask({ subtaskId, subtaskData })),\n    deleteSubtask: subtaskId =>\n      dispatch(subtaskActions.deleteSubtask(subtaskId)),\n    updateSubtask: ({ subtaskId, subtaskData }) =>\n      dispatch(subtaskActions.updateSubtask({ subtaskId, subtaskData }))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Subtasks)\n);\n\n","/* eslint-disable no-nested-ternary */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/users';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { commentActions, commentSelectors } from '../../ducks/comments';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { Avatar } from '../Avatar';\nimport { dateUtils } from '../Calendar';\nimport './TaskEditorComment.scss';\n\nclass TaskEditorComment extends Component {\n  state = {\n    secondsElapsed: 0\n  };\n\n  componentDidMount() {\n    const { createdAt } = this.props.comment;\n    const secondsSinceCreation =\n      Math.floor(Date.now() / 1000) -\n      Math.floor(createdAt.toDate().getTime() / 1000);\n\n    this.setState({\n      secondsElapsed: secondsSinceCreation\n    });\n\n    this.interval = setInterval(this.tick, 1000);\n  }\n\n  tick = () => {\n    this.setState(prevState => ({\n      secondsElapsed: prevState.secondsElapsed + 1\n    }));\n  };\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  handleLikeClick = () => {\n    const { handleLike, comment } = this.props;\n    const { commentId } = comment;\n    handleLike(commentId);\n  };\n\n  render() {\n    const { user, comment } = this.props;\n    const { secondsElapsed } = this.state;\n    const { name, photoURL } = user;\n    const {\n      content,\n      createdAt,\n      lastUpdatedAt,\n      likes,\n      to,\n      from,\n      isPinned\n    } = comment;\n    if (!createdAt) return null;\n    const dateCreated = createdAt.toDate();\n    const timeCreated = dateCreated.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true\n    });\n    const dateCreatedString = dateUtils.toDateString(dateCreated, {\n      useRelative: true,\n      format: {\n        weekday: 'short',\n        month: 'short',\n        day: 'numeric',\n        year: '2-digit'\n      }\n    });\n    return (\n      <div\n        className={`task-editor__comment-wrapper ${\n          isPinned ? 'is-pinned' : ''\n        }`}\n      >\n        <Avatar\n          classes={{\n            avatar: 'task-editor__comment-avatar',\n            placeholder: 'task-editor__comment-avatar-placeholder'\n          }}\n          fullName={name}\n          size=\"sm\"\n          variant=\"circle\"\n          imgSrc={photoURL}\n        />\n        <div className=\"task-editor__comment\">\n          <div className=\"task-editor__comment-header\">\n            <div className=\"task-editor__comment-details\">\n              <span className=\"task-editor__name\">{name}</span>\n              <span className=\"task-editor__timestamp\">\n                {secondsElapsed < 60 // less than one minute\n                  ? 'Just now'\n                  : secondsElapsed < 120 // less than 2 minutes\n                  ? '1 minute ago'\n                  : secondsElapsed < 3600 // less than 1 hour\n                  ? `${Math.floor(secondsElapsed / 60)} minutes ago`\n                  : secondsElapsed < 7200 // less than 2 hours\n                  ? '1 hour ago'\n                  : secondsElapsed < 21600 // less than 6 hours\n                  ? `${Math.floor(secondsElapsed / 3600)} hours ago`\n                  : `${dateCreatedString} at ${timeCreated}`}\n              </span>\n            </div>\n            <Button\n              className=\"task-editor__likes\"\n              onClick={this.handleLikeClick}\n              size=\"sm\"\n            >\n              <Icon name=\"thumbs-up\" />\n              <span className=\"task-editor__likes-counter\">\n                {likes.length > 0 ? likes.length : ''}\n              </span>\n            </Button>\n          </div>\n          <div className=\"task-editor__comment-body\">{content}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state, ownProps.comment.from),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateTasksById: task => dispatch(taskActions.updateTasksById(task)),\n    fetchTaskComments: taskId =>\n      dispatch(commentActions.fetchTaskComments(taskId)),\n    addComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.addComment({ commentId, commentData })),\n    deleteComment: commentId =>\n      dispatch(commentActions.deleteComment(commentId)),\n    updateComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.updateComment({ commentId, commentData }))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TaskEditorComment)\n);\n","import React, { Component } from 'react';\nimport { Radio } from '../Radio';\nimport './ColorPicker.scss';\n\nexport default class ColorPicker extends Component {\n  state = {\n    selectedColor: 'default'\n  };\n\n  handleColorChange = e => {\n    const { selectColor } = this.props;\n    this.setState({\n      selectedColor: e.target.value\n    });\n    selectColor(e.target.value);\n  };\n\n  render() {\n    const { style } = this.props;\n    const { selectedColor } = this.state;\n    return (\n      <div className=\"color-picker\" style={style}>\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--default'\n          }}\n          name=\"tagColor\"\n          id=\"colorDefault\"\n          value=\"default\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'default'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--red'\n          }}\n          name=\"tagColor\"\n          id=\"colorRed\"\n          value=\"red\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'red'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--pink'\n          }}\n          name=\"tagColor\"\n          id=\"colorPink\"\n          value=\"pink\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'pink'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--grape'\n          }}\n          name=\"tagColor\"\n          id=\"colorGrape\"\n          value=\"grape\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'grape'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--violet'\n          }}\n          name=\"tagColor\"\n          id=\"colorViolet\"\n          value=\"violet\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'violet'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--indigo'\n          }}\n          name=\"tagColor\"\n          id=\"colorIndigo\"\n          value=\"indigo\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'indigo'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--blue'\n          }}\n          name=\"tagColor\"\n          id=\"colorBlue\"\n          value=\"blue\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'blue'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--cyan'\n          }}\n          name=\"tagColor\"\n          id=\"colorCyan\"\n          value=\"cyan\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'cyan'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--teal'\n          }}\n          name=\"tagColor\"\n          id=\"colorTeal\"\n          value=\"teal\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'teal'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--green'\n          }}\n          name=\"tagColor\"\n          id=\"colorGreen\"\n          value=\"green\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'green'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--yellow'\n          }}\n          name=\"tagColor\"\n          id=\"colorYellow\"\n          value=\"yellow\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'yellow'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--orange'\n          }}\n          name=\"tagColor\"\n          id=\"colorOrange\"\n          value=\"orange\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'orange'}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Tag } from '../Tag';\nimport { Input } from '../Input';\nimport { ColorPicker } from '../ColorPicker';\nimport * as keys from '../../constants/keys';\nimport './TagsInput.scss';\n\nexport default class TagsInput extends Component {\n  state = {\n    value: '',\n    isActive: false,\n    isTouchEnabled: false,\n    selectedTag: '',\n    focusedTag: '',\n    selectedIndex: null,\n    hasExactMatch: null,\n    filteredList: []\n  };\n\n  componentDidMount() {\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick, false);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.assignedTags.indexOf(undefined) !== -1) {\n      return false;\n    }\n    return true;\n  }\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  onFocus = () => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = () => {\n    this.setState({\n      selectedTag: '',\n      selectedIndex: null\n    });\n  };\n\n  resetForm = () => {\n    this.setState({\n      value: '',\n      selectedTag: '',\n      selectedIndex: null,\n      hasExactMatch: null,\n      focusedTag: '',\n      filteredList: []\n    });\n  };\n\n  matchTag = (tag, value) => {\n    const { text } = tag;\n    const regExp = new RegExp(value, 'i');\n    return regExp.test(text);\n  };\n\n  onChange = e => {\n    const { tagSuggestions } = this.props;\n    const { selectedTag, selectedIndex } = this.state;\n    const { value } = e.target;\n    const filteredList = tagSuggestions.filter(tag =>\n      this.matchTag(tag, value)\n    );\n    const hasExactMatch =\n      filteredList.findIndex(item => item.text === value) !== -1;\n    const newIndex = filteredList.indexOf(selectedTag);\n    const persistSelectedTag = newIndex !== -1;\n\n    this.setState({\n      selectedTag: persistSelectedTag\n        ? selectedTag\n        : filteredList.length > 0\n        ? filteredList[0].text\n        : '',\n      selectedIndex: persistSelectedTag ? newIndex : 0,\n      value,\n      filteredList: hasExactMatch\n        ? filteredList\n        : [...filteredList, { text: value, color: 'default' }],\n      hasExactMatch\n    });\n  };\n\n  onKeyDown = e => {\n    if (\n      e.key !== keys.TAB &&\n      e.key !== keys.ARROW_DOWN &&\n      e.key !== keys.ARROW_UP &&\n      e.key !== keys.ENTER &&\n      e.key !== keys.BACKSPACE\n    )\n      return;\n\n    const { filteredList, selectedIndex, selectedTag, value, focusedTag } = this.state;\n    const { addTag, removeTag, assignedTags } = this.props;\n    const nextIndex =\n      selectedIndex === filteredList.length - 1 || selectedIndex === null\n        ? 0\n        : selectedIndex + 1;\n    const prevIndex =\n      selectedIndex === 0 ? filteredList.length - 1 : selectedIndex - 1;\n\n    // eslint-disable-next-line default-case\n    switch (e.key) {\n      case keys.ARROW_DOWN:\n      // eslint-disable-next-line no-fallthrough\n      case keys.TAB: {\n        this.setState({\n          selectedTag: filteredList[nextIndex].text,\n          selectedIndex: nextIndex\n        });\n        break;\n      }\n      case keys.ARROW_UP: {\n        this.setState({\n          selectedTag: filteredList[prevIndex].text,\n          selectedIndex: prevIndex\n        });\n        break;\n      }\n      case keys.ENTER: {\n        if (selectedTag === '' && value === '') return;\n        this.resetForm();\n        addTag(selectedTag === '' ? value : selectedTag);\n        break;\n      }\n      case keys.BACKSPACE: {\n        if (value !== '') return;\n        if (focusedTag === '') {\n        this.setState({\n          focusedTag: assignedTags[assignedTags.length - 1].text\n        });\n      } else {\n        this.resetForm();\n        removeTag(focusedTag);\n      }\n      }\n    }\n    e.preventDefault();\n  };\n\n  handleOutsideClick = e => {\n    if (this.el.contains(e.target)) return;\n\n    this.setState({\n      isActive: false\n    });\n  };\n\n  handleTouch = () => {\n    this.setState({\n      isTouchEnabled: true\n    });\n    // remove touch handler to prevent unnecessary refires\n    document.removeEventListener('touchstart', this.handleTouch);\n    // remove outside click handler from click events\n    document.removeEventListener('click', this.handleOutsideClick);\n    // reattach outside click handler to touchstart events\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  handleTagDelete = tag => {\n    const { removeTag } = this.props;\n    this.resetForm();\n    removeTag(tag);\n  };\n\n  render() {\n    const {\n      isColorPickerActive,\n      assignedTags,\n      setTagColor,\n      currentTag,\n      removeTag\n    } = this.props;\n    const {\n      value,\n      isActive,\n      filteredList,\n      selectedTag,\n      hasExactMatch,\n      focusedTag\n    } = this.state;\n\n    const hasTags = assignedTags && assignedTags.length > 0;\n\n    const colorPickerStyle = {};\n    if (this.currentTagEl) {\n      const {\n        offsetLeft,\n        offsetWidth,\n        offsetTop,\n        offsetHeight\n      } = this.currentTagEl;\n      colorPickerStyle.left = offsetLeft + offsetWidth / 2 - 74; // 74 = 1/2 colorPicker width\n      colorPickerStyle.top = offsetTop + offsetHeight + 9; // 9 = colorPicker arrow height\n    }\n\n    return (\n      <div className={`tags__container ${isActive ? 'is-active' : ''} ${!hasTags ? 'no-tags' : ''}`} ref={el => (this.el = el)}>\n        {assignedTags.map(tag => (\n          <Tag\n            key={tag.text}\n            color={tag.color}\n            size=\"md\"\n            text={tag.text}\n            onDelete={() => this.handleTagDelete(tag.text)}\n            className={focusedTag === tag.text ? 'is-focused' : ''}\n            tagRef={\n              currentTag === tag.text ? el => (this.currentTagEl = el) : null\n            }\n          />\n        ))}\n        <div className=\"tags-input__wrapper\">\n          <Input\n            className=\"tags-input\"\n            onChange={this.onChange}\n            onBlur={this.onBlur}\n            value={value}\n            onFocus={this.onFocus}\n            type=\"text\"\n            autoComplete=\"off\"\n            onKeyDown={this.onKeyDown}\n            hideLabel\n          />\n          {isActive && (\n            <ul className=\"tags-input__list\">\n              {filteredList.map((item, i) => {\n                return (\n                  <li\n                    key={item.text}\n                    className={`tags-input__item ${\n                      selectedTag === item.text ? 'is-selected' : ''\n                    } ${\n                      !hasExactMatch && i === filteredList.length - 1\n                        ? 'tags-input__item--new'\n                        : ''\n                    }`}\n                  >\n                    {!hasExactMatch && i === filteredList.length - 1 ? (\n                      <>\n                        <h4 className=\"tags-input__item--heading\">New Tag</h4>\n                        <span className=\"tags-input__item--text\">\n                          {item.text}\n                        </span>\n                      </>\n                    ) : (\n                      <Tag text={item.text} color={item.color} size=\"sm\" />\n                    )}\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n        </div>\n        {isActive && isColorPickerActive && (\n          <ColorPicker\n            isActive={isColorPickerActive}\n            selectColor={setTagColor}\n            style={colorPickerStyle}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Calendar, dateUtils } from '../Calendar';\nimport { Button } from '../Button';\nimport { Input } from '../Input';\nimport './DatePicker.scss';\n\nexport default class DatePicker extends Component {\n  state = {\n    today: {\n      day: new Date().getDate(),\n      month: new Date().getMonth(),\n      year: new Date().getFullYear()\n    },\n    selectedDate: this.props.selectedDate,\n    currentMonth: this.props.currentMonth,\n    currentYear: this.props.currentYear,\n    dateString: dateUtils.toSimpleDateString(this.props.selectedDate) || ''\n  };\n\n  componentDidMount() {}\n\n  selectDate = date => {\n    if (typeof date === 'string') {\n      const newDate = dateUtils.toSimpleDateObj(date);\n      const { month, year } = newDate;\n      const { currentMonth, currentYear } = this.state;\n      this.setState({\n        selectedDate: newDate\n      });\n      if (month !== currentMonth || year !== currentYear) {\n        this.setCurrentMonth({ month, year });\n      }\n    } else {\n      this.setState({\n        selectedDate: date,\n        dateString: dateUtils.toSimpleDateString(date)\n      });\n    }\n  };\n\n  setCurrentMonth = ({ month, year }) => {\n    this.setState({\n      currentMonth: month,\n      currentYear: year\n    });\n  };\n\n  setCurrentYear = year => {\n    this.setState({\n      currentYear: year\n    });\n  };\n\n  updateDateString = e => {\n    const { value } = e.target;\n    this.setState({\n      dateString: value\n    });\n    if (dateUtils.isSDSFormat(value)) {\n      this.selectDate(value);\n    }\n  };\n\n  setDate = () => {\n    const { selectedDate: currentDueDate, selectDate, onClose } = this.props;\n    const { selectedDate } = this.state;\n    if (\n      !(currentDueDate === null && selectedDate === null) &&\n      !dateUtils.isSameDate(currentDueDate, selectedDate)\n    ) {\n      const { day, month, year } = selectedDate;\n      const date = new Date(year, month, day);\n      selectDate(date);\n    }\n    onClose();\n  };\n\n  clearDueDate = () => {\n    const { selectedDate, selectDate } = this.props;\n    this.selectDate(null);\n    if (selectedDate !== null) {\n      selectDate(null);\n    }\n  };\n\n  render() {\n    const { onClose, isActive, innerRef } = this.props;\n    const {\n      today,\n      selectedDate,\n      currentMonth,\n      currentYear,\n      dateString\n    } = this.state;\n    return (\n      <div className=\"date-picker\" ref={innerRef} style={{display: !isActive ? 'none' : 'block'}}>\n        <div className=\"date-picker__header\">\n          <div className=\"date-picker__due-date-wrapper\">\n            <Input\n              name=\"dueDate\"\n              type=\"text\"\n              label=\"Due Date\"\n              value={dateString}\n              onChange={this.updateDateString}\n              className=\"date-picker__input--due-date\"\n              labelClass=\"date-picker__label--due-date\"\n              placeholder=\"mm-dd-yy\"\n              maxLength={8}\n            />\n          </div>\n        </div>\n        <Calendar\n          classes={{\n            calendar: 'date-picker__calendar',\n            weekDay: 'date-picker__week-day'\n          }}\n          month={currentMonth}\n          year={currentYear}\n          selectedDate={selectedDate}\n          today={today}\n          onDayClick={this.selectDate}\n          onMonthClick={this.setCurrentMonth}\n          onYearClick={this.setCurrentYear}\n        />\n        <div className=\"date-picker__footer\">\n          <Button\n            size=\"sm\"\n            variant=\"text\"\n            color=\"neutral\"\n            className=\"date-picker__btn--clear\"\n            onClick={this.clearDueDate}\n          >\n            Clear\n          </Button>\n          <Button\n            size=\"sm\"\n            variant=\"contained\"\n            color=\"primary\"\n            className=\"date-picker__btn--set-due-date\"\n            onClick={this.setDate}\n          >\n            Done\n          </Button>\n          <Button\n            size=\"sm\"\n            variant=\"text\"\n            color=\"neutral\"\n            className=\"date-picker__btn--cancel\"\n            onClick={onClose}\n          >\n            Cancel\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport './TaskEditorPane.scss';\n\nconst TaskEditorPane = ({ onClose, onClick, children }) => (\n  <div className=\"task-editor-pane\" onClick={onClick}>\n    <Button\n      type=\"button\"\n      className=\"task-editor-pane__btn--close\"\n      onClick={onClose}\n      iconOnly\n    >\n      <Icon name=\"x\" />\n  </Button>\n  { children }\n  </div>\n);\n\nexport default TaskEditorPane;","import React from 'react';\nimport './ProjectIcon.scss';\n\nconst ProjectIcon = ({className, color}) => (\n  <span className={`project-icon bg--${color} ${className}`} />\n);\n\nProjectIcon.defaultProps = {\n  className: '',\n  color: 'default'\n};\n\nexport default ProjectIcon;","/* eslint-disable no-nested-ternary */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { withFirebase } from '../Firebase';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { subtaskActions, subtaskSelectors } from '../../ducks/subtasks';\nimport { listSelectors } from '../../ducks/lists';\nimport { userSelectors } from '../../ducks/users';\nimport { commentActions, commentSelectors } from '../../ducks/comments';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { Modal } from '../Modal';\nimport { Toolbar } from '../Toolbar';\nimport { Avatar } from '../Avatar';\nimport TaskEditorAssignMember from './TaskEditorAssignMember';\nimport TaskEditorSection from './TaskEditorSection';\nimport { MemberSearch } from '../MemberSearch';\nimport TaskEditorMoreActions from './TaskEditorMoreActions';\nimport * as keys from '../../constants/keys';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { Subtasks } from '../Subtasks';\nimport TaskEditorComment from './TaskEditorComment';\nimport { TagsInput } from '../TagsInput';\nimport './TaskEditor.scss';\nimport { projectSelectors } from '../../ducks/projects';\nimport { DatePicker } from '../DatePicker';\nimport { dateUtils } from '../Calendar';\nimport TaskEditorPane from './TaskEditorPane';\nimport { ProjectIcon } from '../ProjectIcon';\n\nconst TaskEditorWrapper = ({view, handleTaskEditorClose, handleClick, children}) => {\n  return view === 'board' ? (\n  <Modal\n    onModalClose={handleTaskEditorClose}\n    classes={{ content: 'task-editor', button: 'task-editor__btn--close' }}\n    onModalClick={handleClick}\n    size=\"lg\"\n    id=\"taskEditor\">\n    {children}\n    </Modal> )\n  : (<TaskEditorPane onClose={handleTaskEditorClose} onClick={handleClick}>{children}</TaskEditorPane>)\n  };\n\n  /*\n  TODO: Break up logic in child components\n  */\n\nclass TaskEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching:\n        this.props.commentIds && this.props.commentIds.length > 0,\n      name: this.props.name,\n      notes: this.props.notes,\n      newSubtask: '',\n      newComment: '',\n      currentFocus: null,\n      isColorPickerActive: false,\n      currentTag: null,\n      isDatePickerActive: false,\n      prevProps: {\n        name: this.props.name,\n        notes: this.props.notes,\n      }\n    };\n    this.membersListButton = React.createRef();\n  }\n\n  componentDidMount() {\n    const {\n      taskId,\n      commentIds,\n      firebase,\n      fetchTaskSubtasks,\n      fetchTaskComments,\n      addComment,\n      deleteComment,\n      updateComment\n    } = this.props;\n\n    console.log(taskId);\n      fetchTaskComments(taskId).then(() => {\n        this.setState({\n          isFetching: false\n        });\n      });\n\n    this.commentObserver = firebase.db\n      .collection('comments')\n      .where('taskId', '==', taskId)\n      .onSnapshot(snapshot => {\n        snapshot.docChanges().forEach(change => {\n          const commentId = change.doc.id;\n          const commentData = change.doc.data();\n          if (change.type === 'added') {\n            addComment({ commentId, commentData });\n          }\n          if (change.type === 'modified') {\n            updateComment({ commentId, commentData });\n          }\n          if (change.type === 'removed') {\n            deleteComment(commentId);\n          }\n        });\n      });\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.name !== state.prevProps.name) {\n      return {\n        name: props.name,\n        prevProps: {\n          ...state.prevProps,\n          name: props.name\n        }\n      };\n    };\n    if (props.notes !== state.prevProps.notes) {\n      return {\n        notes: props.notes,\n        prevProps: {\n          ...state.prevProps,\n          notes: props.notes\n        }\n      };\n    };\n    return null;\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  deleteTask = () => {\n    const { taskId, listId, assignedTo, folders, firebase, handleTaskEditorClose } = this.props;\n    firebase.deleteTask({ taskId, listId, assignedTo, folders });\n    handleTaskEditorClose();\n  };\n\n  onBlur = e => {\n    const { [taskKey]: currentValue, taskId, firebase } = this.props;\n    const taskKey = e.target.name;\n    const { [taskKey]: updatedValue } = this.state;\n\n    // When field loses focus, update task if change is detected\n\n    if (updatedValue !== currentValue) {\n      firebase.updateTask(taskId, {\n        [taskKey]: updatedValue\n      });\n      console.log('updated task!');\n    }\n\n    this.setState({\n      currentFocus: null\n    });\n  };\n\n  addComment = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { userId, firebase, taskId, projectId } = this.props;\n    const { newComment: content } = this.state;\n    firebase.addComment({ userId, content, taskId, projectId });\n    this.resetForm('newComment');\n    e.preventDefault();\n  };\n\n  resetForm = key => {\n    this.setState({\n      [key]: ''\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      currentFocus: e.target.name\n    });\n  };\n\n  handleClick = e => {\n    const { currentFocus } = this.state;\n    if (\n      (currentFocus === 'newComment' &&\n        !this.commentFormEl.contains(e.target)) ||\n      (currentFocus === 'newSubtask' &&\n        !this.newSubtaskFormEl.contains(e.target))\n    ) {\n      this.setState({\n        currentFocus: null\n      });\n    }\n  };\n\n  handleMoreActions = e => {\n    if (!e.target.matches('a')) return;\n    const { action } = e.target.dataset;\n    switch (action) {\n      case 'delete':\n        this.deleteTask();\n        break;\n    }\n    e.preventDefault(); // prevents page reload\n  };\n\n  handleCommentLike = commentId => {\n    const { firebase, userId, commentsById } = this.props;\n    const { likes } = commentsById[commentId];\n\n    if (likes.indexOf(userId) === -1) {\n      firebase.updateComment(commentId, {\n        likes: firebase.addToArray(userId)\n      });\n    } else {\n      firebase.updateComment(commentId, {\n        likes: firebase.removeFromArray(userId)\n      });\n    }\n  };\n\n  assignMember = userId => {\n    const { taskId, projectId, assignedTo, firebase } = this.props;\n\n    if (assignedTo.includes(userId)) {\n      if (!projectId) return;\n      const folderId = this.props.folders[userId];\n      firebase.removeAssignee({ taskId, userId, folderId });\n    } else {\n      firebase.addAssignee({ taskId, projectId, userId });\n    }\n  };\n\n  toggleColorPicker = value => {\n    this.setState({\n      isColorPickerActive: value\n    });\n  };\n\n  addTag = text => {\n    console.log(text);\n    const {\n      firebase,\n      currentUser,\n      projectTags,\n      taskId,\n      projectId,\n      addTag\n    } = this.props;\n    const { userId, tags: userTags } = currentUser;\n    const isProjectTag = projectTags && text in projectTags;\n    const isUserTag = userTags && text in userTags;\n    const tagData = isProjectTag\n      ? projectTags[text]\n      : isUserTag\n      ? userTags[text]\n      : { projectId, text };\n\n    firebase\n      .addTag({\n        userId,\n        taskId,\n        projectId,\n        ...tagData\n      })\n      .then(() => {\n        if (!isUserTag && !isProjectTag) {\n          this.setState({\n            currentTag: text\n          });\n          this.toggleColorPicker(true);\n        }\n      });\n  };\n\n  setTagColor = color => {\n    const { userId, projectId, firebase } = this.props;\n    const { currentTag: tag } = this.state;\n    firebase.setTagColor({ userId, projectId, tag, color });\n  };\n\n  removeTag = tag => {\n    const { taskId, firebase } = this.props;\n    firebase.removeTag({ taskId, tag });\n    this.toggleColorPicker(false);\n  };\n\n  setDueDate = date => {\n    const { firebase, taskId } = this.props;\n\n    firebase.updateTask(taskId, {\n      dueDate: date\n    });\n  };\n\n  toggleDatePicker = () => {\n    this.setState(prevState => ({\n      isDatePickerActive: !prevState.isDatePickerActive\n    }));\n  };\n\n  addSubtask = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { userId, firebase, taskId, projectId } = this.props;\n    console.log({ userId, projectId });\n    const { newSubtask: name } = this.state;\n    firebase.addSubtask({ userId, name, taskId, projectId });\n    this.resetForm('newSubtask');\n    e.preventDefault();\n  };\n\n  componentWillUnmount() {\n    this.commentObserver();\n  }\n\n  render() {\n    const {\n      handleTaskEditorClose,\n      taskId,\n      commentIds,\n      assignedTo,\n      commentsArray,\n      usersArray,\n      membersArray,\n      currentUser,\n      taskTags,\n      mergedTags,\n      dueDate,\n      subtaskIds,\n      projectId,\n      completedSubtasks,\n      view,\n      projectName,\n      listName,\n      projectColor\n    } = this.props;\n    const {\n      name,\n      notes,\n      newComment,\n      currentFocus,\n      newSubtask,\n      subtasks,\n      isFetching,\n      isColorPickerActive,\n      isDatePickerActive,\n      currentTag\n    } = this.state;\n    const hasSubtasks = subtaskIds && subtaskIds.length > 0;\n    const hasComments = commentIds && commentIds.length > 0;\n    const isAssigned = !!assignedTo && assignedTo.length > 0;\n    const isNewCommentInvalid = newComment === '';\n    const isNewSubtaskInvalid = newSubtask === '';\n    const commentFormIsFocused = currentFocus === 'newComment';\n    const newSubtaskFormIsFocused = currentFocus === 'newSubtask';\n    const taskDueDate = dueDate\n      ? dateUtils.getSimpleDate(dueDate.toDate())\n      : dateUtils.getSimpleDate(new Date());\n    const dueDateStr = dueDate ? dateUtils.toDateString(dueDate.toDate(), {\n      useRelative: true,\n      format: { month: 'short', day: 'numeric' }\n      }) : null;\n      const isDueToday = dueDateStr === 'Today';\n      const isDueTmrw = dueDateStr === 'Tomorrow';\n      const isPastDue = dueDate && dateUtils.isPriorDate(dueDate.toDate());\n\n    return (\n      <TaskEditorWrapper\n        handleTaskEditorClose={handleTaskEditorClose}\n        handleClick={this.handleClick}\n        view={view}\n      >\n        <Toolbar className={`task-editor__toolbar`}>\n        {projectId &&\n          <TaskEditorAssignMember buttonRef={this.membersListButton}>\n            <MemberSearch\n              users={usersArray}\n              assignedMembers={assignedTo}\n              onMemberClick={this.assignMember}\n            />\n          </TaskEditorAssignMember>\n        }\n          <TaskEditorMoreActions onMenuClick={this.handleMoreActions} />\n        </Toolbar>\n        <form\n          name=\"editTaskForm\"\n          onFocus={this.onFocus}\n          className=\"task-editor__edit-task-form\"\n        >\n          <Textarea\n            className=\"task-editor__textarea--title\"\n            name=\"name\"\n            value={name}\n            onChange={this.onChange}\n            required\n            onBlur={this.onBlur}\n            onFocus={this.onFocus}\n          />\n          {projectId &&\n          <TaskEditorSection>\n            <div className=\"task-editor__project-name\">\n              <ProjectIcon color={projectColor} className=\"task-editor__project-icon\" />\n              {projectName}\n            </div>\n            <div className=\"task-editor__list-name\">\n            <Icon name=\"chevron-right\" />{listName}</div>\n          </TaskEditorSection>\n          }\n          <TaskEditorSection>\n            <Button\n              onClick={this.toggleDatePicker}\n              type=\"button\"\n              className={`task-editor__btn--due-date ${\n                isDatePickerActive ? 'is-active' : ''\n              }`}\n            >\n              <span className=\"task-editor__due-date-icon\">\n                <Icon name=\"calendar\" />\n              </span>\n              <span className=\"task-editor__due-date-wrapper\">\n                {!dueDate ? (\n                  <span className=\"task-editor__no-due-date\">Set due date</span>\n                ) : (\n                  <>\n                    <span className=\"task-editor__section-title--sm\">\n                      Due Date\n                    </span>\n                    <span className={`task-editor__due-date ${\n                    isDueToday\n                      ? 'is-due-today'\n                      : isDueTmrw\n                      ? 'is-due-tmrw'\n                      : isPastDue\n                      ? 'is-past-due'\n                      : ''\n                  }`}>\n                    {dueDateStr}\n                      </span>\n                  </>\n                )}\n              </span>\n            </Button>\n              <DatePicker\n                innerRef={el => this.datePickerEl = el}\n                onClose={this.toggleDatePicker}\n                selectedDate={dueDate ? taskDueDate : null}\n                currentMonth={taskDueDate.month}\n                currentYear={taskDueDate.year}\n                selectDate={this.setDueDate}\n                isActive={isDatePickerActive}\n              />\n          </TaskEditorSection>\n          <TaskEditorSection>\n            <div className=\"task-editor__section-icon\">\n              <Icon name=\"user\" />\n            </div>\n            {isAssigned && (\n              <div className=\"task-editor__members\">\n                {membersArray.map(member => {\n                  const { name, photoURL, userId } = member;\n                  return (\n                    <Avatar\n                      classes={{\n                        avatar: 'task-editor__avatar',\n                        placeholder: 'task-editor__avatar-placeholder'\n                      }}\n                      fullName={name}\n                      size=\"sm\"\n                      variant=\"circle\"\n                      imgSrc={photoURL}\n                      key={userId}\n                    />\n                  );\n                })}\n              </div>\n            )}\n            {projectId &&\n            <Button\n              type=\"button\"\n              className=\"task-editor__btn--add-member\"\n              onClick={() => this.membersListButton.current.click()}\n            >\n              <Icon name=\"plus\" />\n            </Button>\n            }\n          </TaskEditorSection>\n          <TaskEditorSection>\n            <div className=\"task-editor__section-icon\">\n              <Icon name=\"tag\" />\n            </div>\n            <TagsInput\n              addTag={this.addTag}\n              tagSuggestions={mergedTags}\n              assignedTags={taskTags}\n              isColorPickerActive={isColorPickerActive}\n              setTagColor={this.setTagColor}\n              removeTag={this.removeTag}\n              currentTag={currentTag}\n            />\n          </TaskEditorSection>\n          <TaskEditorSection>\n            <div className=\"task-editor__section-icon\">\n              <Icon name=\"edit-3\" />\n            </div>\n            <Textarea\n              className=\"task-editor__textarea task-editor__textarea--description\"\n              name=\"notes\"\n              value={notes}\n              onChange={this.onChange}\n              placeholder=\"Add a description\"\n              onBlur={this.onBlur}\n              onFocus={this.onFocus}\n            />\n          </TaskEditorSection>\n        </form>\n        <TaskEditorSection>\n          <div className=\"task-editor__section-header\">\n            <div className=\"task-editor__section-icon\">\n              <Icon name=\"check-square\" />\n            </div>\n            <h3 className=\"task-editor__section-title\">\n            {hasSubtasks && (\n              <span className=\"task-editor__section-detail\">{completedSubtasks.length}/{subtaskIds.length}</span>\n            )}\n            Subtasks</h3>\n            <hr className=\"task-editor__hr\" />\n          </div>\n          {hasSubtasks && (\n            <Subtasks taskId={taskId} subtaskIds={subtaskIds} projectId={projectId} />\n          )}\n          <div className=\"task-editor__section-icon\">\n            {newSubtaskFormIsFocused ? (\n              <div className=\"task-editor__checkbox\" />\n            ) : (\n              <Icon name=\"plus-circle\" />\n            )}\n          </div>\n          <form\n            name=\"newSubtaskForm\"\n            className={`task-editor__new-subtask-form ${\n              currentFocus === 'newSubtask' ? 'is-focused' : ''\n            }`}\n            ref={el => (this.newSubtaskFormEl = el)}\n            onSubmit={this.addSubtask}\n          >\n            <Textarea\n              className=\"task-editor__textarea task-editor__textarea--new-subtask\"\n              name=\"newSubtask\"\n              value={newSubtask}\n              onChange={this.onChange}\n              placeholder=\"Add a subtask\"\n              onFocus={this.onFocus}\n              onKeyDown={this.addSubtask}\n            />\n            {currentFocus === 'newSubtask' && (\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isNewSubtaskInvalid}\n                onClick={this.addSubtask}\n                className=\"task-editor__btn--add-subtask\"\n              >\n                Add subtask\n              </Button>\n            )}\n          </form>\n        </TaskEditorSection>\n        <TaskEditorSection>\n          <div className=\"task-editor__section-header\">\n            <div className=\"task-editor__section-icon\">\n              <Icon name=\"message-circle\" />\n            </div>\n            <h3 className=\"task-editor__section-title\">\n            {hasComments &&\n            <span className=\"task-editor__section-detail\">\n            {commentIds.length}\n            </span>\n            }\n              {hasComments && commentIds.length === 1 ? 'Comment' : 'Comments'}\n              </h3>\n            <hr className=\"task-editor__hr\" />\n          </div>\n\n          {!isFetching && hasComments && (\n            <div className=\"task-editor__comments\">\n              {commentsArray.map(comment => {\n                const { commentId } = comment;\n                return (\n                  <TaskEditorComment\n                    key={commentId}\n                    comment={comment}\n                    handleLike={this.handleCommentLike}\n                  />\n                );\n              })}\n            </div>\n          )}\n          <Avatar\n            classes={{\n              avatar: 'task-editor__avatar',\n              placeholder: 'task-editor__avatar-placeholder'\n            }}\n            fullName={currentUser.name}\n            size=\"sm\"\n            variant=\"circle\"\n            imgSrc={currentUser.photoURL}\n          />\n          <form\n            name=\"commentForm\"\n            className={`task-editor__comment-form ${\n              commentFormIsFocused ? 'is-focused' : ''\n            }`}\n            ref={el => (this.commentFormEl = el)}\n            onSubmit={this.addComment}\n          >\n            <Textarea\n              className=\"task-editor__textarea task-editor__textarea--comment\"\n              name=\"newComment\"\n              value={newComment}\n              onChange={this.onChange}\n              placeholder=\"Write a comment...\"\n              onFocus={this.onFocus}\n              onKeyDown={this.addComment}\n            />\n            {commentFormIsFocused && (\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isNewCommentInvalid}\n                onClick={this.addComment}\n                name=\"newCommentSubmit\"\n                className=\"task-editor__btn--submit-comment\"\n              >\n                Send\n              </Button>\n            )}\n          </form>\n        </TaskEditorSection>\n      </TaskEditorWrapper>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentUser: userSelectors.getCurrentUserData(state),\n    commentsArray: commentSelectors.getCommentsArray(\n      state,\n      ownProps.commentIds\n    ),\n    commentsById: commentSelectors.getCommentsById(state),\n    usersArray: userSelectors.getUsersArray(state),\n    membersArray: userSelectors.getMembersArray(state, ownProps.assignedTo),\n    taskTags: taskSelectors.getTaskTags(state, ownProps),\n    mergedTags: currentSelectors.getMergedTags(state),\n    projectTags: projectSelectors.getProjectTags(state, ownProps.projectId),\n    completedSubtasks: subtaskSelectors.getCompletedSubtasks(\n      state,\n      ownProps.subtaskIds\n    ),\n    projectColor: projectSelectors.getProjectColor(state, ownProps.projectId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchTaskSubtasks: taskId =>\n      dispatch(subtaskActions.fetchTaskSubtasks(taskId)),\n    fetchTaskComments: taskId =>\n      dispatch(commentActions.fetchTaskComments(taskId)),\n    syncTaskComments: taskId =>\n      dispatch(commentActions.syncTaskComments(taskId)),\n    addComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.addComment({ commentId, commentData })),\n    deleteComment: commentId =>\n      dispatch(commentActions.deleteComment(commentId)),\n    updateComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.updateComment({ commentId, commentData })),\n    addTag: (taskId, tag) => dispatch(taskActions.addTag(taskId, tag))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TaskEditor)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { withFirebase } from '../Firebase';\nimport { projectActions, projectSelectors } from '../../ducks/projects';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { subtaskActions, subtaskSelectors } from '../../ducks/subtasks';\nimport * as ROUTES from '../../constants/routes';\nimport Board from './Board';\nimport { Input } from '../Input';\nimport { List } from '../List';\nimport { TaskEditor } from '../TaskEditor';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { utils } from '../../utils';\nimport './Board.scss';\n\nclass BoardContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: true,\n      isDragging: false,\n      isTaskEditorOpen: false,\n      projectName: this.props.projectName\n    };\n  }\n\n  componentDidMount() {\n    const {\n      current,\n      fetchListsById,\n      fetchProjectTasks,\n      fetchProjectSubtasks,\n      firebase,\n      updateProject,\n      updateList,\n      addTask,\n      deleteTask,\n      updateTask,\n      updateProjectTags,\n      projectId,\n      project,\n      updateListIds,\n      addSubtask,\n      updateSubtask,\n      deleteSubtask,\n      selectProject\n    } = this.props;\n\n    if (current.projectId !== projectId) {\n      selectProject(projectId);\n    }\n\n    fetchListsById(projectId);\n    fetchProjectTasks(projectId);\n    fetchProjectSubtasks(projectId).then(() => {\n      this.setState({\n        isFetching: false\n      });\n    });\n    this.projectObserver = firebase.getProjectDoc(projectId).onSnapshot(snapshot => {\n      const updatedProject = snapshot.data();\n      if (!utils.isEqual(updatedProject.listIds, project.listIds)) {\n        updateListIds(projectId, updatedProject.listIds);\n      } else if (!utils.isEqual(updatedProject.tags, project.tags)) {\n        updateProjectTags(projectId, updatedProject.tags);\n      } else {\n        updateProject(projectId, updatedProject);\n      }\n    });\n    this.listObserver = firebase.db\n      .collection('lists')\n      .where('projectId', '==', projectId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const listId = change.doc.id;\n          const listData = change.doc.data();\n          updateList(listId, listData);\n        });\n      });\n    this.subtaskObserver = firebase.db\n      .collection('subtasks')\n      .where('projectId', '==', projectId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const subtaskId = change.doc.id;\n          const subtaskData = change.doc.data();\n          if (change.type === 'added') {\n            addSubtask({ subtaskId, subtaskData });\n          }\n          if (change.type === 'modified') {\n            updateSubtask({ subtaskId, subtaskData });\n          }\n          if (change.type === 'removed') {\n            deleteSubtask(subtaskId);\n          }\n        });\n      });\n    this.taskObserver = firebase.db\n      .collection('tasks')\n      .where('projectId', '==', projectId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const taskId = change.doc.id;\n          const taskData = change.doc.data();\n          if (change.type === 'added') {\n            addTask({ taskId, taskData });\n          } else if (change.type === 'removed') {\n            deleteTask(taskId);\n          } else {\n            updateTask({ taskId, taskData });\n          }\n        });\n      });\n    console.log('mounted');\n  }\n\n  componentWillUnmount() {\n    this.projectObserver();\n    this.listObserver();\n    this.taskObserver();\n    this.subtaskObserver();\n  }\n\n  onDragStart = () => {\n    this.setState({\n      isDragging: true\n    });\n  };\n\n  onDragEnd = ({ destination, draggableId, source, type }) => {\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    const { firebase } = this.props;\n    if (type === droppableTypes.TASK) {\n      const { listsById } = this.props;\n      const isMovedWithinList = source.droppableId === destination.droppableId;\n      const updatedTaskIds = [...listsById[destination.droppableId].taskIds];\n      if (isMovedWithinList) {\n        updatedTaskIds.splice(source.index, 1);\n        updatedTaskIds.splice(destination.index, 0, draggableId);\n        firebase.updateList(source.droppableId, {\n          taskIds: updatedTaskIds\n        });\n      } else {\n        updatedTaskIds.splice(destination.index, 0, draggableId);\n        firebase.moveTaskToList({\n          taskId: draggableId,\n          origListId: source.droppableId,\n          newListId: destination.droppableId,\n          updatedTaskIds\n        });\n      }\n    }\n\n    if (type === droppableTypes.LIST) {\n      const { projectsById, projectId, reorderLists } = this.props;\n      const updatedListIds = [...projectsById[projectId].listIds];\n      updatedListIds.splice(source.index, 1);\n      updatedListIds.splice(destination.index, 0, draggableId);\n      firebase.updateProject(projectId, {\n        listIds: updatedListIds\n      });\n      reorderLists(projectId, updatedListIds);\n    }\n\n    this.setState({\n      isDragging: false\n    });\n  };\n\n  toggleTaskEditor = () => {\n    this.setState(prevState => ({\n      isTaskEditorOpen: !prevState.isTaskEditorOpen\n    }));\n  };\n\n  handleTaskClick = taskId => {\n    const { selectTask } = this.props;\n    selectTask(taskId);\n    this.toggleTaskEditor();\n  };\n\n  onNameChange = e => {\n    this.setState({\n      projectName: e.target.value\n    });\n  };\n\n  onNameBlur = e => {\n    const { projectName, projectId, firebase } = this.props;\n    const { projectName: newProjectName } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newProjectName !== projectName) {\n      firebase.updateProjectName({ projectId, name: newProjectName });\n      console.log('updated project name!');\n    }\n  };\n\n  render() {\n    const { isFetching, isTaskEditorOpen, projectName } = this.state;\n    const { current, listsArray, tasksById, projectId, userId } = this.props;\n    if (isFetching) return null;\n    const { taskId } = current;\n\n    return (\n      <main className=\"board-container\">\n        <Input\n          className=\"board__input--title\"\n          name=\"projectName\"\n          type=\"text\"\n          value={projectName}\n          onChange={this.onNameChange}\n          required\n          hideLabel\n          onBlur={this.onNameBlur}\n        />\n        <DragDropContext\n          onDragEnd={this.onDragEnd}\n          onDragStart={this.onDragStart}\n        >\n          <Board projectId={projectId}>\n          {listsArray.map((list, listIndex) => {\n      const { listId, name: listName, taskIds } = list;\n      return (\n        <List\n          listId={listId}\n          key={listId}\n          listIndex={listIndex}\n          name={listName}\n          taskIds={taskIds}\n          isFetchingTasks={isFetching}\n          onTaskClick={this.handleTaskClick}\n          projectId={projectId}\n          view=\"board\"\n          isRestricted={false}\n        />\n      );\n    })}\n    </Board>\n        </DragDropContext>\n        {isTaskEditorOpen && (\n          <TaskEditor\n            {...tasksById[taskId]}\n            handleTaskEditorClose={this.toggleTaskEditor}\n            userId={userId}\n            view={'board'}\n          />\n        )}\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    projectsById: projectSelectors.getProjectsById(state),\n    current: currentSelectors.getCurrent(state),\n    listsById: listSelectors.getListsById(state),\n    listsArray: listSelectors.getListsArray(state),\n    tasksById: taskSelectors.getTasksById(state),\n    project: projectSelectors.getProject(state, ownProps.projectId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateProject: (projectId, projectData) =>\n      dispatch(projectActions.updateProject(projectId, projectData)),\n    selectProject: projectId => dispatch(currentActions.selectProject(projectId)),\n    selectTask: taskId => dispatch(currentActions.selectTask(taskId)),\n    fetchListsById: projectId => dispatch(listActions.fetchListsById(projectId)),\n    updateList: (listId, listData) => dispatch(listActions.updateList(listId, listData)),\n    fetchProjectTasks: projectId => dispatch(taskActions.fetchProjectTasks(projectId)),\n    fetchProjectSubtasks: projectId =>\n      dispatch(subtaskActions.fetchProjectSubtasks(projectId)),\n    reorderLists: (projectId, listIds) =>\n      dispatch(projectActions.reorderLists(projectId, listIds)),\n    updateListIds: (projectId, listIds) =>\n      dispatch(projectActions.updateListIds(projectId, listIds)),\n    updateProjectTags: (projectId, tags) =>\n      dispatch(projectActions.updateProjectTags(projectId, tags)),\n    addTask: ({ taskId, taskData }) =>\n      dispatch(taskActions.addTask({ taskId, taskData })),\n    updateTask: ({ taskId, taskData }) =>\n      dispatch(taskActions.updateTask({ taskId, taskData })),\n    deleteTask: taskId => dispatch(taskActions.deleteTask(taskId)),\n    addSubtask: ({ subtaskId, subtaskData }) =>\n      dispatch(subtaskActions.addSubtask({ subtaskId, subtaskData })),\n    deleteSubtask: subtaskId =>\n      dispatch(subtaskActions.deleteSubtask(subtaskId)),\n    updateSubtask: ({ subtaskId, subtaskData }) =>\n      dispatch(subtaskActions.updateSubtask({ subtaskId, subtaskData }))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardContainer)\n);\n","import React from 'react';\nimport './Main.scss';\n\nconst Main = ({ classes, children, title }) => (\n  <main className={`main ${classes.main || ''}`}>\n    <h1 className={`main__title ${classes.title || ''}`}>{title}</h1>\n    {children}\n  </main>\n);\n\nMain.defaultProps = {\n  classes: {\n    main: '',\n    title: ''\n  }\n};\n\nexport default Main;\n","import React from 'react';\nimport { Icon } from '../Icon';\n\nconst DashboardPanel = ({ name, icon, children, size }) => (\n  <section className={`dashboard__section dashboard__section--${size}`}>\n    <h2 className=\"dashboard__section-header\">\n      <Icon name={icon} className=\"dashboard__section-icon\" />\n      {name}\n    </h2>\n    {children}\n  </section>\n);\n\nDashboardPanel.defaultProps = {\n  size: 'lg'\n};\n\nexport default DashboardPanel;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withFirebase } from '../Firebase';\nimport DashboardPanel from './DashboardPanel';\nimport { Task } from '../Task';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { currentUserActions, currentUserSelectors } from '../../ducks/currentUser';\n\nclass TasksDueSoon extends Component {\n  state = {\n    isFetching: true,\n    isTaskEditorOpen: false\n  };\n\n  componentDidMount() {\n    const {\n      userId,\n      fetchTasksDueWithinDays,\n      addTaskDueSoon,\n      deleteTaskDueSoon,\n      updateTaskDueSoon,\n      firebase\n    } = this.props;\n    fetchTasksDueWithinDays(userId, 7).then(() => {\n      this.setState({\n        isFetching: false\n      });\n    });\n\n    const startingDate = new Date();\n    const timeStart = startingDate.setHours(0, 0, 0, 0);\n    const endingDate = new Date(startingDate);\n    const timeEnd = endingDate.setDate(endingDate.getDate() + 7);\n\n    this.taskObserver = firebase.db\n      .collection('tasks')\n      .where('assignedTo', 'array-contains', userId)\n      .where('dueDate', '<=', timeEnd)\n      .orderBy('dueDate', 'asc')\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const taskId = change.doc.id;\n          const taskData = change.doc.data();\n          if (change.type === 'added') {\n            console.log('added task');\n            addTaskDueSoon({ taskId, taskData });\n          } else if (change.type === 'removed') {\n            deleteTaskDueSoon(taskId);\n          } else {\n            updateTaskDueSoon({ taskId, taskData });\n          }\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.taskObserver();\n  }\n\n  render() {\n    const { isFetching } = this.state;\n    const { tasksDueSoon, onTaskClick } = this.props;\n    if (isFetching) return null;\n    return (\n      <DashboardPanel icon=\"check-square\" size=\"md\" name=\"Tasks Due Soon\">\n        {tasksDueSoon.map((task, i) => (\n          <Task\n            index={i}\n            key={task.taskId}\n            onTaskClick={onTaskClick}\n            {...task}\n          />\n        ))}\n      </DashboardPanel>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    userId: currentSelectors.getCurrentUserId(state),\n    tasksDueSoon: currentUserSelectors.getTasksDueSoonArr(state),\n    taskId: currentSelectors.getCurrentTaskId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectUser: userId => dispatch(currentActions.selectUser(userId)),\n    selectTask: taskId => dispatch(currentActions.selectTask(taskId)),\n    fetchTasksDueWithinDays: (userId, days) =>\n      dispatch(currentUserActions.fetchTasksDueWithinDays(userId, days)),\n    addTaskDueSoon: ({ taskId, taskData }) =>\n      dispatch(currentUserActions.addTaskDueSoon({ taskId, taskData })),\n    updateTaskDueSoon: ({ taskId, taskData }) =>\n      dispatch(currentUserActions.updateTaskDueSoon({ taskId, taskData })),\n    deleteTaskDueSoon: taskId =>\n      dispatch(currentUserActions.deleteTaskDueSoon(taskId))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TasksDueSoon)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport {\n  currentUserSelectors,\n  currentUserActions\n} from '../../ducks/currentUser';\nimport { ProjectGridContainer } from '../ProjectGrid';\nimport TasksDueSoon from './TasksDueSoon';\nimport DashboardPanel from './DashboardPanel';\nimport { TaskEditor } from '../TaskEditor';\nimport './Dashboard.scss';\n\nclass Dashboard extends Component {\n  state = {\n    isTaskEditorOpen: false\n  };\n\n  toggleTaskEditor = () => {\n    this.setState(prevState => ({\n      isTaskEditorOpen: !prevState.isTaskEditorOpen\n    }));\n  };\n\n  handleTaskClick = taskId => {\n    const { selectTask } = this.props;\n    selectTask(taskId);\n    this.toggleTaskEditor();\n  };\n\n  render() {\n    const {\n      tasksDueSoon,\n      toggleProjectComposer,\n      userId,\n      currentTaskId\n    } = this.props;\n    const { isTaskEditorOpen } = this.state;\n    return (\n      <main className=\"dashboard\">\n        <h1 className=\"dashboard__header\">Home</h1>\n        <TasksDueSoon onTaskClick={this.handleTaskClick} />\n        <DashboardPanel name=\"Notifications\" icon=\"bell\" size=\"sm\" />\n        <DashboardPanel name=\"Projects\" icon=\"grid\">\n          <ProjectGridContainer openProjectComposer={toggleProjectComposer} />\n        </DashboardPanel>\n        {isTaskEditorOpen && (\n          <TaskEditor\n            {...tasksDueSoon[currentTaskId]}\n            handleTaskEditorClose={this.toggleTaskEditor}\n            userId={userId}\n            view=\"board\"\n          />\n        )}\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentTaskId: currentSelectors.getCurrentTaskId(state),\n    tasksDueSoon: currentUserSelectors.getTasksDueSoonById(state),\n    store: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectTask: taskId => dispatch(currentActions.selectTask(taskId))\n  };\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Dashboard)\n);\n","import React from 'react';\n\nconst ExpansionPanelHeader = ({ children, className, onClick }) => {\n  return (\n    <div>\n      <div\n        className={`expansion-panel__header ${className}`}\n        role=\"button\"\n        onClick={onClick}\n        tabIndex={0}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n\nExpansionPanelHeader.defaultProps = {\n  className: ''\n};\n\nexport default ExpansionPanelHeader;\n","import React from 'react';\n\nconst ExpansionPanelContent = ({ className, children }) => {\n  return <div className={className}>{children}</div>;\n};\n\nExpansionPanelContent.defaultProps = {\n  className: ''\n};\n\nexport default ExpansionPanelContent;\n","import React, { Component } from 'react';\nimport ExpansionPanelHeader from './ExpansionPanelHeader';\nimport ExpansionPanelContent from './ExpansionPanelContent';\n\nexport default class ExpansionPanel extends Component {\n  static defaultProps = {\n    classes: {\n      panel: '',\n      header: '',\n      content: ''\n    },\n    isExpanded: null,\n    onChange: null,\n    id: null\n  };\n\n  state = {\n    isExpanded: false\n  };\n\n  toggleContent = () => {\n    const { onChange, id } = this.props;\n\n    if (!onChange) {\n      this.setState(prevProps => ({\n        isExpanded: !prevProps.isExpanded\n      }));\n    } else {\n      onChange(id);\n    }\n  };\n\n  render() {\n    const { classes, header, content, isExpanded: propsIsExpanded } = this.props;\n    const isExpanded = propsIsExpanded !== null ? propsIsExpanded : this.state.isExpanded;\n\n    return (\n      <div\n        className={`accordion-panel ${classes.panel || ''}`}\n        aria-expanded={isExpanded}\n      >\n        <ExpansionPanelHeader onClick={this.toggleContent} className={classes.header || ''}>\n          {header}\n        </ExpansionPanelHeader>\n        {isExpanded && (\n          <ExpansionPanelContent className={classes.content || ''}>\n            {content}\n          </ExpansionPanelContent>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { TaskComposer } from '../TaskComposer';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\nimport { Input } from '../Input';\nimport { Tasks } from '../Tasks';\nimport { ExpansionPanel } from '../ExpansionPanel';\nimport './Folder.scss';\n\nclass Folder extends Component {\n  state = {\n    name: this.props.name\n  };\n\n  render() {\n    const { tasks, onTaskClick, folderId, index, isRestricted } = this.props;\n    const { name } = this.state;\n    return (\n      <Draggable\n        draggableId={folderId}\n        index={index}\n        isDragDisabled={isRestricted}\n      >\n        {provided => (\n          <>\n            <section\n              className=\"folder\"\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <header className=\"folder__header\">\n                <Input\n                  className=\"folder__input--title\"\n                  name=\"name\"\n                  type=\"text\"\n                  value={name}\n                  onChange={this.onChange}\n                  required={!isRestricted}\n                  hideLabel\n                  isReadOnly={isRestricted}\n                  onBlur={this.onBlur}\n                />\n                <PopoverWrapper\n                  classes={{\n                    wrapper: 'folder__popover-wrapper',\n                    popover: 'folder__popover'\n                  }}\n                  alignInner=\"right\"\n                  buttonProps={{\n                    size: 'medium',\n                    iconOnly: true,\n                    className: 'folder__btn--more-actions',\n                    children: <Icon name=\"more-vertical\" />\n                  }}\n                >\n                  <Menu>\n                    <MenuItem />\n                  </Menu>\n                </PopoverWrapper>\n              </header>\n              <div className=\"folder__content\">\n                <Tasks\n                  tasks={tasks}\n                  listId={null}\n                  folderId={folderId}\n                  onTaskClick={onTaskClick}\n                  view=\"list\"\n                />\n              </div>\n              {provided.placeholder}\n              <TaskComposer\n                listId={null}\n                listName={null}\n                projectId={null}\n                projectName={null}\n                folderId={folderId}\n              />\n            </section>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    tasks: taskSelectors.getFolderTasks(state, ownProps.taskIds)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Folder);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport {\n  currentUserActions,\n  currentUserSelectors\n} from '../../ducks/currentUser';\nimport { taskSelectors, taskActions } from '../../ducks/tasks';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { Folder } from '../Folder';\nimport { Main } from '../Main';\nimport { TaskEditor } from '../TaskEditor';\nimport './UserTasks.scss';\n\nclass UserTasks extends Component {\n  state = {\n    isFetching: true,\n    isTaskEditorOpen: false\n  };\n\n  componentDidMount() {\n    const {\n      userId,\n      fetchFolders,\n      fetchUserTasks,\n      addTask,\n      updateTask,\n      deleteTask,\n      addFolder,\n      updateFolder,\n      deleteFolder,\n      firebase\n    } = this.props;\n    fetchFolders(userId);\n    fetchUserTasks(userId).then(() => {\n      this.setState({\n        isFetching: false\n      });\n    });\n\n    this.taskObserver = firebase.db\n      .collection('tasks')\n      .where('assignedTo', 'array-contains', userId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const taskId = change.doc.id;\n          const taskData = change.doc.data();\n          if (change.type === 'added') {\n            console.log('added task');\n            addTask({ taskId, taskData });\n          } else if (change.type === 'removed') {\n            deleteTask(taskId);\n          } else {\n            updateTask({ taskId, taskData });\n          }\n        });\n      });\n\n    this.folderObserver = firebase\n      .getDocRef(`users/${userId}`)\n      .collection('folders')\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const folderId = change.doc.id;\n          const folderData = change.doc.data();\n          if (change.type === 'added') {\n            addFolder({ folderId, folderData });\n          } else if (change.type === 'removed') {\n            deleteFolder(folderId);\n          } else {\n            updateFolder({ folderId, folderData });\n          }\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.taskObserver();\n    this.folderObserver();\n  }\n\n  toggleTaskEditor = () => {\n    this.setState(prevState => ({\n      isTaskEditorOpen: !prevState.isTaskEditorOpen\n    }));\n  };\n\n  handleTaskClick = taskId => {\n    const { selectTask } = this.props;\n    const { isTaskEditorOpen } = this.state;\n    selectTask(taskId);\n    if (!isTaskEditorOpen) {\n      this.toggleTaskEditor();\n    }\n  };\n\n  onDragEnd = ({ destination, draggableId, source, type }) => {\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    const { firebase, currentUserId } = this.props;\n    if (type === droppableTypes.TASK) {\n      const { foldersById } = this.props;\n      const { droppableId: origFolderId, index: origIndex } = source;\n      const { droppableId: newFolderId, index: newIndex } = destination;\n      const isMovedWithinFolder = origFolderId === newFolderId;\n      const updatedTaskIds = [...foldersById[newFolderId].taskIds];\n      if (isMovedWithinFolder) {\n        updatedTaskIds.splice(origIndex, 1);\n        updatedTaskIds.splice(newIndex, 0, draggableId);\n        firebase.updateDoc(`users/${currentUserId}/folders/${newFolderId}`, {\n          taskIds: updatedTaskIds\n        });\n      } else {\n        updatedTaskIds.splice(newIndex, 0, draggableId);\n        firebase.moveTaskToFolder({\n          userId: currentUserId,\n          taskId: draggableId,\n          origFolderId,\n          newFolderId,\n          updatedTaskIds\n        });\n      }\n    }\n\n    if (type === droppableTypes.FOLDER) {\n      const { folderIds, reorderFolders } = this.props;\n      const updatedFolderIds = [...folderIds];\n      updatedFolderIds.splice(source.index, 1);\n      updatedFolderIds.splice(destination.index, 0, draggableId);\n      firebase.updateDoc(`users/${currentUserId}`, {\n        folderIds: updatedFolderIds\n      });\n      reorderFolders(currentUserId, updatedFolderIds);\n    }\n  };\n\n  onDragStart = () => {\n    this.setState({\n      isDragging: true\n    });\n  };\n\n  render() {\n    const { filters, userId, taskId, tasksById, folders } = this.props;\n    const { isFetching, isTaskEditorOpen } = this.state;\n    if (isFetching) return null;\n    return (\n      <Main title=\"All Tasks\">\n        <div\n          className={`user-tasks__wrapper ${\n            isTaskEditorOpen ? 'show-task-editor' : ''\n          }`}\n        >\n          <DragDropContext\n            onDragEnd={this.onDragEnd}\n            onDragStart={this.onDragStart}\n          >\n            <Droppable droppableId={userId} type={droppableTypes.FOLDER}>\n              {provided => (\n                <div\n                  className=\"user-tasks\"\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                >\n                  {folders.map((folder, i) => (\n                    <Folder\n                      key={folder.folderId}\n                      userId={userId}\n                      folderId={folder.folderId}\n                      index={i}\n                      name={folder.name}\n                      taskIds={folder.taskIds}\n                      onTaskClick={this.handleTaskClick}\n                      isRestricted={folder.isDefault}\n                    />\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n          {isTaskEditorOpen && (\n            <TaskEditor\n              {...tasksById[taskId]}\n              handleTaskEditorClose={this.toggleTaskEditor}\n              userId={userId}\n              view=\"list\"\n              key={taskId}\n            />\n          )}\n        </div>\n      </Main>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUserId: currentUserSelectors.getCurrentUserId(state),\n    foldersById: currentUserSelectors.getFolders(state),\n    folders: currentUserSelectors.getFoldersArray(state),\n    folderIds: currentUserSelectors.getFolderIds(state),\n    tasksById: taskSelectors.getTasksById(state),\n    taskId: currentSelectors.getCurrentTaskId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectTask: taskId => dispatch(currentActions.selectTask(taskId)),\n    syncUserTasks: userId => dispatch(taskActions.syncUserTasks(userId)),\n    fetchFolders: userId => dispatch(currentUserActions.fetchFolders(userId)),\n    fetchUserTasks: userId => dispatch(taskActions.fetchUserTasks(userId)),\n    addTask: ({ taskId, taskData }) =>\n      dispatch(taskActions.addTask({ taskId, taskData })),\n    updateTask: ({ taskId, taskData }) =>\n      dispatch(taskActions.updateTask({ taskId, taskData })),\n    deleteTask: taskId => dispatch(taskActions.deleteTask(taskId)),\n    addFolder: ({ folderId, folderData }) =>\n      dispatch(currentUserActions.addFolder({ folderId, folderData })),\n    updateFolder: ({ folderId, folderData }) =>\n      dispatch(currentUserActions.updateFolder({ folderId, folderData })),\n    deleteFolder: folderId =>\n      dispatch(currentUserActions.deleteFolder(folderId)),\n    reorderFolders: (userId, folderIds) =>\n      dispatch(currentUserActions.reorderFolders(userId, folderIds))\n  };\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(UserTasks)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { withAuthorization } from '../Session';\nimport * as ROUTES from '../../constants/routes';\nimport { userActions } from '../../ducks/users';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { ProjectGridContainer } from '../ProjectGrid';\nimport { ProjectComposer } from '../ProjectComposer';\nimport { BoardContainer } from '../Board';\nimport { projectActions, projectSelectors } from '../../ducks/projects';\nimport { Main } from '../Main';\nimport { Dashboard } from '../Dashboard';\nimport { UserTasks } from '../UserTasks';\nimport './Home.scss';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isProjectComposerOpen: false,\n      isFetching: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      selectUser,\n      fetchUsersById,\n      fetchProjectsById,\n      updateUser,\n      userId,\n      firebase\n    } = this.props;\n    selectUser(userId);\n    console.log('mounted home');\n    fetchUsersById()\n      .then(() => fetchProjectsById(userId))\n      .then(() =>\n        this.setState({\n          isFetching: false\n        })\n      );\n    this.userObserver = firebase.getUserDoc(userId).onSnapshot(snapshot => {\n      const userData = snapshot.data();\n      updateUser({ userId, userData });\n    });\n  }\n\n  toggleProjectComposer = () => {\n    this.setState(prevState => ({\n      isProjectComposerOpen: !prevState.isProjectComposerOpen\n    }));\n  };\n\n  createProject = name => {\n    const { userId, firebase } = this.props;\n    firebase.addProject({ userId, name });\n  };\n\n  render() {\n    const { isProjectComposerOpen, isFetching } = this.state;\n    if (isFetching) return null;\n    const { userId, projectsById } = this.props;\n    return (\n      <>\n        {isProjectComposerOpen && (\n          <ProjectComposer\n            onClose={this.toggleProjectComposer}\n            handleSubmit={this.createProject}\n          />\n        )}\n        <Switch>\n          <Route\n            exact\n            path={ROUTES.HOME}\n            render={props => (\n                <Dashboard\n                  toggleProjectComposer={this.toggleProjectComposer}\n                  {...props}\n                />\n            )}\n          />\n          <Route\n            path={ROUTES.PROJECT}\n            render={props => (\n              <BoardContainer\n                userId={userId}\n                projectId={props.match.params.id}\n                projectName={projectsById[props.match.params.id].name}\n                {...props}\n              />\n            )}\n          />\n          <Route\n            path={ROUTES.USER_PROJECTS}\n            render={props => (\n              <Main title=\"Projects\">\n                <ProjectGridContainer\n                  userId={userId}\n                  openProjectComposer={this.toggleProjectComposer}\n                  {...props}\n                />\n              </Main>\n            )}\n          />\n          <Route\n            path={ROUTES.USER_TASKS}\n            render={props => <UserTasks userId={userId} {...props} />}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentProjectId: currentSelectors.getCurrentProjectId(state),\n    projectsById: projectSelectors.getProjectsById(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUser: ({ userId, userData }) =>\n      dispatch(userActions.updateUser({ userId, userData })),\n    fetchUsersById: () => dispatch(userActions.fetchUsersById()),\n    fetchProjectsById: userId =>\n      dispatch(projectActions.fetchProjectsById(userId)),\n    selectUser: userId => dispatch(currentActions.selectUser(userId))\n  };\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(HomePage)\n);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .passwordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n    const isInvalid = passwordOne === '' || passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"passwordOne\"\n          label=\"New Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          label=\"Confirm New Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Change My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React from 'react';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport { PasswordChangeForm } from '../PasswordChange';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport './Account.scss';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <main className=\"account\">\n        <h1>Account: {authUser.email}</h1>\n        <section className=\"account__section\">\n        <h2>Forgot your password?</h2>\n          <PasswordForgetForm />\n        </section>\n        <section className=\"account__section\">\n        <h2>Change your password.</h2>\n          <PasswordChangeForm />\n        </section>\n      </main>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(AccountPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/users';\nimport './Admin.scss';\n\nclass AdminPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      users: {}\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    /*\n    this.props.firebase.users().on('value', snapshot => {\n      this.setState({\n        users: snapshot.val(),\n        loading: false\n      });\n    });\n    */\n  }\n\n  componentWillUnmount() {\n    /*\n    this.props.firebase.users().off();\n    */\n  }\n\n  render() {\n    return (\n      <main className=\"admin\">\n        <h1>Admin</h1>\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentUser: userSelectors.getCurrentUserData(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsersById: () => dispatch(userActions.fetchUsersById())\n  };\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(AdminPage)\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { Icon } from '../Icon';\nimport './Logo.scss';\n\nconst Logo = ({ size, className, onClick }) => {\n  return (\n    <div className={`logo logo--${size} ${className}`}>\n      <Link className=\"logo__link\" to={ROUTES.LANDING} onClick={onClick}>\n        <span className=\"logo__text\">workflow</span>\n      </Link>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React, { Component } from 'react';\nimport './Navbar.scss';\nimport { Logo } from '../Logo';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\n\nexport default class Navbar extends Component {\n  static defaultProps = {\n    minWidth: 768,\n    classes: {\n      navbar: '',\n      links: ''\n    }\n  };\n\n  state = {\n    viewportWidth: window.innerWidth,\n    isMobileNavVisible: false,\n    isTouchEnabled: false\n  };\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick);\n  }\n\n  handleResize = () => {\n    this.setState({\n      viewportWidth: window.innerWidth\n    });\n  };\n\n  toggleMobileNavVisibility = () => {\n    this.setState(prevState => ({\n      isMobileNavVisible: !prevState.isMobileNavVisible\n    }));\n  };\n\n  handleClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    if (!isMobileView) return;\n    if (e.target.matches('button') || e.target.matches('a')) {\n      this.toggleMobileNavVisibility();\n    }\n  };\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n    window.removeEventListener('resize', this.handleResize);\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  handleOutsideClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n    if (\n      !isMobileView ||\n      this.navLinksEl.contains(e.target) ||\n      e.target.matches('button') ||\n      e.target.matches('a')\n    )\n      return;\n    this.setState({\n      isMobileNavVisible: false\n    });\n  };\n\n  handleTouch = () => {\n    const { isTouchEnabled } = this.state;\n    if (isTouchEnabled === true) return;\n    this.setState({\n      isTouchEnabled: true\n    });\n    document.removeEventListener('touchstart', this.handleTouch);\n    document.removeEventListener('click', this.handleOutsideClick);\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  render() {\n    const { viewportWidth, isMobileNavVisible } = this.state;\n    const { minWidth, classes, children } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    return (\n      <nav\n        className={`navbar ${isMobileView ? 'is-collapsed' : ''} ${\n          isMobileView && isMobileNavVisible ? 'show-links' : ''\n        } ${classes.navbar}`}\n        ref={el => (this.navEl = el)}\n      >\n        <Logo className=\"navbar__logo\" onClick={this.handleClick} />\n        {isMobileView && (\n          <Button\n            type=\"button\"\n            color=\"primary\"\n            onClick={this.toggleMobileNavVisibility}\n            iconOnly\n          >\n            <Icon name=\"menu\" />\n          </Button>\n        )}\n        <ul\n          className={`navbar__links ${classes.links}`}\n          onClick={this.handleClick}\n          ref={el => (this.navLinksEl = el)}\n        >\n          {children}\n        </ul>\n      </nav>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Logo } from '../Logo';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport './Sidebar.scss';\n\nexport const SidebarIcon = ({ name }) => {\n  return <Icon name={name} className=\"sidebar__icon\" />;\n};\n\nexport default class Sidebar extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { onToggle, children } = this.props;\n    return (\n      <div className=\"sidebar__canvas\">\n        <Button\n          type=\"button\"\n          onClick={onToggle}\n          className=\"sidebar__btn--toggle\"\n          size=\"sm\"\n          iconOnly\n        >\n          <Icon name=\"bar-chart-2\" />\n        </Button>\n        <div className=\"sidebar\">\n          <nav className=\"sidebar__nav\">\n            <div className=\"sidebar__logo\">\n              <Logo size=\"sm\" />\n            </div>\n            <ul className=\"sidebar__list\">{children}</ul>\n          </nav>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { SidebarIcon } from './Sidebar';\n\nexport const NavLinksNonAuth = ({onClick}) => (\n  <>\n    <li>\n      <NavLink onClick={onClick} to={ROUTES.SIGN_IN}>Log In</NavLink>\n    </li>\n    <li>\n      <NavLink onClick={onClick} to={ROUTES.SIGN_UP}>Get Started</NavLink>\n    </li>\n  </>\n);\n\nexport const NavLinksAuth = ({ userId, onClick }) => (\n  <>\n    <li className=\"sidebar__item\">\n      <NavLink onClick={onClick} className=\"sidebar__link\" to={`/0/home/${userId}`}>\n        <SidebarIcon name=\"home\" />\n        <span className=\"sidebar__section-name\">Home</span>\n      </NavLink>\n    </li>\n    <li className=\"sidebar__item\">\n      <NavLink onClick={onClick} className=\"sidebar__link\" to={`/0/${userId}/projects`}>\n        <SidebarIcon name=\"grid\" />\n        <span className=\"sidebar__section-name\">Projects</span>\n      </NavLink>\n    </li>\n    <li className=\"sidebar__item\">\n      <NavLink onClick={onClick} className=\"sidebar__link\" to={`/0/${userId}/tasks`}>\n        <SidebarIcon name=\"check-square\" />\n        <span className=\"sidebar__section-name\">Tasks</span>\n      </NavLink>\n    </li>\n    <li className=\"sidebar__item\">\n      <NavLink onClick={onClick} className=\"sidebar__link\" to={ROUTES.ADMIN}>\n        <SidebarIcon name=\"settings\" />\n        <span className=\"sidebar__section-name\">Admin</span>\n      </NavLink>\n    </li>\n  </>\n);\n","import React from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Button } from '../Button';\n\nconst SignOutButton = ({ firebase, className }) => (\n  <Button\n    type=\"button\"\n    onClick={firebase.signOut}\n    className={className}\n    color=\"primary\"\n  >\n    Log Out\n  </Button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React, { Component, createRef } from 'react';\nimport { Button } from '../Button';\nimport { Input } from '../Input';\nimport { Icon } from '../Icon';\nimport './SearchBar.scss';\n\nexport default class SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false,\n      query: ''\n    };\n    this.inputEl = createRef();\n  }\n\n  handleClick = e => {\n    const { query } = this.state;\n    const { name } = e.target;\n    e.stopPropagation();\n    if (name === 'search' || query !== '') return;\n    if (name === 'toggle') {\n      this.inputEl.current.focus();\n    }\n    this.setState(state => ({\n      isExpanded: !state.isExpanded\n    }));\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  render() {\n    return (\n      <div\n        onClick={this.handleClick}\n        className={`search-bar${this.state.isExpanded ? ' is-expanded' : ''}`}\n      >\n        <form className=\"search-form\" onSubmit={this.handleSubmit}>\n          <Input\n            name=\"search\"\n            className=\"search-form__input\"\n            type=\"text\"\n            inputRef={this.inputEl}\n            hideLabel\n          />\n          <Input\n            name=\"submit\"\n            className=\"search-form__submit\"\n            type=\"submit\"\n            hideLabel\n          />\n          <Button\n            type=\"button\"\n            onClick={this.handleClick}\n            className=\"search-form__btn\"\n            name=\"toggle\"\n            iconOnly\n          >\n            <Icon name=\"search\" />\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { userSelectors } from '../../ducks/users';\nimport { PopoverWrapper } from '../Popover';\nimport { Avatar } from '../Avatar';\nimport { Menu, MenuItem } from '../Menu';\nimport { SignOutButton } from '../SignOut';\nimport { SearchBar } from '../SearchBar';\nimport * as ROUTES from '../../constants/routes';\nimport './Topbar.scss';\n\nclass Topbar extends Component {\n  render() {\n    const { currentUser } = this.props;\n    return (\n      <div className=\"topbar\">\n      <SearchBar />\n        {currentUser && (\n          <PopoverWrapper\n            classes={{\n              wrapper: 'topbar__user-actions-wrapper',\n              popover: 'topbar__user-actions'\n            }}\n            alignOuter=\"right\"\n            alignInner=\"right\"\n            buttonProps={{\n              size: 'sm',\n              iconOnly: true,\n              className: 'topbar__btn--user-actions',\n              children: (\n                <Avatar\n                  classes={{\n                    avatar: 'topbar__avatar',\n                    placeholder: 'topbar__avatar-placeholder'\n                  }}\n                  fullName={currentUser.name}\n                  size=\"sm\"\n                  variant=\"circle\"\n                  imgSrc={currentUser.photoURL}\n                />\n              )\n            }}\n          >\n            <Menu>\n              <MenuItem>\n                <NavLink className=\"topbar__link\" to={ROUTES.ACCOUNT}>\n                  My Account\n                </NavLink>\n              </MenuItem>\n              <MenuItem>\n                <SignOutButton className=\"topbar__link\" />\n              </MenuItem>\n            </Menu>\n          </PopoverWrapper>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentUser: userSelectors.getCurrentUserData(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Topbar);\n","import React, { Component } from 'react';\nimport { AuthUserContext } from '../Session';\nimport { Navbar, NavLinksAuth, NavLinksNonAuth, Sidebar } from '../Nav';\nimport { Avatar } from '../Avatar';\nimport { Topbar } from '../Topbar';\nimport './Header.scss';\n\nexport default class Header extends Component {\n  state = {\n    isNavExpanded: false\n  };\n\n  toggleNav = () => {\n    this.setState(prevState => ({\n      isNavExpanded: !prevState.isNavExpanded\n    }));\n  };\n\n  handleClick = e => {\n    this.setState(state => ({\n      isNavExpanded: false\n    }));\n  };\n\n  render() {\n    const { isNavExpanded } = this.state;\n    return (\n      <header className={`header ${isNavExpanded ? 'expand-nav' : ''}`}>\n        <AuthUserContext.Consumer>\n          {authUser =>\n            authUser ? (\n              <>\n                <Sidebar onToggle={this.toggleNav}>\n                  <NavLinksAuth onClick={this.toggleNav} userId={authUser.uid} />\n                </Sidebar>\n                <Topbar />\n              </>\n            ) : (\n              <Navbar>\n                <NavLinksNonAuth />\n              </Navbar>\n            )\n          }\n        </AuthUserContext.Consumer>\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { LandingPage } from '../Landing';\nimport { SignUpPage } from '../SignUp';\nimport { SignInPage } from '../SignIn';\nimport { PasswordForgetPage } from '../PasswordForget';\nimport { HomePage } from '../Home';\nimport { AccountPage } from '../Account';\nimport { AdminPage } from '../Admin';\nimport { withAuthentication } from '../Session';\nimport { Header } from '../Header';\nimport './App.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Header />\n        <Switch>\n          <Route exact path={ROUTES.LANDING} component={LandingPage} />\n          <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n          <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n          <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n          <Route path={ROUTES.APP} render={props => <HomePage {...props} />} />\n          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n          <Route path={ROUTES.ADMIN} component={AdminPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { projectsById } from '../ducks/projects';\nimport { tasksById } from '../ducks/tasks';\nimport { listsById } from '../ducks/lists';\nimport { usersById } from '../ducks/users';\nimport { current } from '../ducks/current';\nimport { subtasksById } from '../ducks/subtasks';\nimport { commentsById } from '../ducks/comments';\nimport { currentUser } from '../ducks/currentUser';\n\nexport default combineReducers({\n  currentUser,\n  projectsById,\n  tasksById,\n  listsById,\n  usersById,\n  current,\n  subtasksById,\n  commentsById\n});\n","import * as types from './types';\n\nconst current = (state = {}, action) => {\n  switch (action.type) {\n    case types.SELECT_USER: {\n      const { userId } = action;\n      return {\n        ...state,\n        userId\n      };\n    }\n    case types.SELECT_PROJECT: {\n      const { projectId } = action;\n      return {\n        ...state,\n        projectId\n      };\n    }\n    case types.SELECT_LIST: {\n      const { listId } = action;\n      return {\n        ...state,\n        listId\n      };\n    }\n    case types.SELECT_TASK: {\n      const { taskId } = action;\n      return {\n        ...state,\n        taskId\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport { current };\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\n\nexport default history;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport 'normalize.css';\nimport './index.scss';\nimport { App } from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { FirebaseContext } from './components/Firebase';\nimport reducers from './store/reducers';\nimport firebase from './store/firebase';\nimport history from './store/history';\n\nconst store = createStore(reducers, {}, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <FirebaseContext.Provider value={firebase}>\n      <Router basename={process.env.PUBLIC_URL} history={history}>\n        <App />\n      </Router>\n    </FirebaseContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}