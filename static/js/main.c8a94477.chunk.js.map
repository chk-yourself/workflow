{"version":3,"sources":["assets/feather/feather-sprite.svg","components/Firebase/context.js","components/Firebase/Firebase.js","constants/routes.js","components/SignOut/SignOutButton.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Button/Button.js","components/Icon/Icon.js","components/Navigation/Navigation.js","components/Input/Input.js","components/SignUp/SignUpForm.js","components/UserFormPage/UserFormPage.js","components/SignUp/SignUp.js","components/SignUp/index.js","components/SignIn/SignInForm.js","components/PasswordForget/PasswordForgetForm.js","components/PasswordForget/PasswordForget.js","components/PasswordForget/index.js","components/SignIn/SignIn.js","store/firebase.js","ducks/user/actions.js","ducks/user/types.js","ducks/user/selectors.js","ducks/user/reducers.js","ducks/current/actions.js","ducks/current/types.js","ducks/current/selectors.js","components/BoardGrid/BoardGrid.js","components/BoardGrid/BoardTile.js","ducks/boards/actions.js","ducks/boards/types.js","ducks/boards/selectors.js","ducks/boards/reducers.js","components/BoardGrid/BoardGridContainer.js","constants/droppableTypes.js","ducks/cards/selectors.js","ducks/cards/actions.js","ducks/cards/types.js","ducks/cards/reducers.js","components/Popover/Popover.js","components/Popover/PopoverWrapper.js","components/Menu/Menu.js","components/Menu/MenuItem.js","components/Card/Card.js","components/Textarea/Textarea.js","components/Card/CardComposer.js","components/List/Cards.js","components/List/List.js","components/List/ListComposer.js","components/Board/Board.js","ducks/lists/actions.js","ducks/lists/types.js","ducks/lists/selectors.js","ducks/lists/reducers.js","components/Modal/Modal.js","components/CardEditor/CardEditor.js","utils/utils.js","components/Board/BoardContainer.js","components/Board/BoardComposer.js","components/Home/Home.js","components/PasswordChange/PasswordChangeForm.js","components/Account/Account.js","components/Header/Header.jsx","components/App/App.js","serviceWorker.js","store/reducers.js","ducks/current/reducers.js","store/history.js","index.js"],"names":["module","exports","__webpack_require__","p","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","createUserWithEmailAndPassword","email","password","auth","signInWithEmailAndPassword","signOut","passwordReset","sendPasswordResetEmail","passwordUpdate","newPassword","currentUser","updatePassword","getTimestamp","firestore","FieldValue","serverTimestamp","addToArray","value","arrayUnion","removeFromArray","arrayRemove","getUserDoc","userId","db","collection","doc","addUser","_ref","name","username","_ref$boardIds","boardIds","set","updateUser","newValue","arguments","length","undefined","update","getBoardDoc","boardId","updateBoard","objectSpread","lastModifiedAt","addBoard","_ref2","boardTitle","add","createdAt","listIds","authorId","memberIds","then","ref","id","getListDoc","listId","updateList","addList","_ref3","listTitle","cardIds","deleteList","_ref4","batch","listRef","boardRef","delete","where","get","snapshot","docs","forEach","commit","console","log","catch","error","getCardDoc","cardId","addCard","_ref5","cardTitle","updateCard","deleteCard","_ref6","cardRef","moveCardToList","_ref7","origListId","newListId","updatedCardIds","origListRef","newListRef","initializeApp","HOME","type","onClick","className","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","authUser","inherits","createClass","key","_this2","listener","onAuthStateChanged","setState","Session_context","Provider","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","Button","children","_ref$className","_ref$color","color","_ref$size","size","_ref$variant","variant","disabled","_ref$iconOnly","iconOnly","buttonRef","objectWithoutProperties","concat","Icon","addClass","trim","xmlns","xmlnsXlink","viewBox","width","height","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","xlinkHref","featherIcons","NavLinksAuth","Link","to","ROUTES","components_SignOut_SignOutButton","NavLinksNonAuth","_ref2$className","Navbar","viewportWidth","window","innerWidth","isMobileNavVisible","handleResize","toggleMobileNavVisibility","prevState","addEventListener","removeEventListener","_this$state","isMobileView","minWidth","components_Button_Button","Icon_Icon","Navigation_NavLinksAuth","Navigation_NavLinksNonAuth","defaultProps","Input","Fragment","hideLabel","htmlFor","title","onChange","placeholder","required","isRequired","onBlur","INITIAL_STATE","passwordOne","passwordTwo","SignUpForm","onSubmit","e","user","uid","preventDefault","defineProperty","target","_this$state2","isInvalid","components_Input_Input","message","UserFormPage","SignUpPage","components_UserFormPage_UserFormPage","SignUp_SignUpForm","SignUpLink","SignInForm","PasswordForgetForm","PasswordForgetPage","PasswordForget_PasswordForgetForm","PasswordForgetLink","SignInPage","SignIn_SignInForm","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","updateUserBoards","fetchUserData","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","data","sent","loadUserData","t0","stop","_x","apply","getUserData","action","toConsumableArray","selectBoard","selectList","selectCard","getCurrentBoardId","current","getCurrentListId","getCurrentCardId","getCurrent","BoardGrid","BoardTile","loadBoardsById","boardsById","fetchBoardsById","updateBoardsById","board","reorderLists","updateListIds","getBoardsById","getBoardsArray","keys","map","getBoard","BoardGridContainer","onSnapshot","querySnapshot","docChanges","change","_this$props$user","_this$props","boardsArray","boardTiles","BoardGrid_BoardTile","BoardGrid_BoardGrid","openBoardComposer","connect","userSelectors","boardSelectors","userActions","boardActions","currentActions","CARD","LIST","getCardsById","cardsById","getCardsArray","ownProps","loadCardsById","fetchCardsById","updateCardsById","card","Popover","handleOutsideClick","onOutsideClick","style","PopoverWrapper","isOpen","componentEl","contains","toggleOpen","align","buttonProps","wrapperClass","popoverClass","popoverStyle","anchorEl","top","getBoundingClientRect","left","right","el","Popover_Popover","Menu","MenuItem","Card","handleCardClick","matches","onCardClick","handleMoreActions","dataset","_this$props2","onCardDelete","_this$props3","cardIndex","react_beautiful_dnd_esm","draggableId","index","provided","draggableProps","dragHandleProps","innerRef","PopoverWrapper_PopoverWrapper","components_Menu_Menu","Menu_MenuItem","href","data-action","Textarea","isActive","CardComposer","resetForm","onFocus","onReset","components_Textarea_Textarea","currentSelectors","Cards","cards","droppableId","droppableTypes","droppableProps","Card_Card_Card","List","viewportHeight","innerHeight","handleCardDelete","handleListDelete","newListTitle","isDragging","_this$props4","listIndex","isFetchingCards","listContentHeight","listHeaderEl","bottom","maxHeight","Cards_Cards","components_Card_CardComposer","cardSelectors","ListComposer","Board","direction","components_List_ListComposer","loadListsById","listsById","fetchListsById","updateListsById","list","getListsById","getListsArray","Modal","onModalClose","onModalClick","CardEditor","cardKey","cardDescription","currentFocus","onSubmitComment","handleModalClick","commentFormRef","subtaskFormRef","cardComment","isCommentFormFocused","setCommentFormRef","element","setSubtaskFormRef","onCardEditorClose","cardSubtask","commentFormIsFocused","components_Modal_Modal","submitSubtask","listSelectors","listsArray","listActions","cardActions","isEqual","other","prototype","toString","typeArr","valueLen","compare","item1","item2","itemType","i","hasOwnProperty","windowDebouncer","callback","request","_len","args","Array","_key","cancelAnimationFrame","requestAnimationFrame","BoardContainer","onDragStart","onDragEnd","destination","source","isMovedWithinList","splice","updatedListIds","toggleCardEditor","isCardEditorOpen","onTitleChange","onTitleBlur","newBoardTitle","isFetching","boardObserver","updatedBoard","utils","listObserver","cardObserver","_this3","lists","components_List_List","components_Board_Board","components_CardEditor_CardEditor","BoardComposer","handleSubmit","onClose","HomePage","toggleBoardComposer","isBoardComposerOpen","createBoard","BoardComposer_BoardComposer","Switch","Route","exact","path","render","BoardGrid_BoardGridContainer","Board_BoardContainer","match","params","currentBoardId","PasswordChangeForm","PasswordChange_PasswordChangeForm","Header","Navigation_Navbar","Header_Header_Header","component","LandingPage","AccountPage","AdminPage","Boolean","location","hostname","combineReducers","createBrowserHistory","basename","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","es","context","Router","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c8a94477.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/feather-sprite.0ed672ce.svg\";","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import firebase from 'firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\nclass Firebase {\n  constructor() {\n    firebase.initializeApp(config);\n    this.auth = firebase.auth();\n    this.db = firebase.firestore();\n  }\n\n  // Auth API\n  createUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  signInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  signOut = () => this.auth.signOut();\n\n  passwordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  passwordUpdate = newPassword =>\n    this.auth.currentUser.updatePassword(newPassword);\n\n  // Utility API\n\n  getTimestamp = () => firebase.firestore.FieldValue.serverTimestamp();\n  addToArray = value => firebase.firestore.FieldValue.arrayUnion(value);\n  removeFromArray = value => firebase.firestore.FieldValue.arrayRemove(value);\n\n  // User API\n\n  getUserDoc = userId => this.db.collection('users').doc(userId);\n\n  addUser = ({ userId, name, username, email, boardIds = [] }) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .set({ userId, name, username, email, boardIds });\n\n  updateUser = (userId, newValue = {}) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .update(newValue);\n\n  // Board API\n\n  getBoardDoc = boardId => this.db.collection('boards').doc(boardId);\n\n  updateBoard = (boardId, newValue = {}) =>\n    this.getBoardDoc(boardId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  addBoard = ({ userId, boardTitle }) => {\n    this.db\n      .collection('boards')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        listIds: [],\n        authorId: userId,\n        memberIds: [userId],\n        boardTitle\n      })\n      .then(ref => {\n        this.updateUser(userId, {\n          boardIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  // List API\n\n  getListDoc = listId => this.db.collection('lists').doc(listId);\n\n  updateList = (listId, newValue = {}) =>\n    this.getListDoc(listId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  addList = ({ boardId, listTitle }) => {\n    this.db\n      .collection('lists')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        cardIds: [],\n        boardId,\n        listTitle\n      })\n      .then(ref => {\n        this.updateBoard(boardId, {\n          listIds: this.addToArray(ref.id),\n          lastModifiedAt: this.getTimestamp()\n        });\n      });\n  };\n\n  deleteList = ({ listId, boardId }) => {\n    const batch = this.db.batch();\n    const listRef = this.getListDoc(listId);\n    const boardRef = this.getBoardDoc(boardId);\n\n    // Delete list\n    batch.delete(listRef);\n\n    // Remove list id from board\n    batch.update(boardRef, {\n      listIds: this.removeFromArray(listId),\n      lastModifiedAt: this.getTimestamp()\n    });\n\n    // Delete cards assigned to list\n    this.db\n      .collection('cards')\n      .where('listId', '==', listId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('list deleted');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  // Card API\n\n  getCardDoc = cardId => this.db.collection('cards').doc(cardId);\n\n  addCard = ({ boardId, listId, cardTitle }) => {\n    this.db\n      .collection('cards')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        listId,\n        boardId,\n        cardTitle\n      })\n      .then(ref => {\n        this.updateList(listId, {\n          cardIds: this.addToArray(ref.id),\n          lastModifiedAt: this.getTimestamp()\n        });\n      });\n  };\n\n  updateCard = (cardId, newValue = {}) => {\n    this.getCardDoc(cardId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  deleteCard = ({ cardId, listId }) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const listRef = this.getListDoc(listId);\n    batch.delete(cardRef);\n    batch.update(listRef, {\n      cardIds: this.removeFromArray(cardId),\n      lastModifiedAt: this.getTimestamp()\n    });\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log('card deleted');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  moveCardToList = ({ cardId, origListId, newListId, updatedCardIds }) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const origListRef = this.getListDoc(origListId);\n    const newListRef = this.getListDoc(newListId);\n    batch.update(cardRef, {\n      listId: newListId,\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(origListRef, {\n      cardIds: this.removeFromArray(cardId),\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(newListRef, {\n      cardIds: updatedCardIds,\n      lastModifiedAt: this.getTimestamp()\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('card moved');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n}\n\nexport default Firebase;\n","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const BOARD = '/home/board/:id';\n","import React from 'react';\nimport { withFirebase } from '../Firebase';\nimport './SignOutButton.scss';\n\nconst SignOutButton = ({ firebase }) => (\n  <button type=\"button\" onClick={firebase.signOut} className=\"btn--sign-out\">\n    Sign Out\n  </button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        authUser: null\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        authUser\n          ? this.setState({ authUser })\n          : this.setState({ authUser: null });\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport AuthUserContext from './context';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          this.props.history.push(ROUTES.SIGN_IN);\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n  return compose(\n    withRouter,\n    withFirebase\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from 'react';\nimport './Button.scss';\n\nconst Button = ({\n  children,\n  type,\n  onClick,\n  className = '',\n  color = 'neutral',\n  size = 'medium',\n  variant = 'text',\n  disabled,\n  name,\n  iconOnly = false,\n  buttonRef,\n  ...props\n}) => (\n  <button\n    className={`${className} ${color} ${size} ${variant} ${\n      iconOnly ? 'icon-only' : ''\n    }`}\n    type={type}\n    onClick={onClick}\n    disabled={disabled}\n    name={name}\n    ref={buttonRef}\n  >\n    {children}\n  </button>\n);\n\nexport default Button;\n","import React from 'react';\nimport featherIcons from '../../assets/feather/feather-sprite.svg';\n\nfunction Icon(props) {\n  return (\n    <svg\n      className={`feather feather-${props.name} ${props.addClass || ''}`.trim()}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n      height=\"24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <use xlinkHref={`${featherIcons}#${props.name}`} />\n    </svg>\n  );\n}\n\nexport default Icon;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { SignOutButton } from '../SignOut';\nimport './Navigation.scss';\nimport { AuthUserContext } from '../Session';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\n\nconst NavLinksAuth = ({ className = '' }) => (\n  <ul className={`navbar__links ${className}`}>\n    <li>\n      <Link to={ROUTES.HOME}>Home</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ADMIN}>Admin</Link>\n    </li>\n    <li>\n      <SignOutButton />\n    </li>\n  </ul>\n);\n\nconst NavLinksNonAuth = ({ className = '' }) => (\n  <ul className={`navbar__links ${className}`}>\n    <li>\n      <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n    </li>\n  </ul>\n);\n\nexport default class Navbar extends Component {\n  static defaultProps = {\n    minWidth: 768\n  };\n\n  state = {\n    viewportWidth: window.innerWidth,\n    isMobileNavVisible: false\n  };\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  handleResize = () => {\n    this.setState({\n      viewportWidth: window.innerWidth\n    });\n  };\n\n  toggleMobileNavVisibility = () => {\n    this.setState(prevState => ({\n      isMobileNavVisible: !prevState.isMobileNavVisible\n    }));\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  render() {\n    const { viewportWidth, isMobileNavVisible } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    return (\n      <nav\n        className={`navbar ${isMobileView ? 'is-collapsed' : ''} ${\n          isMobileView && isMobileNavVisible ? 'show-links' : ''\n        }`}\n      >\n        <span className=\"navbar__logo\">\n          <Link to={ROUTES.LANDING}>workflow</Link>\n        </span>\n        {isMobileView && (\n          <Button\n            type=\"button\"\n            color=\"primary\"\n            onClick={this.toggleMobileNavVisibility}\n            iconOnly\n          >\n            <Icon name=\"menu\" />\n          </Button>\n        )}\n        <AuthUserContext.Consumer>\n          {authUser => (authUser ? <NavLinksAuth /> : <NavLinksNonAuth />)}\n        </AuthUserContext.Consumer>\n      </nav>\n    );\n  }\n}\n","import React from 'react';\nimport './Input.scss';\n\nconst Input = props => {\n  return (\n    <>\n      {!props.hideLabel && (\n        <label htmlFor={props.name} className=\"input__label\">\n          {props.title}\n        </label>\n      )}\n      <input\n        className={props.className}\n        id={props.name}\n        name={props.name}\n        type={props.type}\n        value={props.value}\n        onChange={props.onChange}\n        placeholder={props.placeholder}\n        required={props.isRequired}\n        onBlur={props.onBlur}\n      />\n    </>\n  );\n};\n\nexport default Input;\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  username: '',\n  name: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { username, email, name, passwordOne } = this.state;\n    this.props.firebase\n      .createUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        const userId = authUser.user.uid;\n        return this.props.firebase.addUser({\n          userId,\n          name,\n          username,\n          email\n        });\n      })\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const {\n      username,\n      name,\n      email,\n      passwordOne,\n      passwordTwo,\n      error\n    } = this.state;\n    const isInvalid =\n      passwordOne === '' ||\n      passwordTwo === '' ||\n      email === '' ||\n      username === '' ||\n      passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"name\"\n          title=\"Full Name\"\n          value={name}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"username\"\n          title=\"Username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordOne\"\n          title=\"Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          title=\"Confirm Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"large\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Sign Up\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignUpForm);\n","import React from 'react';\nimport './UserFormPage.scss';\n\nconst UserFormPage = ({ title, children }) => (\n  <main className=\"user-form__container\">\n    <h1>{title}</h1>\n    {children}\n  </main>\n);\n\nexport default UserFormPage;\n","import React from 'react';\nimport SignUpForm from './SignUpForm';\nimport { UserFormPage } from '../UserFormPage';\n\nconst SignUpPage = () => (\n  <UserFormPage title=\"Sign Up\">\n    <SignUpForm />\n  </UserFormPage>\n);\n\nexport default SignUpPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nexport { default as SignUpPage } from './SignUp';\nexport { default as SignUpForm } from './SignUpForm';\nexport { SignUpLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose, renderComponent } from 'recompose';\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email, password } = this.state;\n    this.props.firebase\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n    const isInvalid = password === '' || email === '';\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"password\"\n          title=\"Password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"large\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Sign In\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignInForm);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null\n};\n\nclass PasswordForgetForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .passwordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, error } = this.state;\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"large\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Reset My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordForgetForm);\n","import React from 'react';\nimport PasswordForgetForm from './PasswordForgetForm';\nimport { UserFormPage } from '../UserFormPage';\n\nconst PasswordForgetPage = () => (\n  <UserFormPage title=\"Forgot your password?\">\n    <PasswordForgetForm />\n  </UserFormPage>\n);\n\nexport default PasswordForgetPage;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport {default as PasswordForgetForm} from './PasswordForgetForm';\nexport {default as PasswordForgetPage} from './PasswordForget';\nexport {PasswordForgetLink};","import React from 'react';\nimport SignInForm from './SignInForm';\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { UserFormPage } from '../UserFormPage';\n\nconst SignInPage = () => (\n  <UserFormPage title=\"Sign In\">\n    <SignInForm />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </UserFormPage>\n);\n\nexport default SignInPage;\n","import { Firebase } from '../components/Firebase';\n\nconst firebase = new Firebase();\n\nexport default firebase;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const updateUserBoards = boardIds => {\n  return {\n    type: types.UPDATE_USER_BOARDS,\n    boardIds\n  };\n};\n\nexport const fetchUserData = userId => {\n  return async dispatch => {\n    try {\n      const user = await firebase\n        .getUserDoc(userId)\n        .get()\n        .then(doc => doc.data());\n      dispatch(loadUserData(user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const loadUserData = user => {\n  return {\n    type: types.LOAD_USER_DATA,\n    user\n  };\n};\n","export const UPDATE_USER_BOARDS = 'ADD_USER_BOARD';\nexport const LOAD_USER_DATA = 'LOAD_USER_DATA';\nexport const LOAD_USER_BOARDS = 'LOAD_USER_BOARDS';\n","export const getUserData = state => {\n  return state.user;\n};\n","import * as types from './types';\n\nconst user = (state = {}, action) => {\n  switch (action.type) {\n    case types.UPDATE_USER_BOARDS:\n      return {\n        ...state,\n        boardIds: [...action.boardIds]\n      };\n    case types.LOAD_USER_DATA:\n      return {\n        ...state,\n        ...action.user\n      };\n    default:\n      return state;\n  }\n};\n\nexport default user;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const selectBoard = boardId => {\n  return {\n    type: types.SELECT_BOARD,\n    boardId\n  };\n};\n\nexport const selectList = listId => {\n  return {\n    type: types.SELECT_LIST,\n    listId\n  };\n};\n\nexport const selectCard = cardId => {\n  return {\n    type: types.SELECT_CARD,\n    cardId\n  };\n};\n","export const SELECT_BOARD = 'SELECT_BOARD';\nexport const SELECT_LIST = 'SELECT_LIST';\nexport const SELECT_CARD = 'SELECT_CARD';\n","export const getCurrentBoardId = state => {\n  return state.current.boardId;\n};\n\nexport const getCurrentListId = state => {\n  return state.current.listId;\n};\n\nexport const getCurrentCardId = state => {\n  return state.current.cardId;\n};\n\nexport const getCurrent = state => {\n  return state.current;\n};\n","import React, { Component } from 'react';\n\nexport default class BoardGrid extends Component {\n  render() {\n    return <ul className=\"board-grid\">{this.props.children}</ul>;\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BoardTile = props => {\n  const { boardId, boardTitle, onClick } = props;\n  return (\n    <li className=\"board-grid__tile\">\n      <Link\n        className=\"board-grid__link\"\n        to={`/home/board/${boardId}`}\n        onClick={onClick}\n      >\n        <span className=\"board-grid__title\">{boardTitle}</span>\n      </Link>\n    </li>\n  );\n};\n\nexport default BoardTile;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadBoardsById = boardsById => {\n  return {\n    type: types.LOAD_BOARDS_BY_ID,\n    boardsById\n  };\n};\n\nexport const fetchBoardsById = userId => {\n  return async dispatch => {\n    try {\n      const boardsById = await firebase.db\n        .collection('boards')\n        .where('memberIds', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const boardsById = {};\n          snapshot.forEach(doc => {\n            boardsById[doc.id] = doc.data();\n          });\n          return boardsById;\n        });\n      dispatch(loadBoardsById(boardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateBoardsById = board => {\n  return {\n    type: types.UPDATE_BOARDS_BY_ID,\n    board\n  };\n};\n\nexport const reorderLists = (boardId, listIds) => {\n  return {\n    type: types.REORDER_LISTS,\n    boardId,\n    listIds\n  };\n};\n\nexport const updateListIds = (boardId, listIds) => {\n  return {\n    type: types.UPDATE_LIST_IDS,\n    boardId,\n    listIds\n  };\n};\n","export const LOAD_BOARDS_BY_ID = 'LOAD_BOARDS_BY_ID';\nexport const UPDATE_BOARDS_BY_ID = 'UPDATE_BOARDS_BY_ID';\nexport const REORDER_LISTS = 'REORDER_LISTS';\nexport const UPDATE_LIST_IDS = 'UPDATE_LIST_IDS';\n","export const getBoardsById = state => {\n  return state.boardsById;\n};\n\nexport const getBoardsArray = state => {\n  const { boardsById } = state;\n  return Object.keys(boardsById).map(boardId => {\n    return {\n      boardId,\n      ...boardsById[boardId]\n    };\n  });\n};\n\nexport const getBoard = (state, boardId) => {\n  const { boardsById } = state;\n  return boardsById[boardId];\n};\n","import * as types from './types';\n\nconst boardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_BOARDS_BY_ID: {\n      const { boardsById } = action;\n      return {\n        ...state,\n        ...boardsById\n      };\n    }\n    case types.UPDATE_BOARDS_BY_ID: {\n      const { board } = action;\n      return {\n        ...state,\n        ...board\n      };\n    }\n    case types.UPDATE_LIST_IDS:\n    case types.REORDER_LISTS: {\n      const { boardId, listIds } = action;\n      return {\n        ...state,\n        [boardId]: {\n          ...state[boardId],\n          listIds\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default boardsById;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport BoardGrid from './BoardGrid';\nimport BoardTile from './BoardTile';\nimport './BoardGrid.scss';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\n\nclass BoardGridContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  componentDidMount() {\n    const { userId } = this.props.user;\n    this.listener = this.props.firebase.db\n      .collection('boards')\n      .where('memberIds', 'array-contains', userId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const board = {\n            [change.doc.id]: change.doc.data()\n          };\n          this.props.updateBoardsById(board);\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  }\n\n  render() {\n    const { boardIds, userId } = this.props.user;\n    const { boardsArray, selectBoard } = this.props;\n    const boardTiles = boardsArray.map(board => {\n      const { boardTitle, boardId } = board;\n      return (\n        <BoardTile\n          key={boardId}\n          boardTitle={boardTitle}\n          boardId={boardId}\n          onClick={() => selectBoard(boardId)}\n        />\n      );\n    });\n    return (\n      <section>\n        <BoardGrid>\n          {boardTiles}\n          <button\n            type=\"button\"\n            className=\"board-grid__tile board-grid__btn--add\"\n            onClick={this.props.openBoardComposer}\n          >\n            Create new board...\n          </button>\n        </BoardGrid>\n      </section>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUserBoards: boardIds =>\n      dispatch(userActions.updateUserBoards(boardIds)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardGridContainer)\n);\n","export const CARD = 'CARD';\nexport const LIST = 'LIST';\n","export const getCardsById = state => {\n  return state.cardsById;\n};\n\nexport const getCardsArray = (state, ownProps) => {\n  const { cardsById } = state;\n  const { cardIds } = ownProps;\n  return cardIds.map(cardId => cardsById[cardId]);\n};\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadCardsById = cardsById => {\n  return {\n    type: types.LOAD_CARDS_BY_ID,\n    cardsById\n  };\n};\n\nexport const fetchCardsById = boardId => {\n  return async dispatch => {\n    try {\n      const cardsById = await firebase.db\n        .collection('cards')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const cardsById = {};\n          snapshot.forEach(doc => {\n            cardsById[doc.id] = {\n              cardId: doc.id,\n              ...doc.data()\n            };\n          });\n          return cardsById;\n        });\n      dispatch(loadCardsById(cardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateCardsById = card => {\n  return {\n    type: types.UPDATE_CARDS_BY_ID,\n    card\n  };\n};\n","export const ADD_CARD = 'ADD_CARD';\nexport const SET_CARD_DUE_DATE = 'SET_CARD_DUE_DATE';\nexport const ADD_CARD_SUBTASK = 'ADD_CARD_SUBTASK';\nexport const REMOVE_CARD_SUBTASK = 'REMOVE_CARD_SUBTASK';\nexport const CHANGE_CARD_DESCRIPTION = 'CHANGE_CARD_DESCRIPTION';\nexport const SET_CARD_COLOR = 'SET_CARD_COLOR';\nexport const DELETE_CARD = 'DELETE_CARD';\nexport const MOVE_CARD = 'MOVE_CARD';\nexport const LOAD_CARDS_BY_ID = 'LOAD_CARDS_BY_ID';\nexport const UPDATE_CARDS_BY_ID = 'UPDATE_CARDS_BY_ID';\n","import * as types from './types';\n\nconst cardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_CARDS_BY_ID: {\n      const { cardsById } = action;\n      return {\n        ...state,\n        ...cardsById\n      };\n    }\n    case types.UPDATE_CARDS_BY_ID: {\n      const { card } = action;\n      return {\n        ...state,\n        ...card\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default cardsById;\n","import React, { Component } from 'react';\n\nexport default class Popover extends Component {\n  componentDidMount() {\n    window.addEventListener('click', this.handleOutsideClick, false);\n  }\n\n  handleOutsideClick = e => {\n    const { onOutsideClick } = this.props;\n    onOutsideClick(e);\n    console.log('click');\n    window.removeEventListener('click', this.handleOutsideClick);\n  };\n\n  render() {\n    const { className, onClick, style, children } = this.props;\n    return (\n      <div className={`popover ${className}`} onClick={onClick} style={style}>\n        {children}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from '../Button';\nimport Popover from './Popover';\nimport './Popover.scss';\n\nexport default class PopoverWrapper extends Component {\n  state = {\n    isOpen: false\n  };\n\n  static defaultProps = {\n    wrapperClass: '',\n    popoverClass: '',\n    buttonProps: {},\n    align: 'left'\n  };\n\n  handleOutsideClick = e => {\n    if (!this.componentEl.contains(e.target)) {\n      this.setState({\n        isOpen: false\n      });\n    }\n  };\n\n  toggleOpen = () => {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  };\n\n  render() {\n    const {\n      children,\n      align,\n      buttonProps,\n      wrapperClass,\n      popoverClass\n    } = this.props;\n    const { isOpen } = this.state;\n    let popoverStyle = null;\n\n    if (this.anchorEl) {\n      const { height } = this.anchorEl.getBoundingClientRect();\n\n      popoverStyle = {\n        top: height,\n        left: align === 'left' ? 0 : 'auto',\n        right: align === 'right' ? 0 : 'auto'\n      };\n    }\n\n    return (\n      <div\n        className={`popover-wrapper ${wrapperClass}`}\n        ref={el => (this.componentEl = el)}\n      >\n        <Button\n          type=\"button\"\n          onClick={this.toggleOpen}\n          buttonRef={el => (this.anchorEl = el)}\n          {...buttonProps}\n        />\n        {isOpen && (\n          <Popover\n            className={popoverClass}\n            onClick={this.toggleOpen}\n            style={popoverStyle}\n            onOutsideClick={this.handleOutsideClick}\n            key=\"popover\"\n          >\n            {children}\n          </Popover>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './Menu.scss';\n\nconst Menu = ({ children, onClick, className = '' }) => {\n  return <ul className={`menu ${className}`} onClick={onClick}>{children}</ul>;\n};\n\nexport default Menu;\n","import React from 'react';\nimport './Menu.scss';\n\nconst MenuItem = ({ children, className = '' }) => {\n  return <li className={`menu__item ${className}`}>{children}</li>;\n};\n\nexport default MenuItem;\n","import React, { Component } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport './Card.scss';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { PopoverWrapper } from '../Popover';\nimport { Menu, MenuItem } from '../Menu';\n\nexport default class Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleCardClick = e => {\n    if (e.target.matches('button') || e.target.matches('a')) return;\n    const { cardId, onCardClick } = this.props;\n    onCardClick(cardId);\n  };\n\n  handleMoreActions = e => {\n    if (!e.target.matches('a')) return;\n    const { action } = e.target.dataset;\n    const { cardId, onCardDelete } = this.props;\n    switch (action) {\n      case 'delete':\n        onCardDelete(cardId);\n        break;\n    }\n    e.preventDefault(); // prevents page reload\n  };\n\n  render() {\n    const { cardTitle, cardId, cardIndex } = this.props;\n    return (\n      <Draggable draggableId={cardId} index={cardIndex}>\n        {provided => (\n          <>\n            <div\n              className=\"card\"\n              onClick={this.handleCardClick}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              ref={provided.innerRef}\n            >\n              <div className=\"card__header\">\n                <PopoverWrapper\n                  wrapperClass=\"card__popover-wrapper\"\n                  popoverClass=\"card__popover\"\n                  align=\"left\"\n                  buttonProps={{\n                    size: 'small',\n                    iconOnly: true,\n                    className: 'card__btn--more-actions',\n                    children: <Icon name=\"more-horizontal\" />\n                  }}\n                >\n                  <Menu onClick={this.handleMoreActions}>\n                    <MenuItem>\n                      <a href=\"\" data-action=\"delete\">\n                        Delete\n                      </a>\n                    </MenuItem>\n                  </Menu>\n                </PopoverWrapper>\n                <div className=\"card__tags\" />\n                <h3 className=\"card__title\">{cardTitle}</h3>\n              </div>\n              <div className=\"card__footer\">\n                <div className=\"card__labels\" />\n              </div>\n            </div>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n","import React from 'react';\nimport './Textarea.scss';\n\nconst Textarea = props => {\n  return (\n    <textarea\n      className={`textarea ${props.className}`}\n      id={props.name}\n      name={props.name}\n      value={props.value}\n      onChange={props.onChange}\n      placeholder={props.placeholder}\n      required={props.isRequired}\n      onBlur={props.onBlur}\n    />\n  );\n};\n\nexport default Textarea;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon } from '../Icon';\nimport { withAuthorization } from '../Session';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport './CardComposer.scss';\n\nconst INITIAL_STATE = {\n  cardTitle: '',\n  isActive: false\n};\n\nclass CardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ cardTitle: '' });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { cardTitle } = this.state;\n    const { boardId } = this.props.current;\n    const { listId } = this.props;\n    this.props.firebase.addCard({ boardId, listId, cardTitle });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onBlur = e => {\n    if (e.target.value !== '') return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const { cardTitle, isActive } = this.state;\n\n    return (\n      <div\n        className={`card-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"card-composer__form\" onSubmit={this.onSubmit}>\n          <Textarea\n            onChange={this.onChange}\n            value={cardTitle}\n            placeholder={isActive ? 'Enter card title...' : 'Add a card'}\n            isRequired\n            name=\"cardTitle\"\n            className=\"card-composer__textarea\"\n          />\n          {isActive && (\n            <div className=\"card-composer__footer\">\n              <Button\n                className=\"card-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add Card\n              </Button>\n              <Button\n                className=\"card-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"small\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardComposer)\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { Card } from '../Card';\n\nexport default class Cards extends Component {\n  static propTypes = {\n    listId: PropTypes.string.isRequired\n  };\n\n  render() {\n    const { listId, cards, style, onCardClick, onCardDelete } = this.props;\n    return (\n      <Droppable droppableId={listId} type={droppableTypes.CARD}>\n        {provided => (\n          <div\n            className=\"list__content\"\n            ref={provided.innerRef}\n            style={style}\n            {...provided.droppableProps}\n          >\n            {cards.map((card, cardIndex) => {\n              const { cardId, cardTitle } = card;\n              return (\n                <Card\n                  key={cardId}\n                  cardTitle={cardTitle}\n                  cardId={cardId}\n                  cardIndex={cardIndex}\n                  listId={listId}\n                  onCardClick={onCardClick}\n                  onCardDelete={onCardDelete}\n                />\n              );\n            })}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { CardComposer } from '../Card';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\nimport { Input } from '../Input';\nimport Cards from './Cards';\nimport './List.scss';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDragging: this.props.isDragging,\n      listTitle: this.props.listTitle,\n      viewportHeight: window.innerHeight\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  handleResize = () => {\n    this.setState({\n      viewportHeight: window.innerHeight\n    });\n  };\n\n  handleCardDelete = cardId => {\n    const { listId, firebase } = this.props;\n    firebase.deleteCard({ cardId, listId });\n  };\n\n  handleListDelete = e => {\n    e.preventDefault();\n\n    const { listId, boardId, firebase } = this.props;\n    firebase.deleteList({ listId, boardId });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onBlur = e => {\n    const { listTitle, listId, firebase } = this.props;\n    const { listTitle: newListTitle } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newListTitle !== listTitle) {\n      firebase.updateList(listId, {\n        listTitle: newListTitle\n      });\n      console.log('updated!');\n    }\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  render() {\n    const {\n      cards,\n      onCardClick,\n      listId,\n      listIndex,\n      isFetchingCards\n    } = this.props;\n    if (isFetchingCards) return null;\n\n    const { listTitle, viewportHeight } = this.state;\n    const listContentHeight = {};\n    \n    if (this.listHeaderEl) {\n      const { bottom } = this.listHeaderEl.getBoundingClientRect();\n      listContentHeight.maxHeight = viewportHeight - (bottom + 80);\n    }\n\n    return (\n      <Draggable draggableId={listId} index={listIndex}>\n        {provided => (\n          <>\n            <section\n              className=\"list\"\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <header className=\"list__header\" ref={el => (this.listHeaderEl = el)}>\n                <Input\n                  className=\"list__input--title\"\n                  name=\"listTitle\"\n                  type=\"text\"\n                  value={listTitle}\n                  onChange={this.onChange}\n                  required\n                  hideLabel\n                  onBlur={this.onBlur}\n                />\n                <PopoverWrapper\n                  wrapperClass=\"list__popover-wrapper\"\n                  popoverClass=\"list__popover\"\n                  align=\"left\"\n                  buttonProps={{\n                    size: 'medium',\n                    iconOnly: true,\n                    className: 'list__btn--more-actions',\n                    children: <Icon name=\"more-vertical\" />\n                  }}\n                >\n                  <Menu>\n                    <MenuItem>\n                      <a href=\"\" onClick={this.handleListDelete}>\n                        Delete\n                      </a>\n                    </MenuItem>\n                  </Menu>\n                </PopoverWrapper>\n              </header>\n              <Cards\n                cards={cards}\n                listId={listId}\n                onCardClick={onCardClick}\n                onCardDelete={this.handleCardDelete}\n                style={listContentHeight}\n              />\n              {provided.placeholder}\n              <CardComposer listId={listId} />\n            </section>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state),\n    cards: cardSelectors.getCardsArray(state, ownProps)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => dispatch(userActions.getUserData(userId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(List)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input } from '../Input';\nimport { Icon } from '../Icon';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Button } from '../Button';\nimport './ListComposer.scss';\n\nconst INITIAL_STATE = {\n  listTitle: '',\n  isActive: false\n};\n\nclass ListComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ listTitle: '' });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { listTitle } = this.state;\n    const { boardId } = this.props;\n    this.props.firebase.addList({ boardId, listTitle });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = e => {\n    if (e.target.value === '') {\n      this.setState({\n        isActive: false\n      });\n    }\n  };\n\n  render() {\n    const { listTitle, isActive } = this.state;\n    return (\n      <div\n        className={`list-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"list-composer__form\" onSubmit={this.onSubmit}>\n          <Input\n            onChange={this.onChange}\n            value={listTitle}\n            placeholder={isActive ? 'Enter list title...' : 'Add a list'}\n            required={true}\n            name=\"listTitle\"\n            hideLabel={true}\n            className=\"list-composer__input\"\n          />\n          {isActive && (\n            <div className=\"list-composer__footer\">\n              <Button\n                className=\"list-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add List\n              </Button>\n              <Button\n                className=\"list-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"small\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => dispatch(userActions.getUserData(userId)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListComposer)\n);\n","import React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { ListComposer } from '../List';\n\nconst Board = props => {\n  const { boardId, children } = props;\n  return (\n    <Droppable\n      droppableId={boardId}\n      type={droppableTypes.LIST}\n      direction=\"horizontal\"\n    >\n      {provided => (\n        <div\n          className=\"board\"\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n        >\n          {children}\n          {provided.placeholder}\n          <ListComposer boardId={boardId} />\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nexport default Board;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadListsById = listsById => {\n  return {\n    type: types.LOAD_LISTS_BY_ID,\n    listsById\n  };\n};\n\nexport const fetchListsById = boardId => {\n  return async dispatch => {\n    try {\n      const listsById = await firebase.db\n        .collection('lists')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const listsById = {};\n          snapshot.forEach(doc => {\n            listsById[doc.id] = doc.data();\n          });\n          return listsById;\n        });\n      dispatch(loadListsById(listsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateListsById = list => {\n  return {\n    type: types.UPDATE_LISTS_BY_ID,\n    list\n  };\n};\n","export const LOAD_LISTS_BY_ID = 'LOAD_LISTS_BY_ID';\nexport const FETCH_LISTS_BY_ID = 'FETCH_LISTS_BY_ID';\nexport const UPDATE_LISTS_BY_ID = 'UPDATE_LISTS_BY_ID';\nexport const DELETE_CARD = 'DELETE_CARD';\n","export const getListsById = state => {\n  return state.listsById;\n};\n\nexport const getListsArray = state => {\n  const { listsById, boardsById, current } = state;\n  const { boardId } = current;\n  const board = boardsById[boardId];\n  if (!board) return null;\n  const { listIds } = board;\n\n  return listIds.map(listId => {\n    return {\n      listId,\n      ...listsById[listId]\n    };\n  });\n};\n","import * as types from './types';\n\nconst listsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_LISTS_BY_ID: {\n      const { listsById } = action;\n      return {\n        ...state,\n        ...listsById\n      };\n    }\n    case types.UPDATE_LISTS_BY_ID: {\n      const { list } = action;\n      return {\n        ...state,\n        ...list\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default listsById;\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport './Modal.scss';\n\nconst Modal = ({ onModalClose, children, className=\"\", onModalClick, size=\"medium\" }) => {\n  return (\n    <div className=\"modal\" onClick={onModalClick}>\n      <div className={`modal__content ${className} ${size}`}>\n        <button\n          type=\"button\"\n          className=\"modal__btn--close\"\n          onClick={onModalClose}\n        >\n          <Icon name=\"x\" />\n        </button>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { Input } from '../Input';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { Modal } from '../Modal';\nimport './CardEditor.scss';\n\nclass CardEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cardId: this.props.card.cardId,\n      cardTitle: this.props.card.cardTitle,\n      cardDescription: this.props.card.cardDescription,\n      cardComment: '',\n      currentFocus: null,\n      isCommentFormFocused: false\n    };\n    this.commentFormRef = null;\n    this.subtaskFormRef = null;\n    this.setCommentFormRef = element => {\n      this.commentFormRef = element;\n    };\n    this.setSubtaskFormRef = element => {\n      this.subtaskFormRef = element;\n    };\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n    console.log('changed');\n  };\n\n  onBlur = e => {\n    const { card, firebase } = this.props;\n    const { cardTitle, cardDescription, currentFocus } = this.state;\n    const cardKey = e.target.name;\n\n    // When field loses focus, update card if change is detected\n\n    if (this.state[cardKey] !== card[cardKey]) {\n      const { cardId } = card;\n      firebase.updateCard(cardId, {\n        [cardKey]: this.state[cardKey]\n      });\n      console.log('updated!');\n    }\n\n    this.setState({\n      currentFocus: null\n    });\n  };\n\n  onSubmitComment = e => {\n    console.log(e.target.value);\n\n    e.preventDefault();\n  };\n\n  onFocus = e => {\n    this.setState({\n      currentFocus: e.target.name\n    });\n  };\n\n  handleModalClick = e => {\n    const { currentFocus } = this.state;\n    if (\n      (currentFocus === 'cardComment' &&\n        !this.commentFormRef.contains(e.target)) ||\n      (currentFocus === 'cardSubtask' &&\n        !this.subtaskFormRef.contains(e.target))\n    ) {\n      this.setState({\n        currentFocus: null\n      });\n    }\n  };\n\n  render() {\n    const { onCardEditorClose, user } = this.props;\n    console.log({user});\n    const {\n      cardTitle,\n      cardDescription,\n      cardComment,\n      currentFocus,\n      cardSubtask\n    } = this.state;\n    const isInvalid = cardComment === '';\n    const commentFormIsFocused = currentFocus === 'cardComment';\n\n    return (\n      <Modal\n        onModalClose={onCardEditorClose}\n        className=\"card-editor\"\n        onModalClick={this.handleModalClick}\n      >\n        <form\n          name=\"editCardForm\"\n          onFocus={this.onFocus}\n          className=\"card-editor__edit-card-form\"\n        >\n          <Input\n            className=\"card-editor__input--title\"\n            name=\"cardTitle\"\n            type=\"text\"\n            value={cardTitle}\n            onChange={this.onChange}\n            required\n            hideLabel\n            onBlur={this.onBlur}\n            onFocus={this.onFocus}\n          />\n          <div\n            className={`card-editor__section ${\n              currentFocus === 'cardDescription' ? 'is-focused' : ''\n            }`}\n          >\n            <div className=\"card-editor__section-icon\">\n              <Icon name=\"edit-3\" />\n            </div>\n            <Textarea\n              className=\"card-editor__textarea--description\"\n              name=\"cardDescription\"\n              value={cardDescription}\n              onChange={this.onChange}\n              placeholder=\"Add a description\"\n              onBlur={this.onBlur}\n              onFocus={this.onFocus}\n            />\n          </div>\n        </form>\n        <div\n          className={`card-editor__section ${\n            currentFocus === 'cardSubtask' ? 'is-focused' : ''\n          }`}\n        >\n          <hr className=\"card-editor__hr\" />\n          <div className=\"card-editor__section-icon\">\n            <Icon name=\"check-square\" />\n          </div>\n          <form\n            name=\"subtaskForm\"\n            className={`card-editor__subtask-form ${\n              currentFocus === 'cardSubtask' ? 'is-focused' : ''\n            }`}\n            onFocus={this.onFocus}\n            ref={this.setSubtaskFormRef}\n          >\n            <Textarea\n              className=\"card-editor__textarea--subtask\"\n              name=\"cardSubtask\"\n              value={cardSubtask}\n              onChange={this.onChange}\n              placeholder=\"Add a subtask\"\n            />\n            {currentFocus === 'cardSubtask' && (\n              <Button\n                type=\"submit\"\n                color=\"secondary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isInvalid}\n                onClick={this.submitSubtask}\n                className=\"card-editor__btn--submit-subtask\"\n              >\n                Add subtask\n              </Button>\n            )}\n          </form>\n        </div>\n        <div\n          className={`card-editor__section ${\n            commentFormIsFocused ? 'is-focused' : ''\n          }`}\n        >\n          <hr className=\"card-editor__hr\" />\n          <div className=\"card-editor__section-icon\">\n            <Icon name=\"message-circle\" />\n          </div>\n          <form\n            name=\"commentForm\"\n            className={`card-editor__comment-form ${\n              commentFormIsFocused ? 'is-focused' : ''\n            }`}\n            onFocus={this.onFocus}\n            ref={this.setCommentFormRef}\n          >\n            <Textarea\n              className=\"card-editor__textarea--comment\"\n              name=\"cardComment\"\n              value={cardComment}\n              onChange={this.onChange}\n              placeholder=\"Write a comment...\"\n            />\n            {commentFormIsFocused && (\n              <Button\n                type=\"submit\"\n                color=\"secondary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isInvalid}\n                onClick={this.onSubmitComment}\n                name=\"cardCommentSubmit\"\n                className=\"card-editor__btn--submit-comment\"\n              >\n                Comment\n              </Button>\n            )}\n          </form>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    current: currentSelectors.getCurrent(state),\n    listsById: listSelectors.getListsById(state),\n    listsArray: listSelectors.getListsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId)),\n    updateListsById: list => dispatch(listActions.updateListsById(list)),\n    updateCardsById: card => dispatch(cardActions.updateCardsById(card)),\n    reorderLists: (boardId, listIds) =>\n      dispatch(boardActions.reorderLists(boardId, listIds))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardEditor)\n);\n","\n/**\n * Checks if two arrays or objects are equal\n * @param {Array|Object} value\n * @param {Array|Object} other\n */\n\n// eslint-disable-next-line import/prefer-default-export\nexport const isEqual = (value, other) => {\n  const type = Object.prototype.toString.call(value);\n\n  // If both objects are not the same type, return false\n  if (type !== Object.prototype.toString.call(other)) return false;\n\n  const typeObj = '[object Object]';\n  const typeArr = '[object Array]';\n  // If items are neither objects nor arrays, return false\n  if (type !== typeObj && type !== typeArr) return false;\n\n  // Compare length of two items\n  const valueLen = type === typeArr ? value.length : Object.keys(value).length;\n  const otherLen = type === typeArr ? other.length : Object.keys(other).length;\n  if (valueLen !== otherLen) return false;\n\n  const compare = (item1, item2) => {\n    const typeFunc = '[object Function]';\n    const itemType = Object.prototype.toString.call(item1);\n    if (itemType !== Object.prototype.toString.call(item2)) return false;\n    if (itemType === typeObj || itemType === typeArr) {\n      return isEqual(item1, item2);\n    }\n    if (itemType === typeFunc) {\n      return item1.toString() === item2.toString();\n    }\n    return item1 === item2;\n  };\n\n  if (type === typeArr) {\n    for (let i = 0; i < valueLen; i++) {\n      if (!compare(value[i], other[i])) return false;\n    }\n  } else {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (compare(value[key], other[key]) === false) return false;\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * Delays callback execution until next browser repaint\n * Best used for `scroll` and `resize` window events\n * @param {Function} callback - The function to debounce\n */\n\nexport const windowDebouncer = callback => {\n  let request;\n\n  return (...args) => {\n    const context = this;\n\n    if (request) {\n      window.cancelAnimationFrame(request);\n    }\n\n    request = window.requestAnimationFrame(() => {\n      callback.apply(context, args);\n    });\n  };\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport * as ROUTES from '../../constants/routes';\nimport Board from './Board';\nimport { Input } from '../Input';\nimport { List } from '../List';\nimport { CardEditor } from '../CardEditor';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { utils } from '../../utils';\nimport './Board.scss';\n\nclass BoardContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: true,\n      isDragging: false,\n      isCardEditorOpen: false,\n      boardTitle: this.props.boardTitle\n    };\n  }\n\n  componentDidMount() {\n    const {\n      current,\n      fetchListsById,\n      fetchCardsById,\n      firebase,\n      updateBoardsById,\n      updateListsById,\n      updateCardsById,\n      boardId,\n      board,\n      updateListIds\n    } = this.props;\n\n    if (current.boardId !== boardId) {\n      this.props.selectBoard(boardId);\n    }\n\n    fetchListsById(boardId);\n    fetchCardsById(boardId).then(() => {\n      this.setState({\n        isFetching: false\n      });\n    });\n    this.boardObserver = firebase.getBoardDoc(boardId).onSnapshot(snapshot => {\n      const updatedBoard = snapshot.data();\n      if (!utils.isEqual(updatedBoard.listIds, board.listIds)) {\n        updateListIds(boardId, updatedBoard.listIds);\n      }\n    });\n    this.listObserver = firebase.db\n      .collection('lists')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const list = {\n            [change.doc.id]: change.doc.data()\n          };\n          updateListsById(list);\n        });\n      });\n    this.cardObserver = firebase.db\n      .collection('cards')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const card = {\n            [change.doc.id]: {\n              cardId: change.doc.id,\n              ...change.doc.data()\n            }\n          };\n          updateCardsById(card);\n        });\n      });\n    console.log('mounted');\n  }\n\n  componentWillUnmount() {\n    this.boardObserver();\n    this.listObserver();\n    this.cardObserver();\n  }\n\n  onDragStart = () => {\n    this.setState({\n      isDragging: true\n    });\n  };\n\n  onDragEnd = ({ destination, draggableId, source, type }) => {\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    const { firebase } = this.props;\n    if (type === droppableTypes.CARD) {\n      const { listsById } = this.props;\n      const isMovedWithinList = source.droppableId === destination.droppableId;\n      const updatedCardIds = [...listsById[destination.droppableId].cardIds];\n      if (isMovedWithinList) {\n        updatedCardIds.splice(source.index, 1);\n        updatedCardIds.splice(destination.index, 0, draggableId);\n        firebase.updateList(source.droppableId, {\n          cardIds: updatedCardIds\n        });\n      } else {\n        updatedCardIds.splice(destination.index, 0, draggableId);\n        firebase.moveCardToList({\n          cardId: draggableId,\n          origListId: source.droppableId,\n          newListId: destination.droppableId,\n          updatedCardIds\n        });\n      }\n    }\n\n    if (type === droppableTypes.LIST) {\n      const { boardsById, current, reorderLists } = this.props;\n      const { boardId } = current;\n      const updatedListIds = [...boardsById[boardId].listIds];\n      updatedListIds.splice(source.index, 1);\n      updatedListIds.splice(destination.index, 0, draggableId);\n      firebase.updateBoard(boardId, {\n        listIds: updatedListIds\n      });\n      reorderLists(boardId, updatedListIds);\n    }\n\n    this.setState({\n      isDragging: false\n    });\n  };\n\n  toggleCardEditor = () => {\n    this.setState(prevState => ({\n      isCardEditorOpen: !prevState.isCardEditorOpen\n    }));\n  };\n\n  handleCardClick = cardId => {\n    this.props.selectCard(cardId);\n    this.toggleCardEditor();\n  };\n\n  onTitleChange = e => {\n    this.setState({\n      boardTitle: e.target.value\n    });\n  };\n\n  onTitleBlur = e => {\n    const { boardTitle, boardId, firebase } = this.props;\n    const { boardTitle: newBoardTitle } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newBoardTitle !== boardTitle) {\n      firebase.updateBoard(boardId, {\n        boardTitle: newBoardTitle\n      });\n      console.log('updated!');\n    }\n  };\n\n  render() {\n    const { isFetching, isCardEditorOpen } = this.state;\n    const {\n      current,\n      boardsById,\n      listsArray,\n      cardsById,\n      boardId,\n      board\n    } = this.props;\n    if (isFetching) return null;\n    const { cardId } = current;\n    const { boardTitle } = board;\n    const lists = listsArray.map((list, listIndex) => {\n      const { listId, listTitle, cardIds } = list;\n      return (\n        <List\n          listId={listId}\n          key={listId}\n          listIndex={listIndex}\n          listTitle={listTitle}\n          cardIds={cardIds}\n          isFetchingCards={this.state.isFetching}\n          isDragging={this.state.isDragging}\n          onCardClick={this.handleCardClick}\n          boardId={boardId}\n        />\n      );\n    });\n\n    return (\n      <main className=\"board-container\">\n        <Input\n          className=\"board__input--title\"\n          name=\"boardTitle\"\n          type=\"text\"\n          value={boardTitle}\n          onChange={this.onTitleChange}\n          required\n          hideLabel\n          onBlur={this.onTitleBlur}\n        />\n        <DragDropContext\n          onDragEnd={this.onDragEnd}\n          onDragStart={this.onDragStart}\n        >\n          <Board boardId={boardId}>{lists}</Board>\n        </DragDropContext>\n        {isCardEditorOpen && (\n          <CardEditor\n            card={cardsById[cardId]}\n            onCardEditorClose={this.toggleCardEditor}\n          />\n        )}\n      </main>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    current: currentSelectors.getCurrent(state),\n    listsById: listSelectors.getListsById(state),\n    listsArray: listSelectors.getListsArray(state),\n    cardsById: cardSelectors.getCardsById(state),\n    board: boardSelectors.getBoard(state, ownProps.boardId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId)),\n    selectCard: cardId => dispatch(currentActions.selectCard(cardId)),\n    fetchListsById: boardId => dispatch(listActions.fetchListsById(boardId)),\n    updateListsById: list => dispatch(listActions.updateListsById(list)),\n    fetchCardsById: boardId => dispatch(cardActions.fetchCardsById(boardId)),\n    updateCardsById: card => dispatch(cardActions.updateCardsById(card)),\n    reorderLists: (boardId, listIds) =>\n      dispatch(boardActions.reorderLists(boardId, listIds)),\n    updateListIds: (boardId, listIds) =>\n      dispatch(boardActions.updateListIds(boardId, listIds))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardContainer)\n);\n","import React, { Component } from 'react';\nimport { Modal } from '../Modal';\nimport { Input } from '../Input';\n\nconst INITIAL_STATE = {\n  boardTitle: ''\n};\n\nexport default class BoardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { boardTitle } = this.state;\n    const { handleSubmit, onClose } = this.props;\n    this.props.handleSubmit(boardTitle);\n    this.props.onClose();\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { boardTitle } = this.state;\n    return (\n      <Modal onModalClose={this.props.onClose}>\n        <form onSubmit={this.onSubmit}>\n          <Input\n            name=\"boardTitle\"\n            title=\"Board Title\"\n            value={boardTitle}\n            onChange={this.onChange}\n            type=\"text\"\n          />\n          <button type=\"submit\">Create Board</button>\n        </form>\n      </Modal>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { withAuthorization } from '../Session';\nimport * as ROUTES from '../../constants/routes';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { currentSelectors } from '../../ducks/current';\nimport { BoardGridContainer } from '../BoardGrid';\nimport { BoardComposer } from '../Board';\nimport { BoardContainer } from '../Board';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport './Home.scss';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isBoardComposerOpen: false,\n      isFetching: true\n    };\n  }\n\n  componentDidMount() {\n    const userId = this.props.firebase.auth.currentUser.uid;\n    console.log('mounted home');\n    this.props.fetchUserData(userId);\n    this.props.fetchBoardsById(userId).then(() =>\n      this.setState({\n        isFetching: false\n      })\n    );\n  }\n\n  toggleBoardComposer = () => {\n    this.setState(prevState => ({\n      isBoardComposerOpen: !prevState.isBoardComposerOpen\n    }));\n  };\n\n  createBoard = boardTitle => {\n    const userId = this.props.user.userId;\n    this.props.firebase.addBoard({ userId, boardTitle });\n  };\n\n  render() {\n    const { isBoardComposerOpen, isFetching } = this.state;\n    const userId = this.props.user.userId;\n    if (isFetching) return null;\n    return (\n      <>\n        {isBoardComposerOpen && (\n          <BoardComposer\n            onClose={this.toggleBoardComposer}\n            handleSubmit={this.createBoard}\n          />\n        )}\n        <Switch>\n          <Route\n            exact\n            path={ROUTES.HOME}\n            render={() => (\n              <main className=\"main\">\n                <h1>Home</h1>\n                {userId && (\n                  <BoardGridContainer\n                    openBoardComposer={this.toggleBoardComposer}\n                  />\n                )}\n              </main>\n            )}\n          />\n          <Route\n            path={ROUTES.BOARD}\n            render={props => <BoardContainer boardId={props.match.params.id} {...props} />}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    currentBoardId: currentSelectors.getCurrentBoardId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUserData: userId => dispatch(userActions.fetchUserData(userId)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(HomePage)\n);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .passwordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n    const isInvalid = passwordOne === '' || passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"passwordOne\"\n          title=\"New Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          title=\"Confirm New Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"large\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Change My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React from 'react';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport { PasswordChangeForm } from '../PasswordChange';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport './Account.scss';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <main className=\"account\">\n        <h1>Account: {authUser.email}</h1>\n        <section className=\"account__section\">\n        <h2>Forgot your password?</h2>\n          <PasswordForgetForm />\n        </section>\n        <section className=\"account__section\">\n        <h2>Change your password.</h2>\n          <PasswordChangeForm />\n        </section>\n      </main>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(AccountPage);\n","import React, { Component } from 'react';\nimport { Navigation } from '../Navigation';\nimport './Header.scss';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <Navigation />\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport { Navigation } from '../Navigation';\nimport * as ROUTES from '../../constants/routes';\nimport { LandingPage } from '../Landing';\nimport { SignUpPage } from '../SignUp';\nimport { SignInPage } from '../SignIn';\nimport { PasswordForgetPage } from '../PasswordForget';\nimport { HomePage } from '../Home';\nimport { AccountPage } from '../Account';\nimport { AdminPage } from '../Admin';\nimport { withAuthentication } from '../Session';\nimport { Board } from '../Board';\nimport {Header} from '../Header';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Header />\n        <Switch>\n          <Route exact path={ROUTES.LANDING} component={LandingPage} />\n          <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n          <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n          <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n          <Route path={ROUTES.HOME} component={HomePage} />\n          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n          <Route path={ROUTES.ADMIN} component={AdminPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { boardsById } from '../ducks/boards';\nimport { cardsById } from '../ducks/cards';\nimport { listsById } from '../ducks/lists';\nimport { user } from '../ducks/user';\nimport { current } from '../ducks/current';\n\nexport default combineReducers({\n  boardsById,\n  cardsById,\n  listsById,\n  user,\n  current\n});\n","import * as types from './types';\n\nconst current = (state = {}, action) => {\n  switch (action.type) {\n    case types.SELECT_BOARD: {\n      const { boardId } = action;\n      return {\n        ...state,\n        boardId\n      };\n    }\n    case types.SELECT_LIST: {\n      const { listId } = action;\n      return {\n        ...state,\n        listId\n      };\n    }\n    case types.SELECT_CARD: {\n      const { cardId } = action;\n      return {\n        ...state,\n        cardId\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport { current };\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\n\nexport default history;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport 'normalize.css';\nimport './index.scss';\nimport { App } from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { FirebaseContext } from './components/Firebase';\nimport reducers from './store/reducers';\nimport firebase from './store/firebase';\nimport history from './store/history';\n\nconst store = createStore(reducers, {}, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <FirebaseContext.Provider value={firebase}>\n      <Router basename={process.env.PUBLIC_URL} history={history}>\n        <App />\n      </Router>\n    </FirebaseContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}