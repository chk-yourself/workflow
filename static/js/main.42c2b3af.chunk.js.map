{"version":3,"sources":["assets/feather/feather-sprite.svg","constants/routes.js","components/Firebase/context.js","components/Firebase/Firebase.js","components/Input/Input.js","components/Button/Button.js","pages/SignUp/SignUpForm.js","components/UserFormPage/UserFormPage.js","pages/SignUp/SignUp.js","pages/SignIn/SignInForm.js","pages/PasswordForget/PasswordForgetForm.js","pages/PasswordForget/PasswordForget.js","pages/SignIn/SignIn.js","components/Session/context.js","store/firebase.js","ducks/tasks/actions.js","ducks/tasks/types.js","ducks/currentUser/actions.js","ducks/currentUser/types.js","ducks/currentUser/selectors.js","ducks/currentUser/reducer.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","ducks/users/actions.js","ducks/users/types.js","ducks/users/selectors.js","ducks/users/reducer.js","components/ProjectGrid/ProjectGrid.js","ducks/lists/actions.js","ducks/lists/types.js","ducks/subtasks/actions.js","ducks/subtasks/types.js","ducks/projects/actions.js","ducks/projects/types.js","ducks/projects/selectors.js","ducks/projects/reducer.js","ducks/selectedProject/index.js","components/Icon/Icon.js","components/ProjectGrid/ProjectGridContainer.js","components/withOutsideClick/withOutsideClick.js","components/Modal/Modal.js","components/ProjectComposer/ProjectComposer.js","constants/droppableTypes.js","components/ListComposer/ListComposer.js","components/Board/Board.js","ducks/selectedTask/index.js","ducks/lists/selectors.js","ducks/lists/reducer.js","ducks/tasks/selectors.js","ducks/tasks/reducer.js","ducks/subtasks/selectors.js","ducks/subtasks/reducer.js","constants/keys.js","components/TaskComposer/TaskComposer.js","components/Textarea/Textarea.js","components/CardComposer/CardComposer.js","components/Menu/Menu.js","components/Menu/MenuItem.js","components/Popover/Popover.js","components/Popover/PopoverWrapper.js","components/Tag/Tag.jsx","components/Avatar/Avatar.js","utils/date/constants.js","utils/date/index.js","components/Card/Card.js","components/Checkbox/Checkbox.js","components/Task/Task.js","components/Task/DraggableTask.js","components/Tasks/Tasks.js","components/List/List.js","ducks/comments/actions.js","ducks/comments/types.js","ducks/comments/selectors.js","ducks/comments/reducer.js","components/Toolbar/Toolbar.jsx","components/TaskEditor/TaskEditorAssignMember.js","components/TaskEditor/TaskEditorSection.js","components/MemberSearch/MemberSearch.js","components/TaskEditor/TaskEditorMoreActions.js","components/Subtask/Subtask.js","components/Subtasks/Subtasks.js","components/Comment/Comment.js","components/Radio/Radio.js","components/ColorPicker/ColorPicker.js","components/TagsInput/TagsInput.js","components/Calendar/Calendar.js","components/DatePicker/DatePicker.js","components/TaskEditor/TaskEditorPane.js","components/ProjectIcon/ProjectIcon.js","components/TaskEditor/TaskEditor.js","components/Board/BoardContainer.js","components/Main/Main.jsx","components/Dashboard/DashboardPanel.js","components/Dashboard/TasksDueSoon.js","components/Dashboard/Dashboard.js","components/ExpansionPanel/ExpansionPanelHeader.jsx","components/ExpansionPanel/ExpansionPanelContent.jsx","components/ExpansionPanel/ExpansionPanel.jsx","components/Folder/Folder.jsx","components/UserTasks/UserTasks.jsx","pages/Home/Home.js","pages/PasswordChange/PasswordChangeForm.js","pages/Account/Account.js","pages/Admin/Admin.js","components/Logo/Logo.js","components/Nav/Navbar.js","components/Nav/Sidebar.js","components/Nav/NavLinks.js","components/SignOutButton/SignOutButton.js","components/SearchBar/SearchBar.js","components/Topbar/Topbar.js","components/Header/Header.jsx","pages/App/App.jsx","serviceWorker.js","store/reducers.js","store/history.js","store/index.js","index.js"],"names":["module","exports","__webpack_require__","p","HOME","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","signInWithGoogle","provider","auth","GoogleAuthProvider","addScope","signInWithPopup","then","result","credential","token","accessToken","console","log","user","catch","error","errorCode","code","message","email","alert","signInWithGithub","GithubAuthProvider","signInWithRedirect","createUserWithEmailAndPassword","password","signInWithEmailAndPassword","signOut","passwordReset","sendPasswordResetEmail","passwordUpdate","newPassword","currentUser","updatePassword","getTimestamp","firestore","FieldValue","serverTimestamp","addToArray","value","arrayUnion","removeFromArray","arrayRemove","deleteField","delete","getDocRef","collection","doc","subcollection","arguments","length","undefined","subdoc","docRef","db","concat","createBatch","batch","queryCollection","collectionName","_ref","_ref2","slicedToArray","field","comparisonOperator","where","updateDoc","_ref3","_ref4","newValue","update","objectSpread","lastUpdatedAt","updateBatch","ref","getUserDoc","userId","addUser","_ref5","name","username","_ref5$projectIds","projectIds","_ref5$photoURL","photoURL","userRef","newFolderRef","todayFolderRef","upcomingFolderRef","laterFolderRef","set","folderIds","taskIds","commit","updateUser","addTag","_ref6","taskId","_ref6$color","color","projectCount","userCount","userTagRef","taskRef","getTaskDoc","tags","count","merge","projectRef","defineProperty","removeTag","_ref7","_ref7$taskId","shouldCommit","setTagColor","_ref8","tag","getProjectDoc","updateProject","updateProjectName","_ref9","get","snapshot","docs","forEach","projectName","addProject","_ref10","_ref10$color","_ref10$view","view","_ref10$isPrivate","isPrivate","add","createdAt","listIds","createdBy","memberIds","notes","isFavorited","id","getListDoc","listId","updateList","updateListName","_ref11","listRef","listName","addList","_ref12","_ref12$projectId","_ref12$userId","deleteList","_ref13","addTask","_ref14","_ref14$folderId","folderId","isFolderItem","commentIds","subtaskIds","isCompleted","completedAt","dueDate","assignedTo","folders","ownerId","updateTask","removeAssignee","_ref16","folderRef","addAssignee","_ref17","_batch$update","deleteTask","_ref18","subtaskId","deleteSubtask","commentId","commentRef","moveTaskToList","_ref19","origListId","newListId","updatedTaskIds","origListRef","newListRef","moveTaskToFolder","_ref20","_batch$update2","origFolderId","newFolderId","origFolderRef","getSubtaskDoc","addSubtask","_ref21","_ref21$memberIds","_ref21$projectId","_ref21$taskId","_ref21$dueDate","toConsumableArray","updateSubtask","_ref22","_ref22$taskId","subtaskRef","addComment","_ref23","_ref23$memberIds","content","isPinned","from","to","likes","initializeApp","Input","_ref$className","className","type","onFocus","onChange","onInput","placeholder","isRequired","onBlur","autoComplete","inputRef","hideLabel","label","labelClass","onKeyDown","maxLength","minLength","isReadOnly","Fragment","htmlFor","required","readOnly","tabIndex","defaultProps","Button","children","_ref$type","onClick","_ref$color","_ref$size","size","_ref$variant","variant","disabled","_ref$iconOnly","iconOnly","buttonRef","objectWithoutProperties","INITIAL_STATE","passwordOne","passwordTwo","SignUpForm","possibleConstructorReturn","getPrototypeOf","call","onSubmit","e","_this$state","state","_this$props","history","authUser","uid","setState","push","ROUTES","preventDefault","target","_this$state2","isInvalid","components_Input_Input","components_Button_Button","compose","withRouter","UserFormPage","title","SignUpLink","Link","SignUpPage","components_UserFormPage_UserFormPage","SignUp_SignUpForm","SignInForm","enableGoogleLogin","PasswordForgetForm","PasswordForgetLink","PasswordForgetPage","PasswordForget_PasswordForgetForm","SignInPage","SignIn_SignInForm","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","AuthUserContext","loadTasksById","tasksById","loadUserTasks","taskData","removeTask","updateTasksById","task","removeTaskTag","asyncToGenerator","regenerator_default","mark","_callee","dispatch","getState","_getState","projectsById","userTags","projectTags","isUserTag","wrap","_context","prev","next","t0","stop","_x","_x2","apply","_ref7$listId","_callee2","getStore","_getStore$tasksById$t","_context2","_x3","_x4","fetchProjectTasks","_callee3","_context3","tasks","data","sent","_x5","fetchUserTasks","_callee5","_context5","_x7","syncUserTasks","_callee8","_context8","onSnapshot","_callee7","querySnapshot","_context7","docChanges","_callee6","change","_ref15","changeType","_context6","Promise","all","abrupt","_x11","_x10","_x8","_x9","syncProjectTasks","_callee11","_context11","_callee10","_context10","_callee9","_getState2","_context9","_x15","_x14","_x12","_x13","setCurrentUser","loadUserTags","fetchCurrentUserData","fetchUserTags","loadFolders","fetchFolders","foldersById","addFolder","folderData","updateFolder","deleteFolder","reorderFolders","loadTasksDueSoon","tasksDueSoon","createTag","tagId","tagData","updateTag","deleteTag","fetchTasksDueWithinDays","days","startingDate","Date","endingDate","setHours","timeEnd","setDate","getDate","_callee4","_context4","orderBy","addTaskDueSoon","deleteTaskDueSoon","updateTaskDueSoon","syncFolders","_x6","syncUserTags","getCurrentUser","getCurrentUserId","getFolders","getFolderIds","getFoldersArray","keys","map","isDefault","getFolder","getTasksDueSoonById","getTasksDueSoonArr","getMergedTags","selectedProject","usersById","mergedTags","action","_state$tags","restOfTags","_toPropertyKey","_state$folders","restOfFolders","_state$tasksDueSoon","restOfTasks","withAuthentication","WithAuthentication","_React$Component","inherits","createClass","key","_this2","listener","onAuthStateChanged","Session_context","Provider","connect","currentUserActions","withAuthorization","condition","WithAuthorization","loadUserData","loadUsersById","fetchUsersById","users","fetchUserData","userData","deleteUser","getUsersById","getUserData","getUserTaskIds","getUsersArray","getMembersArray","memberId","reducer_toPropertyKey","ProjectTile","ProjectGrid","loadListsById","listsById","listData","removeList","_getStore","_tasksById$taskId","fetchListsById","lists","fetchUserLists","syncProjectLists","createList","loadSubtasksById","subtasksById","fetchSubtasksById","subtasks","updateSubtasksById","subtask","fetchProjectSubtasks","fetchTaskSubtasks","fetchUserSubtasks","subtaskData","loadProjectsById","loadProject","projectData","fetchProjectsById","projects","fetchProjectLists","projectLists","projectTasks","projectSubtasks","fetchProjectContent","project","reorderLists","updateProjectTags","getProjectsById","getProjectsArray","getProject","getProjectTags","getProjectName","getProjectColor","filter","selectProject","getSelectedProjectId","Icon","width","height","xmlns","xmlnsXlink","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","xlinkHref","featherIcons","ProjectGridContainer","projectObserver","_this$props2","projectsArray","projectTiles","ProjectGrid_ProjectTile","ProjectGrid_ProjectGrid","openProjectComposer","components_Icon_Icon","ownProps","projectSelectors","projectActions","selectProjectAction","withOutsideClick","WrappedComponent","_Component","WithOutsideClick","handleTouch","isTouchEnabled","document","removeEventListener","handleOutsideClick","addEventListener","componentEl","Error","contains","componentInstance","current","onOutsideClick","createRef","innerRef","el","Modal","onModalClose","onModalClick","_this$props$size","classes","modal","button","projectTitle","ProjectComposer","handleSubmit","onClose","components_Modal_Modal","LIST","TASK","FOLDER","isActive","ListComposer","resetForm","onReset","Board","react_beautiful_dnd_esm","droppableId","droppableTypes","direction","provided","droppableProps","components_ListComposer_ListComposer","selectTask","getSelectedTaskId","selectedTask","getListsById","getListName","getSelectedProjectLists","getProjectLists","lists_reducer_toPropertyKey","getTasksById","getListTasks","getFolderTasks","getSimpleTasks","reduce","getTaskTags","taskTags","taskTag","tasks_reducer_toPropertyKey","getSubtasksById","getSubtasksArray","getSimpleSubtasks","_subtasksById$subtask","getActiveSubtasks","getCompletedSubtasks","includes","subtasks_reducer_toPropertyKey","BACKSPACE","ENTER","TAB","ARROW_DOWN","ARROW_UP","TaskComposer","currentUserSelectors","Textarea","autoHeightResize","isAutoHeightResizeEnabled","textareaEl","style","scrollHeight","onDragStart","CardComposer","Textarea_Textarea_Textarea","updateProjectsById","Menu","menuRef","MenuItem","Popover","PopoverWrapper","onPopoverClose","toggleOpen","onButtonClick","prevState","handleClose","matches","alignInner","onWrapperClick","alignOuter","buttonProps","anchorEl","popoverWrapperStyle","offsetTop","offsetLeft","position","top","wrapper","Popover_Popover","popover","align","Tag","onDelete","tagRef","Avatar","getUserInitials","fullName","split","charAt","join","toUpperCase","imgSrc","imgProps","avatar","src","alt","img","backgroundColor","MONTHS","long","short","daysTotal","WEEK_DAYS","narrow","getMonthDays","monthIndex","year","isLeapYear","getPrevMonth","month","getNextMonth","getMonthDates","monthDays","monthFirstDay","getDay","getMonthFirstDay","_getPrevMonth","prevMonth","prevMonthYear","prevMonthDays","daysFromPrevMonth","daysFromNextMonth","prevMonthDates","Array","n","i","day","thisMonthDates","nextMonthDates","isDate","date","prototype","toString","getSimpleDate","dateObj","getMonth","getFullYear","isSimpleDate","isSameDate","base","dateDay","dateMonth","dateYear","baseDay","baseMonth","baseYear","zeroPad","padStart","toSimpleDateString","simpleDate","toSimpleDateObj","dateString","dateArr","isSDSFormat","test","isPriorDate","toDateString","options","useRelative","format","weekday","isToday","today","isYesterday","isTomorrow","num","timeStart","isWithinDays","isThisYear","slice","trim","CardDetail","icon","Card","handleCardClick","onCardClick","nextProps","indexOf","taskIndex","completedSubtasks","taskMembers","dueDateStr","toDate","isDueToday","isDueTmrw","isPastDue","draggableId","index","draggableProps","dragHandleProps","headerEl","components_Tag_Tag","Card_CardDetail","member","Avatar_Avatar_Avatar","taskSelectors","subtaskSelectors","userSelectors","Checkbox","isChecked","checked","Task","isFocused","prevPropsName","newName","toggleCompleted","_this$props3","handleTaskClick","_this$props4","onTaskClick","_this$props5","listStyle","components_Checkbox_Checkbox","DraggableTask","components_Task_Task","Tasks","scrollToBottom","listEnd","scrollIntoView","behavior","prevProps","isBoardView","inner","components_Card_Card","Task_DraggableTask","minHeight","isDraggingOver","float","clear","List","handleListDelete","listIndex","isFetchingTasks","isRestricted","PopoverWrapper_PopoverWrapper","components_Menu_Menu","Menu_MenuItem","href","Tasks_Tasks","components_CardComposer_CardComposer","components_TaskComposer_TaskComposer","listActions","loadCommentsById","commentsById","fetchCommentsById","comments","updateCommentsById","comment","fetchTaskComments","fetchUserComments","commentData","deleteComment","updateComment","getCommentsById","getComment","getCommentsArray","comments_reducer_toPropertyKey","Toolbar","TaskEditorAssignMember","TaskEditorSection","MemberSearch","query","selectedMember","selectedIndex","filteredList","memberSearchEl","matchUser","regExp","RegExp","newIndex","persistSelectedMember","onMemberClick","nextIndex","prevIndex","inputEl","focus","assignedMembers","_this$state3","isAssigned","TaskEditorMoreActions","onMenuClick","data-action","appRoot","getElementById","Subtask","portal","appendChild","removeChild","isDragging","ReactDOM","createPortal","Subtasks","isFetching","selectedProjectId","moveSubtask","destination","source","updatedSubtaskIds","splice","subtaskObserver","onDragEnd","components_Subtask_Subtask","subtaskActions","Comment","secondsElapsed","tick","handleLike","currentUserId","secondsSinceCreation","Math","floor","now","getTime","interval","setInterval","clearInterval","likesCount","dateCreated","timeCreated","toLocaleTimeString","hour","minute","hour12","dateCreatedString","Radio","_ref$classes","radio","ColorPicker","selectedColor","handleColorChange","selectColor","components_Radio_Radio","TagsInput","selectedTag","focusedTag","hasExactMatch","matchTag","tagSuggestions","findIndex","item","persistSelectedTag","assignedTags","handleTagDelete","isColorPickerActive","currentTag","hasTags","colorPickerStyle","currentTagEl","_this$currentTagEl","offsetWidth","offsetHeight","left","ColorPicker_ColorPicker_ColorPicker","Calendar","isMonthsDropdownActive","isYearsDropdownActive","goToNextMonth","onMonthClick","goToPrevMonth","toggleMonthsDropdown","toggleYearsDropdown","selectMonth","selectYear","onYearClick","selectedDate","onDayClick","dates","years","startingYear","getNextYears","calendar","yearOption","monthOption","weekDay","isSelectedDate","DatePicker","currentMonth","currentYear","selectDate","newDate","setCurrentMonth","setCurrentYear","updateDateString","currentDueDate","clearDueDate","display","Calendar_Calendar_Calendar","TaskEditorPane","ProjectIcon","TaskEditorWrapper","handleTaskEditorClose","handleClick","components_TaskEditor_TaskEditorPane","TaskEditor","taskKey","currentValue","updatedValue","currentFocus","newComment","commentFormEl","newSubtaskFormEl","handleMoreActions","dataset","assignMember","toggleColorPicker","isProjectTag","projectTag","userTag","_this$props6","_this$props7","setDueDate","_this$props8","toggleDatePicker","isDatePickerActive","_this$props9","newSubtask","membersListButton","_this$props10","commentObserver","_this3","_this$props11","commentsArray","usersArray","membersArray","projectColor","hasSubtasks","hasComments","isNewCommentInvalid","isNewSubtaskInvalid","commentFormIsFocused","newSubtaskFormIsFocused","taskDueDate","TaskEditor_TaskEditorWrapper","components_Toolbar_Toolbar","TaskEditorAssignMember_TaskEditorAssignMember","MemberSearch_MemberSearch_MemberSearch","TaskEditor_TaskEditorMoreActions","TaskEditor_TaskEditorSection","components_ProjectIcon_ProjectIcon","DatePicker_DatePicker_DatePicker","datePickerEl","click","TagsInput_TagsInput_TagsInput","components_Subtasks_Subtasks","components_Comment_Comment","commentSelectors","taskActions","commentActions","syncTaskComments","BoardContainer","isMovedWithinList","updatedListIds","toggleTaskEditor","isTaskEditorOpen","onNameChange","onNameBlur","newProjectName","listObserver","taskObserver","updatedProject","selectedTaskId","components_Board_Board","list","components_List_List","components_TaskEditor_TaskEditor","listSelectors","selectTaskAction","Main","main","DashboardPanel","TasksDueSoon","Dashboard_DashboardPanel","Dashboard","toggleProjectComposer","Dashboard_TasksDueSoon","ProjectGrid_ProjectGridContainer","ExpansionPanelHeader","role","ExpansionPanelContent","isExpanded","toggleContent","header","propsIsExpanded","panel","aria-expanded","ExpansionPanel_ExpansionPanelHeader","ExpansionPanel_ExpansionPanelContent","Folder","isDragDisabled","UserTasks","origIndex","isMovedWithinFolder","updatedFolderIds","folderObserver","filters","components_Main_Main","folder","components_Folder_Folder","HomePage","isProjectComposerOpen","createProject","tagsObserver","userObserver","ProjectComposer_ProjectComposer_ProjectComposer","Switch","Route","exact","path","render","components_Dashboard_Dashboard","Board_BoardContainer","match","params","components_UserTasks_UserTasks","userActions","PasswordChangeForm","PasswordChange_PasswordChangeForm","AdminPage","loading","getCurrentUserData","Logo","Navbar","viewportWidth","window","innerWidth","isMobileNavVisible","handleResize","toggleMobileNavVisibility","minWidth","navLinksEl","isMobileView","navbar","navEl","components_Logo_Logo","links","SidebarIcon","Sidebar","onToggle","NavLinksNonAuth","NavLink","NavLinksAuth","Sidebar_SidebarIcon","SearchBar","stopPropagation","Topbar","SearchBar_SearchBar_SearchBar","components_SignOutButton_SignOutButton","Header","isNavExpanded","toggleNav","Sidebar_Sidebar","NavLinks_NavLinksAuth","components_Topbar_Topbar","Navbar_Navbar","NavLinks_NavLinksNonAuth","Header_Header_Header","component","LandingPage","Home_Home","AccountPage","Boolean","location","hostname","combineReducers","createBrowserHistory","basename","store","createStore","reducers","applyMiddleware","thunk","es","context","Router","pages_App_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.42c2b3af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/feather-sprite.0ed672ce.svg\";","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const APP = '/0/';\nexport const HOME = '/0/home/:id';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const PROJECT = '/0/project/:id';\nexport const USER_PROJECTS = '/0/:id/projects';\nexport const USER_TASKS = '/0/:id/tasks';\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import firebase from 'firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\nclass Firebase {\n  constructor() {\n    firebase.initializeApp(config);\n    this.auth = firebase.auth();\n    this.db = firebase.firestore();\n  }\n\n  // Auth API\n\n  get currentUser() {\n    return this.auth.currentUser;\n  }\n\n  signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    provider.addScope('https://www.googleapis.com/auth/contacts.readonly');\n    this.auth\n      .signInWithPopup(provider)\n      .then(result => {\n        if (result.credential) {\n          const token = result.credential.accessToken;\n          console.log(token);\n          const user = result.user;\n        }\n      })\n      .catch(error => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        const email = error.email;\n        const credential = error.credential;\n\n        if (errorCode === 'auth/account-exists-with-different-credential') {\n          alert(\n            'You have already signed up with a different auth provider for that email.'\n          );\n        } else {\n          console.error(error);\n        }\n      });\n  };\n\n  signInWithGithub = () => {\n    const provider = new firebase.auth.GithubAuthProvider();\n    this.auth.signInWithRedirect(provider);\n  };\n\n  createUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  signInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  signOut = () => this.auth.signOut();\n\n  passwordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  passwordUpdate = newPassword =>\n    this.auth.currentUser.updatePassword(newPassword);\n\n  // Utility API\n\n  getTimestamp = () => firebase.firestore.FieldValue.serverTimestamp();\n\n  addToArray = value => firebase.firestore.FieldValue.arrayUnion(value);\n\n  removeFromArray = value => firebase.firestore.FieldValue.arrayRemove(value);\n\n  deleteField = () => firebase.firestore.FieldValue.delete();\n\n  getDocRef = (collection, doc, subcollection = null, subdoc = null) => {\n    const docRef = this.db.doc(`${collection}/${doc}`);\n    return subcollection && subdoc\n      ? docRef.collection(subcollection).doc(subdoc)\n      : docRef;\n  };\n\n  createBatch = () => this.db.batch();\n\n  queryCollection = (collectionName, [field, comparisonOperator, value]) => {\n    return this.db\n      .collection(collectionName)\n      .where(field, comparisonOperator, value);\n  };\n\n  updateDoc = ([collection, doc, subcollection, subdoc], newValue = {}) =>\n    this.getDocRef(collection, doc, subcollection, subdoc).update({\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  updateBatch = (batch, ref, newValue = {}) => {\n    return batch.update(ref, {\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  // User API\n\n  getUserDoc = userId => this.db.collection('users').doc(userId);\n\n  addUser = ({\n    userId,\n    name,\n    username,\n    email,\n    projectIds = [],\n    photoURL = null\n  }) => {\n    const batch = this.db.batch();\n    const userRef = this.getDocRef('users', userId);\n    const newFolderRef = this.getDocRef('users', userId, 'folders', '0');\n    const todayFolderRef = this.getDocRef('users', userId, 'folders', '1');\n    const upcomingFolderRef = this.getDocRef('users', userId, 'folders', '2');\n    const laterFolderRef = this.getDocRef('users', userId, 'folders', '3');\n\n    batch.set(userRef, {\n      userId,\n      name,\n      username,\n      email,\n      projectIds,\n      photoURL,\n      folderIds: [0, 1, 2, 3]\n    });\n\n    batch.set(newFolderRef, {\n      name: 'New Tasks',\n      taskIds: []\n    });\n\n    batch.set(todayFolderRef, {\n      name: 'Today',\n      taskIds: []\n    });\n\n    batch.set(upcomingFolderRef, {\n      name: 'Upcoming',\n      taskIds: []\n    });\n\n    batch.set(laterFolderRef, {\n      name: 'Later',\n      taskIds: []\n    });\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log('User added');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  updateUser = (userId, newValue = {}) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .update(newValue);\n\n  // Tags API\n\n  addTag = ({ taskId, userId, name, projectId, color = 'default', projectCount, userCount }) => {\n    const batch = this.db.batch();\n    const userTagRef = this.getDocRef('users', userId, 'tags', name);\n    const taskRef = this.getTaskDoc(taskId);\n\n    batch.update(taskRef, {\n      tags: this.addToArray(name),\n      lastUpdatedAt: this.getTimestamp()\n    });\n\n    batch.set(\n      userTagRef,\n      {\n        name,\n        color,\n        count: userCount\n      },\n      { merge: true }\n    );\n\n    if (projectId) {\n      const projectRef = this.getDocRef('projects', projectId);\n\n      batch.set(\n        projectRef,\n        {\n          tags: {\n            [name]: {\n              name,\n              color,\n              count: projectCount\n            }\n          },\n          lastUpdatedAt: this.getTimestamp()\n        },\n        { merge: true }\n      );\n    }\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log('tag added');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  removeTag = ({ taskId = null, name, userId, userCount, projectId, projectCount }, batch = this.createBatch(), shouldCommit = true) => {\n    if (taskId) {\n      const taskRef = this.getDocRef('tasks', taskId);\n    this.updateBatch(batch, taskRef, {\n      tags: this.removeFromArray(name)\n    });\n    }\n\n    if (userCount !== null) {\n      const userTagRef = this.getDocRef('users', userId, 'tags', name);\n      if (userCount > 0) {\n        this.updateBatch(batch, userTagRef, {\n          count: userCount\n        });\n      } else {\n        batch.delete(userTagRef);\n      }\n    }\n\n    if (projectId) {\n      const projectRef = this.getDocRef('projects', projectId);\n      console.log({ projectCount });\n      if (projectCount < 1) {\n        this.updateBatch(batch, projectRef, {\n          [`tags.${name}`]: this.deleteField()\n        });\n      } else {\n        this.updateBatch(batch, projectRef, {\n          [`tags.${name}.count`]: projectCount\n        });\n      }\n    }\n    if (shouldCommit) {\n      return batch\n      .commit()\n      .then(() => {\n        console.log('Tag deleted');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n    }\n  };\n\n  setTagColor = ({ userId, projectId, tag, color }) => {\n    const batch = this.db.batch();\n    const userTagRef = this.getDocRef('users', userId, 'tags', tag);\n    if (projectId) {\n      const projectRef = this.getProjectDoc(projectId);\n      batch.set(\n        projectRef,\n        {\n          tags: {\n            [tag]: {\n              color\n            }\n          },\n          lastUpdatedAt: this.getTimestamp()\n        },\n        { merge: true }\n      );\n    }\n\n    this.updateBatch(batch, userTagRef, {\n      color\n    });\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log('tag color updated');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  // Project API\n\n  getProjectDoc = projectId => this.db.collection('projects').doc(projectId);\n\n  updateProject = (projectId, newValue = {}) =>\n    this.getProjectDoc(projectId).update({\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  updateProjectName = ({ projectId, name }) => {\n    const batch = this.db.batch();\n    const projectRef = this.getProjectDoc(projectId);\n\n    // Delete list\n    batch.update(projectRef, {\n      name,\n      lastUpdatedAt: this.getTimestamp()\n    });\n\n    // Update tasks assigned to list\n    this.db\n      .collection('tasks')\n      .where('projectId', '==', projectId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.update(doc.ref, {\n            projectName: name\n          });\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('project name updated');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  addProject = ({\n    userId,\n    name,\n    color = 'default',\n    view = 'board',\n    isPrivate = false\n  }) => {\n    this.db\n      .collection('projects')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastUpdatedAt: null,\n        listIds: [],\n        createdBy: userId,\n        memberIds: [userId],\n        notes: '',\n        isFavorited: false,\n        color,\n        view,\n        isPrivate,\n        name\n      })\n      .then(ref => {\n        this.updateUser(userId, {\n          projectIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  // List API\n\n  getListDoc = listId => this.db.collection('lists').doc(listId);\n\n  updateList = (listId, newValue = {}) =>\n    this.getListDoc(listId).update({\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  updateListName = ({ listId, name }) => {\n    const batch = this.db.batch();\n    const listRef = this.getListDoc(listId);\n\n    // Delete list\n    batch.update(listRef, {\n      name,\n      lastUpdatedAt: this.getTimestamp()\n    });\n\n    // Update tasks assigned to list\n    this.db\n      .collection('tasks')\n      .where('listId', '==', listId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.update(doc.ref, {\n            listName: name\n          });\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('list name updated');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  addList = ({ name, projectId = null, userId = null }) => {\n    this.db\n      .collection('lists')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastUpdatedAt: null,\n        taskIds: [],\n        projectId,\n        name\n      })\n      .then(ref => {\n        if (projectId) {\n          this.updateProject(projectId, {\n            listIds: this.addToArray(ref.id)\n          });\n        }\n        if (userId) {\n          this.updateUser(userId, {\n            listIds: this.addToArray(ref.id)\n          });\n        }\n      });\n  };\n\n  deleteList = ({ listId, projectId }) => {\n    const batch = this.db.batch();\n    const listRef = this.getListDoc(listId);\n    const projectRef = this.getProjectDoc(projectId);\n\n    // Delete list\n    batch.delete(listRef);\n\n    // Remove list id from project\n    batch.update(projectRef, {\n      listIds: this.removeFromArray(listId),\n      lastUpdatedAt: this.getTimestamp()\n    });\n\n    // Delete tasks assigned to list\n    this.db\n      .collection('tasks')\n      .where('listId', '==', listId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('list deleted');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  // Task API\n\n  getTaskDoc = taskId => this.db.collection('tasks').doc(taskId);\n\n  addTask = ({\n    name,\n    projectId,\n    projectName,\n    listId,\n    listName,\n    userId,\n    folderId = null\n  }) => {\n    const isFolderItem = folderId && userId;\n\n    this.db\n      .collection('tasks')\n      .add({\n        createdBy: userId,\n        createdAt: this.getTimestamp(),\n        lastUpdatedAt: null,\n        commentIds: [],\n        subtaskIds: [],\n        isCompleted: false,\n        completedAt: null,\n        dueDate: null,\n        notes: '',\n        assignedTo: isFolderItem ? [userId] : [],\n        folders: isFolderItem\n          ? {\n              [userId]: folderId\n            }\n          : {},\n        ownerId: isFolderItem ? userId : null,\n        listId,\n        listName,\n        projectId,\n        projectName,\n        name\n      })\n      .then(ref => {\n        if (isFolderItem) {\n          this.updateDoc(['users', userId, 'folders', folderId], {\n            taskIds: this.addToArray(ref.id)\n          });\n        } else {\n          this.updateDoc(['lists', listId], {\n            taskIds: this.addToArray(ref.id)\n          });\n        }\n      });\n  };\n\n  updateTask = (taskId, newValue = {}) => {\n    this.getTaskDoc(taskId).update({\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  removeAssignee = ({ taskId, userId, folderId }, batch = this.createBatch(), shouldCommit = true) => {\n    const folderRef = this.getDocRef('users', userId, 'folders', folderId);\n    this.updateBatch(batch, folderRef, {\n      taskIds: this.removeFromArray(taskId)\n    });\n\n    if (shouldCommit) {\n      const taskRef = this.getDocRef('tasks', taskId);\n      this.updateBatch(batch, taskRef, {\n        assignedTo: this.removeFromArray(userId),\n        [`folders.${userId}`]: this.deleteField()\n      });\n  \n      return batch\n        .commit()\n        .then(() => {\n          console.log('Removed member from task');\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    }\n  };\n\n  addAssignee = ({ taskId, projectId, userId }) => {\n    const batch = this.db.batch();\n    const taskRef = this.getDocRef('tasks', taskId);\n    const projectRef = this.getDocRef('projects', projectId);\n    const newFolderRef = this.getDocRef('users', userId, 'folders', '0');\n    batch.update(newFolderRef, {\n      taskIds: this.addToArray(taskId),\n      lastUpdatedAt: this.getTimestamp()\n    });\n    batch.update(taskRef, {\n      assignedTo: this.addToArray(userId),\n      [`folders.${userId}`]: '0',\n      lastUpdatedAt: this.getTimestamp()\n    });\n    batch.update(projectRef, {\n      memberIds: this.addToArray(userId),\n      lastUpdatedAt: this.getTimestamp()\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('Assigned task to member');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  deleteTask = (\n    { taskId, listId, assignedTo, subtaskIds, commentIds, folders },\n    batch = this.createBatch(),\n    shouldCommit = true\n  ) => {\n    const taskRef = this.getDocRef('tasks', taskId);\n    batch.delete(taskRef);\n\n    if (listId) {\n      const listRef = this.getDocRef('lists', listId);\n      this.updateBatch(batch, listRef, {\n        taskIds: this.removeFromArray(taskId)\n      });\n    }\n\n    // Delete subtasks\n    if (subtaskIds.length > 0) {\n      subtaskIds.forEach(subtaskId => {\n        this.deleteSubtask({ subtaskId }, batch, false);\n      });\n      console.log('1. Subtasks deleted.');\n    }\n\n    // Delete task assignments\n    if (assignedTo.length > 0) {\n      assignedTo.forEach(userId => {\n        const folderId = folders[userId];\n        const folderRef = this.getDocRef('users', userId, 'folders', folderId);\n        this.updateBatch(batch, folderRef, {\n          taskIds: this.removeFromArray(taskId)\n        });\n      });\n      console.log('2. Removed task assignments.');\n    }\n\n    // Delete comments\n    if (commentIds.length > 0) {\n      commentIds.forEach(commentId => {\n        const commentRef = this.getDocRef('comments', commentId);\n        batch.delete(commentRef);\n      });\n      console.log('3. Task comments deleted.');\n    }\n\n    if (shouldCommit) {\n      return batch\n      .commit()\n      .then(() => {\n        console.log('task deleted');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n    }\n  };\n\n  moveTaskToList = ({ taskId, origListId, newListId, updatedTaskIds }) => {\n    const batch = this.db.batch();\n    const taskRef = this.getTaskDoc(taskId);\n    const origListRef = this.getListDoc(origListId);\n    const newListRef = this.getListDoc(newListId);\n    batch.update(taskRef, {\n      listId: newListId,\n      lastUpdatedAt: this.getTimestamp()\n    });\n    batch.update(origListRef, {\n      taskIds: this.removeFromArray(taskId),\n      lastUpdatedAt: this.getTimestamp()\n    });\n    batch.update(newListRef, {\n      taskIds: updatedTaskIds,\n      lastUpdatedAt: this.getTimestamp()\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('task moved');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  moveTaskToFolder = ({\n    userId,\n    taskId,\n    origFolderId,\n    newFolderId,\n    updatedTaskIds\n  }) => {\n    const batch = this.db.batch();\n    const taskRef = this.getDocRef('tasks', taskId);\n    const origFolderRef = this.getDocRef(\n      'users',\n      userId,\n      'folders',\n      origFolderId\n    );\n    const newFolderRef = this.getDocRef(\n      'users',\n      userId,\n      'folders',\n      newFolderId\n    );\n    batch.update(taskRef, {\n      [`folders.${userId}`]: newFolderId,\n      lastUpdatedAt: this.getTimestamp()\n    });\n    batch.update(origFolderRef, {\n      taskIds: this.removeFromArray(taskId),\n      lastUpdatedAt: this.getTimestamp()\n    });\n    batch.update(newFolderRef, {\n      taskIds: updatedTaskIds,\n      lastUpdatedAt: this.getTimestamp()\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('Task moved to new folder');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  // Subtask API\n\n  getSubtaskDoc = subtaskId => this.db.collection('subtasks').doc(subtaskId);\n\n  addSubtask = ({\n    userId,\n    name,\n    memberIds = [],\n    projectId = null,\n    taskId = null,\n    dueDate = null\n  }) => {\n    this.db\n      .collection('subtasks')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastUpdatedAt: this.getTimestamp(),\n        isCompleted: false,\n        createdBy: userId,\n        assignedTo: [userId, ...memberIds],\n        completedAt: null,\n        dueDate,\n        projectId,\n        taskId,\n        name\n      })\n      .then(ref => {\n        if (taskId === null) return;\n        this.updateTask(taskId, {\n          subtaskIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  updateSubtask = (subtaskId, newValue = {}) => {\n    this.getSubtaskDoc(subtaskId).update({\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  deleteSubtask = (\n    { subtaskId, taskId = null },\n    batch = this.createBatch(),\n    shouldCommit = true\n  ) => {\n    const subtaskRef = this.getDocRef('subtasks', subtaskId);\n    batch.delete(subtaskRef);\n\n    if (taskId) {\n      const taskRef = this.getTaskDoc(taskId);\n      this.updateBatch(batch, taskRef, {\n        subtaskIds: this.removeFromArray(subtaskId)\n      });\n    }\n\n    if (shouldCommit) {\n      return batch\n        .commit()\n        .then(() => {\n          console.log('Subtask deleted.');\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    }\n  };\n\n  // Comment API\n\n  addComment = ({ userId, memberIds = [], projectId, taskId, content }) => {\n    this.db\n      .collection('comments')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastUpdatedAt: this.getTimestamp(),\n        isPinned: false,\n        from: userId,\n        to: memberIds,\n        likes: {},\n        projectId,\n        taskId,\n        content\n      })\n      .then(ref => {\n        this.updateTask(taskId, {\n          commentIds: this.addToArray(ref.id)\n        });\n      });\n  };\n}\n\nexport default Firebase;\n","import React from 'react';\nimport './Input.scss';\n\nconst Input = ({\n  className = '',\n  name,\n  type,\n  value,\n  onFocus,\n  onChange,\n  onInput,\n  placeholder,\n  isRequired,\n  onBlur,\n  autoComplete,\n  inputRef,\n  hideLabel,\n  label,\n  labelClass,\n  onKeyDown,\n  maxLength,\n  minLength,\n  isReadOnly\n}) => {\n  return (\n    <>\n      {!hideLabel && (\n        <label htmlFor={name} className={`input__label ${labelClass}`}>\n          {label}\n        </label>\n      )}\n      <input\n        className={`input ${className}`}\n        id={name}\n        name={name}\n        type={type}\n        value={value}\n        onFocus={onFocus}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={isRequired}\n        onBlur={onBlur}\n        autoComplete={autoComplete}\n        ref={inputRef}\n        onInput={onInput}\n        onKeyDown={onKeyDown}\n        maxLength={maxLength}\n        minLength={minLength}\n        readOnly={isReadOnly}\n        tabIndex={isReadOnly ? -1 : 0}\n      />\n    </>\n  );\n};\n\nInput.defaultProps = {\n  className: ''\n};\n\nexport default Input;\n","import React from 'react';\nimport './Button.scss';\n\nconst Button = ({\n  children,\n  type = 'button',\n  onClick,\n  className = '',\n  color = 'neutral',\n  size = 'md',\n  variant = 'text',\n  disabled,\n  name,\n  iconOnly = false,\n  buttonRef,\n  ...props\n}) => (\n  // eslint-disable-next-line react/button-has-type\n  <button\n    className={`${className} ${color} ${variant} ${!iconOnly ? size : ''} ${\n      iconOnly ? `icon-only icon-only--${size}` : ''\n    }`}\n    type={type}\n    onClick={onClick}\n    disabled={disabled}\n    name={name}\n    ref={buttonRef}\n    {...props}\n  >\n    {children}\n  </button>\n);\n\nButton.defaultProps = {\n  type: 'button',\n  className: '',\n  color: 'neutral',\n  size: 'md',\n  variant: 'text',\n  iconOnly: false\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { withFirebase } from '../../components/Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../../components/Input';\nimport { Button } from '../../components/Button';\n\nconst INITIAL_STATE = {\n  username: '',\n  name: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { username, email, name, passwordOne } = this.state;\n    const { firebase, history } = this.props;\n    firebase\n      .createUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        const userId = authUser.user.uid;\n        const photoURL = authUser.user.photoURL || null;\n        return firebase.addUser({\n          userId,\n          name,\n          username,\n          email,\n          photoURL\n        });\n      })\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const {\n      username,\n      name,\n      email,\n      passwordOne,\n      passwordTwo,\n      error\n    } = this.state;\n    const isInvalid =\n      passwordOne === '' ||\n      passwordTwo === '' ||\n      email === '' ||\n      username === '' ||\n      passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"name\"\n          label=\"Full Name\"\n          value={name}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"username\"\n          label=\"Username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordOne\"\n          label=\"Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          label=\"Confirm Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Create Account\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignUpForm);\n","import React from 'react';\nimport './UserFormPage.scss';\n\nconst UserFormPage = ({ title, children }) => (\n  <main className=\"user-form__container\">\n    <h1 className=\"user-form__title\">{title}</h1>\n    {children}\n  </main>\n);\n\nexport default UserFormPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignUpForm from './SignUpForm';\nimport { UserFormPage } from '../../components/UserFormPage';\nimport * as ROUTES from '../../constants/routes';\nimport './SignUp.scss';\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account?\n    <Link className=\"link--outlined\" to={ROUTES.SIGN_UP}>\n      Sign Up\n    </Link>\n  </p>\n);\n\nconst SignUpPage = () => (\n  <UserFormPage title=\"Create an account\">\n    <SignUpForm />\n  </UserFormPage>\n);\n\nexport default SignUpPage;\nexport { SignUpLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../../components/Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../../components/Input';\nimport { Button } from '../../components/Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email, password } = this.state;\n    this.props.firebase\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  enableGoogleLogin = e => {\n    const { signInWithGoogle } = this.props.firebase;\n    signInWithGoogle();\n    e.preventDefault();\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n    const isInvalid = password === '' || email === '';\n    return (\n      <form className=\"user-form\">\n        {/*\n        <Button\n          type=\"click\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.enableGoogleLogin}\n        >\n          Continue with Google\n        </Button>\n        <Button\n          type=\"click\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.enableGithubLogin}\n        >\n          Continue with Github\n        </Button>\n      */}\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"password\"\n          label=\"Password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Log In\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignInForm);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../../components/Firebase';\nimport { Input } from '../../components/Input';\nimport { Button } from '../../components/Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null\n};\n\nclass PasswordForgetForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .passwordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, error } = this.state;\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Reset My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordForgetForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PasswordForgetForm from './PasswordForgetForm';\nimport { UserFormPage } from '../../components/UserFormPage';\nimport * as ROUTES from '../../constants/routes';\nimport './PasswordForget.scss';\n\nconst PasswordForgetLink = () => (\n  <p className=\"user-form__info\">\n    <Link to={ROUTES.PASSWORD_FORGET} className=\"link--sm\">\n      Forgot Password?\n    </Link>\n  </p>\n);\n\nconst PasswordForgetPage = () => (\n  <UserFormPage title=\"Forgot your password?\">\n    <PasswordForgetForm />\n  </UserFormPage>\n);\n\nexport default PasswordForgetPage;\nexport { PasswordForgetLink };\n","import React from 'react';\nimport SignInForm from './SignInForm';\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { UserFormPage } from '../../components/UserFormPage';\n\nconst SignInPage = () => (\n  <UserFormPage title=\"Log In\">\n    <SignInForm />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </UserFormPage>\n);\n\nexport default SignInPage;\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n","import { Firebase } from '../components/Firebase';\n\nconst firebase = new Firebase();\nexport default firebase;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\nimport { utils } from '../../utils';\nimport { REMOVE_TAG } from '../currentUser/types';\n\nexport const loadTasksById = tasksById => {\n  return {\n    type: types.LOAD_TASKS_BY_ID,\n    tasksById\n  };\n};\n\nexport const loadUserTasks = (userId, tasksById) => {\n  return {\n    type: types.LOAD_USER_TASKS,\n    userId,\n    tasksById\n  };\n};\n\nexport const addTask = ({ taskId, taskData }) => {\n  return {\n    type: types.ADD_TASK,\n    taskId,\n    taskData\n  };\n};\n\nexport const removeTask = ({ taskId, listId }) => {\n  console.log(taskId, ' removed');\n  return {\n    type: types.REMOVE_TASK,\n    taskId,\n    listId\n  };\n};\n\nexport const updateTask = ({ taskId, taskData }) => {\n  return {\n    type: types.UPDATE_TASK,\n    taskId,\n    taskData\n  };\n};\n\nexport const updateTasksById = task => {\n  return {\n    type: types.UPDATE_TASKS_BY_ID,\n    task\n  };\n};\n\nexport const addTag = (taskId, tag) => {\n  return {\n    type: types.ADD_TAG,\n    taskId,\n    tag\n  };\n};\n\n\nexport const removeTag = ({ taskId, name }) => {\n  return {\n    type: types.REMOVE_TAG,\n    taskId,\n    name\n  };\n};\n\n// Thunks\n\nexport const removeTaskTag = ({ taskId, name, userId, projectId }) => {\n  return async (dispatch, getState) => {\n    try {\n      const { currentUser, projectsById } = getState();\n      const { tags: userTags } = currentUser;\n      const projectTags = projectId ? projectsById[projectId].tags : {};\n      const isProjectTag = projectTags && name in projectTags;\n      const isUserTag = userTags && name in userTags;\n      const projectCount = isProjectTag ? projectTags[name].count - 1 : null;\n      const userCount = isUserTag ? userTags[name].count - 1 : null;\n\n      await firebase.removeTag({ taskId, name, userId, userCount, projectId, projectCount });\n      dispatch(removeTag({ taskId, name }));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n\nexport const deleteTask = ({ taskId, listId = null }) => {\n  return async (dispatch, getStore) => {\n    try {\n      const {\n        folders,\n        subtaskIds,\n        commentIds,\n        assignedTo,\n        tags,\n        projectId\n      } = getStore().tasksById[taskId];\n      const { userId } = getStore().currentUser;\n      await firebase.deleteTask({\n        taskId,\n        listId,\n        assignedTo,\n        folders,\n        subtaskIds,\n        commentIds\n      });\n      dispatch(removeTask({ taskId, listId }));\n      if (tags && tags.length > 0) {\n        tags.forEach(name => {\n          dispatch(removeTaskTag({ taskId: null, name, userId, projectId }));\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n\nexport const fetchProjectTasks = projectId => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .where('projectId', '==', projectId)\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst handleInitialPayload = async snapshot => {\n  const tasks = await snapshot.docChanges().map(change => {\n    tasks[change.doc.id] = {\n      taskId: change.doc.id,\n      ...change.doc.data()\n    };\n  });\n  console.log(tasks);\n  return tasks;\n};\n\nconst syncTasks = snapshot => {\n  snapshot.docChanges().forEach(change => {\n    const taskId = change.doc.id;\n    const taskData = change.doc.data();\n    if (change.type === 'added') {\n      console.log('added task');\n      return dispatch => {\n        dispatch(addTask({ taskId, taskData }));\n      };\n    }\n    if (change.type === 'removed') {\n      return dispatch => {\n        dispatch(deleteTask(taskId));\n      };\n    } \n      return dispatch => {\n        dispatch(updateTask({ taskId, taskData }));\n      };\n    \n  });\n};\n\nlet count = 0;\nconst handleTaskSubscription = snapshot => {\n  count++;\n  const initialLoad = count === 1;\n  const tasks = {};\n  if (initialLoad) {\n    console.log('is initial load');\n\n    snapshot.docChanges().forEach(change => {\n      tasks[change.doc.id] = {\n        taskId: change.doc.id,\n        ...change.doc.data()\n      };\n    });\n    console.log(tasks);\n    return tasks;\n  }\n  snapshot.docChanges().forEach(change => {\n    const taskId = change.doc.id;\n    const taskData = change.doc.data();\n    if (change.type === 'added') {\n      console.log('added task');\n      return dispatch => {\n        dispatch(addTask({ taskId, taskData }));\n      };\n    } if (change.type === 'removed') {\n      return dispatch => {\n        dispatch(deleteTask(taskId));\n      };\n    } else {\n      return dispatch => {\n        dispatch(updateTask({ taskId, taskData }));\n      };\n    }\n  });\n};\n\n/* const handleTaskSubscription = utils.firstThen(handleInitialPayload, syncTasks); */\n\nexport const fetchUserTasks = userId => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .where('assignedTo', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\n/*\n\nexport const syncUserTasks = userId => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .where('assignedTo', 'array-contains', userId)\n        .onSnapshot(handleTaskSubscription);\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n*/\n\nexport const syncUserTasks = userId => {\n  return async (dispatch, getState) => {\n    try {\n      firebase\n        .queryCollection('tasks', ['assignedTo', 'array-contains', userId])\n        .onSnapshot(async querySnapshot => {\n          querySnapshot.docChanges().forEach(async change => {\n            const [taskId, taskData, changeType] = await Promise.all([\n              change.doc.id,\n              change.doc.data(),\n              change.type\n            ]);\n            if (changeType === 'added') {\n              if (taskId in getState().tasksById) return;\n              dispatch(addTask({ taskId, taskData }));\n              console.log('task added');\n            } else if (changeType === 'removed') {\n              const { listId } = taskData;\n              dispatch(removeTask({ taskId, listId }));\n            } else {\n              dispatch(updateTask({ taskId, taskData }));\n              console.log(`Updated Task: ${taskData.name}`);\n            }\n          });\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const syncProjectTasks = projectId => {\n  return async (dispatch, getState) => {\n    try {\n      firebase\n        .queryCollection('tasks', ['projectId', '==', projectId])\n        .onSnapshot(async querySnapshot => {\n          querySnapshot.docChanges().forEach(async change => {\n            const [taskId, taskData, changeType] = await Promise.all([\n              change.doc.id,\n              change.doc.data(),\n              change.type\n            ]);\n\n            const { tasksById } = getState();\n            if (!tasksById) return;\n            if (changeType === 'added') {\n              if (taskId in tasksById) return;\n              dispatch(addTask({ taskId, taskData }));\n              console.log('task added');\n            } else if (changeType === 'removed') {\n              if (taskId in tasksById === false) return;\n              const { listId } = taskData;\n              dispatch(removeTask({ taskId, listId }));\n            } else {\n              dispatch(updateTask({ taskId, taskData }));\n              console.log(`Updated Task: ${taskData.name}`);\n            }\n          });\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","export const ADD_TASK = 'ADD_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\nexport const UPDATE_TASK = 'UPDATE_TASK';\nexport const SET_TASK_DUE_DATE = 'SET_TASK_DUE_DATE';\nexport const ADD_TASK_SUBTASK = 'ADD_TASK_SUBTASK';\nexport const REMOVE_TASK_SUBTASK = 'REMOVE_TASK_SUBTASK';\nexport const CHANGE_TASK_DESCRIPTION = 'CHANGE_TASK_DESCRIPTION';\nexport const SET_TASK_COLOR = 'SET_TASK_COLOR';\nexport const MOVE_TASK = 'MOVE_TASK';\nexport const LOAD_TASKS_BY_ID = 'LOAD_TASKS_BY_ID';\nexport const UPDATE_TASKS_BY_ID = 'UPDATE_TASKS_BY_ID';\nexport const ADD_TAG = 'ADD_TAG';\nexport const LOAD_USER_TASKS = 'LOAD_USER_TASKS';\nexport const REMOVE_TASK = 'REMOVE_TASK';\nexport const REMOVE_TAG = 'REMOVE_TAG';\n","import * as types from './types';\nimport firebase from '../../store/firebase';\nimport { addTag } from '../tasks/actions';\n\nexport const setCurrentUser = currentUser => {\n  return {\n    type: types.SET_CURRENT_USER,\n    currentUser\n  };\n};\n\nexport const loadUserTags = tags => {\n  return {\n    type: types.LOAD_USER_TAGS,\n    tags\n  };\n};\n\nexport const fetchCurrentUserData = userId => {\n  return async dispatch => {\n    try {\n      const currentUser = await firebase\n        .getDocRef('users', userId)\n        .get()\n        .then(doc => doc.data());\n      dispatch(setCurrentUser(currentUser));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserTags = userId => {\n  return async dispatch => {\n    try {\n      const userTags = await firebase\n        .getDocRef('users', userId)\n        .collection('tags')\n        .get()\n        .then(snapshot => {\n          const tags = {};\n          snapshot.forEach(doc => {\n            tags[doc.id] = doc.data();\n          });\n          return tags;\n        });\n      dispatch(loadUserTags(userTags));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const loadFolders = folders => {\n  return {\n    type: types.LOAD_FOLDERS,\n    folders\n  };\n};\n\nexport const fetchFolders = userId => {\n  return async dispatch => {\n    try {\n      const folders = await firebase\n        .getDocRef('users', userId)\n        .collection('folders')\n        .get()\n        .then(snapshot => {\n          const foldersById = {};\n          snapshot.forEach(doc => {\n            foldersById[doc.id] = {\n              folderId: doc.id,\n              ...doc.data()\n            };\n          });\n          return foldersById;\n        });\n      dispatch(loadFolders(folders));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addFolder = ({ folderId, folderData }) => {\n  return {\n    type: types.ADD_FOLDER,\n    folderId,\n    folderData\n  };\n};\n\nexport const updateFolder = ({ folderId, folderData }) => {\n  return {\n    type: types.UPDATE_FOLDER,\n    folderId,\n    folderData\n  };\n};\n\nexport const deleteFolder = folderId => {\n  return {\n    type: types.DELETE_FOLDER,\n    folderId\n  };\n};\n\nexport const reorderFolders = (userId, folderIds) => {\n  return {\n    type: types.REORDER_FOLDERS,\n    userId,\n    folderIds\n  };\n};\n\nexport const loadTasksDueSoon = tasksDueSoon => {\n  return {\n    type: types.LOAD_TASKS_DUE_SOON,\n    tasksDueSoon\n  };\n};\n\nexport const createTag = ({ tagId, tagData }) => {\n  return {\n    type: types.CREATE_TAG,\n    tagId,\n    tagData\n  };\n};\n\nexport const updateTag = ({ tagId, tagData }) => {\n  return {\n    type: types.UPDATE_TAG,\n    tagId,\n    tagData\n  };\n};\n\nexport const deleteTag = name => {\n  return {\n    type: types.DELETE_TAG,\n    name\n  };\n};\n\nexport const fetchTasksDueWithinDays = (userId, days) => {\n  const startingDate = new Date();\n  const timeStart = new Date(startingDate.setHours(0, 0, 0, 0));\n  const endingDate = new Date(startingDate);\n  const timeEnd = new Date(endingDate.setDate(endingDate.getDate() + days));\n\n  return async dispatch => {\n    try {\n      const tasksDueSoon = await firebase.db\n        .collection('tasks')\n        .where('assignedTo', 'array-contains', userId)\n        .where('dueDate', '<=', timeEnd)\n        .orderBy('dueDate', 'asc')\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksDueSoon(tasksDueSoon));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addTaskDueSoon = ({ taskId, taskData }) => {\n  return {\n    type: types.ADD_TASK_DUE_SOON,\n    taskId,\n    taskData\n  };\n};\n\nexport const deleteTaskDueSoon = taskId => {\n  return {\n    type: types.DELETE_TASK_DUE_SOON,\n    taskId\n  };\n};\n\nexport const updateTaskDueSoon = ({ taskId, taskData }) => {\n  return {\n    type: types.UPDATE_TASK_DUE_SOON,\n    taskId,\n    taskData\n  };\n};\n\nexport const syncFolders = userId => {\n  return async (dispatch, getState) => {\n    try {\n      firebase\n        .getDocRef('users', userId)\n        .collection('folders')\n        .onSnapshot(async querySnapshot => {\n          querySnapshot.docChanges().forEach(async change => {\n            const [folderId, folderData, changeType] = await Promise.all([\n              change.doc.id,\n              change.doc.data(),\n              change.type\n            ]);\n            const { folders } = getState().currentUser;\n            if (!folders) return;\n            if (changeType === 'added') {\n              if (folderId in folders) return;\n              dispatch(addFolder({ folderId, folderData }));\n              console.log('folder added');\n            } else if (changeType === 'removed') {\n              dispatch(deleteFolder(folderId));\n            } else {\n              dispatch(updateFolder({ folderId, folderData }));\n              console.log(`Updated Folder: ${folderData.name}`);\n            }\n          });\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\n/*\nexport const createTag = ({ userId, taskId, name }) => {\n  return async (dispatch, getState) => {\n    try {\n      await firebase.addTag({ taskId, userId, name, projectId, color, projectCount, userCount});\n            const { tags } = getState().currentUser;\n           if (changeType === 'added') {\n             console.log(tags);\n              dispatch(addTag({ tagId, tagData }));\n              console.log('tag added');\n            } else if (changeType === 'removed') {\n              dispatch(removeTag(tagId));\n            } else {\n              dispatch(updateTag({ tagId, tagData }));\n              console.log(`Updated Tag: ${tagData.name}`);\n            }\n          });\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n*/\n\n\nexport const syncUserTags = userId => {\n  return async (dispatch, getState) => {\n    try {\n      firebase\n        .getDocRef('users', userId)\n        .collection('tags')\n        .onSnapshot(async querySnapshot => {\n          querySnapshot.docChanges().forEach(async change => {\n            const [tagId, tagData, changeType] = await Promise.all([\n              change.doc.id,\n              change.doc.data(),\n              change.type\n            ]);\n            const { tags } = getState().currentUser;\n           if (!tags) return;\n           if (changeType === 'added') {\n              if (tagId in tags) return;\n              console.log( tagId, tagData);\n              dispatch(createTag({ tagId, tagData }));\n              console.log('tag added');\n            } else if (changeType === 'removed') {\n              dispatch(deleteTag(tagId));\n            } else {\n              dispatch(updateTag({ tagId, tagData }));\n              console.log(`Updated Tag: ${tagData.name}`);\n            }\n          });\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","export const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const LOAD_FOLDERS = 'LOAD_FOLDERS';\nexport const ADD_FOLDER = 'ADD_FOLDER';\nexport const DELETE_FOLDER = 'DELETE_FOLDER';\nexport const UPDATE_FOLDER = 'UPDATE_FOLDER';\nexport const REORDER_FOLDERS = 'REORDER_FOLDERS';\nexport const UPDATE_FOLDER_IDS = 'UPDATE_FOLDER_IDS';\nexport const LOAD_TASKS_DUE_SOON = 'LOAD_TASKS_DUE_SOON';\nexport const ADD_TASK_DUE_SOON = 'ADD_TASK_DUE_SOON';\nexport const DELETE_TASK_DUE_SOON = 'DELETE_TASK_DUE_SOON';\nexport const UPDATE_TASK_DUE_SOON = 'UPDATE_TASK_DUE_SOON';\nexport const LOAD_USER_TAGS = 'LOAD_USER_TAGS';\nexport const ADD_TAG = 'ADD_TAG';\nexport const REMOVE_TAG = 'REMOVE_TAG';\nexport const UPDATE_TAG = 'UPDATE_TAG';\nexport const CREATE_TAG = 'CREATE_TAG';\nexport const DELETE_TAG = 'DELETE_TAG';\n","export const getCurrentUser = state => {\n  return state.currentUser;\n};\n\nexport const getCurrentUserId = state => {\n  const { currentUser } = state;\n  if (!currentUser) return null;\n  return currentUser.userId;\n};\n\nexport const getFolders = state => {\n  const { currentUser } = state;\n  if (!currentUser) return null;\n  return currentUser.folders;\n};\n\nexport const getFolderIds = state => {\n  const { currentUser } = state;\n  if (!currentUser) return [];\n  return currentUser.folderIds;\n};\n\nexport const getFoldersArray = state => {\n  const { currentUser } = state;\n  if (!currentUser) return [];\n  const { folders } = currentUser;\n  if (!folders) return [];\n  return Object.keys(folders).map(folderId => {\n    return {\n      ...folders[folderId],\n      isDefault:\n        folderId === '0' ||\n        folderId === '1' ||\n        folderId === '2' ||\n        folderId === '3'\n    };\n  });\n};\n\nexport const getFolder = (state, folderId) => {\n  const { currentUser } = state;\n  if (!currentUser) return null;\n  return currentUser.folders[folderId];\n};\n\nexport const getTasksDueSoonById = state => {\n  const { currentUser } = state;\n  if (!currentUser) return {};\n  return currentUser.tasksDueSoon;\n};\n\nexport const getTasksDueSoonArr = state => {\n  const { tasksDueSoon } = state.currentUser;\n  if (!tasksDueSoon) return [];\n  return Object.keys(tasksDueSoon).map(taskId => tasksDueSoon[taskId]);\n};\n\nexport const getMergedTags = state => {\n  const {\n    selectedProject: projectId,\n    projectsById,\n    usersById,\n    currentUser\n  } = state;\n  const { userId } = currentUser;\n  if (!projectId) return [];\n  const { tags: projectTags } = projectsById[projectId];\n  const { tags: userTags } = usersById[userId];\n  const mergedTags = { ...userTags, ...projectTags };\n  return Object.keys(mergedTags).map(tag => mergedTags[tag]);\n};\n","import * as types from './types';\n\nconst currentUser = (state = null, action) => {\n  switch (action.type) {\n    case types.SET_CURRENT_USER: {\n      const { currentUser } = action;\n      return currentUser;\n    }\n    case types.LOAD_FOLDERS: {\n      const { folders } = action;\n      return {\n        ...state,\n        folders\n      };\n    }\n    case types.LOAD_USER_TAGS: {\n      const { tags } = action;\n      return {\n        ...state,\n        tags\n      };\n    }\n    case types.CREATE_TAG: {\n      const { tagId, tagData } = action;\n      return {\n        ...state,\n        tags: {\n          ...state.tags,\n          [tagId]: tagData\n        }\n      };\n    }\n    case types.DELETE_TAG: {\n      const { tagId } = action;\n      const { [tagId]: deletedTag, ...restOfTags } = state.tags;\n      return {\n        ...state,\n        tags: restOfTags\n      };\n    }\n    case types.UPDATE_TAG: {\n      const { tagId, tagData } = action;\n      return {\n        ...state,\n        tags: {\n          ...state.tags,\n          [tagId]: {\n            ...state.tags[tagId],\n            ...tagData\n          }\n        }\n      };\n    }\n    case types.ADD_FOLDER: {\n      const { folderId, folderData } = action;\n      return {\n        ...state,\n        folders: {\n          ...state.folders,\n          [folderId]: {\n            folderId,\n            ...folderData\n          }\n        }\n      };\n    }\n    case types.DELETE_FOLDER: {\n      const { folderId } = action;\n      const { [folderId]: deletedFolder, ...restOfFolders } = state.folders;\n      return {\n        ...state,\n        folders: restOfFolders\n      };\n    }\n    case types.UPDATE_FOLDER: {\n      const { folderId, folderData } = action;\n      return {\n        ...state,\n        folders: {\n          ...state.folders,\n          [folderId]: {\n            ...state.folders[folderId],\n            ...folderData\n          }\n        }\n      };\n    }\n    case types.UPDATE_FOLDER_IDS:\n    case types.REORDER_FOLDERS: {\n      const { folderIds } = action;\n      return {\n        ...state,\n        folderIds\n      };\n    }\n    case types.LOAD_TASKS_DUE_SOON: {\n      const { tasksDueSoon } = action;\n      return {\n        ...state,\n        tasksDueSoon\n      };\n    }\n    case types.ADD_TASK_DUE_SOON: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        tasksDueSoon: {\n          ...state.tasksDueSoon,\n          [taskId]: {\n            taskId,\n            ...taskData\n          }\n        }\n      };\n    }\n    case types.DELETE_TASK_DUE_SOON: {\n      const { taskId } = action;\n      const { [taskId]: deletedTask, ...restOfTasks } = state.tasksDueSoon;\n      return {\n        ...state,\n        tasksDueSoon: restOfTasks\n      };\n    }\n    case types.UPDATE_TASK_DUE_SOON: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        tasksDueSoon: {\n          ...state.tasksDueSoon,\n          [taskId]: {\n            ...state[taskId],\n            ...taskData\n          }\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default currentUser;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { currentUserActions } from '../../ducks/currentUser';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        authUser: null\n      };\n    }\n\n    componentDidMount() {\n      const {\n        firebase,\n        history,\n        fetchCurrentUserData,\n        setCurrentUser\n      } = this.props;\n\n      this.listener = firebase.auth.onAuthStateChanged(authUser => {\n        if (authUser) {\n          fetchCurrentUserData(authUser.uid);\n          this.setState({ authUser });\n          history.push(`/0/home/${authUser.uid}`);\n        } else {\n          history.push(ROUTES.SIGN_IN);\n          setCurrentUser(null);\n          this.setState({ authUser: null });\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  const mapDispatchToProps = dispatch => ({\n    fetchCurrentUserData: userId =>\n      dispatch(currentUserActions.fetchCurrentUserData(userId)),\n    setCurrentUser: currentUser =>\n      dispatch(currentUserActions.setCurrentUser(currentUser))\n  });\n\n  return compose(\n    withRouter,\n    withFirebase,\n    connect(\n      null,\n      mapDispatchToProps\n    )\n  )(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport AuthUserContext from './context';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n\n    componentDidMount() {\n      const { firebase, history } = this.props;\n      this.listener = firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          history.push(ROUTES.SIGN_IN);\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? (\n              <Component userId={authUser.uid} {...this.props} />\n            ) : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n  return compose(\n    withRouter,\n    withFirebase\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadUserData = user => {\n  return {\n    type: types.LOAD_USER_DATA,\n    user\n  };\n};\n\nexport const loadUsersById = usersById => {\n  return {\n    type: types.LOAD_USERS_BY_ID,\n    usersById\n  };\n};\n\nexport const fetchUsersById = () => {\n  return async dispatch => {\n    try {\n      const usersById = await firebase.db\n        .collection('users')\n        .get()\n        .then(snapshot => {\n          const users = {};\n          snapshot.forEach(doc => {\n            users[doc.id] = {\n              userId: doc.id,\n              ...doc.data()\n            };\n          });\n          return users;\n        });\n      dispatch(loadUsersById(usersById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserData = userId => {\n  return async dispatch => {\n    try {\n      const user = await firebase\n        .getUserDoc(userId)\n        .get()\n        .then(doc => doc.data());\n      dispatch(loadUserData(user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addUser = ({ userId, userData }) => {\n  return {\n    type: types.ADD_USER,\n    userId,\n    userData\n  };\n};\n\nexport const deleteUser = userId => {\n  return {\n    type: types.DELETE_USER,\n    userId\n  };\n};\n\nexport const updateUser = ({ userId, userData }) => {\n  return {\n    type: types.UPDATE_USER,\n    userId,\n    userData\n  };\n};\n","export const LOAD_USER_DATA = 'LOAD_USER_DATA';\nexport const LOAD_USERS_BY_ID = 'LOAD_USERS_BY_ID';\nexport const ADD_USER = 'ADD_USER';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const DELETE_USER = 'DELETE_USER';\nexport const LOAD_USER_TASKS = 'LOAD_USER_TASKS';\nexport const ADD_TASK = 'ADD_TASK';\nexport const REORDER_FOLDERS = 'REORDER_FOLDERS';\n","export const getUsersById = state => {\n  return state.usersById;\n};\n\nexport const getUserData = (state, userId) => {\n  return state.usersById[userId];\n};\n\nexport const getUserTaskIds = (state, userId) => {\n  const { taskIds } = state.usersById[userId];\n  if (!taskIds) return [];\n  return taskIds;\n};\n\n// returns array of all users\nexport const getUsersArray = state => {\n  const { usersById } = state;\n  return Object.keys(usersById).map(userId => {\n    return {\n      userId,\n      ...usersById[userId]\n    };\n  });\n};\n\n// returns subset of users\nexport const getMembersArray = (state, memberIds) => {\n  const { usersById } = state;\n  if (!memberIds) return [];\n  return memberIds.map(memberId => usersById[memberId]);\n};\n","import * as types from './types';\n\nconst usersById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_USERS_BY_ID: {\n      const { usersById } = action;\n      return {\n        ...state,\n        ...usersById\n      };\n    }\n    case types.LOAD_USER_DATA: {\n      const { user } = action;\n      return {\n        ...state,\n        ...user\n      };\n    }\n    case types.LOAD_USER_TASKS: {\n      const { userId, tasksById } = action;\n      return {\n        ...state,\n        [userId]: {\n          ...state[userId],\n          tasksById\n        }\n      };\n    }\n    case types.ADD_USER: {\n      const { userId, userData } = action;\n      return {\n        ...state,\n        [userId]: {\n          userId,\n          ...userData\n        }\n      };\n    }\n    case types.DELETE_USER: {\n      const { userId } = action;\n      const { [userId]: deletedUser, ...restOfUsers } = state;\n      return restOfUsers;\n    }\n    case types.UPDATE_USER: {\n      const { userId, userData } = action;\n      return {\n        ...state,\n        [userId]: {\n          ...state[userId],\n          ...userData\n        }\n      };\n    }\n    case types.REORDER_FOLDERS: {\n      const { userId, folderIds } = action;\n      return {\n        ...state,\n        [userId]: {\n          ...state[userId],\n          folderIds\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default usersById;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ProjectTile = ({ projectId, projectName, onClick }) => {\n  return (\n    <li className=\"project-grid__tile\">\n      <Link\n        className=\"project-grid__link\"\n        to={`/0/project/${projectId}`}\n        onClick={onClick}\n      >\n        <span className=\"project-grid__title\">{projectName}</span>\n      </Link>\n    </li>\n  );\n};\n\nconst ProjectGrid = ({ children }) => <ul className=\"project-grid\">{children}</ul>;\n\nexport { ProjectTile, ProjectGrid };\n","import * as types from './types';\nimport firebase from '../../store/firebase';\nimport { removeTask, removeTaskTag } from '../tasks/actions';\n\nexport const loadListsById = listsById => {\n  return {\n    type: types.LOAD_LISTS_BY_ID,\n    listsById\n  };\n};\n\nexport const updateList = ({ listId, listData }) => {\n  return {\n    type: types.UPDATE_LIST,\n    listId,\n    listData\n  };\n};\n\nexport const addList = ({ listId, listData }) => {\n  console.log(listId, listData);\n  return {\n    type: types.ADD_LIST,\n    listId,\n    listData\n  };\n};\n\nexport const removeList = ({ listId, projectId }) => {\n  return {\n    type: types.REMOVE_LIST,\n    listId,\n    projectId\n  };\n};\n\n// Thunks\n\n// TODO: remove tags\nexport const deleteList = ({ listId, projectId }) => {\n  return async (dispatch, getStore) => {\n    try {\n      const batch = firebase.createBatch();\n      const listRef = firebase.getDocRef('lists', listId);\n      const projectRef = firebase.getDocRef('projects', projectId);\n      const { taskIds } = getStore().listsById[listId];\n      const { tasksById } = getStore();\n      // Delete list\n      batch.delete(listRef);\n\n      // Remove list id from project\n      firebase.updateBatch(batch, projectRef, {\n        listIds: firebase.removeFromArray(listId)\n      });\n\n      return batch\n        .commit()\n        .then(() => {\n          dispatch(removeList({ listId, projectId }));\n          if (taskIds.length > 0) {\n            taskIds.forEach(async taskId => {\n              const { assignedTo, folders, subtaskIds, commentIds, tags } = tasksById[\n                taskId\n              ];\n              await firebase.deleteTask({\n                taskId,\n                assignedTo,\n                folders,\n                subtaskIds,\n                commentIds\n              });\n              dispatch(removeTask({ taskId, listId: null }));\n              console.log({ tags });\n            });\n          }\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n\nexport const fetchListsById = projectId => {\n  return async dispatch => {\n    try {\n      const listsById = await firebase.db\n        .collection('lists')\n        .where('projectId', '==', projectId)\n        .get()\n        .then(snapshot => {\n          const lists = {};\n          snapshot.forEach(doc => {\n            lists[doc.id] = {\n              listId: doc.id,\n              ...doc.data()\n            };\n          });\n          return lists;\n        });\n      dispatch(loadListsById(listsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserLists = userId => {\n  return async dispatch => {\n    try {\n      const listsById = await firebase.db\n        .collection('lists')\n        .where('userId', '==', userId)\n        .get()\n        .then(snapshot => {\n          const lists = {};\n          snapshot.forEach(doc => {\n            lists[doc.id] = {\n              listId: doc.id,\n              ...doc.data()\n            };\n          });\n          return lists;\n        });\n      dispatch(loadListsById(listsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const syncProjectLists = projectId => {\n  return async (dispatch, getState) => {\n    try {\n      firebase.db\n        .collection('lists')\n        .where('projectId', '==', projectId)\n        .onSnapshot(async querySnapshot => {\n          querySnapshot.docChanges().forEach(async change => {\n            const [listId, listData, changeType] = await Promise.all([\n              change.doc.id,\n              change.doc.data(),\n              change.type\n            ]);\n            if (changeType === 'added') {\n              if (listId in getState().listsById) return;\n              dispatch(addList({ listId, listData }));\n              console.log('list added');\n            } else if (changeType === 'removed') {\n              dispatch(deleteList({ listId, projectId }));\n            } else {\n              dispatch(updateList({ listId, listData }));\n              console.log(`Updated List: ${listData.name}`);\n            }\n          });\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const createList = ({ projectId, name }) => {\n  return async dispatch => {\n    try {\n      firebase.addList({ projectId, name });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","export const LOAD_LISTS_BY_ID = 'LOAD_LISTS_BY_ID';\nexport const FETCH_LISTS_BY_ID = 'FETCH_LISTS_BY_ID';\nexport const DELETE_CARD = 'DELETE_CARD';\nexport const UPDATE_LIST = 'UPDATE_LIST';\nexport const ADD_LIST = 'ADD_LIST';\nexport const DELETE_LIST = 'DELETE_LIST';\nexport const REMOVE_LIST = 'REMOVE_LIST';\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadSubtasksById = subtasksById => {\n  return {\n    type: types.LOAD_SUBTASKS_BY_ID,\n    subtasksById\n  };\n};\n\nexport const fetchSubtasksById = () => {\n  return async dispatch => {\n    try {\n      const subtasksById = await firebase.db\n        .collection('subtasks')\n        .get()\n        .then(snapshot => {\n          const subtasks = {};\n          snapshot.forEach(doc => {\n            subtasks[doc.id] = {\n              subtaskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return subtasks;\n        });\n      dispatch(loadSubtasksById(subtasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateSubtasksById = subtask => {\n  return {\n    type: types.UPDATE_SUBTASKS_BY_ID,\n    subtask\n  };\n};\n\nexport const fetchProjectSubtasks = projectId => {\n  return async dispatch => {\n    try {\n      const subtasksById = await firebase.db\n        .collection('subtasks')\n        .where('projectId', '==', projectId)\n        .get()\n        .then(snapshot => {\n          const subtasks = {};\n          snapshot.forEach(doc => {\n            subtasks[doc.id] = {\n              subtaskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return subtasks;\n        });\n      dispatch(loadSubtasksById(subtasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchTaskSubtasks = taskId => {\n  return async dispatch => {\n    try {\n      const subtasksById = await firebase.db\n        .collection('subtasks')\n        .where('taskId', '==', taskId)\n        .get()\n        .then(snapshot => {\n          const subtasks = {};\n          snapshot.forEach(doc => {\n            subtasks[doc.id] = {\n              subtaskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return subtasks;\n        });\n      dispatch(loadSubtasksById(subtasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserSubtasks = userId => {\n  return async dispatch => {\n    try {\n      const subtasksById = await firebase.db\n        .collection('subtasks')\n        .where('assignedTo', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const subtasks = {};\n          snapshot.forEach(doc => {\n            subtasks[doc.id] = {\n              subtaskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return subtasks;\n        });\n      dispatch(loadSubtasksById(subtasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addSubtask = ({ subtaskId, subtaskData }) => {\n  return {\n    type: types.ADD_SUBTASK,\n    subtaskId,\n    subtaskData\n  };\n};\n\nexport const deleteSubtask = subtaskId => {\n  return {\n    type: types.DELETE_SUBTASK,\n    subtaskId\n  };\n};\n\nexport const updateSubtask = ({ subtaskId, subtaskData }) => {\n  return {\n    type: types.UPDATE_SUBTASK,\n    subtaskId,\n    subtaskData\n  };\n};\n","export const LOAD_SUBTASKS_BY_ID = 'LOAD_SUBTASKS_BY_ID';\nexport const FETCH_SUBTASKS_BY_ID = 'FETCH_SUBTASKS_BY_ID';\nexport const UPDATE_SUBTASKS_BY_ID = 'UPDATE_SUBTASKS_BY_ID';\nexport const ADD_SUBTASK = 'ADD_SUBTASK';\nexport const UPDATE_SUBTASK = 'UPDATE_SUBTASK';\nexport const DELETE_SUBTASK = 'DELETE_SUBTASK';\n","import * as types from './types';\nimport firebase from '../../store/firebase';\nimport { loadListsById } from '../lists/actions';\nimport { loadTasksById } from '../tasks/actions';\nimport { loadSubtasksById } from '../subtasks/actions';\n\nexport const loadProjectsById = projectsById => {\n  return {\n    type: types.LOAD_PROJECTS_BY_ID,\n    projectsById\n  };\n};\n\nexport const loadProject = (projectId, projectData) => {\n  return {\n    type: types.LOAD_PROJECT,\n    projectId,\n    projectData\n  };\n};\n\nexport const fetchProjectsById = userId => {\n  return async dispatch => {\n    try {\n      const projectsById = await firebase.db\n        .collection('projects')\n        .where('memberIds', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const projects = {};\n          snapshot.forEach(doc => {\n            projects[doc.id] = {\n              projectId: doc.id,\n              ...doc.data()\n            };\n          });\n          return projects;\n        });\n      dispatch(loadProjectsById(projectsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchProjectLists = async projectId => {\n  try {\n    const projectLists = await firebase.db\n      .collection('lists')\n      .where('projectId', '==', projectId)\n      .get()\n      .then(snapshot => {\n        const lists = {};\n        snapshot.forEach(doc => {\n          lists[doc.id] = {\n            listId: doc.id,\n            ...doc.data()\n          };\n        });\n        return lists;\n      });\n    return projectLists;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchProjectTasks = async projectId => {\n  try {\n    const projectTasks = await firebase.db\n      .collection('tasks')\n      .where('projectId', '==', projectId)\n      .get()\n      .then(snapshot => {\n        const tasks = {};\n        snapshot.forEach(doc => {\n          tasks[doc.id] = {\n            taskId: doc.id,\n            ...doc.data()\n          };\n        });\n        return tasks;\n      });\n    return projectTasks;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchProjectSubtasks = async projectId => {\n  try {\n    const projectSubtasks = await firebase.db\n      .collection('subtasks')\n      .where('projectId', '==', projectId)\n      .get()\n      .then(snapshot => {\n        const subtasks = {};\n        snapshot.forEach(doc => {\n          subtasks[doc.id] = {\n            subtaskId: doc.id,\n            ...doc.data()\n          };\n        });\n        return subtasks;\n      });\n    return projectSubtasks;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchProjectContent = projectId => {\n  return async dispatch => {\n    try {\n      const subtasks = fetchProjectSubtasks(projectId);\n      const tasks = fetchProjectTasks(projectId);\n      const lists = fetchProjectLists(projectId);\n      const project = await Promise.all([subtasks, tasks, lists]);\n      dispatch(loadSubtasksById(project[0]));\n      dispatch(loadTasksById(project[1]));\n      dispatch(loadListsById(project[2]));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateProject = (projectId, projectData) => {\n  return {\n    type: types.UPDATE_PROJECT,\n    projectId,\n    projectData\n  };\n};\n\nexport const reorderLists = (projectId, listIds) => {\n  return {\n    type: types.REORDER_LISTS,\n    projectId,\n    listIds\n  };\n};\n\nexport const updateProjectTags = (projectId, tags) => {\n  return {\n    type: types.UPDATE_PROJECT_TAGS,\n    projectId,\n    tags\n  };\n};\n","export const LOAD_PROJECTS_BY_ID = 'LOAD_PROJECTS_BY_ID';\nexport const LOAD_PROJECT = 'LOAD_PROJECT';\nexport const UPDATE_PROJECT = 'UPDATE_PROJECT';\nexport const REORDER_LISTS = 'REORDER_LISTS';\nexport const UPDATE_PROJECT_TAGS = 'UPDATE_PROJECT_TAGS';\nexport const ADD_TAG = 'ADD_TAG';","export const getProjectsById = state => {\n  return state.projectsById;\n};\n\nexport const getProjectsArray = state => {\n  const { projectsById } = state;\n  return Object.keys(projectsById).map(projectId => projectsById[projectId]);\n};\n\nexport const getProject = (state, projectId) => {\n  const { projectsById } = state;\n  return projectsById[projectId];\n};\n\nexport const getProjectTags = (state, projectId) => {\n  if (!projectId) return {};\n  const { projectsById } = state;\n  return projectsById[projectId].tags;\n};\n\nexport const getProjectName = (state, projectId) => {\n  if (!projectId) return '';\n  const { projectsById } = state;\n  return projectsById[projectId].name;\n};\n\nexport const getProjectColor = (state, projectId) => {\n  if (!projectId) return '';\n  const { projectsById } = state;\n  return projectsById[projectId].color;\n};\n","import * as types from './types';\nimport { ADD_LIST, REMOVE_LIST } from '../lists/types';\n\nconst projectsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_PROJECTS_BY_ID: {\n      const { projectsById } = action;\n      return {\n        ...state,\n        ...projectsById\n      };\n    }\n    case types.LOAD_PROJECT: {\n      const { projectId, projectData } = action;\n      return {\n        ...state,\n        [projectId]: {\n          projectId,\n          ...projectData\n        }\n      };\n    }\n    case types.UPDATE_PROJECT: {\n      const { projectId, projectData } = action;\n      return {\n        ...state,\n        [projectId]: {\n          ...state[projectId],\n          ...projectData\n        }\n      };\n    }\n    case types.REORDER_LISTS: {\n      const { projectId, listIds } = action;\n      return {\n        ...state,\n        [projectId]: {\n          ...state[projectId],\n          listIds\n        }\n      };\n    }\n    case ADD_LIST: {\n      const { listId, listData } = action;\n      const { projectId } = listData;\n      return {\n        ...state,\n        [projectId]: {\n          ...state[projectId],\n          listIds: [...state[projectId].listIds, listId]\n        }\n      };\n    }\n    case REMOVE_LIST: {\n      const { listId, projectId } = action;\n      return {\n        ...state,\n        [projectId]: {\n          ...state[projectId],\n          listIds: state[projectId].listIds.filter(id => id !== listId)\n        }\n      };\n    }\n    case types.UPDATE_PROJECT_TAGS: {\n      const { projectId, tags } = action;\n      return {\n        ...state,\n        [projectId]: {\n          ...state[projectId],\n          tags: {\n            ...tags\n          }\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default projectsById;\n","export const SELECT_PROJECT = 'SELECT_PROJECT';\n\nexport const selectProject = projectId => {\n  return {\n    type: SELECT_PROJECT,\n    projectId\n  };\n};\n\nconst INITIAL_STATE = null;\n\nexport const selectedProject = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SELECT_PROJECT:\n      return action.projectId;\n    default:\n      return state;\n  }\n};\n\nexport const getSelectedProjectId = state => state.selectedProject;\n\nexport const getSelectedProject = state => {\n  const { selectedProject: projectId, projectsById } = state;\n  return projectsById[projectId];\n};\n","import React from 'react';\nimport featherIcons from '../../assets/feather/feather-sprite.svg';\n\nconst Icon = ({ name, className, width, height }) => (\n  <svg\n    className={`feather feather-${name} ${className}`}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    viewBox=\"0 0 24 24\"\n    width={width}\n    height={height}\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <use xlinkHref={`${featherIcons}#${name}`} />\n  </svg>\n);\n\nIcon.defaultProps = {\n  className: '',\n  width: 24,\n  height: 24\n};\n\nexport default Icon;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ProjectGrid, ProjectTile } from './ProjectGrid';\nimport './ProjectGrid.scss';\nimport { withAuthorization } from '../Session';\nimport { projectActions, projectSelectors } from '../../ducks/projects';\nimport { selectProject as selectProjectAction } from '../../ducks/selectedProject';\nimport { Icon } from '../Icon';\n\nclass ProjectGridContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const { userId, firebase, updateProject } = this.props;\n    this.projectObserver = firebase.db\n      .collection('projects')\n      .where('memberIds', 'array-contains', userId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const projectId = change.doc.id;\n          const projectData = change.doc.data();\n          updateProject(projectId, projectData);\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.projectObserver();\n  }\n\n  render() {\n    const { projectsArray, selectProject } = this.props;\n    const projectTiles = projectsArray.map(project => {\n      const { name: projectName, projectId } = project;\n      return (\n        <ProjectTile\n          key={projectId}\n          projectName={projectName}\n          projectId={projectId}\n          onClick={() => selectProject(projectId)}\n        />\n      );\n    });\n    return (\n      <ProjectGrid>\n        {projectTiles}\n        <button\n          type=\"button\"\n          className=\"project-grid__tile project-grid__btn--add\"\n          onClick={this.props.openProjectComposer}\n        >\n          <Icon name=\"plus-circle\" />\n          Create project\n        </button>\n      </ProjectGrid>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    projectsById: projectSelectors.getProjectsById(state),\n    projectsArray: projectSelectors.getProjectsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchProjectsById: userId =>\n      dispatch(projectActions.fetchProjectsById(userId)),\n    updateProject: (projectId, projectData) =>\n      dispatch(projectActions.updateProject(projectId, projectData)),\n    selectProject: projectId => dispatch(selectProjectAction(projectId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ProjectGridContainer)\n);\n","import React, { Component, createRef } from 'react';\n\nconst withOutsideClick = WrappedComponent => {\n  class WithOutsideClick extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        isTouchEnabled: false\n      };\n      this.componentInstance = createRef();\n    }\n\n    componentDidMount() {\n      document.addEventListener('touchstart', this.handleTouch);\n      document.addEventListener('click', this.handleOutsideClick, false);\n    }\n\n    componentWillUnmount() {\n      const { isTouchEnabled } = this.state;\n      if (isTouchEnabled) {\n        document.removeEventListener('touchstart', this.handleOutsideClick);\n      } else {\n        document.removeEventListener('click', this.handleOutsideClick);\n        document.removeEventListener('touchstart', this.handleTouch);\n      }\n    }\n\n    handleTouch = () => {\n      this.setState({\n        isTouchEnabled: true\n      });\n      // if touch is detected, listen for touch events instead of click events\n      // to improve detection on touch devices\n      // remove touch handler to prevent unnecessary refires\n      document.removeEventListener('touchstart', this.handleTouch);\n      // remove outside click handler from click events\n      document.removeEventListener('click', this.handleOutsideClick);\n      // reattach outside click handler to touchstart events\n      document.addEventListener('touchstart', this.handleOutsideClick);\n    };\n\n    handleOutsideClick = e => {\n      if (!this.componentEl) {\n        throw new Error('Must set component ref to prop innerRef!');\n      }\n      if (\n        this.componentEl.contains(e.target) ||\n        (!this.componentInstance.current.onOutsideClick &&\n          !this.props.onOutsideClick)\n      )\n        return;\n        if (this.componentInstance.current.onOutsideClick) {\n          this.componentInstance.current.onOutsideClick(e);\n        }\n\n      const { onOutsideClick } = this.props;\n      if (onOutsideClick) {\n        onOutsideClick(e);\n      }\n    };\n\n    render() {\n      return (\n        <WrappedComponent\n          ref={this.componentInstance}\n          innerRef={el => (this.componentEl = el)}\n          {...this.props}\n        />\n      );\n    }\n  }\n\n  /*\n  return forwardRef((props, ref) => {\n    return <WithOutsideClick {...props} forwardedRef={ref} />;\n  });\n  */\n  return WithOutsideClick;\n};\n\nexport default withOutsideClick;\n","import React, { Component } from 'react';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { withOutsideClick } from '../withOutsideClick';\nimport './Modal.scss';\n\nclass Modal extends Component {\n  \n  onOutsideClick = e => {\n    const { onModalClose } = this.props;\n    onModalClose(e);\n  };\n\n  render() {\n    const {\n      onModalClose,\n      children,\n      onModalClick,\n      size = 'md',\n      classes,\n      id,\n      innerRef\n    } = this.props;\n    return (\n      <div className={`modal ${classes.modal || ''}`} onClick={onModalClick}>\n        <div\n          id={id}\n          ref={innerRef}\n          className={`modal__content ${\n            classes.content || ''\n          } modal__content--${size}`}\n        >\n          <Button\n            type=\"button\"\n            className={`modal__btn--close ${\n            classes.button || ''\n          }`}\n            onClick={onModalClose}\n            iconOnly\n          >\n            <Icon name=\"x\" />\n          </Button>\n          {children}\n        </div>\n      </div>\n    );\n  }\n}\n\nModal.defaultProps = {\n  classes: {\n    modal: '',\n    content: '',\n    button: ''\n  }\n};\n\nexport default withOutsideClick(Modal);\n","import React, { Component } from 'react';\nimport { Modal } from '../Modal';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\nimport './ProjectComposer.scss';\n\nconst INITIAL_STATE = {\n  projectTitle: ''\n};\n\nexport default class ProjectComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { projectTitle } = this.state;\n    const { handleSubmit, onClose } = this.props;\n    this.props.handleSubmit(projectTitle);\n    this.props.onClose();\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { projectTitle } = this.state;\n    return (\n      <Modal onModalClose={this.props.onClose} size=\"sm\">\n      <h3 className=\"project-composer__title\">Create new project</h3>\n        <form onSubmit={this.onSubmit}>\n          <Input\n            name=\"projectTitle\"\n            title=\"Project Title\"\n            value={projectTitle}\n            onChange={this.onChange}\n            type=\"text\"\n          />\n          <Button\n            className=\"project-composer__btn--add\"\n            type=\"submit\"\n            onClick={this.onSubmit}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Create Project\n          </Button>\n        </form>\n      </Modal>\n    );\n  }\n}\n","export const LIST = 'LIST';\nexport const TASK = 'TASK';\nexport const SUBTASK = 'SUBTASK';\nexport const FOLDER = 'FOLDER';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input } from '../Input';\nimport { Icon } from '../Icon';\nimport { withAuthorization } from '../Session';\nimport { projectSelectors } from '../../ducks/projects';\nimport { Button } from '../Button';\nimport './ListComposer.scss';\n\nconst INITIAL_STATE = {\n  name: '',\n  isActive: false\n};\n\nclass ListComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ name: '' });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { name } = this.state;\n    const { projectId, firebase } = this.props;\n    firebase.addList({ projectId, name });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = e => {\n    if (e.target.value === '') {\n      this.setState({\n        isActive: false\n      });\n    }\n  };\n\n  render() {\n    const { name, isActive } = this.state;\n    return (\n      <div\n        className={`list-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"list-composer__form\" onSubmit={this.onSubmit}>\n          <Input\n            onChange={this.onChange}\n            value={name}\n            placeholder={isActive ? 'Enter list title...' : 'Add a list'}\n            required\n            name=\"name\"\n            hideLabel\n            className=\"list-composer__input\"\n          />\n          {isActive && (\n            <div className=\"list-composer__footer\">\n              <Button\n                className=\"list-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add List\n              </Button>\n              <Button\n                className=\"list-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    projectsById: projectSelectors.getProjectsById(state),\n    projectsArray: projectSelectors.getProjectsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListComposer)\n);\n","import React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { ListComposer } from '../ListComposer';\n\nconst Board = props => {\n  const { projectId, children } = props;\n  return (\n    <Droppable\n      droppableId={projectId}\n      type={droppableTypes.LIST}\n      direction=\"horizontal\"\n    >\n      {provided => (\n        <div\n          className=\"board\"\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n        >\n          {children}\n          {provided.placeholder}\n          <ListComposer projectId={projectId} />\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nexport default Board;\n","export const SELECT_TASK = 'SELECT_TASK';\n\nexport const selectTask = taskId => {\n  return {\n    type: SELECT_TASK,\n    taskId\n  };\n};\n\nconst INITIAL_STATE = null;\n\nexport const selectedTask = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SELECT_TASK:\n      return action.taskId;\n    default:\n      return state;\n  }\n};\n\nexport const getSelectedTaskId = state => state.selectedTask;\n\nexport const getSelectedTask = state => {\n  const { selectedTask: taskId, tasksById } = state;\n  return tasksById[taskId];\n};\n","export const getListsById = state => {\n  return state.listsById;\n};\n\nexport const getListName = (state, listId) => {\n  if (!listId) return '';\n  const { listsById } = state;\n  return listsById[listId].name;\n};\n\nexport const getSelectedProjectLists = state => {\n  const { listsById, projectsById, selectedProject } = state;\n  const project = projectsById[selectedProject];\n  if (!project) return [];\n  const { listIds } = project;\n  if (!listIds) return [];\n\n  return listIds.map(listId => listsById[listId]);\n};\n\nexport const getProjectLists = (state, listIds) => {\n  const { listsById } = state;\n  if (!listIds) return [];\n\n  return listIds.map(listId => listsById[listId]);\n};\n","import * as types from './types';\nimport { ADD_TASK, REMOVE_TASK } from '../tasks/types';\n\nconst listsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_LISTS_BY_ID: {\n      const { listsById } = action;\n      return {\n        ...state,\n        ...listsById\n      };\n    }\n    case types.UPDATE_LIST: {\n      const { listId, listData } = action;\n      return {\n        ...state,\n        [listId]: {\n          ...state[listId],\n          ...listData\n        }\n      };\n    }\n    case types.ADD_LIST: {\n      const { listId, listData } = action;\n      return {\n        ...state,\n        [listId]: {\n          listId,\n          ...listData\n        }\n      };\n    }\n    case types.REMOVE_LIST: {\n      const { listId } = action;\n      const { [listId]: deletedList, ...restOfLists } = state;\n      return restOfLists;\n    }\n    case ADD_TASK: {\n      const { taskId, taskData } = action;\n      const { listId } = taskData;\n      if (!listId) return state;\n      return {\n        ...state,\n        [listId]: {\n          ...state[listId],\n          taskIds: [...state[listId].taskIds, taskId]\n        }\n      };\n    }\n    case REMOVE_TASK: {\n      const { taskId, listId } = action;\n      if (!listId || !(listId in state)) return state;\n      return {\n        ...state,\n        [listId]: {\n          ...state[listId],\n          listIds: state[listId].taskIds.filter(id => id !== taskId)\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default listsById;\n","export const getTasksById = state => {\n  return state.tasksById;\n};\n\nexport const getListTasks = (state, taskIds) => {\n  const { tasksById } = state;\n  return taskIds.map(taskId => tasksById[taskId]);\n};\n\nexport const getFolderTasks = (state, taskIds) => {\n  const { tasksById } = state;\n  return taskIds.map(taskId => tasksById[taskId]);\n};\n\nexport const getSimpleTasks = (state, taskIds) => {\n  const { tasksById } = state;\n  if (!taskIds) return {};\n\n  return taskIds.reduce((tasks, taskId) => {\n    const { name, isCompleted } = tasksById[taskId];\n    tasks[taskId] = {\n      name,\n      isCompleted\n    };\n    return tasks;\n  }, {});\n};\n\nexport const getTaskTags = (state, ownProps) => {\n  const { projectId, tags: taskTags } = ownProps;\n  if (!taskTags) return [];\n\n  if (projectId) {\n    const { projectsById } = state;\n    const { tags: projectTags } = projectsById[projectId];\n    return taskTags.map(taskTag => projectTags[taskTag]);\n  }\n  const { tags: userTags } = state.currentUser;\n  return taskTags.map(taskTag => userTags[taskTag]);\n};\n","import * as types from './types';\n\nconst tasksById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_TASKS_BY_ID: {\n      const { tasksById } = action;\n      return {\n        ...state,\n        ...tasksById\n      };\n    }\n    case types.UPDATE_TASKS_BY_ID: {\n      const { task } = action;\n      console.log('tasks updated');\n      return {\n        ...state,\n        ...task\n      };\n    }\n    case types.ADD_TASK: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        [taskId]: {\n          taskId,\n          ...taskData\n        }\n      };\n    }\n    case types.REMOVE_TASK: {\n      const { taskId } = action;\n      const { [taskId]: deletedTask, ...restOfTasks } = state;\n      return restOfTasks;\n    }\n    case types.UPDATE_TASK: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        [taskId]: {\n          ...state[taskId],\n          ...taskData\n        }\n      };\n    }\n    case types.ADD_TAG: {\n      const { taskId, tag } = action;\n      return {\n        ...state,\n        [taskId]: {\n          ...state[taskId],\n          tags: [...state[taskId].tags, tag]\n        }\n      };\n    }\n    case types.REMOVE_TAG: {\n      const { taskId, name } = action;\n      if (!taskId || !(taskId in state)) return state;\n      return {\n        ...state,\n        [taskId]: {\n          ...state[taskId],\n          tags: state[taskId].tags.filter(tag => tag !== name)\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default tasksById;\n","export const getSubtasksById = state => {\n  const { subtasksById } = state;\n  return subtasksById;\n};\n\nexport const getSubtasksArray = (state, subtaskIds) => {\n  const { subtasksById } = state;\n  if (!subtaskIds) return [];\n\n  return subtaskIds.map(subtaskId => {\n    return subtasksById[subtaskId];\n  });\n};\n\nexport const getSimpleSubtasks = (state, subtaskIds) => {\n  const { subtasksById } = state;\n  if (!subtaskIds) return {};\n\n  return subtaskIds.reduce((subtasks, subtaskId) => {\n    const { name, isCompleted } = subtasksById[subtaskId];\n        subtasks[subtaskId] = {\n          name,\n          isCompleted\n        };\n        return subtasks;\n      }, {});\n  };\n\nexport const getActiveSubtasks = (state, subtaskIds) => {\n  const subtasks = getSubtasksArray(state, subtaskIds);\n  return subtasks.filter(subtask => !subtask.isCompleted);\n};\n\nexport const getCompletedSubtasks = (state, subtaskIds) => {\n  const subtasks = getSubtasksArray(state, subtaskIds);\n  if (subtasks.includes(undefined)) return [];\n  return subtasks.filter(subtask => subtask.isCompleted);\n};\n","import * as types from './types';\n\nconst subtasksById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_SUBTASKS_BY_ID: {\n      const { subtasksById } = action;\n      return {\n        ...state,\n        ...subtasksById\n      };\n    }\n    case types.ADD_SUBTASK: {\n      const { subtaskId, subtaskData } = action;\n      return {\n        ...state,\n        [subtaskId]: {\n          subtaskId,\n          ...subtaskData\n        }\n      };\n    }\n    case types.DELETE_SUBTASK: {\n      const { subtaskId } = action;\n      const { [subtaskId]: deletedSubtask, ...restOfSubtasks } = state;\n      return restOfSubtasks;\n    }\n    case types.UPDATE_SUBTASK: {\n      const { subtaskId, subtaskData } = action;\n      return {\n        ...state,\n        [subtaskId]: {\n          ...state[subtaskId],\n          ...subtaskData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default subtasksById;\n","export const BACKSPACE = 'Backspace';\nexport const ENTER = 'Enter';\nexport const TAB = 'Tab';\nexport const ARROW_DOWN = 'ArrowDown';\nexport const ARROW_UP = 'ArrowUp';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon } from '../Icon';\nimport { withFirebase } from '../Firebase';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\nimport * as keys from '../../constants/keys';\nimport './TaskComposer.scss';\n\nconst INITIAL_STATE = {\n  name: '',\n  isActive: false\n};\n\nclass TaskComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ name: '' });\n  };\n\n  onSubmit = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { name } = this.state;\n    const {\n      userId,\n      folderId,\n      firebase,\n      projectId,\n      projectName,\n      listId,\n      listName\n    } = this.props;\n    firebase.addTask({\n      name,\n      userId,\n      folderId,\n      projectId,\n      projectName,\n      listId,\n      listName\n    });\n    this.resetForm();\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onBlur = e => {\n    if (e.target.value !== '') return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const { name, isActive } = this.state;\n\n    return (\n      <div\n        className={`task-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"task-composer__form\" onSubmit={this.onSubmit}>\n          <Button\n            className=\"task-composer__btn--submit\"\n            type=\"submit\"\n            onClick={this.onSubmit}\n            iconOnly\n          >\n            <Icon name=\"plus-circle\" />\n          </Button>\n          <Input\n            onChange={this.onChange}\n            value={name}\n            placeholder=\"Add a task\"\n            isRequired\n            name=\"name\"\n            className=\"task-composer__input\"\n            onKeyDown={this.onSubmit}\n            hideLabel\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userId: currentUserSelectors.getCurrentUserId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TaskComposer)\n);\n","import React, { Component, createRef } from 'react';\nimport './Textarea.scss';\n\nexport default class Textarea extends Component {\n  static defaultProps = {\n    isAutoHeightResizeEnabled: true\n  };\n\n  constructor(props) {\n    super(props);\n    this.textareaEl = createRef();\n  }\n\n  componentDidMount() {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n    this.autoHeightResize();\n  }\n\n  autoHeightResize = () => {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n\n    this.textareaEl.current.style.height = '0px'; // resets scroll height\n    this.textareaEl.current.style.height = `${\n      this.textareaEl.current.scrollHeight\n    }px`;\n  };\n\n  render() {\n    const {\n      className,\n      name,\n      value,\n      onChange,\n      placeholder,\n      isRequired,\n      onBlur,\n      onFocus,\n      onKeyDown,\n      onDragStart,\n      isReadOnly\n    } = this.props;\n    return (\n      <textarea\n        className={`textarea ${className}`}\n        id={name}\n        name={name}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={isRequired}\n        onBlur={onBlur}\n        onInput={this.autoHeightResize}\n        ref={this.textareaEl}\n        onFocus={onFocus}\n        onKeyDown={onKeyDown}\n        onDragStart={onDragStart}\n        readOnly={isReadOnly}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon } from '../Icon';\nimport { withFirebase } from '../Firebase';\nimport { projectActions, projectSelectors } from '../../ducks/projects';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport * as keys from '../../constants/keys';\nimport './CardComposer.scss';\n\nconst INITIAL_STATE = {\n  name: '',\n  isActive: false\n};\n\nclass CardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ name: '' });\n  };\n\n  onSubmit = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { name } = this.state;\n    const {\n      firebase,\n      projectId,\n      projectName,\n      listId,\n      listName,\n      userId\n    } = this.props;\n    firebase.addTask({\n      projectId,\n      listId,\n      name,\n      projectName,\n      listName,\n      userId\n    });\n    this.resetForm();\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onBlur = e => {\n    if (e.target.value !== '') return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const { name, isActive } = this.state;\n\n    return (\n      <div\n        className={`card-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"card-composer__form\" onSubmit={this.onSubmit}>\n          <Textarea\n            onChange={this.onChange}\n            value={name}\n            placeholder={isActive ? 'Enter card title...' : 'Add a card'}\n            isRequired\n            name=\"name\"\n            className=\"card-composer__textarea\"\n            isAutoHeightResizeEnabled={false}\n            onKeyDown={this.onSubmit}\n          />\n          {isActive && (\n            <div className=\"card-composer__footer\">\n              <Button\n                className=\"card-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add Card\n              </Button>\n              <Button\n                className=\"card-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userId: currentUserSelectors.getCurrentUserId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateProjectsById: project =>\n      dispatch(projectActions.updateProjectsById(project))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardComposer)\n);\n","import React from 'react';\nimport './Menu.scss';\n\nconst Menu = ({ children, onClick, className = '', menuRef }) => {\n  return (\n    <ul className={`menu ${className}`} onClick={onClick} ref={menuRef}>\n      {children}\n    </ul>\n  );\n};\n\nexport default Menu;\n","import React from 'react';\nimport './Menu.scss';\n\nconst MenuItem = ({ children, className = '' }) => {\n  return <li className={`menu__item ${className}`}>{children}</li>;\n};\n\nexport default MenuItem;\n","import React, { Component } from 'react';\n\nexport default class Popover extends Component {\n  state = {\n    isTouchEnabled: false\n  };\n\n  componentDidMount() {\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick, false);\n  }\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  handleOutsideClick = e => {\n    const { onOutsideClick } = this.props;\n    onOutsideClick(e.target);\n  };\n\n  handleTouch = () => {\n    this.setState({\n      isTouchEnabled: true\n    });\n    // remove touch handler to prevent unnecessary refires\n    document.removeEventListener('touchstart', this.handleTouch);\n    // remove outside click handler from click events\n    document.removeEventListener('click', this.handleOutsideClick);\n    // reattach outside click handler to touchstart events\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  render() {\n    const { className, onClick, style, children } = this.props;\n    return (\n      <div className={`popover ${className}`} onClick={onClick} style={style}>\n        {children}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from '../Button';\nimport Popover from './Popover';\nimport './Popover.scss';\n\nexport default class PopoverWrapper extends Component {\n  state = {\n    isActive: 'isActive' in this.props ? null : false\n  };\n\n  static defaultProps = {\n    classes: {\n      wrapper: '',\n      popover: ''\n    },\n    buttonProps: {},\n    align: 'left',\n    anchorEl: null\n  };\n\n  handleOutsideClick = target => {\n    if (this.componentEl && this.componentEl.contains(target)) return;\n    const { onOutsideClick, onPopoverClose } = this.props;\n\n    if (onOutsideClick) {\n      onOutsideClick();\n    } else {\n      this.setState({\n        isActive: false\n      });\n  \n      if (onPopoverClose) {\n        onPopoverClose();\n      }\n    }\n  };\n\n  toggleOpen = () => {\n    const { onButtonClick } = this.props;\n\n    if (onButtonClick) {\n      onButtonClick();\n    } else {\n      this.setState(prevState => ({\n        isActive: !prevState.isActive\n      }));\n    }\n  };\n\n  handleClose = e => {\n    if ('isActive' in this.props) return;\n    if (e.target.matches('input')) return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const {\n      children,\n      alignInner,\n      onWrapperClick,\n      alignOuter,\n      buttonProps,\n      classes,\n      anchorEl\n    } = this.props;\n    const isActive = 'isActive' in this.props ? this.props.isActive : this.state.isActive;\n\n    let popoverWrapperStyle = null;\n\n    if (anchorEl) {\n      const { offsetTop, offsetLeft } = anchorEl;\n      popoverWrapperStyle = {\n        position: 'absolute',\n        top: offsetTop,\n        [alignOuter]: offsetLeft\n      };\n    }\n\n    return (\n      <div\n        className={`popover-wrapper ${isActive ? 'is-active' : ''} ${\n          classes.wrapper\n        }`}\n        ref={el => (this.componentEl = el)}\n        style={popoverWrapperStyle}\n        onClick={onWrapperClick}\n      >\n        <Button\n          type=\"button\"\n          onClick={this.toggleOpen}\n          buttonRef={this.props.buttonRef}\n          {...buttonProps}\n        />\n        {isActive && (\n          <Popover\n            className={`align-${alignInner} ${classes.popover}`}\n            onClick={this.handleClose}\n            onOutsideClick={this.handleOutsideClick}\n          >\n            {children}\n          </Popover>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport './Tag.scss';\n\nconst Tag = ({ name, color, size, onDelete, className, tagRef, variant }) => (\n  <span\n    className={`tag tag--${size} bg--${color} ${\n      variant !== 'default' ? `tag--${variant}` : ''\n    } ${className}`}\n    ref={tagRef}\n  >\n    {name}\n    {size === 'md' && (\n      <Button\n        type=\"button\"\n        size=\"sm\"\n        className=\"tag__btn--delete\"\n        onClick={onDelete}\n        iconOnly\n      >\n        <Icon name=\"x\" />\n      </Button>\n    )}\n  </span>\n);\n\nTag.defaultProps = {\n  className: '',\n  onDelete: () => null,\n  color: 'default',\n  size: 'md',\n  variant: 'default'\n};\n\nexport default Tag;\n","import React, { Component } from 'react';\nimport './Avatar.scss';\nimport { fromJSON } from 'tough-cookie';\n\nexport default class Avatar extends Component {\n  static defaultProps = {\n    imgSrc: null,\n    classes: {\n      avatar: '',\n      img: '',\n      placeholder: ''\n    },\n    size: 'md',\n    variant: 'circle',\n    name: 'Guest'\n  };\n\n  getUserInitials = fullName => {\n    return fullName\n      .split(' ')\n      .map(name => name.charAt(0))\n      .join('')\n      .toUpperCase();\n  };\n\n  render() {\n    const {\n      imgSrc,\n      imgProps,\n      classes,\n      name,\n      variant,\n      color,\n      size\n    } = this.props;\n    return (\n      <div\n        className={`avatar avatar--${size} avatar--${variant} ${\n          classes.avatar\n        }`}\n      >\n        {imgSrc !== null ? (\n          <img\n            src={imgSrc}\n            alt={name}\n            className={`avatar__img ${classes.img}`}\n            {...imgProps}\n          />\n        ) : (\n          <div\n            className={`avatar__placeholder ${classes.placeholder}`}\n            style={{ backgroundColor: color }}\n          >\n            {this.getUserInitials(name)}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","// Full names, shortnames, and total days of months,\n// excluding February (depends on leap year)\nexport const MONTHS = [\n  {\n    long: 'January',\n    short: 'Jan',\n    daysTotal: 31\n  },\n  {\n    long: 'February',\n    short: 'Feb',\n    daysTotal: null\n  },\n  {\n    long: 'March',\n    short: 'Mar',\n    daysTotal: 31\n  },\n  {\n    long: 'April',\n    short: 'Apr',\n    daysTotal: 30\n  },\n  {\n    long: 'May',\n    short: 'May',\n    daysTotal: 31\n  },\n  {\n    long: 'June',\n    short: 'Jun',\n    daysTotal: 30\n  },\n  {\n    long: 'July',\n    short: 'Jul',\n    daysTotal: 31\n  },\n  {\n    long: 'August',\n    short: 'Aug',\n    daysTotal: 31\n  },\n  {\n    long: 'September',\n    short: 'Sep',\n    daysTotal: 30\n  },\n  {\n    long: 'October',\n    short: 'Oct',\n    daysTotal: 31\n  },\n  {\n    long: 'November',\n    short: 'Nov',\n    daysTotal: 30\n  },\n  {\n    long: 'December',\n    short: 'Dec',\n    daysTotal: 31\n  }\n];\n\n// Full names and shortnames of days of week\nexport const WEEK_DAYS = [\n  { long: 'Sunday', short: 'Sun', narrow: 'S' },\n  { long: 'Monday', short: 'Mon', narrow: 'M' },\n  { long: 'Tuesday', short: 'Tue', narrow: 'T' },\n  { long: 'Wednesday', short: 'Wed', narrow: 'W' },\n  { long: 'Thursday', short: 'Thu', narrow: 'T' },\n  { long: 'Friday', short: 'Fri', narrow: 'F' },\n  { long: 'Saturday', short: 'Sat', narrow: 'S' }\n];\n","// Helper functions for working with date objects\n\n/* eslint-disable no-nested-ternary */\nimport { MONTHS, WEEK_DAYS } from './constants';\n\nexport { MONTHS, WEEK_DAYS };\n\nexport const isLeapYear = year =>\n  (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n\nexport const getMonthFirstDay = (monthIndex, year) =>\n  new Date(year, monthIndex, 1).getDay();\n\nexport const isToday = date =>\n  new Date().setHours(0, 0, 0, 0) === date.setHours(0, 0, 0, 0);\n\nexport const isYesterday = date => {\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  return today.setDate(today.getDate() - 1) === date.setHours(0, 0, 0, 0);\n};\n\nexport const isTomorrow = date => {\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  return today.setDate(today.getDate() + 1) === date.setHours(0, 0, 0, 0);\n};\n\nexport const isThisYear = date => {\n  return date.getFullYear() === new Date().getFullYear();\n};\n\nexport const getMonthDays = (monthIndex, year) => {\n  if (monthIndex === 1) {\n    return isLeapYear(year) ? 29 : 28;\n  }\n  return MONTHS[monthIndex].daysTotal;\n};\n\nexport const getPrevMonth = (monthIndex, year) => {\n  return {\n    month: monthIndex > 0 ? monthIndex - 1 : 11,\n    year: monthIndex > 0 ? year : year - 1\n  };\n};\n\nexport const getNextMonth = (monthIndex, year) => {\n  return {\n    month: monthIndex < 11 ? monthIndex + 1 : 0,\n    year: monthIndex < 11 ? year : year + 1\n  };\n};\n\nexport const getMonthDates = (month, year) => {\n  const monthDays = getMonthDays(month, year);\n  const monthFirstDay = getMonthFirstDay(month, year);\n  const { month: prevMonth, year: prevMonthYear } = getPrevMonth(month, year);\n  const prevMonthDays = getMonthDays(prevMonth, prevMonthYear);\n  const daysFromPrevMonth = monthFirstDay;\n  const daysFromNextMonth = 7 - ((monthFirstDay + monthDays) % 7);\n  const prevMonthDates = [...new Array(daysFromPrevMonth)].map((n, i) => {\n    return {\n      day: prevMonthDays - daysFromPrevMonth + i + 1,\n      month: prevMonth,\n      year: prevMonthYear\n    };\n  });\n\n  const thisMonthDates = [...new Array(monthDays)].map((n, i) => {\n    return {\n      day: i + 1,\n      month,\n      year\n    };\n  });\n\n  const nextMonthDates = [...new Array(daysFromNextMonth)].map((n, i) => {\n    return {\n      day: i + 1,\n      ...getNextMonth(month, year)\n    };\n  });\n\n  return [...prevMonthDates, ...thisMonthDates, ...nextMonthDates];\n};\n\nexport const isDate = date =>\n  Object.prototype.toString.call(date) === '[object Date]';\n\nexport const getSimpleDate = date => {\n  const dateObj =\n    !isDate(date) && typeof date === 'string' ? new Date(date) : date;\n  return {\n    day: dateObj.getDate(),\n    month: dateObj.getMonth(),\n    year: dateObj.getFullYear()\n  };\n};\n\nexport const isSimpleDate = date => {\n  return date && 'day' in date && 'month' in date && 'year' in date;\n};\n\nexport const isSameDate = (date, base = new Date()) => {\n  if (\n    (!isDate(date) && !isSimpleDate(date)) ||\n    (!isDate(base) && !isSimpleDate(base))\n  )\n    return false;\n  const dateDay = date.day || date.getDate();\n  const dateMonth = date.month || date.getMonth();\n  const dateYear = date.year || date.getFullYear();\n  const baseDay = base.day || base.getDate();\n  const baseMonth = base.month || base.getMonth();\n  const baseYear = date.year || base.getFullYear();\n  return (\n    dateDay === baseDay && dateMonth === baseMonth && dateYear === baseYear\n  );\n};\n\nexport const getNextYears = (num, startingYear = new Date().getFullYear()) => {\n  return [...new Array(num)].map((item, i) => {\n    return startingYear + i;\n  });\n};\n\nexport const zeroPad = (value, length) => {\n  return `${value}`.padStart(length, '0');\n};\n\n/**\n * Returns string representation of simple date object with format `mm-dd-yy`\n * @param {Object} date - simple date object\n */\nexport const toSimpleDateString = date => {\n  const simpleDate = isSimpleDate(date)\n    ? date\n    : isDate(date)\n    ? getSimpleDate(date)\n    : undefined;\n  if (!simpleDate) return '';\n  const { day, month, year } = simpleDate;\n  return `${zeroPad(month + 1, 2)}-${zeroPad(day, 2)}-${year - 2000}`;\n};\n\n/**\n * Converts simple date string back to simple date object\n * @param {String} dateString\n */\nexport const toSimpleDateObj = dateString => {\n  const dateArr = dateString.split('-');\n  const month = dateArr[0] - 1;\n  const day = +dateArr[1];\n  const year = +dateArr[2] + 2000;\n  if (day > getMonthDays(month, year)) {\n    return getSimpleDate(new Date(year, month, day));\n  }\n  return {\n    month,\n    day,\n    year\n  };\n};\n\nexport const isSDSFormat = dateString => {\n  return /^\\d{2}-\\d{2}-\\d{2}$/.test(dateString);\n};\n\n/**\n * Checks if date falls within specified time frame\n * @param {Date Object} date - Javascript date object\n * @param {Number} num - The number of days comprising the time frame to check the date against\n * @param {Date Object} startingDate - The first day of the time frame\n */\nexport const isWithinDays = (date, num, startingDate = new Date()) => {\n  const timeStart = startingDate.setHours(0, 0, 0, 0);\n  const endingDate = new Date(startingDate);\n  const timeEnd = endingDate.setDate(endingDate.getDate() + num);\n  return +date >= timeStart && +date < timeEnd;\n};\n\nexport const isPriorDate = (date, baseDate = new Date()) => {\n  return +date < baseDate.setHours(0, 0, 0, 0);\n};\n\nexport const toDateString = (\n  date,\n  options = {\n    useRelative: false,\n    format: {\n      weekday: 'short',\n      month: 'short',\n      day: 'numeric',\n      year: '2-digit'\n    }\n  }\n) => {\n  const { useRelative, format } = options;\n  if (useRelative) {\n    if (isToday(date)) {\n      return 'Today';\n    }\n    if (isYesterday(date)) {\n      return 'Yesterday';\n    }\n    if (isTomorrow(date)) {\n      return 'Tomorrow';\n    }\n    if (isWithinDays(date, 7)) {\n      return WEEK_DAYS[date.getDay()].long;\n    }\n  }\n  return Object.keys(format)\n    .map(key => {\n      switch (key) {\n        case 'weekday': {\n          const value = format[key];\n          const weekday = date.getDay();\n          return WEEK_DAYS[weekday][value];\n        }\n        case 'month': {\n          const value = format[key];\n          const month = date.getMonth();\n          if (value === 'numeric') {\n            return month + 1;\n          } if (value === '2-digit') {\n            return zeroPad(month + 1, 2);\n          } else {\n            return MONTHS[month][value];\n          }\n        }\n        case 'day': {\n          const value = format[key];\n          const day = date.getDate();\n          if (value === '2-digit') {\n            return zeroPad(day, 2);\n          } else {\n            return day;\n          }\n        }\n        case 'year': {\n          const value = format[key];\n          const year = date.getFullYear();\n          if (useRelative && isThisYear(date)) {\n            return null;\n          }\n          if (value === '2-digit') {\n            return `'${+year.slice(2)}`;\n          } else {\n            return year;\n          }\n        }\n      }\n    })\n    .join(' ')\n    .trim();\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { userActions, userSelectors } from '../../ducks/users';\nimport { subtaskSelectors } from '../../ducks/subtasks';\nimport './Card.scss';\nimport { Tag } from '../Tag';\nimport { Icon } from '../Icon';\nimport { Avatar } from '../Avatar';\nimport { toDateString, isPriorDate } from '../../utils/date';\n\nconst CardDetail = ({ icon, children, className = '' }) => (\n  <div className={`card__detail ${className}`}>\n    <Icon name={icon} />\n    {children}\n  </div>\n);\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.taskTags.indexOf(undefined) !== -1) {\n      return false;\n    }\n    return true;\n  }\n\n  handleCardClick = e => {\n    if (e.target.matches('button') || e.target.matches('a')) return;\n    const { taskId, onCardClick } = this.props;\n    onCardClick(taskId);\n  };\n\n  render() {\n    const {\n      name,\n      taskId,\n      taskIndex,\n      taskTags,\n      commentIds,\n      dueDate,\n      subtaskIds,\n      completedSubtasks,\n      taskMembers\n    } = this.props;\n\n    const dueDateStr = dueDate\n      ? toDateString(dueDate.toDate(), {\n          useRelative: true,\n          format: { month: 'short', day: 'numeric' }\n        })\n      : null;\n    const isDueToday = dueDateStr === 'Today';\n    const isDueTmrw = dueDateStr === 'Tomorrow';\n    const isPastDue = dueDate && isPriorDate(dueDate.toDate());\n    return (\n      <Draggable draggableId={taskId} index={taskIndex}>\n        {provided => (\n          <div\n            className=\"card\"\n            onClick={this.handleCardClick}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            style={{\n              ...provided.draggableProps.style,\n              backgroundColor: '#fff'\n            }}\n          >\n            <div className=\"card__header\" ref={el => (this.headerEl = el)}>\n              <div className=\"card__tags\">\n                {taskTags.map(taskTag => (\n                  <Tag\n                    key={taskTag.name}\n                    size=\"sm\"\n                    color={taskTag.color}\n                    variant=\"pill\"\n                    className=\"card__tag\"\n                  />\n                ))}\n              </div>\n              <h3 className=\"card__title\">{name}</h3>\n            </div>\n            <div className=\"card__body\">\n              {dueDate && (\n                <CardDetail\n                  icon=\"calendar\"\n                  className={`card__due-date ${\n                    isDueToday\n                      ? 'is-due-today'\n                      : isDueTmrw\n                      ? 'is-due-tmrw'\n                      : isPastDue\n                      ? 'is-past-due'\n                      : ''\n                  }\n                  `}\n                >\n                  {dueDateStr}\n                </CardDetail>\n              )}\n              {subtaskIds && subtaskIds.length > 0 && (\n                <CardDetail icon=\"check-square\">\n                  {completedSubtasks.length}/{subtaskIds.length}\n                </CardDetail>\n              )}\n              {commentIds && commentIds.length > 0 && (\n                <CardDetail icon=\"message-circle\">\n                  {commentIds.length}\n                </CardDetail>\n              )}\n            </div>\n            <div className=\"card__footer\">\n              {taskMembers && taskMembers.length > 0 && (\n                <div className=\"card__members-wrapper\">\n                  <div className=\"card__members\">\n                    {taskMembers.map(member => {\n                      const { name, photoURL, userId } = member;\n                      return (\n                        <Avatar\n                          classes={{\n                            avatar: 'card__avatar',\n                            placeholder: 'card__avatar-placeholder'\n                          }}\n                          fullName={name}\n                          size=\"sm\"\n                          variant=\"circle\"\n                          imgSrc={photoURL}\n                          key={userId}\n                        />\n                      );\n                    })}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    taskTags: taskSelectors.getTaskTags(state, ownProps),\n    completedSubtasks: subtaskSelectors.getCompletedSubtasks(\n      state,\n      ownProps.subtaskIds\n    ),\n    taskMembers: userSelectors.getMembersArray(state, ownProps.assignedTo)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Card);\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport './Checkbox.scss';\n\nconst Checkbox = ({\n  value,\n  id,\n  name,\n  isChecked,\n  onClick,\n  onChange,\n  className,\n  labelClass,\n  ...props\n}) => {\n  return (\n    <label\n      htmlFor={id}\n      onClick={onClick}\n      className={`checkbox__label ${labelClass}`}\n    >\n      {isChecked && <Icon name=\"check\" />}\n      <input\n        type=\"checkbox\"\n        id={id}\n        value={value}\n        name={name}\n        checked={isChecked}\n        className={`checkbox ${className}`}\n        onChange={onChange}\n        {...props}\n      />\n    </label>\n  );\n};\n\nCheckbox.defaultProps = {\n  className: '',\n  labelClass: ''\n};\n\nexport default Checkbox;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Checkbox } from '../Checkbox';\nimport { Textarea } from '../Textarea';\nimport { Tag } from '../Tag';\nimport { withFirebase } from '../Firebase';\nimport * as keys from '../../constants/keys';\nimport { taskSelectors } from '../../ducks/tasks';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport './Task.scss';\n\nclass Task extends Component {\n  state = {\n    isFocused: false,\n    name: this.props.name,\n    prevPropsName: this.props.name\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.name !== state.prevPropsName) {\n      return {\n        name: props.name,\n        prevPropsName: props.name\n      };\n    }\n    return null;\n  }\n\n  onFocus = () => {\n    this.setState({\n      isFocused: true\n    });\n  };\n\n  onChange = e => {\n    this.setState({\n      name: e.target.value\n    });\n  };\n\n  onBlur = () => {\n    const { name, firebase, taskId } = this.props;\n    const { name: newName } = this.state;\n    if (name !== newName) {\n      firebase.updateTask(taskId, {\n        name: newName\n      });\n    }\n    this.setState({\n      isFocused: false\n    });\n  };\n\n  deleteTask = e => {\n    if (e.target.value !== '' || e.key !== keys.BACKSPACE) return;\n    const { taskId, firebase, listId, assignedTo, folders } = this.props;\n    firebase.deleteTask({ taskId, listId, assignedTo, folders });\n  };\n\n  toggleCompleted = () => {\n    const { taskId, isCompleted, firebase } = this.props;\n    firebase.updateTask(taskId, {\n      isCompleted: !isCompleted,\n      completedAt: !isCompleted ? firebase.getTimestamp() : null\n    });\n  };\n\n  handleTaskClick = e => {\n    if (\n      e.target.matches('button') ||\n      e.target.matches('a') ||\n      e.target.matches('label') ||\n      e.target.matches('input[type=\"checkbox\"]')\n    )\n      return;\n    const { taskId, onTaskClick } = this.props;\n    onTaskClick(taskId);\n  };\n\n  render() {\n    const { taskId, taskTags, isCompleted, innerRef, provided } = this.props;\n    const { isFocused, name } = this.state;\n    const draggableProps = provided\n      ? provided.draggableProps\n      : { style: { listStyle: 'none' } };\n    const dragHandleProps = provided\n      ? provided.dragHandleProps\n      : { style: { listStyle: 'none' } };\n\n    return (\n      <li\n        className={`task ${isFocused ? 'is-focused' : ''}`}\n        onClick={this.handleTaskClick}\n        ref={innerRef}\n        {...draggableProps}\n        {...dragHandleProps}\n      >\n        <Checkbox\n          id={`cb-${taskId}`}\n          value={taskId}\n          name={taskId}\n          isChecked={isCompleted}\n          onChange={this.toggleCompleted}\n          className=\"task__checkbox\"\n          labelClass=\"task__checkbox-label\"\n        />\n        <Textarea\n          value={name}\n          onFocus={this.onFocus}\n          onChange={this.onChange}\n          onBlur={this.onBlur}\n          name={taskId}\n          className=\"task__textarea\"\n          onKeyDown={this.deleteTask}\n        />\n        <div className=\"task__tags\">\n          {taskTags.map(taskTag => (\n            <Tag\n              name={taskTag.name}\n              key={taskTag.name}\n              size=\"sm\"\n              color={taskTag.color}\n              className=\"task__tag\"\n            />\n          ))}\n        </div>\n      </li>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    userId: currentUserSelectors.getCurrentUserId(state),\n    taskTags: taskSelectors.getTaskTags(state, ownProps)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Task)\n);\n","import React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport Task from './Task';\n\nconst DraggableTask = ({\n  taskId,\n  index,\n  onTaskClick,\n  listId,\n  folderId,\n  task\n}) => (\n  <Draggable draggableId={taskId} index={index}>\n    {(provided, snapshot) => (\n      <Task\n        innerRef={provided.innerRef}\n        provided={provided}\n        onTaskClick={onTaskClick}\n        listId={listId}\n        folderId={folderId}\n        {...task}\n      />\n    )}\n  </Draggable>\n);\n\nexport default DraggableTask;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { Card } from '../Card';\nimport { DraggableTask } from '../Task';\n\nexport default class Tasks extends Component {\n  /*\n\n  shouldComponentUpdate(nextProps) {\n    if (this.props.cards === nextProps.cards) {\n      return false;\n    }\n    return true;\n  }\n*/\n  componentDidUpdate(prevProps) {\n    if (this.props.tasks.length > prevProps.tasks.length) {\n      this.scrollToBottom();\n    }\n  }\n\n  scrollToBottom = () => {\n    if (!this.listEnd) return;\n    this.listEnd.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  render() {\n    const { listId, tasks, onTaskClick, folderId, view } = this.props;\n    const isBoardView = view === 'board';\n\n    const inner = tasks.map((task, taskIndex) => {\n      return isBoardView ? (\n        <Card\n          key={task.taskId}\n          taskIndex={taskIndex}\n          onCardClick={onTaskClick}\n          {...task}\n        />\n      ) : (\n        <DraggableTask\n          key={task.taskId}\n          index={taskIndex}\n          onTaskClick={onTaskClick}\n          listId={listId}\n          folderId={folderId}\n          taskId={task.taskId}\n          task={task}\n        />\n      );\n    });\n\n    return (\n      <Droppable droppableId={listId || folderId} type={droppableTypes.TASK}>\n        {(provided, snapshot) =>\n          isBoardView ? (\n            <div\n              className=\"list__cards\"\n              ref={provided.innerRef}\n              style={{ minHeight: snapshot.isDraggingOver ? 80 : 16 }}\n              {...provided.droppableProps}\n            >\n              {inner}\n              {provided.placeholder}\n              <div\n                style={{ float: 'left', clear: 'both' }}\n                ref={el => (this.listEnd = el)}\n              />\n            </div>\n          ) : (\n            <ul\n              className=\"list__tasks\"\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {inner}\n              {provided.placeholder}\n            </ul>\n          )\n        }\n      </Droppable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { listActions } from '../../ducks/lists';\nimport { projectSelectors } from '../../ducks/projects';\nimport { TaskComposer } from '../TaskComposer';\nimport { CardComposer } from '../CardComposer';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\nimport { Input } from '../Input';\nimport { Tasks } from '../Tasks';\nimport './List.scss';\n\nclass List extends Component {\n  static defaultProps = {\n    isRestricted: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.name\n    };\n  }\n\n  handleListDelete = e => {\n    e.preventDefault();\n    const { listId, projectId, deleteList } = this.props;\n    deleteList({ listId, projectId });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onBlur = e => {\n    const { name, listId, firebase } = this.props;\n    const { name: newName } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newName !== name) {\n      firebase.updateListName({ listId, name: newName });\n      console.log('updated list name!');\n    }\n  };\n\n  render() {\n    const {\n      tasks,\n      name: listName,\n      onTaskClick,\n      listId,\n      listIndex,\n      isFetchingTasks,\n      isRestricted,\n      projectId,\n      projectName,\n      view\n    } = this.props;\n    if (isFetchingTasks) return null;\n\n    const isBoardView = view === 'board';\n\n    const { name } = this.state;\n\n    return (\n      <Draggable draggableId={listId} index={listIndex}>\n        {provided => (\n          <>\n            <section\n              className={`list is-${view}-view`}\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <header className=\"list__header\">\n                <Input\n                  className=\"list__input--title\"\n                  name=\"name\"\n                  type=\"text\"\n                  value={name}\n                  onChange={this.onChange}\n                  required={!isRestricted}\n                  hideLabel\n                  isReadOnly={isRestricted}\n                  onBlur={this.onBlur}\n                />\n                <PopoverWrapper\n                  classes={{\n                    wrapper: 'list__popover-wrapper',\n                    popover: 'list__popover'\n                  }}\n                  alignInner={isBoardView ? 'left' : 'right'}\n                  buttonProps={{\n                    size: 'medium',\n                    iconOnly: true,\n                    className: 'list__btn--more-actions',\n                    children: <Icon name=\"more-vertical\" />\n                  }}\n                >\n                  <Menu>\n                    <MenuItem>\n                      {!isRestricted && (\n                        <a href=\"\" onClick={this.handleListDelete}>\n                          Delete\n                        </a>\n                      )}\n                    </MenuItem>\n                  </Menu>\n                </PopoverWrapper>\n              </header>\n              <div className=\"list__content\">\n                <Tasks\n                  tasks={tasks}\n                  listId={listId}\n                  onTaskClick={onTaskClick}\n                  view={view}\n                />\n              </div>\n              {provided.placeholder}\n              {isBoardView ? (\n                <CardComposer\n                  listId={listId}\n                  listName={listName}\n                  projectId={projectId}\n                  projectName={projectName}\n                />\n              ) : (\n                <TaskComposer\n                  listId={listId}\n                  listName={listName}\n                  projectId={projectId}\n                  projectName={projectName}\n                />\n              )}\n            </section>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    tasks: taskSelectors.getListTasks(state, ownProps.taskIds),\n    projectName: projectSelectors.getProjectName(state, ownProps.projectId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteList: ({ listId, projectId }) => dispatch(listActions.deleteList({ listId, projectId }))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(List)\n);\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadCommentsById = commentsById => {\n  return {\n    type: types.LOAD_COMMENTS_BY_ID,\n    commentsById\n  };\n};\n\nexport const fetchCommentsById = () => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateCommentsById = comment => {\n  return {\n    type: types.UPDATE_COMMENTS_BY_ID,\n    comment\n  };\n};\n\nexport const fetchTaskComments = taskId => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .where('taskId', '==', taskId)\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserComments = userId => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .where('to', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addComment = ({ commentId, commentData }) => {\n  return {\n    type: types.ADD_COMMENT,\n    commentId,\n    commentData\n  };\n};\n\nexport const deleteComment = commentId => {\n  return {\n    type: types.DELETE_COMMENT,\n    commentId\n  };\n};\n\nexport const updateComment = ({ commentId, commentData }) => {\n  return {\n    type: types.UPDATE_COMMENT,\n    commentId,\n    commentData\n  };\n};\n","export const LOAD_COMMENTS_BY_ID = 'LOAD_COMMENTS_BY_ID';\nexport const FETCH_COMMENTS_BY_ID = 'FETCH_COMMENTS_BY_ID';\nexport const UPDATE_COMMENTS_BY_ID = 'UPDATE_COMMENTS_BY_ID';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const UPDATE_COMMENT = 'UPDATE_COMMENT';\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\n","export const getCommentsById = state => {\n  const { commentsById } = state;\n  return commentsById;\n};\n\nexport const getComment = (state, commentId) => {\n  const { commentsById } = state;\n  return commentsById[commentId];\n};\n\nexport const getCommentsArray = (state, commentIds) => {\n  const { commentsById } = state;\n  if (!commentIds) return [];\n  return commentIds.map(commentId => {\n    return commentsById[commentId];\n  });\n};\n","import * as types from './types';\n\nconst commentsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_COMMENTS_BY_ID: {\n      const { commentsById } = action;\n      return {\n        ...state,\n        ...commentsById\n      };\n    }\n    case types.ADD_COMMENT: {\n      const { commentId, commentData } = action;\n      return {\n        ...state,\n        [commentId]: {\n          commentId,\n          ...commentData\n        }\n      };\n    }\n    case types.DELETE_COMMENT: {\n      const { commentId } = action;\n      const { [commentId]: deletedComment, ...restOfComments } = state;\n      return restOfComments;\n    }\n    case types.UPDATE_COMMENT: {\n      const { commentId, commentData } = action;\n      return {\n        ...state,\n        [commentId]: {\n          ...state[commentId],\n          ...commentData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default commentsById;\n","import React from 'react';\nimport './Toolbar.scss';\n\nconst Toolbar = ({ className, children, ...props }) => (\n  <div className={`toolbar ${className}`} {...props}>\n    {children}\n  </div>\n);\n\nToolbar.defaultProps = {\n  className: ''\n};\n\nexport default Toolbar;\n","import React, { Component } from 'react';\nimport { Icon } from '../Icon';\nimport { PopoverWrapper } from '../Popover';\n\nexport default class TaskEditorAssignMember extends Component {\n  render() {\n    const { children } = this.props;\n\n    return (\n      <PopoverWrapper\n        classes={{\n          wrapper: \"task-editor__popover-wrapper task-editor__member-search-popover-wrapper\",\n          popover: \"task-editor__popover task-editor__member-search-popover\"\n        }}\n        alignOuter=\"left\"\n        alignInner=\"left\"\n        buttonProps={{\n          size: 'md',\n          iconOnly: true,\n          className: 'task-editor__toolbar-btn',\n          children: <Icon name=\"users\" />,\n          buttonRef: this.props.buttonRef\n        }}\n      >\n        {children}\n      </PopoverWrapper>\n    );\n  }\n}\n","import React from 'react';\n\nconst TaskEditorSection = ({ size, children }) => (\n  <div className={`task-editor__section${size === 'sm' ? '--sm' : ''}`}>{children}</div>\n);\n\nTaskEditorSection.defaultProps = {\n  size: 'default'\n};\n\nexport default TaskEditorSection;\n","import React, { Component } from 'react';\n\nimport { Input } from '../Input';\nimport { Avatar } from '../Avatar';\nimport { Icon } from '../Icon';\nimport * as keys from '../../constants/keys';\nimport './MemberSearch.scss';\n\nexport default class MemberSearch extends Component {\n  state = {\n    query: '',\n    isActive: false,\n    isTouchEnabled: false,\n    selectedMember: '',\n    selectedIndex: null,\n    filteredList: this.props.users\n  };\n\n  componentDidMount() {\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick, false);\n    this.inputEl.focus();\n  }\n\n  handleOutsideClick = e => {\n    if (this.state.query !== '') return;\n    if (!this.memberSearchEl.contains(e.target)) {\n      this.setState({\n        isActive: false\n      });\n    }\n  };\n\n  handleTouch = () => {\n    this.setState({\n      isTouchEnabled: true\n    });\n    // remove touch handler to prevent unnecessary refires\n    document.removeEventListener('touchstart', this.handleTouch);\n    // remove outside click handler from click events\n    document.removeEventListener('click', this.handleOutsideClick);\n    // reattach outside click handler to touchstart events\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  matchUser = (user, query) => {\n    const { name, email, username } = user;\n    const regExp = new RegExp(query, 'i');\n    return regExp.test(name) || regExp.test(email) || regExp.test(username);\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({\n      query: '',\n      isActive: false,\n      isTouchEnabled: false,\n      selectedMember: '',\n      selectedIndex: null,\n      filteredList: this.props.users\n    });\n  };\n\n  onChange = e => {\n    const { users } = this.props;\n    const { selectedMember, selectedIndex } = this.state;\n    const query = e.target.value;\n    const filteredList = users.filter(user => this.matchUser(user, query));\n    const newIndex = filteredList.indexOf(selectedMember);\n    const persistSelectedMember = newIndex !== -1;\n\n    this.setState({\n      selectedMember: persistSelectedMember\n        ? selectedMember\n        : filteredList.length > 0\n        ? filteredList[0].userId\n        : '',\n      selectedIndex: persistSelectedMember ? newIndex : 0,\n      query,\n      filteredList\n    });\n  };\n\n  onKeyDown = e => {\n    if (\n      e.key !== keys.TAB &&\n      e.key !== keys.ARROW_DOWN &&\n      e.key !== keys.ARROW_UP &&\n      e.key !== keys.ENTER\n    )\n      return;\n\n    const { filteredList, selectedIndex, selectedMember } = this.state;\n    const { onMemberClick } = this.props;\n    const nextIndex =\n      selectedIndex === filteredList.length - 1 ? 0 : selectedIndex + 1;\n    const prevIndex =\n      selectedIndex === 0 ? filteredList.length - 1 : selectedIndex - 1;\n\n    // eslint-disable-next-line default-case\n    switch (e.key) {\n      case keys.ARROW_DOWN:\n      // eslint-disable-next-line no-fallthrough\n      case keys.TAB: {\n        this.setState({\n          selectedMember: filteredList[nextIndex].userId,\n          selectedIndex: nextIndex\n        });\n        break;\n      }\n      case keys.ARROW_UP: {\n        this.setState({\n          selectedMember: filteredList[prevIndex].userId,\n          selectedIndex: prevIndex\n        });\n        break;\n      }\n      case keys.ENTER: {\n        if (selectedMember === '') return;\n        onMemberClick(selectedMember);\n        break;\n      }\n    }\n\n    e.preventDefault();\n  };\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  render() {\n    const { users, onMemberClick, assignedMembers } = this.props;\n    const { query, isActive, filteredList, selectedMember } = this.state;\n\n    return (\n      <div\n        className=\"member-search__wrapper\"\n        ref={el => (this.memberSearchEl = el)}\n      >\n        <Input\n          name=\"query\"\n          className=\"member-search\"\n          onChange={this.onChange}\n          value={query}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          type=\"text\"\n          autoComplete=\"off\"\n          hideLabel\n          placeholder=\"Assign or remove member\"\n          onKeyDown={this.onKeyDown}\n          inputRef={el => (this.inputEl = el)}\n        />\n        {isActive && (\n          <ul className=\"member-search__list\">\n            {filteredList.length > 0 ? (\n              filteredList.map((user, i) => {\n                const { name, photoURL, email, username, userId } = user;\n                const isAssigned =\n                  assignedMembers && assignedMembers.indexOf(userId) !== -1;\n                return (\n                  <li\n                    className={`member-search__item ${\n                      selectedMember === userId ? 'is-selected' : ''\n                    }`}\n                    onClick={() => onMemberClick(userId)}\n                    key={userId}\n                    id={userId}\n                  >\n                    <Icon name={isAssigned ? 'user-minus' : 'user-plus'} />\n                    <Avatar\n                      classes={{\n                        avatar: 'member-search__avatar--sm',\n                        placeholder: 'member-search__avatar-placeholder--sm'\n                      }}\n                      name={name}\n                      size=\"sm\"\n                      variant=\"circle\"\n                      imgSrc={photoURL}\n                    />\n                    <span className=\"member-search__info member-search__name\">\n                      {name}\n                    </span>\n                    <span className=\"member-search__info member-search__username\">\n                      {username}\n                    </span>\n                    <span className=\"member-search__info member-search__email\">\n                      {email}\n                    </span>\n                  </li>\n                );\n              })\n            ) : (\n              <li className=\"member-search__item\">\n                <span className=\"member-search__no-match\">\n                  No matches found\n                </span>\n              </li>\n            )}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\n\nconst TaskEditorMoreActions = ({ onMenuClick }) => (\n  <PopoverWrapper\n    classes={{\n      wrapper: 'task-editor__popover-wrapper',\n      popover: 'task-editor__popover'\n    }}\n    alignOuter=\"right\"\n    alignInner=\"right\"\n    buttonProps={{\n      size: 'md',\n      iconOnly: true,\n      className: 'task-editor__toolbar-btn',\n      children: <Icon name=\"more-horizontal\" />\n    }}\n  >\n    <Menu onClick={onMenuClick}>\n      <MenuItem>\n        <a href=\"\" data-action=\"delete\">\n          Delete task\n        </a>\n      </MenuItem>\n    </Menu>\n  </PopoverWrapper>\n);\n\nexport default TaskEditorMoreActions;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Checkbox } from '../Checkbox';\nimport { Textarea } from '../Textarea';\nimport { withFirebase } from '../Firebase';\nimport * as keys from '../../constants/keys';\nimport './Subtask.scss';\n\nconst appRoot = document.getElementById('root');\n\nclass Subtask extends Component {\n  constructor(props) {\n    super(props);\n    this.portal = document.createElement('div');\n    this.state = {\n      name: this.props.name\n    }\n  }\n\n  componentDidMount() {\n    appRoot.appendChild(this.portal);\n  }\n\n  onDragStart = e => {\n    console.log('dragstart');\n    this.setState({\n      isReadOnly: true\n    });\n  };\n\n  onChange = e => {\n    this.setState({\n      name: e.target.value\n    });\n  };\n\n  onBlur = () => {\n    const { name, firebase, subtaskId } = this.props;\n    const { name: newName } = this.state;\n    if (name !== newName) {\n      firebase.updateSubtask(subtaskId, {\n        name: newName\n      });\n    }\n  };\n\n  deleteSubtask = e => {\n    if (e.target.value !== '' || e.key !== keys.BACKSPACE) return;\n    const { subtaskId, taskId, firebase } = this.props;\n    firebase.deleteSubtask({ subtaskId, taskId });\n  };\n\n  toggleCompleted = () => {\n    const { subtaskId, isCompleted, firebase } = this.props;\n    firebase.updateSubtask(subtaskId, {\n      isCompleted: !isCompleted,\n      completedAt: !isCompleted ? firebase.getTimestamp() : null\n    });\n  };\n\n  componentWillUnmount() {\n    appRoot.removeChild(this.portal);\n  }\n\n  render() {\n    const {\n      subtaskId,\n      index,\n      isCompleted\n    } = this.props;\n\n    const { name } = this.state;\n\n    return (\n      <Draggable draggableId={subtaskId} index={index}>\n        {(provided, snapshot) => {\n          const inner = (\n            <li\n              className=\"subtask\"\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <Checkbox\n                id={`cb-${subtaskId}`}\n                value={subtaskId}\n                name={subtaskId}\n                isChecked={isCompleted}\n                onChange={this.toggleCompleted}\n                className=\"subtask__checkbox\"\n                labelClass=\"subtask__checkbox-label\"\n              />\n              <Textarea\n                value={name}\n                onChange={this.onChange}\n                onBlur={this.onBlur}\n                name={subtaskId}\n                className=\"subtask__textarea\"\n                onKeyDown={this.deleteSubtask}\n                onDragStart={this.onDragStart}\n              />\n            </li>\n          );\n          return snapshot.isDragging\n            ? ReactDOM.createPortal(inner, this.portal)\n            : inner;\n        }}\n      </Draggable>\n    );\n  }\n}\n\nexport default withFirebase(Subtask);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { withFirebase } from '../Firebase';\nimport { Subtask } from '../Subtask';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { subtaskActions, subtaskSelectors } from '../../ducks/subtasks';\nimport { getSelectedProjectId } from '../../ducks/selectedProject';\nimport './Subtasks.scss';\n\nclass Subtasks extends Component {\n  state = {\n    isFetching: !this.props.selectedProjectId || !this.props.projectId\n  };\n\n  componentDidMount() {\n    const {\n      firebase,\n      fetchTaskSubtasks,\n      addSubtask,\n      updateSubtask,\n      deleteSubtask,\n      taskId,\n      projectId,\n      selectedProjectId\n    } = this.props;\n    if (!selectedProjectId || !projectId) {\n      fetchTaskSubtasks(taskId).then(() => {\n        this.setState({\n          isFetching: false\n        });\n      });\n    }\n    this.subtaskObserver = firebase.db\n      .collection('subtasks')\n      .where('taskId', '==', taskId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const subtaskId = change.doc.id;\n          const subtaskData = change.doc.data();\n          if (change.type === 'added') {\n            addSubtask({ subtaskId, subtaskData });\n          }\n          if (change.type === 'modified') {\n            updateSubtask({ subtaskId, subtaskData });\n          }\n          if (change.type === 'removed') {\n            deleteSubtask(subtaskId);\n          }\n        });\n      });\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.subtasks.includes(undefined)) {\n      return false;\n    }\n    return true;\n  }\n\n  moveSubtask = ({ destination, draggableId, source }) => {\n    if (!destination) return;\n    if (destination.index === source.index) return;\n    const { firebase, subtaskIds } = this.props;\n    const updatedSubtaskIds = [...subtaskIds];\n    updatedSubtaskIds.splice(source.index, 1);\n    updatedSubtaskIds.splice(destination.index, 0, draggableId);\n    firebase.updateTask(source.droppableId, {\n      subtaskIds: updatedSubtaskIds\n    });\n  };\n\n  componentWillUnmount() {\n    this.subtaskObserver();\n  }\n\n  render() {\n    const { taskId, subtasks } = this.props;\n    const { isFetching } = this.state;\n    return (\n      <DragDropContext onDragEnd={this.moveSubtask}>\n        <Droppable droppableId={taskId} type={droppableTypes.SUBTASK}>\n          {provided => (\n            <ul\n              className=\"subtasks\"\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {!isFetching &&\n                subtasks.map((subtask, index) => {\n                  return (\n                    <Subtask\n                      subtaskId={subtask.subtaskId}\n                      taskId={taskId}\n                      index={index}\n                      name={subtask.name}\n                      isCompleted={subtask.isCompleted}\n                      key={subtask.subtaskId}\n                    />\n                  );\n                })}\n              {provided.placeholder}\n            </ul>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    subtasks: subtaskSelectors.getSubtasksArray(state, ownProps.subtaskIds),\n    selectedProjectId: getSelectedProjectId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchTaskSubtasks: taskId =>\n      dispatch(subtaskActions.fetchTaskSubtasks(taskId)),\n    addSubtask: ({ subtaskId, subtaskData }) =>\n      dispatch(subtaskActions.addSubtask({ subtaskId, subtaskData })),\n    deleteSubtask: subtaskId =>\n      dispatch(subtaskActions.deleteSubtask(subtaskId)),\n    updateSubtask: ({ subtaskId, subtaskData }) =>\n      dispatch(subtaskActions.updateSubtask({ subtaskId, subtaskData }))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Subtasks)\n);\n","/* eslint-disable no-nested-ternary */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withFirebase } from '../Firebase';\nimport { userSelectors } from '../../ducks/users';\nimport { commentActions, commentSelectors } from '../../ducks/comments';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { Avatar } from '../Avatar';\nimport { toDateString } from '../../utils/date';\nimport './Comment.scss';\n\nclass Comment extends Component {\n  state = {\n    secondsElapsed: 0\n  };\n\n  componentDidMount() {\n    const { createdAt } = this.props;\n    const secondsSinceCreation =\n      Math.floor(Date.now() / 1000) -\n      Math.floor(createdAt.toDate().getTime() / 1000);\n\n    this.setState({\n      secondsElapsed: secondsSinceCreation\n    });\n\n    this.interval = setInterval(this.tick, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  tick = () => {\n    this.setState(prevState => ({\n      secondsElapsed: prevState.secondsElapsed + 1\n    }));\n  };\n\n  handleLike = () => {\n    const { commentId, likes, currentUserId, firebase } = this.props;\n\n    if (likes[currentUserId]) {\n      firebase.updateDoc(['comments', commentId], {\n        [`likes.${currentUserId}`]: firebase.deleteField()\n      });\n    } else {\n      firebase.updateDoc([`comments`, commentId], {\n        [`likes.${currentUserId}`]: true\n      });\n    }\n  };\n\n  render() {\n    const { user, content, createdAt, likes, to, from, isPinned } = this.props;\n    const { secondsElapsed } = this.state;\n    const { name, photoURL } = user;\n    const likesCount = Object.keys(likes).length;\n    if (!createdAt) return null;\n    const dateCreated = createdAt.toDate();\n    const timeCreated = dateCreated.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true\n    });\n    const dateCreatedString = toDateString(dateCreated, {\n      useRelative: true,\n      format: {\n        weekday: 'short',\n        month: 'short',\n        day: 'numeric',\n        year: '2-digit'\n      }\n    });\n    return (\n      <div className={`comment__wrapper ${isPinned ? 'is-pinned' : ''}`}>\n        <Avatar\n          classes={{\n            avatar: 'comment__avatar',\n            placeholder: 'comment__avatar-placeholder'\n          }}\n          name={name}\n          size=\"sm\"\n          variant=\"circle\"\n          imgSrc={photoURL}\n        />\n        <div className=\"comment\">\n          <div className=\"comment__header\">\n            <div className=\"comment__details\">\n              <span className=\"comment__name\">{name}</span>\n              <span className=\"comment__timestamp\">\n                {secondsElapsed < 60 // less than one minute\n                  ? 'Just now'\n                  : secondsElapsed < 120 // less than 2 minutes\n                  ? '1 minute ago'\n                  : secondsElapsed < 3600 // less than 1 hour\n                  ? `${Math.floor(secondsElapsed / 60)} minutes ago`\n                  : secondsElapsed < 7200 // less than 2 hours\n                  ? '1 hour ago'\n                  : secondsElapsed < 21600 // less than 6 hours\n                  ? `${Math.floor(secondsElapsed / 3600)} hours ago`\n                  : `${dateCreatedString} at ${timeCreated}`}\n              </span>\n            </div>\n            <Button\n              className=\"comment__likes\"\n              onClick={this.handleLike}\n              size=\"sm\"\n            >\n              <Icon name=\"thumbs-up\" />\n              <span className=\"comment__likes-counter\">\n                {likesCount > 0 ? likesCount : ''}\n              </span>\n            </Button>\n          </div>\n          <div className=\"comment__content\">{content}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state, ownProps.from),\n    currentUserId: currentUserSelectors.getCurrentUserId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Comment)\n);\n","import React from 'react';\n\nconst Radio = ({\n  classes = { radio: '', label: '' },\n  name,\n  id,\n  value,\n  onFocus,\n  onChange,\n  onInput,\n  isRequired,\n  onBlur,\n  inputRef,\n  hideLabel,\n  label,\n  onKeyDown,\n  isChecked\n}) => {\n  return (\n    <>\n      <input\n        className={`radio ${classes.radio}`}\n        id={id}\n        name={name}\n        type=\"radio\"\n        value={value}\n        onFocus={onFocus}\n        onChange={onChange}\n        onBlur={onBlur}\n        ref={inputRef}\n        onInput={onInput}\n        onKeyDown={onKeyDown}\n        required={isRequired}\n        checked={isChecked}\n      />\n      {!hideLabel && (\n        <label htmlFor={id} className={`radio__label ${classes.label}`}>\n          {label}\n        </label>\n      )}\n    </>\n  );\n};\n\nexport default Radio;\n","import React, { Component } from 'react';\nimport { Radio } from '../Radio';\nimport './ColorPicker.scss';\n\nexport default class ColorPicker extends Component {\n  state = {\n    selectedColor: 'default'\n  };\n\n  handleColorChange = e => {\n    const { selectColor } = this.props;\n    this.setState({\n      selectedColor: e.target.value\n    });\n    selectColor(e.target.value);\n  };\n\n  render() {\n    const { style } = this.props;\n    const { selectedColor } = this.state;\n    return (\n      <div className=\"color-picker\" style={style}>\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--default'\n          }}\n          name=\"tagColor\"\n          id=\"colorDefault\"\n          value=\"default\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'default'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--red'\n          }}\n          name=\"tagColor\"\n          id=\"colorRed\"\n          value=\"red\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'red'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--pink'\n          }}\n          name=\"tagColor\"\n          id=\"colorPink\"\n          value=\"pink\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'pink'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--grape'\n          }}\n          name=\"tagColor\"\n          id=\"colorGrape\"\n          value=\"grape\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'grape'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--violet'\n          }}\n          name=\"tagColor\"\n          id=\"colorViolet\"\n          value=\"violet\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'violet'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--indigo'\n          }}\n          name=\"tagColor\"\n          id=\"colorIndigo\"\n          value=\"indigo\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'indigo'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--blue'\n          }}\n          name=\"tagColor\"\n          id=\"colorBlue\"\n          value=\"blue\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'blue'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--cyan'\n          }}\n          name=\"tagColor\"\n          id=\"colorCyan\"\n          value=\"cyan\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'cyan'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--teal'\n          }}\n          name=\"tagColor\"\n          id=\"colorTeal\"\n          value=\"teal\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'teal'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--green'\n          }}\n          name=\"tagColor\"\n          id=\"colorGreen\"\n          value=\"green\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'green'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--yellow'\n          }}\n          name=\"tagColor\"\n          id=\"colorYellow\"\n          value=\"yellow\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'yellow'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--orange'\n          }}\n          name=\"tagColor\"\n          id=\"colorOrange\"\n          value=\"orange\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'orange'}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Tag } from '../Tag';\nimport { Input } from '../Input';\nimport { ColorPicker } from '../ColorPicker';\nimport * as keys from '../../constants/keys';\nimport './TagsInput.scss';\n\nexport default class TagsInput extends Component {\n  state = {\n    value: '',\n    isActive: false,\n    isTouchEnabled: false,\n    selectedTag: '',\n    focusedTag: '',\n    selectedIndex: null,\n    hasExactMatch: null,\n    filteredList: []\n  };\n\n  componentDidMount() {\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick, false);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.assignedTags.indexOf(undefined) !== -1) {\n      return false;\n    }\n    return true;\n  }\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  onFocus = () => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = () => {\n    this.setState({\n      selectedTag: '',\n      selectedIndex: null\n    });\n  };\n\n  resetForm = () => {\n    this.setState({\n      value: '',\n      selectedTag: '',\n      selectedIndex: null,\n      hasExactMatch: null,\n      focusedTag: '',\n      filteredList: []\n    });\n  };\n\n  matchTag = (tag, value) => {\n    const { name } = tag;\n    const regExp = new RegExp(value, 'i');\n    return regExp.test(name);\n  };\n\n  onChange = e => {\n    const { tagSuggestions } = this.props;\n    const { selectedTag, selectedIndex } = this.state;\n    const { value } = e.target;\n    const filteredList = tagSuggestions.filter(tag =>\n      this.matchTag(tag, value)\n    );\n    const hasExactMatch =\n      filteredList.findIndex(item => item.name === value) !== -1;\n    const newIndex = filteredList.indexOf(selectedTag);\n    const persistSelectedTag = newIndex !== -1;\n\n    this.setState({\n      selectedTag: persistSelectedTag\n        ? selectedTag\n        : filteredList.length > 0\n        ? filteredList[0].name\n        : '',\n      selectedIndex: persistSelectedTag ? newIndex : 0,\n      value,\n      filteredList: hasExactMatch\n        ? filteredList\n        : [...filteredList, { name: value, color: 'default' }],\n      hasExactMatch\n    });\n  };\n\n  onKeyDown = e => {\n    if (\n      e.key !== keys.TAB &&\n      e.key !== keys.ARROW_DOWN &&\n      e.key !== keys.ARROW_UP &&\n      e.key !== keys.ENTER &&\n      e.key !== keys.BACKSPACE\n    )\n      return;\n\n    const {\n      filteredList,\n      selectedIndex,\n      selectedTag,\n      value,\n      focusedTag\n    } = this.state;\n    const { addTag, removeTag, assignedTags } = this.props;\n    const nextIndex =\n      selectedIndex === filteredList.length - 1 || selectedIndex === null\n        ? 0\n        : selectedIndex + 1;\n    const prevIndex =\n      selectedIndex === 0 ? filteredList.length - 1 : selectedIndex - 1;\n\n    // eslint-disable-next-line default-case\n    switch (e.key) {\n      case keys.ARROW_DOWN:\n      // eslint-disable-next-line no-fallthrough\n      case keys.TAB: {\n        this.setState({\n          selectedTag: filteredList[nextIndex].name,\n          selectedIndex: nextIndex\n        });\n        break;\n      }\n      case keys.ARROW_UP: {\n        this.setState({\n          selectedTag: filteredList[prevIndex].name,\n          selectedIndex: prevIndex\n        });\n        break;\n      }\n      case keys.ENTER: {\n        if (selectedTag === '' && value === '') return;\n        this.resetForm();\n        addTag(selectedTag === '' ? value : selectedTag);\n        break;\n      }\n      case keys.BACKSPACE: {\n        if (value !== '') return;\n        if (focusedTag === '') {\n          this.setState({\n            focusedTag: assignedTags[assignedTags.length - 1].name\n          });\n        } else {\n          this.resetForm();\n          removeTag(focusedTag);\n        }\n      }\n    }\n    e.preventDefault();\n  };\n\n  handleOutsideClick = e => {\n    if (this.el.contains(e.target)) return;\n\n    this.setState({\n      isActive: false\n    });\n  };\n\n  handleTouch = () => {\n    this.setState({\n      isTouchEnabled: true\n    });\n    // remove touch handler to prevent unnecessary refires\n    document.removeEventListener('touchstart', this.handleTouch);\n    // remove outside click handler from click events\n    document.removeEventListener('click', this.handleOutsideClick);\n    // reattach outside click handler to touchstart events\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  handleTagDelete = tag => {\n    const { removeTag } = this.props;\n    this.resetForm();\n    console.log(tag);\n    removeTag(tag);\n  };\n\n  render() {\n    const {\n      isColorPickerActive,\n      assignedTags,\n      setTagColor,\n      currentTag\n    } = this.props;\n    const {\n      value,\n      isActive,\n      filteredList,\n      selectedTag,\n      hasExactMatch,\n      focusedTag\n    } = this.state;\n\n    const hasTags = assignedTags && assignedTags.length > 0;\n\n    const colorPickerStyle = {};\n    if (this.currentTagEl) {\n      const {\n        offsetLeft,\n        offsetWidth,\n        offsetTop,\n        offsetHeight\n      } = this.currentTagEl;\n      colorPickerStyle.left = offsetLeft + offsetWidth / 2 - 74; // 74 = 1/2 colorPicker width\n      colorPickerStyle.top = offsetTop + offsetHeight + 9; // 9 = colorPicker arrow height\n    }\n\n    return (\n      <div\n        className={`tags__container ${isActive ? 'is-active' : ''} ${\n          !hasTags ? 'no-tags' : ''\n        }`}\n        ref={el => (this.el = el)}\n      >\n        {assignedTags.map(tag => (\n          <Tag\n            key={tag.name}\n            color={tag.color}\n            size=\"md\"\n            name={tag.name}\n            onDelete={() => this.handleTagDelete(tag.name)}\n            className={focusedTag === tag.name ? 'is-focused' : ''}\n            tagRef={\n              currentTag === tag.name ? el => (this.currentTagEl = el) : null\n            }\n          />\n        ))}\n        <div className=\"tags-input__wrapper\">\n          <Input\n            className=\"tags-input\"\n            onChange={this.onChange}\n            onBlur={this.onBlur}\n            value={value}\n            onFocus={this.onFocus}\n            type=\"text\"\n            autoComplete=\"off\"\n            onKeyDown={this.onKeyDown}\n            hideLabel\n          />\n          {isActive && (\n            <ul className=\"tags-input__list\">\n              {filteredList.map((item, i) => {\n                return (\n                  <li\n                    key={item.name}\n                    className={`tags-input__item ${\n                      selectedTag === item.name ? 'is-selected' : ''\n                    } ${\n                      !hasExactMatch && i === filteredList.length - 1\n                        ? 'tags-input__item--new'\n                        : ''\n                    }`}\n                  >\n                    {!hasExactMatch && i === filteredList.length - 1 ? (\n                      <>\n                        <h4 className=\"tags-input__item--heading\">New Tag</h4>\n                        <span className=\"tags-input__item--name\">\n                          {item.name}\n                        </span>\n                      </>\n                    ) : (\n                      <Tag name={item.name} color={item.color} size=\"sm\" />\n                    )}\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n        </div>\n        {isActive && isColorPickerActive && (\n          <ColorPicker\n            isActive={isColorPickerActive}\n            selectColor={setTagColor}\n            style={colorPickerStyle}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  MONTHS,\n  WEEK_DAYS,\n  getNextMonth,\n  getPrevMonth,\n  getMonthDates,\n  getNextYears\n} from '../../utils/date';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { PopoverWrapper } from '../Popover';\nimport { Radio } from '../Radio';\nimport './Calendar.scss';\n\nexport default class Calendar extends Component {\n  state = {\n    isMonthsDropdownActive: false,\n    isYearsDropdownActive: false\n  };\n\n  goToNextMonth = () => {\n    const { month, year, onMonthClick } = this.props;\n    onMonthClick(getNextMonth(month, year));\n  };\n\n  goToPrevMonth = () => {\n    const { month, year, onMonthClick } = this.props;\n    onMonthClick(getPrevMonth(month, year));\n  };\n\n  toggleMonthsDropdown = () => {\n    this.setState(prevState => ({\n      isMonthsDropdownActive: !prevState.isMonthsDropdownActive\n    }));\n  };\n\n  toggleYearsDropdown = () => {\n    this.setState(prevState => ({\n      isYearsDropdownActive: !prevState.isYearsDropdownActive\n    }));\n  };\n\n  selectMonth = e => {\n    const month = +e.target.value;\n    const { onMonthClick, year } = this.props;\n    onMonthClick({ month, year });\n    this.toggleMonthsDropdown();\n  };\n\n  selectYear = e => {\n    const year = +e.target.value;\n    const { onYearClick } = this.props;\n    onYearClick(year);\n    this.toggleYearsDropdown();\n  };\n\n  render() {\n    const {\n      month,\n      year,\n      selectedDate,\n      today,\n      onDayClick,\n      classes\n    } = this.props;\n    const { isMonthsDropdownActive, isYearsDropdownActive } = this.state;\n    const dates = getMonthDates(month, year);\n    const years = getNextYears(4);\n\n    return (\n      <div className={`calendar ${classes.calendar}`}>\n        <div className=\"calendar__year\">\n          <PopoverWrapper\n            isActive={isYearsDropdownActive}\n            onButtonClick={this.toggleYearsDropdown}\n            onOutsideClick={this.toggleYearsDropdown}\n            alignInner=\"left\"\n            classes={{\n              wrapper: 'calendar__years-dropdown-wrapper',\n              popover: 'calendar__years-dropdown'\n            }}\n            buttonProps={{\n              className: `calendar__btn--years-dropdown ${\n                isYearsDropdownActive ? 'is-active' : ''\n              }`,\n              children: (\n                <>\n                  {year}\n                  <Icon name=\"chevron-down\" />\n                </>\n              )\n            }}\n          >\n            <ul className=\"calendar__years-list\">\n              {years.map(yearOption => (\n                <li className=\"calendar__years-item\" key={yearOption}>\n                  <Radio\n                    name=\"year\"\n                    id={yearOption}\n                    value={yearOption}\n                    isChecked={yearOption === year}\n                    label={\n                      yearOption === year ? (\n                        <>\n                          <Icon name=\"check\" />\n                          {yearOption}\n                        </>\n                      ) : (\n                        yearOption\n                      )\n                    }\n                    onChange={this.selectYear}\n                    classes={{\n                      radio: 'calendar__radio',\n                      label: 'calendar__radio-label'\n                    }}\n                  />\n                </li>\n              ))}\n            </ul>\n          </PopoverWrapper>\n        </div>\n        <div className=\"calendar__month\">\n          <PopoverWrapper\n            isActive={isMonthsDropdownActive}\n            onButtonClick={this.toggleMonthsDropdown}\n            onOutsideClick={this.toggleMonthsDropdown}\n            alignInner=\"left\"\n            classes={{\n              wrapper: 'calendar__months-dropdown-wrapper',\n              popover: 'calendar__months-dropdown'\n            }}\n            buttonProps={{\n              className: `calendar__btn--months-dropdown ${\n                isMonthsDropdownActive ? 'is-active' : ''\n              }`,\n              children: (\n                <>\n                  {MONTHS[month].long}\n                  <Icon name=\"chevron-down\" />\n                </>\n              )\n            }}\n          >\n            <ul className=\"calendar__months-list\">\n              {MONTHS.map((monthOption, i) => (\n                <li className=\"calendar__months-item\" key={monthOption.long}>\n                  <Radio\n                    name=\"month\"\n                    id={monthOption.long}\n                    value={i}\n                    isChecked={i === month}\n                    label={\n                      i === month ? (\n                        <>\n                          <Icon name=\"check\" />\n                          {monthOption.long}\n                        </>\n                      ) : (\n                        monthOption.long\n                      )\n                    }\n                    onChange={this.selectMonth}\n                    classes={{\n                      radio: 'calendar__radio',\n                      label: 'calendar__radio-label'\n                    }}\n                  />\n                </li>\n              ))}\n            </ul>\n          </PopoverWrapper>\n          <div className=\"calendar__month--prev-next\">\n            <Button\n              type=\"button\"\n              className=\"calendar__btn--month calendar__btn--prev-month\"\n              size=\"sm\"\n              iconOnly\n              onClick={this.goToPrevMonth}\n            >\n              <Icon name=\"chevron-left\" />\n            </Button>\n            <Button\n              type=\"button\"\n              className=\"calendar__btn--month calendar__btn--next-month\"\n              size=\"sm\"\n              iconOnly\n              onClick={this.goToNextMonth}\n            >\n              <Icon name=\"chevron-right\" />\n            </Button>\n          </div>\n        </div>\n        <div className=\"calendar__week-days\">\n          {WEEK_DAYS.map(day => (\n            <div\n              key={day.long}\n              className={`calendar__week-day ${classes.weekDay}`}\n            >\n              {day.narrow}\n            </div>\n          ))}\n        </div>\n        <div className=\"calendar__days\">\n          {dates.map(date => {\n            const isToday =\n              date.day === today.day &&\n              date.month === today.month &&\n              date.year === today.year;\n            const isSelectedDate =\n              selectedDate &&\n              date.day === selectedDate.day &&\n              date.month === selectedDate.month &&\n              date.year === selectedDate.year;\n            return (\n              <div\n                key={`${date.month}--${date.day}`}\n                className={`calendar__day ${\n                  date.month !== month ? 'calendar__day--prev-next' : ''\n                } ${isToday ? 'is-today' : ''} ${\n                  isSelectedDate ? 'is-selected' : ''\n                } ${classes.day}`}\n              >\n                <Button\n                  type=\"button\"\n                  className=\"calendar__btn--day\"\n                  size=\"sm\"\n                  onClick={() => onDayClick(date)}\n                >\n                  {date.day}\n                </Button>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  toSimpleDateString,\n  toSimpleDateObj,\n  isSDSFormat,\n  isSameDate\n} from '../../utils/date';\nimport { Calendar } from '../Calendar';\nimport { Button } from '../Button';\nimport { Input } from '../Input';\nimport './DatePicker.scss';\n\nexport default class DatePicker extends Component {\n  state = {\n    today: {\n      day: new Date().getDate(),\n      month: new Date().getMonth(),\n      year: new Date().getFullYear()\n    },\n    selectedDate: this.props.selectedDate,\n    currentMonth: this.props.currentMonth,\n    currentYear: this.props.currentYear,\n    dateString: toSimpleDateString(this.props.selectedDate) || ''\n  };\n\n  componentDidMount() {}\n\n  selectDate = date => {\n    if (typeof date === 'string') {\n      const newDate = toSimpleDateObj(date);\n      const { month, year } = newDate;\n      const { currentMonth, currentYear } = this.state;\n      this.setState({\n        selectedDate: newDate\n      });\n      if (month !== currentMonth || year !== currentYear) {\n        this.setCurrentMonth({ month, year });\n      }\n    } else {\n      this.setState({\n        selectedDate: date,\n        dateString: toSimpleDateString(date)\n      });\n    }\n  };\n\n  setCurrentMonth = ({ month, year }) => {\n    this.setState({\n      currentMonth: month,\n      currentYear: year\n    });\n  };\n\n  setCurrentYear = year => {\n    this.setState({\n      currentYear: year\n    });\n  };\n\n  updateDateString = e => {\n    const { value } = e.target;\n    this.setState({\n      dateString: value\n    });\n    if (isSDSFormat(value)) {\n      this.selectDate(value);\n    }\n  };\n\n  setDate = () => {\n    const { selectedDate: currentDueDate, selectDate, onClose } = this.props;\n    const { selectedDate } = this.state;\n    if (\n      !(currentDueDate === null && selectedDate === null) &&\n      !isSameDate(currentDueDate, selectedDate)\n    ) {\n      const { day, month, year } = selectedDate;\n      const date = new Date(year, month, day);\n      selectDate(date);\n    }\n    onClose();\n  };\n\n  clearDueDate = () => {\n    const { selectedDate, selectDate } = this.props;\n    this.selectDate(null);\n    if (selectedDate !== null) {\n      selectDate(null);\n    }\n  };\n\n  render() {\n    const { onClose, isActive, innerRef } = this.props;\n    const {\n      today,\n      selectedDate,\n      currentMonth,\n      currentYear,\n      dateString\n    } = this.state;\n    return (\n      <div\n        className=\"date-picker\"\n        ref={innerRef}\n        style={{ display: !isActive ? 'none' : 'block' }}\n      >\n        <div className=\"date-picker__header\">\n          <div className=\"date-picker__due-date-wrapper\">\n            <Input\n              name=\"dueDate\"\n              type=\"text\"\n              label=\"Due Date\"\n              value={dateString}\n              onChange={this.updateDateString}\n              className=\"date-picker__input--due-date\"\n              labelClass=\"date-picker__label--due-date\"\n              placeholder=\"mm-dd-yy\"\n              maxLength={8}\n            />\n          </div>\n        </div>\n        <Calendar\n          classes={{\n            calendar: 'date-picker__calendar',\n            weekDay: 'date-picker__week-day'\n          }}\n          month={currentMonth}\n          year={currentYear}\n          selectedDate={selectedDate}\n          today={today}\n          onDayClick={this.selectDate}\n          onMonthClick={this.setCurrentMonth}\n          onYearClick={this.setCurrentYear}\n        />\n        <div className=\"date-picker__footer\">\n          <Button\n            size=\"sm\"\n            variant=\"text\"\n            color=\"neutral\"\n            className=\"date-picker__btn--clear\"\n            onClick={this.clearDueDate}\n          >\n            Clear\n          </Button>\n          <Button\n            size=\"sm\"\n            variant=\"contained\"\n            color=\"primary\"\n            className=\"date-picker__btn--set-due-date\"\n            onClick={this.setDate}\n          >\n            Done\n          </Button>\n          <Button\n            size=\"sm\"\n            variant=\"text\"\n            color=\"neutral\"\n            className=\"date-picker__btn--cancel\"\n            onClick={onClose}\n          >\n            Cancel\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport './TaskEditorPane.scss';\n\nconst TaskEditorPane = ({ onClose, onClick, children }) => (\n  <div className=\"task-editor-pane\" onClick={onClick}>\n    <Button\n      type=\"button\"\n      className=\"task-editor-pane__btn--close\"\n      onClick={onClose}\n      iconOnly\n    >\n      <Icon name=\"x\" />\n  </Button>\n  { children }\n  </div>\n);\n\nexport default TaskEditorPane;","import React from 'react';\nimport './ProjectIcon.scss';\n\nconst ProjectIcon = ({className, color}) => (\n  <span className={`project-icon bg--${color} ${className}`} />\n);\n\nProjectIcon.defaultProps = {\n  className: '',\n  color: 'default'\n};\n\nexport default ProjectIcon;","/* eslint-disable no-nested-ternary */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withFirebase } from '../Firebase';\nimport {\n  currentUserActions,\n  currentUserSelectors\n} from '../../ducks/currentUser';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { subtaskActions, subtaskSelectors } from '../../ducks/subtasks';\nimport { userSelectors } from '../../ducks/users';\nimport { commentActions, commentSelectors } from '../../ducks/comments';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { Modal } from '../Modal';\nimport { Toolbar } from '../Toolbar';\nimport { Avatar } from '../Avatar';\nimport TaskEditorAssignMember from './TaskEditorAssignMember';\nimport TaskEditorSection from './TaskEditorSection';\nimport { MemberSearch } from '../MemberSearch';\nimport TaskEditorMoreActions from './TaskEditorMoreActions';\nimport * as keys from '../../constants/keys';\nimport { Subtasks } from '../Subtasks';\nimport { Comment } from '../Comment';\nimport { TagsInput } from '../TagsInput';\nimport './TaskEditor.scss';\nimport { projectSelectors } from '../../ducks/projects';\nimport { DatePicker } from '../DatePicker';\nimport TaskEditorPane from './TaskEditorPane';\nimport { ProjectIcon } from '../ProjectIcon';\nimport { getSimpleDate, toDateString, isPriorDate } from '../../utils/date';\n\nconst TaskEditorWrapper = ({\n  view,\n  handleTaskEditorClose,\n  handleClick,\n  children\n}) => {\n  return view === 'board' ? (\n    <Modal\n      onModalClose={handleTaskEditorClose}\n      classes={{ content: 'task-editor', button: 'task-editor__btn--close' }}\n      onModalClick={handleClick}\n      size=\"lg\"\n      id=\"taskEditor\"\n    >\n      {children}\n    </Modal>\n  ) : (\n    <TaskEditorPane onClose={handleTaskEditorClose} onClick={handleClick}>\n      {children}\n    </TaskEditorPane>\n  );\n};\n\n/*\n  TODO: Break up logic in child components\n  */\n\nclass TaskEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: this.props.commentIds && this.props.commentIds.length > 0,\n      name: this.props.name,\n      notes: this.props.notes,\n      newSubtask: '',\n      newComment: '',\n      currentFocus: null,\n      isColorPickerActive: false,\n      currentTag: null,\n      isDatePickerActive: false,\n      prevProps: {\n        name: this.props.name,\n        notes: this.props.notes\n      }\n    };\n    this.membersListButton = React.createRef();\n  }\n\n  componentDidMount() {\n    const {\n      taskId,\n      firebase,\n      fetchTaskComments,\n      addComment,\n      deleteComment,\n      updateComment\n    } = this.props;\n\n    console.log(taskId);\n    fetchTaskComments(taskId).then(() => {\n      this.setState({\n        isFetching: false\n      });\n    });\n\n    this.commentObserver = firebase.db\n      .collection('comments')\n      .where('taskId', '==', taskId)\n      .onSnapshot(snapshot => {\n        snapshot.docChanges().forEach(change => {\n          const commentId = change.doc.id;\n          const commentData = change.doc.data();\n          if (change.type === 'added') {\n            addComment({ commentId, commentData });\n          }\n          if (change.type === 'modified') {\n            updateComment({ commentId, commentData });\n          }\n          if (change.type === 'removed') {\n            deleteComment(commentId);\n          }\n        });\n      });\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.name !== state.prevProps.name) {\n      return {\n        name: props.name,\n        prevProps: {\n          ...state.prevProps,\n          name: props.name\n        }\n      };\n    }\n    if (props.notes !== state.prevProps.notes) {\n      return {\n        notes: props.notes,\n        prevProps: {\n          ...state.prevProps,\n          notes: props.notes\n        }\n      };\n    }\n    return null;\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  deleteTask = () => {\n    const { taskId, listId, handleTaskEditorClose, deleteTask } = this.props;\n    deleteTask({ taskId, listId });\n    handleTaskEditorClose();\n  };\n\n  onBlur = e => {\n    const taskKey = e.target.name;\n    const { [taskKey]: currentValue, taskId, firebase } = this.props;\n    const { [taskKey]: updatedValue } = this.state;\n\n    // When field loses focus, update task if change is detected\n\n    if (updatedValue !== currentValue) {\n      firebase.updateTask(taskId, {\n        [taskKey]: updatedValue\n      });\n      console.log('updated task!');\n    }\n\n    this.setState({\n      currentFocus: null\n    });\n  };\n\n  addComment = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { userId, firebase, taskId, projectId } = this.props;\n    const { newComment: content } = this.state;\n    firebase.addComment({ userId, content, taskId, projectId });\n    this.resetForm('newComment');\n    e.preventDefault();\n  };\n\n  resetForm = key => {\n    this.setState({\n      [key]: ''\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      currentFocus: e.target.name\n    });\n  };\n\n  handleClick = e => {\n    const { currentFocus } = this.state;\n    if (\n      (currentFocus === 'newComment' &&\n        !this.commentFormEl.contains(e.target)) ||\n      (currentFocus === 'newSubtask' &&\n        !this.newSubtaskFormEl.contains(e.target))\n    ) {\n      this.setState({\n        currentFocus: null\n      });\n    }\n  };\n\n  handleMoreActions = e => {\n    if (!e.target.matches('a')) return;\n    const { action } = e.target.dataset;\n    switch (action) {\n      case 'delete':\n        this.deleteTask();\n        break;\n    }\n    e.preventDefault(); // prevents page reload\n  };\n\n  assignMember = userId => {\n    const { taskId, projectId, assignedTo, firebase, folders } = this.props;\n\n    if (assignedTo.includes(userId)) {\n      if (!projectId) return;\n      const folderId = folders[userId];\n      firebase.removeAssignee({ taskId, userId, folderId });\n    } else {\n      firebase.addAssignee({ taskId, projectId, userId });\n    }\n  };\n\n  toggleColorPicker = value => {\n    this.setState({\n      isColorPickerActive: value\n    });\n  };\n\n  addTag = name => {\n    const {\n      firebase,\n      currentUser,\n      projectTags,\n      taskId,\n      projectId,\n      addTag\n    } = this.props;\n    const { userId, tags: userTags } = currentUser;\n    const isProjectTag = projectTags && name in projectTags;\n    const isUserTag = userTags && name in userTags;\n    const projectTag = isProjectTag ? projectTags[name] : null;\n    const userTag = isUserTag ? userTags[name] : null;\n    const projectCount = isProjectTag ? projectTag.count + 1 : 1;\n    const userCount = isUserTag ? userTag.count + 1 : 1;\n    const tagData = isProjectTag\n      ? { ...projectTag, projectCount, userCount }\n      : isUserTag\n      ? { ...userTag, projectCount, userCount }\n      : { name, userCount, projectCount };\n\n    firebase\n      .addTag({\n        userId,\n        taskId,\n        projectId,\n        ...tagData\n      })\n      .then(() => {\n        if (!isUserTag && !isProjectTag) {\n          this.setState({\n            currentTag: name\n          });\n          this.toggleColorPicker(true);\n        }\n      });\n  };\n\n  setTagColor = color => {\n    const { userId, projectId, firebase } = this.props;\n    const { currentTag: tag } = this.state;\n    firebase.setTagColor({ userId, projectId, tag, color });\n  };\n\n  removeTag = name => {\n    const { taskId, currentUser, projectId, removeTaskTag } = this.props;\n    const { userId } = currentUser;\n    removeTaskTag({ taskId, name, userId, projectId });\n    this.toggleColorPicker(false);\n  };\n\n  setDueDate = date => {\n    const { firebase, taskId } = this.props;\n\n    firebase.updateTask(taskId, {\n      dueDate: date\n    });\n  };\n\n  toggleDatePicker = () => {\n    this.setState(prevState => ({\n      isDatePickerActive: !prevState.isDatePickerActive\n    }));\n  };\n\n  addSubtask = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { userId, firebase, taskId, projectId } = this.props;\n    console.log({ userId, projectId });\n    const { newSubtask: name } = this.state;\n    firebase.addSubtask({ userId, name, taskId, projectId });\n    this.resetForm('newSubtask');\n    e.preventDefault();\n  };\n\n  componentWillUnmount() {\n    this.commentObserver();\n  }\n\n  render() {\n    const {\n      handleTaskEditorClose,\n      taskId,\n      commentIds,\n      assignedTo,\n      commentsArray,\n      usersArray,\n      membersArray,\n      currentUser,\n      taskTags,\n      mergedTags,\n      dueDate,\n      subtaskIds,\n      projectId,\n      completedSubtasks,\n      view,\n      projectName,\n      listName,\n      projectColor\n    } = this.props;\n    const {\n      name,\n      notes,\n      newComment,\n      currentFocus,\n      newSubtask,\n      subtasks,\n      isFetching,\n      isColorPickerActive,\n      isDatePickerActive,\n      currentTag\n    } = this.state;\n    const hasSubtasks = subtaskIds && subtaskIds.length > 0;\n    const hasComments = commentIds && commentIds.length > 0;\n    const isAssigned = !!assignedTo && assignedTo.length > 0;\n    const isNewCommentInvalid = newComment === '';\n    const isNewSubtaskInvalid = newSubtask === '';\n    const commentFormIsFocused = currentFocus === 'newComment';\n    const newSubtaskFormIsFocused = currentFocus === 'newSubtask';\n    const taskDueDate = dueDate\n      ? getSimpleDate(dueDate.toDate())\n      : getSimpleDate(new Date());\n    const dueDateStr = dueDate\n      ? toDateString(dueDate.toDate(), {\n          useRelative: true,\n          format: { month: 'short', day: 'numeric' }\n        })\n      : null;\n    const isDueToday = dueDateStr === 'Today';\n    const isDueTmrw = dueDateStr === 'Tomorrow';\n    const isPastDue = dueDate && isPriorDate(dueDate.toDate());\n\n    return (\n      <TaskEditorWrapper\n        handleTaskEditorClose={handleTaskEditorClose}\n        handleClick={this.handleClick}\n        view={view}\n      >\n        <Toolbar className=\"task-editor__toolbar\">\n          {projectId && (\n            <TaskEditorAssignMember buttonRef={this.membersListButton}>\n              <MemberSearch\n                users={usersArray}\n                assignedMembers={assignedTo}\n                onMemberClick={this.assignMember}\n              />\n            </TaskEditorAssignMember>\n          )}\n          <TaskEditorMoreActions onMenuClick={this.handleMoreActions} />\n        </Toolbar>\n        <form\n          name=\"editTaskForm\"\n          onFocus={this.onFocus}\n          className=\"task-editor__edit-task-form\"\n        >\n          <Textarea\n            className=\"task-editor__textarea--title\"\n            name=\"name\"\n            value={name}\n            onChange={this.onChange}\n            required\n            onBlur={this.onBlur}\n            onFocus={this.onFocus}\n          />\n          {projectId && (\n            <TaskEditorSection>\n              <div className=\"task-editor__project-name\">\n                <ProjectIcon\n                  color={projectColor}\n                  className=\"task-editor__project-icon\"\n                />\n                {projectName}\n              </div>\n              <div className=\"task-editor__list-name\">\n                <Icon name=\"chevron-right\" />\n                {listName}\n              </div>\n            </TaskEditorSection>\n          )}\n          <TaskEditorSection>\n            <Button\n              onClick={this.toggleDatePicker}\n              type=\"button\"\n              className={`task-editor__btn--due-date ${\n                isDatePickerActive ? 'is-active' : ''\n              }`}\n            >\n              <span className=\"task-editor__due-date-icon\">\n                <Icon name=\"calendar\" />\n              </span>\n              <span className=\"task-editor__due-date-wrapper\">\n                {!dueDate ? (\n                  <span className=\"task-editor__no-due-date\">Set due date</span>\n                ) : (\n                  <>\n                    <span className=\"task-editor__section-title--sm\">\n                      Due Date\n                    </span>\n                    <span\n                      className={`task-editor__due-date ${\n                        isDueToday\n                          ? 'is-due-today'\n                          : isDueTmrw\n                          ? 'is-due-tmrw'\n                          : isPastDue\n                          ? 'is-past-due'\n                          : ''\n                      }`}\n                    >\n                      {dueDateStr}\n                    </span>\n                  </>\n                )}\n              </span>\n            </Button>\n            <DatePicker\n              innerRef={el => (this.datePickerEl = el)}\n              onClose={this.toggleDatePicker}\n              selectedDate={dueDate ? taskDueDate : null}\n              currentMonth={taskDueDate.month}\n              currentYear={taskDueDate.year}\n              selectDate={this.setDueDate}\n              isActive={isDatePickerActive}\n            />\n          </TaskEditorSection>\n          <TaskEditorSection>\n            <div className=\"task-editor__section-icon\">\n              <Icon name=\"user\" />\n            </div>\n            {isAssigned && (\n              <div className=\"task-editor__members\">\n                {membersArray.map(member => {\n                  const { name, photoURL, userId } = member;\n                  return (\n                    <Avatar\n                      classes={{\n                        avatar: 'task-editor__avatar',\n                        placeholder: 'task-editor__avatar-placeholder'\n                      }}\n                      name={name}\n                      size=\"sm\"\n                      variant=\"circle\"\n                      imgSrc={photoURL}\n                      key={userId}\n                    />\n                  );\n                })}\n              </div>\n            )}\n            {projectId && (\n              <Button\n                type=\"button\"\n                className=\"task-editor__btn--add-member\"\n                onClick={() => this.membersListButton.current.click()}\n              >\n                <Icon name=\"plus\" />\n              </Button>\n            )}\n          </TaskEditorSection>\n          <TaskEditorSection>\n            <div className=\"task-editor__section-icon\">\n              <Icon name=\"tag\" />\n            </div>\n            <TagsInput\n              addTag={this.addTag}\n              tagSuggestions={mergedTags}\n              assignedTags={taskTags}\n              isColorPickerActive={isColorPickerActive}\n              setTagColor={this.setTagColor}\n              removeTag={this.removeTag}\n              currentTag={currentTag}\n            />\n          </TaskEditorSection>\n          <TaskEditorSection>\n            <div className=\"task-editor__section-icon\">\n              <Icon name=\"edit-3\" />\n            </div>\n            <Textarea\n              className=\"task-editor__textarea task-editor__textarea--description\"\n              name=\"notes\"\n              value={notes}\n              onChange={this.onChange}\n              placeholder=\"Add a description\"\n              onBlur={this.onBlur}\n              onFocus={this.onFocus}\n            />\n          </TaskEditorSection>\n        </form>\n        <TaskEditorSection>\n          <div className=\"task-editor__section-header\">\n            <div className=\"task-editor__section-icon\">\n              <Icon name=\"check-square\" />\n            </div>\n            <h3 className=\"task-editor__section-title\">\n              {hasSubtasks && (\n                <span className=\"task-editor__section-detail\">\n                  {completedSubtasks.length}/{subtaskIds.length}\n                </span>\n              )}\n              Subtasks\n            </h3>\n            <hr className=\"task-editor__hr\" />\n          </div>\n          {hasSubtasks && (\n            <Subtasks\n              taskId={taskId}\n              subtaskIds={subtaskIds}\n              projectId={projectId}\n            />\n          )}\n          <div className=\"task-editor__section-icon\">\n            {newSubtaskFormIsFocused ? (\n              <div className=\"task-editor__checkbox\" />\n            ) : (\n              <Icon name=\"plus-circle\" />\n            )}\n          </div>\n          <form\n            name=\"newSubtaskForm\"\n            className={`task-editor__new-subtask-form ${\n              currentFocus === 'newSubtask' ? 'is-focused' : ''\n            }`}\n            ref={el => (this.newSubtaskFormEl = el)}\n            onSubmit={this.addSubtask}\n          >\n            <Textarea\n              className=\"task-editor__textarea task-editor__textarea--new-subtask\"\n              name=\"newSubtask\"\n              value={newSubtask}\n              onChange={this.onChange}\n              placeholder=\"Add a subtask\"\n              onFocus={this.onFocus}\n              onKeyDown={this.addSubtask}\n            />\n            {currentFocus === 'newSubtask' && (\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isNewSubtaskInvalid}\n                onClick={this.addSubtask}\n                className=\"task-editor__btn--add-subtask\"\n              >\n                Add subtask\n              </Button>\n            )}\n          </form>\n        </TaskEditorSection>\n        <TaskEditorSection>\n          <div className=\"task-editor__section-header\">\n            <div className=\"task-editor__section-icon\">\n              <Icon name=\"message-circle\" />\n            </div>\n            <h3 className=\"task-editor__section-title\">\n              {hasComments && (\n                <span className=\"task-editor__section-detail\">\n                  {commentIds.length}\n                </span>\n              )}\n              {hasComments && commentIds.length === 1 ? 'Comment' : 'Comments'}\n            </h3>\n            <hr className=\"task-editor__hr\" />\n          </div>\n\n          {!isFetching && hasComments && (\n            <div className=\"task-editor__comments\">\n              {commentsArray.map(comment => (\n                <Comment key={comment.commentId} {...comment} />\n              ))}\n            </div>\n          )}\n          <Avatar\n            classes={{\n              avatar: 'task-editor__avatar',\n              placeholder: 'task-editor__avatar-placeholder'\n            }}\n            name={currentUser.name}\n            size=\"sm\"\n            variant=\"circle\"\n            imgSrc={currentUser.photoURL}\n          />\n          <form\n            name=\"commentForm\"\n            className={`task-editor__comment-form ${\n              commentFormIsFocused ? 'is-focused' : ''\n            }`}\n            ref={el => (this.commentFormEl = el)}\n            onSubmit={this.addComment}\n          >\n            <Textarea\n              className=\"task-editor__textarea task-editor__textarea--comment\"\n              name=\"newComment\"\n              value={newComment}\n              onChange={this.onChange}\n              placeholder=\"Write a comment...\"\n              onFocus={this.onFocus}\n              onKeyDown={this.addComment}\n            />\n            {commentFormIsFocused && (\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isNewCommentInvalid}\n                onClick={this.addComment}\n                name=\"newCommentSubmit\"\n                className=\"task-editor__btn--submit-comment\"\n              >\n                Send\n              </Button>\n            )}\n          </form>\n        </TaskEditorSection>\n      </TaskEditorWrapper>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentUser: currentUserSelectors.getCurrentUser(state),\n    commentsArray: commentSelectors.getCommentsArray(\n      state,\n      ownProps.commentIds\n    ),\n    commentsById: commentSelectors.getCommentsById(state),\n    usersArray: userSelectors.getUsersArray(state),\n    membersArray: userSelectors.getMembersArray(state, ownProps.assignedTo),\n    taskTags: taskSelectors.getTaskTags(state, ownProps),\n    mergedTags: currentUserSelectors.getMergedTags(state),\n    projectTags: projectSelectors.getProjectTags(state, ownProps.projectId),\n    completedSubtasks: subtaskSelectors.getCompletedSubtasks(\n      state,\n      ownProps.subtaskIds\n    ),\n    projectColor: projectSelectors.getProjectColor(state, ownProps.projectId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteTask: ({ taskId, listId }) =>\n      dispatch(taskActions.deleteTask({ taskId, listId })),\n    fetchTaskComments: taskId =>\n      dispatch(commentActions.fetchTaskComments(taskId)),\n    syncTaskComments: taskId =>\n      dispatch(commentActions.syncTaskComments(taskId)),\n    addComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.addComment({ commentId, commentData })),\n    deleteComment: commentId =>\n      dispatch(commentActions.deleteComment(commentId)),\n    updateComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.updateComment({ commentId, commentData })),\n    addTag: (taskId, tag) => dispatch(taskActions.addTag(taskId, tag)),\n    removeTaskTag: ({ taskId, name, userId, projectId }) => dispatch(taskActions.removeTaskTag({ taskId, name, userId, projectId }))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TaskEditor)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { withFirebase } from '../Firebase';\nimport { projectActions, projectSelectors } from '../../ducks/projects';\nimport {\n  selectTask as selectTaskAction,\n  getSelectedTaskId\n} from '../../ducks/selectedTask';\nimport {\n  selectProject as selectProjectAction,\n  getSelectedProjectId\n} from '../../ducks/selectedProject';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { subtaskActions, subtaskSelectors } from '../../ducks/subtasks';\nimport Board from './Board';\nimport { Input } from '../Input';\nimport { List } from '../List';\nimport { TaskEditor } from '../TaskEditor';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { utils } from '../../utils';\nimport './Board.scss';\n\nclass BoardContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: true,\n      isTaskEditorOpen: false,\n      projectName: this.props.projectName\n    };\n  }\n\n  componentDidMount() {\n    const {\n      firebase,\n      updateProject,\n      updateProjectTags,\n      projectId,\n      project,\n      addSubtask,\n      updateSubtask,\n      deleteSubtask,\n      selectProject,\n      selectedProjectId,\n      fetchProjectContent,\n      syncProjectLists,\n      syncProjectTasks\n    } = this.props;\n\n    if (selectedProjectId !== projectId) {\n      selectProject(projectId);\n    }\n\n    fetchProjectContent(projectId).then(() => {\n      this.setState({\n        isFetching: false\n      });\n\n      const { subtasksById } = this.props;\n\n      this.listObserver = () => syncProjectLists(projectId);\n      this.listObserver();\n\n      this.taskObserver = () => syncProjectTasks(projectId);\n      this.taskObserver();\n\n      this.projectObserver = firebase\n        .getProjectDoc(projectId)\n        .onSnapshot(snapshot => {\n          const updatedProject = snapshot.data();\n          updateProject(projectId, updatedProject);\n        });\n\n      this.subtaskObserver = firebase.db\n        .collection('subtasks')\n        .where('projectId', '==', projectId)\n        .onSnapshot(querySnapshot => {\n          querySnapshot.docChanges().forEach(change => {\n            const subtaskId = change.doc.id;\n            const subtaskData = change.doc.data();\n            if (change.type === 'added') {\n              if (subtaskId in subtasksById) return;\n              addSubtask({ subtaskId, subtaskData });\n            }\n            if (change.type === 'modified') {\n              updateSubtask({ subtaskId, subtaskData });\n            }\n            if (change.type === 'removed') {\n              deleteSubtask(subtaskId);\n            }\n          });\n        });\n    });\n    console.log('mounted');\n  }\n\n  componentWillUnmount() {\n    const { selectProject } = this.props;\n    selectProject(null);\n    this.projectObserver();\n    this.listObserver();\n    this.taskObserver();\n    this.subtaskObserver();\n  }\n\n  onDragStart = () => {\n    this.setState({\n      isDragging: true\n    });\n  };\n\n  onDragEnd = ({ destination, draggableId, source, type }) => {\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    const { firebase } = this.props;\n    if (type === droppableTypes.TASK) {\n      const { listsById } = this.props;\n      const isMovedWithinList = source.droppableId === destination.droppableId;\n      const updatedTaskIds = [...listsById[destination.droppableId].taskIds];\n      if (isMovedWithinList) {\n        updatedTaskIds.splice(source.index, 1);\n        updatedTaskIds.splice(destination.index, 0, draggableId);\n        firebase.updateList(source.droppableId, {\n          taskIds: updatedTaskIds\n        });\n      } else {\n        updatedTaskIds.splice(destination.index, 0, draggableId);\n        firebase.moveTaskToList({\n          taskId: draggableId,\n          origListId: source.droppableId,\n          newListId: destination.droppableId,\n          updatedTaskIds\n        });\n      }\n    }\n\n    if (type === droppableTypes.LIST) {\n      const { projectsById, projectId, reorderLists } = this.props;\n      const updatedListIds = [...projectsById[projectId].listIds];\n      updatedListIds.splice(source.index, 1);\n      updatedListIds.splice(destination.index, 0, draggableId);\n      firebase.updateProject(projectId, {\n        listIds: updatedListIds\n      });\n      reorderLists(projectId, updatedListIds);\n    }\n  };\n\n  toggleTaskEditor = () => {\n    const { isTaskEditorOpen } = this.state;\n    if (isTaskEditorOpen) {\n      const { selectTask } = this.props;\n      selectTask(null);\n    }\n    this.setState(prevState => ({\n      isTaskEditorOpen: !prevState.isTaskEditorOpen\n    }));\n  };\n\n  handleTaskClick = taskId => {\n    const { selectTask } = this.props;\n    selectTask(taskId);\n    this.toggleTaskEditor();\n  };\n\n  onNameChange = e => {\n    this.setState({\n      projectName: e.target.value\n    });\n  };\n\n  onNameBlur = e => {\n    const { projectName, projectId, firebase } = this.props;\n    const { projectName: newProjectName } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newProjectName !== projectName) {\n      firebase.updateProjectName({ projectId, name: newProjectName });\n      console.log('updated project name!');\n    }\n  };\n\n  render() {\n    const { isFetching, isTaskEditorOpen, projectName } = this.state;\n    const { lists, tasksById, projectId, userId, selectedTaskId } = this.props;\n    if (isFetching) return null;\n    return (\n      <main className=\"board-container\">\n        <Input\n          className=\"board__input--title\"\n          name=\"projectName\"\n          type=\"text\"\n          value={projectName}\n          onChange={this.onNameChange}\n          required\n          hideLabel\n          onBlur={this.onNameBlur}\n        />\n        <DragDropContext\n          onDragEnd={this.onDragEnd}\n          onDragStart={this.onDragStart}\n        >\n          <Board projectId={projectId}>\n            {lists.map((list, listIndex) => {\n              const { listId, name: listName, taskIds } = list;\n              return (\n                <List\n                  listId={listId}\n                  key={listId}\n                  listIndex={listIndex}\n                  name={listName}\n                  taskIds={taskIds}\n                  isFetchingTasks={isFetching}\n                  onTaskClick={this.handleTaskClick}\n                  projectId={projectId}\n                  view=\"board\"\n                  isRestricted={false}\n                />\n              );\n            })}\n          </Board>\n        </DragDropContext>\n        {isTaskEditorOpen && (\n          <TaskEditor\n            {...tasksById[selectedTaskId]}\n            handleTaskEditorClose={this.toggleTaskEditor}\n            userId={userId}\n            view=\"board\"\n          />\n        )}\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    projectsById: projectSelectors.getProjectsById(state),\n    selectedProjectId: getSelectedProjectId(state),\n    selectedTaskId: getSelectedTaskId(state),\n    listsById: listSelectors.getListsById(state),\n    lists: listSelectors.getSelectedProjectLists(state),\n    subtasksById: subtaskSelectors.getSubtasksById(state),\n    tasksById: taskSelectors.getTasksById(state),\n    project: projectSelectors.getProject(state, ownProps.projectId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchProjectContent: projectId =>\n      dispatch(projectActions.fetchProjectContent(projectId)),\n    updateProject: (projectId, projectData) =>\n      dispatch(projectActions.updateProject(projectId, projectData)),\n    selectProject: projectId => dispatch(selectProjectAction(projectId)),\n    selectTask: taskId => dispatch(selectTaskAction(taskId)),\n    fetchListsById: projectId =>\n      dispatch(listActions.fetchListsById(projectId)),\n    updateList: ({ listId, listData }) =>\n      dispatch(listActions.updateList(listId, listData)),\n    fetchProjectTasks: projectId =>\n      dispatch(taskActions.fetchProjectTasks(projectId)),\n    fetchProjectSubtasks: projectId =>\n      dispatch(subtaskActions.fetchProjectSubtasks(projectId)),\n    reorderLists: (projectId, listIds) =>\n      dispatch(projectActions.reorderLists(projectId, listIds)),\n    updateProjectTags: (projectId, tags) =>\n      dispatch(projectActions.updateProjectTags(projectId, tags)),\n    addSubtask: ({ subtaskId, subtaskData }) =>\n      dispatch(subtaskActions.addSubtask({ subtaskId, subtaskData })),\n    deleteSubtask: subtaskId =>\n      dispatch(subtaskActions.deleteSubtask(subtaskId)),\n    updateSubtask: ({ subtaskId, subtaskData }) =>\n      dispatch(subtaskActions.updateSubtask({ subtaskId, subtaskData })),\n    syncProjectLists: projectId =>\n      dispatch(listActions.syncProjectLists(projectId)),\n    syncProjectTasks: projectId =>\n      dispatch(taskActions.syncProjectTasks(projectId))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardContainer)\n);\n","import React from 'react';\nimport './Main.scss';\n\nconst Main = ({ classes, children, title }) => (\n  <main className={`main ${classes.main || ''}`}>\n    <h1 className={`main__title ${classes.title || ''}`}>{title}</h1>\n    {children}\n  </main>\n);\n\nMain.defaultProps = {\n  classes: {\n    main: '',\n    title: ''\n  }\n};\n\nexport default Main;\n","import React from 'react';\nimport { Icon } from '../Icon';\n\nconst DashboardPanel = ({ name, icon, children, size }) => (\n  <section className={`dashboard__section dashboard__section--${size}`}>\n    <h2 className=\"dashboard__section-header\">\n      <Icon name={icon} className=\"dashboard__section-icon\" />\n      {name}\n    </h2>\n    {children}\n  </section>\n);\n\nDashboardPanel.defaultProps = {\n  size: 'lg'\n};\n\nexport default DashboardPanel;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withFirebase } from '../Firebase';\nimport DashboardPanel from './DashboardPanel';\nimport { Task } from '../Task';\nimport {\n  currentUserActions,\n  currentUserSelectors\n} from '../../ducks/currentUser';\n\nclass TasksDueSoon extends Component {\n  state = {\n    isFetching: true\n  };\n\n  componentDidMount() {\n    const {\n      currentUserId,\n      fetchTasksDueWithinDays,\n      addTaskDueSoon,\n      deleteTaskDueSoon,\n      updateTaskDueSoon,\n      firebase\n    } = this.props;\n    fetchTasksDueWithinDays(currentUserId, 7).then(() => {\n      this.setState({\n        isFetching: false\n      });\n    });\n\n    const startingDate = new Date();\n    const timeStart = startingDate.setHours(0, 0, 0, 0);\n    const endingDate = new Date(startingDate);\n    const timeEnd = endingDate.setDate(endingDate.getDate() + 7);\n\n    this.taskObserver = firebase.db\n      .collection('tasks')\n      .where('assignedTo', 'array-contains', currentUserId)\n      .where('dueDate', '<=', timeEnd)\n      .orderBy('dueDate', 'asc')\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const taskId = change.doc.id;\n          const taskData = change.doc.data();\n          if (change.type === 'added') {\n            console.log('added task');\n            addTaskDueSoon({ taskId, taskData });\n          } else if (change.type === 'removed') {\n            deleteTaskDueSoon(taskId);\n          } else {\n            updateTaskDueSoon({ taskId, taskData });\n          }\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.taskObserver();\n  }\n\n  render() {\n    const { isFetching } = this.state;\n    const { tasksDueSoon, onTaskClick } = this.props;\n    if (isFetching) return null;\n    return (\n      <DashboardPanel icon=\"check-square\" size=\"md\" name=\"Tasks Due Soon\">\n        {tasksDueSoon.map((task, i) => (\n          <Task\n            index={i}\n            key={task.taskId}\n            onTaskClick={onTaskClick}\n            {...task}\n          />\n        ))}\n      </DashboardPanel>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentUserId: currentUserSelectors.getCurrentUserId(state),\n    tasksDueSoon: currentUserSelectors.getTasksDueSoonArr(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchTasksDueWithinDays: (userId, days) =>\n      dispatch(currentUserActions.fetchTasksDueWithinDays(userId, days)),\n    addTaskDueSoon: ({ taskId, taskData }) =>\n      dispatch(currentUserActions.addTaskDueSoon({ taskId, taskData })),\n    updateTaskDueSoon: ({ taskId, taskData }) =>\n      dispatch(currentUserActions.updateTaskDueSoon({ taskId, taskData })),\n    deleteTaskDueSoon: taskId =>\n      dispatch(currentUserActions.deleteTaskDueSoon(taskId))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TasksDueSoon)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport {\n  selectTask as selectTaskAction,\n  getSelectedTaskId\n} from '../../ducks/selectedTask';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport { ProjectGridContainer } from '../ProjectGrid';\nimport TasksDueSoon from './TasksDueSoon';\nimport DashboardPanel from './DashboardPanel';\nimport { TaskEditor } from '../TaskEditor';\nimport './Dashboard.scss';\n\nclass Dashboard extends Component {\n  state = {\n    isTaskEditorOpen: false\n  };\n\n  toggleTaskEditor = () => {\n    const { isTaskEditorOpen } = this.state;\n    if (isTaskEditorOpen) {\n      const { selectTask } = this.props;\n      selectTask(null);\n    }\n    this.setState(prevState => ({\n      isTaskEditorOpen: !prevState.isTaskEditorOpen\n    }));\n  };\n\n  handleTaskClick = taskId => {\n    const { selectTask } = this.props;\n    selectTask(taskId);\n    this.toggleTaskEditor();\n  };\n\n  render() {\n    const {\n      tasksDueSoon,\n      toggleProjectComposer,\n      userId,\n      selectedTaskId\n    } = this.props;\n    const { isTaskEditorOpen } = this.state;\n    return (\n      <main className=\"dashboard\">\n        <h1 className=\"dashboard__header\">Home</h1>\n        <TasksDueSoon onTaskClick={this.handleTaskClick} />\n        <DashboardPanel name=\"Notifications\" icon=\"bell\" size=\"sm\" />\n        <DashboardPanel name=\"Projects\" icon=\"grid\">\n          <ProjectGridContainer openProjectComposer={toggleProjectComposer} />\n        </DashboardPanel>\n        {isTaskEditorOpen && (\n          <TaskEditor\n            {...tasksDueSoon[selectedTaskId]}\n            handleTaskEditorClose={this.toggleTaskEditor}\n            userId={userId}\n            view=\"board\"\n          />\n        )}\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    selectedTaskId: getSelectedTaskId(state),\n    tasksDueSoon: currentUserSelectors.getTasksDueSoonById(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectTask: taskId => dispatch(selectTaskAction(taskId))\n  };\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Dashboard)\n);\n","import React from 'react';\n\nconst ExpansionPanelHeader = ({ children, className, onClick }) => {\n  return (\n    <div>\n      <div\n        className={`expansion-panel__header ${className}`}\n        role=\"button\"\n        onClick={onClick}\n        tabIndex={0}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n\nExpansionPanelHeader.defaultProps = {\n  className: ''\n};\n\nexport default ExpansionPanelHeader;\n","import React from 'react';\n\nconst ExpansionPanelContent = ({ className, children }) => {\n  return <div className={className}>{children}</div>;\n};\n\nExpansionPanelContent.defaultProps = {\n  className: ''\n};\n\nexport default ExpansionPanelContent;\n","import React, { Component } from 'react';\nimport ExpansionPanelHeader from './ExpansionPanelHeader';\nimport ExpansionPanelContent from './ExpansionPanelContent';\n\nexport default class ExpansionPanel extends Component {\n  static defaultProps = {\n    classes: {\n      panel: '',\n      header: '',\n      content: ''\n    },\n    isExpanded: null,\n    onChange: null,\n    id: null\n  };\n\n  state = {\n    isExpanded: false\n  };\n\n  toggleContent = () => {\n    const { onChange, id } = this.props;\n\n    if (!onChange) {\n      this.setState(prevProps => ({\n        isExpanded: !prevProps.isExpanded\n      }));\n    } else {\n      onChange(id);\n    }\n  };\n\n  render() {\n    const { classes, header, content, isExpanded: propsIsExpanded } = this.props;\n    const isExpanded = propsIsExpanded !== null ? propsIsExpanded : this.state.isExpanded;\n\n    return (\n      <div\n        className={`accordion-panel ${classes.panel || ''}`}\n        aria-expanded={isExpanded}\n      >\n        <ExpansionPanelHeader onClick={this.toggleContent} className={classes.header || ''}>\n          {header}\n        </ExpansionPanelHeader>\n        {isExpanded && (\n          <ExpansionPanelContent className={classes.content || ''}>\n            {content}\n          </ExpansionPanelContent>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { TaskComposer } from '../TaskComposer';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\nimport { Input } from '../Input';\nimport { Tasks } from '../Tasks';\nimport { ExpansionPanel } from '../ExpansionPanel';\nimport './Folder.scss';\n\nclass Folder extends Component {\n  state = {\n    name: this.props.name\n  };\n\n  render() {\n    const { tasks, onTaskClick, folderId, index, isRestricted } = this.props;\n    const { name } = this.state;\n    return (\n      <Draggable\n        draggableId={folderId}\n        index={index}\n        isDragDisabled={isRestricted}\n      >\n        {provided => (\n          <>\n            <section\n              className=\"folder\"\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <header className=\"folder__header\">\n                <Input\n                  className=\"folder__input--title\"\n                  name=\"name\"\n                  type=\"text\"\n                  value={name}\n                  onChange={this.onChange}\n                  required={!isRestricted}\n                  hideLabel\n                  isReadOnly={isRestricted}\n                  onBlur={this.onBlur}\n                />\n                <PopoverWrapper\n                  classes={{\n                    wrapper: 'folder__popover-wrapper',\n                    popover: 'folder__popover'\n                  }}\n                  alignInner=\"right\"\n                  buttonProps={{\n                    size: 'medium',\n                    iconOnly: true,\n                    className: 'folder__btn--more-actions',\n                    children: <Icon name=\"more-vertical\" />\n                  }}\n                >\n                  <Menu>\n                    <MenuItem />\n                  </Menu>\n                </PopoverWrapper>\n              </header>\n              <div className=\"folder__content\">\n                <Tasks\n                  tasks={tasks}\n                  listId={null}\n                  folderId={folderId}\n                  onTaskClick={onTaskClick}\n                  view=\"list\"\n                />\n              </div>\n              {provided.placeholder}\n              <TaskComposer\n                listId={null}\n                listName={null}\n                projectId={null}\n                projectName={null}\n                folderId={folderId}\n              />\n            </section>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    tasks: taskSelectors.getFolderTasks(state, ownProps.taskIds)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Folder);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport {\n  currentUserActions,\n  currentUserSelectors\n} from '../../ducks/currentUser';\nimport { taskSelectors, taskActions } from '../../ducks/tasks';\nimport {\n  selectTask as selectTaskAction,\n  getSelectedTaskId\n} from '../../ducks/selectedTask';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { Folder } from '../Folder';\nimport { Main } from '../Main';\nimport { TaskEditor } from '../TaskEditor';\nimport './UserTasks.scss';\n\nclass UserTasks extends Component {\n  state = {\n    isFetching: true,\n    isTaskEditorOpen: false\n  };\n\n  componentDidMount() {\n    const {\n      userId,\n      fetchFolders,\n      fetchUserTasks,\n      syncUserTasks,\n      syncFolders\n    } = this.props;\n    fetchFolders(userId);\n    fetchUserTasks(userId).then(() => {\n      this.setState({\n        isFetching: false\n      });\n\n      this.taskObserver = () => syncUserTasks(userId);\n      this.taskObserver();\n    });\n\n    this.folderObserver = () => syncFolders(userId);\n    this.folderObserver();\n  }\n\n  componentWillUnmount() {\n    this.taskObserver();\n    this.folderObserver();\n  }\n\n  toggleTaskEditor = () => {\n    const { isTaskEditorOpen } = this.state;\n    const { selectTask } = this.props;\n\n    if (isTaskEditorOpen) {\n      selectTask(null);\n    }\n\n    this.setState(prevState => ({\n      isTaskEditorOpen: !prevState.isTaskEditorOpen\n    }));\n  };\n\n  handleTaskClick = taskId => {\n    const { selectTask } = this.props;\n    const { isTaskEditorOpen } = this.state;\n    selectTask(taskId);\n    if (!isTaskEditorOpen) {\n      this.toggleTaskEditor();\n    }\n  };\n\n  onDragEnd = ({ destination, draggableId, source, type }) => {\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    const { firebase, currentUserId } = this.props;\n    if (type === droppableTypes.TASK) {\n      const { foldersById } = this.props;\n      const { droppableId: origFolderId, index: origIndex } = source;\n      const { droppableId: newFolderId, index: newIndex } = destination;\n      const isMovedWithinFolder = origFolderId === newFolderId;\n      const updatedTaskIds = [...foldersById[newFolderId].taskIds];\n      if (isMovedWithinFolder) {\n        updatedTaskIds.splice(origIndex, 1);\n        updatedTaskIds.splice(newIndex, 0, draggableId);\n        firebase.updateDoc(`users/${currentUserId}/folders/${newFolderId}`, {\n          taskIds: updatedTaskIds\n        });\n      } else {\n        updatedTaskIds.splice(newIndex, 0, draggableId);\n        firebase.moveTaskToFolder({\n          userId: currentUserId,\n          taskId: draggableId,\n          origFolderId,\n          newFolderId,\n          updatedTaskIds\n        });\n      }\n    }\n\n    if (type === droppableTypes.FOLDER) {\n      const { folderIds, reorderFolders } = this.props;\n      const updatedFolderIds = [...folderIds];\n      updatedFolderIds.splice(source.index, 1);\n      updatedFolderIds.splice(destination.index, 0, draggableId);\n      firebase.updateDoc(`users/${currentUserId}`, {\n        folderIds: updatedFolderIds\n      });\n      reorderFolders(currentUserId, updatedFolderIds);\n    }\n  };\n\n  onDragStart = () => {\n    this.setState({\n      isDragging: true\n    });\n  };\n\n  render() {\n    const { filters, userId, selectedTaskId, tasksById, folders } = this.props;\n    const { isFetching, isTaskEditorOpen } = this.state;\n    if (isFetching) return null;\n    return (\n      <Main title=\"All Tasks\">\n        <div\n          className={`user-tasks__wrapper ${\n            isTaskEditorOpen ? 'show-task-editor' : ''\n          }`}\n        >\n          <DragDropContext\n            onDragEnd={this.onDragEnd}\n            onDragStart={this.onDragStart}\n          >\n            <Droppable droppableId={userId} type={droppableTypes.FOLDER}>\n              {provided => (\n                <div\n                  className=\"user-tasks\"\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                >\n                  {folders.map((folder, i) => (\n                    <Folder\n                      key={folder.folderId}\n                      userId={userId}\n                      folderId={folder.folderId}\n                      index={i}\n                      name={folder.name}\n                      taskIds={folder.taskIds}\n                      onTaskClick={this.handleTaskClick}\n                      isRestricted={folder.isDefault}\n                    />\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n          {isTaskEditorOpen && (\n            <TaskEditor\n              {...tasksById[selectedTaskId]}\n              handleTaskEditorClose={this.toggleTaskEditor}\n              userId={userId}\n              view=\"list\"\n              key={selectedTaskId}\n            />\n          )}\n        </div>\n      </Main>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUserId: currentUserSelectors.getCurrentUserId(state),\n    foldersById: currentUserSelectors.getFolders(state),\n    folders: currentUserSelectors.getFoldersArray(state),\n    folderIds: currentUserSelectors.getFolderIds(state),\n    tasksById: taskSelectors.getTasksById(state),\n    selectedTaskId: getSelectedTaskId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    syncFolders: userId => dispatch(currentUserActions.syncFolders(userId)),\n    selectTask: taskId => dispatch(selectTaskAction(taskId)),\n    syncUserTasks: userId => dispatch(taskActions.syncUserTasks(userId)),\n    fetchFolders: userId => dispatch(currentUserActions.fetchFolders(userId)),\n    fetchUserTasks: userId => dispatch(taskActions.fetchUserTasks(userId)),\n    reorderFolders: (userId, folderIds) =>\n      dispatch(currentUserActions.reorderFolders(userId, folderIds))\n  };\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(UserTasks)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { withAuthorization } from '../../components/Session';\nimport * as ROUTES from '../../constants/routes';\nimport { userActions } from '../../ducks/users';\nimport { ProjectGridContainer } from '../../components/ProjectGrid';\nimport { ProjectComposer } from '../../components/ProjectComposer';\nimport { BoardContainer } from '../../components/Board';\nimport { projectActions, projectSelectors } from '../../ducks/projects';\nimport { currentUserActions } from '../../ducks/currentUser';\nimport { Main } from '../../components/Main';\nimport { Dashboard } from '../../components/Dashboard';\nimport { UserTasks } from '../../components/UserTasks';\nimport './Home.scss';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isProjectComposerOpen: false,\n      isFetching: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      fetchUsersById,\n      fetchProjectsById,\n      updateUser,\n      userId,\n      firebase,\n      fetchUserTags,\n      syncUserTags\n    } = this.props;\n    console.log('mounted home');\n    fetchUsersById()\n      .then(() => fetchProjectsById(userId))\n      .then(() => {\n        fetchUserTags(userId).then(() => {\n          this.tagsObserver = () => syncUserTags(userId);\n          this.tagsObserver();\n        });\n      })\n      .then(() =>\n        this.setState({\n          isFetching: false\n        })\n      );\n    this.userObserver = firebase.getUserDoc(userId).onSnapshot(snapshot => {\n      const userData = snapshot.data();\n      updateUser({ userId, userData });\n    });\n  }\n\n  toggleProjectComposer = () => {\n    this.setState(prevState => ({\n      isProjectComposerOpen: !prevState.isProjectComposerOpen\n    }));\n  };\n\n  createProject = name => {\n    const { userId, firebase } = this.props;\n    firebase.addProject({ userId, name });\n  };\n\n  componentWillUnmount() {\n    this.userObserver();\n    this.tagsObserver();\n  }\n\n  render() {\n    const { isProjectComposerOpen, isFetching } = this.state;\n    if (isFetching) return null;\n    const { userId, projectsById } = this.props;\n    return (\n      <>\n        {isProjectComposerOpen && (\n          <ProjectComposer\n            onClose={this.toggleProjectComposer}\n            handleSubmit={this.createProject}\n          />\n        )}\n        <Switch>\n          <Route\n            exact\n            path={ROUTES.HOME}\n            render={props => (\n              <Dashboard\n                toggleProjectComposer={this.toggleProjectComposer}\n                {...props}\n              />\n            )}\n          />\n          <Route\n            path={ROUTES.PROJECT}\n            render={props => (\n              <BoardContainer\n                userId={userId}\n                projectId={props.match.params.id}\n                projectName={projectsById[props.match.params.id].name}\n                {...props}\n              />\n            )}\n          />\n          <Route\n            path={ROUTES.USER_PROJECTS}\n            render={props => (\n              <Main title=\"Projects\">\n                <ProjectGridContainer\n                  userId={userId}\n                  openProjectComposer={this.toggleProjectComposer}\n                  {...props}\n                />\n              </Main>\n            )}\n          />\n          <Route\n            path={ROUTES.USER_TASKS}\n            render={props => <UserTasks userId={userId} {...props} />}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    projectsById: projectSelectors.getProjectsById(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUser: ({ userId, userData }) =>\n      dispatch(userActions.updateUser({ userId, userData })),\n    fetchUsersById: () => dispatch(userActions.fetchUsersById()),\n    fetchProjectsById: userId =>\n      dispatch(projectActions.fetchProjectsById(userId)),\n    fetchUserTags: userId => dispatch(currentUserActions.fetchUserTags(userId)),\n    syncUserTags: userId => dispatch(currentUserActions.syncUserTags(userId))\n  };\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(HomePage)\n);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../../components/Firebase';\nimport { Input } from '../../components/Input';\nimport { Button } from '../../components/Button';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .passwordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n    const isInvalid = passwordOne === '' || passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"passwordOne\"\n          label=\"New Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          label=\"Confirm New Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Change My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React from 'react';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport { PasswordChangeForm } from '../PasswordChange';\nimport { AuthUserContext, withAuthorization } from '../../components/Session';\nimport './Account.scss';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <main className=\"account\">\n        <h1>Account: {authUser.email}</h1>\n        <section className=\"account__section\">\n        <h2>Forgot your password?</h2>\n          <PasswordForgetForm />\n        </section>\n        <section className=\"account__section\">\n        <h2>Change your password.</h2>\n          <PasswordChangeForm />\n        </section>\n      </main>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(AccountPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../../components/Session';\nimport { userActions, userSelectors } from '../../ducks/users';\nimport './Admin.scss';\n\nclass AdminPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      users: {}\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    /*\n    this.props.firebase.users().on('value', snapshot => {\n      this.setState({\n        users: snapshot.val(),\n        loading: false\n      });\n    });\n    */\n  }\n\n  componentWillUnmount() {\n    /*\n    this.props.firebase.users().off();\n    */\n  }\n\n  render() {\n    return (\n      <main className=\"admin\">\n        <h1>Admin</h1>\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentUser: userSelectors.getCurrentUserData(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsersById: () => dispatch(userActions.fetchUsersById())\n  };\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(AdminPage)\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { Icon } from '../Icon';\nimport './Logo.scss';\n\nconst Logo = ({ size, className, onClick }) => {\n  return (\n    <div className={`logo logo--${size} ${className}`}>\n      <Link className=\"logo__link\" to={ROUTES.LANDING} onClick={onClick}>\n        <span className=\"logo__text\">workflow</span>\n      </Link>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React, { Component } from 'react';\nimport './Navbar.scss';\nimport { Logo } from '../Logo';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\n\nexport default class Navbar extends Component {\n  static defaultProps = {\n    minWidth: 768,\n    classes: {\n      navbar: '',\n      links: ''\n    }\n  };\n\n  state = {\n    viewportWidth: window.innerWidth,\n    isMobileNavVisible: false,\n    isTouchEnabled: false\n  };\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick);\n  }\n\n  handleResize = () => {\n    this.setState({\n      viewportWidth: window.innerWidth\n    });\n  };\n\n  toggleMobileNavVisibility = () => {\n    this.setState(prevState => ({\n      isMobileNavVisible: !prevState.isMobileNavVisible\n    }));\n  };\n\n  handleClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    if (!isMobileView) return;\n    if (e.target.matches('button') || e.target.matches('a')) {\n      this.toggleMobileNavVisibility();\n    }\n  };\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n    window.removeEventListener('resize', this.handleResize);\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  handleOutsideClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n    if (\n      !isMobileView ||\n      this.navLinksEl.contains(e.target) ||\n      e.target.matches('button') ||\n      e.target.matches('a')\n    )\n      return;\n    this.setState({\n      isMobileNavVisible: false\n    });\n  };\n\n  handleTouch = () => {\n    const { isTouchEnabled } = this.state;\n    if (isTouchEnabled === true) return;\n    this.setState({\n      isTouchEnabled: true\n    });\n    document.removeEventListener('touchstart', this.handleTouch);\n    document.removeEventListener('click', this.handleOutsideClick);\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  render() {\n    const { viewportWidth, isMobileNavVisible } = this.state;\n    const { minWidth, classes, children } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    return (\n      <nav\n        className={`navbar ${isMobileView ? 'is-collapsed' : ''} ${\n          isMobileView && isMobileNavVisible ? 'show-links' : ''\n        } ${classes.navbar}`}\n        ref={el => (this.navEl = el)}\n      >\n        <Logo className=\"navbar__logo\" onClick={this.handleClick} />\n        {isMobileView && (\n          <Button\n            type=\"button\"\n            color=\"primary\"\n            onClick={this.toggleMobileNavVisibility}\n            iconOnly\n          >\n            <Icon name=\"menu\" />\n          </Button>\n        )}\n        <ul\n          className={`navbar__links ${classes.links}`}\n          onClick={this.handleClick}\n          ref={el => (this.navLinksEl = el)}\n        >\n          {children}\n        </ul>\n      </nav>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Logo } from '../Logo';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport './Sidebar.scss';\n\nexport const SidebarIcon = ({ name }) => {\n  return <Icon name={name} className=\"sidebar__icon\" />;\n};\n\nexport default class Sidebar extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { onToggle, children } = this.props;\n    return (\n      <div className=\"sidebar__canvas\">\n        <Button\n          type=\"button\"\n          onClick={onToggle}\n          className=\"sidebar__btn--toggle\"\n          size=\"sm\"\n          iconOnly\n        >\n          <Icon name=\"bar-chart-2\" />\n        </Button>\n        <div className=\"sidebar\">\n          <nav className=\"sidebar__nav\">\n            <div className=\"sidebar__logo\">\n              <Logo size=\"sm\" />\n            </div>\n            <ul className=\"sidebar__list\">{children}</ul>\n          </nav>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { SidebarIcon } from './Sidebar';\n\nexport const NavLinksNonAuth = ({onClick}) => (\n  <>\n    <li>\n      <NavLink onClick={onClick} to={ROUTES.SIGN_IN}>Log In</NavLink>\n    </li>\n    <li>\n      <NavLink onClick={onClick} to={ROUTES.SIGN_UP}>Get Started</NavLink>\n    </li>\n  </>\n);\n\nexport const NavLinksAuth = ({ userId, onClick }) => (\n  <>\n    <li className=\"sidebar__item\">\n      <NavLink onClick={onClick} className=\"sidebar__link\" to={`/0/home/${userId}`}>\n        <SidebarIcon name=\"home\" />\n        <span className=\"sidebar__section-name\">Home</span>\n      </NavLink>\n    </li>\n    <li className=\"sidebar__item\">\n      <NavLink onClick={onClick} className=\"sidebar__link\" to={`/0/${userId}/projects`}>\n        <SidebarIcon name=\"grid\" />\n        <span className=\"sidebar__section-name\">Projects</span>\n      </NavLink>\n    </li>\n    <li className=\"sidebar__item\">\n      <NavLink onClick={onClick} className=\"sidebar__link\" to={`/0/${userId}/tasks`}>\n        <SidebarIcon name=\"check-square\" />\n        <span className=\"sidebar__section-name\">Tasks</span>\n      </NavLink>\n    </li>\n    <li className=\"sidebar__item\">\n      <NavLink onClick={onClick} className=\"sidebar__link\" to={ROUTES.ADMIN}>\n        <SidebarIcon name=\"settings\" />\n        <span className=\"sidebar__section-name\">Admin</span>\n      </NavLink>\n    </li>\n  </>\n);\n","import React from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Button } from '../Button';\n\nconst SignOutButton = ({ firebase, className }) => (\n  <Button\n    type=\"button\"\n    onClick={firebase.signOut}\n    className={className}\n    color=\"primary\"\n  >\n    Log Out\n  </Button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React, { Component, createRef } from 'react';\nimport { Button } from '../Button';\nimport { Input } from '../Input';\nimport { Icon } from '../Icon';\nimport './SearchBar.scss';\n\nexport default class SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false,\n      query: ''\n    };\n    this.inputEl = createRef();\n  }\n\n  handleClick = e => {\n    const { query } = this.state;\n    const { name } = e.target;\n    e.stopPropagation();\n    if (name === 'search' || query !== '') return;\n    if (name === 'toggle') {\n      this.inputEl.current.focus();\n    }\n    this.setState(state => ({\n      isExpanded: !state.isExpanded\n    }));\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  render() {\n    return (\n      <div\n        onClick={this.handleClick}\n        className={`search-bar${this.state.isExpanded ? ' is-expanded' : ''}`}\n      >\n        <form className=\"search-form\" onSubmit={this.handleSubmit}>\n          <Input\n            name=\"search\"\n            className=\"search-form__input\"\n            type=\"text\"\n            inputRef={this.inputEl}\n            hideLabel\n          />\n          <Input\n            name=\"submit\"\n            className=\"search-form__submit\"\n            type=\"submit\"\n            hideLabel\n          />\n          <Button\n            type=\"button\"\n            onClick={this.handleClick}\n            className=\"search-form__btn\"\n            name=\"toggle\"\n            iconOnly\n          >\n            <Icon name=\"search\" />\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport { PopoverWrapper } from '../Popover';\nimport { Avatar } from '../Avatar';\nimport { Menu, MenuItem } from '../Menu';\nimport { SignOutButton } from '../SignOutButton';\nimport { SearchBar } from '../SearchBar';\nimport * as ROUTES from '../../constants/routes';\nimport './Topbar.scss';\n\nclass Topbar extends Component {\n  render() {\n    const { currentUser } = this.props;\n    return (\n      <div className=\"topbar\">\n        <SearchBar />\n        {currentUser && (\n          <PopoverWrapper\n            classes={{\n              wrapper: 'topbar__user-actions-wrapper',\n              popover: 'topbar__user-actions'\n            }}\n            alignOuter=\"right\"\n            alignInner=\"right\"\n            buttonProps={{\n              size: 'sm',\n              iconOnly: true,\n              className: 'topbar__btn--user-actions',\n              children: (\n                <Avatar\n                  classes={{\n                    avatar: 'topbar__avatar',\n                    placeholder: 'topbar__avatar-placeholder'\n                  }}\n                  name={currentUser.name}\n                  size=\"sm\"\n                  variant=\"circle\"\n                  imgSrc={currentUser.photoURL}\n                />\n              )\n            }}\n          >\n            <Menu>\n              <MenuItem>\n                <NavLink className=\"topbar__link\" to={ROUTES.ACCOUNT}>\n                  My Account\n                </NavLink>\n              </MenuItem>\n              <MenuItem>\n                <SignOutButton className=\"topbar__link\" />\n              </MenuItem>\n            </Menu>\n          </PopoverWrapper>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentUser: currentUserSelectors.getCurrentUser(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Topbar);\n","import React, { Component } from 'react';\nimport { AuthUserContext } from '../Session';\nimport { Navbar, NavLinksAuth, NavLinksNonAuth, Sidebar } from '../Nav';\nimport { Avatar } from '../Avatar';\nimport { Topbar } from '../Topbar';\nimport './Header.scss';\n\nexport default class Header extends Component {\n  state = {\n    isNavExpanded: false\n  };\n\n  toggleNav = () => {\n    this.setState(prevState => ({\n      isNavExpanded: !prevState.isNavExpanded\n    }));\n  };\n\n  handleClick = e => {\n    this.setState(state => ({\n      isNavExpanded: false\n    }));\n  };\n\n  render() {\n    const { isNavExpanded } = this.state;\n    return (\n      <header className={`header ${isNavExpanded ? 'expand-nav' : ''}`}>\n        <AuthUserContext.Consumer>\n          {authUser =>\n            authUser ? (\n              <>\n                <Sidebar onToggle={this.toggleNav}>\n                  <NavLinksAuth onClick={this.toggleNav} userId={authUser.uid} />\n                </Sidebar>\n                <Topbar />\n              </>\n            ) : (\n              <Navbar>\n                <NavLinksNonAuth />\n              </Navbar>\n            )\n          }\n        </AuthUserContext.Consumer>\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { LandingPage } from '../Landing';\nimport { SignUpPage } from '../SignUp';\nimport { SignInPage } from '../SignIn';\nimport { PasswordForgetPage } from '../PasswordForget';\nimport { HomePage } from '../Home';\nimport { AccountPage } from '../Account';\nimport { AdminPage } from '../Admin';\nimport { withAuthentication } from '../../components/Session';\nimport { Header } from '../../components/Header';\nimport './App.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Header />\n        <Switch>\n          <Route exact path={ROUTES.LANDING} component={LandingPage} />\n          <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n          <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n          <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n          <Route path={ROUTES.APP} render={props => <HomePage {...props} />} />\n          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n          <Route path={ROUTES.ADMIN} component={AdminPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { projectsById } from '../ducks/projects';\nimport { tasksById } from '../ducks/tasks';\nimport { listsById } from '../ducks/lists';\nimport { usersById } from '../ducks/users';\nimport { subtasksById } from '../ducks/subtasks';\nimport { commentsById } from '../ducks/comments';\nimport { currentUser } from '../ducks/currentUser';\nimport { selectedTask } from '../ducks/selectedTask';\nimport { selectedProject } from '../ducks/selectedProject';\n\nexport default combineReducers({\n  currentUser,\n  projectsById,\n  tasksById,\n  listsById,\n  usersById,\n  subtasksById,\n  commentsById,\n  selectedTask,\n  selectedProject\n});\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory({ basename: process.env.PUBLIC_URL });\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, {}, applyMiddleware(thunk));\nexport default store;\nexport { default as firebase } from './firebase';\nexport { default as history } from './history';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport 'normalize.css';\nimport './index.scss';\nimport { App } from './pages/App';\nimport * as serviceWorker from './serviceWorker';\nimport { FirebaseContext } from './components/Firebase';\nimport store, { firebase, history } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <FirebaseContext.Provider value={firebase}>\n      <Router basename={process.env.PUBLIC_URL} history={history}>\n        <App />\n      </Router>\n    </FirebaseContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}