{"version":3,"sources":["assets/feather/feather-sprite.svg","components/Firebase/context.js","components/Firebase/Firebase.js","constants/routes.js","components/SignOut/SignOutButton.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Navigation/Navigation.js","components/Input/Input.js","components/SignUp/SignUpForm.js","components/SignUp/SignUp.js","components/SignUp/index.js","components/SignIn/SignInForm.js","components/PasswordForget/PasswordForgetForm.js","components/PasswordForget/PasswordForget.js","components/PasswordForget/index.js","components/SignIn/SignIn.js","store/firebase.js","ducks/user/actions.js","ducks/user/types.js","ducks/user/selectors.js","ducks/user/reducers.js","ducks/current/actions.js","ducks/current/types.js","ducks/current/selectors.js","components/BoardGrid/BoardGrid.js","components/BoardGrid/BoardTile.js","ducks/boards/actions.js","ducks/boards/types.js","ducks/boards/selectors.js","ducks/boards/reducers.js","components/BoardGrid/BoardGridContainer.js","components/Board/Board.js","ducks/lists/actions.js","ducks/lists/types.js","ducks/lists/selectors.js","ducks/lists/reducers.js","ducks/cards/selectors.js","ducks/cards/actions.js","ducks/cards/types.js","ducks/cards/reducers.js","components/FeatherIcon/FeatherIcon.js","components/Card/Card.js","components/Textarea/Textarea.js","components/Card/CardComposer.js","constants/droppableTypes.js","components/List/List.js","components/List/ListComposer.js","components/Board/BoardContainer.js","components/Modal/Modal.js","components/Board/BoardComposer.js","components/Home/Home.js","components/PasswordChange/PasswordChangeForm.js","components/Account/Account.js","components/Header/Header.jsx","components/App/App.js","serviceWorker.js","store/reducers.js","ducks/current/reducers.js","store/history.js","index.js"],"names":["module","exports","__webpack_require__","p","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","createUserWithEmailAndPassword","email","password","auth","signInWithEmailAndPassword","signOut","passwordReset","sendPasswordResetEmail","passwordUpdate","newPassword","currentUser","updatePassword","getTimestamp","firestore","FieldValue","serverTimestamp","addToArray","value","arrayUnion","removeFromArray","arrayRemove","getUserDoc","userId","db","collection","doc","addUser","_ref","name","username","_ref$boardIds","boardIds","set","updateUser","newValue","arguments","length","undefined","update","getBoardDoc","boardId","updateBoard","objectSpread","lastModifiedAt","addBoard","_ref2","boardTitle","add","createdAt","listIds","authorId","memberIds","then","ref","id","getListDoc","listId","updateList","addList","_ref3","listTitle","cardIds","getCardDoc","cardId","addCard","_ref4","cardTitle","updateCard","moveCardToList","_ref5","origListId","newListId","updatedCardIds","batch","cardRef","origListRef","newListRef","commit","console","log","catch","error","initializeApp","HOME","type","onClick","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","authUser","inherits","createClass","key","_this2","listener","onAuthStateChanged","setState","Session_context","Provider","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","NavigationAuth","className","Link","to","ROUTES","SignOut_SignOutButton","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","Input","hideLabel","htmlFor","title","onChange","placeholder","required","isRequired","INITIAL_STATE","passwordOne","passwordTwo","SignUpForm","onSubmit","e","_this$state","user","uid","preventDefault","defineProperty","target","_this$state2","isInvalid","components_Input_Input","disabled","message","SignUpPage","SignUp_SignUpForm","SignUpLink","SignInForm","PasswordForgetForm","PasswordForgetPage","PasswordForget_PasswordForgetForm","PasswordForgetLink","SignInPage","SignIn_SignInForm","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","updateUserBoards","getUserData","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","get","data","sent","loadUserData","t0","stop","_x","apply","action","toConsumableArray","selectBoard","selectList","selectCard","types","getCurrentBoardId","current","getCurrentListId","getCurrentCardId","getCurrent","BoardGrid","children","BoardTile","concat","loadBoardsById","boardsById","fetchBoardsById","where","snapshot","forEach","updateBoardsById","board","getBoardsById","getBoardsArray","keys","map","BoardGridContainer","onSnapshot","querySnapshot","docChanges","change","_this$props$user","_this$props","boardsArray","boardTiles","BoardGrid_BoardTile","BoardGrid_BoardGrid","openBoardComposer","connect","userSelectors","boardSelectors","userActions","boardActions","currentActions","Board","loadListsById","listsById","fetchListsById","updateListsById","list","getListsById","getListsArray","getCardsById","cardsById","getCardsArray","loadCardsById","fetchCardsById","updateCardsById","card","FeatherIcon","addClass","trim","xmlns","xmlnsXlink","viewBox","width","height","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","xlinkHref","featherIcons","Card","isCardEditorOpen","cardIndex","react_beautiful_dnd_esm","draggableId","index","provided","draggableProps","dragHandleProps","innerRef","FeatherIcon_FeatherIcon","Textarea","style","CardComposer","resetForm","onFocus","isActive","onBlur","components_Textarea_Textarea","Fragment","currentSelectors","CARD","List","isFetchingCards","cards","Card_Card_Card","droppableId","droppableTypes","droppableProps","components_Card_CardComposer","listSelectors","listsArray","cardSelectors","listActions","cardActions","ListComposer","BoardContainer","onDragEnd","destination","source","isMovedWithinList","splice","isFetching","isDragging","draggedCard","listListener","cardListener","_this3","_this$props2","lists","components_List_List","components_Board_Board","List_ListComposer","Modal","onModalClose","BoardComposer","handleSubmit","onClose","components_Modal_Modal","HomePage","toggleBoardComposer","prevState","showCreateBoardForm","createBoard","BoardComposer_BoardComposer","Switch","Route","exact","path","render","BoardGrid_BoardGridContainer","Board_BoardContainer","currentBoardId","PasswordChangeForm","PasswordChange_PasswordChangeForm","Header","components_Navigation_Navigation","Header_Header_Header","component","LandingPage","AccountPage","AdminPage","Boolean","window","location","hostname","match","combineReducers","createBrowserHistory","basename","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","es","context","Router","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d42b3814.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/feather-sprite.0ed672ce.svg\";","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import firebase from 'firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\nclass Firebase {\n  constructor() {\n    firebase.initializeApp(config);\n    this.auth = firebase.auth();\n    this.db = firebase.firestore();\n  }\n\n  // Auth API\n  createUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  signInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  signOut = () => this.auth.signOut();\n\n  passwordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  passwordUpdate = newPassword =>\n    this.auth.currentUser.updatePassword(newPassword);\n\n  // Utility API\n\n  getTimestamp = () => firebase.firestore.FieldValue.serverTimestamp();\n\n  addToArray = value => firebase.firestore.FieldValue.arrayUnion(value);\n  removeFromArray = value => firebase.firestore.FieldValue.arrayRemove(value);\n\n  // User API\n\n  getUserDoc = userId => this.db.collection('users').doc(userId);\n\n  addUser = ({ userId, name, username, email, boardIds = [] }) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .set({ userId, name, username, email, boardIds });\n\n  updateUser = (userId, newValue = {}) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .update(newValue);\n\n  // Board API\n\n  getBoardDoc = boardId => this.db.collection('boards').doc(boardId);\n\n  updateBoard = (boardId, newValue = {}) =>\n    this.getBoardDoc(boardId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  addBoard = ({ userId, boardTitle }) => {\n    this.db\n      .collection('boards')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        listIds: [],\n        authorId: userId,\n        memberIds: [userId],\n        boardTitle\n      })\n      .then(ref => {\n        this.updateUser(userId, {\n          boardIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  // List API\n\n  getListDoc = listId => this.db.collection('lists').doc(listId);\n\n  updateList = (listId, newValue = {}) =>\n    this.getListDoc(listId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  addList = ({ boardId, listTitle }) => {\n    this.db\n      .collection('lists')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        cardIds: [],\n        boardId,\n        listTitle\n      })\n      .then(ref => {\n        this.updateBoard(boardId, {\n          listIds: this.addToArray(ref.id),\n          lastModifiedAt: this.getTimestamp()\n        });\n      });\n  };\n\n  // Card API\n\n  getCardDoc = cardId => this.db.collection('cards').doc(cardId);\n\n  addCard = ({ boardId, listId, cardTitle }) => {\n    this.db\n      .collection('cards')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        listId,\n        boardId,\n        cardTitle\n      })\n      .then(ref => {\n        this.updateList(listId, {\n          cardIds: this.addToArray(ref.id),\n          lastModifiedAt: this.getTimestamp()\n        });\n      });\n  };\n\n  updateCard = (cardId, newValue = {}) =>\n    this.getCardDoc(cardId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  moveCardToList = ({ cardId, origListId, newListId, updatedCardIds }) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const origListRef = this.getListDoc(origListId);\n    const newListRef = this.getListDoc(newListId);\n    batch.update(cardRef, {\n      listId: newListId,\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(origListRef, {\n      cardIds: this.removeFromArray(cardId),\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(newListRef, {\n      cardIds: updatedCardIds,\n      lastModifiedAt: this.getTimestamp()\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('card moved');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n}\n\nexport default Firebase;\n","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const BOARD = '/home/board/:id';\n","import React from 'react';\nimport {withFirebase} from '../Firebase';\n\nconst SignOutButton = ({firebase}) => (\n  <button type=\"button\" onClick={firebase.signOut}>Sign Out</button>\n);\n\nexport default withFirebase(SignOutButton);","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        authUser: null\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        authUser\n          ? this.setState({ authUser })\n          : this.setState({ authUser: null });\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport AuthUserContext from './context';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          this.props.history.push(ROUTES.SIGN_IN);\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n  return compose(\n    withRouter,\n    withFirebase\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { SignOutButton } from '../SignOut';\nimport './Navigation.scss';\nimport { AuthUserContext } from '../Session';\n\nconst NavigationAuth = () => (\n  <ul className=\"navlinks\">\n    <li>\n      <Link to={ROUTES.HOME}>Home</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ADMIN}>Admin</Link>\n    </li>\n    <li>\n      <SignOutButton />\n    </li>\n  </ul>\n);\n\nconst NavigationNonAuth = () => (\n  <ul className=\"navlinks\">\n    <li>\n      <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n    </li>\n  </ul>\n);\n\nconst Navigation = () => {\n  return (\n    <nav className=\"navbar\">\n      <span className=\"navbar__logo\">\n        <Link to={ROUTES.LANDING}>workflow</Link>\n      </span>\n      <AuthUserContext.Consumer>\n        {authUser => (authUser ? <NavigationAuth /> : <NavigationNonAuth />)}\n      </AuthUserContext.Consumer>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport './Input.scss';\n\nconst Input = props => {\n  return (\n    <div className=\"input__group\">\n      {!props.hideLabel && (\n        <label htmlFor={props.name} className=\"input__label\">\n          {props.title}\n        </label>\n      )}\n      <input\n        className=\"input\"\n        id={props.name}\n        name={props.name}\n        type={props.type}\n        value={props.value}\n        onChange={props.onChange}\n        placeholder={props.placeholder}\n        required={props.isRequired}\n      />\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\n\nconst INITIAL_STATE = {\n  username: '',\n  name: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { username, email, name, passwordOne } = this.state;\n    this.props.firebase\n      .createUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        const userId = authUser.user.uid;\n        return this.props.firebase.addUser({\n          userId,\n          name,\n          username,\n          email\n        });\n      })\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const {\n      username,\n      name,\n      email,\n      passwordOne,\n      passwordTwo,\n      error\n    } = this.state;\n    const isInvalid =\n      passwordOne === '' ||\n      passwordTwo === '' ||\n      email === '' ||\n      username === '' ||\n      passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <Input\n          name=\"name\"\n          title=\"Full Name\"\n          value={name}\n          onChange={this.onChange}\n          type=\"text\"\n        />\n        <Input\n          name=\"username\"\n          title=\"Username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n        />\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n        />\n        <Input\n          name=\"passwordOne\"\n          title=\"Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          title=\"Confirm Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign Up\n        </button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignUpForm);\n","import React from 'react';\nimport SignUpForm from './SignUpForm';\n\nconst SignUpPage = () => (\n  <main className=\"app__main\">\n    <h1>Sign Up</h1>\n    <SignUpForm />\n  </main>\n);\n\nexport default SignUpPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nexport { default as SignUpPage } from './SignUp';\nexport { default as SignUpForm } from './SignUpForm';\nexport { SignUpLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose, renderComponent } from 'recompose';\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email, password } = this.state;\n    this.props.firebase\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n    const isInvalid = password === '' || email === '';\n    return (\n      <form onSubmit={this.onSubmit}>\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n        />\n        <Input\n          name=\"password\"\n          title=\"Password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign In\n        </button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignInForm);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null\n};\n\nclass PasswordForgetForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .passwordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, error } = this.state;\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordForgetForm);\n","import React from 'react';\nimport PasswordForgetForm from './PasswordForgetForm';\n\nconst PasswordForgetPage = () => (\n  <main className=\"app__main\">\n    <h1>Forgot your password?</h1>\n    <PasswordForgetForm />\n  </main>\n);\n\nexport default PasswordForgetPage;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport {default as PasswordForgetForm} from './PasswordForgetForm';\nexport {default as PasswordForgetPage} from './PasswordForget';\nexport {PasswordForgetLink};","import React from 'react';\nimport SignInForm from './SignInForm';\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\n\nconst SignInPage = () => (\n  <main className=\"app__main\">\n    <h1>Sign In</h1>\n    <SignInForm />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </main>\n);\n\nexport default SignInPage;\n","import { Firebase } from '../components/Firebase';\n\nconst firebase = new Firebase();\n\nexport default firebase;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const updateUserBoards = boardIds => {\n  return {\n    type: types.UPDATE_USER_BOARDS,\n    boardIds\n  };\n};\n\nexport const getUserData = userId => {\n  return async dispatch => {\n    try {\n      const user = await firebase\n        .getUserDoc(userId)\n        .get()\n        .then(doc => doc.data());\n      dispatch(loadUserData(user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const loadUserData = user => {\n  return {\n    type: types.LOAD_USER_DATA,\n    user\n  };\n};\n","export const UPDATE_USER_BOARDS = 'ADD_USER_BOARD';\nexport const LOAD_USER_DATA = 'LOAD_USER_DATA';\nexport const LOAD_USER_BOARDS = 'LOAD_USER_BOARDS';\n","export const getUserData = state => {\n  return state.user;\n};\n","import * as types from './types';\n\nconst user = (state = {}, action) => {\n  switch (action.type) {\n    case types.UPDATE_USER_BOARDS:\n      return {\n        ...state,\n        boardIds: [...action.boardIds]\n      };\n    case types.LOAD_USER_DATA:\n      return {\n        ...state,\n        ...action.user\n      };\n    default:\n      return state;\n  }\n};\n\nexport default user;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const selectBoard = boardId => {\n  return {\n    type: types.SELECT_BOARD,\n    boardId\n  };\n};\n\nexport const selectList = listId => {\n  return {\n    type: types.SELECT_LIST,\n    listId\n  };\n};\n\nexport const selectCard = cardId => {\n  return {\n    types: types.SELECT_CARD,\n    cardId\n  };\n};\n","export const SELECT_BOARD = 'SELECT_BOARD';\nexport const SELECT_LIST = 'SELECT_LIST';\nexport const SELECT_CARD = 'SELECT_CARD';\n","export const getCurrentBoardId = state => {\n  return state.current.boardId;\n};\n\nexport const getCurrentListId = state => {\n  return state.current.listId;\n};\n\nexport const getCurrentCardId = state => {\n  return state.current.cardId;\n};\n\nexport const getCurrent = state => {\n  return state.current;\n};\n","import React, { Component } from 'react';\n\nexport default class BoardGrid extends Component {\n  render() {\n    return <ul className=\"board-grid\">{this.props.children}</ul>;\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BoardTile = props => {\n  const { boardId, boardTitle, onClick } = props;\n  return (\n    <li className=\"board-grid__tile\">\n      <Link\n        className=\"board-grid__link\"\n        to={`/home/board/${boardId}`}\n        onClick={onClick}\n      >\n        <span className=\"board-grid__title\">{boardTitle}</span>\n      </Link>\n    </li>\n  );\n};\n\nexport default BoardTile;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadBoardsById = boardsById => {\n  return {\n    type: types.LOAD_BOARDS_BY_ID,\n    boardsById\n  };\n};\n\nexport const fetchBoardsById = userId => {\n  return async dispatch => {\n    try {\n      const boardsById = await firebase.db\n        .collection('boards')\n        .where('memberIds', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const boardsById = {};\n          snapshot.forEach(doc => {\n            boardsById[doc.id] = doc.data();\n          });\n          return boardsById;\n        });\n      dispatch(loadBoardsById(boardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateBoardsById = board => {\n  return {\n    type: types.UPDATE_BOARDS_BY_ID,\n    board\n  };\n};\n","export const LOAD_BOARDS_BY_ID = 'LOAD_BOARDS_BY_ID';\nexport const UPDATE_BOARDS_BY_ID = 'UPDATE_BOARDS_BY_ID';\n","export const getBoardsById = state => {\n  return state.boardsById;\n};\n\nexport const getBoardsArray = state => {\n  const { boardsById } = state;\n  return Object.keys(boardsById).map(boardId => {\n    return {\n      boardId,\n      ...boardsById[boardId]\n    };\n  });\n};\n","import * as types from './types';\n\nconst boardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_BOARDS_BY_ID:\n      const { boardsById } = action;\n      return {\n        ...state,\n        ...boardsById\n      };\n    case types.UPDATE_BOARDS_BY_ID:\n      const { board } = action;\n      return {\n        ...state,\n        ...board\n      };\n    default:\n      return state;\n  }\n};\n\nexport default boardsById;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport BoardGrid from './BoardGrid';\nimport BoardTile from './BoardTile';\nimport './BoardGrid.scss';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\n\nclass BoardGridContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const { userId } = this.props.user;\n    this.props.fetchBoardsById(userId);\n    this.listener = this.props.firebase.db\n      .collection('boards')\n      .where('memberIds', 'array-contains', userId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const board = {\n            [change.doc.id]: change.doc.data()\n          };\n          this.props.updateBoardsById(board);\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  }\n\n  render() {\n    const { boardIds, userId } = this.props.user;\n    const { boardsArray, selectBoard } = this.props;\n    const boardTiles = boardsArray.map(board => {\n      const { boardTitle, boardId } = board;\n      return (\n        <BoardTile\n          key={boardId}\n          boardTitle={boardTitle}\n          boardId={boardId}\n          onClick={() => selectBoard(boardId)}\n        />\n      );\n    });\n    return (\n      <section>\n        <BoardGrid>\n          {boardTiles}\n          <button\n            type=\"button\"\n            className=\"board-grid__tile board-grid__btn--add\"\n            onClick={this.props.openBoardComposer}\n          >\n            Create new board...\n          </button>\n        </BoardGrid>\n      </section>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => dispatch(userActions.getUserData(userId)),\n    updateUserBoards: boardIds =>\n      dispatch(userActions.updateUserBoards(boardIds)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardGridContainer)\n);\n","import React from 'react';\n\nconst Board = props => {\n  return <div className=\"board\">{props.children}</div>;\n};\n\nexport default Board;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadListsById = listsById => {\n  return {\n    type: types.LOAD_LISTS_BY_ID,\n    listsById\n  };\n};\n\nexport const fetchListsById = boardId => {\n  return async dispatch => {\n    try {\n      const listsById = await firebase.db\n        .collection('lists')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const listsById = {};\n          snapshot.forEach(doc => {\n            listsById[doc.id] = doc.data();\n          });\n          return listsById;\n        });\n      dispatch(loadListsById(listsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateListsById = list => {\n  return {\n    type: types.UPDATE_LISTS_BY_ID,\n    list\n  };\n};\n","export const LOAD_LISTS_BY_ID = 'LOAD_LISTS_BY_ID';\nexport const FETCH_LISTS_BY_ID = 'FETCH_LISTS_BY_ID';\nexport const UPDATE_LISTS_BY_ID = 'UPDATE_LISTS_BY_ID';\n","export const getListsById = state => {\n  return state.listsById;\n};\n\nexport const getListsArray = state => {\n  const { listsById } = state;\n  return Object.keys(listsById).map(listId => {\n    return {\n      listId,\n      ...listsById[listId]\n    };\n  });\n};\n","import * as types from './types';\n\nconst listsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_LISTS_BY_ID: {\n      const { listsById } = action;\n      return {\n        ...state,\n        ...listsById\n      };\n    }\n    case types.UPDATE_LISTS_BY_ID: {\n      const { list } = action;\n      return {\n        ...state,\n        ...list\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default listsById;\n","export const getCardsById = state => {\n  return state.cardsById;\n};\n\nexport const getCardsArray = state => {\n  const { cardsById } = state;\n  return Object.keys(cardsById).map(cardId => {\n    return {\n      cardId,\n      ...cardsById[cardId]\n    };\n  });\n};\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadCardsById = cardsById => {\n  return {\n    type: types.LOAD_CARDS_BY_ID,\n    cardsById\n  };\n};\n\nexport const fetchCardsById = boardId => {\n  return async dispatch => {\n    try {\n      const cardsById = await firebase.db\n        .collection('cards')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const cardsById = {};\n          snapshot.forEach(doc => {\n            cardsById[doc.id] = doc.data();\n          });\n          return cardsById;\n        });\n      dispatch(loadCardsById(cardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateCardsById = card => {\n  return {\n    type: types.UPDATE_CARDS_BY_ID,\n    card\n  };\n};\n","export const ADD_CARD = 'ADD_CARD';\nexport const SET_CARD_DUE_DATE = 'SET_CARD_DUE_DATE';\nexport const ADD_CARD_SUBTASK = 'ADD_CARD_SUBTASK';\nexport const REMOVE_CARD_SUBTASK = 'REMOVE_CARD_SUBTASK';\nexport const CHANGE_CARD_DESCRIPTION = 'CHANGE_CARD_DESCRIPTION';\nexport const SET_CARD_COLOR = 'SET_CARD_COLOR';\nexport const DELETE_CARD = 'DELETE_CARD';\nexport const MOVE_CARD = 'MOVE_CARD';\nexport const LOAD_CARDS_BY_ID = 'LOAD_CARDS_BY_ID';\nexport const UPDATE_CARDS_BY_ID = 'UPDATE_CARDS_BY_ID';\n","import * as types from './types';\n\nconst cardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_CARDS_BY_ID: {\n      const { cardsById } = action;\n      return {\n        ...state,\n        ...cardsById\n      };\n    }\n    case types.UPDATE_CARDS_BY_ID: {\n      const { card } = action;\n      return {\n        ...state,\n        ...card\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default cardsById;\n","import React from 'react';\nimport featherIcons from '../../assets/feather/feather-sprite.svg';\n\nfunction FeatherIcon(props) {\n  return (\n    <svg\n      className={`feather feather-${props.name} ${props.addClass || ''}`.trim()}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n      height=\"24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <use xlinkHref={`${featherIcons}#${props.name}`} />\n    </svg>\n  );\n}\n\nexport default FeatherIcon;\n","import React, { Component } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport './Card.scss';\nimport { FeatherIcon } from '../FeatherIcon';\n\nexport default class Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isCardEditorOpen: false\n    };\n  }\n\n  render() {\n    const { cardTitle, onClick, cardId, cardIndex } = this.props;\n    return (\n      <Draggable draggableId={cardId} index={cardIndex}>\n        {provided => (\n          <div\n            className=\"card\"\n            onClick={onClick}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n          >\n            <div className=\"card__header\">\n              <button className=\"card__btn--more-actions\" type=\"button\">\n                <FeatherIcon name=\"more-horizontal\" />\n              </button>\n              <div className=\"card__tags\" />\n              <h3 className=\"card__title\">{cardTitle}</h3>\n            </div>\n            <div className=\"card__footer\">\n              <div className=\"card__labels\" />\n            </div>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n","import React from 'react';\nimport './Textarea.scss';\n\nconst Textarea = props => {\n  return (\n    <textarea\n      className={`textarea ${props.style}`}\n      id={props.name}\n      name={props.name}\n      value={props.value}\n      onChange={props.onChange}\n      placeholder={props.placeholder}\n      required={props.isRequired}\n    />\n  );\n};\n\nexport default Textarea;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FeatherIcon } from '../FeatherIcon';\nimport { withAuthorization } from '../Session';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Textarea } from '../Textarea';\nimport './CardComposer.scss';\n\nclass CardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cardTitle: '',\n      isActive: false\n    };\n  }\n\n  resetForm = () => {\n    this.setState({ cardTitle: '' });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { cardTitle } = this.state;\n    const { boardId } = this.props.current;\n    const { listId } = this.props;\n    this.props.firebase.addCard({ boardId, listId, cardTitle });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = e => {\n    if (e.target.value !== '') return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const { cardTitle, isActive } = this.state;\n    return (\n      <div\n        className={`card-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"card-composer__form\" onSubmit={this.onSubmit}>\n          <Textarea\n            onChange={this.onChange}\n            value={cardTitle}\n            placeholder={isActive ? 'Enter card title...' : 'Add a card'}\n            isRequired={true}\n            name=\"cardTitle\"\n            style=\"card\"\n          />\n          {isActive && (\n            <>\n              <button className=\"card-composer__btn--add\" type=\"submit\">\n                Add Card\n              </button>\n              <button className=\"card-composer__btn--close\" type=\"button\">\n                <FeatherIcon name=\"x\" />\n              </button>\n            </>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardComposer)\n);\n","export const CARD = 'CARD';\nexport const LIST = 'LIST';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Droppable } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { Card, CardComposer } from '../Card';\nimport './List.scss';\nimport * as droppableTypes from '../../constants/droppableTypes';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const {\n      cardIds,\n      cardsById,\n      listId,\n      listTitle,\n      isFetchingCards\n    } = this.props;\n    if (isFetchingCards) return null;\n    const cards = cardIds.map((cardId, cardIndex) => {\n      const card = cardsById[cardId];\n      const { cardTitle } = card;\n      return (\n        <Card\n          key={cardId}\n          cardTitle={cardTitle}\n          cardId={cardId}\n          cardIndex={cardIndex}\n          listId={listId}\n        />\n      );\n    });\n\n    return (\n      <Droppable droppableId={listId} type={droppableTypes.CARD}>\n        {provided => (\n          <section\n            className=\"list\"\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n          >\n            <header className=\"list__header\">\n              <h2 className=\"list__title\">{listTitle}</h2>\n            </header>\n            {cards}\n            {provided.placeholder}\n            <CardComposer listId={listId} />\n          </section>\n        )}\n      </Droppable>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    current: currentSelectors.getCurrent(state),\n    listsById: listSelectors.getListsById(state),\n    listsArray: listSelectors.getListsArray(state),\n    cardsById: cardSelectors.getCardsById(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => dispatch(userActions.getUserData(userId)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId)),\n    fetchListsById: boardId => dispatch(listActions.fetchListsById(boardId)),\n    updateListsById: list => dispatch(listActions.updateListsById(list)),\n    fetchCardsById: boardId => dispatch(cardActions.fetchCardsById(boardId)),\n    updateCardsById: listId => dispatch(cardActions.updateCardsById(listId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(List)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input } from '../Input';\nimport { FeatherIcon } from '../FeatherIcon';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport './List.scss';\n\nclass ListComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listTitle: '',\n      isActive: false\n    };\n  }\n\n  resetForm = () => {\n    this.setState({ listTitle: '' });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { listTitle } = this.state;\n    const { boardId } = this.props.current;\n    this.props.firebase.addList({ boardId, listTitle });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = e => {\n    if (e.target.value === '') {\n      this.setState({\n        isActive: false\n      });\n    }\n  };\n\n  render() {\n    const { listTitle, isActive } = this.state;\n    return (\n      <div\n        className={`list-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"list-composer__form\" onSubmit={this.onSubmit}>\n          <Input\n            onChange={this.onChange}\n            value={listTitle}\n            placeholder={isActive ? 'Enter list title...' : 'Add a list'}\n            required=\"true\"\n            name=\"listTitle\"\n            hideLabel=\"true\"\n          />\n          {isActive && (\n            <>\n              <button className=\"list-composer__btn--add\" type=\"submit\">\n                Add List\n              </button>\n              <button className=\"list-composer__btn--close\" type=\"button\">\n                <FeatherIcon name=\"x\" />\n              </button>\n            </>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => dispatch(userActions.getUserData(userId)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListComposer)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport Board from './Board';\nimport { List, ListComposer } from '../List';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport './Board.scss';\n\nclass BoardContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: true,\n      isDragging: false,\n      draggedCard: null\n    };\n  }\n\n  componentDidMount() {\n    const { boardId } = this.props.current;\n    this.props.fetchListsById(boardId);\n    this.props.fetchCardsById(boardId).then(() => {\n      this.setState({\n        isFetching: false\n      });\n    });\n    this.listListener = this.props.firebase.db\n      .collection('lists')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const list = {\n            [change.doc.id]: change.doc.data()\n          };\n          console.log({ list });\n          this.props.updateListsById(list);\n        });\n      });\n    this.cardListener = this.props.firebase.db\n      .collection('cards')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const card = {\n            [change.doc.id]: change.doc.data()\n          };\n          this.props.updateCardsById(card);\n        });\n      });\n    console.log('mounted');\n  }\n\n  componentWillUnmount() {\n    this.listListener();\n    this.cardListener();\n  }\n\n  onDragEnd = ({ destination, draggableId, source, type }) => {\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    if (type === droppableTypes.CARD) {\n      const { listsById, firebase } = this.props;\n      const isMovedWithinList = source.droppableId === destination.droppableId;\n      const updatedCardIds = [...listsById[destination.droppableId].cardIds];\n      if (isMovedWithinList) {\n        updatedCardIds.splice(source.index, 1);\n        updatedCardIds.splice(destination.index, 0, draggableId);\n        console.log(updatedCardIds);\n        firebase.updateList(source.droppableId, {\n          cardIds: updatedCardIds\n        });\n      } else {\n        updatedCardIds.splice(destination.index, 0, draggableId);\n        firebase.moveCardToList({\n          cardId: draggableId,\n          origListId: source.droppableId,\n          newListId: destination.droppableId,\n          updatedCardIds\n        });\n      }\n    }\n  };\n\n  render() {\n    const { current, boardsById, listsArray } = this.props;\n    const { boardId } = current;\n    const board = boardsById[boardId];\n    const { boardTitle } = board;\n\n    const lists = listsArray.map(list => {\n      const { listId, listTitle, cardIds } = list;\n      return (\n        <List\n          listId={listId}\n          key={listId}\n          listTitle={listTitle}\n          cardIds={cardIds}\n          isFetchingCards={this.state.isFetching}\n        />\n      );\n    });\n\n    return (\n      <main className=\"board-container\">\n        <h1>{boardTitle}</h1>\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <Board>\n            {lists}\n            <ListComposer />\n          </Board>\n        </DragDropContext>\n      </main>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    current: currentSelectors.getCurrent(state),\n    listsById: listSelectors.getListsById(state),\n    listsArray: listSelectors.getListsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => dispatch(userActions.getUserData(userId)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId)),\n    fetchListsById: boardId => dispatch(listActions.fetchListsById(boardId)),\n    updateListsById: list => dispatch(listActions.updateListsById(list)),\n    fetchCardsById: boardId => dispatch(cardActions.fetchCardsById(boardId)),\n    updateCardsById: listId => dispatch(cardActions.updateCardsById(listId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardContainer)\n);\n","import React from 'react';\nimport { FeatherIcon } from '../FeatherIcon';\nimport './Modal.scss';\n\nconst Modal = ({ onModalClose, children }) => {\n  return (\n    <div className=\"modal\">\n      <div className=\"modal__content\">\n        <button\n          type=\"button\"\n          className=\"modal__btn--close\"\n          onClick={onModalClose}\n        >\n          <FeatherIcon name=\"x\" />\n        </button>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport { Modal } from '../Modal';\nimport { Input } from '../Input';\n\nconst INITIAL_STATE = {\n  boardTitle: ''\n};\n\nexport default class BoardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { boardTitle } = this.state;\n    const { handleSubmit, onClose } = this.props;\n    this.props.handleSubmit(boardTitle);\n    this.props.onClose();\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { boardTitle } = this.state;\n    return (\n      <Modal onModalClose={this.props.onClose}>\n        <form onSubmit={this.onSubmit}>\n          <Input\n            name=\"boardTitle\"\n            title=\"Board Title\"\n            value={boardTitle}\n            onChange={this.onChange}\n            type=\"text\"\n          />\n          <button type=\"submit\">Create Board</button>\n        </form>\n      </Modal>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { withAuthorization } from '../Session';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { currentSelectors } from '../../ducks/current';\nimport { BoardGridContainer } from '../BoardGrid';\nimport { BoardComposer } from '../Board';\nimport { BoardContainer } from '../Board';\nimport './Home.scss';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showCreateBoardForm: false\n    };\n  }\n  componentDidMount() {\n    const userId = this.props.firebase.auth.currentUser.uid;\n    this.props.getUserData(userId);\n  }\n\n  toggleBoardComposer = () => {\n    this.setState(prevState => ({\n      showCreateBoardForm: !prevState.showCreateBoardForm\n    }));\n  };\n\n  createBoard = boardTitle => {\n    const userId = this.props.user.userId;\n    this.props.firebase.addBoard({ userId, boardTitle });\n  };\n\n  render() {\n    const { showCreateBoardForm } = this.state;\n    const userId = this.props.user.userId;\n    return (\n      <>\n        {showCreateBoardForm && (\n          <BoardComposer\n            onClose={this.toggleBoardComposer}\n            handleSubmit={this.createBoard}\n          />\n        )}\n        <Switch>\n          <Route\n            exact\n            path={ROUTES.HOME}\n            render={() => (\n              <main className=\"main\">\n                <h1>Home</h1>\n                {userId && (\n                  <BoardGridContainer\n                    openBoardComposer={this.toggleBoardComposer}\n                  />\n                )}\n              </main>\n            )}\n          />\n          <Route\n            path={ROUTES.BOARD}\n            render={props => <BoardContainer {...props} />}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    currentBoardId: currentSelectors.getCurrentBoardId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => dispatch(userActions.getUserData(userId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(HomePage)\n);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .passwordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n    const isInvalid = passwordOne === '' || passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <Input\n          name=\"passwordOne\"\n          title=\"New Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          title=\"Confirm New Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React from 'react';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport { PasswordChangeForm } from '../PasswordChange';\nimport { AuthUserContext, withAuthorization } from '../Session';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <div>\n        <h1>Account: {authUser.email}</h1>\n        <PasswordForgetForm />\n        <PasswordChangeForm />\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(AccountPage);\n","import React, { Component } from 'react';\nimport { Navigation } from '../Navigation';\nimport './Header.scss';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <Navigation />\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport { Navigation } from '../Navigation';\nimport * as ROUTES from '../../constants/routes';\nimport { LandingPage } from '../Landing';\nimport { SignUpPage } from '../SignUp';\nimport { SignInPage } from '../SignIn';\nimport { PasswordForgetPage } from '../PasswordForget';\nimport { HomePage } from '../Home';\nimport { AccountPage } from '../Account';\nimport { AdminPage } from '../Admin';\nimport { withAuthentication } from '../Session';\nimport { Board } from '../Board';\nimport {Header} from '../Header';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Header />\n        <Switch>\n          <Route exact path={ROUTES.LANDING} component={LandingPage} />\n          <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n          <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n          <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n          <Route path={ROUTES.HOME} component={HomePage} />\n          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n          <Route path={ROUTES.ADMIN} component={AdminPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { boardsById } from '../ducks/boards';\nimport { cardsById } from '../ducks/cards';\nimport { listsById } from '../ducks/lists';\nimport { user } from '../ducks/user';\nimport { current } from '../ducks/current';\n\nexport default combineReducers({\n  boardsById,\n  cardsById,\n  listsById,\n  user,\n  current\n});\n","import * as types from './types';\n\nconst current = (state = {}, action) => {\n  switch (action.type) {\n    case types.SELECT_BOARD:\n      const { boardId } = action;\n      return {\n        ...state,\n        boardId\n      };\n    case types.SELECT_LIST:\n      const { listId } = action;\n      return {\n        ...state,\n        listId\n      };\n    case types.SELECT_CARD:\n      const { cardId } = action;\n      return {\n        ...state,\n        cardId\n      };\n    default:\n      return state;\n  }\n};\n\nexport { current };\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\n\nexport default history;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport './index.scss';\nimport { App } from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { FirebaseContext } from './components/Firebase';\nimport reducers from './store/reducers';\nimport firebase from './store/firebase';\nimport history from './store/history';\n\nconst store = createStore(reducers, {}, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <FirebaseContext.Provider value={firebase}>\n      <Router basename={process.env.PUBLIC_URL} history={history}>\n        <App />\n      </Router>\n    </FirebaseContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}