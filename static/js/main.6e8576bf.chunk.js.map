{"version":3,"sources":["assets/feather/feather-sprite.svg","components/Firebase/context.js","components/Firebase/Firebase.js","constants/routes.js","components/Button/Button.js","components/SignOut/SignOutButton.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Icon/Icon.js","components/Navbar/Navbar.js","components/Input/Input.js","components/SignUp/SignUpForm.js","components/UserFormPage/UserFormPage.js","components/SignUp/SignUp.js","components/SignUp/index.js","components/SignIn/SignInForm.js","components/PasswordForget/PasswordForgetForm.js","components/PasswordForget/PasswordForget.js","components/PasswordForget/index.js","components/SignIn/SignIn.js","store/firebase.js","ducks/users/actions.js","ducks/users/types.js","ducks/users/selectors.js","ducks/users/reducer.js","ducks/current/actions.js","ducks/current/types.js","ducks/current/selectors.js","components/BoardGrid/BoardGrid.js","components/BoardGrid/BoardTile.js","ducks/boards/actions.js","ducks/boards/types.js","ducks/boards/selectors.js","ducks/boards/reducers.js","components/BoardGrid/BoardGridContainer.js","components/Modal/Modal.js","components/BoardComposer/BoardComposer.js","constants/droppableTypes.js","components/ListComposer/ListComposer.js","components/Board/Board.js","ducks/lists/actions.js","ducks/lists/types.js","ducks/lists/selectors.js","ducks/lists/reducers.js","ducks/cards/selectors.js","ducks/cards/actions.js","ducks/cards/types.js","ducks/cards/reducers.js","ducks/tasks/actions.js","ducks/tasks/types.js","ducks/tasks/selectors.js","ducks/tasks/reducer.js","components/Textarea/Textarea.js","constants/keys.js","components/CardComposer/CardComposer.js","components/Menu/Menu.js","components/Menu/MenuItem.js","components/Popover/Popover.js","components/Popover/PopoverWrapper.js","components/Card/Card.js","components/List/Cards.js","components/List/List.js","ducks/comments/actions.js","ducks/comments/types.js","ducks/comments/selectors.js","ducks/comments/reducer.js","components/Toolbar/Toolbar.jsx","components/Avatar/Avatar.js","components/MemberSearch/MemberSearch.js","components/CardEditor/CardEditorMoreActions.js","components/Checkbox/Checkbox.js","components/CardEditor/CardEditorTask.js","components/CardEditor/CardEditorComment.js","components/CardEditor/CardEditor.js","utils/utils.js","components/Board/BoardContainer.js","components/Home/Home.js","components/PasswordChange/PasswordChangeForm.js","components/Account/Account.js","components/Header/Header.jsx","components/App/App.js","serviceWorker.js","store/reducers.js","ducks/current/reducers.js","store/history.js","index.js"],"names":["module","exports","__webpack_require__","p","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","signInWithGoogle","provider","auth","GoogleAuthProvider","addScope","signInWithPopup","then","result","credential","token","accessToken","console","log","user","catch","error","errorCode","code","message","email","alert","signInWithGithub","GithubAuthProvider","signInWithRedirect","createUserWithEmailAndPassword","password","signInWithEmailAndPassword","signOut","passwordReset","sendPasswordResetEmail","passwordUpdate","newPassword","currentUser","updatePassword","getTimestamp","firestore","FieldValue","serverTimestamp","addToArray","value","arrayUnion","removeFromArray","arrayRemove","getUserDoc","userId","db","collection","doc","addUser","_ref","name","username","_ref$boardIds","boardIds","_ref$photoURL","photoURL","set","updateUser","newValue","arguments","length","undefined","update","getBoardDoc","boardId","updateBoard","objectSpread","lastModifiedAt","addBoard","_ref2","boardTitle","add","createdAt","listIds","authorId","memberIds","ref","id","getListDoc","listId","updateList","addList","_ref3","listTitle","cardIds","deleteList","_ref4","batch","listRef","boardRef","delete","where","get","snapshot","docs","forEach","commit","getCardDoc","cardId","addCard","_ref5","cardTitle","updateCard","deleteCard","_ref6","cardRef","moveCardToList","_ref7","origListId","newListId","updatedCardIds","origListRef","newListRef","getTaskDoc","taskId","addTask","_ref8","_ref8$memberIds","_ref8$boardId","_ref8$cardId","_ref8$dueDate","dueDate","text","isCompleted","createdBy","assignedTo","concat","toConsumableArray","taskIds","updateTask","deleteTask","_ref9","_ref9$cardId","taskRef","getCommentDoc","commentId","addComment","_ref10","_ref10$memberIds","isPinned","from","to","likes","commentIds","updateComment","initializeApp","HOME","Button","children","_ref$type","type","onClick","_ref$className","className","_ref$color","color","_ref$size","size","_ref$variant","variant","disabled","_ref$iconOnly","iconOnly","buttonRef","objectWithoutProperties","defaultProps","components_Button_Button","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","authUser","inherits","createClass","key","_this2","listener","onAuthStateChanged","setState","Session_context","Provider","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","Icon","addClass","trim","xmlns","xmlnsXlink","viewBox","width","height","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","xlinkHref","featherIcons","NavLinksAuth","Fragment","Link","ROUTES","components_SignOut_SignOutButton","NavLinksNonAuth","Navbar","viewportWidth","window","innerWidth","isMobileNavVisible","isTouchEnabled","handleResize","toggleMobileNavVisibility","prevState","handleClick","e","minWidth","target","matches","handleOutsideClick","navLinksEl","contains","handleTouch","document","removeEventListener","addEventListener","_this$state","_this$props","navLinksClass","navRef","isMobileView","el","navEl","Icon_Icon","Navbar_NavLinksAuth","Navbar_NavLinksNonAuth","Input","onFocus","onChange","onInput","placeholder","isRequired","onBlur","autoComplete","inputRef","hideLabel","label","onKeyDown","htmlFor","required","INITIAL_STATE","passwordOne","passwordTwo","SignUpForm","onSubmit","uid","preventDefault","defineProperty","_this$state2","isInvalid","components_Input_Input","UserFormPage","title","SignUpPage","components_UserFormPage_UserFormPage","SignUp_SignUpForm","SignUpLink","SignInForm","enableGoogleLogin","PasswordForgetForm","PasswordForgetPage","PasswordForget_PasswordForgetForm","PasswordForgetLink","SignInPage","SignIn_SignInForm","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","loadUserData","loadUsersById","usersById","fetchUsersById","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","users","data","sent","t0","stop","_x","apply","fetchUserData","_callee2","_context2","_x2","userData","deleteUser","getUsersById","getUserData","getUsersArray","keys","map","action","_toPropertyKey","selectUser","selectBoard","selectList","selectCard","getCurrentUserId","current","getCurrentBoardId","getCurrentListId","getCurrentCardId","getCurrent","BoardGrid","BoardTile","loadBoardsById","boardsById","fetchBoardsById","updateBoardsById","board","reorderLists","updateListIds","getBoardsById","getBoardsArray","getBoard","BoardGridContainer","boardObserver","onSnapshot","querySnapshot","docChanges","change","_this$props2","boardsArray","boardTiles","BoardGrid_BoardTile","BoardGrid_BoardGrid","openBoardComposer","connect","ownProps","currentSelectors","userSelectors","boardSelectors","boardActions","currentActions","Modal","onModalClose","onModalClick","BoardComposer","handleSubmit","onClose","components_Modal_Modal","CARD","LIST","isActive","ListComposer","resetForm","onReset","Board","react_beautiful_dnd_esm","droppableId","droppableTypes","direction","provided","innerRef","droppableProps","components_ListComposer_ListComposer","loadListsById","listsById","fetchListsById","updateListsById","list","getListsById","getListsArray","getCardsById","cardsById","getCardsArray","loadCardsById","fetchCardsById","cards","updateCardsById","card","loadTasksById","tasksById","fetchTasksById","tasks","updateTasksById","task","fetchCardTasks","fetchUserTasks","_callee3","_context3","_x3","taskData","getTasksById","getTasksArray","reducer_toPropertyKey","Textarea","autoHeightResize","isAutoHeightResizeEnabled","textareaEl","style","scrollHeight","createRef","onDragStart","isReadOnly","readOnly","BACKSPACE","ENTER","TAB","ARROW_DOWN","ARROW_UP","CardComposer","Textarea_Textarea_Textarea","Menu","menuRef","MenuItem","Popover","onOutsideClick","PopoverWrapper","isOpen","componentEl","toggleOpen","alignInner","alignOuter","buttonProps","wrapperClass","popoverClass","anchorEl","popoverWrapperStyle","offsetTop","offsetLeft","position","top","Popover_Popover","align","Card","handleCardClick","onCardClick","cardIndex","draggableId","index","draggableProps","dragHandleProps","headerEl","Cards","scrollToBottom","listEnd","scrollIntoView","behavior","prevProps","onCardDelete","minHeight","isDraggingOver","Card_Card_Card","float","clear","List","handleListDelete","newListTitle","_this$props3","listIndex","isFetchingCards","viewportHeight","listHeaderEl","PopoverWrapper_PopoverWrapper","components_Menu_Menu","Menu_MenuItem","href","Cards_Cards","handleCardDelete","components_CardComposer_CardComposer","cardSelectors","loadCommentsById","commentsById","fetchCommentsById","comments","updateCommentsById","comment","fetchCardComments","fetchUserComments","commentData","deleteComment","getCommentsById","getCommentsArray","comments_reducer_toPropertyKey","Toolbar","Avatar","getUserInitials","fullName","split","charAt","join","toUpperCase","imgSrc","imgProps","classes","avatar","src","alt","img","backgroundColor","MemberSearch","query","selectedMember","selectedIndex","filteredList","memberSearchEl","matchUser","regExp","RegExp","test","filter","newIndex","indexOf","persistSelectedMember","onMemberClick","nextIndex","prevIndex","_this$state3","inputEl","i","Avatar_Avatar_Avatar","CardEditorMoreActions","onMenuClick","data-action","Checkbox","isChecked","labelClass","checked","appRoot","getElementById","CardEditorTask","portal","appendChild","removeChild","toggleCompleted","inner","components_Checkbox_Checkbox","isDragging","ReactDOM","createPortal","CardEditorComment","secondsElapsed","tick","handleLikeClick","handleLike","secondsSinceCreation","Math","floor","Date","now","toDate","getTime","interval","setInterval","clearInterval","date","dateCreatedFull","timeCreated","toLocaleTimeString","hour","minute","hour12","dateCreated","toDateString","isToday","isYesterday","setDate","getDate","cardActions","commentActions","CardEditor","updateCardTasks","tasksArray","cardTasks","reduce","handleCardEditorClose","cardKey","updatedValue","currentFocus","newComment","_this$props4","newTask","handleModalClick","commentFormEl","newTaskFormEl","handleMoreActions","dataset","onTaskChange","handleCheckboxChange","toggleTaskCompleted","updateTaskText","_this$props5","moveTask","destination","source","updatedTaskIds","splice","handleCommentLike","_this$props6","assignMember","isFetching","cardDescription","_this$props7","commentObserver","_this3","_this$props8","commentsArray","usersArray","hasTasks","hasComments","isNewCommentInvalid","isNewTaskInvalid","commentFormIsFocused","components_Toolbar_Toolbar","CardEditor_CardEditorMoreActions","MemberSearch_MemberSearch_MemberSearch","onDragEnd","CardEditorTask_CardEditorTask","components_CardEditor_CardEditorComment","taskSelectors","commentSelectors","isEqual","other","prototype","toString","typeArr","valueLen","compare","item1","item2","itemType","hasOwnProperty","windowDebouncer","callback","request","_len","args","Array","_key","cancelAnimationFrame","requestAnimationFrame","BoardContainer","isMovedWithinList","updatedListIds","toggleCardEditor","isCardEditorOpen","onTitleChange","onTitleBlur","newBoardTitle","updatedBoard","utils","listObserver","taskObserver","cardObserver","listsArray","lists","components_List_List","components_Board_Board","components_CardEditor_CardEditor","listSelectors","listActions","taskActions","HomePage","toggleBoardComposer","isBoardComposerOpen","createBoard","BoardComposer_BoardComposer_BoardComposer","Switch","Route","exact","path","render","BoardGrid_BoardGridContainer","Board_BoardContainer","match","params","currentBoardId","userActions","PasswordChangeForm","PasswordChange_PasswordChangeForm","Header","Navbar_Navbar_Navbar","Header_Header_Header","component","LandingPage","Home_Home","AccountPage","AdminPage","Boolean","location","hostname","combineReducers","createBrowserHistory","basename","store","createStore","reducers","applyMiddleware","thunk","es","context","Router","components_App_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6e8576bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/feather-sprite.0ed672ce.svg\";","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import firebase from 'firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\nclass Firebase {\n  constructor() {\n    firebase.initializeApp(config);\n    this.auth = firebase.auth();\n    this.db = firebase.firestore();\n  }\n\n  // Auth API\n\n  signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    provider.addScope('https://www.googleapis.com/auth/contacts.readonly');\n    this.auth.signInWithPopup(provider).then((result) => {\n      if (result.credential) {\n      const token = result.credential.accessToken;\n      console.log(token);\n      const user = result.user;\n      }\n    }).catch((error) => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      const email = error.email;\n      const credential = error.credential;\n\n      if (errorCode === 'auth/account-exists-with-different-credential') {\n        alert('You have already signed up with a different auth provider for that email.');\n      } else {\n        console.error(error);\n      }\n    });\n  };\n\n  signInWithGithub = () => {\n    const provider = new firebase.auth.GithubAuthProvider();\n    this.auth.signInWithRedirect(provider);\n  };\n\n\n  createUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  signInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  signOut = () => this.auth.signOut();\n\n  passwordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  passwordUpdate = newPassword =>\n    this.auth.currentUser.updatePassword(newPassword);\n\n  // Utility API\n\n  getTimestamp = () => firebase.firestore.FieldValue.serverTimestamp();\n  addToArray = value => firebase.firestore.FieldValue.arrayUnion(value);\n  removeFromArray = value => firebase.firestore.FieldValue.arrayRemove(value);\n\n  // User API\n\n  getUserDoc = userId => this.db.collection('users').doc(userId);\n\n  addUser = ({ userId, name, username, email, boardIds = [], photoURL = null }) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .set({ userId, name, username, email, boardIds, photoURL });\n\n  updateUser = (userId, newValue = {}) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .update(newValue);\n\n  // Board API\n\n  getBoardDoc = boardId => this.db.collection('boards').doc(boardId);\n\n  updateBoard = (boardId, newValue = {}) =>\n    this.getBoardDoc(boardId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  addBoard = ({ userId, boardTitle }) => {\n    this.db\n      .collection('boards')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        listIds: [],\n        authorId: userId,\n        memberIds: [userId],\n        boardTitle\n      })\n      .then(ref => {\n        this.updateUser(userId, {\n          boardIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  // List API\n\n  getListDoc = listId => this.db.collection('lists').doc(listId);\n\n  updateList = (listId, newValue = {}) =>\n    this.getListDoc(listId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  addList = ({ boardId, listTitle }) => {\n    this.db\n      .collection('lists')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        cardIds: [],\n        boardId,\n        listTitle\n      })\n      .then(ref => {\n        this.updateBoard(boardId, {\n          listIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  deleteList = ({ listId, boardId }) => {\n    const batch = this.db.batch();\n    const listRef = this.getListDoc(listId);\n    const boardRef = this.getBoardDoc(boardId);\n\n    // Delete list\n    batch.delete(listRef);\n\n    // Remove list id from board\n    batch.update(boardRef, {\n      listIds: this.removeFromArray(listId),\n      lastModifiedAt: this.getTimestamp()\n    });\n\n    // Delete cards assigned to list\n    this.db\n      .collection('cards')\n      .where('listId', '==', listId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('list deleted');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  // Card API\n\n  getCardDoc = cardId => this.db.collection('cards').doc(cardId);\n\n  addCard = ({ boardId, listId, cardTitle }) => {\n    this.db\n      .collection('cards')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        listId,\n        boardId,\n        cardTitle\n      })\n      .then(ref => {\n        this.updateList(listId, {\n          cardIds: this.addToArray(ref.id),\n          lastModifiedAt: this.getTimestamp()\n        });\n      });\n  };\n\n  updateCard = (cardId, newValue = {}) => {\n    this.getCardDoc(cardId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  deleteCard = ({ cardId, listId }) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const listRef = this.getListDoc(listId);\n    batch.delete(cardRef);\n    batch.update(listRef, {\n      cardIds: this.removeFromArray(cardId),\n      lastModifiedAt: this.getTimestamp()\n    });\n\n    // Delete tasks assigned to card\n    this.db\n      .collection('tasks')\n      .where('cardId', '==', cardId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('card deleted');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  moveCardToList = ({ cardId, origListId, newListId, updatedCardIds }) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const origListRef = this.getListDoc(origListId);\n    const newListRef = this.getListDoc(newListId);\n    batch.update(cardRef, {\n      listId: newListId,\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(origListRef, {\n      cardIds: this.removeFromArray(cardId),\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(newListRef, {\n      cardIds: updatedCardIds,\n      lastModifiedAt: this.getTimestamp()\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('card moved');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  // Task API\n\n  getTaskDoc = taskId => this.db.collection('tasks').doc(taskId);\n\n  addTask = ({ userId, memberIds = [], boardId = null, cardId = null, dueDate = null, text }) => {\n    this.db\n      .collection('tasks')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        isCompleted: false,\n        createdBy: userId,\n        assignedTo: [userId, ...memberIds],\n        dueDate,\n        boardId,\n        cardId,\n        text\n      })\n      .then(ref => {\n        if (cardId === null) return;\n        this.updateCard(cardId, {\n          taskIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  updateTask = (taskId, newValue = {}) => {\n    this.getTaskDoc(taskId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  deleteTask = ({ taskId, cardId = null }) => {\n    const batch = this.db.batch();\n    const taskRef = this.getTaskDoc(taskId);\n    batch.delete(taskRef);\n\n    if (cardId) {\n      const cardRef = this.getCardDoc(cardId);\n      batch.update(cardRef, {\n        taskIds: this.removeFromArray(taskId),\n        lastModifiedAt: this.getTimestamp()\n      });\n    }\n    return batch\n      .commit()\n      .then(() => {\n        console.log('task deleted');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  // Comment API\n  getCommentDoc = commentId => this.db.collection('comments').doc(commentId);\n\n  addComment = ({ userId, memberIds = [], boardId, cardId, text }) => {\n    this.db\n      .collection('comments')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        isPinned: false,\n        from: userId,\n        to: memberIds,\n        likes: [],\n        boardId,\n        cardId,\n        text\n      })\n      .then(ref => {\n        this.updateCard(cardId, {\n          commentIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  updateComment = (commentId, newValue = {}) => {\n    this.getCommentDoc(commentId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n}\n\nexport default Firebase;\n","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const BOARD = '/home/board/:id';\n","import React from 'react';\nimport './Button.scss';\n\nconst Button = ({\n  children,\n  type = 'button',\n  onClick,\n  className = '',\n  color = 'neutral',\n  size = 'md',\n  variant = 'text',\n  disabled,\n  name,\n  iconOnly = false,\n  buttonRef,\n  ...props\n}) => (\n  // eslint-disable-next-line react/button-has-type\n  <button\n    className={`${className} ${color} ${size} ${variant} ${\n      iconOnly ? 'icon-only' : ''\n    }`}\n    type={type}\n    onClick={onClick}\n    disabled={disabled}\n    name={name}\n    ref={buttonRef}\n    {...props}\n  >\n    {children}\n  </button>\n);\n\nButton.defaultProps = {\n  type: 'button',\n  className: '',\n  color: 'neutral',\n  size: 'md',\n  variant: 'text',\n  iconOnly: false\n};\n\nexport default Button;\n","import React from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Button } from '../Button';\nimport './SignOutButton.scss';\n\nconst SignOutButton = ({ firebase }) => (\n  <Button\n    type=\"button\"\n    onClick={firebase.signOut}\n    className=\"btn--sign-out\"\n    color=\"primary\"\n  >\n    Sign Out\n  </Button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        authUser: null\n      };\n    }\n\n    componentDidMount() {\n      const { firebase } = this.props;\n\n      this.listener = firebase.auth.onAuthStateChanged(authUser => {\n        authUser\n          ? this.setState({ authUser })\n          : this.setState({ authUser: null });\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport AuthUserContext from './context';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          this.props.history.push(ROUTES.SIGN_IN);\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n  return compose(\n    withRouter,\n    withFirebase\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from 'react';\nimport featherIcons from '../../assets/feather/feather-sprite.svg';\n\nfunction Icon(props) {\n  return (\n    <svg\n      className={`feather feather-${props.name} ${props.addClass || ''}`.trim()}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n      height=\"24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <use xlinkHref={`${featherIcons}#${props.name}`} />\n    </svg>\n  );\n}\n\nexport default Icon;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { SignOutButton } from '../SignOut';\nimport './Navbar.scss';\nimport { AuthUserContext } from '../Session';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\n\nconst NavLinksAuth = () => (\n  <>\n    <li>\n      <Link to={ROUTES.HOME}>Home</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ADMIN}>Admin</Link>\n    </li>\n    <li>\n      <SignOutButton />\n    </li>\n  </>\n);\n\nconst NavLinksNonAuth = () => (\n  <>\n    <li>\n      <Link to={ROUTES.SIGN_IN}>Log In</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.SIGN_UP}>Get Started</Link>\n    </li>\n  </>\n);\n\nexport default class Navbar extends Component {\n  static defaultProps = {\n    minWidth: 768\n  };\n\n  state = {\n    viewportWidth: window.innerWidth,\n    isMobileNavVisible: false,\n    isTouchEnabled: false\n  };\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick);\n  }\n\n  handleResize = () => {\n    this.setState({\n      viewportWidth: window.innerWidth\n    });\n  };\n\n  toggleMobileNavVisibility = () => {\n    this.setState(prevState => ({\n      isMobileNavVisible: !prevState.isMobileNavVisible\n    }));\n  };\n\n  handleClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    if (!isMobileView) return;\n    if (e.target.matches('button') || e.target.matches('a')) {\n      this.toggleMobileNavVisibility();\n    }\n  };\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n    window.removeEventListener('resize', this.handleResize);\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  handleOutsideClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n    if (\n      !isMobileView ||\n      this.navLinksEl.contains(e.target) ||\n      e.target.matches('button') ||\n      e.target.matches('a')\n    )\n      return;\n    this.setState({\n      isMobileNavVisible: false\n    });\n  };\n\n  handleTouch = () => {\n    const { isTouchEnabled } = this.state;\n    if (isTouchEnabled === true) return;\n    this.setState({\n      isTouchEnabled: true\n    });\n    document.removeEventListener('touchstart', this.handleTouch);\n    document.removeEventListener('click', this.handleOutsideClick);\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  render() {\n    const { viewportWidth, isMobileNavVisible } = this.state;\n    const { minWidth, navRef, navLinksClass } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    return (\n      <nav\n        className={`navbar ${isMobileView ? 'is-collapsed' : ''} ${\n          isMobileView && isMobileNavVisible ? 'show-links' : ''\n        }`}\n        ref={el => (this.navEl = el)}\n      >\n        <span className=\"navbar__logo\">\n          <Link to={ROUTES.LANDING} onClick={this.handleClick}>\n            workflow\n          </Link>\n        </span>\n        {isMobileView && (\n          <Button\n            type=\"button\"\n            color=\"primary\"\n            onClick={this.toggleMobileNavVisibility}\n            iconOnly\n          >\n            <Icon name=\"menu\" />\n          </Button>\n        )}\n        <ul\n          className={`navbar__links ${navLinksClass}`}\n          onClick={this.handleClick}\n          ref={el => (this.navLinksEl = el)}\n        >\n          <AuthUserContext.Consumer>\n            {authUser => (authUser ? <NavLinksAuth /> : <NavLinksNonAuth />)}\n          </AuthUserContext.Consumer>\n        </ul>\n      </nav>\n    );\n  }\n}\n","import React from 'react';\nimport './Input.scss';\n\nconst Input = ({\n  className = '',\n  name,\n  type,\n  value,\n  onFocus,\n  onChange,\n  onInput,\n  placeholder,\n  isRequired,\n  onBlur,\n  autoComplete,\n  inputRef,\n  hideLabel,\n  label,\n  onKeyDown\n}) => {\n  return (\n    <>\n      {!hideLabel && (\n        <label htmlFor={name} className=\"input__label\">\n          {label}\n        </label>\n      )}\n      <input\n        className={className}\n        id={name}\n        name={name}\n        type={type}\n        value={value}\n        onFocus={onFocus}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={isRequired}\n        onBlur={onBlur}\n        autoComplete={autoComplete}\n        ref={inputRef}\n        onInput={onInput}\n        onKeyDown={onKeyDown}\n      />\n    </>\n  );\n};\n\nexport default Input;\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  username: '',\n  name: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { username, email, name, passwordOne } = this.state;\n    this.props.firebase\n      .createUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        const userId = authUser.user.uid;\n        const photoURL = authUser.user.photoURL || null;\n        return this.props.firebase.addUser({\n          userId,\n          name,\n          username,\n          email,\n          photoURL\n        });\n      })\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const {\n      username,\n      name,\n      email,\n      passwordOne,\n      passwordTwo,\n      error\n    } = this.state;\n    const isInvalid =\n      passwordOne === '' ||\n      passwordTwo === '' ||\n      email === '' ||\n      username === '' ||\n      passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"name\"\n          label=\"Full Name\"\n          value={name}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"username\"\n          label=\"Username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordOne\"\n          label=\"Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          label=\"Confirm Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Create Account\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignUpForm);\n","import React from 'react';\nimport './UserFormPage.scss';\n\nconst UserFormPage = ({ title, children }) => (\n  <main className=\"user-form__container\">\n    <h1 className=\"user-form__title\">{title}</h1>\n    {children}\n  </main>\n);\n\nexport default UserFormPage;\n","import React from 'react';\nimport SignUpForm from './SignUpForm';\nimport { UserFormPage } from '../UserFormPage';\n\nconst SignUpPage = () => (\n  <UserFormPage title=\"Create an account\">\n    <SignUpForm />\n  </UserFormPage>\n);\n\nexport default SignUpPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nexport { default as SignUpPage } from './SignUp';\nexport { default as SignUpForm } from './SignUpForm';\nexport { SignUpLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email, password } = this.state;\n    this.props.firebase\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  enableGoogleLogin = e => {\n    const { signInWithGoogle } = this.props.firebase;\n    signInWithGoogle();\n    e.preventDefault();\n  }\n\n  render() {\n    const { email, password, error } = this.state;\n    const isInvalid = password === '' || email === '';\n    return (\n      <form className=\"user-form\">\n      {/*\n        <Button\n          type=\"click\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.enableGoogleLogin}\n        >\n          Continue with Google\n        </Button>\n        <Button\n          type=\"click\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.enableGithubLogin}\n        >\n          Continue with Github\n        </Button>\n      */}\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"password\"\n          label=\"Password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Log In\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignInForm);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null\n};\n\nclass PasswordForgetForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .passwordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, error } = this.state;\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Reset My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordForgetForm);\n","import React from 'react';\nimport PasswordForgetForm from './PasswordForgetForm';\nimport { UserFormPage } from '../UserFormPage';\n\nconst PasswordForgetPage = () => (\n  <UserFormPage title=\"Forgot your password?\">\n    <PasswordForgetForm />\n  </UserFormPage>\n);\n\nexport default PasswordForgetPage;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport {default as PasswordForgetForm} from './PasswordForgetForm';\nexport {default as PasswordForgetPage} from './PasswordForget';\nexport {PasswordForgetLink};","import React from 'react';\nimport SignInForm from './SignInForm';\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { UserFormPage } from '../UserFormPage';\n\nconst SignInPage = () => (\n  <UserFormPage title=\"Log In\">\n    <SignInForm />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </UserFormPage>\n);\n\nexport default SignInPage;\n","import { Firebase } from '../components/Firebase';\n\nconst firebase = new Firebase();\n\nexport default firebase;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\n\nexport const loadUserData = user => {\n  return {\n    type: types.LOAD_USER_DATA,\n    user\n  };\n};\n\nexport const loadUsersById = usersById => {\n  return {\n    type: types.LOAD_USERS_BY_ID,\n    usersById\n  };\n};\n\nexport const fetchUsersById = () => {\n  return async dispatch => {\n    try {\n      const usersById = await firebase.db\n        .collection('users')\n        .get()\n        .then(snapshot => {\n          const users = {};\n          snapshot.forEach(doc => {\n            users[doc.id] = {\n              userId: doc.id,\n              ...doc.data()\n            };\n          });\n          return users;\n        });\n      dispatch(loadUsersById(usersById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserData = userId => {\n  return async dispatch => {\n    try {\n      const user = await firebase\n        .getUserDoc(userId)\n        .get()\n        .then(doc => doc.data());\n      dispatch(loadUserData(user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addUser = ({ userId, userData }) => {\n  return {\n    type: types.ADD_USER,\n    userId,\n    userData\n  };\n};\n\nexport const deleteUser = userId => {\n  return {\n    type: types.DELETE_USER,\n    userId\n  };\n};\n\nexport const updateUser = ({ userId, userData }) => {\n  return {\n    type: types.UPDATE_USER,\n    userId,\n    userData\n  };\n};\n","export const LOAD_USER_DATA = 'LOAD_USER_DATA';\nexport const LOAD_USERS_BY_ID = 'LOAD_USERS_BY_ID';\nexport const ADD_USER = 'ADD_USER';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const DELETE_USER = 'DELETE_USER';\n","export const getUsersById = state => {\n  return state.usersById;\n};\n\nexport const getUserData = (state, userId) => {\n  return state.usersById[userId];\n};\n\nexport const getUsersArray = state => {\n  const { usersById } = state;\n  return Object.keys(usersById).map(userId => {\n    return {\n      userId,\n      ...usersById[userId]\n    };\n  });\n};\n","import * as types from './types';\n\nconst usersById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_USERS_BY_ID: {\n      const { usersById } = action;\n      return {\n        ...state,\n        ...usersById\n      };\n    }\n    case types.LOAD_USER_DATA: {\n      const { user } = action;\n      return {\n        ...state,\n        ...user\n      };\n    }\n    case types.ADD_USER: {\n      const { userId, userData } = action;\n      return {\n        ...state,\n        [userId]: {\n          userId,\n          ...userData\n        }\n      };\n    }\n    case types.DELETE_USER: {\n      const { userId } = action;\n      const { [userId]: deletedUser, ...restOfUsers } = state;\n      return restOfUsers;\n    }\n    case types.UPDATE_USER: {\n      const { userId, userData } = action;\n      return {\n        ...state,\n        [userId]: {\n          ...state[userId],\n          ...userData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default usersById;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const selectUser = userId => {\n  return {\n    type: types.SELECT_USER,\n    userId\n  };\n};\n\nexport const selectBoard = boardId => {\n  return {\n    type: types.SELECT_BOARD,\n    boardId\n  };\n};\n\nexport const selectList = listId => {\n  return {\n    type: types.SELECT_LIST,\n    listId\n  };\n};\n\nexport const selectCard = cardId => {\n  return {\n    type: types.SELECT_CARD,\n    cardId\n  };\n};\n","export const SELECT_BOARD = 'SELECT_BOARD';\nexport const SELECT_LIST = 'SELECT_LIST';\nexport const SELECT_CARD = 'SELECT_CARD';\nexport const SELECT_USER = 'SELECT_USER';\n","export const getCurrentUserId = state => {\n  return state.current.userId;\n};\n\nexport const getCurrentBoardId = state => {\n  return state.current.boardId;\n};\n\nexport const getCurrentListId = state => {\n  return state.current.listId;\n};\n\nexport const getCurrentCardId = state => {\n  return state.current.cardId;\n};\n\nexport const getCurrent = state => {\n  return state.current;\n};\n","import React, { Component } from 'react';\n\nexport default class BoardGrid extends Component {\n  render() {\n    return <ul className=\"board-grid\">{this.props.children}</ul>;\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BoardTile = props => {\n  const { boardId, boardTitle, onClick } = props;\n  return (\n    <li className=\"board-grid__tile\">\n      <Link\n        className=\"board-grid__link\"\n        to={`/home/board/${boardId}`}\n        onClick={onClick}\n      >\n        <span className=\"board-grid__title\">{boardTitle}</span>\n      </Link>\n    </li>\n  );\n};\n\nexport default BoardTile;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadBoardsById = boardsById => {\n  return {\n    type: types.LOAD_BOARDS_BY_ID,\n    boardsById\n  };\n};\n\nexport const fetchBoardsById = userId => {\n  return async dispatch => {\n    try {\n      const boardsById = await firebase.db\n        .collection('boards')\n        .where('memberIds', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const boardsById = {};\n          snapshot.forEach(doc => {\n            boardsById[doc.id] = doc.data();\n          });\n          return boardsById;\n        });\n      dispatch(loadBoardsById(boardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateBoardsById = board => {\n  return {\n    type: types.UPDATE_BOARDS_BY_ID,\n    board\n  };\n};\n\nexport const reorderLists = (boardId, listIds) => {\n  return {\n    type: types.REORDER_LISTS,\n    boardId,\n    listIds\n  };\n};\n\nexport const updateListIds = (boardId, listIds) => {\n  return {\n    type: types.UPDATE_LIST_IDS,\n    boardId,\n    listIds\n  };\n};\n","export const LOAD_BOARDS_BY_ID = 'LOAD_BOARDS_BY_ID';\nexport const UPDATE_BOARDS_BY_ID = 'UPDATE_BOARDS_BY_ID';\nexport const REORDER_LISTS = 'REORDER_LISTS';\nexport const UPDATE_LIST_IDS = 'UPDATE_LIST_IDS';","export const getBoardsById = state => {\n  return state.boardsById;\n};\n\nexport const getBoardsArray = state => {\n  const { boardsById } = state;\n  return Object.keys(boardsById).map(boardId => {\n    return {\n      boardId,\n      ...boardsById[boardId]\n    };\n  });\n};\n\nexport const getBoard = (state, boardId) => {\n  const { boardsById } = state;\n  return boardsById[boardId];\n};\n","import * as types from './types';\n\nconst boardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_BOARDS_BY_ID: {\n      const { boardsById } = action;\n      return {\n        ...state,\n        ...boardsById\n      };\n    }\n    case types.UPDATE_BOARDS_BY_ID: {\n      const { board } = action;\n      return {\n        ...state,\n        ...board\n      };\n    }\n    case types.UPDATE_LIST_IDS:\n    case types.REORDER_LISTS: {\n      const { boardId, listIds } = action;\n      return {\n        ...state,\n        [boardId]: {\n          ...state[boardId],\n          listIds\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default boardsById;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport BoardGrid from './BoardGrid';\nimport BoardTile from './BoardTile';\nimport './BoardGrid.scss';\nimport { withAuthorization } from '../Session';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Icon } from '../Icon';\nimport { userSelectors } from '../../ducks/users';\n\nclass BoardGridContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const { userId, firebase, updateBoardsById } = this.props;\n    this.boardObserver = firebase.db\n      .collection('boards')\n      .where('memberIds', 'array-contains', userId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const board = {\n            [change.doc.id]: change.doc.data()\n          };\n          updateBoardsById(board);\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.boardObserver();\n  }\n\n  render() {\n    const { boardsArray, selectBoard } = this.props;\n    const boardTiles = boardsArray.map(board => {\n      const { boardTitle, boardId } = board;\n      return (\n        <BoardTile\n          key={boardId}\n          boardTitle={boardTitle}\n          boardId={boardId}\n          onClick={() => selectBoard(boardId)}\n        />\n      );\n    });\n    return (\n      <section>\n        <BoardGrid>\n          {boardTiles}\n          <button\n            type=\"button\"\n            className=\"board-grid__tile board-grid__btn--add\"\n            onClick={this.props.openBoardComposer}\n          >\n            <Icon name=\"plus-circle\" />\n            Create board\n          </button>\n        </BoardGrid>\n      </section>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    userId: currentSelectors.getCurrentUserId(state),\n    user: userSelectors.getUserData(state, ownProps.userId),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardGridContainer)\n);\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport './Modal.scss';\n\nconst Modal = ({\n  onModalClose,\n  children,\n  className = '',\n  onModalClick,\n  size = 'md',\n  id\n}) => {\n  return (\n    <div className=\"modal\" onClick={onModalClick}>\n      <div\n        id={id}\n        className={`modal__content ${className} modal__content--${size}`}\n      >\n        <Button\n          type=\"button\"\n          className=\"modal__btn--close\"\n          onClick={onModalClose}\n          iconOnly\n        >\n          <Icon name=\"x\" />\n        </Button>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport { Modal } from '../Modal';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\nimport './BoardComposer.scss';\n\nconst INITIAL_STATE = {\n  boardTitle: ''\n};\n\nexport default class BoardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { boardTitle } = this.state;\n    const { handleSubmit, onClose } = this.props;\n    this.props.handleSubmit(boardTitle);\n    this.props.onClose();\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { boardTitle } = this.state;\n    return (\n      <Modal onModalClose={this.props.onClose} size=\"sm\">\n        <form onSubmit={this.onSubmit}>\n          <Input\n            name=\"boardTitle\"\n            title=\"Board Title\"\n            value={boardTitle}\n            onChange={this.onChange}\n            type=\"text\"\n          />\n          <Button\n            className=\"board-composer__btn--add\"\n            type=\"submit\"\n            onClick={this.onSubmit}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Create Board\n          </Button>\n        </form>\n      </Modal>\n    );\n  }\n}\n","export const CARD = 'CARD';\nexport const LIST = 'LIST';\nexport const TASK = 'TASK';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input } from '../Input';\nimport { Icon } from '../Icon';\nimport { withAuthorization } from '../Session';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Button } from '../Button';\nimport './ListComposer.scss';\n\nconst INITIAL_STATE = {\n  listTitle: '',\n  isActive: false\n};\n\nclass ListComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ listTitle: '' });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { listTitle } = this.state;\n    const { boardId } = this.props;\n    this.props.firebase.addList({ boardId, listTitle });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = e => {\n    if (e.target.value === '') {\n      this.setState({\n        isActive: false\n      });\n    }\n  };\n\n  render() {\n    const { listTitle, isActive } = this.state;\n    return (\n      <div\n        className={`list-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"list-composer__form\" onSubmit={this.onSubmit}>\n          <Input\n            onChange={this.onChange}\n            value={listTitle}\n            placeholder={isActive ? 'Enter list title...' : 'Add a list'}\n            required\n            name=\"listTitle\"\n            hideLabel\n            className=\"list-composer__input\"\n          />\n          {isActive && (\n            <div className=\"list-composer__footer\">\n              <Button\n                className=\"list-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add List\n              </Button>\n              <Button\n                className=\"list-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListComposer)\n);\n","import React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { ListComposer } from '../ListComposer';\n\nconst Board = props => {\n  const { boardId, children } = props;\n  return (\n    <Droppable\n      droppableId={boardId}\n      type={droppableTypes.LIST}\n      direction=\"horizontal\"\n    >\n      {provided => (\n        <div\n          className=\"board\"\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n        >\n          {children}\n          {provided.placeholder}\n          <ListComposer boardId={boardId} />\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nexport default Board;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadListsById = listsById => {\n  return {\n    type: types.LOAD_LISTS_BY_ID,\n    listsById\n  };\n};\n\nexport const fetchListsById = boardId => {\n  return async dispatch => {\n    try {\n      const listsById = await firebase.db\n        .collection('lists')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const listsById = {};\n          snapshot.forEach(doc => {\n            listsById[doc.id] = doc.data();\n          });\n          return listsById;\n        });\n      dispatch(loadListsById(listsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateListsById = list => {\n  return {\n    type: types.UPDATE_LISTS_BY_ID,\n    list\n  };\n};\n","export const LOAD_LISTS_BY_ID = 'LOAD_LISTS_BY_ID';\nexport const FETCH_LISTS_BY_ID = 'FETCH_LISTS_BY_ID';\nexport const UPDATE_LISTS_BY_ID = 'UPDATE_LISTS_BY_ID';\nexport const DELETE_CARD = 'DELETE_CARD';\n","export const getListsById = state => {\n  return state.listsById;\n};\n\nexport const getListsArray = state => {\n  const { listsById, boardsById, current } = state;\n  const { boardId } = current;\n  const board = boardsById[boardId];\n  if (!board) return null;\n  const { listIds } = board;\n\n  return listIds.map(listId => {\n    return {\n      listId,\n      ...listsById[listId]\n    };\n  });\n};\n","import * as types from './types';\n\nconst listsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_LISTS_BY_ID: {\n      const { listsById } = action;\n      return {\n        ...state,\n        ...listsById\n      };\n    }\n    case types.UPDATE_LISTS_BY_ID: {\n      const { list } = action;\n      return {\n        ...state,\n        ...list\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default listsById;\n","export const getCardsById = state => {\n  return state.cardsById;\n};\n\nexport const getCardsArray = (state, ownProps) => {\n  const { cardsById } = state;\n  const { cardIds } = ownProps;\n  return cardIds.map(cardId => cardsById[cardId]);\n};\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadCardsById = cardsById => {\n  return {\n    type: types.LOAD_CARDS_BY_ID,\n    cardsById\n  };\n};\n\nexport const fetchCardsById = boardId => {\n  return async dispatch => {\n    try {\n      const cardsById = await firebase.db\n        .collection('cards')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const cards = {};\n          snapshot.forEach(doc => {\n            cards[doc.id] = {\n              cardId: doc.id,\n              ...doc.data()\n            };\n          });\n          return cards;\n        });\n      dispatch(loadCardsById(cardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateCardsById = card => {\n  return {\n    type: types.UPDATE_CARDS_BY_ID,\n    card\n  };\n};\n\n","export const ADD_CARD = 'ADD_CARD';\nexport const SET_CARD_DUE_DATE = 'SET_CARD_DUE_DATE';\nexport const ADD_CARD_SUBTASK = 'ADD_CARD_SUBTASK';\nexport const REMOVE_CARD_SUBTASK = 'REMOVE_CARD_SUBTASK';\nexport const CHANGE_CARD_DESCRIPTION = 'CHANGE_CARD_DESCRIPTION';\nexport const SET_CARD_COLOR = 'SET_CARD_COLOR';\nexport const DELETE_CARD = 'DELETE_CARD';\nexport const MOVE_CARD = 'MOVE_CARD';\nexport const LOAD_CARDS_BY_ID = 'LOAD_CARDS_BY_ID';\nexport const UPDATE_CARDS_BY_ID = 'UPDATE_CARDS_BY_ID';\n\n","import * as types from './types';\n\nconst cardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_CARDS_BY_ID: {\n      const { cardsById } = action;\n      return {\n        ...state,\n        ...cardsById\n      };\n    }\n    case types.UPDATE_CARDS_BY_ID: {\n      const { card } = action;\n      return {\n        ...state,\n        ...card\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default cardsById;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadTasksById = tasksById => {\n  return {\n    type: types.LOAD_TASKS_BY_ID,\n    tasksById\n  };\n};\n\nexport const fetchTasksById = () => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateTasksById = task => {\n  return {\n    type: types.UPDATE_TASKS_BY_ID,\n    task\n  };\n};\n\nexport const fetchCardTasks = boardId => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserTasks = userId => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .where('assignedTo', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addTask = ({ taskId, taskData }) => {\n  return {\n    type: types.ADD_TASK,\n    taskId,\n    taskData\n  };\n};\n\nexport const deleteTask = taskId => {\n  return {\n    type: types.DELETE_TASK,\n    taskId\n  };\n};\n\nexport const updateTask = ({ taskId, taskData }) => {\n  return {\n    type: types.UPDATE_TASK,\n    taskId,\n    taskData\n  };\n};\n","export const LOAD_TASKS_BY_ID = 'LOAD_TASKS_BY_ID';\nexport const FETCH_TASKS_BY_ID = 'FETCH_TASKS_BY_ID';\nexport const UPDATE_TASKS_BY_ID = 'UPDATE_TASKS_BY_ID';\nexport const ADD_TASK = 'ADD_TASK';\nexport const UPDATE_TASK = 'UPDATE_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\n","export const getTasksById = state => {\n  const { tasksById } = state;\n  return tasksById;\n};\n\nexport const getTasksArray = (state, taskIds) => {\n  const { tasksById } = state;\n  if (!taskIds) return [];\n\n  return taskIds.map(taskId => {\n    return tasksById[taskId];\n  });\n};\n","import * as types from './types';\n\nconst tasksById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_TASKS_BY_ID: {\n      const { tasksById } = action;\n      return {\n        ...state,\n        ...tasksById\n      };\n    }\n    case types.ADD_TASK: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        [taskId]: {\n          taskId,\n          ...taskData\n        }\n      };\n    }\n    case types.DELETE_TASK: {\n      const { taskId } = action;\n      const { [taskId]: deletedTask, ...restOfTasks } = state;\n      return restOfTasks;\n    }\n    case types.UPDATE_TASK: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        [taskId]: {\n          ...state[taskId],\n          ...taskData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default tasksById;\n","import React, { Component, createRef } from 'react';\nimport './Textarea.scss';\n\nexport default class Textarea extends Component {\n  static defaultProps = {\n    isAutoHeightResizeEnabled: true\n  };\n\n  constructor(props) {\n    super(props);\n    this.textareaEl = createRef();\n  }\n\n  componentDidMount() {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n    this.autoHeightResize();\n  }\n\n  autoHeightResize = () => {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n\n    this.textareaEl.current.style.height = '0px'; // resets scroll height\n    this.textareaEl.current.style.height = `${\n      this.textareaEl.current.scrollHeight\n    }px`;\n  };\n\n  render() {\n    const {\n      className,\n      name,\n      value,\n      onChange,\n      placeholder,\n      isRequired,\n      onBlur,\n      onFocus,\n      onKeyDown,\n      onDragStart,\n      isReadOnly\n    } = this.props;\n    return (\n      <textarea\n        className={`textarea ${className}`}\n        id={name}\n        name={name}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={isRequired}\n        onBlur={onBlur}\n        onInput={this.autoHeightResize}\n        ref={this.textareaEl}\n        onFocus={onFocus}\n        onKeyDown={onKeyDown}\n        onDragStart={onDragStart}\n        readOnly={isReadOnly}\n      />\n    );\n  }\n}\n","export const BACKSPACE = 'Backspace';\nexport const ENTER = 'Enter';\nexport const TAB = 'Tab';\nexport const ARROW_DOWN = 'ArrowDown';\nexport const ARROW_UP = 'ArrowUp';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon } from '../Icon';\nimport { withAuthorization } from '../Session';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport * as keys from '../../constants/keys';\nimport './CardComposer.scss';\n\nconst INITIAL_STATE = {\n  cardTitle: '',\n  isActive: false\n};\n\nclass CardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ cardTitle: '' });\n  };\n\n  onSubmit = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { cardTitle } = this.state;\n    const { boardId } = this.props.current;\n    const { listId } = this.props;\n    this.props.firebase.addCard({ boardId, listId, cardTitle });\n    this.resetForm();\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onBlur = e => {\n    if (e.target.value !== '') return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const { cardTitle, isActive } = this.state;\n\n    return (\n      <div\n        className={`card-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"card-composer__form\" onSubmit={this.onSubmit}>\n          <Textarea\n            onChange={this.onChange}\n            value={cardTitle}\n            placeholder={isActive ? 'Enter card title...' : 'Add a card'}\n            isRequired\n            name=\"cardTitle\"\n            className=\"card-composer__textarea\"\n            isAutoHeightResizeEnabled={false}\n            onKeyDown={this.onSubmit}\n          />\n          {isActive && (\n            <div className=\"card-composer__footer\">\n              <Button\n                className=\"card-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add Card\n              </Button>\n              <Button\n                className=\"card-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardComposer)\n);\n","import React from 'react';\nimport './Menu.scss';\n\nconst Menu = ({ children, onClick, className = '', menuRef }) => {\n  return (\n    <ul className={`menu ${className}`} onClick={onClick} ref={menuRef}>\n      {children}\n    </ul>\n  );\n};\n\nexport default Menu;\n","import React from 'react';\nimport './Menu.scss';\n\nconst MenuItem = ({ children, className = '' }) => {\n  return <li className={`menu__item ${className}`}>{children}</li>;\n};\n\nexport default MenuItem;\n","import React, { Component } from 'react';\n\nexport default class Popover extends Component {\n  state = {\n    isTouchEnabled: false\n  };\n\n  componentDidMount() {\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick, false);\n  }\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  handleOutsideClick = e => {\n    const { onOutsideClick } = this.props;\n    onOutsideClick(e.target);\n  };\n\n  handleTouch = () => {\n    this.setState({\n      isTouchEnabled: true\n    });\n    // remove touch handler to prevent unnecessary refires\n    document.removeEventListener('touchstart', this.handleTouch);\n    // remove outside click handler from click events\n    document.removeEventListener('click', this.handleOutsideClick);\n    // reattach outside click handler to touchstart events\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  render() {\n    const { className, onClick, style, children } = this.props;\n    return (\n      <div className={`popover ${className}`} onClick={onClick} style={style}>\n        {children}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from '../Button';\nimport Popover from './Popover';\nimport './Popover.scss';\n\nexport default class PopoverWrapper extends Component {\n  state = {\n    isOpen: false\n  };\n\n  static defaultProps = {\n    wrapperClass: '',\n    popoverClass: '',\n    buttonProps: {},\n    align: 'left',\n    anchorEl: null\n  };\n\n  handleOutsideClick = target => {\n    if (this.componentEl && !this.componentEl.contains(target)) {\n      this.setState({\n        isOpen: false\n      });\n    }\n  };\n\n  toggleOpen = () => {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  };\n\n  render() {\n    const {\n      children,\n      alignInner,\n      alignOuter,\n      buttonProps,\n      wrapperClass,\n      popoverClass,\n      anchorEl\n    } = this.props;\n    const { isOpen } = this.state;\n\n    let popoverWrapperStyle = null;\n    \n    if (anchorEl) {\n      const { offsetTop, offsetLeft } = anchorEl;\n      popoverWrapperStyle = {\n        position: 'absolute',\n        top: offsetTop,\n        [alignOuter]: offsetLeft\n      };\n    }\n\n    return (\n      <div\n        className={`popover-wrapper ${isOpen ? 'is-active' : ''} ${wrapperClass}`}\n        ref={el => (this.componentEl = el)}\n        style={popoverWrapperStyle}\n      >\n        <Button type=\"button\" onClick={this.toggleOpen} {...buttonProps} />\n        {isOpen && (\n          <Popover\n            className={`align-${alignInner} ${popoverClass}`}\n            onClick={this.toggleOpen}\n            onOutsideClick={this.handleOutsideClick}\n          >\n            {children}\n          </Popover>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport './Card.scss';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { PopoverWrapper } from '../Popover';\nimport { Menu, MenuItem } from '../Menu';\n\nexport default class Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleCardClick = e => {\n    if (e.target.matches('button') || e.target.matches('a')) return;\n    const { cardId, onCardClick } = this.props;\n    onCardClick(cardId);\n  };\n\n  render() {\n    const { cardTitle, cardId, cardIndex } = this.props;\n    return (\n      <Draggable draggableId={cardId} index={cardIndex}>\n        {provided => (\n            <div\n              className=\"card\"\n              onClick={this.handleCardClick}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              ref={provided.innerRef}\n            >\n              <div className=\"card__header\" ref={el => (this.headerEl = el)}>\n                <div className=\"card__tags\" />\n                <h3 className=\"card__title\">{cardTitle}</h3>\n              </div>\n              <div className=\"card__footer\">\n                <div className=\"card__labels\" />\n              </div>\n            </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { Card } from '../Card';\n\nexport default class Cards extends Component {\n  static propTypes = {\n    listId: PropTypes.string.isRequired\n  };\n\n  /*\n\n  shouldComponentUpdate(nextProps) {\n    if (this.props.cards === nextProps.cards) {\n      return false;\n    }\n    return true;\n  }\n*/\n  componentDidUpdate(prevProps) {\n    if (this.props.cards.length > prevProps.cards.length) {\n      this.scrollToBottom();\n    }\n  }\n\n  scrollToBottom = () => {\n    this.listEnd.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  render() {\n    const { listId, cards, style, onCardClick, onCardDelete } = this.props;\n\n    return (\n      <Droppable droppableId={listId} type={droppableTypes.CARD}>\n        {(provided, snapshot) => (\n          <div\n            className=\"list__content\"\n            ref={provided.innerRef}\n            style={{\n              ...style,\n              minHeight: snapshot.isDraggingOver ? 80 : 16\n            }}\n            {...provided.droppableProps}\n          >\n            {cards.map((card, cardIndex) => {\n              const { cardId, cardTitle } = card;\n              return (\n                <Card\n                  key={cardId}\n                  cardTitle={cardTitle}\n                  cardId={cardId}\n                  cardIndex={cardIndex}\n                  listId={listId}\n                  onCardClick={onCardClick}\n                  onCardDelete={onCardDelete}\n                />\n              );\n            })}\n            {provided.placeholder}\n            <div\n              style={{ float: 'left', clear: 'both' }}\n              ref={el => (this.listEnd = el)}\n            />\n          </div>\n        )}\n      </Droppable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { CardComposer } from '../CardComposer';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\nimport { Input } from '../Input';\nimport Cards from './Cards';\nimport './List.scss';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listTitle: this.props.listTitle\n    };\n  }\n\n  handleListDelete = e => {\n    e.preventDefault();\n    const { listId, boardId, firebase } = this.props;\n    firebase.deleteList({ listId, boardId });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onBlur = e => {\n    const { listTitle, listId, firebase } = this.props;\n    const { listTitle: newListTitle } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newListTitle !== listTitle) {\n      firebase.updateList(listId, {\n        listTitle: newListTitle\n      });\n      console.log('updated!');\n    }\n  };\n\n  render() {\n    const {\n      cards,\n      onCardClick,\n      listId,\n      listIndex,\n      isFetchingCards\n    } = this.props;\n    if (isFetchingCards) return null;\n\n    const { listTitle, viewportHeight } = this.state;\n\n    return (\n      <Draggable draggableId={listId} index={listIndex}>\n        {provided => (\n          <>\n            <section\n              className=\"list\"\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <header\n                className=\"list__header\"\n                ref={el => (this.listHeaderEl = el)}\n              >\n                <Input\n                  className=\"list__input--title\"\n                  name=\"listTitle\"\n                  type=\"text\"\n                  value={listTitle}\n                  onChange={this.onChange}\n                  required\n                  hideLabel\n                  onBlur={this.onBlur}\n                />\n                <PopoverWrapper\n                  wrapperClass=\"list__popover-wrapper\"\n                  popoverClass=\"list__popover\"\n                  alignInner=\"left\"\n                  buttonProps={{\n                    size: 'medium',\n                    iconOnly: true,\n                    className: 'list__btn--more-actions',\n                    children: <Icon name=\"more-vertical\" />\n                  }}\n                >\n                  <Menu>\n                    <MenuItem>\n                      <a href=\"\" onClick={this.handleListDelete}>\n                        Delete\n                      </a>\n                    </MenuItem>\n                  </Menu>\n                </PopoverWrapper>\n              </header>\n              <Cards\n                cards={cards}\n                listId={listId}\n                onCardClick={onCardClick}\n                onCardDelete={this.handleCardDelete}\n              />\n              {provided.placeholder}\n              <CardComposer listId={listId} />\n            </section>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    cards: cardSelectors.getCardsArray(state, ownProps)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(List)\n);\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadCommentsById = commentsById => {\n  return {\n    type: types.LOAD_COMMENTS_BY_ID,\n    commentsById\n  };\n};\n\nexport const fetchCommentsById = () => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateCommentsById = comment => {\n  return {\n    type: types.UPDATE_COMMENTS_BY_ID,\n    comment\n  };\n};\n\nexport const fetchCardComments = cardId => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .where('cardId', '==', cardId)\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserComments = userId => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .where('to', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addComment = ({ commentId, commentData }) => {\n  return {\n    type: types.ADD_COMMENT,\n    commentId,\n    commentData\n  };\n};\n\nexport const deleteComment = commentId => {\n  return {\n    type: types.DELETE_COMMENT,\n    commentId\n  };\n};\n\nexport const updateComment = ({ commentId, commentData }) => {\n  return {\n    type: types.UPDATE_COMMENT,\n    commentId,\n    commentData\n  };\n};\n","export const LOAD_COMMENTS_BY_ID = 'LOAD_COMMENTS_BY_ID';\nexport const FETCH_COMMENTS_BY_ID = 'FETCH_COMMENTS_BY_ID';\nexport const UPDATE_COMMENTS_BY_ID = 'UPDATE_COMMENTS_BY_ID';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const UPDATE_COMMENT = 'UPDATE_COMMENT';\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\n","export const getCommentsById = state => {\n  const { commentsById } = state;\n  return commentsById;\n};\n\nexport const getCommentsArray = (state, commentIds) => {\n  const { commentsById } = state;\n  if (!commentIds) return [];\n\n  return commentIds.map(commentId => {\n    return commentsById[commentId];\n  });\n};\n","import * as types from './types';\n\nconst commentsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_COMMENTS_BY_ID: {\n      const { commentsById } = action;\n      return {\n        ...state,\n        ...commentsById\n      };\n    }\n    case types.ADD_COMMENT: {\n      const { commentId, commentData } = action;\n      return {\n        ...state,\n        [commentId]: {\n          commentId,\n          ...commentData\n        }\n      };\n    }\n    case types.DELETE_COMMENT: {\n      const { commentId } = action;\n      const { [commentId]: deletedComment, ...restOfComments } = state;\n      return restOfComments;\n    }\n    case types.UPDATE_COMMENT: {\n      const { commentId, commentData } = action;\n      return {\n        ...state,\n        [commentId]: {\n          ...state[commentId],\n          ...commentData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default commentsById;\n","import React from 'react';\nimport './Toolbar.scss';\n\nconst Toolbar = ({ className, children, ...props }) => (\n  <div className={`toolbar ${className}`} {...props}>\n    {children}\n  </div>\n);\n\nToolbar.defaultProps = {\n  className: ''\n};\n\nexport default Toolbar;\n","import React, { Component } from 'react';\nimport './Avatar.scss';\n\nexport default class Avatar extends Component {\n  static defaultProps = {\n    imgSrc: null,\n    classes: {\n      avatar: '',\n      img: '',\n      placeholder: ''\n    },\n    size: 'md',\n    variant: 'circle'\n  };\n\n  getUserInitials = fullName => {\n    return fullName\n      .split(' ')\n      .map(name => name.charAt(0))\n      .join('')\n      .toUpperCase();\n  };\n\n  render() {\n    const {\n      imgSrc,\n      imgProps,\n      classes,\n      fullName,\n      variant,\n      color,\n      size\n    } = this.props;\n    return (\n      <div\n        className={`avatar avatar--${size} avatar--${variant} ${\n          classes.avatar\n        }`}\n      >\n        {imgSrc !== null ? (\n          <img\n            src={imgSrc}\n            alt={fullName}\n            className={`avatar__img ${classes.img}`}\n            {...imgProps}\n          />\n        ) : (\n          <div\n            className={`avatar__placeholder ${classes.placeholder}`}\n            style={{ backgroundColor: color }}\n          >\n            {this.getUserInitials(fullName)}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Input } from '../Input';\nimport { Avatar } from '../Avatar';\nimport { Icon } from '../Icon';\nimport * as keys from '../../constants/keys';\nimport './MemberSearch.scss';\n\nexport default class MemberSearch extends Component {\n  state = {\n    query: '',\n    isActive: false,\n    isTouchEnabled: false,\n    selectedMember: '',\n    selectedIndex: null,\n    filteredList: this.props.users\n  };\n\n  componentDidMount() {\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick, false);\n  }\n\n  handleOutsideClick = e => {\n    if (!this.memberSearchEl.contains(e.target)) {\n      this.setState({\n        isActive: false\n      });\n    }\n  };\n\n  handleTouch = () => {\n    this.setState({\n      isTouchEnabled: true\n    });\n    // remove touch handler to prevent unnecessary refires\n    document.removeEventListener('touchstart', this.handleTouch);\n    // remove outside click handler from click events\n    document.removeEventListener('click', this.handleOutsideClick);\n    // reattach outside click handler to touchstart events\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  matchUser = (user, query) => {\n    const { name, email, username } = user;\n    const regExp = new RegExp(query, 'i');\n    return regExp.test(name) || regExp.test(email) || regExp.test(username);\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({\n      query: '',\n      isActive: false,\n      isTouchEnabled: false,\n      selectedMember: '',\n      selectedIndex: null,\n      filteredList: this.props.users\n    });\n  };\n\n  onChange = e => {\n    const { users } = this.props;\n    const { selectedMember, selectedIndex } = this.state;\n    const query = e.target.value;\n    const filteredList = users.filter(user => this.matchUser(user, query));\n    const newIndex = filteredList.indexOf(selectedMember);\n    const persistSelectedMember = newIndex !== -1;\n\n    this.setState({\n      selectedMember: persistSelectedMember\n        ? selectedMember\n        : filteredList[0].userId || '',\n      selectedIndex: persistSelectedMember ? newIndex : 0,\n      query,\n      filteredList\n    });\n  };\n\n  onKeyDown = e => {\n    if (\n      e.key !== keys.TAB &&\n      e.key !== keys.ARROW_DOWN &&\n      e.key !== keys.ARROW_UP &&\n      e.key !== keys.ENTER\n    )\n      return;\n\n    const { filteredList, selectedIndex, selectedMember } = this.state;\n    const { onMemberClick } = this.props;\n    const nextIndex =\n      selectedIndex === filteredList.length - 1 ? 0 : selectedIndex + 1;\n    const prevIndex =\n      selectedIndex === 0 ? filteredList.length - 1 : selectedIndex - 1;\n\n    // eslint-disable-next-line default-case\n    switch (e.key) {\n      case keys.ARROW_DOWN:\n      // eslint-disable-next-line no-fallthrough\n      case keys.TAB: {\n        this.setState({\n          selectedMember: filteredList[nextIndex].userId,\n          selectedIndex: nextIndex\n        });\n        break;\n      }\n      case keys.ARROW_UP: {\n        this.setState({\n          selectedMember: filteredList[prevIndex].userId,\n          selectedIndex: prevIndex\n        });\n        break;\n      }\n      case keys.ENTER: {\n        if (selectedMember === '') return;\n        onMemberClick(selectedMember);\n        break;\n      }\n    }\n\n    e.preventDefault();\n  };\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  render() {\n    const { users, onMemberClick } = this.props;\n    const { query, isActive, filteredList, selectedMember } = this.state;\n\n    return (\n      <div\n        className=\"member-search__wrapper\"\n        ref={el => (this.memberSearchEl = el)}\n      >\n        <div className=\"card-editor__section-icon\">\n          <Icon name=\"user-plus\" />\n        </div>\n        <Input\n          name=\"query\"\n          className=\"card-editor__member-search\"\n          onChange={this.onChange}\n          value={query}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          type=\"text\"\n          autoComplete=\"off\"\n          hideLabel\n          placeholder=\"Add a member\"\n          inputRef={el => (this.inputEl = el)}\n          onKeyDown={this.onKeyDown}\n        />\n        {isActive && (\n          <ul className=\"member-search__list\">\n            {filteredList.map((user, i) => {\n              const { name, photoURL, email, username, userId } = user;\n              return (\n                <li\n                  className={`member-search__item ${\n                    selectedMember === userId ? 'is-selected' : ''\n                  }`}\n                  onClick={() => onMemberClick(userId)}\n                  key={userId}\n                  id={userId}\n                >\n                  <Avatar\n                    classes={{\n                      avatar: 'member-search__avatar--sm',\n                      placeholder: 'member-search__avatar-placeholder--sm'\n                    }}\n                    fullName={name}\n                    size=\"sm\"\n                    variant=\"circle\"\n                    imgSrc={photoURL}\n                  />\n                  <span className=\"member-search__info member-search__name\">\n                    {name}\n                  </span>\n                  <span className=\"member-search__info member-search__username\">\n                    {username}\n                  </span>\n                  <span className=\"member-search__info member-search__email\">\n                    {email}\n                  </span>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\n\nconst CardEditorMoreActions = ({ onMenuClick }) => (\n  <PopoverWrapper\n    wrapperClass=\"card-editor__popover-wrapper\"\n    popoverClass=\"card-editor__popover\"\n    alignOuter=\"right\"\n    alignInner=\"right\"\n    buttonProps={{\n      size: 'medium',\n      iconOnly: true,\n      className: 'card-editor__toolbar-btn',\n      children: <Icon name=\"more-horizontal\" />\n    }}\n  >\n    <Menu onClick={onMenuClick}>\n      <MenuItem>\n        <a href=\"\" data-action=\"delete\">\n          Delete card\n        </a>\n      </MenuItem>\n    </Menu>\n  </PopoverWrapper>\n);\n\nexport default CardEditorMoreActions;\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport './Checkbox.scss';\n\nconst Checkbox = ({\n  value,\n  id,\n  name,\n  isChecked,\n  onClick,\n  onChange,\n  className,\n  labelClass,\n  ...props\n}) => {\n  return (\n    <label\n      htmlFor={id}\n      onClick={onClick}\n      className={`checkbox__label ${labelClass}`}\n    >\n      {isChecked && <Icon name=\"check\" />}\n      <input\n        type=\"checkbox\"\n        id={id}\n        value={value}\n        name={name}\n        checked={isChecked}\n        className={`checkbox ${className}`}\n        onChange={onChange}\n        {...props}\n      />\n    </label>\n  );\n};\n\nCheckbox.defaultProps = {\n  className: '',\n  labelClass: ''\n};\n\nexport default Checkbox;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Checkbox } from '../Checkbox';\nimport { Textarea } from '../Textarea';\n\nconst appRoot = document.getElementById('root');\n\nexport default class CardEditorTask extends Component {\n  constructor(props) {\n    super(props);\n    this.portal = document.createElement('div');\n  }\n\n  componentDidMount() {\n    appRoot.appendChild(this.portal);\n  }\n\n  onDragStart = e => {\n    console.log('dragstart');\n    this.setState({\n      isReadOnly: true\n    });\n  };\n\n  componentWillUnmount() {\n    appRoot.removeChild(this.portal);\n  }\n\n  render() {\n    const {\n      taskId,\n      index,\n      text,\n      isCompleted,\n      toggleCompleted,\n      onChange,\n      onBlur,\n      onKeyDown\n    } = this.props;\n\n    return (\n      <Draggable draggableId={taskId} index={index}>\n        {(provided, snapshot) => {\n          const inner = (\n            <li\n              className=\"card-editor__task\"\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <Checkbox\n                id={`cb-${taskId}`}\n                value={taskId}\n                name={taskId}\n                isChecked={isCompleted}\n                onChange={toggleCompleted}\n                className=\"card-editor__checkbox\"\n                labelClass=\"card-editor__checkbox-label\"\n              />\n              <Textarea\n                value={text}\n                onChange={onChange}\n                onBlur={onBlur}\n                name={taskId}\n                className=\"card-editor__textarea--task\"\n                onKeyDown={onKeyDown}\n                onDragStart={this.onDragStart}\n              />\n            </li>\n          );\n          return snapshot.isDragging\n            ? ReactDOM.createPortal(inner, this.portal)\n            : inner;\n        }}\n      </Draggable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/users';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { commentActions, commentSelectors } from '../../ducks/comments';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { Avatar } from '../Avatar';\nimport './CardEditorComment.scss';\n\nclass CardEditorComment extends Component {\n  state = {\n    secondsElapsed: 0\n  };\n\n  componentDidMount() {\n    const { createdAt } = this.props.comment;\n    const secondsSinceCreation =\n      Math.floor(Date.now() / 1000) -\n      Math.floor(createdAt.toDate().getTime() / 1000);\n\n    this.setState({\n      secondsElapsed: secondsSinceCreation\n    });\n\n    this.interval = setInterval(this.tick, 1000);\n  }\n\n  tick = () => {\n    this.setState(prevState => ({\n      secondsElapsed: prevState.secondsElapsed + 1\n    }));\n  };\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  handleLikeClick = () => {\n    const { handleLike, comment } = this.props;\n    const { commentId } = comment;\n    handleLike(commentId);\n  };\n\n  render() {\n    const { user, comment } = this.props;\n    const { secondsElapsed } = this.state;\n    const { name, photoURL } = user;\n    const {\n      text,\n      createdAt,\n      lastModifiedAt,\n      likes,\n      to,\n      from,\n      isPinned\n    } = comment;\n    if (!createdAt) return null;\n    const date = new Date();\n    const dateCreatedFull = createdAt.toDate();\n    const timeCreated = dateCreatedFull.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true\n    });\n    const dateCreated = dateCreatedFull.toDateString();\n    const isToday = date.toDateString() === dateCreated;\n    const isYesterday = date.setDate(date.getDate() - 1);\n\n    return (\n      <div\n        className={`card-editor__comment-wrapper ${\n          isPinned ? 'is-pinned' : ''\n        }`}\n      >\n        <Avatar\n          classes={{\n            avatar: 'card-editor__avatar',\n            placeholder: 'card-editor__avatar-placeholder'\n          }}\n          fullName={name}\n          size=\"sm\"\n          variant=\"circle\"\n          imgSrc={photoURL}\n        />\n        <div className=\"card-editor__comment\">\n          <div className=\"card-editor__comment-header\">\n            <div className=\"card-editor__comment-details\">\n              <span className=\"card-editor__full-name\">{name}</span>\n              <span className=\"card-editor__timestamp\">\n                {secondsElapsed < 60\n                  ? 'Just now'\n                  : secondsElapsed < 120 // = up until 2 minutes\n                  ? '1 minute ago'\n                  : secondsElapsed < 3600 // up until 1st hour\n                  ? `${Math.floor(secondsElapsed / 60)} minutes ago`\n                  : secondsElapsed < 21600 // up until 6th hour\n                  ? `${Math.floor(secondsElapsed / 3600)} hours ago`\n                  : isToday\n                  ? `Today at ${timeCreated}`\n                  : isYesterday\n                  ? `Yesterday at ${timeCreated}`\n                  : `${dateCreated} ${timeCreated}`}\n              </span>\n            </div>\n            <Button\n              className=\"card-editor__likes\"\n              onClick={this.handleLikeClick}\n              size=\"sm\"\n            >\n              <span className=\"card-editor__likes-counter\">\n                {likes.length > 0 ? likes.length : ''}\n              </span>\n              <Icon name=\"thumbs-up\" />\n            </Button>\n          </div>\n          <div className=\"card-editor__comment-body\">{text}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state, ownProps.comment.from),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateCardsById: card => dispatch(cardActions.updateCardsById(card)),\n    fetchCardComments: cardId =>\n      dispatch(commentActions.fetchCardComments(cardId)),\n    addComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.addComment({ commentId, commentData })),\n    deleteComment: commentId =>\n      dispatch(commentActions.deleteComment(commentId)),\n    updateComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.updateComment({ commentId, commentData }))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardEditorComment)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { userSelectors } from '../../ducks/users';\nimport { commentActions, commentSelectors } from '../../ducks/comments';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { Modal } from '../Modal';\nimport { Toolbar } from '../Toolbar';\nimport CardEditorAssignUser from './CardEditorAssignUser';\nimport { MemberSearch } from '../MemberSearch';\nimport CardEditorMoreActions from './CardEditorMoreActions';\nimport * as keys from '../../constants/keys';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport CardEditorTask from './CardEditorTask';\nimport CardEditorComment from './CardEditorComment';\nimport './CardEditor.scss';\n\n\nclass CardEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching:\n        this.props.card.commentIds !== undefined &&\n        this.props.card.commentIds.length > 0,\n      cardTitle: this.props.card.cardTitle,\n      cardDescription: this.props.card.cardDescription,\n      newTask: '',\n      cardTasks: this.props.tasksArray.reduce((tasks, task) => {\n        const { taskId, text, isCompleted } = task;\n        tasks[taskId] = {\n          text,\n          isCompleted\n        };\n        return tasks;\n      }, {}),\n      newComment: '',\n      currentFocus: null,\n      taskIds: this.props.card.taskIds\n    };\n  }\n\n  componentDidMount() {\n    const {\n      card,\n      firebase,\n      fetchCardComments,\n      addComment,\n      deleteComment,\n      updateComment\n    } = this.props;\n\n    const { cardId, commentIds } = card;\n\n    if (commentIds && commentIds.length > 0) {\n      fetchCardComments(cardId).then(() => {\n        this.setState({\n          isFetching: false\n        });\n      });\n    }\n\n    this.commentObserver = firebase.db\n      .collection('comments')\n      .where('cardId', '==', cardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const commentId = change.doc.id;\n          const commentData = change.doc.data();\n          if (change.type === 'added') {\n            addComment({ commentId, commentData });\n          }\n          if (change.type === 'modified') {\n            updateComment({ commentId, commentData });\n          }\n          if (change.type === 'removed') {\n            deleteComment(commentId);\n          }\n        });\n      });\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if ('taskIds' in props.card === false) return null;\n    if (props.card.taskIds.length !== state.taskIds.length) {\n      return {\n        cardTasks: props.tasksArray.reduce((tasks, task) => {\n          const { taskId, text, isCompleted } = task;\n          tasks[taskId] = {\n            text,\n            isCompleted\n          };\n          return tasks;\n        }, {}),\n        taskIds: props.card.taskIds\n      };\n    }\n    return null;\n  }\n\n  updateCardTasks = () => {\n    const { tasksArray } = this.props;\n    this.setState({\n      cardTasks: tasksArray.reduce((tasks, task) => {\n        const { taskId, text, isCompleted } = task;\n        tasks[taskId] = {\n          text,\n          isCompleted\n        };\n        return tasks;\n      }, {})\n    });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  deleteCard = () => {\n    const { card, firebase, handleCardEditorClose } = this.props;\n    const { cardId, listId } = card;\n    firebase.deleteCard({ cardId, listId });\n    handleCardEditorClose();\n  };\n\n  onBlur = e => {\n    const { card, firebase } = this.props;\n    const cardKey = e.target.name;\n    const { [cardKey]: updatedValue } = this.state;\n\n    // When field loses focus, update card if change is detected\n\n    if (updatedValue !== card[cardKey]) {\n      const { cardId } = card;\n      firebase.updateCard(cardId, {\n        [cardKey]: updatedValue\n      });\n      console.log('updated!');\n    }\n\n    this.setState({\n      currentFocus: null\n    });\n  };\n\n  addComment = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { userId, firebase, card } = this.props;\n    const { cardId, boardId } = card;\n    const { newComment: text } = this.state;\n    firebase.addComment({ userId, text, cardId, boardId });\n    this.resetForm('newComment');\n    e.preventDefault();\n  };\n\n  resetForm = key => {\n    this.setState({\n      [key]: ''\n    });\n  };\n\n  addTask = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { userId, firebase, card } = this.props;\n    const { cardId, boardId } = card;\n    const { newTask: text } = this.state;\n    firebase.addTask({ userId, text, cardId, boardId });\n    this.resetForm('newTask');\n    e.preventDefault();\n  };\n\n  onFocus = e => {\n    this.setState({\n      currentFocus: e.target.name\n    });\n  };\n\n  handleModalClick = e => {\n    const { currentFocus } = this.state;\n    if (\n      (currentFocus === 'newComment' &&\n        !this.commentFormEl.contains(e.target)) ||\n      (currentFocus === 'newTask' && !this.newTaskFormEl.contains(e.target))\n    ) {\n      this.setState({\n        currentFocus: null\n      });\n    }\n  };\n\n  handleMoreActions = e => {\n    if (!e.target.matches('a')) return;\n    const { action } = e.target.dataset;\n    switch (action) {\n      case 'delete':\n        this.deleteCard();\n        break;\n    }\n    e.preventDefault(); // prevents page reload\n  };\n\n  onTaskChange = e => {\n    const { cardTasks } = this.state;\n    this.setState({\n      cardTasks: {\n        ...cardTasks,\n        [e.target.name]: {\n          ...cardTasks[e.target.name],\n          text: e.target.value\n        }\n      }\n    });\n  };\n\n  handleCheckboxChange = e => {\n    const taskId = e.target.name;\n    this.toggleTaskCompleted(taskId);\n  };\n\n  toggleTaskCompleted = taskId => {\n    const { isCompleted } = this.state.cardTasks[taskId];\n    this.setState(prevState => ({\n      cardTasks: {\n        ...prevState.cardTasks,\n        [taskId]: {\n          ...prevState.cardTasks[taskId],\n          isCompleted: !prevState.cardTasks[taskId].isCompleted\n        }\n      }\n    }));\n    const { firebase } = this.props;\n    firebase.updateTask(taskId, { isCompleted: !isCompleted });\n  };\n\n  updateTaskText = e => {\n    const taskId = e.target.name;\n    const { cardTasks } = this.state;\n    const { text } = cardTasks[taskId];\n    const { firebase } = this.props;\n    firebase.updateTask(taskId, { text });\n  };\n\n  deleteTask = e => {\n    if (e.target.value !== '' || e.key !== keys.BACKSPACE) return;\n    const { card, firebase } = this.props;\n    const { cardId } = card;\n    const taskId = e.target.name;\n    firebase.deleteTask({ taskId, cardId });\n  };\n\n  moveTask = ({ destination, draggableId, source }) => {\n    if (!destination) return;\n    if (destination.index === source.index) return;\n    const { firebase } = this.props;\n    const { taskIds } = this.state;\n    const updatedTaskIds = [...taskIds];\n    updatedTaskIds.splice(source.index, 1);\n    updatedTaskIds.splice(destination.index, 0, draggableId);\n    this.setState({\n      taskIds: updatedTaskIds\n    });\n    firebase.updateCard(source.droppableId, {\n      taskIds: updatedTaskIds\n    });\n  };\n\n  handleCommentLike = commentId => {\n    const { firebase, userId, commentsById } = this.props;\n    const { likes } = commentsById[commentId];\n\n    if (likes.indexOf(userId) === -1) {\n      firebase.updateComment(commentId, {\n        likes: firebase.addToArray(userId)\n      });\n    } else {\n      firebase.updateComment(commentId, {\n        likes: firebase.removeFromArray(userId)\n      });\n    }\n  };\n\n  assignMember = userId => {\n    console.log(userId);\n  };\n\n  componentWillUnmount() {\n    this.commentObserver();\n  }\n\n  render() {\n    const {\n      handleCardEditorClose,\n      card,\n      userId,\n      commentsArray,\n      usersArray\n    } = this.props;\n    const { cardId, commentIds } = card;\n    const {\n      cardTitle,\n      cardDescription,\n      newComment,\n      currentFocus,\n      newTask,\n      cardTasks,\n      taskIds,\n      isFetching\n    } = this.state;\n    const hasTasks = taskIds !== undefined && taskIds.length > 0;\n    const hasComments = commentIds !== undefined && commentIds.length > 0;\n    const isNewCommentInvalid = newComment === '';\n    const isNewTaskInvalid = newTask === '';\n    const commentFormIsFocused = currentFocus === 'newComment';\n\n    if (isFetching) return null;\n\n    return (\n      <Modal\n        onModalClose={handleCardEditorClose}\n        className=\"card-editor\"\n        onModalClick={this.handleModalClick}\n        size=\"lg\"\n        id=\"cardEditor\"\n      >\n        <Toolbar className=\"card-editor__toolbar\">\n          <CardEditorMoreActions onMenuClick={this.handleMoreActions} />\n        </Toolbar>\n        <form\n          name=\"editCardForm\"\n          onFocus={this.onFocus}\n          className=\"card-editor__edit-card-form\"\n        >\n          <Textarea\n            className=\"card-editor__textarea--title\"\n            name=\"cardTitle\"\n            value={cardTitle}\n            onChange={this.onChange}\n            required\n            onBlur={this.onBlur}\n            onFocus={this.onFocus}\n          />\n          <MemberSearch users={usersArray} onMemberClick={this.assignMember} />\n          <div\n            className={`card-editor__section ${\n              currentFocus === 'cardDescription' ? 'is-focused' : ''\n            }`}\n          >\n            <div className=\"card-editor__section-icon\">\n              <Icon name=\"edit-3\" />\n            </div>\n            <Textarea\n              className=\"card-editor__textarea card-editor__textarea--description\"\n              name=\"cardDescription\"\n              value={cardDescription}\n              onChange={this.onChange}\n              placeholder=\"Add a description\"\n              onBlur={this.onBlur}\n              onFocus={this.onFocus}\n            />\n          </div>\n        </form>\n        <div\n          className={`card-editor__section ${\n            currentFocus === 'newTask' ? 'is-focused' : ''\n          }`}\n        >\n          <hr className=\"card-editor__hr\" />\n          {hasTasks && (\n            <DragDropContext onDragEnd={this.moveTask}>\n              <Droppable droppableId={cardId} type={droppableTypes.TASK}>\n                {provided => (\n                  <ul\n                    className=\"card-editor__tasks\"\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                  >\n                    {taskIds.map((taskId, index) => {\n                      return (\n                        <CardEditorTask\n                          taskId={taskId}\n                          index={index}\n                          text={cardTasks[taskId].text}\n                          isCompleted={cardTasks[taskId].isCompleted}\n                          toggleCompleted={this.handleCheckboxChange}\n                          onChange={this.onTaskChange}\n                          onBlur={this.updateTaskText}\n                          onKeyDown={this.deleteTask}\n                          key={taskId}\n                        />\n                      );\n                    })}\n                    {provided.placeholder}\n                  </ul>\n                )}\n              </Droppable>\n            </DragDropContext>\n          )}\n          <div className=\"card-editor__section-icon\">\n            <Icon name=\"check-square\" />\n          </div>\n          <form\n            name=\"newTaskForm\"\n            className={`card-editor__new-task-form ${\n              currentFocus === 'newTask' ? 'is-focused' : ''\n            }`}\n            ref={el => (this.newTaskFormEl = el)}\n            onSubmit={this.addTask}\n          >\n            <Textarea\n              className=\"card-editor__textarea card-editor__textarea--new-task\"\n              name=\"newTask\"\n              value={newTask}\n              onChange={this.onChange}\n              placeholder=\"Add a task\"\n              onFocus={this.onFocus}\n              onKeyDown={this.addTask}\n            />\n            {currentFocus === 'newTask' && (\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isNewTaskInvalid}\n                onClick={this.addTask}\n                className=\"card-editor__btn--add-task\"\n              >\n                Add task\n              </Button>\n            )}\n          </form>\n        </div>\n        <div\n          className={`card-editor__section ${\n            commentFormIsFocused ? 'is-focused' : ''\n          }`}\n        >\n          {hasComments && (\n            <div className=\"card-editor__comments\">\n              {commentsArray.map(comment => {\n                const { commentId } = comment;\n                return <CardEditorComment key={commentId} comment={comment} handleLike={this.handleCommentLike} />;\n              })}\n            </div>\n          )}\n          <hr className=\"card-editor__hr\" />\n          <div className=\"card-editor__section-icon\">\n            <Icon name=\"message-circle\" />\n          </div>\n          <form\n            name=\"commentForm\"\n            className={`card-editor__comment-form ${\n              commentFormIsFocused ? 'is-focused' : ''\n            }`}\n            ref={el => (this.commentFormEl = el)}\n            onSubmit={this.addComment}\n          >\n            <Textarea\n              className=\"card-editor__textarea card-editor__textarea--comment\"\n              name=\"newComment\"\n              value={newComment}\n              onChange={this.onChange}\n              placeholder=\"Write a comment...\"\n              onFocus={this.onFocus}\n              onKeyDown={this.addComment}\n            />\n            {commentFormIsFocused && (\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isNewCommentInvalid}\n                onClick={this.addComment}\n                name=\"newCommentSubmit\"\n                className=\"card-editor__btn--submit-comment\"\n              >\n                Comment\n              </Button>\n            )}\n          </form>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    userId: currentSelectors.getCurrentUserId(state),\n    tasksArray: taskSelectors.getTasksArray(state, ownProps.card.taskIds),\n    commentsArray: commentSelectors.getCommentsArray(\n      state,\n      ownProps.card.commentIds\n    ),\n    commentsById: commentSelectors.getCommentsById(state),\n    usersArray: userSelectors.getUsersArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCardComments: cardId =>\n      dispatch(commentActions.fetchCardComments(cardId)),\n    addComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.addComment({ commentId, commentData })),\n    deleteComment: commentId =>\n      dispatch(commentActions.deleteComment(commentId)),\n    updateComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.updateComment({ commentId, commentData }))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardEditor)\n);\n","\n/**\n * Checks if two arrays or objects are equal\n * @param {Array|Object} value\n * @param {Array|Object} other\n */\n\n// eslint-disable-next-line import/prefer-default-export\nexport const isEqual = (value, other) => {\n  const type = Object.prototype.toString.call(value);\n\n  // If both objects are not the same type, return false\n  if (type !== Object.prototype.toString.call(other)) return false;\n\n  const typeObj = '[object Object]';\n  const typeArr = '[object Array]';\n  // If items are neither objects nor arrays, return false\n  if (type !== typeObj && type !== typeArr) return false;\n\n  // Compare length of two items\n  const valueLen = type === typeArr ? value.length : Object.keys(value).length;\n  const otherLen = type === typeArr ? other.length : Object.keys(other).length;\n  if (valueLen !== otherLen) return false;\n\n  const compare = (item1, item2) => {\n    const typeFunc = '[object Function]';\n    const itemType = Object.prototype.toString.call(item1);\n    if (itemType !== Object.prototype.toString.call(item2)) return false;\n    if (itemType === typeObj || itemType === typeArr) {\n      return isEqual(item1, item2);\n    }\n    if (itemType === typeFunc) {\n      return item1.toString() === item2.toString();\n    }\n    return item1 === item2;\n  };\n\n  if (type === typeArr) {\n    for (let i = 0; i < valueLen; i++) {\n      if (!compare(value[i], other[i])) return false;\n    }\n  } else {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (compare(value[key], other[key]) === false) return false;\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * Delays callback execution until next browser repaint\n * Best used for `scroll` and `resize` window events\n * @param {Function} callback - The function to debounce\n */\n\nexport const windowDebouncer = callback => {\n  let request;\n\n  return (...args) => {\n    const context = this;\n\n    if (request) {\n      window.cancelAnimationFrame(request);\n    }\n\n    request = window.requestAnimationFrame(() => {\n      callback.apply(context, args);\n    });\n  };\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport * as ROUTES from '../../constants/routes';\nimport Board from './Board';\nimport { Input } from '../Input';\nimport { List } from '../List';\nimport { CardEditor } from '../CardEditor';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { utils } from '../../utils';\nimport './Board.scss';\n\nclass BoardContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: true,\n      isDragging: false,\n      isCardEditorOpen: false,\n      boardTitle: this.props.boardTitle\n    };\n  }\n\n  componentDidMount() {\n    const {\n      current,\n      fetchListsById,\n      fetchCardsById,\n      fetchCardTasks,\n      firebase,\n      updateListsById,\n      updateCardsById,\n      boardId,\n      board,\n      updateListIds,\n      addTask,\n      updateTask,\n      deleteTask,\n      selectBoard\n    } = this.props;\n\n    if (current.boardId !== boardId) {\n      selectBoard(boardId);\n    }\n\n    fetchListsById(boardId);\n    fetchCardsById(boardId);\n    fetchCardTasks(boardId).then(() => {\n      this.setState({\n        isFetching: false\n      });\n    });\n    this.boardObserver = firebase.getBoardDoc(boardId).onSnapshot(snapshot => {\n      const updatedBoard = snapshot.data();\n      if (!utils.isEqual(updatedBoard.listIds, board.listIds)) {\n        updateListIds(boardId, updatedBoard.listIds);\n      }\n    });\n    this.listObserver = firebase.db\n      .collection('lists')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const list = {\n            [change.doc.id]: change.doc.data()\n          };\n          updateListsById(list);\n        });\n      });\n    this.taskObserver = firebase.db\n      .collection('tasks')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const taskId = change.doc.id;\n          const taskData = change.doc.data();\n          if (change.type === 'added') {\n            addTask({ taskId, taskData });\n          }\n          if (change.type === 'modified') {\n            updateTask({ taskId, taskData });\n          }\n          if (change.type === 'removed') {\n            deleteTask(taskId);\n          }\n        });\n      });\n    this.cardObserver = firebase.db\n      .collection('cards')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const card = {\n            [change.doc.id]: {\n              cardId: change.doc.id,\n              ...change.doc.data()\n            }\n          };\n          updateCardsById(card);\n        });\n      });\n    console.log('mounted');\n  }\n\n  componentWillUnmount() {\n    this.boardObserver();\n    this.listObserver();\n    this.cardObserver();\n    this.taskObserver();\n  }\n\n  onDragStart = () => {\n    this.setState({\n      isDragging: true\n    });\n  };\n\n  onDragEnd = ({ destination, draggableId, source, type }) => {\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    const { firebase } = this.props;\n    if (type === droppableTypes.CARD) {\n      const { listsById } = this.props;\n      const isMovedWithinList = source.droppableId === destination.droppableId;\n      const updatedCardIds = [...listsById[destination.droppableId].cardIds];\n      if (isMovedWithinList) {\n        updatedCardIds.splice(source.index, 1);\n        updatedCardIds.splice(destination.index, 0, draggableId);\n        firebase.updateList(source.droppableId, {\n          cardIds: updatedCardIds\n        });\n      } else {\n        updatedCardIds.splice(destination.index, 0, draggableId);\n        firebase.moveCardToList({\n          cardId: draggableId,\n          origListId: source.droppableId,\n          newListId: destination.droppableId,\n          updatedCardIds\n        });\n      }\n    }\n\n    if (type === droppableTypes.LIST) {\n      const { boardsById, current, reorderLists } = this.props;\n      const { boardId } = current;\n      const updatedListIds = [...boardsById[boardId].listIds];\n      updatedListIds.splice(source.index, 1);\n      updatedListIds.splice(destination.index, 0, draggableId);\n      firebase.updateBoard(boardId, {\n        listIds: updatedListIds\n      });\n      reorderLists(boardId, updatedListIds);\n    }\n\n    this.setState({\n      isDragging: false\n    });\n  };\n\n  toggleCardEditor = () => {\n    this.setState(prevState => ({\n      isCardEditorOpen: !prevState.isCardEditorOpen\n    }));\n  };\n\n  handleCardClick = cardId => {\n    this.props.selectCard(cardId);\n    this.toggleCardEditor();\n  };\n\n  onTitleChange = e => {\n    this.setState({\n      boardTitle: e.target.value\n    });\n  };\n\n  onTitleBlur = e => {\n    const { boardTitle, boardId, firebase } = this.props;\n    const { boardTitle: newBoardTitle } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newBoardTitle !== boardTitle) {\n      firebase.updateBoard(boardId, {\n        boardTitle: newBoardTitle\n      });\n      console.log('updated!');\n    }\n  };\n\n  render() {\n    const { isFetching, isCardEditorOpen } = this.state;\n    const { current, listsArray, cardsById, boardId, board } = this.props;\n    if (isFetching) return null;\n    const { cardId } = current;\n    const { boardTitle } = board;\n    const lists = listsArray.map((list, listIndex) => {\n      const { listId, listTitle, cardIds } = list;\n      return (\n        <List\n          listId={listId}\n          key={listId}\n          listIndex={listIndex}\n          listTitle={listTitle}\n          cardIds={cardIds}\n          isFetchingCards={isFetching}\n          isDragging={this.state.isDragging}\n          onCardClick={this.handleCardClick}\n          boardId={boardId}\n        />\n      );\n    });\n\n    return (\n      <main className=\"board-container\">\n        <Input\n          className=\"board__input--title\"\n          name=\"boardTitle\"\n          type=\"text\"\n          value={boardTitle}\n          onChange={this.onTitleChange}\n          required\n          hideLabel\n          onBlur={this.onTitleBlur}\n        />\n        <DragDropContext\n          onDragEnd={this.onDragEnd}\n          onDragStart={this.onDragStart}\n        >\n          <Board boardId={boardId}>{lists}</Board>\n        </DragDropContext>\n        {isCardEditorOpen && (\n          <CardEditor\n            card={cardsById[cardId]}\n            handleCardEditorClose={this.toggleCardEditor}\n          />\n        )}\n      </main>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    boardsById: boardSelectors.getBoardsById(state),\n    current: currentSelectors.getCurrent(state),\n    listsById: listSelectors.getListsById(state),\n    listsArray: listSelectors.getListsArray(state),\n    cardsById: cardSelectors.getCardsById(state),\n    board: boardSelectors.getBoard(state, ownProps.boardId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId)),\n    selectCard: cardId => dispatch(currentActions.selectCard(cardId)),\n    fetchListsById: boardId => dispatch(listActions.fetchListsById(boardId)),\n    updateListsById: list => dispatch(listActions.updateListsById(list)),\n    fetchCardsById: boardId => dispatch(cardActions.fetchCardsById(boardId)),\n    fetchCardTasks: boardId => dispatch(taskActions.fetchCardTasks(boardId)),\n    updateCardsById: card => dispatch(cardActions.updateCardsById(card)),\n    reorderLists: (boardId, listIds) =>\n      dispatch(boardActions.reorderLists(boardId, listIds)),\n    updateListIds: (boardId, listIds) =>\n      dispatch(boardActions.updateListIds(boardId, listIds)),\n    addTask: ({ taskId, taskData }) =>\n      dispatch(taskActions.addTask({ taskId, taskData })),\n    deleteTask: taskId => dispatch(taskActions.deleteTask(taskId)),\n    updateTask: ({ taskId, taskData }) =>\n      dispatch(taskActions.updateTask({ taskId, taskData }))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardContainer)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { withAuthorization } from '../Session';\nimport * as ROUTES from '../../constants/routes';\nimport { userActions, userSelectors } from '../../ducks/users';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { BoardGridContainer } from '../BoardGrid';\nimport { BoardComposer } from '../BoardComposer';\nimport { BoardContainer } from '../Board';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport './Home.scss';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isBoardComposerOpen: false,\n      isFetching: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      firebase,\n      selectUser,\n      fetchUsersById,\n      fetchBoardsById\n    } = this.props;\n    const userId = firebase.auth.currentUser.uid;\n    selectUser(userId);\n    console.log('mounted home');\n    fetchUsersById()\n      .then(() => fetchBoardsById(userId))\n      .then(() =>\n        this.setState({\n          isFetching: false\n        })\n      );\n  }\n\n  toggleBoardComposer = () => {\n    this.setState(prevState => ({\n      isBoardComposerOpen: !prevState.isBoardComposerOpen\n    }));\n  };\n\n  createBoard = boardTitle => {\n    const { userId, firebase } = this.props;\n    firebase.addBoard({ userId, boardTitle });\n  };\n\n  render() {\n    const { isBoardComposerOpen, isFetching } = this.state;\n    if (isFetching) return null;\n    const { userId } = this.props;\n    return (\n      <>\n        {isBoardComposerOpen && (\n          <BoardComposer\n            onClose={this.toggleBoardComposer}\n            handleSubmit={this.createBoard}\n          />\n        )}\n        <Switch>\n          <Route\n            exact\n            path={ROUTES.HOME}\n            render={() => (\n              <main className=\"main\">\n                <h1>Home</h1>\n                {userId && (\n                  <BoardGridContainer\n                    userId={userId}\n                    openBoardComposer={this.toggleBoardComposer}\n                  />\n                )}\n              </main>\n            )}\n          />\n          <Route\n            path={ROUTES.BOARD}\n            render={props => (\n              <BoardContainer\n                userId={userId}\n                boardId={props.match.params.id}\n                {...props}\n              />\n            )}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentBoardId: currentSelectors.getCurrentBoardId(state),\n    userId: currentSelectors.getCurrentUserId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsersById: () => dispatch(userActions.fetchUsersById()),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    selectUser: userId => dispatch(currentActions.selectUser(userId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(HomePage)\n);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .passwordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n    const isInvalid = passwordOne === '' || passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"passwordOne\"\n          label=\"New Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          label=\"Confirm New Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Change My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React from 'react';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport { PasswordChangeForm } from '../PasswordChange';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport './Account.scss';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <main className=\"account\">\n        <h1>Account: {authUser.email}</h1>\n        <section className=\"account__section\">\n        <h2>Forgot your password?</h2>\n          <PasswordForgetForm />\n        </section>\n        <section className=\"account__section\">\n        <h2>Change your password.</h2>\n          <PasswordChangeForm />\n        </section>\n      </main>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(AccountPage);\n","import React, { Component } from 'react';\nimport { Navbar } from '../Navbar';\nimport './Header.scss';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <Navbar />\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport { Navbar } from '../Navbar';\nimport * as ROUTES from '../../constants/routes';\nimport { LandingPage } from '../Landing';\nimport { SignUpPage } from '../SignUp';\nimport { SignInPage } from '../SignIn';\nimport { PasswordForgetPage } from '../PasswordForget';\nimport { HomePage } from '../Home';\nimport { AccountPage } from '../Account';\nimport { AdminPage } from '../Admin';\nimport { withAuthentication } from '../Session';\nimport { Header } from '../Header';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Header />\n        <Switch>\n          <Route exact path={ROUTES.LANDING} component={LandingPage} />\n          <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n          <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n          <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n          <Route path={ROUTES.HOME} render={props => <HomePage {...props} />} />\n          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n          <Route path={ROUTES.ADMIN} component={AdminPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { boardsById } from '../ducks/boards';\nimport { cardsById } from '../ducks/cards';\nimport { listsById } from '../ducks/lists';\nimport { usersById } from '../ducks/users';\nimport { current } from '../ducks/current';\nimport { tasksById } from '../ducks/tasks';\nimport { commentsById } from '../ducks/comments';\n\nexport default combineReducers({\n  boardsById,\n  cardsById,\n  listsById,\n  usersById,\n  current,\n  tasksById,\n  commentsById\n});\n","import * as types from './types';\n\nconst current = (state = {}, action) => {\n  switch (action.type) {\n    case types.SELECT_USER: {\n      const { userId } = action;\n      return {\n        ...state,\n        userId\n      };\n    }\n    case types.SELECT_BOARD: {\n      const { boardId } = action;\n      return {\n        ...state,\n        boardId\n      };\n    }\n    case types.SELECT_LIST: {\n      const { listId } = action;\n      return {\n        ...state,\n        listId\n      };\n    }\n    case types.SELECT_CARD: {\n      const { cardId } = action;\n      return {\n        ...state,\n        cardId\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport { current };\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\n\nexport default history;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport 'normalize.css';\nimport './index.scss';\nimport { App } from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { FirebaseContext } from './components/Firebase';\nimport reducers from './store/reducers';\nimport firebase from './store/firebase';\nimport history from './store/history';\n\nconst store = createStore(reducers, {}, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <FirebaseContext.Provider value={firebase}>\n      <Router basename={process.env.PUBLIC_URL} history={history}>\n        <App />\n      </Router>\n    </FirebaseContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}