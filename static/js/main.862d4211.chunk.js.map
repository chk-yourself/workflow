{"version":3,"sources":["assets/feather/feather-sprite.svg","components/Firebase/context.js","components/Firebase/Firebase.js","constants/routes.js","components/Button/Button.js","components/SignOut/SignOutButton.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Icon/Icon.js","components/Navbar/Navbar.js","components/Input/Input.js","components/SignUp/SignUpForm.js","components/UserFormPage/UserFormPage.js","components/SignUp/SignUp.js","components/SignUp/index.js","components/SignIn/SignInForm.js","components/PasswordForget/PasswordForgetForm.js","components/PasswordForget/PasswordForget.js","components/PasswordForget/index.js","components/SignIn/SignIn.js","store/firebase.js","ducks/user/actions.js","ducks/user/types.js","ducks/user/selectors.js","ducks/user/reducers.js","ducks/current/actions.js","ducks/current/types.js","ducks/current/selectors.js","components/BoardGrid/BoardGrid.js","components/BoardGrid/BoardTile.js","ducks/boards/actions.js","ducks/boards/types.js","ducks/boards/selectors.js","ducks/boards/reducers.js","components/BoardGrid/BoardGridContainer.js","components/Modal/Modal.js","components/BoardComposer/BoardComposer.js","constants/droppableTypes.js","components/ListComposer/ListComposer.js","components/Board/Board.js","ducks/lists/actions.js","ducks/lists/types.js","ducks/lists/selectors.js","ducks/lists/reducers.js","ducks/cards/selectors.js","ducks/cards/actions.js","ducks/cards/types.js","ducks/cards/reducers.js","ducks/tasks/actions.js","ducks/tasks/types.js","ducks/tasks/selectors.js","ducks/tasks/reducer.js","components/Textarea/Textarea.js","components/CardComposer/CardComposer.js","components/Menu/Menu.js","components/Menu/MenuItem.js","components/Popover/Popover.js","components/Popover/PopoverWrapper.js","components/Card/Card.js","components/List/Cards.js","components/List/List.js","components/Toolbar/Toolbar.jsx","components/Checkbox/Checkbox.js","components/CardEditor/CardEditorMoreActions.js","constants/keys.js","components/CardEditor/CardEditor.js","utils/utils.js","components/Board/BoardContainer.js","components/Home/Home.js","components/PasswordChange/PasswordChangeForm.js","components/Account/Account.js","components/Header/Header.jsx","components/App/App.js","serviceWorker.js","store/reducers.js","ducks/current/reducers.js","store/history.js","index.js"],"names":["module","exports","__webpack_require__","p","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","createUserWithEmailAndPassword","email","password","auth","signInWithEmailAndPassword","signOut","passwordReset","sendPasswordResetEmail","passwordUpdate","newPassword","currentUser","updatePassword","getTimestamp","firestore","FieldValue","serverTimestamp","addToArray","value","arrayUnion","removeFromArray","arrayRemove","getUserDoc","userId","db","collection","doc","addUser","_ref","name","username","_ref$boardIds","boardIds","set","updateUser","newValue","arguments","length","undefined","update","getBoardDoc","boardId","updateBoard","objectSpread","lastModifiedAt","addBoard","_ref2","boardTitle","add","createdAt","listIds","authorId","memberIds","then","ref","id","getListDoc","listId","updateList","addList","_ref3","listTitle","cardIds","deleteList","_ref4","batch","listRef","boardRef","delete","where","get","snapshot","docs","forEach","commit","console","log","catch","error","getCardDoc","cardId","addCard","_ref5","cardTitle","updateCard","deleteCard","_ref6","cardRef","moveCardToList","_ref7","origListId","newListId","updatedCardIds","origListRef","newListRef","getTaskDoc","taskId","addTask","_ref8","_ref8$memberIds","_ref8$boardId","_ref8$cardId","_ref8$dueDate","dueDate","text","isCompleted","createdBy","assignedTo","concat","toConsumableArray","taskIds","updateTask","deleteTask","_ref9","_ref9$cardId","taskRef","initializeApp","HOME","Button","children","_ref$type","type","onClick","_ref$className","className","_ref$color","color","_ref$size","size","_ref$variant","variant","disabled","_ref$iconOnly","iconOnly","buttonRef","objectWithoutProperties","defaultProps","components_Button_Button","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","authUser","inherits","createClass","key","_this2","listener","onAuthStateChanged","setState","Session_context","Provider","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","Icon","addClass","trim","xmlns","xmlnsXlink","viewBox","width","height","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","xlinkHref","featherIcons","NavLinksAuth","Fragment","Link","to","ROUTES","components_SignOut_SignOutButton","NavLinksNonAuth","Navbar","viewportWidth","window","innerWidth","isMobileNavVisible","isTouchEnabled","handleResize","toggleMobileNavVisibility","prevState","handleClick","e","minWidth","target","matches","handleOutsideClick","navLinksEl","contains","handleTouch","document","removeEventListener","addEventListener","_this$state","_this$props","navLinksClass","navRef","isMobileView","el","navEl","Icon_Icon","Navbar_NavLinksAuth","Navbar_NavLinksNonAuth","Input","hideLabel","htmlFor","title","onChange","placeholder","required","isRequired","onBlur","INITIAL_STATE","passwordOne","passwordTwo","SignUpForm","onSubmit","user","uid","preventDefault","defineProperty","_this$state2","isInvalid","components_Input_Input","message","UserFormPage","SignUpPage","components_UserFormPage_UserFormPage","SignUp_SignUpForm","SignUpLink","SignInForm","PasswordForgetForm","PasswordForgetPage","PasswordForget_PasswordForgetForm","PasswordForgetLink","SignInPage","SignIn_SignInForm","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","updateUserBoards","loadUserData","fetchUserData","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","data","sent","t0","stop","_x","apply","getUserData","action","selectBoard","selectList","selectCard","getCurrentBoardId","current","getCurrentListId","getCurrentCardId","getCurrent","BoardGrid","BoardTile","loadBoardsById","boardsById","fetchBoardsById","updateBoardsById","board","reorderLists","updateListIds","getBoardsById","getBoardsArray","keys","map","getBoard","BoardGridContainer","onSnapshot","querySnapshot","docChanges","change","_this$props$user","boardsArray","boardTiles","BoardGrid_BoardTile","BoardGrid_BoardGrid","openBoardComposer","connect","userSelectors","boardSelectors","userActions","boardActions","currentActions","Modal","onModalClose","onModalClick","BoardComposer","handleSubmit","onClose","components_Modal_Modal","CARD","LIST","isActive","ListComposer","resetForm","onReset","onFocus","currentSelectors","Board","react_beautiful_dnd_esm","droppableId","droppableTypes","direction","provided","innerRef","droppableProps","components_ListComposer_ListComposer","loadListsById","listsById","fetchListsById","updateListsById","list","getListsById","getListsArray","getCardsById","cardsById","getCardsArray","ownProps","loadCardsById","fetchCardsById","cards","updateCardsById","card","loadTasksById","tasksById","fetchTasksById","tasks","updateTasksById","task","fetchCardTasks","_callee2","_context2","_x2","fetchUserTasks","_callee3","_context3","_x3","taskData","getTasksById","getTasksArray","_toPropertyKey","Textarea","autoHeightResize","isAutoHeightResizeEnabled","textareaEl","style","scrollHeight","createRef","onKeyDown","onInput","CardComposer","Textarea_Textarea_Textarea","Menu","MenuItem","Popover","onOutsideClick","PopoverWrapper","isOpen","componentEl","toggleOpen","alignInner","alignOuter","buttonProps","wrapperClass","popoverClass","anchorEl","popoverWrapperStyle","offsetTop","offsetLeft","position","top","Popover_Popover","align","Card","handleCardClick","onCardClick","_this$props2","cardIndex","draggableId","index","draggableProps","dragHandleProps","headerEl","Cards","scrollToBottom","listEnd","scrollIntoView","prevProps","onCardDelete","minHeight","isDraggingOver","Card_Card_Card","float","clear","List","handleListDelete","newListTitle","isDragging","_this$props3","listIndex","isFetchingCards","viewportHeight","listHeaderEl","PopoverWrapper_PopoverWrapper","components_Menu_Menu","Menu_MenuItem","href","Cards_Cards","handleCardDelete","components_CardComposer_CardComposer","cardSelectors","Toolbar","Checkbox","isChecked","labelClass","checked","CardEditorMoreActions","onMenuClick","data-action","BACKSPACE","CardEditor","updateCardTasks","tasksArray","cardTasks","reduce","onCardEditorClose","cardKey","cardDescription","currentFocus","onSubmitComment","resetNewTaskForm","newTask","handleModalClick","commentFormRef","newTaskFormEl","handleMoreActions","dataset","onTaskChange","handleCheckboxChange","toggleTaskCompletion","_this$props4","cardComment","isCommentFormFocused","setCommentFormRef","element","_this$props5","hasTasks","isCommentInvalid","isNewTaskInvalid","commentFormIsFocused","components_Toolbar_Toolbar","CardEditor_CardEditorMoreActions","components_Checkbox_Checkbox","listSelectors","listsArray","taskSelectors","listActions","cardActions","isEqual","other","prototype","toString","typeArr","valueLen","compare","item1","item2","itemType","i","hasOwnProperty","windowDebouncer","callback","request","_len","args","Array","_key","cancelAnimationFrame","requestAnimationFrame","BoardContainer","onDragStart","onDragEnd","destination","source","isMovedWithinList","splice","updatedListIds","toggleCardEditor","isCardEditorOpen","onTitleChange","onTitleBlur","newBoardTitle","isFetching","boardObserver","updatedBoard","utils","listObserver","taskObserver","cardObserver","_this3","lists","components_List_List","components_Board_Board","components_CardEditor_CardEditor","taskActions","HomePage","toggleBoardComposer","isBoardComposerOpen","createBoard","BoardComposer_BoardComposer_BoardComposer","Switch","Route","exact","path","render","BoardGrid_BoardGridContainer","Board_BoardContainer","match","params","currentBoardId","PasswordChangeForm","PasswordChange_PasswordChangeForm","Header","Navbar_Navbar_Navbar","Header_Header_Header","component","LandingPage","AccountPage","AdminPage","Boolean","location","hostname","combineReducers","createBrowserHistory","basename","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","es","context","Router","components_App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.862d4211.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/feather-sprite.0ed672ce.svg\";","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import firebase from 'firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\nclass Firebase {\n  constructor() {\n    firebase.initializeApp(config);\n    this.auth = firebase.auth();\n    this.db = firebase.firestore();\n  }\n\n  // Auth API\n  createUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  signInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  signOut = () => this.auth.signOut();\n\n  passwordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  passwordUpdate = newPassword =>\n    this.auth.currentUser.updatePassword(newPassword);\n\n  // Utility API\n\n  getTimestamp = () => firebase.firestore.FieldValue.serverTimestamp();\n  addToArray = value => firebase.firestore.FieldValue.arrayUnion(value);\n  removeFromArray = value => firebase.firestore.FieldValue.arrayRemove(value);\n\n  // User API\n\n  getUserDoc = userId => this.db.collection('users').doc(userId);\n\n  addUser = ({ userId, name, username, email, boardIds = [] }) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .set({ userId, name, username, email, boardIds });\n\n  updateUser = (userId, newValue = {}) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .update(newValue);\n\n  // Board API\n\n  getBoardDoc = boardId => this.db.collection('boards').doc(boardId);\n\n  updateBoard = (boardId, newValue = {}) =>\n    this.getBoardDoc(boardId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  addBoard = ({ userId, boardTitle }) => {\n    this.db\n      .collection('boards')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        listIds: [],\n        authorId: userId,\n        memberIds: [userId],\n        boardTitle\n      })\n      .then(ref => {\n        this.updateUser(userId, {\n          boardIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  // List API\n\n  getListDoc = listId => this.db.collection('lists').doc(listId);\n\n  updateList = (listId, newValue = {}) =>\n    this.getListDoc(listId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  addList = ({ boardId, listTitle }) => {\n    this.db\n      .collection('lists')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        cardIds: [],\n        boardId,\n        listTitle\n      })\n      .then(ref => {\n        this.updateBoard(boardId, {\n          listIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  deleteList = ({ listId, boardId }) => {\n    const batch = this.db.batch();\n    const listRef = this.getListDoc(listId);\n    const boardRef = this.getBoardDoc(boardId);\n\n    // Delete list\n    batch.delete(listRef);\n\n    // Remove list id from board\n    batch.update(boardRef, {\n      listIds: this.removeFromArray(listId),\n      lastModifiedAt: this.getTimestamp()\n    });\n\n    // Delete cards assigned to list\n    this.db\n      .collection('cards')\n      .where('listId', '==', listId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('list deleted');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  // Card API\n\n  getCardDoc = cardId => this.db.collection('cards').doc(cardId);\n\n  addCard = ({ boardId, listId, cardTitle }) => {\n    this.db\n      .collection('cards')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        listId,\n        boardId,\n        cardTitle\n      })\n      .then(ref => {\n        this.updateList(listId, {\n          cardIds: this.addToArray(ref.id),\n          lastModifiedAt: this.getTimestamp()\n        });\n      });\n  };\n\n  updateCard = (cardId, newValue = {}) => {\n    this.getCardDoc(cardId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  deleteCard = ({ cardId, listId }) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const listRef = this.getListDoc(listId);\n    batch.delete(cardRef);\n    batch.update(listRef, {\n      cardIds: this.removeFromArray(cardId),\n      lastModifiedAt: this.getTimestamp()\n    });\n\n    // Delete tasks assigned to card\n    this.db\n      .collection('tasks')\n      .where('cardId', '==', cardId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('card deleted');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  moveCardToList = ({ cardId, origListId, newListId, updatedCardIds }) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const origListRef = this.getListDoc(origListId);\n    const newListRef = this.getListDoc(newListId);\n    batch.update(cardRef, {\n      listId: newListId,\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(origListRef, {\n      cardIds: this.removeFromArray(cardId),\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(newListRef, {\n      cardIds: updatedCardIds,\n      lastModifiedAt: this.getTimestamp()\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('card moved');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  // Task API\n\n  getTaskDoc = taskId => this.db.collection('tasks').doc(taskId);\n\n  addTask = ({ userId, memberIds = [], boardId = null, cardId = null, dueDate = null, text }) => {\n    this.db\n      .collection('tasks')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        isCompleted: false,\n        createdBy: userId,\n        assignedTo: [userId, ...memberIds],\n        dueDate,\n        boardId,\n        cardId,\n        text\n      })\n      .then(ref => {\n        if (cardId === null) return;\n        this.updateCard(cardId, {\n          taskIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  updateTask = (taskId, newValue = {}) => {\n    this.getTaskDoc(taskId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  deleteTask = ({ taskId, cardId = null }) => {\n    const batch = this.db.batch();\n    const taskRef = this.getTaskDoc(taskId);\n    batch.delete(taskRef);\n\n    if (cardId) {\n      const cardRef = this.getCardDoc(cardId);\n      batch.update(cardRef, {\n        taskIds: this.removeFromArray(taskId),\n        lastModifiedAt: this.getTimestamp()\n      });\n    }\n    return batch\n      .commit()\n      .then(() => {\n        console.log('task deleted');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n}\n\nexport default Firebase;\n","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const BOARD = '/home/board/:id';\n","import React from 'react';\nimport './Button.scss';\n\nconst Button = ({\n  children,\n  type = 'button',\n  onClick,\n  className = '',\n  color = 'neutral',\n  size = 'md',\n  variant = 'text',\n  disabled,\n  name,\n  iconOnly = false,\n  buttonRef,\n  ...props\n}) => (\n  // eslint-disable-next-line react/button-has-type\n  <button\n    className={`${className} ${color} ${size} ${variant} ${\n      iconOnly ? 'icon-only' : ''\n    }`}\n    type={type}\n    onClick={onClick}\n    disabled={disabled}\n    name={name}\n    ref={buttonRef}\n    {...props}\n  >\n    {children}\n  </button>\n);\n\nButton.defaultProps = {\n  type: 'button',\n  className: '',\n  color: 'neutral',\n  size: 'md',\n  variant: 'text',\n  iconOnly: false\n};\n\nexport default Button;\n","import React from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Button } from '../Button';\nimport './SignOutButton.scss';\n\nconst SignOutButton = ({ firebase }) => (\n  <Button\n    type=\"button\"\n    onClick={firebase.signOut}\n    className=\"btn--sign-out\"\n    color=\"primary\"\n  >\n    Sign Out\n  </Button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        authUser: null\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        authUser\n          ? this.setState({ authUser })\n          : this.setState({ authUser: null });\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport AuthUserContext from './context';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          this.props.history.push(ROUTES.SIGN_IN);\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n  return compose(\n    withRouter,\n    withFirebase\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from 'react';\nimport featherIcons from '../../assets/feather/feather-sprite.svg';\n\nfunction Icon(props) {\n  return (\n    <svg\n      className={`feather feather-${props.name} ${props.addClass || ''}`.trim()}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n      height=\"24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <use xlinkHref={`${featherIcons}#${props.name}`} />\n    </svg>\n  );\n}\n\nexport default Icon;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { SignOutButton } from '../SignOut';\nimport './Navbar.scss';\nimport { AuthUserContext } from '../Session';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\n\nconst NavLinksAuth = () => (\n  <>\n    <li>\n      <Link to={ROUTES.HOME}>Home</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ADMIN}>Admin</Link>\n    </li>\n    <li>\n      <SignOutButton />\n    </li>\n  </>\n);\n\nconst NavLinksNonAuth = () => (\n  <>\n    <li>\n      <Link to={ROUTES.SIGN_IN}>Log In</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.SIGN_UP}>Get Started</Link>\n    </li>\n  </>\n);\n\nexport default class Navbar extends Component {\n  static defaultProps = {\n    minWidth: 768\n  };\n\n  state = {\n    viewportWidth: window.innerWidth,\n    isMobileNavVisible: false,\n    isTouchEnabled: false\n  };\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick);\n  }\n\n  handleResize = () => {\n    this.setState({\n      viewportWidth: window.innerWidth\n    });\n  };\n\n  toggleMobileNavVisibility = () => {\n    this.setState(prevState => ({\n      isMobileNavVisible: !prevState.isMobileNavVisible\n    }));\n  };\n\n  handleClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    if (!isMobileView) return;\n    if (e.target.matches('button') || e.target.matches('a')) {\n      this.toggleMobileNavVisibility();\n    }\n  };\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n    window.removeEventListener('resize', this.handleResize);\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  handleOutsideClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n    if (\n      !isMobileView ||\n      this.navLinksEl.contains(e.target) ||\n      e.target.matches('button') ||\n      e.target.matches('a')\n    )\n      return;\n    this.setState({\n      isMobileNavVisible: false\n    });\n  };\n\n  handleTouch = () => {\n    const { isTouchEnabled } = this.state;\n    if (isTouchEnabled === true) return;\n    this.setState({\n      isTouchEnabled: true\n    });\n    document.removeEventListener('touchstart', this.handleTouch);\n    document.removeEventListener('click', this.handleOutsideClick);\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  render() {\n    const { viewportWidth, isMobileNavVisible } = this.state;\n    const { minWidth, navRef, navLinksClass } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    return (\n      <nav\n        className={`navbar ${isMobileView ? 'is-collapsed' : ''} ${\n          isMobileView && isMobileNavVisible ? 'show-links' : ''\n        }`}\n        ref={el => (this.navEl = el)}\n      >\n        <span className=\"navbar__logo\">\n          <Link to={ROUTES.LANDING} onClick={this.handleClick}>\n            workflow\n          </Link>\n        </span>\n        {isMobileView && (\n          <Button\n            type=\"button\"\n            color=\"primary\"\n            onClick={this.toggleMobileNavVisibility}\n            iconOnly\n          >\n            <Icon name=\"menu\" />\n          </Button>\n        )}\n        <ul\n          className={`navbar__links ${navLinksClass}`}\n          onClick={this.handleClick}\n          ref={el => (this.navLinksEl = el)}\n        >\n          <AuthUserContext.Consumer>\n            {authUser => (authUser ? <NavLinksAuth /> : <NavLinksNonAuth />)}\n          </AuthUserContext.Consumer>\n        </ul>\n      </nav>\n    );\n  }\n}\n","import React from 'react';\nimport './Input.scss';\n\nconst Input = props => {\n  return (\n    <>\n      {!props.hideLabel && (\n        <label htmlFor={props.name} className=\"input__label\">\n          {props.title}\n        </label>\n      )}\n      <input\n        className={props.className}\n        id={props.name}\n        name={props.name}\n        type={props.type}\n        value={props.value}\n        onChange={props.onChange}\n        placeholder={props.placeholder}\n        required={props.isRequired}\n        onBlur={props.onBlur}\n      />\n    </>\n  );\n};\n\nexport default Input;\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  username: '',\n  name: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { username, email, name, passwordOne } = this.state;\n    this.props.firebase\n      .createUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        const userId = authUser.user.uid;\n        return this.props.firebase.addUser({\n          userId,\n          name,\n          username,\n          email\n        });\n      })\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const {\n      username,\n      name,\n      email,\n      passwordOne,\n      passwordTwo,\n      error\n    } = this.state;\n    const isInvalid =\n      passwordOne === '' ||\n      passwordTwo === '' ||\n      email === '' ||\n      username === '' ||\n      passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"name\"\n          title=\"Full Name\"\n          value={name}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"username\"\n          title=\"Username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordOne\"\n          title=\"Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          title=\"Confirm Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Create Account\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignUpForm);\n","import React from 'react';\nimport './UserFormPage.scss';\n\nconst UserFormPage = ({ title, children }) => (\n  <main className=\"user-form__container\">\n    <h1 className=\"user-form__title\">{title}</h1>\n    {children}\n  </main>\n);\n\nexport default UserFormPage;\n","import React from 'react';\nimport SignUpForm from './SignUpForm';\nimport { UserFormPage } from '../UserFormPage';\n\nconst SignUpPage = () => (\n  <UserFormPage title=\"Create an account\">\n    <SignUpForm />\n  </UserFormPage>\n);\n\nexport default SignUpPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nexport { default as SignUpPage } from './SignUp';\nexport { default as SignUpForm } from './SignUpForm';\nexport { SignUpLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email, password } = this.state;\n    this.props.firebase\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n    const isInvalid = password === '' || email === '';\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"password\"\n          title=\"Password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Log In\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignInForm);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null\n};\n\nclass PasswordForgetForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .passwordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, error } = this.state;\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Reset My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordForgetForm);\n","import React from 'react';\nimport PasswordForgetForm from './PasswordForgetForm';\nimport { UserFormPage } from '../UserFormPage';\n\nconst PasswordForgetPage = () => (\n  <UserFormPage title=\"Forgot your password?\">\n    <PasswordForgetForm />\n  </UserFormPage>\n);\n\nexport default PasswordForgetPage;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport {default as PasswordForgetForm} from './PasswordForgetForm';\nexport {default as PasswordForgetPage} from './PasswordForget';\nexport {PasswordForgetLink};","import React from 'react';\nimport SignInForm from './SignInForm';\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { UserFormPage } from '../UserFormPage';\n\nconst SignInPage = () => (\n  <UserFormPage title=\"Log In\">\n    <SignInForm />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </UserFormPage>\n);\n\nexport default SignInPage;\n","import { Firebase } from '../components/Firebase';\n\nconst firebase = new Firebase();\n\nexport default firebase;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const updateUserBoards = boardIds => {\n  return {\n    type: types.UPDATE_USER_BOARDS,\n    boardIds\n  };\n};\n\nexport const loadUserData = user => {\n  return {\n    type: types.LOAD_USER_DATA,\n    user\n  };\n};\n\nexport const fetchUserData = userId => {\n  return async dispatch => {\n    try {\n      const user = await firebase\n        .getUserDoc(userId)\n        .get()\n        .then(doc => doc.data());\n      dispatch(loadUserData(user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","export const UPDATE_USER_BOARDS = 'ADD_USER_BOARD';\nexport const LOAD_USER_DATA = 'LOAD_USER_DATA';\nexport const LOAD_USER_BOARDS = 'LOAD_USER_BOARDS';\n","export const getUserData = state => {\n  return state.user;\n};\n","import * as types from './types';\n\nconst user = (state = {}, action) => {\n  switch (action.type) {\n    case types.UPDATE_USER_BOARDS:\n      return {\n        ...state,\n        boardIds: [...action.boardIds]\n      };\n    case types.LOAD_USER_DATA: {\n      const { user } = action;\n      return {\n        ...state,\n        ...user\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default user;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const selectBoard = boardId => {\n  return {\n    type: types.SELECT_BOARD,\n    boardId\n  };\n};\n\nexport const selectList = listId => {\n  return {\n    type: types.SELECT_LIST,\n    listId\n  };\n};\n\nexport const selectCard = cardId => {\n  return {\n    type: types.SELECT_CARD,\n    cardId\n  };\n};\n","export const SELECT_BOARD = 'SELECT_BOARD';\nexport const SELECT_LIST = 'SELECT_LIST';\nexport const SELECT_CARD = 'SELECT_CARD';\n","export const getCurrentBoardId = state => {\n  return state.current.boardId;\n};\n\nexport const getCurrentListId = state => {\n  return state.current.listId;\n};\n\nexport const getCurrentCardId = state => {\n  return state.current.cardId;\n};\n\nexport const getCurrent = state => {\n  return state.current;\n};\n","import React, { Component } from 'react';\n\nexport default class BoardGrid extends Component {\n  render() {\n    return <ul className=\"board-grid\">{this.props.children}</ul>;\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BoardTile = props => {\n  const { boardId, boardTitle, onClick } = props;\n  return (\n    <li className=\"board-grid__tile\">\n      <Link\n        className=\"board-grid__link\"\n        to={`/home/board/${boardId}`}\n        onClick={onClick}\n      >\n        <span className=\"board-grid__title\">{boardTitle}</span>\n      </Link>\n    </li>\n  );\n};\n\nexport default BoardTile;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadBoardsById = boardsById => {\n  return {\n    type: types.LOAD_BOARDS_BY_ID,\n    boardsById\n  };\n};\n\nexport const fetchBoardsById = userId => {\n  return async dispatch => {\n    try {\n      const boardsById = await firebase.db\n        .collection('boards')\n        .where('memberIds', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const boardsById = {};\n          snapshot.forEach(doc => {\n            boardsById[doc.id] = doc.data();\n          });\n          return boardsById;\n        });\n      dispatch(loadBoardsById(boardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateBoardsById = board => {\n  return {\n    type: types.UPDATE_BOARDS_BY_ID,\n    board\n  };\n};\n\nexport const reorderLists = (boardId, listIds) => {\n  return {\n    type: types.REORDER_LISTS,\n    boardId,\n    listIds\n  };\n};\n\nexport const updateListIds = (boardId, listIds) => {\n  return {\n    type: types.UPDATE_LIST_IDS,\n    boardId,\n    listIds\n  };\n};\n","export const LOAD_BOARDS_BY_ID = 'LOAD_BOARDS_BY_ID';\nexport const UPDATE_BOARDS_BY_ID = 'UPDATE_BOARDS_BY_ID';\nexport const REORDER_LISTS = 'REORDER_LISTS';\nexport const UPDATE_LIST_IDS = 'UPDATE_LIST_IDS';","export const getBoardsById = state => {\n  return state.boardsById;\n};\n\nexport const getBoardsArray = state => {\n  const { boardsById } = state;\n  return Object.keys(boardsById).map(boardId => {\n    return {\n      boardId,\n      ...boardsById[boardId]\n    };\n  });\n};\n\nexport const getBoard = (state, boardId) => {\n  const { boardsById } = state;\n  return boardsById[boardId];\n};\n","import * as types from './types';\n\nconst boardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_BOARDS_BY_ID: {\n      const { boardsById } = action;\n      return {\n        ...state,\n        ...boardsById\n      };\n    }\n    case types.UPDATE_BOARDS_BY_ID: {\n      const { board } = action;\n      return {\n        ...state,\n        ...board\n      };\n    }\n    case types.UPDATE_LIST_IDS:\n    case types.REORDER_LISTS: {\n      const { boardId, listIds } = action;\n      return {\n        ...state,\n        [boardId]: {\n          ...state[boardId],\n          listIds\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default boardsById;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport BoardGrid from './BoardGrid';\nimport BoardTile from './BoardTile';\nimport './BoardGrid.scss';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Icon } from '../Icon';\n\nclass BoardGridContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const { userId } = this.props.user;\n    this.listener = this.props.firebase.db\n      .collection('boards')\n      .where('memberIds', 'array-contains', userId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const board = {\n            [change.doc.id]: change.doc.data()\n          };\n          this.props.updateBoardsById(board);\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  }\n\n  render() {\n    const { boardIds, userId } = this.props.user;\n    const { boardsArray, selectBoard } = this.props;\n    const boardTiles = boardsArray.map(board => {\n      const { boardTitle, boardId } = board;\n      return (\n        <BoardTile\n          key={boardId}\n          boardTitle={boardTitle}\n          boardId={boardId}\n          onClick={() => selectBoard(boardId)}\n        />\n      );\n    });\n    return (\n      <section>\n        <BoardGrid>\n          {boardTiles}\n          <button\n            type=\"button\"\n            className=\"board-grid__tile board-grid__btn--add\"\n            onClick={this.props.openBoardComposer}\n          >\n            <Icon name=\"plus-circle\" />\n            Create board\n          </button>\n        </BoardGrid>\n      </section>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUserBoards: boardIds =>\n      dispatch(userActions.updateUserBoards(boardIds)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardGridContainer)\n);\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport './Modal.scss';\n\nconst Modal = ({\n  onModalClose,\n  children,\n  className = '',\n  onModalClick,\n  size = 'md'\n}) => {\n  return (\n    <div className=\"modal\" onClick={onModalClick}>\n      <div className={`modal__content ${className} modal__content--${size}`}>\n        <Button\n          type=\"button\"\n          className=\"modal__btn--close\"\n          onClick={onModalClose}\n          iconOnly\n        >\n          <Icon name=\"x\" />\n        </Button>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport { Modal } from '../Modal';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\nimport './BoardComposer.scss';\n\nconst INITIAL_STATE = {\n  boardTitle: ''\n};\n\nexport default class BoardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { boardTitle } = this.state;\n    const { handleSubmit, onClose } = this.props;\n    this.props.handleSubmit(boardTitle);\n    this.props.onClose();\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { boardTitle } = this.state;\n    return (\n      <Modal onModalClose={this.props.onClose} size=\"sm\">\n        <form onSubmit={this.onSubmit}>\n          <Input\n            name=\"boardTitle\"\n            title=\"Board Title\"\n            value={boardTitle}\n            onChange={this.onChange}\n            type=\"text\"\n          />\n          <Button\n            className=\"board-composer__btn--add\"\n            type=\"submit\"\n            onClick={this.onSubmit}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Create Board\n          </Button>\n        </form>\n      </Modal>\n    );\n  }\n}\n","export const CARD = 'CARD';\nexport const LIST = 'LIST';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input } from '../Input';\nimport { Icon } from '../Icon';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Button } from '../Button';\nimport './ListComposer.scss';\n\nconst INITIAL_STATE = {\n  listTitle: '',\n  isActive: false\n};\n\nclass ListComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ listTitle: '' });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { listTitle } = this.state;\n    const { boardId } = this.props;\n    this.props.firebase.addList({ boardId, listTitle });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = e => {\n    if (e.target.value === '') {\n      this.setState({\n        isActive: false\n      });\n    }\n  };\n\n  render() {\n    const { listTitle, isActive } = this.state;\n    return (\n      <div\n        className={`list-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"list-composer__form\" onSubmit={this.onSubmit}>\n          <Input\n            onChange={this.onChange}\n            value={listTitle}\n            placeholder={isActive ? 'Enter list title...' : 'Add a list'}\n            required={true}\n            name=\"listTitle\"\n            hideLabel={true}\n            className=\"list-composer__input\"\n          />\n          {isActive && (\n            <div className=\"list-composer__footer\">\n              <Button\n                className=\"list-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add List\n              </Button>\n              <Button\n                className=\"list-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => dispatch(userActions.getUserData(userId)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListComposer)\n);\n","import React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { ListComposer } from '../ListComposer';\n\nconst Board = props => {\n  const { boardId, children } = props;\n  return (\n    <Droppable\n      droppableId={boardId}\n      type={droppableTypes.LIST}\n      direction=\"horizontal\"\n    >\n      {provided => (\n        <div\n          className=\"board\"\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n        >\n          {children}\n          {provided.placeholder}\n          <ListComposer boardId={boardId} />\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nexport default Board;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadListsById = listsById => {\n  return {\n    type: types.LOAD_LISTS_BY_ID,\n    listsById\n  };\n};\n\nexport const fetchListsById = boardId => {\n  return async dispatch => {\n    try {\n      const listsById = await firebase.db\n        .collection('lists')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const listsById = {};\n          snapshot.forEach(doc => {\n            listsById[doc.id] = doc.data();\n          });\n          return listsById;\n        });\n      dispatch(loadListsById(listsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateListsById = list => {\n  return {\n    type: types.UPDATE_LISTS_BY_ID,\n    list\n  };\n};\n","export const LOAD_LISTS_BY_ID = 'LOAD_LISTS_BY_ID';\nexport const FETCH_LISTS_BY_ID = 'FETCH_LISTS_BY_ID';\nexport const UPDATE_LISTS_BY_ID = 'UPDATE_LISTS_BY_ID';\nexport const DELETE_CARD = 'DELETE_CARD';\n","export const getListsById = state => {\n  return state.listsById;\n};\n\nexport const getListsArray = state => {\n  const { listsById, boardsById, current } = state;\n  const { boardId } = current;\n  const board = boardsById[boardId];\n  if (!board) return null;\n  const { listIds } = board;\n\n  return listIds.map(listId => {\n    return {\n      listId,\n      ...listsById[listId]\n    };\n  });\n};\n","import * as types from './types';\n\nconst listsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_LISTS_BY_ID: {\n      const { listsById } = action;\n      return {\n        ...state,\n        ...listsById\n      };\n    }\n    case types.UPDATE_LISTS_BY_ID: {\n      const { list } = action;\n      return {\n        ...state,\n        ...list\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default listsById;\n","export const getCardsById = state => {\n  return state.cardsById;\n};\n\nexport const getCardsArray = (state, ownProps) => {\n  const { cardsById } = state;\n  const { cardIds } = ownProps;\n  return cardIds.map(cardId => cardsById[cardId]);\n};\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadCardsById = cardsById => {\n  return {\n    type: types.LOAD_CARDS_BY_ID,\n    cardsById\n  };\n};\n\nexport const fetchCardsById = boardId => {\n  return async dispatch => {\n    try {\n      const cardsById = await firebase.db\n        .collection('cards')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const cards = {};\n          snapshot.forEach(doc => {\n            cards[doc.id] = {\n              cardId: doc.id,\n              ...doc.data()\n            };\n          });\n          return cards;\n        });\n      dispatch(loadCardsById(cardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateCardsById = card => {\n  return {\n    type: types.UPDATE_CARDS_BY_ID,\n    card\n  };\n};\n\n","export const ADD_CARD = 'ADD_CARD';\nexport const SET_CARD_DUE_DATE = 'SET_CARD_DUE_DATE';\nexport const ADD_CARD_SUBTASK = 'ADD_CARD_SUBTASK';\nexport const REMOVE_CARD_SUBTASK = 'REMOVE_CARD_SUBTASK';\nexport const CHANGE_CARD_DESCRIPTION = 'CHANGE_CARD_DESCRIPTION';\nexport const SET_CARD_COLOR = 'SET_CARD_COLOR';\nexport const DELETE_CARD = 'DELETE_CARD';\nexport const MOVE_CARD = 'MOVE_CARD';\nexport const LOAD_CARDS_BY_ID = 'LOAD_CARDS_BY_ID';\nexport const UPDATE_CARDS_BY_ID = 'UPDATE_CARDS_BY_ID';\n\n","import * as types from './types';\n\nconst cardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_CARDS_BY_ID: {\n      const { cardsById } = action;\n      return {\n        ...state,\n        ...cardsById\n      };\n    }\n    case types.UPDATE_CARDS_BY_ID: {\n      const { card } = action;\n      return {\n        ...state,\n        ...card\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default cardsById;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadTasksById = tasksById => {\n  return {\n    type: types.LOAD_TASKS_BY_ID,\n    tasksById\n  };\n};\n\nexport const fetchTasksById = () => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateTasksById = task => {\n  return {\n    type: types.UPDATE_TASKS_BY_ID,\n    task\n  };\n};\n\nexport const fetchCardTasks = boardId => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserTasks = userId => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .where('assignedTo', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addTask = ({ taskId, taskData }) => {\n  return {\n    type: types.ADD_TASK,\n    taskId,\n    taskData\n  };\n};\n\nexport const deleteTask = taskId => {\n  return {\n    type: types.DELETE_TASK,\n    taskId\n  };\n};\n\nexport const updateTask = ({ taskId, taskData }) => {\n  return {\n    type: types.UPDATE_TASK,\n    taskId,\n    taskData\n  };\n};\n","export const LOAD_TASKS_BY_ID = 'LOAD_TASKS_BY_ID';\nexport const FETCH_TASKS_BY_ID = 'FETCH_TASKS_BY_ID';\nexport const UPDATE_TASKS_BY_ID = 'UPDATE_TASKS_BY_ID';\nexport const ADD_TASK = 'ADD_TASK';\nexport const UPDATE_TASK = 'UPDATE_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\n","export const getTasksById = state => {\n  const { tasksById } = state;\n  return tasksById;\n};\n\nexport const getTasksArray = (state, taskIds) => {\n  const { tasksById } = state;\n  if (!taskIds) return [];\n\n  return taskIds.map(taskId => {\n    return tasksById[taskId];\n  });\n};\n","import * as types from './types';\n\nconst tasksById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_TASKS_BY_ID: {\n      const { tasksById } = action;\n      return {\n        ...state,\n        ...tasksById\n      };\n    }\n    case types.ADD_TASK: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        [taskId]: {\n          taskId,\n          ...taskData\n        }\n      };\n    }\n    case types.DELETE_TASK: {\n      const { taskId } = action;\n      const { [taskId]: deletedTask, ...restOfTasks } = state;\n      return restOfTasks;\n    }\n    case types.UPDATE_TASK: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        [taskId]: {\n          ...state[taskId],\n          ...taskData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default tasksById;\n","import React, { Component, createRef } from 'react';\nimport './Textarea.scss';\n\nexport default class Textarea extends Component {\n  static defaultProps = {\n    isAutoHeightResizeEnabled: true\n  };\n\n  constructor(props) {\n    super(props);\n    this.textareaEl = createRef();\n  }\n\n  componentDidMount() {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n    this.autoHeightResize();\n  }\n\n  autoHeightResize = () => {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n\n    this.textareaEl.current.style.height = '0px'; // resets scroll height\n    this.textareaEl.current.style.height = `${\n      this.textareaEl.current.scrollHeight\n    }px`;\n  };\n\n  render() {\n    const {\n      className,\n      name,\n      value,\n      onChange,\n      placeholder,\n      isRequired,\n      onBlur,\n      onFocus,\n      onKeyDown\n    } = this.props;\n    return (\n      <textarea\n        className={`textarea ${className}`}\n        id={name}\n        name={name}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={isRequired}\n        onBlur={onBlur}\n        onInput={this.autoHeightResize}\n        ref={this.textareaEl}\n        onFocus={onFocus}\n        onKeyDown={onKeyDown}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon } from '../Icon';\nimport { withAuthorization } from '../Session';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport './CardComposer.scss';\n\nconst INITIAL_STATE = {\n  cardTitle: '',\n  isActive: false\n};\n\nclass CardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ cardTitle: '' });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { cardTitle } = this.state;\n    const { boardId } = this.props.current;\n    const { listId } = this.props;\n    this.props.firebase.addCard({ boardId, listId, cardTitle });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onBlur = e => {\n    if (e.target.value !== '') return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const { cardTitle, isActive } = this.state;\n\n    return (\n      <div\n        className={`card-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"card-composer__form\" onSubmit={this.onSubmit}>\n          <Textarea\n            onChange={this.onChange}\n            value={cardTitle}\n            placeholder={isActive ? 'Enter card title...' : 'Add a card'}\n            isRequired\n            name=\"cardTitle\"\n            className=\"card-composer__textarea\"\n            isAutoHeightResizeEnabled={false}\n          />\n          {isActive && (\n            <div className=\"card-composer__footer\">\n              <Button\n                className=\"card-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add Card\n              </Button>\n              <Button\n                className=\"card-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardComposer)\n);\n","import React from 'react';\nimport './Menu.scss';\n\nconst Menu = ({ children, onClick, className = '' }) => {\n  return <ul className={`menu ${className}`} onClick={onClick}>{children}</ul>;\n};\n\nexport default Menu;\n","import React from 'react';\nimport './Menu.scss';\n\nconst MenuItem = ({ children, className = '' }) => {\n  return <li className={`menu__item ${className}`}>{children}</li>;\n};\n\nexport default MenuItem;\n","import React, { Component } from 'react';\n\nexport default class Popover extends Component {\n  state = {\n    isTouchEnabled: false\n  };\n\n  componentDidMount() {\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick, false);\n  }\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  handleOutsideClick = e => {\n    const { onOutsideClick } = this.props;\n    onOutsideClick(e.target);\n  };\n\n  handleTouch = () => {\n    this.setState({\n      isTouchEnabled: true\n    });\n    // remove touch handler to prevent unnecessary refires\n    document.removeEventListener('touchstart', this.handleTouch);\n    // remove outside click handler from click events\n    document.removeEventListener('click', this.handleOutsideClick);\n    // reattach outside click handler to touchstart events\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  render() {\n    const { className, onClick, style, children } = this.props;\n    return (\n      <div className={`popover ${className}`} onClick={onClick} style={style}>\n        {children}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from '../Button';\nimport Popover from './Popover';\nimport './Popover.scss';\n\nexport default class PopoverWrapper extends Component {\n  state = {\n    isOpen: false\n  };\n\n  static defaultProps = {\n    wrapperClass: '',\n    popoverClass: '',\n    buttonProps: {},\n    align: 'left',\n    anchorEl: null\n  };\n\n  handleOutsideClick = target => {\n    if (this.componentEl && !this.componentEl.contains(target)) {\n      this.setState({\n        isOpen: false\n      });\n    }\n  };\n\n  toggleOpen = () => {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  };\n\n  render() {\n    const {\n      children,\n      alignInner,\n      alignOuter,\n      buttonProps,\n      wrapperClass,\n      popoverClass,\n      anchorEl\n    } = this.props;\n    const { isOpen } = this.state;\n\n    let popoverWrapperStyle = null;\n    \n    if (anchorEl) {\n      const { offsetTop, offsetLeft } = anchorEl;\n      popoverWrapperStyle = {\n        position: 'absolute',\n        top: offsetTop,\n        [alignOuter]: offsetLeft\n      };\n    }\n\n    return (\n      <div\n        className={`popover-wrapper ${isOpen ? 'is-active' : ''} ${wrapperClass}`}\n        ref={el => (this.componentEl = el)}\n        style={popoverWrapperStyle}\n      >\n        <Button type=\"button\" onClick={this.toggleOpen} {...buttonProps} />\n        {isOpen && (\n          <Popover\n            className={`align-${alignInner} ${popoverClass}`}\n            onClick={this.toggleOpen}\n            onOutsideClick={this.handleOutsideClick}\n          >\n            {children}\n          </Popover>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport './Card.scss';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { PopoverWrapper } from '../Popover';\nimport { Menu, MenuItem } from '../Menu';\n\nexport default class Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleCardClick = e => {\n    if (e.target.matches('button') || e.target.matches('a')) return;\n    const { cardId, onCardClick } = this.props;\n    onCardClick(cardId);\n  };\n\n  render() {\n    const { cardTitle, cardId, cardIndex } = this.props;\n    return (\n      <Draggable draggableId={cardId} index={cardIndex}>\n        {provided => (\n          <>\n            <div\n              className=\"card\"\n              onClick={this.handleCardClick}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              ref={provided.innerRef}\n            >\n              <div className=\"card__header\" ref={el => (this.headerEl = el)}>\n                <div className=\"card__tags\" />\n                <h3 className=\"card__title\">{cardTitle}</h3>\n              </div>\n              <div className=\"card__footer\">\n                <div className=\"card__labels\" />\n              </div>\n            </div>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { Card } from '../Card';\n\nexport default class Cards extends Component {\n  static propTypes = {\n    listId: PropTypes.string.isRequired\n  };\n\n  /*\n\n  shouldComponentUpdate(nextProps) {\n    if (this.props.cards === nextProps.cards) {\n      return false;\n    }\n    return true;\n  }\n*/\n  componentDidUpdate(prevProps) {\n    if (this.props.cards.length > prevProps.cards.length) {\n      this.scrollToBottom();\n    }\n  }\n\n  scrollToBottom = () => {\n    this.listEnd.scrollIntoView();\n  };\n\n  render() {\n    const { listId, cards, style, onCardClick, onCardDelete } = this.props;\n\n    return (\n      <Droppable droppableId={listId} type={droppableTypes.CARD}>\n        {(provided, snapshot) => (\n          <div\n            className=\"list__content\"\n            ref={provided.innerRef}\n            style={{\n              ...style,\n              minHeight: snapshot.isDraggingOver ? 80 : 16\n            }}\n            {...provided.droppableProps}\n          >\n            {cards.map((card, cardIndex) => {\n              const { cardId, cardTitle } = card;\n              return (\n                <Card\n                  key={cardId}\n                  cardTitle={cardTitle}\n                  cardId={cardId}\n                  cardIndex={cardIndex}\n                  listId={listId}\n                  onCardClick={onCardClick}\n                  onCardDelete={onCardDelete}\n                />\n              );\n            })}\n            {provided.placeholder}\n            <div\n              style={{ float: 'left', clear: 'both' }}\n              ref={el => (this.listEnd = el)}\n            />\n          </div>\n        )}\n      </Droppable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { CardComposer } from '../CardComposer';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\nimport { Input } from '../Input';\nimport Cards from './Cards';\nimport './List.scss';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDragging: this.props.isDragging,\n      listTitle: this.props.listTitle\n    };\n  }\n\n  handleListDelete = e => {\n    e.preventDefault();\n    const { listId, boardId, firebase } = this.props;\n    firebase.deleteList({ listId, boardId });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onBlur = e => {\n    const { listTitle, listId, firebase } = this.props;\n    const { listTitle: newListTitle } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newListTitle !== listTitle) {\n      firebase.updateList(listId, {\n        listTitle: newListTitle\n      });\n      console.log('updated!');\n    }\n  };\n\n  render() {\n    const {\n      cards,\n      onCardClick,\n      listId,\n      listIndex,\n      isFetchingCards\n    } = this.props;\n    if (isFetchingCards) return null;\n\n    const { listTitle, viewportHeight } = this.state;\n\n    return (\n      <Draggable draggableId={listId} index={listIndex}>\n        {provided => (\n          <>\n            <section\n              className=\"list\"\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <header\n                className=\"list__header\"\n                ref={el => (this.listHeaderEl = el)}\n              >\n                <Input\n                  className=\"list__input--title\"\n                  name=\"listTitle\"\n                  type=\"text\"\n                  value={listTitle}\n                  onChange={this.onChange}\n                  required\n                  hideLabel\n                  onBlur={this.onBlur}\n                />\n                <PopoverWrapper\n                  wrapperClass=\"list__popover-wrapper\"\n                  popoverClass=\"list__popover\"\n                  alignInner=\"left\"\n                  buttonProps={{\n                    size: 'medium',\n                    iconOnly: true,\n                    className: 'list__btn--more-actions',\n                    children: <Icon name=\"more-vertical\" />\n                  }}\n                >\n                  <Menu>\n                    <MenuItem>\n                      <a href=\"\" onClick={this.handleListDelete}>\n                        Delete\n                      </a>\n                    </MenuItem>\n                  </Menu>\n                </PopoverWrapper>\n              </header>\n              <Cards\n                cards={cards}\n                listId={listId}\n                onCardClick={onCardClick}\n                onCardDelete={this.handleCardDelete}\n              />\n              {provided.placeholder}\n              <CardComposer listId={listId} />\n            </section>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state),\n    cards: cardSelectors.getCardsArray(state, ownProps)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => dispatch(userActions.getUserData(userId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(List)\n);\n","import React from 'react';\nimport './Toolbar.scss';\n\nconst Toolbar = ({ className, children, ...props }) => (\n  <div className={`toolbar ${className}`} {...props}>\n    {children}\n  </div>\n);\n\nToolbar.defaultProps = {\n  className: ''\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport './Checkbox.scss';\n\nconst Checkbox = ({\n  value,\n  id,\n  name,\n  isChecked,\n  onClick,\n  onChange,\n  className,\n  labelClass,\n  ...props\n}) => {\n  return (\n    <label\n      htmlFor={id}\n      onClick={onClick}\n      className={`checkbox__label ${labelClass}`}\n    >\n      {isChecked && <Icon name=\"check\" />}\n      <input\n        type=\"checkbox\"\n        id={id}\n        value={value}\n        name={name}\n        checked={isChecked}\n        className={`checkbox ${className}`}\n        onChange={onChange}\n        {...props}\n      />\n    </label>\n  );\n};\n\nCheckbox.defaultProps = {\n  className: '',\n  labelClass: ''\n};\n\nexport default Checkbox;\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\n\nconst CardEditorMoreActions = ({ onMenuClick }) => (\n  <PopoverWrapper\n    wrapperClass=\"card-editor__popover-wrapper\"\n    popoverClass=\"card-editor__popover\"\n    alignOuter=\"right\"\n    alignInner=\"right\"\n    buttonProps={{\n      size: 'medium',\n      iconOnly: true,\n      className: 'card-editor__toolbar-btn',\n      children: <Icon name=\"more-horizontal\" />\n    }}\n  >\n    <Menu onClick={onMenuClick}>\n      <MenuItem>\n        <a href=\"\" data-action=\"delete\">\n          Delete card\n        </a>\n      </MenuItem>\n    </Menu>\n  </PopoverWrapper>\n);\n\nexport default CardEditorMoreActions;\n","export const BACKSPACE = 'Backspace';\nexport const ENTER = 'Enter';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { Input } from '../Input';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { Modal } from '../Modal';\nimport { Toolbar } from '../Toolbar';\nimport { Checkbox } from '../Checkbox';\nimport CardEditorMoreActions from './CardEditorMoreActions';\nimport * as keys from '../../constants/keys';\nimport './CardEditor.scss';\n\nclass CardEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cardId: this.props.card.cardId,\n      cardTitle: this.props.card.cardTitle,\n      cardDescription: this.props.card.cardDescription,\n      newTask: '',\n      cardTasks: this.props.tasksArray.reduce((tasks, task) => {\n        const { taskId, text, isCompleted } = task;\n        tasks[taskId] = {\n          text,\n          isCompleted\n        };\n        return tasks;\n      }, {}),\n      cardComment: '',\n      currentFocus: null,\n      isCommentFormFocused: false\n    };\n    this.commentFormRef = null;\n    this.setCommentFormRef = element => {\n      this.commentFormRef = element;\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.tasksArray.length !== Object.keys(state.cardTasks).length) {\n      return {\n        cardTasks: props.tasksArray.reduce((tasks, task) => {\n          const { taskId, text, isCompleted } = task;\n          tasks[taskId] = {\n            text,\n            isCompleted\n          };\n          return tasks;\n        }, {})\n      };\n    }\n    return null;\n  }\n\n  updateCardTasks = () => {\n    const { tasksArray } = this.props;\n    this.setState({\n      cardTasks: tasksArray.reduce((tasks, task) => {\n        const { taskId, text, isCompleted } = task;\n        tasks[taskId] = {\n          text,\n          isCompleted\n        };\n        return tasks;\n      }, {})\n    });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleCardDelete = () => {\n    const { card, firebase, onCardEditorClose } = this.props;\n    const { cardId, listId } = card;\n    firebase.deleteCard({ cardId, listId });\n    onCardEditorClose();\n  };\n\n  onBlur = e => {\n    const { card, firebase } = this.props;\n    const { cardTitle, cardDescription, currentFocus } = this.state;\n    const cardKey = e.target.name;\n\n    // When field loses focus, update card if change is detected\n\n    if (this.state[cardKey] !== card[cardKey]) {\n      const { cardId } = card;\n      firebase.updateCard(cardId, {\n        [cardKey]: this.state[cardKey]\n      });\n      console.log('updated!');\n    }\n\n    this.setState({\n      currentFocus: null\n    });\n  };\n\n  onSubmitComment = e => {\n    console.log(e.target.value);\n\n    e.preventDefault();\n  };\n\n  resetNewTaskForm = () => {\n    this.setState({\n      newTask: ''\n    });\n  };\n\n  addTask = e => {\n    const { user, firebase, card } = this.props;\n    const { userId } = user;\n    const { cardId, boardId } = card;\n    const { newTask: text } = this.state;\n    firebase.addTask({ userId, text, cardId, boardId });\n    this.resetNewTaskForm();\n    e.preventDefault();\n  };\n\n  onFocus = e => {\n    this.setState({\n      currentFocus: e.target.name\n    });\n  };\n\n  handleModalClick = e => {\n    const { currentFocus } = this.state;\n    if (\n      (currentFocus === 'cardComment' &&\n        !this.commentFormRef.contains(e.target)) ||\n      (currentFocus === 'newTask' && !this.newTaskFormEl.contains(e.target))\n    ) {\n      this.setState({\n        currentFocus: null\n      });\n    }\n  };\n\n  handleMoreActions = e => {\n    if (!e.target.matches('a')) return;\n    const { action } = e.target.dataset;\n    const { cardId } = this.props;\n    switch (action) {\n      case 'delete':\n        this.handleCardDelete(cardId);\n        break;\n    }\n    e.preventDefault(); // prevents page reload\n  };\n\n  onTaskChange = e => {\n    const { cardTasks } = this.state;\n    this.setState({\n      cardTasks: {\n        ...cardTasks,\n        [e.target.name]: {\n          ...cardTasks[e.target.name],\n          text: e.target.value\n        }\n      }\n    });\n  };\n\n  handleCheckboxChange = e => {\n    const taskId = e.target.name;\n    this.toggleTaskCompletion(taskId);\n  };\n\n  toggleTaskCompletion = taskId => {\n    const { isCompleted } = this.state.cardTasks[taskId];\n    this.setState(prevState => ({\n      cardTasks: {\n        ...prevState.cardTasks,\n        [taskId]: {\n          ...prevState.cardTasks[taskId],\n          isCompleted: !prevState.cardTasks[taskId].isCompleted\n        }\n      }\n    }));\n    const { firebase } = this.props;\n    firebase.updateTask(taskId, { isCompleted: !isCompleted });\n  };\n\n  updateTask = e => {\n    const taskId = e.target.name;\n    const { cardTasks } = this.state;\n    const { text } = cardTasks[taskId];\n    const { firebase } = this.props;\n    firebase.updateTask(taskId, { text });\n  };\n\n  deleteTask = e => {\n    if (e.target.value !== '' || e.key !== keys.BACKSPACE) return;\n    const { card, firebase } = this.props;\n    const { cardId } = card;\n    const taskId = e.target.name;\n    firebase.deleteTask({ taskId, cardId });\n  };\n\n  render() {\n    const { onCardEditorClose, card, user, tasksById, tasksArray } = this.props;\n    const { taskIds } = card;\n    const hasTasks = taskIds !== undefined && taskIds.length > 0;\n\n    const {\n      cardTitle,\n      cardDescription,\n      cardComment,\n      currentFocus,\n      newTask,\n      cardTasks\n    } = this.state;\n    const isCommentInvalid = cardComment === '';\n    const isNewTaskInvalid = newTask === '';\n    const commentFormIsFocused = currentFocus === 'cardComment';\n\n    return (\n      <Modal\n        onModalClose={onCardEditorClose}\n        className=\"card-editor\"\n        onModalClick={this.handleModalClick}\n        size=\"lg\"\n      >\n        <Toolbar className=\"card-editor__toolbar\">\n          <CardEditorMoreActions onMenuClick={this.handleMoreActions} />\n        </Toolbar>\n        <form\n          name=\"editCardForm\"\n          onFocus={this.onFocus}\n          className=\"card-editor__edit-card-form\"\n        >\n          <Textarea\n            className=\"card-editor__textarea--title\"\n            name=\"cardTitle\"\n            value={cardTitle}\n            onChange={this.onChange}\n            required\n            onBlur={this.onBlur}\n            onFocus={this.onFocus}\n          />\n          <div\n            className={`card-editor__section ${\n              currentFocus === 'cardDescription' ? 'is-focused' : ''\n            }`}\n          >\n            <div className=\"card-editor__section-icon\">\n              <Icon name=\"edit-3\" />\n            </div>\n            <Textarea\n              className=\"card-editor__textarea card-editor__textarea--description\"\n              name=\"cardDescription\"\n              value={cardDescription}\n              onChange={this.onChange}\n              placeholder=\"Add a description\"\n              onBlur={this.onBlur}\n              onFocus={this.onFocus}\n            />\n          </div>\n        </form>\n        <div\n          className={`card-editor__section ${\n            currentFocus === 'newTask' ? 'is-focused' : ''\n          }`}\n        >\n          <hr className=\"card-editor__hr\" />\n          {hasTasks && (\n            <ul className=\"card-editor__tasks\">\n              {tasksArray.map(task => {\n                const { taskId } = task;\n                return (\n                  <li className=\"card-editor__task\" key={taskId}>\n                    <Checkbox\n                      id={`cb-${taskId}`}\n                      value={taskId}\n                      name={taskId}\n                      isChecked={cardTasks[taskId].isCompleted}\n                      onChange={this.handleCheckboxChange}\n                      className=\"card-editor__checkbox\"\n                      labelClass=\"card-editor__checkbox-label\"\n                    />\n                    <Textarea\n                      value={cardTasks[taskId].text}\n                      onChange={this.onTaskChange}\n                      onBlur={this.updateTask}\n                      name={taskId}\n                      className=\"card-editor__textarea--task\"\n                      onKeyDown={this.deleteTask}\n                    />\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n          <div className=\"card-editor__section-icon\">\n            <Icon name=\"check-square\" />\n          </div>\n          <form\n            name=\"newTaskForm\"\n            className={`card-editor__new-task-form ${\n              currentFocus === 'newTask' ? 'is-focused' : ''\n            }`}\n            ref={el => (this.newTaskFormEl = el)}\n            onSubmit={this.addTask}\n          >\n            <Textarea\n              className=\"card-editor__textarea card-editor__textarea--new-task\"\n              name=\"newTask\"\n              value={newTask}\n              onChange={this.onChange}\n              placeholder=\"Add a task\"\n              onFocus={this.onFocus}\n            />\n            {currentFocus === 'newTask' && (\n              <Button\n                type=\"submit\"\n                color=\"secondary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isNewTaskInvalid}\n                onClick={this.addTask}\n                className=\"card-editor__btn--add-task\"\n              >\n                Add task\n              </Button>\n            )}\n          </form>\n        </div>\n        <div\n          className={`card-editor__section ${\n            commentFormIsFocused ? 'is-focused' : ''\n          }`}\n        >\n          <hr className=\"card-editor__hr\" />\n          <div className=\"card-editor__section-icon\">\n            <Icon name=\"message-circle\" />\n          </div>\n          <form\n            name=\"commentForm\"\n            className={`card-editor__comment-form ${\n              commentFormIsFocused ? 'is-focused' : ''\n            }`}\n            ref={this.setCommentFormRef}\n          >\n            <Textarea\n              className=\"card-editor__textarea card-editor__textarea--comment\"\n              name=\"cardComment\"\n              value={cardComment}\n              onChange={this.onChange}\n              placeholder=\"Write a comment...\"\n              onFocus={this.onFocus}\n            />\n            {commentFormIsFocused && (\n              <Button\n                type=\"submit\"\n                color=\"secondary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isCommentInvalid}\n                onClick={this.onSubmitComment}\n                name=\"cardCommentSubmit\"\n                className=\"card-editor__btn--submit-comment\"\n              >\n                Comment\n              </Button>\n            )}\n          </form>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    current: currentSelectors.getCurrent(state),\n    listsById: listSelectors.getListsById(state),\n    listsArray: listSelectors.getListsArray(state),\n    tasksById: taskSelectors.getTasksById(state),\n    tasksArray: taskSelectors.getTasksArray(state, ownProps.card.taskIds)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId)),\n    updateListsById: list => dispatch(listActions.updateListsById(list)),\n    updateCardsById: card => dispatch(cardActions.updateCardsById(card)),\n    reorderLists: (boardId, listIds) =>\n      dispatch(boardActions.reorderLists(boardId, listIds))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardEditor)\n);\n","\n/**\n * Checks if two arrays or objects are equal\n * @param {Array|Object} value\n * @param {Array|Object} other\n */\n\n// eslint-disable-next-line import/prefer-default-export\nexport const isEqual = (value, other) => {\n  const type = Object.prototype.toString.call(value);\n\n  // If both objects are not the same type, return false\n  if (type !== Object.prototype.toString.call(other)) return false;\n\n  const typeObj = '[object Object]';\n  const typeArr = '[object Array]';\n  // If items are neither objects nor arrays, return false\n  if (type !== typeObj && type !== typeArr) return false;\n\n  // Compare length of two items\n  const valueLen = type === typeArr ? value.length : Object.keys(value).length;\n  const otherLen = type === typeArr ? other.length : Object.keys(other).length;\n  if (valueLen !== otherLen) return false;\n\n  const compare = (item1, item2) => {\n    const typeFunc = '[object Function]';\n    const itemType = Object.prototype.toString.call(item1);\n    if (itemType !== Object.prototype.toString.call(item2)) return false;\n    if (itemType === typeObj || itemType === typeArr) {\n      return isEqual(item1, item2);\n    }\n    if (itemType === typeFunc) {\n      return item1.toString() === item2.toString();\n    }\n    return item1 === item2;\n  };\n\n  if (type === typeArr) {\n    for (let i = 0; i < valueLen; i++) {\n      if (!compare(value[i], other[i])) return false;\n    }\n  } else {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (compare(value[key], other[key]) === false) return false;\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * Delays callback execution until next browser repaint\n * Best used for `scroll` and `resize` window events\n * @param {Function} callback - The function to debounce\n */\n\nexport const windowDebouncer = callback => {\n  let request;\n\n  return (...args) => {\n    const context = this;\n\n    if (request) {\n      window.cancelAnimationFrame(request);\n    }\n\n    request = window.requestAnimationFrame(() => {\n      callback.apply(context, args);\n    });\n  };\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport * as ROUTES from '../../constants/routes';\nimport Board from './Board';\nimport { Input } from '../Input';\nimport { List } from '../List';\nimport { CardEditor } from '../CardEditor';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { utils } from '../../utils';\nimport './Board.scss';\n\nclass BoardContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: true,\n      isDragging: false,\n      isCardEditorOpen: false,\n      boardTitle: this.props.boardTitle\n    };\n  }\n\n  componentDidMount() {\n    const {\n      current,\n      fetchListsById,\n      fetchCardsById,\n      fetchCardTasks,\n      firebase,\n      updateBoardsById,\n      updateListsById,\n      updateCardsById,\n      boardId,\n      board,\n      updateListIds,\n      addTask,\n      updateTask,\n      deleteTask\n    } = this.props;\n\n    if (current.boardId !== boardId) {\n      this.props.selectBoard(boardId);\n    }\n\n    fetchListsById(boardId);\n    fetchCardsById(boardId);\n    fetchCardTasks(boardId).then(() => {\n      this.setState({\n        isFetching: false\n      });\n    });\n    this.boardObserver = firebase.getBoardDoc(boardId).onSnapshot(snapshot => {\n      const updatedBoard = snapshot.data();\n      if (!utils.isEqual(updatedBoard.listIds, board.listIds)) {\n        updateListIds(boardId, updatedBoard.listIds);\n      }\n    });\n    this.listObserver = firebase.db\n      .collection('lists')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const list = {\n            [change.doc.id]: change.doc.data()\n          };\n          updateListsById(list);\n        });\n      });\n    this.taskObserver = firebase.db\n      .collection('tasks')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const taskId = change.doc.id;\n          const taskData = change.doc.data();\n          if (change.type === 'added') {\n            addTask({ taskId, taskData });\n          }\n          if (change.type === 'modified') {\n            updateTask({ taskId, taskData });\n          }\n          if (change.type === 'removed') {\n            deleteTask(taskId);\n          }\n        });\n      });\n    this.cardObserver = firebase.db\n      .collection('cards')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const card = {\n            [change.doc.id]: {\n              cardId: change.doc.id,\n              ...change.doc.data()\n            }\n          };\n          updateCardsById(card);\n        });\n      });\n    console.log('mounted');\n  }\n\n  componentWillUnmount() {\n    this.boardObserver();\n    this.listObserver();\n    this.cardObserver();\n    this.taskObserver();\n  }\n\n  onDragStart = () => {\n    this.setState({\n      isDragging: true\n    });\n  };\n\n  onDragEnd = ({ destination, draggableId, source, type }) => {\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    const { firebase } = this.props;\n    if (type === droppableTypes.CARD) {\n      const { listsById } = this.props;\n      const isMovedWithinList = source.droppableId === destination.droppableId;\n      const updatedCardIds = [...listsById[destination.droppableId].cardIds];\n      if (isMovedWithinList) {\n        updatedCardIds.splice(source.index, 1);\n        updatedCardIds.splice(destination.index, 0, draggableId);\n        firebase.updateList(source.droppableId, {\n          cardIds: updatedCardIds\n        });\n      } else {\n        updatedCardIds.splice(destination.index, 0, draggableId);\n        firebase.moveCardToList({\n          cardId: draggableId,\n          origListId: source.droppableId,\n          newListId: destination.droppableId,\n          updatedCardIds\n        });\n      }\n    }\n\n    if (type === droppableTypes.LIST) {\n      const { boardsById, current, reorderLists } = this.props;\n      const { boardId } = current;\n      const updatedListIds = [...boardsById[boardId].listIds];\n      updatedListIds.splice(source.index, 1);\n      updatedListIds.splice(destination.index, 0, draggableId);\n      firebase.updateBoard(boardId, {\n        listIds: updatedListIds\n      });\n      reorderLists(boardId, updatedListIds);\n    }\n\n    this.setState({\n      isDragging: false\n    });\n  };\n\n  toggleCardEditor = () => {\n    this.setState(prevState => ({\n      isCardEditorOpen: !prevState.isCardEditorOpen\n    }));\n  };\n\n  handleCardClick = cardId => {\n    this.props.selectCard(cardId);\n    this.toggleCardEditor();\n  };\n\n  onTitleChange = e => {\n    this.setState({\n      boardTitle: e.target.value\n    });\n  };\n\n  onTitleBlur = e => {\n    const { boardTitle, boardId, firebase } = this.props;\n    const { boardTitle: newBoardTitle } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newBoardTitle !== boardTitle) {\n      firebase.updateBoard(boardId, {\n        boardTitle: newBoardTitle\n      });\n      console.log('updated!');\n    }\n  };\n\n  render() {\n    const { isFetching, isCardEditorOpen } = this.state;\n    const {\n      current,\n      boardsById,\n      listsArray,\n      cardsById,\n      boardId,\n      board\n    } = this.props;\n    if (isFetching) return null;\n    const { cardId } = current;\n    const { boardTitle } = board;\n    const lists = listsArray.map((list, listIndex) => {\n      const { listId, listTitle, cardIds } = list;\n      return (\n        <List\n          listId={listId}\n          key={listId}\n          listIndex={listIndex}\n          listTitle={listTitle}\n          cardIds={cardIds}\n          isFetchingCards={this.state.isFetching}\n          isDragging={this.state.isDragging}\n          onCardClick={this.handleCardClick}\n          boardId={boardId}\n        />\n      );\n    });\n\n    return (\n      <main className=\"board-container\">\n        <Input\n          className=\"board__input--title\"\n          name=\"boardTitle\"\n          type=\"text\"\n          value={boardTitle}\n          onChange={this.onTitleChange}\n          required\n          hideLabel\n          onBlur={this.onTitleBlur}\n        />\n        <DragDropContext\n          onDragEnd={this.onDragEnd}\n          onDragStart={this.onDragStart}\n        >\n          <Board boardId={boardId}>{lists}</Board>\n        </DragDropContext>\n        {isCardEditorOpen && (\n          <CardEditor\n            card={cardsById[cardId]}\n            onCardEditorClose={this.toggleCardEditor}\n          />\n        )}\n      </main>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    current: currentSelectors.getCurrent(state),\n    listsById: listSelectors.getListsById(state),\n    listsArray: listSelectors.getListsArray(state),\n    cardsById: cardSelectors.getCardsById(state),\n    board: boardSelectors.getBoard(state, ownProps.boardId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId)),\n    selectCard: cardId => dispatch(currentActions.selectCard(cardId)),\n    fetchListsById: boardId => dispatch(listActions.fetchListsById(boardId)),\n    updateListsById: list => dispatch(listActions.updateListsById(list)),\n    fetchCardsById: boardId => dispatch(cardActions.fetchCardsById(boardId)),\n    fetchCardTasks: boardId => dispatch(taskActions.fetchCardTasks(boardId)),\n    updateCardsById: card => dispatch(cardActions.updateCardsById(card)),\n    reorderLists: (boardId, listIds) =>\n      dispatch(boardActions.reorderLists(boardId, listIds)),\n    updateListIds: (boardId, listIds) =>\n      dispatch(boardActions.updateListIds(boardId, listIds)),\n    addTask: ({ taskId, taskData }) => dispatch(taskActions.addTask({ taskId, taskData })),\n    deleteTask: taskId => dispatch(taskActions.deleteTask(taskId)),\n    updateTask: ({ taskId, taskData }) =>\n      dispatch(taskActions.updateTask({ taskId, taskData }))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardContainer)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { withAuthorization } from '../Session';\nimport * as ROUTES from '../../constants/routes';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { currentSelectors } from '../../ducks/current';\nimport { BoardGridContainer } from '../BoardGrid';\nimport { BoardComposer } from '../BoardComposer';\nimport { BoardContainer } from '../Board';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport './Home.scss';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isBoardComposerOpen: false,\n      isFetching: true\n    };\n  }\n\n  componentDidMount() {\n    const userId = this.props.firebase.auth.currentUser.uid;\n    console.log('mounted home');\n    this.props.fetchUserData(userId);\n    this.props.fetchBoardsById(userId).then(() =>\n      this.setState({\n        isFetching: false\n      })\n    );\n  }\n\n  toggleBoardComposer = () => {\n    this.setState(prevState => ({\n      isBoardComposerOpen: !prevState.isBoardComposerOpen\n    }));\n  };\n\n  createBoard = boardTitle => {\n    const userId = this.props.user.userId;\n    this.props.firebase.addBoard({ userId, boardTitle });\n  };\n\n  render() {\n    const { isBoardComposerOpen, isFetching } = this.state;\n    const userId = this.props.user.userId;\n    if (isFetching) return null;\n    return (\n      <>\n        {isBoardComposerOpen && (\n          <BoardComposer\n            onClose={this.toggleBoardComposer}\n            handleSubmit={this.createBoard}\n          />\n        )}\n        <Switch>\n          <Route\n            exact\n            path={ROUTES.HOME}\n            render={() => (\n              <main className=\"main\">\n                <h1>Home</h1>\n                {userId && (\n                  <BoardGridContainer\n                    openBoardComposer={this.toggleBoardComposer}\n                  />\n                )}\n              </main>\n            )}\n          />\n          <Route\n            path={ROUTES.BOARD}\n            render={props => (\n              <BoardContainer boardId={props.match.params.id} {...props} />\n            )}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    currentBoardId: currentSelectors.getCurrentBoardId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUserData: userId => dispatch(userActions.fetchUserData(userId)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(HomePage)\n);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .passwordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n    const isInvalid = passwordOne === '' || passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"passwordOne\"\n          title=\"New Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          title=\"Confirm New Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Change My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React from 'react';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport { PasswordChangeForm } from '../PasswordChange';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport './Account.scss';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <main className=\"account\">\n        <h1>Account: {authUser.email}</h1>\n        <section className=\"account__section\">\n        <h2>Forgot your password?</h2>\n          <PasswordForgetForm />\n        </section>\n        <section className=\"account__section\">\n        <h2>Change your password.</h2>\n          <PasswordChangeForm />\n        </section>\n      </main>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(AccountPage);\n","import React, { Component } from 'react';\nimport { Navbar } from '../Navbar';\nimport './Header.scss';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <Navbar />\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport { Navbar } from '../Navbar';\nimport * as ROUTES from '../../constants/routes';\nimport { LandingPage } from '../Landing';\nimport { SignUpPage } from '../SignUp';\nimport { SignInPage } from '../SignIn';\nimport { PasswordForgetPage } from '../PasswordForget';\nimport { HomePage } from '../Home';\nimport { AccountPage } from '../Account';\nimport { AdminPage } from '../Admin';\nimport { withAuthentication } from '../Session';\nimport { Header } from '../Header';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Header />\n        <Switch>\n          <Route exact path={ROUTES.LANDING} component={LandingPage} />\n          <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n          <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n          <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n          <Route path={ROUTES.HOME} component={HomePage} />\n          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n          <Route path={ROUTES.ADMIN} component={AdminPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { boardsById } from '../ducks/boards';\nimport { cardsById } from '../ducks/cards';\nimport { listsById } from '../ducks/lists';\nimport { user } from '../ducks/user';\nimport { current } from '../ducks/current';\nimport { tasksById } from '../ducks/tasks';\n\nexport default combineReducers({\n  boardsById,\n  cardsById,\n  listsById,\n  user,\n  current,\n  tasksById\n});\n","import * as types from './types';\n\nconst current = (state = {}, action) => {\n  switch (action.type) {\n    case types.SELECT_BOARD: {\n      const { boardId } = action;\n      return {\n        ...state,\n        boardId\n      };\n    }\n    case types.SELECT_LIST: {\n      const { listId } = action;\n      return {\n        ...state,\n        listId\n      };\n    }\n    case types.SELECT_CARD: {\n      const { cardId } = action;\n      return {\n        ...state,\n        cardId\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport { current };\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\n\nexport default history;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport 'normalize.css';\nimport './index.scss';\nimport { App } from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { FirebaseContext } from './components/Firebase';\nimport reducers from './store/reducers';\nimport firebase from './store/firebase';\nimport history from './store/history';\n\nconst store = createStore(reducers, {}, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <FirebaseContext.Provider value={firebase}>\n      <Router basename={process.env.PUBLIC_URL} history={history}>\n        <App />\n      </Router>\n    </FirebaseContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}