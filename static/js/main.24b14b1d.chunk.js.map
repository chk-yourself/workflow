{"version":3,"sources":["assets/feather/feather-sprite.svg","components/Firebase/context.js","components/Firebase/Firebase.js","constants/routes.js","components/SignOut/SignOutButton.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Button/Button.js","components/Icon/Icon.js","components/Navbar/Navbar.js","components/Input/Input.js","components/SignUp/SignUpForm.js","components/UserFormPage/UserFormPage.js","components/SignUp/SignUp.js","components/SignUp/index.js","components/SignIn/SignInForm.js","components/PasswordForget/PasswordForgetForm.js","components/PasswordForget/PasswordForget.js","components/PasswordForget/index.js","components/SignIn/SignIn.js","store/firebase.js","ducks/user/actions.js","ducks/user/types.js","ducks/user/selectors.js","ducks/user/reducers.js","ducks/current/actions.js","ducks/current/types.js","ducks/current/selectors.js","components/BoardGrid/BoardGrid.js","components/BoardGrid/BoardTile.js","ducks/boards/actions.js","ducks/boards/types.js","ducks/boards/selectors.js","ducks/boards/reducers.js","components/BoardGrid/BoardGridContainer.js","constants/droppableTypes.js","ducks/cards/selectors.js","ducks/cards/actions.js","ducks/cards/types.js","ducks/cards/reducers.js","components/Popover/Popover.js","components/Popover/PopoverWrapper.js","components/Menu/Menu.js","components/Menu/MenuItem.js","components/Card/Card.js","components/Textarea/Textarea.js","components/Card/CardComposer.js","components/List/Cards.js","components/List/List.js","components/List/ListComposer.js","components/Board/Board.js","ducks/lists/actions.js","ducks/lists/types.js","ducks/lists/selectors.js","ducks/lists/reducers.js","components/Modal/Modal.js","components/CardEditor/CardEditor.js","utils/utils.js","components/Board/BoardContainer.js","components/Board/BoardComposer.js","components/Home/Home.js","components/PasswordChange/PasswordChangeForm.js","components/Account/Account.js","components/Header/Header.jsx","components/App/App.js","serviceWorker.js","store/reducers.js","ducks/current/reducers.js","store/history.js","index.js"],"names":["module","exports","__webpack_require__","p","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","createUserWithEmailAndPassword","email","password","auth","signInWithEmailAndPassword","signOut","passwordReset","sendPasswordResetEmail","passwordUpdate","newPassword","currentUser","updatePassword","getTimestamp","firestore","FieldValue","serverTimestamp","addToArray","value","arrayUnion","removeFromArray","arrayRemove","getUserDoc","userId","db","collection","doc","addUser","_ref","name","username","_ref$boardIds","boardIds","set","updateUser","newValue","arguments","length","undefined","update","getBoardDoc","boardId","updateBoard","objectSpread","lastModifiedAt","addBoard","_ref2","boardTitle","add","createdAt","listIds","authorId","memberIds","then","ref","id","getListDoc","listId","updateList","addList","_ref3","listTitle","cardIds","deleteList","_ref4","batch","listRef","boardRef","delete","where","get","snapshot","docs","forEach","commit","console","log","catch","error","getCardDoc","cardId","addCard","_ref5","cardTitle","updateCard","deleteCard","_ref6","cardRef","moveCardToList","_ref7","origListId","newListId","updatedCardIds","origListRef","newListRef","initializeApp","HOME","type","onClick","className","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","authUser","inherits","createClass","key","_this2","listener","onAuthStateChanged","setState","Session_context","Provider","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","Button","children","_ref$className","_ref$color","color","_ref$size","size","_ref$variant","variant","disabled","_ref$iconOnly","iconOnly","buttonRef","objectWithoutProperties","concat","Icon","addClass","trim","xmlns","xmlnsXlink","viewBox","width","height","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","xlinkHref","featherIcons","NavLinksAuth","Link","to","ROUTES","components_SignOut_SignOutButton","NavLinksNonAuth","_ref2$className","Navbar","viewportWidth","window","innerWidth","isMobileNavVisible","handleOutsideClick","e","minWidth","navEl","contains","target","handleResize","toggleMobileNavVisibility","prevState","handleClick","matches","addEventListener","document","removeEventListener","_this$state","_this$props","isMobileView","navRef","el","components_Button_Button","Icon_Icon","Navbar_NavLinksAuth","Navbar_NavLinksNonAuth","defaultProps","Input","Fragment","hideLabel","htmlFor","title","onChange","placeholder","required","isRequired","onBlur","INITIAL_STATE","passwordOne","passwordTwo","SignUpForm","onSubmit","user","uid","preventDefault","defineProperty","_this$state2","isInvalid","components_Input_Input","message","UserFormPage","SignUpPage","components_UserFormPage_UserFormPage","SignUp_SignUpForm","SignUpLink","SignInForm","PasswordForgetForm","PasswordForgetPage","PasswordForget_PasswordForgetForm","PasswordForgetLink","SignInPage","SignIn_SignInForm","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","updateUserBoards","fetchUserData","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","data","sent","loadUserData","t0","stop","_x","apply","getUserData","action","toConsumableArray","selectBoard","selectList","selectCard","getCurrentBoardId","current","getCurrentListId","getCurrentCardId","getCurrent","BoardGrid","BoardTile","loadBoardsById","boardsById","fetchBoardsById","updateBoardsById","board","reorderLists","updateListIds","getBoardsById","getBoardsArray","keys","map","getBoard","BoardGridContainer","onSnapshot","querySnapshot","docChanges","change","_this$props$user","boardsArray","boardTiles","BoardGrid_BoardTile","BoardGrid_BoardGrid","openBoardComposer","connect","userSelectors","boardSelectors","userActions","boardActions","currentActions","CARD","LIST","getCardsById","cardsById","getCardsArray","ownProps","loadCardsById","fetchCardsById","updateCardsById","card","Popover","onOutsideClick","style","PopoverWrapper","isOpen","componentEl","toggleOpen","innerAlign","outerAlign","buttonProps","wrapperClass","popoverClass","anchorEl","popoverWrapperStyle","offsetTop","offsetLeft","position","top","Popover_Popover","align","Menu","MenuItem","Card","handleCardClick","onCardClick","handleMoreActions","dataset","_this$props2","onCardDelete","_this$props3","cardIndex","react_beautiful_dnd_esm","draggableId","index","provided","draggableProps","dragHandleProps","innerRef","headerEl","PopoverWrapper_PopoverWrapper","components_Menu_Menu","Menu_MenuItem","href","data-action","Textarea","isActive","CardComposer","resetForm","onFocus","onReset","components_Textarea_Textarea","currentSelectors","Cards","cards","droppableId","droppableTypes","droppableProps","Card_Card_Card","List","viewportHeight","innerHeight","handleCardDelete","handleListDelete","newListTitle","isDragging","_this$props4","listIndex","isFetchingCards","listContentHeight","listHeaderEl","bottom","getBoundingClientRect","maxHeight","Cards_Cards","components_Card_CardComposer","cardSelectors","ListComposer","Board","direction","components_List_ListComposer","loadListsById","listsById","fetchListsById","updateListsById","list","getListsById","getListsArray","Modal","onModalClose","onModalClick","CardEditor","cardKey","cardDescription","currentFocus","onSubmitComment","handleModalClick","commentFormRef","subtaskFormRef","cardComment","isCommentFormFocused","setCommentFormRef","element","setSubtaskFormRef","onCardEditorClose","cardSubtask","commentFormIsFocused","components_Modal_Modal","submitSubtask","listSelectors","listsArray","listActions","cardActions","isEqual","other","prototype","toString","typeArr","valueLen","compare","item1","item2","itemType","i","hasOwnProperty","windowDebouncer","callback","request","_len","args","Array","_key","cancelAnimationFrame","requestAnimationFrame","BoardContainer","onDragStart","onDragEnd","destination","source","isMovedWithinList","splice","updatedListIds","toggleCardEditor","isCardEditorOpen","onTitleChange","onTitleBlur","newBoardTitle","isFetching","boardObserver","updatedBoard","utils","listObserver","cardObserver","_this3","lists","components_List_List","components_Board_Board","components_CardEditor_CardEditor","BoardComposer","handleSubmit","onClose","HomePage","toggleBoardComposer","isBoardComposerOpen","createBoard","BoardComposer_BoardComposer","Switch","Route","exact","path","render","BoardGrid_BoardGridContainer","Board_BoardContainer","match","params","currentBoardId","PasswordChangeForm","PasswordChange_PasswordChangeForm","Header","Navbar_Navbar_Navbar","Header_Header_Header","component","LandingPage","AccountPage","AdminPage","Boolean","location","hostname","combineReducers","createBrowserHistory","basename","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","es","context","Router","components_App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.24b14b1d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/feather-sprite.0ed672ce.svg\";","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import firebase from 'firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\nclass Firebase {\n  constructor() {\n    firebase.initializeApp(config);\n    this.auth = firebase.auth();\n    this.db = firebase.firestore();\n  }\n\n  // Auth API\n  createUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  signInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  signOut = () => this.auth.signOut();\n\n  passwordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  passwordUpdate = newPassword =>\n    this.auth.currentUser.updatePassword(newPassword);\n\n  // Utility API\n\n  getTimestamp = () => firebase.firestore.FieldValue.serverTimestamp();\n  addToArray = value => firebase.firestore.FieldValue.arrayUnion(value);\n  removeFromArray = value => firebase.firestore.FieldValue.arrayRemove(value);\n\n  // User API\n\n  getUserDoc = userId => this.db.collection('users').doc(userId);\n\n  addUser = ({ userId, name, username, email, boardIds = [] }) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .set({ userId, name, username, email, boardIds });\n\n  updateUser = (userId, newValue = {}) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .update(newValue);\n\n  // Board API\n\n  getBoardDoc = boardId => this.db.collection('boards').doc(boardId);\n\n  updateBoard = (boardId, newValue = {}) =>\n    this.getBoardDoc(boardId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  addBoard = ({ userId, boardTitle }) => {\n    this.db\n      .collection('boards')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        listIds: [],\n        authorId: userId,\n        memberIds: [userId],\n        boardTitle\n      })\n      .then(ref => {\n        this.updateUser(userId, {\n          boardIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  // List API\n\n  getListDoc = listId => this.db.collection('lists').doc(listId);\n\n  updateList = (listId, newValue = {}) =>\n    this.getListDoc(listId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  addList = ({ boardId, listTitle }) => {\n    this.db\n      .collection('lists')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        cardIds: [],\n        boardId,\n        listTitle\n      })\n      .then(ref => {\n        this.updateBoard(boardId, {\n          listIds: this.addToArray(ref.id),\n          lastModifiedAt: this.getTimestamp()\n        });\n      });\n  };\n\n  deleteList = ({ listId, boardId }) => {\n    const batch = this.db.batch();\n    const listRef = this.getListDoc(listId);\n    const boardRef = this.getBoardDoc(boardId);\n\n    // Delete list\n    batch.delete(listRef);\n\n    // Remove list id from board\n    batch.update(boardRef, {\n      listIds: this.removeFromArray(listId),\n      lastModifiedAt: this.getTimestamp()\n    });\n\n    // Delete cards assigned to list\n    this.db\n      .collection('cards')\n      .where('listId', '==', listId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('list deleted');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  // Card API\n\n  getCardDoc = cardId => this.db.collection('cards').doc(cardId);\n\n  addCard = ({ boardId, listId, cardTitle }) => {\n    this.db\n      .collection('cards')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        listId,\n        boardId,\n        cardTitle\n      })\n      .then(ref => {\n        this.updateList(listId, {\n          cardIds: this.addToArray(ref.id),\n          lastModifiedAt: this.getTimestamp()\n        });\n      });\n  };\n\n  updateCard = (cardId, newValue = {}) => {\n    this.getCardDoc(cardId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  deleteCard = ({ cardId, listId }) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const listRef = this.getListDoc(listId);\n    batch.delete(cardRef);\n    batch.update(listRef, {\n      cardIds: this.removeFromArray(cardId),\n      lastModifiedAt: this.getTimestamp()\n    });\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log('card deleted');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  moveCardToList = ({ cardId, origListId, newListId, updatedCardIds }) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const origListRef = this.getListDoc(origListId);\n    const newListRef = this.getListDoc(newListId);\n    batch.update(cardRef, {\n      listId: newListId,\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(origListRef, {\n      cardIds: this.removeFromArray(cardId),\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(newListRef, {\n      cardIds: updatedCardIds,\n      lastModifiedAt: this.getTimestamp()\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('card moved');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n}\n\nexport default Firebase;\n","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const BOARD = '/home/board/:id';\n","import React from 'react';\nimport { withFirebase } from '../Firebase';\nimport './SignOutButton.scss';\n\nconst SignOutButton = ({ firebase }) => (\n  <button type=\"button\" onClick={firebase.signOut} className=\"btn--sign-out\">\n    Sign Out\n  </button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        authUser: null\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        authUser\n          ? this.setState({ authUser })\n          : this.setState({ authUser: null });\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport AuthUserContext from './context';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          this.props.history.push(ROUTES.SIGN_IN);\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n  return compose(\n    withRouter,\n    withFirebase\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from 'react';\nimport './Button.scss';\n\nconst Button = ({\n  children,\n  type,\n  onClick,\n  className = '',\n  color = 'neutral',\n  size = 'medium',\n  variant = 'text',\n  disabled,\n  name,\n  iconOnly = false,\n  buttonRef,\n  ...props\n}) => (\n  <button\n    className={`${className} ${color} ${size} ${variant} ${\n      iconOnly ? 'icon-only' : ''\n    }`}\n    type={type}\n    onClick={onClick}\n    disabled={disabled}\n    name={name}\n    ref={buttonRef}\n  >\n    {children}\n  </button>\n);\n\nexport default Button;\n","import React from 'react';\nimport featherIcons from '../../assets/feather/feather-sprite.svg';\n\nfunction Icon(props) {\n  return (\n    <svg\n      className={`feather feather-${props.name} ${props.addClass || ''}`.trim()}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n      height=\"24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <use xlinkHref={`${featherIcons}#${props.name}`} />\n    </svg>\n  );\n}\n\nexport default Icon;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { SignOutButton } from '../SignOut';\nimport './Navbar.scss';\nimport { AuthUserContext } from '../Session';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\n\nconst NavLinksAuth = ({ className = '', onClick }) => (\n  <ul className={`navbar__links ${className}`} onClick={onClick}>\n    <li>\n      <Link to={ROUTES.HOME}>Home</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ADMIN}>Admin</Link>\n    </li>\n    <li>\n      <SignOutButton />\n    </li>\n  </ul>\n);\n\nconst NavLinksNonAuth = ({ className = '', onClick }) => (\n  <ul className={`navbar__links ${className}`} onClick={onClick}>\n    <li>\n      <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n    </li>\n  </ul>\n);\n\nexport default class Navbar extends Component {\n  static defaultProps = {\n    minWidth: 768\n  };\n\n  state = {\n    viewportWidth: window.innerWidth,\n    isMobileNavVisible: false\n  };\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    document.addEventListener('click', this.handleOutsideClick);\n  }\n\n  handleOutsideClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n    \n    if (!isMobileView || this.navEl.contains(e.target)) return;\n\n    this.setState({\n      isMobileNavVisible: false\n    });\n  };\n\n  handleResize = () => {\n    this.setState({\n      viewportWidth: window.innerWidth\n    });\n  };\n\n  toggleMobileNavVisibility = () => {\n    this.setState(prevState => ({\n      isMobileNavVisible: !prevState.isMobileNavVisible\n    }));\n  };\n\n  handleClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    if (!isMobileView) return;\n    if (e.target.matches('button') || e.target.matches('a')) {\n      this.toggleMobileNavVisibility();\n    }\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    document.removeEventListener('click', this.handleOutsideClick);\n  }\n\n  render() {\n    const { viewportWidth, isMobileNavVisible } = this.state;\n    const { minWidth, navRef } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    return (\n      <nav\n        className={`navbar ${isMobileView ? 'is-collapsed' : ''} ${\n          isMobileView && isMobileNavVisible ? 'show-links' : ''\n        }`}\n        ref={el => (this.navEl = el)}\n      >\n        <span className=\"navbar__logo\">\n          <Link to={ROUTES.LANDING}>workflow</Link>\n        </span>\n        {isMobileView && (\n          <Button\n            type=\"button\"\n            color=\"primary\"\n            onClick={this.toggleMobileNavVisibility}\n            iconOnly\n          >\n            <Icon name=\"menu\" />\n          </Button>\n        )}\n        <AuthUserContext.Consumer>\n          {authUser =>\n            authUser ? (\n              <NavLinksAuth onClick={this.handleClick} />\n            ) : (\n              <NavLinksNonAuth onClick={this.handleClick} />\n            )\n          }\n        </AuthUserContext.Consumer>\n      </nav>\n    );\n  }\n}\n","import React from 'react';\nimport './Input.scss';\n\nconst Input = props => {\n  return (\n    <>\n      {!props.hideLabel && (\n        <label htmlFor={props.name} className=\"input__label\">\n          {props.title}\n        </label>\n      )}\n      <input\n        className={props.className}\n        id={props.name}\n        name={props.name}\n        type={props.type}\n        value={props.value}\n        onChange={props.onChange}\n        placeholder={props.placeholder}\n        required={props.isRequired}\n        onBlur={props.onBlur}\n      />\n    </>\n  );\n};\n\nexport default Input;\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  username: '',\n  name: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { username, email, name, passwordOne } = this.state;\n    this.props.firebase\n      .createUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        const userId = authUser.user.uid;\n        return this.props.firebase.addUser({\n          userId,\n          name,\n          username,\n          email\n        });\n      })\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const {\n      username,\n      name,\n      email,\n      passwordOne,\n      passwordTwo,\n      error\n    } = this.state;\n    const isInvalid =\n      passwordOne === '' ||\n      passwordTwo === '' ||\n      email === '' ||\n      username === '' ||\n      passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"name\"\n          title=\"Full Name\"\n          value={name}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"username\"\n          title=\"Username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordOne\"\n          title=\"Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          title=\"Confirm Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"large\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Sign Up\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignUpForm);\n","import React from 'react';\nimport './UserFormPage.scss';\n\nconst UserFormPage = ({ title, children }) => (\n  <main className=\"user-form__container\">\n    <h1>{title}</h1>\n    {children}\n  </main>\n);\n\nexport default UserFormPage;\n","import React from 'react';\nimport SignUpForm from './SignUpForm';\nimport { UserFormPage } from '../UserFormPage';\n\nconst SignUpPage = () => (\n  <UserFormPage title=\"Sign Up\">\n    <SignUpForm />\n  </UserFormPage>\n);\n\nexport default SignUpPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nexport { default as SignUpPage } from './SignUp';\nexport { default as SignUpForm } from './SignUpForm';\nexport { SignUpLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose, renderComponent } from 'recompose';\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email, password } = this.state;\n    this.props.firebase\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n    const isInvalid = password === '' || email === '';\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"password\"\n          title=\"Password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"large\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Sign In\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignInForm);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null\n};\n\nclass PasswordForgetForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .passwordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, error } = this.state;\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"large\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Reset My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordForgetForm);\n","import React from 'react';\nimport PasswordForgetForm from './PasswordForgetForm';\nimport { UserFormPage } from '../UserFormPage';\n\nconst PasswordForgetPage = () => (\n  <UserFormPage title=\"Forgot your password?\">\n    <PasswordForgetForm />\n  </UserFormPage>\n);\n\nexport default PasswordForgetPage;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport {default as PasswordForgetForm} from './PasswordForgetForm';\nexport {default as PasswordForgetPage} from './PasswordForget';\nexport {PasswordForgetLink};","import React from 'react';\nimport SignInForm from './SignInForm';\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { UserFormPage } from '../UserFormPage';\n\nconst SignInPage = () => (\n  <UserFormPage title=\"Sign In\">\n    <SignInForm />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </UserFormPage>\n);\n\nexport default SignInPage;\n","import { Firebase } from '../components/Firebase';\n\nconst firebase = new Firebase();\n\nexport default firebase;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const updateUserBoards = boardIds => {\n  return {\n    type: types.UPDATE_USER_BOARDS,\n    boardIds\n  };\n};\n\nexport const fetchUserData = userId => {\n  return async dispatch => {\n    try {\n      const user = await firebase\n        .getUserDoc(userId)\n        .get()\n        .then(doc => doc.data());\n      dispatch(loadUserData(user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const loadUserData = user => {\n  return {\n    type: types.LOAD_USER_DATA,\n    user\n  };\n};\n","export const UPDATE_USER_BOARDS = 'ADD_USER_BOARD';\nexport const LOAD_USER_DATA = 'LOAD_USER_DATA';\nexport const LOAD_USER_BOARDS = 'LOAD_USER_BOARDS';\n","export const getUserData = state => {\n  return state.user;\n};\n","import * as types from './types';\n\nconst user = (state = {}, action) => {\n  switch (action.type) {\n    case types.UPDATE_USER_BOARDS:\n      return {\n        ...state,\n        boardIds: [...action.boardIds]\n      };\n    case types.LOAD_USER_DATA:\n      return {\n        ...state,\n        ...action.user\n      };\n    default:\n      return state;\n  }\n};\n\nexport default user;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const selectBoard = boardId => {\n  return {\n    type: types.SELECT_BOARD,\n    boardId\n  };\n};\n\nexport const selectList = listId => {\n  return {\n    type: types.SELECT_LIST,\n    listId\n  };\n};\n\nexport const selectCard = cardId => {\n  return {\n    type: types.SELECT_CARD,\n    cardId\n  };\n};\n","export const SELECT_BOARD = 'SELECT_BOARD';\nexport const SELECT_LIST = 'SELECT_LIST';\nexport const SELECT_CARD = 'SELECT_CARD';\n","export const getCurrentBoardId = state => {\n  return state.current.boardId;\n};\n\nexport const getCurrentListId = state => {\n  return state.current.listId;\n};\n\nexport const getCurrentCardId = state => {\n  return state.current.cardId;\n};\n\nexport const getCurrent = state => {\n  return state.current;\n};\n","import React, { Component } from 'react';\n\nexport default class BoardGrid extends Component {\n  render() {\n    return <ul className=\"board-grid\">{this.props.children}</ul>;\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BoardTile = props => {\n  const { boardId, boardTitle, onClick } = props;\n  return (\n    <li className=\"board-grid__tile\">\n      <Link\n        className=\"board-grid__link\"\n        to={`/home/board/${boardId}`}\n        onClick={onClick}\n      >\n        <span className=\"board-grid__title\">{boardTitle}</span>\n      </Link>\n    </li>\n  );\n};\n\nexport default BoardTile;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadBoardsById = boardsById => {\n  return {\n    type: types.LOAD_BOARDS_BY_ID,\n    boardsById\n  };\n};\n\nexport const fetchBoardsById = userId => {\n  return async dispatch => {\n    try {\n      const boardsById = await firebase.db\n        .collection('boards')\n        .where('memberIds', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const boardsById = {};\n          snapshot.forEach(doc => {\n            boardsById[doc.id] = doc.data();\n          });\n          return boardsById;\n        });\n      dispatch(loadBoardsById(boardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateBoardsById = board => {\n  return {\n    type: types.UPDATE_BOARDS_BY_ID,\n    board\n  };\n};\n\nexport const reorderLists = (boardId, listIds) => {\n  return {\n    type: types.REORDER_LISTS,\n    boardId,\n    listIds\n  };\n};\n\nexport const updateListIds = (boardId, listIds) => {\n  return {\n    type: types.UPDATE_LIST_IDS,\n    boardId,\n    listIds\n  };\n};\n","export const LOAD_BOARDS_BY_ID = 'LOAD_BOARDS_BY_ID';\nexport const UPDATE_BOARDS_BY_ID = 'UPDATE_BOARDS_BY_ID';\nexport const REORDER_LISTS = 'REORDER_LISTS';\nexport const UPDATE_LIST_IDS = 'UPDATE_LIST_IDS';\n","export const getBoardsById = state => {\n  return state.boardsById;\n};\n\nexport const getBoardsArray = state => {\n  const { boardsById } = state;\n  return Object.keys(boardsById).map(boardId => {\n    return {\n      boardId,\n      ...boardsById[boardId]\n    };\n  });\n};\n\nexport const getBoard = (state, boardId) => {\n  const { boardsById } = state;\n  return boardsById[boardId];\n};\n","import * as types from './types';\n\nconst boardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_BOARDS_BY_ID: {\n      const { boardsById } = action;\n      return {\n        ...state,\n        ...boardsById\n      };\n    }\n    case types.UPDATE_BOARDS_BY_ID: {\n      const { board } = action;\n      return {\n        ...state,\n        ...board\n      };\n    }\n    case types.UPDATE_LIST_IDS:\n    case types.REORDER_LISTS: {\n      const { boardId, listIds } = action;\n      return {\n        ...state,\n        [boardId]: {\n          ...state[boardId],\n          listIds\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default boardsById;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport BoardGrid from './BoardGrid';\nimport BoardTile from './BoardTile';\nimport './BoardGrid.scss';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\n\nclass BoardGridContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  componentDidMount() {\n    const { userId } = this.props.user;\n    this.listener = this.props.firebase.db\n      .collection('boards')\n      .where('memberIds', 'array-contains', userId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const board = {\n            [change.doc.id]: change.doc.data()\n          };\n          this.props.updateBoardsById(board);\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  }\n\n  render() {\n    const { boardIds, userId } = this.props.user;\n    const { boardsArray, selectBoard } = this.props;\n    const boardTiles = boardsArray.map(board => {\n      const { boardTitle, boardId } = board;\n      return (\n        <BoardTile\n          key={boardId}\n          boardTitle={boardTitle}\n          boardId={boardId}\n          onClick={() => selectBoard(boardId)}\n        />\n      );\n    });\n    return (\n      <section>\n        <BoardGrid>\n          {boardTiles}\n          <button\n            type=\"button\"\n            className=\"board-grid__tile board-grid__btn--add\"\n            onClick={this.props.openBoardComposer}\n          >\n            Create new board...\n          </button>\n        </BoardGrid>\n      </section>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUserBoards: boardIds =>\n      dispatch(userActions.updateUserBoards(boardIds)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardGridContainer)\n);\n","export const CARD = 'CARD';\nexport const LIST = 'LIST';\n","export const getCardsById = state => {\n  return state.cardsById;\n};\n\nexport const getCardsArray = (state, ownProps) => {\n  const { cardsById } = state;\n  const { cardIds } = ownProps;\n  return cardIds.map(cardId => cardsById[cardId]);\n};\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadCardsById = cardsById => {\n  return {\n    type: types.LOAD_CARDS_BY_ID,\n    cardsById\n  };\n};\n\nexport const fetchCardsById = boardId => {\n  return async dispatch => {\n    try {\n      const cardsById = await firebase.db\n        .collection('cards')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const cardsById = {};\n          snapshot.forEach(doc => {\n            cardsById[doc.id] = {\n              cardId: doc.id,\n              ...doc.data()\n            };\n          });\n          return cardsById;\n        });\n      dispatch(loadCardsById(cardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateCardsById = card => {\n  return {\n    type: types.UPDATE_CARDS_BY_ID,\n    card\n  };\n};\n","export const ADD_CARD = 'ADD_CARD';\nexport const SET_CARD_DUE_DATE = 'SET_CARD_DUE_DATE';\nexport const ADD_CARD_SUBTASK = 'ADD_CARD_SUBTASK';\nexport const REMOVE_CARD_SUBTASK = 'REMOVE_CARD_SUBTASK';\nexport const CHANGE_CARD_DESCRIPTION = 'CHANGE_CARD_DESCRIPTION';\nexport const SET_CARD_COLOR = 'SET_CARD_COLOR';\nexport const DELETE_CARD = 'DELETE_CARD';\nexport const MOVE_CARD = 'MOVE_CARD';\nexport const LOAD_CARDS_BY_ID = 'LOAD_CARDS_BY_ID';\nexport const UPDATE_CARDS_BY_ID = 'UPDATE_CARDS_BY_ID';\n","import * as types from './types';\n\nconst cardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_CARDS_BY_ID: {\n      const { cardsById } = action;\n      return {\n        ...state,\n        ...cardsById\n      };\n    }\n    case types.UPDATE_CARDS_BY_ID: {\n      const { card } = action;\n      return {\n        ...state,\n        ...card\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default cardsById;\n","import React, { Component } from 'react';\n\nexport default class Popover extends Component {\n  componentDidMount() {\n    document.addEventListener('click', this.handleOutsideClick, false);\n  }\n\n  handleOutsideClick = e => {\n    const { onOutsideClick } = this.props;\n    onOutsideClick(e.target);\n    e.preventDefault();\n    document.removeEventListener('click', this.handleOutsideClick);\n  };\n\n  render() {\n    const { className, onClick, style, children } = this.props;\n    return (\n      <div className={`popover ${className}`} onClick={onClick} style={style}>\n        {children}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from '../Button';\nimport Popover from './Popover';\nimport './Popover.scss';\n\nexport default class PopoverWrapper extends Component {\n  state = {\n    isOpen: false\n  };\n\n  static defaultProps = {\n    wrapperClass: '',\n    popoverClass: '',\n    buttonProps: {},\n    align: 'left',\n    anchorEl: null\n  };\n\n  handleOutsideClick = target => {\n    if (!this.componentEl.contains(target)) {\n      this.setState({\n        isOpen: false\n      });\n    }\n  };\n\n  toggleOpen = () => {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  };\n\n  render() {\n    const {\n      children,\n      innerAlign,\n      outerAlign,\n      buttonProps,\n      wrapperClass,\n      popoverClass,\n      anchorEl\n    } = this.props;\n    const { isOpen } = this.state;\n\n    let popoverWrapperStyle = null;\n    \n    if (anchorEl) {\n      const { offsetTop, offsetLeft } = anchorEl;\n      popoverWrapperStyle = {\n        position: 'absolute',\n        top: offsetTop,\n        [outerAlign]: offsetLeft\n      };\n    }\n\n    return (\n      <div\n        className={`popover-wrapper ${wrapperClass}`}\n        ref={el => (this.componentEl = el)}\n        style={popoverWrapperStyle}\n      >\n        <Button type=\"button\" onClick={this.toggleOpen} {...buttonProps} />\n        {isOpen && (\n          <Popover\n            className={`align-${innerAlign} ${popoverClass}`}\n            onClick={this.toggleOpen}\n            onOutsideClick={this.handleOutsideClick}\n          >\n            {children}\n          </Popover>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './Menu.scss';\n\nconst Menu = ({ children, onClick, className = '' }) => {\n  return <ul className={`menu ${className}`} onClick={onClick}>{children}</ul>;\n};\n\nexport default Menu;\n","import React from 'react';\nimport './Menu.scss';\n\nconst MenuItem = ({ children, className = '' }) => {\n  return <li className={`menu__item ${className}`}>{children}</li>;\n};\n\nexport default MenuItem;\n","import React, { Component } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport './Card.scss';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { PopoverWrapper } from '../Popover';\nimport { Menu, MenuItem } from '../Menu';\n\nexport default class Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleCardClick = e => {\n    if (e.target.matches('button') || e.target.matches('a')) return;\n    const { cardId, onCardClick } = this.props;\n    onCardClick(cardId);\n  };\n\n  handleMoreActions = e => {\n    if (!e.target.matches('a')) return;\n    const { action } = e.target.dataset;\n    const { cardId, onCardDelete } = this.props;\n    switch (action) {\n      case 'delete':\n        onCardDelete(cardId);\n        break;\n    }\n    e.preventDefault(); // prevents page reload\n  };\n\n  render() {\n    const { cardTitle, cardId, cardIndex } = this.props;\n    return (\n      <Draggable draggableId={cardId} index={cardIndex}>\n        {provided => (\n          <>\n            <div\n              className=\"card\"\n              onClick={this.handleCardClick}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              ref={provided.innerRef}\n            >\n              <div className=\"card__header\" ref={el => (this.headerEl = el)}>\n                <PopoverWrapper\n                  wrapperClass=\"card__popover-wrapper\"\n                  popoverClass=\"card__popover\"\n                  outerAlign=\"right\"\n                  innerAlign=\"left\"\n                  buttonProps={{\n                    size: 'small',\n                    iconOnly: true,\n                    className: 'card__btn--more-actions',\n                    children: <Icon name=\"more-horizontal\" />\n                  }}\n                  anchorEl={this.headerEl}\n                >\n                  <Menu onClick={this.handleMoreActions}>\n                    <MenuItem>\n                      <a href=\"\" data-action=\"delete\">\n                        Delete\n                      </a>\n                    </MenuItem>\n                  </Menu>\n                </PopoverWrapper>\n                <div className=\"card__tags\" />\n                <h3 className=\"card__title\">{cardTitle}</h3>\n              </div>\n              <div className=\"card__footer\">\n                <div className=\"card__labels\" />\n              </div>\n            </div>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n","import React from 'react';\nimport './Textarea.scss';\n\nconst Textarea = props => {\n  return (\n    <textarea\n      className={`textarea ${props.className}`}\n      id={props.name}\n      name={props.name}\n      value={props.value}\n      onChange={props.onChange}\n      placeholder={props.placeholder}\n      required={props.isRequired}\n      onBlur={props.onBlur}\n    />\n  );\n};\n\nexport default Textarea;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon } from '../Icon';\nimport { withAuthorization } from '../Session';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport './CardComposer.scss';\n\nconst INITIAL_STATE = {\n  cardTitle: '',\n  isActive: false\n};\n\nclass CardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ cardTitle: '' });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { cardTitle } = this.state;\n    const { boardId } = this.props.current;\n    const { listId } = this.props;\n    this.props.firebase.addCard({ boardId, listId, cardTitle });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onBlur = e => {\n    if (e.target.value !== '') return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const { cardTitle, isActive } = this.state;\n\n    return (\n      <div\n        className={`card-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"card-composer__form\" onSubmit={this.onSubmit}>\n          <Textarea\n            onChange={this.onChange}\n            value={cardTitle}\n            placeholder={isActive ? 'Enter card title...' : 'Add a card'}\n            isRequired\n            name=\"cardTitle\"\n            className=\"card-composer__textarea\"\n          />\n          {isActive && (\n            <div className=\"card-composer__footer\">\n              <Button\n                className=\"card-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add Card\n              </Button>\n              <Button\n                className=\"card-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"small\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardComposer)\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { Card } from '../Card';\n\nexport default class Cards extends Component {\n  static propTypes = {\n    listId: PropTypes.string.isRequired\n  };\n\n  render() {\n    const { listId, cards, style, onCardClick, onCardDelete } = this.props;\n    return (\n      <Droppable droppableId={listId} type={droppableTypes.CARD}>\n        {provided => (\n          <div\n            className=\"list__content\"\n            ref={provided.innerRef}\n            style={style}\n            {...provided.droppableProps}\n          >\n            {cards.map((card, cardIndex) => {\n              const { cardId, cardTitle } = card;\n              return (\n                <Card\n                  key={cardId}\n                  cardTitle={cardTitle}\n                  cardId={cardId}\n                  cardIndex={cardIndex}\n                  listId={listId}\n                  onCardClick={onCardClick}\n                  onCardDelete={onCardDelete}\n                />\n              );\n            })}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { CardComposer } from '../Card';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\nimport { Input } from '../Input';\nimport Cards from './Cards';\nimport './List.scss';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDragging: this.props.isDragging,\n      listTitle: this.props.listTitle,\n      viewportHeight: window.innerHeight\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  handleResize = () => {\n    this.setState({\n      viewportHeight: window.innerHeight\n    });\n  };\n\n  handleCardDelete = cardId => {\n    const { listId, firebase } = this.props;\n    firebase.deleteCard({ cardId, listId });\n  };\n\n  handleListDelete = e => {\n    e.preventDefault();\n\n    const { listId, boardId, firebase } = this.props;\n    firebase.deleteList({ listId, boardId });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onBlur = e => {\n    const { listTitle, listId, firebase } = this.props;\n    const { listTitle: newListTitle } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newListTitle !== listTitle) {\n      firebase.updateList(listId, {\n        listTitle: newListTitle\n      });\n      console.log('updated!');\n    }\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  render() {\n    const {\n      cards,\n      onCardClick,\n      listId,\n      listIndex,\n      isFetchingCards\n    } = this.props;\n    if (isFetchingCards) return null;\n\n    const { listTitle, viewportHeight } = this.state;\n    const listContentHeight = {};\n    \n    if (this.listHeaderEl) {\n      const { bottom } = this.listHeaderEl.getBoundingClientRect();\n      listContentHeight.maxHeight = viewportHeight - (bottom + 80);\n    }\n\n    return (\n      <Draggable draggableId={listId} index={listIndex}>\n        {provided => (\n          <>\n            <section\n              className=\"list\"\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <header className=\"list__header\" ref={el => (this.listHeaderEl = el)}>\n                <Input\n                  className=\"list__input--title\"\n                  name=\"listTitle\"\n                  type=\"text\"\n                  value={listTitle}\n                  onChange={this.onChange}\n                  required\n                  hideLabel\n                  onBlur={this.onBlur}\n                />\n                <PopoverWrapper\n                  wrapperClass=\"list__popover-wrapper\"\n                  popoverClass=\"list__popover\"\n                  align=\"left\"\n                  buttonProps={{\n                    size: 'medium',\n                    iconOnly: true,\n                    className: 'list__btn--more-actions',\n                    children: <Icon name=\"more-vertical\" />\n                  }}\n                >\n                  <Menu>\n                    <MenuItem>\n                      <a href=\"\" onClick={this.handleListDelete}>\n                        Delete\n                      </a>\n                    </MenuItem>\n                  </Menu>\n                </PopoverWrapper>\n              </header>\n              <Cards\n                cards={cards}\n                listId={listId}\n                onCardClick={onCardClick}\n                onCardDelete={this.handleCardDelete}\n                style={listContentHeight}\n              />\n              {provided.placeholder}\n              <CardComposer listId={listId} />\n            </section>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state),\n    cards: cardSelectors.getCardsArray(state, ownProps)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => dispatch(userActions.getUserData(userId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(List)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input } from '../Input';\nimport { Icon } from '../Icon';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Button } from '../Button';\nimport './ListComposer.scss';\n\nconst INITIAL_STATE = {\n  listTitle: '',\n  isActive: false\n};\n\nclass ListComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ listTitle: '' });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { listTitle } = this.state;\n    const { boardId } = this.props;\n    this.props.firebase.addList({ boardId, listTitle });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = e => {\n    if (e.target.value === '') {\n      this.setState({\n        isActive: false\n      });\n    }\n  };\n\n  render() {\n    const { listTitle, isActive } = this.state;\n    return (\n      <div\n        className={`list-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"list-composer__form\" onSubmit={this.onSubmit}>\n          <Input\n            onChange={this.onChange}\n            value={listTitle}\n            placeholder={isActive ? 'Enter list title...' : 'Add a list'}\n            required={true}\n            name=\"listTitle\"\n            hideLabel={true}\n            className=\"list-composer__input\"\n          />\n          {isActive && (\n            <div className=\"list-composer__footer\">\n              <Button\n                className=\"list-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add List\n              </Button>\n              <Button\n                className=\"list-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"small\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => dispatch(userActions.getUserData(userId)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListComposer)\n);\n","import React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { ListComposer } from '../List';\n\nconst Board = props => {\n  const { boardId, children } = props;\n  return (\n    <Droppable\n      droppableId={boardId}\n      type={droppableTypes.LIST}\n      direction=\"horizontal\"\n    >\n      {provided => (\n        <div\n          className=\"board\"\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n        >\n          {children}\n          {provided.placeholder}\n          <ListComposer boardId={boardId} />\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nexport default Board;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadListsById = listsById => {\n  return {\n    type: types.LOAD_LISTS_BY_ID,\n    listsById\n  };\n};\n\nexport const fetchListsById = boardId => {\n  return async dispatch => {\n    try {\n      const listsById = await firebase.db\n        .collection('lists')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const listsById = {};\n          snapshot.forEach(doc => {\n            listsById[doc.id] = doc.data();\n          });\n          return listsById;\n        });\n      dispatch(loadListsById(listsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateListsById = list => {\n  return {\n    type: types.UPDATE_LISTS_BY_ID,\n    list\n  };\n};\n","export const LOAD_LISTS_BY_ID = 'LOAD_LISTS_BY_ID';\nexport const FETCH_LISTS_BY_ID = 'FETCH_LISTS_BY_ID';\nexport const UPDATE_LISTS_BY_ID = 'UPDATE_LISTS_BY_ID';\nexport const DELETE_CARD = 'DELETE_CARD';\n","export const getListsById = state => {\n  return state.listsById;\n};\n\nexport const getListsArray = state => {\n  const { listsById, boardsById, current } = state;\n  const { boardId } = current;\n  const board = boardsById[boardId];\n  if (!board) return null;\n  const { listIds } = board;\n\n  return listIds.map(listId => {\n    return {\n      listId,\n      ...listsById[listId]\n    };\n  });\n};\n","import * as types from './types';\n\nconst listsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_LISTS_BY_ID: {\n      const { listsById } = action;\n      return {\n        ...state,\n        ...listsById\n      };\n    }\n    case types.UPDATE_LISTS_BY_ID: {\n      const { list } = action;\n      return {\n        ...state,\n        ...list\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default listsById;\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport './Modal.scss';\n\nconst Modal = ({ onModalClose, children, className=\"\", onModalClick, size=\"medium\" }) => {\n  return (\n    <div className=\"modal\" onClick={onModalClick}>\n      <div className={`modal__content ${className} ${size}`}>\n        <button\n          type=\"button\"\n          className=\"modal__btn--close\"\n          onClick={onModalClose}\n        >\n          <Icon name=\"x\" />\n        </button>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { Input } from '../Input';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { Modal } from '../Modal';\nimport './CardEditor.scss';\n\nclass CardEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cardId: this.props.card.cardId,\n      cardTitle: this.props.card.cardTitle,\n      cardDescription: this.props.card.cardDescription,\n      cardComment: '',\n      currentFocus: null,\n      isCommentFormFocused: false\n    };\n    this.commentFormRef = null;\n    this.subtaskFormRef = null;\n    this.setCommentFormRef = element => {\n      this.commentFormRef = element;\n    };\n    this.setSubtaskFormRef = element => {\n      this.subtaskFormRef = element;\n    };\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n    console.log('changed');\n  };\n\n  onBlur = e => {\n    const { card, firebase } = this.props;\n    const { cardTitle, cardDescription, currentFocus } = this.state;\n    const cardKey = e.target.name;\n\n    // When field loses focus, update card if change is detected\n\n    if (this.state[cardKey] !== card[cardKey]) {\n      const { cardId } = card;\n      firebase.updateCard(cardId, {\n        [cardKey]: this.state[cardKey]\n      });\n      console.log('updated!');\n    }\n\n    this.setState({\n      currentFocus: null\n    });\n  };\n\n  onSubmitComment = e => {\n    console.log(e.target.value);\n\n    e.preventDefault();\n  };\n\n  onFocus = e => {\n    this.setState({\n      currentFocus: e.target.name\n    });\n  };\n\n  handleModalClick = e => {\n    const { currentFocus } = this.state;\n    if (\n      (currentFocus === 'cardComment' &&\n        !this.commentFormRef.contains(e.target)) ||\n      (currentFocus === 'cardSubtask' &&\n        !this.subtaskFormRef.contains(e.target))\n    ) {\n      this.setState({\n        currentFocus: null\n      });\n    }\n  };\n\n  render() {\n    const { onCardEditorClose, user } = this.props;\n    console.log({user});\n    const {\n      cardTitle,\n      cardDescription,\n      cardComment,\n      currentFocus,\n      cardSubtask\n    } = this.state;\n    const isInvalid = cardComment === '';\n    const commentFormIsFocused = currentFocus === 'cardComment';\n\n    return (\n      <Modal\n        onModalClose={onCardEditorClose}\n        className=\"card-editor\"\n        onModalClick={this.handleModalClick}\n      >\n        <form\n          name=\"editCardForm\"\n          onFocus={this.onFocus}\n          className=\"card-editor__edit-card-form\"\n        >\n          <Input\n            className=\"card-editor__input--title\"\n            name=\"cardTitle\"\n            type=\"text\"\n            value={cardTitle}\n            onChange={this.onChange}\n            required\n            hideLabel\n            onBlur={this.onBlur}\n            onFocus={this.onFocus}\n          />\n          <div\n            className={`card-editor__section ${\n              currentFocus === 'cardDescription' ? 'is-focused' : ''\n            }`}\n          >\n            <div className=\"card-editor__section-icon\">\n              <Icon name=\"edit-3\" />\n            </div>\n            <Textarea\n              className=\"card-editor__textarea--description\"\n              name=\"cardDescription\"\n              value={cardDescription}\n              onChange={this.onChange}\n              placeholder=\"Add a description\"\n              onBlur={this.onBlur}\n              onFocus={this.onFocus}\n            />\n          </div>\n        </form>\n        <div\n          className={`card-editor__section ${\n            currentFocus === 'cardSubtask' ? 'is-focused' : ''\n          }`}\n        >\n          <hr className=\"card-editor__hr\" />\n          <div className=\"card-editor__section-icon\">\n            <Icon name=\"check-square\" />\n          </div>\n          <form\n            name=\"subtaskForm\"\n            className={`card-editor__subtask-form ${\n              currentFocus === 'cardSubtask' ? 'is-focused' : ''\n            }`}\n            onFocus={this.onFocus}\n            ref={this.setSubtaskFormRef}\n          >\n            <Textarea\n              className=\"card-editor__textarea--subtask\"\n              name=\"cardSubtask\"\n              value={cardSubtask}\n              onChange={this.onChange}\n              placeholder=\"Add a subtask\"\n            />\n            {currentFocus === 'cardSubtask' && (\n              <Button\n                type=\"submit\"\n                color=\"secondary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isInvalid}\n                onClick={this.submitSubtask}\n                className=\"card-editor__btn--submit-subtask\"\n              >\n                Add subtask\n              </Button>\n            )}\n          </form>\n        </div>\n        <div\n          className={`card-editor__section ${\n            commentFormIsFocused ? 'is-focused' : ''\n          }`}\n        >\n          <hr className=\"card-editor__hr\" />\n          <div className=\"card-editor__section-icon\">\n            <Icon name=\"message-circle\" />\n          </div>\n          <form\n            name=\"commentForm\"\n            className={`card-editor__comment-form ${\n              commentFormIsFocused ? 'is-focused' : ''\n            }`}\n            onFocus={this.onFocus}\n            ref={this.setCommentFormRef}\n          >\n            <Textarea\n              className=\"card-editor__textarea--comment\"\n              name=\"cardComment\"\n              value={cardComment}\n              onChange={this.onChange}\n              placeholder=\"Write a comment...\"\n            />\n            {commentFormIsFocused && (\n              <Button\n                type=\"submit\"\n                color=\"secondary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isInvalid}\n                onClick={this.onSubmitComment}\n                name=\"cardCommentSubmit\"\n                className=\"card-editor__btn--submit-comment\"\n              >\n                Comment\n              </Button>\n            )}\n          </form>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    current: currentSelectors.getCurrent(state),\n    listsById: listSelectors.getListsById(state),\n    listsArray: listSelectors.getListsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId)),\n    updateListsById: list => dispatch(listActions.updateListsById(list)),\n    updateCardsById: card => dispatch(cardActions.updateCardsById(card)),\n    reorderLists: (boardId, listIds) =>\n      dispatch(boardActions.reorderLists(boardId, listIds))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardEditor)\n);\n","\n/**\n * Checks if two arrays or objects are equal\n * @param {Array|Object} value\n * @param {Array|Object} other\n */\n\n// eslint-disable-next-line import/prefer-default-export\nexport const isEqual = (value, other) => {\n  const type = Object.prototype.toString.call(value);\n\n  // If both objects are not the same type, return false\n  if (type !== Object.prototype.toString.call(other)) return false;\n\n  const typeObj = '[object Object]';\n  const typeArr = '[object Array]';\n  // If items are neither objects nor arrays, return false\n  if (type !== typeObj && type !== typeArr) return false;\n\n  // Compare length of two items\n  const valueLen = type === typeArr ? value.length : Object.keys(value).length;\n  const otherLen = type === typeArr ? other.length : Object.keys(other).length;\n  if (valueLen !== otherLen) return false;\n\n  const compare = (item1, item2) => {\n    const typeFunc = '[object Function]';\n    const itemType = Object.prototype.toString.call(item1);\n    if (itemType !== Object.prototype.toString.call(item2)) return false;\n    if (itemType === typeObj || itemType === typeArr) {\n      return isEqual(item1, item2);\n    }\n    if (itemType === typeFunc) {\n      return item1.toString() === item2.toString();\n    }\n    return item1 === item2;\n  };\n\n  if (type === typeArr) {\n    for (let i = 0; i < valueLen; i++) {\n      if (!compare(value[i], other[i])) return false;\n    }\n  } else {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (compare(value[key], other[key]) === false) return false;\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * Delays callback execution until next browser repaint\n * Best used for `scroll` and `resize` window events\n * @param {Function} callback - The function to debounce\n */\n\nexport const windowDebouncer = callback => {\n  let request;\n\n  return (...args) => {\n    const context = this;\n\n    if (request) {\n      window.cancelAnimationFrame(request);\n    }\n\n    request = window.requestAnimationFrame(() => {\n      callback.apply(context, args);\n    });\n  };\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport * as ROUTES from '../../constants/routes';\nimport Board from './Board';\nimport { Input } from '../Input';\nimport { List } from '../List';\nimport { CardEditor } from '../CardEditor';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { utils } from '../../utils';\nimport './Board.scss';\n\nclass BoardContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: true,\n      isDragging: false,\n      isCardEditorOpen: false,\n      boardTitle: this.props.boardTitle\n    };\n  }\n\n  componentDidMount() {\n    const {\n      current,\n      fetchListsById,\n      fetchCardsById,\n      firebase,\n      updateBoardsById,\n      updateListsById,\n      updateCardsById,\n      boardId,\n      board,\n      updateListIds\n    } = this.props;\n\n    if (current.boardId !== boardId) {\n      this.props.selectBoard(boardId);\n    }\n\n    fetchListsById(boardId);\n    fetchCardsById(boardId).then(() => {\n      this.setState({\n        isFetching: false\n      });\n    });\n    this.boardObserver = firebase.getBoardDoc(boardId).onSnapshot(snapshot => {\n      const updatedBoard = snapshot.data();\n      if (!utils.isEqual(updatedBoard.listIds, board.listIds)) {\n        updateListIds(boardId, updatedBoard.listIds);\n      }\n    });\n    this.listObserver = firebase.db\n      .collection('lists')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const list = {\n            [change.doc.id]: change.doc.data()\n          };\n          updateListsById(list);\n        });\n      });\n    this.cardObserver = firebase.db\n      .collection('cards')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const card = {\n            [change.doc.id]: {\n              cardId: change.doc.id,\n              ...change.doc.data()\n            }\n          };\n          updateCardsById(card);\n        });\n      });\n    console.log('mounted');\n  }\n\n  componentWillUnmount() {\n    this.boardObserver();\n    this.listObserver();\n    this.cardObserver();\n  }\n\n  onDragStart = () => {\n    this.setState({\n      isDragging: true\n    });\n  };\n\n  onDragEnd = ({ destination, draggableId, source, type }) => {\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    const { firebase } = this.props;\n    if (type === droppableTypes.CARD) {\n      const { listsById } = this.props;\n      const isMovedWithinList = source.droppableId === destination.droppableId;\n      const updatedCardIds = [...listsById[destination.droppableId].cardIds];\n      if (isMovedWithinList) {\n        updatedCardIds.splice(source.index, 1);\n        updatedCardIds.splice(destination.index, 0, draggableId);\n        firebase.updateList(source.droppableId, {\n          cardIds: updatedCardIds\n        });\n      } else {\n        updatedCardIds.splice(destination.index, 0, draggableId);\n        firebase.moveCardToList({\n          cardId: draggableId,\n          origListId: source.droppableId,\n          newListId: destination.droppableId,\n          updatedCardIds\n        });\n      }\n    }\n\n    if (type === droppableTypes.LIST) {\n      const { boardsById, current, reorderLists } = this.props;\n      const { boardId } = current;\n      const updatedListIds = [...boardsById[boardId].listIds];\n      updatedListIds.splice(source.index, 1);\n      updatedListIds.splice(destination.index, 0, draggableId);\n      firebase.updateBoard(boardId, {\n        listIds: updatedListIds\n      });\n      reorderLists(boardId, updatedListIds);\n    }\n\n    this.setState({\n      isDragging: false\n    });\n  };\n\n  toggleCardEditor = () => {\n    this.setState(prevState => ({\n      isCardEditorOpen: !prevState.isCardEditorOpen\n    }));\n  };\n\n  handleCardClick = cardId => {\n    this.props.selectCard(cardId);\n    this.toggleCardEditor();\n  };\n\n  onTitleChange = e => {\n    this.setState({\n      boardTitle: e.target.value\n    });\n  };\n\n  onTitleBlur = e => {\n    const { boardTitle, boardId, firebase } = this.props;\n    const { boardTitle: newBoardTitle } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newBoardTitle !== boardTitle) {\n      firebase.updateBoard(boardId, {\n        boardTitle: newBoardTitle\n      });\n      console.log('updated!');\n    }\n  };\n\n  render() {\n    const { isFetching, isCardEditorOpen } = this.state;\n    const {\n      current,\n      boardsById,\n      listsArray,\n      cardsById,\n      boardId,\n      board\n    } = this.props;\n    if (isFetching) return null;\n    const { cardId } = current;\n    const { boardTitle } = board;\n    const lists = listsArray.map((list, listIndex) => {\n      const { listId, listTitle, cardIds } = list;\n      return (\n        <List\n          listId={listId}\n          key={listId}\n          listIndex={listIndex}\n          listTitle={listTitle}\n          cardIds={cardIds}\n          isFetchingCards={this.state.isFetching}\n          isDragging={this.state.isDragging}\n          onCardClick={this.handleCardClick}\n          boardId={boardId}\n        />\n      );\n    });\n\n    return (\n      <main className=\"board-container\">\n        <Input\n          className=\"board__input--title\"\n          name=\"boardTitle\"\n          type=\"text\"\n          value={boardTitle}\n          onChange={this.onTitleChange}\n          required\n          hideLabel\n          onBlur={this.onTitleBlur}\n        />\n        <DragDropContext\n          onDragEnd={this.onDragEnd}\n          onDragStart={this.onDragStart}\n        >\n          <Board boardId={boardId}>{lists}</Board>\n        </DragDropContext>\n        {isCardEditorOpen && (\n          <CardEditor\n            card={cardsById[cardId]}\n            onCardEditorClose={this.toggleCardEditor}\n          />\n        )}\n      </main>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    current: currentSelectors.getCurrent(state),\n    listsById: listSelectors.getListsById(state),\n    listsArray: listSelectors.getListsArray(state),\n    cardsById: cardSelectors.getCardsById(state),\n    board: boardSelectors.getBoard(state, ownProps.boardId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId)),\n    selectCard: cardId => dispatch(currentActions.selectCard(cardId)),\n    fetchListsById: boardId => dispatch(listActions.fetchListsById(boardId)),\n    updateListsById: list => dispatch(listActions.updateListsById(list)),\n    fetchCardsById: boardId => dispatch(cardActions.fetchCardsById(boardId)),\n    updateCardsById: card => dispatch(cardActions.updateCardsById(card)),\n    reorderLists: (boardId, listIds) =>\n      dispatch(boardActions.reorderLists(boardId, listIds)),\n    updateListIds: (boardId, listIds) =>\n      dispatch(boardActions.updateListIds(boardId, listIds))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardContainer)\n);\n","import React, { Component } from 'react';\nimport { Modal } from '../Modal';\nimport { Input } from '../Input';\n\nconst INITIAL_STATE = {\n  boardTitle: ''\n};\n\nexport default class BoardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { boardTitle } = this.state;\n    const { handleSubmit, onClose } = this.props;\n    this.props.handleSubmit(boardTitle);\n    this.props.onClose();\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { boardTitle } = this.state;\n    return (\n      <Modal onModalClose={this.props.onClose}>\n        <form onSubmit={this.onSubmit}>\n          <Input\n            name=\"boardTitle\"\n            title=\"Board Title\"\n            value={boardTitle}\n            onChange={this.onChange}\n            type=\"text\"\n          />\n          <button type=\"submit\">Create Board</button>\n        </form>\n      </Modal>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { withAuthorization } from '../Session';\nimport * as ROUTES from '../../constants/routes';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { currentSelectors } from '../../ducks/current';\nimport { BoardGridContainer } from '../BoardGrid';\nimport { BoardComposer } from '../Board';\nimport { BoardContainer } from '../Board';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport './Home.scss';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isBoardComposerOpen: false,\n      isFetching: true\n    };\n  }\n\n  componentDidMount() {\n    const userId = this.props.firebase.auth.currentUser.uid;\n    console.log('mounted home');\n    this.props.fetchUserData(userId);\n    this.props.fetchBoardsById(userId).then(() =>\n      this.setState({\n        isFetching: false\n      })\n    );\n  }\n\n  toggleBoardComposer = () => {\n    this.setState(prevState => ({\n      isBoardComposerOpen: !prevState.isBoardComposerOpen\n    }));\n  };\n\n  createBoard = boardTitle => {\n    const userId = this.props.user.userId;\n    this.props.firebase.addBoard({ userId, boardTitle });\n  };\n\n  render() {\n    const { isBoardComposerOpen, isFetching } = this.state;\n    const userId = this.props.user.userId;\n    if (isFetching) return null;\n    return (\n      <>\n        {isBoardComposerOpen && (\n          <BoardComposer\n            onClose={this.toggleBoardComposer}\n            handleSubmit={this.createBoard}\n          />\n        )}\n        <Switch>\n          <Route\n            exact\n            path={ROUTES.HOME}\n            render={() => (\n              <main className=\"main\">\n                <h1>Home</h1>\n                {userId && (\n                  <BoardGridContainer\n                    openBoardComposer={this.toggleBoardComposer}\n                  />\n                )}\n              </main>\n            )}\n          />\n          <Route\n            path={ROUTES.BOARD}\n            render={props => <BoardContainer boardId={props.match.params.id} {...props} />}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    currentBoardId: currentSelectors.getCurrentBoardId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUserData: userId => dispatch(userActions.fetchUserData(userId)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(HomePage)\n);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .passwordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n    const isInvalid = passwordOne === '' || passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"passwordOne\"\n          title=\"New Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          title=\"Confirm New Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"large\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Change My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React from 'react';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport { PasswordChangeForm } from '../PasswordChange';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport './Account.scss';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <main className=\"account\">\n        <h1>Account: {authUser.email}</h1>\n        <section className=\"account__section\">\n        <h2>Forgot your password?</h2>\n          <PasswordForgetForm />\n        </section>\n        <section className=\"account__section\">\n        <h2>Change your password.</h2>\n          <PasswordChangeForm />\n        </section>\n      </main>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(AccountPage);\n","import React, { Component } from 'react';\nimport { Navbar } from '../Navbar';\nimport './Header.scss';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <Navbar />\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport { Navbar } from '../Navbar';\nimport * as ROUTES from '../../constants/routes';\nimport { LandingPage } from '../Landing';\nimport { SignUpPage } from '../SignUp';\nimport { SignInPage } from '../SignIn';\nimport { PasswordForgetPage } from '../PasswordForget';\nimport { HomePage } from '../Home';\nimport { AccountPage } from '../Account';\nimport { AdminPage } from '../Admin';\nimport { withAuthentication } from '../Session';\nimport { Header } from '../Header';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Header />\n        <Switch>\n          <Route exact path={ROUTES.LANDING} component={LandingPage} />\n          <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n          <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n          <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n          <Route path={ROUTES.HOME} component={HomePage} />\n          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n          <Route path={ROUTES.ADMIN} component={AdminPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { boardsById } from '../ducks/boards';\nimport { cardsById } from '../ducks/cards';\nimport { listsById } from '../ducks/lists';\nimport { user } from '../ducks/user';\nimport { current } from '../ducks/current';\n\nexport default combineReducers({\n  boardsById,\n  cardsById,\n  listsById,\n  user,\n  current\n});\n","import * as types from './types';\n\nconst current = (state = {}, action) => {\n  switch (action.type) {\n    case types.SELECT_BOARD: {\n      const { boardId } = action;\n      return {\n        ...state,\n        boardId\n      };\n    }\n    case types.SELECT_LIST: {\n      const { listId } = action;\n      return {\n        ...state,\n        listId\n      };\n    }\n    case types.SELECT_CARD: {\n      const { cardId } = action;\n      return {\n        ...state,\n        cardId\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport { current };\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\n\nexport default history;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport 'normalize.css';\nimport './index.scss';\nimport { App } from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { FirebaseContext } from './components/Firebase';\nimport reducers from './store/reducers';\nimport firebase from './store/firebase';\nimport history from './store/history';\n\nconst store = createStore(reducers, {}, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <FirebaseContext.Provider value={firebase}>\n      <Router basename={process.env.PUBLIC_URL} history={history}>\n        <App />\n      </Router>\n    </FirebaseContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}