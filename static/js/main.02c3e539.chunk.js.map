{"version":3,"sources":["assets/feather/feather-sprite.svg","components/Firebase/context.js","components/Firebase/Firebase.js","constants/routes.js","components/Button/Button.js","components/SignOut/SignOutButton.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Icon/Icon.js","components/Navbar/Navbar.js","components/Input/Input.js","components/SignUp/SignUpForm.js","components/UserFormPage/UserFormPage.js","components/SignUp/SignUp.js","components/SignUp/index.js","components/SignIn/SignInForm.js","components/PasswordForget/PasswordForgetForm.js","components/PasswordForget/PasswordForget.js","components/PasswordForget/index.js","components/SignIn/SignIn.js","store/firebase.js","ducks/user/actions.js","ducks/user/types.js","ducks/user/selectors.js","ducks/user/reducers.js","ducks/current/actions.js","ducks/current/types.js","ducks/current/selectors.js","components/BoardGrid/BoardGrid.js","components/BoardGrid/BoardTile.js","ducks/boards/actions.js","ducks/boards/types.js","ducks/boards/selectors.js","ducks/boards/reducers.js","components/BoardGrid/BoardGridContainer.js","components/Modal/Modal.js","components/BoardComposer/BoardComposer.js","constants/droppableTypes.js","components/ListComposer/ListComposer.js","components/Board/Board.js","ducks/lists/actions.js","ducks/lists/types.js","ducks/lists/selectors.js","ducks/lists/reducers.js","ducks/cards/selectors.js","ducks/cards/actions.js","ducks/cards/types.js","ducks/cards/reducers.js","ducks/tasks/actions.js","ducks/tasks/types.js","ducks/tasks/selectors.js","ducks/tasks/reducer.js","components/Textarea/Textarea.js","components/CardComposer/CardComposer.js","components/Menu/Menu.js","components/Menu/MenuItem.js","components/Popover/Popover.js","components/Popover/PopoverWrapper.js","components/Card/Card.js","components/List/Cards.js","components/List/List.js","components/Toolbar/Toolbar.jsx","components/Checkbox/Checkbox.js","components/CardEditor/CardEditorMoreActions.js","constants/keys.js","components/CardEditor/CardEditor.js","utils/utils.js","components/Board/BoardContainer.js","components/Home/Home.js","components/PasswordChange/PasswordChangeForm.js","components/Account/Account.js","components/Header/Header.jsx","components/App/App.js","serviceWorker.js","store/reducers.js","ducks/current/reducers.js","store/history.js","index.js"],"names":["module","exports","__webpack_require__","p","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","createUserWithEmailAndPassword","email","password","auth","signInWithEmailAndPassword","signOut","passwordReset","sendPasswordResetEmail","passwordUpdate","newPassword","currentUser","updatePassword","getTimestamp","firestore","FieldValue","serverTimestamp","addToArray","value","arrayUnion","removeFromArray","arrayRemove","getUserDoc","userId","db","collection","doc","addUser","_ref","name","username","_ref$boardIds","boardIds","set","updateUser","newValue","arguments","length","undefined","update","getBoardDoc","boardId","updateBoard","objectSpread","lastModifiedAt","addBoard","_ref2","boardTitle","add","createdAt","listIds","authorId","memberIds","then","ref","id","getListDoc","listId","updateList","addList","_ref3","listTitle","cardIds","deleteList","_ref4","batch","listRef","boardRef","delete","where","get","snapshot","docs","forEach","commit","console","log","catch","error","getCardDoc","cardId","addCard","_ref5","cardTitle","updateCard","deleteCard","_ref6","cardRef","moveCardToList","_ref7","origListId","newListId","updatedCardIds","origListRef","newListRef","getTaskDoc","taskId","addTask","_ref8","_ref8$memberIds","_ref8$boardId","_ref8$cardId","_ref8$dueDate","dueDate","text","isCompleted","createdBy","assignedTo","concat","toConsumableArray","taskIds","updateTask","initializeApp","HOME","Button","children","_ref$type","type","onClick","_ref$className","className","_ref$color","color","_ref$size","size","_ref$variant","variant","disabled","_ref$iconOnly","iconOnly","buttonRef","objectWithoutProperties","defaultProps","components_Button_Button","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","authUser","inherits","createClass","key","_this2","listener","onAuthStateChanged","setState","Session_context","Provider","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","Icon","addClass","trim","xmlns","xmlnsXlink","viewBox","width","height","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","xlinkHref","featherIcons","NavLinksAuth","Fragment","Link","to","ROUTES","components_SignOut_SignOutButton","NavLinksNonAuth","Navbar","viewportWidth","window","innerWidth","isMobileNavVisible","isTouchEnabled","handleResize","toggleMobileNavVisibility","prevState","handleClick","e","minWidth","target","matches","handleOutsideClick","navLinksEl","contains","handleTouch","document","removeEventListener","addEventListener","_this$state","_this$props","navLinksClass","navRef","isMobileView","el","navEl","Icon_Icon","Navbar_NavLinksAuth","Navbar_NavLinksNonAuth","Input","hideLabel","htmlFor","title","onChange","placeholder","required","isRequired","onBlur","INITIAL_STATE","passwordOne","passwordTwo","SignUpForm","onSubmit","user","uid","preventDefault","defineProperty","_this$state2","isInvalid","components_Input_Input","message","UserFormPage","SignUpPage","components_UserFormPage_UserFormPage","SignUp_SignUpForm","SignUpLink","SignInForm","PasswordForgetForm","PasswordForgetPage","PasswordForget_PasswordForgetForm","PasswordForgetLink","SignInPage","SignIn_SignInForm","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","updateUserBoards","loadUserData","fetchUserData","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","data","sent","t0","stop","_x","apply","getUserData","action","selectBoard","selectList","selectCard","getCurrentBoardId","current","getCurrentListId","getCurrentCardId","getCurrent","BoardGrid","BoardTile","loadBoardsById","boardsById","fetchBoardsById","updateBoardsById","board","reorderLists","updateListIds","getBoardsById","getBoardsArray","keys","map","getBoard","BoardGridContainer","onSnapshot","querySnapshot","docChanges","change","_this$props$user","boardsArray","boardTiles","BoardGrid_BoardTile","BoardGrid_BoardGrid","openBoardComposer","connect","userSelectors","boardSelectors","userActions","boardActions","currentActions","Modal","onModalClose","onModalClick","BoardComposer","handleSubmit","onClose","components_Modal_Modal","CARD","LIST","isActive","ListComposer","resetForm","onReset","onFocus","currentSelectors","Board","react_beautiful_dnd_esm","droppableId","droppableTypes","direction","provided","innerRef","droppableProps","components_ListComposer_ListComposer","loadListsById","listsById","fetchListsById","updateListsById","list","getListsById","getListsArray","getCardsById","cardsById","getCardsArray","ownProps","loadCardsById","fetchCardsById","cards","updateCardsById","card","loadTasksById","tasksById","fetchTasksById","tasks","updateTasksById","task","fetchCardTasks","_callee2","_context2","_x2","fetchUserTasks","_callee3","_context3","_x3","taskData","deleteTask","getTasksById","getTasksArray","_toPropertyKey","Textarea","autoHeightResize","isAutoHeightResizeEnabled","textareaEl","style","scrollHeight","createRef","onKeyDown","onInput","CardComposer","Textarea_Textarea_Textarea","Menu","MenuItem","Popover","onOutsideClick","PopoverWrapper","isOpen","componentEl","toggleOpen","alignInner","alignOuter","buttonProps","wrapperClass","popoverClass","anchorEl","popoverWrapperStyle","offsetTop","offsetLeft","position","top","Popover_Popover","align","Card","handleCardClick","onCardClick","_this$props2","cardIndex","draggableId","index","draggableProps","dragHandleProps","headerEl","Cards","scrollToBottom","listEnd","scrollIntoView","prevProps","onCardDelete","minHeight","isDraggingOver","Card_Card_Card","float","clear","List","handleListDelete","newListTitle","isDragging","_this$props3","listIndex","isFetchingCards","viewportHeight","listHeaderEl","PopoverWrapper_PopoverWrapper","components_Menu_Menu","Menu_MenuItem","href","Cards_Cards","handleCardDelete","components_CardComposer_CardComposer","cardSelectors","Toolbar","Checkbox","isChecked","labelClass","checked","CardEditorMoreActions","onMenuClick","data-action","BACKSPACE","CardEditor","updateCardTasks","tasksArray","cardTasks","reduce","onCardEditorClose","cardKey","cardDescription","currentFocus","onSubmitComment","resetNewTaskForm","newTask","handleModalClick","commentFormRef","newTaskFormEl","handleMoreActions","dataset","onTaskChange","handleCheckboxChange","toggleTaskCompletion","cardComment","isCommentFormFocused","setCommentFormRef","element","_this$props4","hasTasks","isCommentInvalid","isNewTaskInvalid","commentFormIsFocused","components_Toolbar_Toolbar","CardEditor_CardEditorMoreActions","components_Checkbox_Checkbox","listSelectors","listsArray","taskSelectors","listActions","cardActions","isEqual","other","prototype","toString","typeArr","valueLen","compare","item1","item2","itemType","i","hasOwnProperty","windowDebouncer","callback","request","_len","args","Array","_key","cancelAnimationFrame","requestAnimationFrame","BoardContainer","onDragStart","onDragEnd","destination","source","isMovedWithinList","splice","updatedListIds","toggleCardEditor","isCardEditorOpen","onTitleChange","onTitleBlur","newBoardTitle","isFetching","boardObserver","updatedBoard","utils","listObserver","taskObserver","cardObserver","_this3","lists","components_List_List","components_Board_Board","components_CardEditor_CardEditor","taskActions","HomePage","toggleBoardComposer","isBoardComposerOpen","createBoard","BoardComposer_BoardComposer_BoardComposer","Switch","Route","exact","path","render","BoardGrid_BoardGridContainer","Board_BoardContainer","match","params","currentBoardId","PasswordChangeForm","PasswordChange_PasswordChangeForm","Header","Navbar_Navbar_Navbar","Header_Header_Header","component","LandingPage","AccountPage","AdminPage","Boolean","location","hostname","combineReducers","createBrowserHistory","basename","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","es","context","Router","components_App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.02c3e539.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/feather-sprite.0ed672ce.svg\";","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import firebase from 'firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\nclass Firebase {\n  constructor() {\n    firebase.initializeApp(config);\n    this.auth = firebase.auth();\n    this.db = firebase.firestore();\n  }\n\n  // Auth API\n  createUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  signInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  signOut = () => this.auth.signOut();\n\n  passwordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  passwordUpdate = newPassword =>\n    this.auth.currentUser.updatePassword(newPassword);\n\n  // Utility API\n\n  getTimestamp = () => firebase.firestore.FieldValue.serverTimestamp();\n  addToArray = value => firebase.firestore.FieldValue.arrayUnion(value);\n  removeFromArray = value => firebase.firestore.FieldValue.arrayRemove(value);\n\n  // User API\n\n  getUserDoc = userId => this.db.collection('users').doc(userId);\n\n  addUser = ({ userId, name, username, email, boardIds = [] }) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .set({ userId, name, username, email, boardIds });\n\n  updateUser = (userId, newValue = {}) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .update(newValue);\n\n  // Board API\n\n  getBoardDoc = boardId => this.db.collection('boards').doc(boardId);\n\n  updateBoard = (boardId, newValue = {}) =>\n    this.getBoardDoc(boardId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  addBoard = ({ userId, boardTitle }) => {\n    this.db\n      .collection('boards')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        listIds: [],\n        authorId: userId,\n        memberIds: [userId],\n        boardTitle\n      })\n      .then(ref => {\n        this.updateUser(userId, {\n          boardIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  // List API\n\n  getListDoc = listId => this.db.collection('lists').doc(listId);\n\n  updateList = (listId, newValue = {}) =>\n    this.getListDoc(listId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  addList = ({ boardId, listTitle }) => {\n    this.db\n      .collection('lists')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        cardIds: [],\n        boardId,\n        listTitle\n      })\n      .then(ref => {\n        this.updateBoard(boardId, {\n          listIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  deleteList = ({ listId, boardId }) => {\n    const batch = this.db.batch();\n    const listRef = this.getListDoc(listId);\n    const boardRef = this.getBoardDoc(boardId);\n\n    // Delete list\n    batch.delete(listRef);\n\n    // Remove list id from board\n    batch.update(boardRef, {\n      listIds: this.removeFromArray(listId),\n      lastModifiedAt: this.getTimestamp()\n    });\n\n    // Delete cards assigned to list\n    this.db\n      .collection('cards')\n      .where('listId', '==', listId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('list deleted');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  // Card API\n\n  getCardDoc = cardId => this.db.collection('cards').doc(cardId);\n\n  addCard = ({ boardId, listId, cardTitle }) => {\n    this.db\n      .collection('cards')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        listId,\n        boardId,\n        cardTitle\n      })\n      .then(ref => {\n        this.updateList(listId, {\n          cardIds: this.addToArray(ref.id),\n          lastModifiedAt: this.getTimestamp()\n        });\n      });\n  };\n\n  updateCard = (cardId, newValue = {}) => {\n    this.getCardDoc(cardId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  deleteCard = ({ cardId, listId }) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const listRef = this.getListDoc(listId);\n    batch.delete(cardRef);\n    batch.update(listRef, {\n      cardIds: this.removeFromArray(cardId),\n      lastModifiedAt: this.getTimestamp()\n    });\n\n    // Delete tasks assigned to card\n    this.db\n      .collection('tasks')\n      .where('cardId', '==', cardId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('list deleted');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  moveCardToList = ({ cardId, origListId, newListId, updatedCardIds }) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const origListRef = this.getListDoc(origListId);\n    const newListRef = this.getListDoc(newListId);\n    batch.update(cardRef, {\n      listId: newListId,\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(origListRef, {\n      cardIds: this.removeFromArray(cardId),\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(newListRef, {\n      cardIds: updatedCardIds,\n      lastModifiedAt: this.getTimestamp()\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('card moved');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  // Task API\n\n  getTaskDoc = taskId => this.db.collection('tasks').doc(taskId);\n\n  addTask = ({ userId, memberIds = [], boardId = null, cardId = null, dueDate = null, text }) => {\n    this.db\n      .collection('tasks')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        isCompleted: false,\n        createdBy: userId,\n        assignedTo: [userId, ...memberIds],\n        dueDate,\n        boardId,\n        cardId,\n        text\n      })\n      .then(ref => {\n        if (cardId === null) return;\n        this.updateCard(cardId, {\n          taskIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  updateTask = (taskId, newValue = {}) => {\n    this.getTaskDoc(taskId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n}\n\nexport default Firebase;\n","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const BOARD = '/home/board/:id';\n","import React from 'react';\nimport './Button.scss';\n\nconst Button = ({\n  children,\n  type = 'button',\n  onClick,\n  className = '',\n  color = 'neutral',\n  size = 'md',\n  variant = 'text',\n  disabled,\n  name,\n  iconOnly = false,\n  buttonRef,\n  ...props\n}) => (\n  // eslint-disable-next-line react/button-has-type\n  <button\n    className={`${className} ${color} ${size} ${variant} ${\n      iconOnly ? 'icon-only' : ''\n    }`}\n    type={type}\n    onClick={onClick}\n    disabled={disabled}\n    name={name}\n    ref={buttonRef}\n    {...props}\n  >\n    {children}\n  </button>\n);\n\nButton.defaultProps = {\n  type: 'button',\n  className: '',\n  color: 'neutral',\n  size: 'md',\n  variant: 'text',\n  iconOnly: false\n};\n\nexport default Button;\n","import React from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Button } from '../Button';\nimport './SignOutButton.scss';\n\nconst SignOutButton = ({ firebase }) => (\n  <Button\n    type=\"button\"\n    onClick={firebase.signOut}\n    className=\"btn--sign-out\"\n    color=\"primary\"\n  >\n    Sign Out\n  </Button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        authUser: null\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        authUser\n          ? this.setState({ authUser })\n          : this.setState({ authUser: null });\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport AuthUserContext from './context';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          this.props.history.push(ROUTES.SIGN_IN);\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n  return compose(\n    withRouter,\n    withFirebase\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from 'react';\nimport featherIcons from '../../assets/feather/feather-sprite.svg';\n\nfunction Icon(props) {\n  return (\n    <svg\n      className={`feather feather-${props.name} ${props.addClass || ''}`.trim()}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n      height=\"24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <use xlinkHref={`${featherIcons}#${props.name}`} />\n    </svg>\n  );\n}\n\nexport default Icon;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { SignOutButton } from '../SignOut';\nimport './Navbar.scss';\nimport { AuthUserContext } from '../Session';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\n\nconst NavLinksAuth = () => (\n  <>\n    <li>\n      <Link to={ROUTES.HOME}>Home</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ADMIN}>Admin</Link>\n    </li>\n    <li>\n      <SignOutButton />\n    </li>\n  </>\n);\n\nconst NavLinksNonAuth = () => (\n  <>\n    <li>\n      <Link to={ROUTES.SIGN_IN}>Log In</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.SIGN_UP}>Get Started</Link>\n    </li>\n  </>\n);\n\nexport default class Navbar extends Component {\n  static defaultProps = {\n    minWidth: 768\n  };\n\n  state = {\n    viewportWidth: window.innerWidth,\n    isMobileNavVisible: false,\n    isTouchEnabled: false\n  };\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick);\n  }\n\n  handleResize = () => {\n    this.setState({\n      viewportWidth: window.innerWidth\n    });\n  };\n\n  toggleMobileNavVisibility = () => {\n    this.setState(prevState => ({\n      isMobileNavVisible: !prevState.isMobileNavVisible\n    }));\n  };\n\n  handleClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    if (!isMobileView) return;\n    if (e.target.matches('button') || e.target.matches('a')) {\n      this.toggleMobileNavVisibility();\n    }\n  };\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n    window.removeEventListener('resize', this.handleResize);\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  handleOutsideClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n    if (\n      !isMobileView ||\n      this.navLinksEl.contains(e.target) ||\n      e.target.matches('button') ||\n      e.target.matches('a')\n    )\n      return;\n    this.setState({\n      isMobileNavVisible: false\n    });\n  };\n\n  handleTouch = () => {\n    const { isTouchEnabled } = this.state;\n    if (isTouchEnabled === true) return;\n    this.setState({\n      isTouchEnabled: true\n    });\n    document.removeEventListener('touchstart', this.handleTouch);\n    document.removeEventListener('click', this.handleOutsideClick);\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  render() {\n    const { viewportWidth, isMobileNavVisible } = this.state;\n    const { minWidth, navRef, navLinksClass } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    return (\n      <nav\n        className={`navbar ${isMobileView ? 'is-collapsed' : ''} ${\n          isMobileView && isMobileNavVisible ? 'show-links' : ''\n        }`}\n        ref={el => (this.navEl = el)}\n      >\n        <span className=\"navbar__logo\">\n          <Link to={ROUTES.LANDING} onClick={this.handleClick}>\n            workflow\n          </Link>\n        </span>\n        {isMobileView && (\n          <Button\n            type=\"button\"\n            color=\"primary\"\n            onClick={this.toggleMobileNavVisibility}\n            iconOnly\n          >\n            <Icon name=\"menu\" />\n          </Button>\n        )}\n        <ul\n          className={`navbar__links ${navLinksClass}`}\n          onClick={this.handleClick}\n          ref={el => (this.navLinksEl = el)}\n        >\n          <AuthUserContext.Consumer>\n            {authUser => (authUser ? <NavLinksAuth /> : <NavLinksNonAuth />)}\n          </AuthUserContext.Consumer>\n        </ul>\n      </nav>\n    );\n  }\n}\n","import React from 'react';\nimport './Input.scss';\n\nconst Input = props => {\n  return (\n    <>\n      {!props.hideLabel && (\n        <label htmlFor={props.name} className=\"input__label\">\n          {props.title}\n        </label>\n      )}\n      <input\n        className={props.className}\n        id={props.name}\n        name={props.name}\n        type={props.type}\n        value={props.value}\n        onChange={props.onChange}\n        placeholder={props.placeholder}\n        required={props.isRequired}\n        onBlur={props.onBlur}\n      />\n    </>\n  );\n};\n\nexport default Input;\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  username: '',\n  name: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { username, email, name, passwordOne } = this.state;\n    this.props.firebase\n      .createUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        const userId = authUser.user.uid;\n        return this.props.firebase.addUser({\n          userId,\n          name,\n          username,\n          email\n        });\n      })\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const {\n      username,\n      name,\n      email,\n      passwordOne,\n      passwordTwo,\n      error\n    } = this.state;\n    const isInvalid =\n      passwordOne === '' ||\n      passwordTwo === '' ||\n      email === '' ||\n      username === '' ||\n      passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"name\"\n          title=\"Full Name\"\n          value={name}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"username\"\n          title=\"Username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordOne\"\n          title=\"Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          title=\"Confirm Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Create Account\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignUpForm);\n","import React from 'react';\nimport './UserFormPage.scss';\n\nconst UserFormPage = ({ title, children }) => (\n  <main className=\"user-form__container\">\n    <h1 className=\"user-form__title\">{title}</h1>\n    {children}\n  </main>\n);\n\nexport default UserFormPage;\n","import React from 'react';\nimport SignUpForm from './SignUpForm';\nimport { UserFormPage } from '../UserFormPage';\n\nconst SignUpPage = () => (\n  <UserFormPage title=\"Create an account\">\n    <SignUpForm />\n  </UserFormPage>\n);\n\nexport default SignUpPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nexport { default as SignUpPage } from './SignUp';\nexport { default as SignUpForm } from './SignUpForm';\nexport { SignUpLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email, password } = this.state;\n    this.props.firebase\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n    const isInvalid = password === '' || email === '';\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"password\"\n          title=\"Password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Log In\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignInForm);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null\n};\n\nclass PasswordForgetForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .passwordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, error } = this.state;\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Reset My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordForgetForm);\n","import React from 'react';\nimport PasswordForgetForm from './PasswordForgetForm';\nimport { UserFormPage } from '../UserFormPage';\n\nconst PasswordForgetPage = () => (\n  <UserFormPage title=\"Forgot your password?\">\n    <PasswordForgetForm />\n  </UserFormPage>\n);\n\nexport default PasswordForgetPage;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport {default as PasswordForgetForm} from './PasswordForgetForm';\nexport {default as PasswordForgetPage} from './PasswordForget';\nexport {PasswordForgetLink};","import React from 'react';\nimport SignInForm from './SignInForm';\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { UserFormPage } from '../UserFormPage';\n\nconst SignInPage = () => (\n  <UserFormPage title=\"Log In\">\n    <SignInForm />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </UserFormPage>\n);\n\nexport default SignInPage;\n","import { Firebase } from '../components/Firebase';\n\nconst firebase = new Firebase();\n\nexport default firebase;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const updateUserBoards = boardIds => {\n  return {\n    type: types.UPDATE_USER_BOARDS,\n    boardIds\n  };\n};\n\nexport const loadUserData = user => {\n  return {\n    type: types.LOAD_USER_DATA,\n    user\n  };\n};\n\nexport const fetchUserData = userId => {\n  return async dispatch => {\n    try {\n      const user = await firebase\n        .getUserDoc(userId)\n        .get()\n        .then(doc => doc.data());\n      dispatch(loadUserData(user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","export const UPDATE_USER_BOARDS = 'ADD_USER_BOARD';\nexport const LOAD_USER_DATA = 'LOAD_USER_DATA';\nexport const LOAD_USER_BOARDS = 'LOAD_USER_BOARDS';\n","export const getUserData = state => {\n  return state.user;\n};\n","import * as types from './types';\n\nconst user = (state = {}, action) => {\n  switch (action.type) {\n    case types.UPDATE_USER_BOARDS:\n      return {\n        ...state,\n        boardIds: [...action.boardIds]\n      };\n    case types.LOAD_USER_DATA: {\n      const { user } = action;\n      return {\n        ...state,\n        ...user\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default user;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const selectBoard = boardId => {\n  return {\n    type: types.SELECT_BOARD,\n    boardId\n  };\n};\n\nexport const selectList = listId => {\n  return {\n    type: types.SELECT_LIST,\n    listId\n  };\n};\n\nexport const selectCard = cardId => {\n  return {\n    type: types.SELECT_CARD,\n    cardId\n  };\n};\n","export const SELECT_BOARD = 'SELECT_BOARD';\nexport const SELECT_LIST = 'SELECT_LIST';\nexport const SELECT_CARD = 'SELECT_CARD';\n","export const getCurrentBoardId = state => {\n  return state.current.boardId;\n};\n\nexport const getCurrentListId = state => {\n  return state.current.listId;\n};\n\nexport const getCurrentCardId = state => {\n  return state.current.cardId;\n};\n\nexport const getCurrent = state => {\n  return state.current;\n};\n","import React, { Component } from 'react';\n\nexport default class BoardGrid extends Component {\n  render() {\n    return <ul className=\"board-grid\">{this.props.children}</ul>;\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BoardTile = props => {\n  const { boardId, boardTitle, onClick } = props;\n  return (\n    <li className=\"board-grid__tile\">\n      <Link\n        className=\"board-grid__link\"\n        to={`/home/board/${boardId}`}\n        onClick={onClick}\n      >\n        <span className=\"board-grid__title\">{boardTitle}</span>\n      </Link>\n    </li>\n  );\n};\n\nexport default BoardTile;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadBoardsById = boardsById => {\n  return {\n    type: types.LOAD_BOARDS_BY_ID,\n    boardsById\n  };\n};\n\nexport const fetchBoardsById = userId => {\n  return async dispatch => {\n    try {\n      const boardsById = await firebase.db\n        .collection('boards')\n        .where('memberIds', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const boardsById = {};\n          snapshot.forEach(doc => {\n            boardsById[doc.id] = doc.data();\n          });\n          return boardsById;\n        });\n      dispatch(loadBoardsById(boardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateBoardsById = board => {\n  return {\n    type: types.UPDATE_BOARDS_BY_ID,\n    board\n  };\n};\n\nexport const reorderLists = (boardId, listIds) => {\n  return {\n    type: types.REORDER_LISTS,\n    boardId,\n    listIds\n  };\n};\n\nexport const updateListIds = (boardId, listIds) => {\n  return {\n    type: types.UPDATE_LIST_IDS,\n    boardId,\n    listIds\n  };\n};\n","export const LOAD_BOARDS_BY_ID = 'LOAD_BOARDS_BY_ID';\nexport const UPDATE_BOARDS_BY_ID = 'UPDATE_BOARDS_BY_ID';\nexport const REORDER_LISTS = 'REORDER_LISTS';\nexport const UPDATE_LIST_IDS = 'UPDATE_LIST_IDS';","export const getBoardsById = state => {\n  return state.boardsById;\n};\n\nexport const getBoardsArray = state => {\n  const { boardsById } = state;\n  return Object.keys(boardsById).map(boardId => {\n    return {\n      boardId,\n      ...boardsById[boardId]\n    };\n  });\n};\n\nexport const getBoard = (state, boardId) => {\n  const { boardsById } = state;\n  return boardsById[boardId];\n};\n","import * as types from './types';\n\nconst boardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_BOARDS_BY_ID: {\n      const { boardsById } = action;\n      return {\n        ...state,\n        ...boardsById\n      };\n    }\n    case types.UPDATE_BOARDS_BY_ID: {\n      const { board } = action;\n      return {\n        ...state,\n        ...board\n      };\n    }\n    case types.UPDATE_LIST_IDS:\n    case types.REORDER_LISTS: {\n      const { boardId, listIds } = action;\n      return {\n        ...state,\n        [boardId]: {\n          ...state[boardId],\n          listIds\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default boardsById;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport BoardGrid from './BoardGrid';\nimport BoardTile from './BoardTile';\nimport './BoardGrid.scss';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Icon } from '../Icon';\n\nclass BoardGridContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const { userId } = this.props.user;\n    this.listener = this.props.firebase.db\n      .collection('boards')\n      .where('memberIds', 'array-contains', userId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const board = {\n            [change.doc.id]: change.doc.data()\n          };\n          this.props.updateBoardsById(board);\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  }\n\n  render() {\n    const { boardIds, userId } = this.props.user;\n    const { boardsArray, selectBoard } = this.props;\n    const boardTiles = boardsArray.map(board => {\n      const { boardTitle, boardId } = board;\n      return (\n        <BoardTile\n          key={boardId}\n          boardTitle={boardTitle}\n          boardId={boardId}\n          onClick={() => selectBoard(boardId)}\n        />\n      );\n    });\n    return (\n      <section>\n        <BoardGrid>\n          {boardTiles}\n          <button\n            type=\"button\"\n            className=\"board-grid__tile board-grid__btn--add\"\n            onClick={this.props.openBoardComposer}\n          >\n            <Icon name=\"plus-circle\" />\n            Create board\n          </button>\n        </BoardGrid>\n      </section>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUserBoards: boardIds =>\n      dispatch(userActions.updateUserBoards(boardIds)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardGridContainer)\n);\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport './Modal.scss';\n\nconst Modal = ({\n  onModalClose,\n  children,\n  className = '',\n  onModalClick,\n  size = 'md'\n}) => {\n  return (\n    <div className=\"modal\" onClick={onModalClick}>\n      <div className={`modal__content ${className} modal__content--${size}`}>\n        <Button\n          type=\"button\"\n          className=\"modal__btn--close\"\n          onClick={onModalClose}\n          iconOnly\n        >\n          <Icon name=\"x\" />\n        </Button>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport { Modal } from '../Modal';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\nimport './BoardComposer.scss';\n\nconst INITIAL_STATE = {\n  boardTitle: ''\n};\n\nexport default class BoardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { boardTitle } = this.state;\n    const { handleSubmit, onClose } = this.props;\n    this.props.handleSubmit(boardTitle);\n    this.props.onClose();\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { boardTitle } = this.state;\n    return (\n      <Modal onModalClose={this.props.onClose} size=\"sm\">\n        <form onSubmit={this.onSubmit}>\n          <Input\n            name=\"boardTitle\"\n            title=\"Board Title\"\n            value={boardTitle}\n            onChange={this.onChange}\n            type=\"text\"\n          />\n          <Button\n            className=\"board-composer__btn--add\"\n            type=\"submit\"\n            onClick={this.onSubmit}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Create Board\n          </Button>\n        </form>\n      </Modal>\n    );\n  }\n}\n","export const CARD = 'CARD';\nexport const LIST = 'LIST';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input } from '../Input';\nimport { Icon } from '../Icon';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Button } from '../Button';\nimport './ListComposer.scss';\n\nconst INITIAL_STATE = {\n  listTitle: '',\n  isActive: false\n};\n\nclass ListComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ listTitle: '' });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { listTitle } = this.state;\n    const { boardId } = this.props;\n    this.props.firebase.addList({ boardId, listTitle });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = e => {\n    if (e.target.value === '') {\n      this.setState({\n        isActive: false\n      });\n    }\n  };\n\n  render() {\n    const { listTitle, isActive } = this.state;\n    return (\n      <div\n        className={`list-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"list-composer__form\" onSubmit={this.onSubmit}>\n          <Input\n            onChange={this.onChange}\n            value={listTitle}\n            placeholder={isActive ? 'Enter list title...' : 'Add a list'}\n            required={true}\n            name=\"listTitle\"\n            hideLabel={true}\n            className=\"list-composer__input\"\n          />\n          {isActive && (\n            <div className=\"list-composer__footer\">\n              <Button\n                className=\"list-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add List\n              </Button>\n              <Button\n                className=\"list-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => dispatch(userActions.getUserData(userId)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListComposer)\n);\n","import React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { ListComposer } from '../ListComposer';\n\nconst Board = props => {\n  const { boardId, children } = props;\n  return (\n    <Droppable\n      droppableId={boardId}\n      type={droppableTypes.LIST}\n      direction=\"horizontal\"\n    >\n      {provided => (\n        <div\n          className=\"board\"\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n        >\n          {children}\n          {provided.placeholder}\n          <ListComposer boardId={boardId} />\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nexport default Board;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadListsById = listsById => {\n  return {\n    type: types.LOAD_LISTS_BY_ID,\n    listsById\n  };\n};\n\nexport const fetchListsById = boardId => {\n  return async dispatch => {\n    try {\n      const listsById = await firebase.db\n        .collection('lists')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const listsById = {};\n          snapshot.forEach(doc => {\n            listsById[doc.id] = doc.data();\n          });\n          return listsById;\n        });\n      dispatch(loadListsById(listsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateListsById = list => {\n  return {\n    type: types.UPDATE_LISTS_BY_ID,\n    list\n  };\n};\n","export const LOAD_LISTS_BY_ID = 'LOAD_LISTS_BY_ID';\nexport const FETCH_LISTS_BY_ID = 'FETCH_LISTS_BY_ID';\nexport const UPDATE_LISTS_BY_ID = 'UPDATE_LISTS_BY_ID';\nexport const DELETE_CARD = 'DELETE_CARD';\n","export const getListsById = state => {\n  return state.listsById;\n};\n\nexport const getListsArray = state => {\n  const { listsById, boardsById, current } = state;\n  const { boardId } = current;\n  const board = boardsById[boardId];\n  if (!board) return null;\n  const { listIds } = board;\n\n  return listIds.map(listId => {\n    return {\n      listId,\n      ...listsById[listId]\n    };\n  });\n};\n","import * as types from './types';\n\nconst listsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_LISTS_BY_ID: {\n      const { listsById } = action;\n      return {\n        ...state,\n        ...listsById\n      };\n    }\n    case types.UPDATE_LISTS_BY_ID: {\n      const { list } = action;\n      return {\n        ...state,\n        ...list\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default listsById;\n","export const getCardsById = state => {\n  return state.cardsById;\n};\n\nexport const getCardsArray = (state, ownProps) => {\n  const { cardsById } = state;\n  const { cardIds } = ownProps;\n  return cardIds.map(cardId => cardsById[cardId]);\n};\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadCardsById = cardsById => {\n  return {\n    type: types.LOAD_CARDS_BY_ID,\n    cardsById\n  };\n};\n\nexport const fetchCardsById = boardId => {\n  return async dispatch => {\n    try {\n      const cardsById = await firebase.db\n        .collection('cards')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const cards = {};\n          snapshot.forEach(doc => {\n            cards[doc.id] = {\n              cardId: doc.id,\n              ...doc.data()\n            };\n          });\n          return cards;\n        });\n      dispatch(loadCardsById(cardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateCardsById = card => {\n  return {\n    type: types.UPDATE_CARDS_BY_ID,\n    card\n  };\n};\n\n","export const ADD_CARD = 'ADD_CARD';\nexport const SET_CARD_DUE_DATE = 'SET_CARD_DUE_DATE';\nexport const ADD_CARD_SUBTASK = 'ADD_CARD_SUBTASK';\nexport const REMOVE_CARD_SUBTASK = 'REMOVE_CARD_SUBTASK';\nexport const CHANGE_CARD_DESCRIPTION = 'CHANGE_CARD_DESCRIPTION';\nexport const SET_CARD_COLOR = 'SET_CARD_COLOR';\nexport const DELETE_CARD = 'DELETE_CARD';\nexport const MOVE_CARD = 'MOVE_CARD';\nexport const LOAD_CARDS_BY_ID = 'LOAD_CARDS_BY_ID';\nexport const UPDATE_CARDS_BY_ID = 'UPDATE_CARDS_BY_ID';\n\n","import * as types from './types';\n\nconst cardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_CARDS_BY_ID: {\n      const { cardsById } = action;\n      return {\n        ...state,\n        ...cardsById\n      };\n    }\n    case types.UPDATE_CARDS_BY_ID: {\n      const { card } = action;\n      return {\n        ...state,\n        ...card\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default cardsById;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadTasksById = tasksById => {\n  return {\n    type: types.LOAD_TASKS_BY_ID,\n    tasksById\n  };\n};\n\nexport const fetchTasksById = () => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateTasksById = task => {\n  return {\n    type: types.UPDATE_TASKS_BY_ID,\n    task\n  };\n};\n\nexport const fetchCardTasks = boardId => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserTasks = userId => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .where('assignedTo', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addTask = ({ taskId, taskData }) => {\n  return {\n    type: types.ADD_TASK,\n    taskId,\n    taskData\n  };\n};\n\nexport const deleteTask = taskId => {\n  return {\n    type: types.DELETE_TASK,\n    taskId\n  };\n};\n\nexport const updateTask = ({ taskId, taskData }) => {\n  return {\n    type: types.UPDATE_TASK,\n    taskId,\n    taskData\n  };\n};\n","export const LOAD_TASKS_BY_ID = 'LOAD_TASKS_BY_ID';\nexport const FETCH_TASKS_BY_ID = 'FETCH_TASKS_BY_ID';\nexport const UPDATE_TASKS_BY_ID = 'UPDATE_TASKS_BY_ID';\nexport const ADD_TASK = 'ADD_TASK';\nexport const UPDATE_TASK = 'UPDATE_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\n","export const getTasksById = state => {\n  const { tasksById } = state;\n  return tasksById;\n};\n\nexport const getTasksArray = (state, taskIds) => {\n  const { tasksById } = state;\n  if (!taskIds) return [];\n\n  return taskIds.map(taskId => {\n    return tasksById[taskId];\n  });\n};\n","import * as types from './types';\n\nconst tasksById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_TASKS_BY_ID: {\n      const { tasksById } = action;\n      return {\n        ...state,\n        ...tasksById\n      };\n    }\n    case types.ADD_TASK: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        [taskId]: {\n          taskId,\n          ...taskData\n        }\n      };\n    }\n    case types.DELETE_TASK: {\n      const { taskId } = action;\n      const { [taskId]: deletedTask, ...restOfTasks } = state;\n      return restOfTasks;\n    }\n    case types.UPDATE_TASK: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        [taskId]: {\n          ...state[taskId],\n          ...taskData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default tasksById;\n","import React, { Component, createRef } from 'react';\nimport './Textarea.scss';\n\nexport default class Textarea extends Component {\n  static defaultProps = {\n    isAutoHeightResizeEnabled: true\n  };\n\n  constructor(props) {\n    super(props);\n    this.textareaEl = createRef();\n  }\n\n  componentDidMount() {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n    this.autoHeightResize();\n  }\n\n  autoHeightResize = () => {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n\n    this.textareaEl.current.style.height = '0px'; // resets scroll height\n    this.textareaEl.current.style.height = `${\n      this.textareaEl.current.scrollHeight\n    }px`;\n  };\n\n  render() {\n    const {\n      className,\n      name,\n      value,\n      onChange,\n      placeholder,\n      isRequired,\n      onBlur,\n      onFocus,\n      onKeyDown\n    } = this.props;\n    return (\n      <textarea\n        className={`textarea ${className}`}\n        id={name}\n        name={name}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={isRequired}\n        onBlur={onBlur}\n        onInput={this.autoHeightResize}\n        ref={this.textareaEl}\n        onFocus={onFocus}\n        onKeyDown={onKeyDown}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon } from '../Icon';\nimport { withAuthorization } from '../Session';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport './CardComposer.scss';\n\nconst INITIAL_STATE = {\n  cardTitle: '',\n  isActive: false\n};\n\nclass CardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ cardTitle: '' });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { cardTitle } = this.state;\n    const { boardId } = this.props.current;\n    const { listId } = this.props;\n    this.props.firebase.addCard({ boardId, listId, cardTitle });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onBlur = e => {\n    if (e.target.value !== '') return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const { cardTitle, isActive } = this.state;\n\n    return (\n      <div\n        className={`card-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"card-composer__form\" onSubmit={this.onSubmit}>\n          <Textarea\n            onChange={this.onChange}\n            value={cardTitle}\n            placeholder={isActive ? 'Enter card title...' : 'Add a card'}\n            isRequired\n            name=\"cardTitle\"\n            className=\"card-composer__textarea\"\n            isAutoHeightResizeEnabled={false}\n          />\n          {isActive && (\n            <div className=\"card-composer__footer\">\n              <Button\n                className=\"card-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add Card\n              </Button>\n              <Button\n                className=\"card-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardComposer)\n);\n","import React from 'react';\nimport './Menu.scss';\n\nconst Menu = ({ children, onClick, className = '' }) => {\n  return <ul className={`menu ${className}`} onClick={onClick}>{children}</ul>;\n};\n\nexport default Menu;\n","import React from 'react';\nimport './Menu.scss';\n\nconst MenuItem = ({ children, className = '' }) => {\n  return <li className={`menu__item ${className}`}>{children}</li>;\n};\n\nexport default MenuItem;\n","import React, { Component } from 'react';\n\nexport default class Popover extends Component {\n  state = {\n    isTouchEnabled: false\n  };\n\n  componentDidMount() {\n    document.addEventListener('click', this.handleOutsideClick, false);\n  }\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  handleOutsideClick = e => {\n    const { onOutsideClick } = this.props;\n    onOutsideClick(e.target);\n  };\n\n  handleTouch = () => {\n    this.setState({\n      isTouchEnabled: true\n    });\n    // remove touch handler to prevent unnecessary refires\n    document.removeEventListener('touchstart', this.handleTouch);\n    // remove outside click handler from click events\n    document.removeEventListener('click', this.handleOutsideClick);\n    // reattach outside click handler to touchstart events\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  render() {\n    const { className, onClick, style, children } = this.props;\n    return (\n      <div className={`popover ${className}`} onClick={onClick} style={style}>\n        {children}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from '../Button';\nimport Popover from './Popover';\nimport './Popover.scss';\n\nexport default class PopoverWrapper extends Component {\n  state = {\n    isOpen: false\n  };\n\n  static defaultProps = {\n    wrapperClass: '',\n    popoverClass: '',\n    buttonProps: {},\n    align: 'left',\n    anchorEl: null\n  };\n\n  handleOutsideClick = target => {\n    if (this.componentEl && !this.componentEl.contains(target)) {\n      this.setState({\n        isOpen: false\n      });\n    }\n  };\n\n  toggleOpen = () => {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  };\n\n  render() {\n    const {\n      children,\n      alignInner,\n      alignOuter,\n      buttonProps,\n      wrapperClass,\n      popoverClass,\n      anchorEl\n    } = this.props;\n    const { isOpen } = this.state;\n\n    let popoverWrapperStyle = null;\n    \n    if (anchorEl) {\n      const { offsetTop, offsetLeft } = anchorEl;\n      popoverWrapperStyle = {\n        position: 'absolute',\n        top: offsetTop,\n        [alignOuter]: offsetLeft\n      };\n    }\n\n    return (\n      <div\n        className={`popover-wrapper ${isOpen ? 'is-active' : ''} ${wrapperClass}`}\n        ref={el => (this.componentEl = el)}\n        style={popoverWrapperStyle}\n      >\n        <Button type=\"button\" onClick={this.toggleOpen} {...buttonProps} />\n        {isOpen && (\n          <Popover\n            className={`align-${alignInner} ${popoverClass}`}\n            onClick={this.toggleOpen}\n            onOutsideClick={this.handleOutsideClick}\n          >\n            {children}\n          </Popover>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport './Card.scss';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { PopoverWrapper } from '../Popover';\nimport { Menu, MenuItem } from '../Menu';\n\nexport default class Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleCardClick = e => {\n    if (e.target.matches('button') || e.target.matches('a')) return;\n    const { cardId, onCardClick } = this.props;\n    onCardClick(cardId);\n  };\n\n  render() {\n    const { cardTitle, cardId, cardIndex } = this.props;\n    return (\n      <Draggable draggableId={cardId} index={cardIndex}>\n        {provided => (\n          <>\n            <div\n              className=\"card\"\n              onClick={this.handleCardClick}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              ref={provided.innerRef}\n            >\n              <div className=\"card__header\" ref={el => (this.headerEl = el)}>\n                <div className=\"card__tags\" />\n                <h3 className=\"card__title\">{cardTitle}</h3>\n              </div>\n              <div className=\"card__footer\">\n                <div className=\"card__labels\" />\n              </div>\n            </div>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { Card } from '../Card';\n\nexport default class Cards extends Component {\n  static propTypes = {\n    listId: PropTypes.string.isRequired\n  };\n\n  /*\n\n  shouldComponentUpdate(nextProps) {\n    if (this.props.cards === nextProps.cards) {\n      return false;\n    }\n    return true;\n  }\n*/\n  componentDidUpdate(prevProps) {\n    if (this.props.cards.length > prevProps.cards.length) {\n      this.scrollToBottom();\n    }\n  }\n\n  scrollToBottom = () => {\n    this.listEnd.scrollIntoView();\n  };\n\n  render() {\n    const { listId, cards, style, onCardClick, onCardDelete } = this.props;\n\n    return (\n      <Droppable droppableId={listId} type={droppableTypes.CARD}>\n        {(provided, snapshot) => (\n          <div\n            className=\"list__content\"\n            ref={provided.innerRef}\n            style={{\n              ...style,\n              minHeight: snapshot.isDraggingOver ? 80 : 16\n            }}\n            {...provided.droppableProps}\n          >\n            {cards.map((card, cardIndex) => {\n              const { cardId, cardTitle } = card;\n              return (\n                <Card\n                  key={cardId}\n                  cardTitle={cardTitle}\n                  cardId={cardId}\n                  cardIndex={cardIndex}\n                  listId={listId}\n                  onCardClick={onCardClick}\n                  onCardDelete={onCardDelete}\n                />\n              );\n            })}\n            {provided.placeholder}\n            <div\n              style={{ float: 'left', clear: 'both' }}\n              ref={el => (this.listEnd = el)}\n            />\n          </div>\n        )}\n      </Droppable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { CardComposer } from '../CardComposer';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\nimport { Input } from '../Input';\nimport Cards from './Cards';\nimport './List.scss';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDragging: this.props.isDragging,\n      listTitle: this.props.listTitle\n    };\n  }\n\n  handleListDelete = e => {\n    e.preventDefault();\n    const { listId, boardId, firebase } = this.props;\n    firebase.deleteList({ listId, boardId });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onBlur = e => {\n    const { listTitle, listId, firebase } = this.props;\n    const { listTitle: newListTitle } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newListTitle !== listTitle) {\n      firebase.updateList(listId, {\n        listTitle: newListTitle\n      });\n      console.log('updated!');\n    }\n  };\n\n  render() {\n    const {\n      cards,\n      onCardClick,\n      listId,\n      listIndex,\n      isFetchingCards\n    } = this.props;\n    if (isFetchingCards) return null;\n\n    const { listTitle, viewportHeight } = this.state;\n\n    return (\n      <Draggable draggableId={listId} index={listIndex}>\n        {provided => (\n          <>\n            <section\n              className=\"list\"\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <header\n                className=\"list__header\"\n                ref={el => (this.listHeaderEl = el)}\n              >\n                <Input\n                  className=\"list__input--title\"\n                  name=\"listTitle\"\n                  type=\"text\"\n                  value={listTitle}\n                  onChange={this.onChange}\n                  required\n                  hideLabel\n                  onBlur={this.onBlur}\n                />\n                <PopoverWrapper\n                  wrapperClass=\"list__popover-wrapper\"\n                  popoverClass=\"list__popover\"\n                  alignInner=\"left\"\n                  buttonProps={{\n                    size: 'medium',\n                    iconOnly: true,\n                    className: 'list__btn--more-actions',\n                    children: <Icon name=\"more-vertical\" />\n                  }}\n                >\n                  <Menu>\n                    <MenuItem>\n                      <a href=\"\" onClick={this.handleListDelete}>\n                        Delete\n                      </a>\n                    </MenuItem>\n                  </Menu>\n                </PopoverWrapper>\n              </header>\n              <Cards\n                cards={cards}\n                listId={listId}\n                onCardClick={onCardClick}\n                onCardDelete={this.handleCardDelete}\n              />\n              {provided.placeholder}\n              <CardComposer listId={listId} />\n            </section>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state),\n    cards: cardSelectors.getCardsArray(state, ownProps)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => dispatch(userActions.getUserData(userId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(List)\n);\n","import React from 'react';\nimport './Toolbar.scss';\n\nconst Toolbar = ({ className, children, ...props }) => (\n  <div className={`toolbar ${className}`} {...props}>\n    {children}\n  </div>\n);\n\nToolbar.defaultProps = {\n  className: ''\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport './Checkbox.scss';\n\nconst Checkbox = ({\n  value,\n  id,\n  name,\n  isChecked,\n  onClick,\n  onChange,\n  className,\n  labelClass,\n  ...props\n}) => {\n  return (\n    <label\n      htmlFor={id}\n      onClick={onClick}\n      className={`checkbox__label ${labelClass}`}\n    >\n      {isChecked && <Icon name=\"check\" />}\n      <input\n        type=\"checkbox\"\n        id={id}\n        value={value}\n        name={name}\n        checked={isChecked}\n        className={`checkbox ${className}`}\n        onChange={onChange}\n        {...props}\n      />\n    </label>\n  );\n};\n\nCheckbox.defaultProps = {\n  className: '',\n  labelClass: ''\n};\n\nexport default Checkbox;\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\n\nconst CardEditorMoreActions = ({ onMenuClick }) => (\n  <PopoverWrapper\n    wrapperClass=\"card-editor__popover-wrapper\"\n    popoverClass=\"card-editor__popover\"\n    alignOuter=\"right\"\n    alignInner=\"right\"\n    buttonProps={{\n      size: 'medium',\n      iconOnly: true,\n      className: 'card-editor__toolbar-btn',\n      children: <Icon name=\"more-horizontal\" />\n    }}\n  >\n    <Menu onClick={onMenuClick}>\n      <MenuItem>\n        <a href=\"\" data-action=\"delete\">\n          Delete card\n        </a>\n      </MenuItem>\n    </Menu>\n  </PopoverWrapper>\n);\n\nexport default CardEditorMoreActions;\n","export const BACKSPACE = 'Backspace';\nexport const ENTER = 'Enter';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { Input } from '../Input';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { Modal } from '../Modal';\nimport { Toolbar } from '../Toolbar';\nimport { Checkbox } from '../Checkbox';\nimport CardEditorMoreActions from './CardEditorMoreActions';\nimport * as keys from '../../constants/keys';\nimport './CardEditor.scss';\n\nclass CardEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cardId: this.props.card.cardId,\n      cardTitle: this.props.card.cardTitle,\n      cardDescription: this.props.card.cardDescription,\n      newTask: '',\n      cardTasks: this.props.tasksArray.reduce((tasks, task) => {\n        const { taskId, text, isCompleted } = task;\n        tasks[taskId] = {\n          text,\n          isCompleted\n        };\n        return tasks;\n      }, {}),\n      cardComment: '',\n      currentFocus: null,\n      isCommentFormFocused: false\n    };\n    this.commentFormRef = null;\n    this.setCommentFormRef = element => {\n      this.commentFormRef = element;\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.tasksArray.length !== Object.keys(state.cardTasks).length) {\n      return {\n        cardTasks: props.tasksArray.reduce((tasks, task) => {\n          const { taskId, text, isCompleted } = task;\n          tasks[taskId] = {\n            text,\n            isCompleted\n          };\n          return tasks;\n        }, {})\n      };\n    }\n    return null;\n  }\n\n  updateCardTasks = () => {\n    const { tasksArray } = this.props;\n    this.setState({\n      cardTasks: tasksArray.reduce((tasks, task) => {\n        const { taskId, text, isCompleted } = task;\n        tasks[taskId] = {\n          text,\n          isCompleted\n        };\n        return tasks;\n      }, {})\n    });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleCardDelete = () => {\n    const { card, firebase, onCardEditorClose } = this.props;\n    const { cardId, listId } = card;\n    firebase.deleteCard({ cardId, listId });\n    onCardEditorClose();\n  };\n\n  onBlur = e => {\n    const { card, firebase } = this.props;\n    const { cardTitle, cardDescription, currentFocus } = this.state;\n    const cardKey = e.target.name;\n\n    // When field loses focus, update card if change is detected\n\n    if (this.state[cardKey] !== card[cardKey]) {\n      const { cardId } = card;\n      firebase.updateCard(cardId, {\n        [cardKey]: this.state[cardKey]\n      });\n      console.log('updated!');\n    }\n\n    this.setState({\n      currentFocus: null\n    });\n  };\n\n  onSubmitComment = e => {\n    console.log(e.target.value);\n\n    e.preventDefault();\n  };\n\n  resetNewTaskForm = () => {\n    this.setState({\n      newTask: ''\n    });\n  };\n\n  addTask = e => {\n    const { user, firebase, card } = this.props;\n    const { userId } = user;\n    const { cardId, boardId } = card;\n    const { newTask: text } = this.state;\n    firebase.addTask({ userId, text, cardId, boardId });\n    this.resetNewTaskForm();\n    e.preventDefault();\n  };\n\n  onFocus = e => {\n    this.setState({\n      currentFocus: e.target.name\n    });\n  };\n\n  handleModalClick = e => {\n    const { currentFocus } = this.state;\n    if (\n      (currentFocus === 'cardComment' &&\n        !this.commentFormRef.contains(e.target)) ||\n      (currentFocus === 'newTask' && !this.newTaskFormEl.contains(e.target))\n    ) {\n      this.setState({\n        currentFocus: null\n      });\n    }\n  };\n\n  handleMoreActions = e => {\n    if (!e.target.matches('a')) return;\n    const { action } = e.target.dataset;\n    const { cardId } = this.props;\n    switch (action) {\n      case 'delete':\n        this.handleCardDelete(cardId);\n        break;\n    }\n    e.preventDefault(); // prevents page reload\n  };\n\n  onTaskChange = e => {\n    const { cardTasks } = this.state;\n    this.setState({\n      cardTasks: {\n        ...cardTasks,\n        [e.target.name]: {\n          ...cardTasks[e.target.name],\n          text: e.target.value\n        }\n      }\n    });\n  };\n\n  handleCheckboxChange = e => {\n    const taskId = e.target.name;\n    this.toggleTaskCompletion(taskId);\n  };\n\n  toggleTaskCompletion = taskId => {\n    const { isCompleted } = this.state.cardTasks[taskId];\n    this.setState(prevState => ({\n      cardTasks: {\n        ...prevState.cardTasks,\n        [taskId]: {\n          ...prevState.cardTasks[taskId],\n          isCompleted: !prevState.cardTasks[taskId].isCompleted\n        }\n      }\n    }));\n    const { firebase } = this.props;\n    firebase.updateTask(taskId, { isCompleted: !isCompleted });\n  };\n\n  updateTask = e => {\n    const taskId = e.target.name;\n    const { cardTasks } = this.state;\n    const { text } = cardTasks[taskId];\n    const { firebase } = this.props;\n    firebase.updateTask(taskId, { text });\n  };\n\n  deleteTask = e => {\n    if (e.target.value !== '' || e.key !== keys.BACKSPACE) return;\n    console.log(e.target.name);\n    console.log(e.target.value !== '');\n  };\n\n  render() {\n    const { onCardEditorClose, card, user, tasksById, tasksArray } = this.props;\n    const { taskIds } = card;\n    const hasTasks = taskIds !== undefined && taskIds.length > 0;\n\n    const {\n      cardTitle,\n      cardDescription,\n      cardComment,\n      currentFocus,\n      newTask,\n      cardTasks\n    } = this.state;\n    const isCommentInvalid = cardComment === '';\n    const isNewTaskInvalid = newTask === '';\n    const commentFormIsFocused = currentFocus === 'cardComment';\n\n    return (\n      <Modal\n        onModalClose={onCardEditorClose}\n        className=\"card-editor\"\n        onModalClick={this.handleModalClick}\n        size=\"lg\"\n      >\n        <Toolbar className=\"card-editor__toolbar\">\n          <CardEditorMoreActions onMenuClick={this.handleMoreActions} />\n        </Toolbar>\n        <form\n          name=\"editCardForm\"\n          onFocus={this.onFocus}\n          className=\"card-editor__edit-card-form\"\n        >\n          <Textarea\n            className=\"card-editor__textarea--title\"\n            name=\"cardTitle\"\n            value={cardTitle}\n            onChange={this.onChange}\n            required\n            onBlur={this.onBlur}\n            onFocus={this.onFocus}\n          />\n          <div\n            className={`card-editor__section ${\n              currentFocus === 'cardDescription' ? 'is-focused' : ''\n            }`}\n          >\n            <div className=\"card-editor__section-icon\">\n              <Icon name=\"edit-3\" />\n            </div>\n            <Textarea\n              className=\"card-editor__textarea card-editor__textarea--description\"\n              name=\"cardDescription\"\n              value={cardDescription}\n              onChange={this.onChange}\n              placeholder=\"Add a description\"\n              onBlur={this.onBlur}\n              onFocus={this.onFocus}\n            />\n          </div>\n        </form>\n        <div\n          className={`card-editor__section ${\n            currentFocus === 'newTask' ? 'is-focused' : ''\n          }`}\n        >\n          <hr className=\"card-editor__hr\" />\n          {hasTasks && (\n            <ul className=\"card-editor__tasks\">\n              {tasksArray.map(task => {\n                const { taskId } = task;\n                return (\n                  <li className=\"card-editor__task\" key={taskId}>\n                    <Checkbox\n                      id={`cb-${taskId}`}\n                      value={taskId}\n                      name={taskId}\n                      isChecked={cardTasks[taskId].isCompleted}\n                      onChange={this.handleCheckboxChange}\n                      className=\"card-editor__checkbox\"\n                      labelClass=\"card-editor__checkbox-label\"\n                    />\n                    <Textarea\n                      value={cardTasks[taskId].text}\n                      onChange={this.onTaskChange}\n                      onBlur={this.updateTask}\n                      name={taskId}\n                      className=\"card-editor__textarea--task\"\n                      onKeyDown={this.deleteTask}\n                    />\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n          <div className=\"card-editor__section-icon\">\n            <Icon name=\"check-square\" />\n          </div>\n          <form\n            name=\"newTaskForm\"\n            className={`card-editor__new-task-form ${\n              currentFocus === 'newTask' ? 'is-focused' : ''\n            }`}\n            ref={el => (this.newTaskFormEl = el)}\n            onSubmit={this.addTask}\n          >\n            <Textarea\n              className=\"card-editor__textarea card-editor__textarea--new-task\"\n              name=\"newTask\"\n              value={newTask}\n              onChange={this.onChange}\n              placeholder=\"Add a task\"\n              onFocus={this.onFocus}\n            />\n            {currentFocus === 'newTask' && (\n              <Button\n                type=\"submit\"\n                color=\"secondary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isNewTaskInvalid}\n                onClick={this.addTask}\n                className=\"card-editor__btn--add-task\"\n              >\n                Add task\n              </Button>\n            )}\n          </form>\n        </div>\n        <div\n          className={`card-editor__section ${\n            commentFormIsFocused ? 'is-focused' : ''\n          }`}\n        >\n          <hr className=\"card-editor__hr\" />\n          <div className=\"card-editor__section-icon\">\n            <Icon name=\"message-circle\" />\n          </div>\n          <form\n            name=\"commentForm\"\n            className={`card-editor__comment-form ${\n              commentFormIsFocused ? 'is-focused' : ''\n            }`}\n            ref={this.setCommentFormRef}\n          >\n            <Textarea\n              className=\"card-editor__textarea card-editor__textarea--comment\"\n              name=\"cardComment\"\n              value={cardComment}\n              onChange={this.onChange}\n              placeholder=\"Write a comment...\"\n              onFocus={this.onFocus}\n            />\n            {commentFormIsFocused && (\n              <Button\n                type=\"submit\"\n                color=\"secondary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isCommentInvalid}\n                onClick={this.onSubmitComment}\n                name=\"cardCommentSubmit\"\n                className=\"card-editor__btn--submit-comment\"\n              >\n                Comment\n              </Button>\n            )}\n          </form>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    current: currentSelectors.getCurrent(state),\n    listsById: listSelectors.getListsById(state),\n    listsArray: listSelectors.getListsArray(state),\n    tasksById: taskSelectors.getTasksById(state),\n    tasksArray: taskSelectors.getTasksArray(state, ownProps.card.taskIds)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId)),\n    updateListsById: list => dispatch(listActions.updateListsById(list)),\n    updateCardsById: card => dispatch(cardActions.updateCardsById(card)),\n    reorderLists: (boardId, listIds) =>\n      dispatch(boardActions.reorderLists(boardId, listIds))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardEditor)\n);\n","\n/**\n * Checks if two arrays or objects are equal\n * @param {Array|Object} value\n * @param {Array|Object} other\n */\n\n// eslint-disable-next-line import/prefer-default-export\nexport const isEqual = (value, other) => {\n  const type = Object.prototype.toString.call(value);\n\n  // If both objects are not the same type, return false\n  if (type !== Object.prototype.toString.call(other)) return false;\n\n  const typeObj = '[object Object]';\n  const typeArr = '[object Array]';\n  // If items are neither objects nor arrays, return false\n  if (type !== typeObj && type !== typeArr) return false;\n\n  // Compare length of two items\n  const valueLen = type === typeArr ? value.length : Object.keys(value).length;\n  const otherLen = type === typeArr ? other.length : Object.keys(other).length;\n  if (valueLen !== otherLen) return false;\n\n  const compare = (item1, item2) => {\n    const typeFunc = '[object Function]';\n    const itemType = Object.prototype.toString.call(item1);\n    if (itemType !== Object.prototype.toString.call(item2)) return false;\n    if (itemType === typeObj || itemType === typeArr) {\n      return isEqual(item1, item2);\n    }\n    if (itemType === typeFunc) {\n      return item1.toString() === item2.toString();\n    }\n    return item1 === item2;\n  };\n\n  if (type === typeArr) {\n    for (let i = 0; i < valueLen; i++) {\n      if (!compare(value[i], other[i])) return false;\n    }\n  } else {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (compare(value[key], other[key]) === false) return false;\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * Delays callback execution until next browser repaint\n * Best used for `scroll` and `resize` window events\n * @param {Function} callback - The function to debounce\n */\n\nexport const windowDebouncer = callback => {\n  let request;\n\n  return (...args) => {\n    const context = this;\n\n    if (request) {\n      window.cancelAnimationFrame(request);\n    }\n\n    request = window.requestAnimationFrame(() => {\n      callback.apply(context, args);\n    });\n  };\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport * as ROUTES from '../../constants/routes';\nimport Board from './Board';\nimport { Input } from '../Input';\nimport { List } from '../List';\nimport { CardEditor } from '../CardEditor';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { utils } from '../../utils';\nimport './Board.scss';\n\nclass BoardContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: true,\n      isDragging: false,\n      isCardEditorOpen: false,\n      boardTitle: this.props.boardTitle\n    };\n  }\n\n  componentDidMount() {\n    const {\n      current,\n      fetchListsById,\n      fetchCardsById,\n      fetchCardTasks,\n      firebase,\n      updateBoardsById,\n      updateListsById,\n      updateCardsById,\n      boardId,\n      board,\n      updateListIds,\n      addTask,\n      updateTask,\n      deleteTask\n    } = this.props;\n\n    if (current.boardId !== boardId) {\n      this.props.selectBoard(boardId);\n    }\n\n    fetchListsById(boardId);\n    fetchCardsById(boardId);\n    fetchCardTasks(boardId).then(() => {\n      this.setState({\n        isFetching: false\n      });\n    });\n    this.boardObserver = firebase.getBoardDoc(boardId).onSnapshot(snapshot => {\n      const updatedBoard = snapshot.data();\n      if (!utils.isEqual(updatedBoard.listIds, board.listIds)) {\n        updateListIds(boardId, updatedBoard.listIds);\n      }\n    });\n    this.listObserver = firebase.db\n      .collection('lists')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const list = {\n            [change.doc.id]: change.doc.data()\n          };\n          updateListsById(list);\n        });\n      });\n    this.taskObserver = firebase.db\n      .collection('tasks')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const taskId = change.doc.id;\n          const taskData = change.doc.data();\n          if (change.type === 'added') {\n            addTask({ taskId, taskData });\n          }\n          if (change.type === 'modified') {\n            updateTask({ taskId, taskData });\n          }\n          if (change.type === 'removed') {\n            deleteTask(taskId);\n          }\n        });\n      });\n    this.cardObserver = firebase.db\n      .collection('cards')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const card = {\n            [change.doc.id]: {\n              cardId: change.doc.id,\n              ...change.doc.data()\n            }\n          };\n          updateCardsById(card);\n        });\n      });\n    console.log('mounted');\n  }\n\n  componentWillUnmount() {\n    this.boardObserver();\n    this.listObserver();\n    this.cardObserver();\n    this.taskObserver();\n  }\n\n  onDragStart = () => {\n    this.setState({\n      isDragging: true\n    });\n  };\n\n  onDragEnd = ({ destination, draggableId, source, type }) => {\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    const { firebase } = this.props;\n    if (type === droppableTypes.CARD) {\n      const { listsById } = this.props;\n      const isMovedWithinList = source.droppableId === destination.droppableId;\n      const updatedCardIds = [...listsById[destination.droppableId].cardIds];\n      if (isMovedWithinList) {\n        updatedCardIds.splice(source.index, 1);\n        updatedCardIds.splice(destination.index, 0, draggableId);\n        firebase.updateList(source.droppableId, {\n          cardIds: updatedCardIds\n        });\n      } else {\n        updatedCardIds.splice(destination.index, 0, draggableId);\n        firebase.moveCardToList({\n          cardId: draggableId,\n          origListId: source.droppableId,\n          newListId: destination.droppableId,\n          updatedCardIds\n        });\n      }\n    }\n\n    if (type === droppableTypes.LIST) {\n      const { boardsById, current, reorderLists } = this.props;\n      const { boardId } = current;\n      const updatedListIds = [...boardsById[boardId].listIds];\n      updatedListIds.splice(source.index, 1);\n      updatedListIds.splice(destination.index, 0, draggableId);\n      firebase.updateBoard(boardId, {\n        listIds: updatedListIds\n      });\n      reorderLists(boardId, updatedListIds);\n    }\n\n    this.setState({\n      isDragging: false\n    });\n  };\n\n  toggleCardEditor = () => {\n    this.setState(prevState => ({\n      isCardEditorOpen: !prevState.isCardEditorOpen\n    }));\n  };\n\n  handleCardClick = cardId => {\n    this.props.selectCard(cardId);\n    this.toggleCardEditor();\n  };\n\n  onTitleChange = e => {\n    this.setState({\n      boardTitle: e.target.value\n    });\n  };\n\n  onTitleBlur = e => {\n    const { boardTitle, boardId, firebase } = this.props;\n    const { boardTitle: newBoardTitle } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newBoardTitle !== boardTitle) {\n      firebase.updateBoard(boardId, {\n        boardTitle: newBoardTitle\n      });\n      console.log('updated!');\n    }\n  };\n\n  render() {\n    const { isFetching, isCardEditorOpen } = this.state;\n    const {\n      current,\n      boardsById,\n      listsArray,\n      cardsById,\n      boardId,\n      board\n    } = this.props;\n    if (isFetching) return null;\n    const { cardId } = current;\n    const { boardTitle } = board;\n    const lists = listsArray.map((list, listIndex) => {\n      const { listId, listTitle, cardIds } = list;\n      return (\n        <List\n          listId={listId}\n          key={listId}\n          listIndex={listIndex}\n          listTitle={listTitle}\n          cardIds={cardIds}\n          isFetchingCards={this.state.isFetching}\n          isDragging={this.state.isDragging}\n          onCardClick={this.handleCardClick}\n          boardId={boardId}\n        />\n      );\n    });\n\n    return (\n      <main className=\"board-container\">\n        <Input\n          className=\"board__input--title\"\n          name=\"boardTitle\"\n          type=\"text\"\n          value={boardTitle}\n          onChange={this.onTitleChange}\n          required\n          hideLabel\n          onBlur={this.onTitleBlur}\n        />\n        <DragDropContext\n          onDragEnd={this.onDragEnd}\n          onDragStart={this.onDragStart}\n        >\n          <Board boardId={boardId}>{lists}</Board>\n        </DragDropContext>\n        {isCardEditorOpen && (\n          <CardEditor\n            card={cardsById[cardId]}\n            onCardEditorClose={this.toggleCardEditor}\n          />\n        )}\n      </main>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    current: currentSelectors.getCurrent(state),\n    listsById: listSelectors.getListsById(state),\n    listsArray: listSelectors.getListsArray(state),\n    cardsById: cardSelectors.getCardsById(state),\n    board: boardSelectors.getBoard(state, ownProps.boardId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId)),\n    selectCard: cardId => dispatch(currentActions.selectCard(cardId)),\n    fetchListsById: boardId => dispatch(listActions.fetchListsById(boardId)),\n    updateListsById: list => dispatch(listActions.updateListsById(list)),\n    fetchCardsById: boardId => dispatch(cardActions.fetchCardsById(boardId)),\n    fetchCardTasks: boardId => dispatch(taskActions.fetchCardTasks(boardId)),\n    updateCardsById: card => dispatch(cardActions.updateCardsById(card)),\n    reorderLists: (boardId, listIds) =>\n      dispatch(boardActions.reorderLists(boardId, listIds)),\n    updateListIds: (boardId, listIds) =>\n      dispatch(boardActions.updateListIds(boardId, listIds)),\n    addTask: ({ taskId, taskData }) => dispatch(taskActions.addTask({ taskId, taskData })),\n    deleteTask: taskId => dispatch(taskActions.deleteTask(taskId)),\n    updateTask: ({ taskId, taskData }) =>\n      dispatch(taskActions.updateTask({ taskId, taskData }))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardContainer)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { withAuthorization } from '../Session';\nimport * as ROUTES from '../../constants/routes';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { currentSelectors } from '../../ducks/current';\nimport { BoardGridContainer } from '../BoardGrid';\nimport { BoardComposer } from '../BoardComposer';\nimport { BoardContainer } from '../Board';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport './Home.scss';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isBoardComposerOpen: false,\n      isFetching: true\n    };\n  }\n\n  componentDidMount() {\n    const userId = this.props.firebase.auth.currentUser.uid;\n    console.log('mounted home');\n    this.props.fetchUserData(userId);\n    this.props.fetchBoardsById(userId).then(() =>\n      this.setState({\n        isFetching: false\n      })\n    );\n  }\n\n  toggleBoardComposer = () => {\n    this.setState(prevState => ({\n      isBoardComposerOpen: !prevState.isBoardComposerOpen\n    }));\n  };\n\n  createBoard = boardTitle => {\n    const userId = this.props.user.userId;\n    this.props.firebase.addBoard({ userId, boardTitle });\n  };\n\n  render() {\n    const { isBoardComposerOpen, isFetching } = this.state;\n    const userId = this.props.user.userId;\n    if (isFetching) return null;\n    return (\n      <>\n        {isBoardComposerOpen && (\n          <BoardComposer\n            onClose={this.toggleBoardComposer}\n            handleSubmit={this.createBoard}\n          />\n        )}\n        <Switch>\n          <Route\n            exact\n            path={ROUTES.HOME}\n            render={() => (\n              <main className=\"main\">\n                <h1>Home</h1>\n                {userId && (\n                  <BoardGridContainer\n                    openBoardComposer={this.toggleBoardComposer}\n                  />\n                )}\n              </main>\n            )}\n          />\n          <Route\n            path={ROUTES.BOARD}\n            render={props => (\n              <BoardContainer boardId={props.match.params.id} {...props} />\n            )}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    currentBoardId: currentSelectors.getCurrentBoardId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUserData: userId => dispatch(userActions.fetchUserData(userId)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(HomePage)\n);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .passwordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n    const isInvalid = passwordOne === '' || passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"passwordOne\"\n          title=\"New Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          title=\"Confirm New Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Change My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React from 'react';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport { PasswordChangeForm } from '../PasswordChange';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport './Account.scss';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <main className=\"account\">\n        <h1>Account: {authUser.email}</h1>\n        <section className=\"account__section\">\n        <h2>Forgot your password?</h2>\n          <PasswordForgetForm />\n        </section>\n        <section className=\"account__section\">\n        <h2>Change your password.</h2>\n          <PasswordChangeForm />\n        </section>\n      </main>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(AccountPage);\n","import React, { Component } from 'react';\nimport { Navbar } from '../Navbar';\nimport './Header.scss';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <Navbar />\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport { Navbar } from '../Navbar';\nimport * as ROUTES from '../../constants/routes';\nimport { LandingPage } from '../Landing';\nimport { SignUpPage } from '../SignUp';\nimport { SignInPage } from '../SignIn';\nimport { PasswordForgetPage } from '../PasswordForget';\nimport { HomePage } from '../Home';\nimport { AccountPage } from '../Account';\nimport { AdminPage } from '../Admin';\nimport { withAuthentication } from '../Session';\nimport { Header } from '../Header';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Header />\n        <Switch>\n          <Route exact path={ROUTES.LANDING} component={LandingPage} />\n          <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n          <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n          <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n          <Route path={ROUTES.HOME} component={HomePage} />\n          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n          <Route path={ROUTES.ADMIN} component={AdminPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { boardsById } from '../ducks/boards';\nimport { cardsById } from '../ducks/cards';\nimport { listsById } from '../ducks/lists';\nimport { user } from '../ducks/user';\nimport { current } from '../ducks/current';\nimport { tasksById } from '../ducks/tasks';\n\nexport default combineReducers({\n  boardsById,\n  cardsById,\n  listsById,\n  user,\n  current,\n  tasksById\n});\n","import * as types from './types';\n\nconst current = (state = {}, action) => {\n  switch (action.type) {\n    case types.SELECT_BOARD: {\n      const { boardId } = action;\n      return {\n        ...state,\n        boardId\n      };\n    }\n    case types.SELECT_LIST: {\n      const { listId } = action;\n      return {\n        ...state,\n        listId\n      };\n    }\n    case types.SELECT_CARD: {\n      const { cardId } = action;\n      return {\n        ...state,\n        cardId\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport { current };\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\n\nexport default history;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport 'normalize.css';\nimport './index.scss';\nimport { App } from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { FirebaseContext } from './components/Firebase';\nimport reducers from './store/reducers';\nimport firebase from './store/firebase';\nimport history from './store/history';\n\nconst store = createStore(reducers, {}, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <FirebaseContext.Provider value={firebase}>\n      <Router basename={process.env.PUBLIC_URL} history={history}>\n        <App />\n      </Router>\n    </FirebaseContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}