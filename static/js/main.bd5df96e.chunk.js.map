{"version":3,"sources":["assets/feather/feather-sprite.svg","components/Firebase/context.js","components/Firebase/Firebase.js","constants/routes.js","components/Button/Button.js","components/SignOut/SignOutButton.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Icon/Icon.js","components/Navbar/Navbar.js","components/Input/Input.js","components/SignUp/SignUpForm.js","components/UserFormPage/UserFormPage.js","components/SignUp/SignUp.js","components/SignUp/index.js","components/SignIn/SignInForm.js","components/PasswordForget/PasswordForgetForm.js","components/PasswordForget/PasswordForget.js","components/PasswordForget/index.js","components/SignIn/SignIn.js","store/firebase.js","ducks/user/actions.js","ducks/user/types.js","ducks/user/selectors.js","ducks/user/reducers.js","ducks/current/actions.js","ducks/current/types.js","ducks/current/selectors.js","components/BoardGrid/BoardGrid.js","components/BoardGrid/BoardTile.js","ducks/boards/actions.js","ducks/boards/types.js","ducks/boards/selectors.js","ducks/boards/reducers.js","components/BoardGrid/BoardGridContainer.js","components/Modal/Modal.js","components/BoardComposer/BoardComposer.js","constants/droppableTypes.js","components/ListComposer/ListComposer.js","components/Board/Board.js","ducks/lists/actions.js","ducks/lists/types.js","ducks/lists/selectors.js","ducks/lists/reducers.js","ducks/cards/selectors.js","ducks/cards/actions.js","ducks/cards/types.js","ducks/cards/reducers.js","ducks/tasks/actions.js","ducks/tasks/types.js","ducks/tasks/selectors.js","ducks/tasks/reducer.js","components/Textarea/Textarea.js","components/CardComposer/CardComposer.js","components/Menu/Menu.js","components/Menu/MenuItem.js","components/Popover/Popover.js","components/Popover/PopoverWrapper.js","components/Card/Card.js","components/List/Cards.js","components/List/List.js","components/Toolbar/Toolbar.jsx","components/Checkbox/Checkbox.js","components/CardEditor/CardEditorMoreActions.js","constants/keys.js","components/CardEditor/CardEditor.js","utils/utils.js","components/Board/BoardContainer.js","components/Home/Home.js","components/PasswordChange/PasswordChangeForm.js","components/Account/Account.js","components/Header/Header.jsx","components/App/App.js","serviceWorker.js","store/reducers.js","ducks/current/reducers.js","store/history.js","index.js"],"names":["module","exports","__webpack_require__","p","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","createUserWithEmailAndPassword","email","password","auth","signInWithEmailAndPassword","signOut","passwordReset","sendPasswordResetEmail","passwordUpdate","newPassword","currentUser","updatePassword","getTimestamp","firestore","FieldValue","serverTimestamp","addToArray","value","arrayUnion","removeFromArray","arrayRemove","getUserDoc","userId","db","collection","doc","addUser","_ref","name","username","_ref$boardIds","boardIds","set","updateUser","newValue","arguments","length","undefined","update","getBoardDoc","boardId","updateBoard","objectSpread","lastModifiedAt","addBoard","_ref2","boardTitle","add","createdAt","listIds","authorId","memberIds","then","ref","id","getListDoc","listId","updateList","addList","_ref3","listTitle","cardIds","deleteList","_ref4","batch","listRef","boardRef","delete","where","get","snapshot","docs","forEach","commit","console","log","catch","error","getCardDoc","cardId","addCard","_ref5","cardTitle","updateCard","deleteCard","_ref6","cardRef","moveCardToList","_ref7","origListId","newListId","updatedCardIds","origListRef","newListRef","getTaskDoc","taskId","addTask","_ref8","_ref8$memberIds","_ref8$boardId","_ref8$cardId","_ref8$dueDate","dueDate","text","isCompleted","createdBy","assignedTo","concat","toConsumableArray","taskIds","updateTask","initializeApp","HOME","Button","children","_ref$type","type","onClick","_ref$className","className","_ref$color","color","_ref$size","size","_ref$variant","variant","disabled","_ref$iconOnly","iconOnly","buttonRef","objectWithoutProperties","defaultProps","components_Button_Button","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","authUser","inherits","createClass","key","_this2","listener","onAuthStateChanged","setState","Session_context","Provider","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","Icon","addClass","trim","xmlns","xmlnsXlink","viewBox","width","height","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","xlinkHref","featherIcons","NavLinksAuth","Link","to","ROUTES","components_SignOut_SignOutButton","NavLinksNonAuth","_ref2$className","Navbar","viewportWidth","window","innerWidth","isMobileNavVisible","isTouchEnabled","handleTouch","document","removeEventListener","handleOutsideClick","addEventListener","handleResize","toggleMobileNavVisibility","prevState","handleClick","e","minWidth","target","matches","preventDefault","isMobileView","navEl","contains","_this$state","_this$props","navRef","el","Icon_Icon","Navbar_NavLinksAuth","Navbar_NavLinksNonAuth","Input","Fragment","hideLabel","htmlFor","title","onChange","placeholder","required","isRequired","onBlur","INITIAL_STATE","passwordOne","passwordTwo","SignUpForm","onSubmit","user","uid","defineProperty","_this$state2","isInvalid","components_Input_Input","message","UserFormPage","SignUpPage","components_UserFormPage_UserFormPage","SignUp_SignUpForm","SignUpLink","SignInForm","PasswordForgetForm","PasswordForgetPage","PasswordForget_PasswordForgetForm","PasswordForgetLink","SignInPage","SignIn_SignInForm","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","updateUserBoards","loadUserData","fetchUserData","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","data","sent","t0","stop","_x","apply","getUserData","action","selectBoard","selectList","selectCard","getCurrentBoardId","current","getCurrentListId","getCurrentCardId","getCurrent","BoardGrid","BoardTile","loadBoardsById","boardsById","fetchBoardsById","updateBoardsById","board","reorderLists","updateListIds","getBoardsById","getBoardsArray","keys","map","getBoard","BoardGridContainer","onSnapshot","querySnapshot","docChanges","change","_this$props$user","boardsArray","boardTiles","BoardGrid_BoardTile","BoardGrid_BoardGrid","openBoardComposer","connect","userSelectors","boardSelectors","userActions","boardActions","currentActions","Modal","onModalClose","onModalClick","BoardComposer","handleSubmit","onClose","components_Modal_Modal","CARD","LIST","isActive","ListComposer","resetForm","onReset","onFocus","currentSelectors","Board","react_beautiful_dnd_esm","droppableId","droppableTypes","direction","provided","innerRef","droppableProps","components_ListComposer_ListComposer","loadListsById","listsById","fetchListsById","updateListsById","list","getListsById","getListsArray","getCardsById","cardsById","getCardsArray","ownProps","loadCardsById","fetchCardsById","cards","updateCardsById","card","loadTasksById","tasksById","fetchTasksById","tasks","updateTasksById","task","fetchCardTasks","_callee2","_context2","_x2","fetchUserTasks","_callee3","_context3","_x3","taskData","deleteTask","getTasksById","getTasksArray","_toPropertyKey","Textarea","autoHeightResize","isAutoHeightResizeEnabled","textareaEl","style","scrollHeight","createRef","onKeyDown","onInput","CardComposer","Textarea_Textarea_Textarea","Menu","MenuItem","Popover","onOutsideClick","PopoverWrapper","isOpen","componentEl","toggleOpen","alignInner","alignOuter","buttonProps","wrapperClass","popoverClass","anchorEl","popoverWrapperStyle","offsetTop","offsetLeft","position","top","Popover_Popover","align","Card","handleCardClick","onCardClick","_this$props2","cardIndex","draggableId","index","draggableProps","dragHandleProps","headerEl","Cards","scrollToBottom","listEnd","scrollIntoView","prevProps","onCardDelete","minHeight","isDraggingOver","Card_Card_Card","float","clear","List","handleListDelete","newListTitle","isDragging","_this$props3","listIndex","isFetchingCards","viewportHeight","listHeaderEl","PopoverWrapper_PopoverWrapper","components_Menu_Menu","Menu_MenuItem","href","Cards_Cards","handleCardDelete","components_CardComposer_CardComposer","cardSelectors","Toolbar","Checkbox","isChecked","labelClass","checked","CardEditorMoreActions","onMenuClick","data-action","BACKSPACE","CardEditor","updateCardTasks","tasksArray","cardTasks","reduce","onCardEditorClose","cardKey","cardDescription","currentFocus","onSubmitComment","resetNewTaskForm","newTask","handleModalClick","commentFormRef","newTaskFormEl","handleMoreActions","dataset","onTaskChange","handleCheckboxChange","toggleTaskCompletion","cardComment","isCommentFormFocused","setCommentFormRef","element","_this$props4","hasTasks","isCommentInvalid","isNewTaskInvalid","commentFormIsFocused","components_Toolbar_Toolbar","CardEditor_CardEditorMoreActions","components_Checkbox_Checkbox","listSelectors","listsArray","taskSelectors","listActions","cardActions","isEqual","other","prototype","toString","typeArr","valueLen","compare","item1","item2","itemType","i","hasOwnProperty","windowDebouncer","callback","request","_len","args","Array","_key","cancelAnimationFrame","requestAnimationFrame","BoardContainer","onDragStart","onDragEnd","destination","source","isMovedWithinList","splice","updatedListIds","toggleCardEditor","isCardEditorOpen","onTitleChange","onTitleBlur","newBoardTitle","isFetching","boardObserver","updatedBoard","utils","listObserver","taskObserver","cardObserver","_this3","lists","components_List_List","components_Board_Board","components_CardEditor_CardEditor","taskActions","HomePage","toggleBoardComposer","isBoardComposerOpen","createBoard","BoardComposer_BoardComposer_BoardComposer","Switch","Route","exact","path","render","BoardGrid_BoardGridContainer","Board_BoardContainer","match","params","currentBoardId","PasswordChangeForm","PasswordChange_PasswordChangeForm","Header","Navbar_Navbar_Navbar","Header_Header_Header","component","LandingPage","AccountPage","AdminPage","Boolean","location","hostname","combineReducers","createBrowserHistory","basename","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","es","context","Router","components_App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bd5df96e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/feather-sprite.0ed672ce.svg\";","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import firebase from 'firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\nclass Firebase {\n  constructor() {\n    firebase.initializeApp(config);\n    this.auth = firebase.auth();\n    this.db = firebase.firestore();\n  }\n\n  // Auth API\n  createUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  signInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  signOut = () => this.auth.signOut();\n\n  passwordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  passwordUpdate = newPassword =>\n    this.auth.currentUser.updatePassword(newPassword);\n\n  // Utility API\n\n  getTimestamp = () => firebase.firestore.FieldValue.serverTimestamp();\n  addToArray = value => firebase.firestore.FieldValue.arrayUnion(value);\n  removeFromArray = value => firebase.firestore.FieldValue.arrayRemove(value);\n\n  // User API\n\n  getUserDoc = userId => this.db.collection('users').doc(userId);\n\n  addUser = ({ userId, name, username, email, boardIds = [] }) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .set({ userId, name, username, email, boardIds });\n\n  updateUser = (userId, newValue = {}) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .update(newValue);\n\n  // Board API\n\n  getBoardDoc = boardId => this.db.collection('boards').doc(boardId);\n\n  updateBoard = (boardId, newValue = {}) =>\n    this.getBoardDoc(boardId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  addBoard = ({ userId, boardTitle }) => {\n    this.db\n      .collection('boards')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        listIds: [],\n        authorId: userId,\n        memberIds: [userId],\n        boardTitle\n      })\n      .then(ref => {\n        this.updateUser(userId, {\n          boardIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  // List API\n\n  getListDoc = listId => this.db.collection('lists').doc(listId);\n\n  updateList = (listId, newValue = {}) =>\n    this.getListDoc(listId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  addList = ({ boardId, listTitle }) => {\n    this.db\n      .collection('lists')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        cardIds: [],\n        boardId,\n        listTitle\n      })\n      .then(ref => {\n        this.updateBoard(boardId, {\n          listIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  deleteList = ({ listId, boardId }) => {\n    const batch = this.db.batch();\n    const listRef = this.getListDoc(listId);\n    const boardRef = this.getBoardDoc(boardId);\n\n    // Delete list\n    batch.delete(listRef);\n\n    // Remove list id from board\n    batch.update(boardRef, {\n      listIds: this.removeFromArray(listId),\n      lastModifiedAt: this.getTimestamp()\n    });\n\n    // Delete cards assigned to list\n    this.db\n      .collection('cards')\n      .where('listId', '==', listId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('list deleted');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  // Card API\n\n  getCardDoc = cardId => this.db.collection('cards').doc(cardId);\n\n  addCard = ({ boardId, listId, cardTitle }) => {\n    this.db\n      .collection('cards')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        listId,\n        boardId,\n        cardTitle\n      })\n      .then(ref => {\n        this.updateList(listId, {\n          cardIds: this.addToArray(ref.id),\n          lastModifiedAt: this.getTimestamp()\n        });\n      });\n  };\n\n  updateCard = (cardId, newValue = {}) => {\n    this.getCardDoc(cardId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  deleteCard = ({ cardId, listId }) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const listRef = this.getListDoc(listId);\n    batch.delete(cardRef);\n    batch.update(listRef, {\n      cardIds: this.removeFromArray(cardId),\n      lastModifiedAt: this.getTimestamp()\n    });\n\n    // Delete tasks assigned to card\n    this.db\n      .collection('tasks')\n      .where('cardId', '==', cardId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('list deleted');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  moveCardToList = ({ cardId, origListId, newListId, updatedCardIds }) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const origListRef = this.getListDoc(origListId);\n    const newListRef = this.getListDoc(newListId);\n    batch.update(cardRef, {\n      listId: newListId,\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(origListRef, {\n      cardIds: this.removeFromArray(cardId),\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(newListRef, {\n      cardIds: updatedCardIds,\n      lastModifiedAt: this.getTimestamp()\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('card moved');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  // Task API\n\n  getTaskDoc = taskId => this.db.collection('tasks').doc(taskId);\n\n  addTask = ({ userId, memberIds = [], boardId = null, cardId = null, dueDate = null, text }) => {\n    this.db\n      .collection('tasks')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        isCompleted: false,\n        createdBy: userId,\n        assignedTo: [userId, ...memberIds],\n        dueDate,\n        boardId,\n        cardId,\n        text\n      })\n      .then(ref => {\n        if (cardId === null) return;\n        this.updateCard(cardId, {\n          taskIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  updateTask = (taskId, newValue = {}) => {\n    this.getTaskDoc(taskId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n}\n\nexport default Firebase;\n","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const BOARD = '/home/board/:id';\n","import React from 'react';\nimport './Button.scss';\n\nconst Button = ({\n  children,\n  type = 'button',\n  onClick,\n  className = '',\n  color = 'neutral',\n  size = 'md',\n  variant = 'text',\n  disabled,\n  name,\n  iconOnly = false,\n  buttonRef,\n  ...props\n}) => (\n  // eslint-disable-next-line react/button-has-type\n  <button\n    className={`${className} ${color} ${size} ${variant} ${\n      iconOnly ? 'icon-only' : ''\n    }`}\n    type={type}\n    onClick={onClick}\n    disabled={disabled}\n    name={name}\n    ref={buttonRef}\n    {...props}\n  >\n    {children}\n  </button>\n);\n\nButton.defaultProps = {\n  type: 'button',\n  className: '',\n  color: 'neutral',\n  size: 'md',\n  variant: 'text',\n  iconOnly: false\n};\n\nexport default Button;\n","import React from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Button } from '../Button';\nimport './SignOutButton.scss';\n\nconst SignOutButton = ({ firebase }) => (\n  <Button\n    type=\"button\"\n    onClick={firebase.signOut}\n    className=\"btn--sign-out\"\n    color=\"primary\"\n  >\n    Sign Out\n  </Button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        authUser: null\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        authUser\n          ? this.setState({ authUser })\n          : this.setState({ authUser: null });\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport AuthUserContext from './context';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          this.props.history.push(ROUTES.SIGN_IN);\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n  return compose(\n    withRouter,\n    withFirebase\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from 'react';\nimport featherIcons from '../../assets/feather/feather-sprite.svg';\n\nfunction Icon(props) {\n  return (\n    <svg\n      className={`feather feather-${props.name} ${props.addClass || ''}`.trim()}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n      height=\"24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <use xlinkHref={`${featherIcons}#${props.name}`} />\n    </svg>\n  );\n}\n\nexport default Icon;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { SignOutButton } from '../SignOut';\nimport './Navbar.scss';\nimport { AuthUserContext } from '../Session';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\n\nconst NavLinksAuth = ({ className = '', onClick }) => (\n  <ul className={`navbar__links ${className}`} onClick={onClick}>\n    <li>\n      <Link to={ROUTES.HOME}>Home</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ADMIN}>Admin</Link>\n    </li>\n    <li>\n      <SignOutButton />\n    </li>\n  </ul>\n);\n\nconst NavLinksNonAuth = ({ className = '', onClick }) => (\n  <ul className={`navbar__links ${className}`} onClick={onClick}>\n    <li>\n      <Link to={ROUTES.SIGN_IN}>Log In</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.SIGN_UP}>Get Started</Link>\n    </li>\n  </ul>\n);\n\nexport default class Navbar extends Component {\n  static defaultProps = {\n    minWidth: 768\n  };\n\n  state = {\n    viewportWidth: window.innerWidth,\n    isMobileNavVisible: false,\n    isTouchEnabled: false\n  };\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick);\n  }\n\n  handleTouch = () => {\n    const { isTouchEnabled } = this.state;\n    if (isTouchEnabled) return;\n    this.setState({\n      isTouchEnabled: true\n    });\n    document.removeEventListener('click', this.handleOutsideClick);\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  handleResize = () => {\n    this.setState({\n      viewportWidth: window.innerWidth\n    });\n  };\n\n  toggleMobileNavVisibility = () => {\n    this.setState(prevState => ({\n      isMobileNavVisible: !prevState.isMobileNavVisible\n    }));\n  };\n\n  handleClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    if (!isMobileView) return;\n    if (e.target.matches('button') || e.target.matches('a')) {\n      this.toggleMobileNavVisibility();\n    }\n  };\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n    window.removeEventListener('resize', this.handleResize);\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleTouch);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n    }\n  }\n\n  handleOutsideClick = e => {\n    e.preventDefault(); // prevents double triggering if `touch` event is fired\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n    console.log('clicked outside');\n    if (!isMobileView || this.navEl.contains(e.target)) return;\n    this.setState({\n      isMobileNavVisible: false\n    });\n  };\n\n  render() {\n    const { viewportWidth, isMobileNavVisible } = this.state;\n    const { minWidth, navRef } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    return (\n      <nav\n        className={`navbar ${isMobileView ? 'is-collapsed' : ''} ${\n          isMobileView && isMobileNavVisible ? 'show-links' : ''\n        }`}\n        ref={el => (this.navEl = el)}\n      >\n        <span className=\"navbar__logo\">\n          <Link to={ROUTES.LANDING}>workflow</Link>\n        </span>\n        {isMobileView && (\n          <Button\n            type=\"button\"\n            color=\"primary\"\n            onClick={this.toggleMobileNavVisibility}\n            iconOnly\n          >\n            <Icon name=\"menu\" />\n          </Button>\n        )}\n        <AuthUserContext.Consumer>\n          {authUser =>\n            authUser ? (\n              <NavLinksAuth onClick={this.handleClick} />\n            ) : (\n              <NavLinksNonAuth onClick={this.handleClick} />\n            )\n          }\n        </AuthUserContext.Consumer>\n      </nav>\n    );\n  }\n}\n","import React from 'react';\nimport './Input.scss';\n\nconst Input = props => {\n  return (\n    <>\n      {!props.hideLabel && (\n        <label htmlFor={props.name} className=\"input__label\">\n          {props.title}\n        </label>\n      )}\n      <input\n        className={props.className}\n        id={props.name}\n        name={props.name}\n        type={props.type}\n        value={props.value}\n        onChange={props.onChange}\n        placeholder={props.placeholder}\n        required={props.isRequired}\n        onBlur={props.onBlur}\n      />\n    </>\n  );\n};\n\nexport default Input;\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  username: '',\n  name: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { username, email, name, passwordOne } = this.state;\n    this.props.firebase\n      .createUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        const userId = authUser.user.uid;\n        return this.props.firebase.addUser({\n          userId,\n          name,\n          username,\n          email\n        });\n      })\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const {\n      username,\n      name,\n      email,\n      passwordOne,\n      passwordTwo,\n      error\n    } = this.state;\n    const isInvalid =\n      passwordOne === '' ||\n      passwordTwo === '' ||\n      email === '' ||\n      username === '' ||\n      passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"name\"\n          title=\"Full Name\"\n          value={name}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"username\"\n          title=\"Username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordOne\"\n          title=\"Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          title=\"Confirm Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Create Account\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignUpForm);\n","import React from 'react';\nimport './UserFormPage.scss';\n\nconst UserFormPage = ({ title, children }) => (\n  <main className=\"user-form__container\">\n    <h1 className=\"user-form__title\">{title}</h1>\n    {children}\n  </main>\n);\n\nexport default UserFormPage;\n","import React from 'react';\nimport SignUpForm from './SignUpForm';\nimport { UserFormPage } from '../UserFormPage';\n\nconst SignUpPage = () => (\n  <UserFormPage title=\"Create an account\">\n    <SignUpForm />\n  </UserFormPage>\n);\n\nexport default SignUpPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nexport { default as SignUpPage } from './SignUp';\nexport { default as SignUpForm } from './SignUpForm';\nexport { SignUpLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email, password } = this.state;\n    this.props.firebase\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n    const isInvalid = password === '' || email === '';\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"password\"\n          title=\"Password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Log In\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignInForm);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null\n};\n\nclass PasswordForgetForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .passwordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, error } = this.state;\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Reset My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordForgetForm);\n","import React from 'react';\nimport PasswordForgetForm from './PasswordForgetForm';\nimport { UserFormPage } from '../UserFormPage';\n\nconst PasswordForgetPage = () => (\n  <UserFormPage title=\"Forgot your password?\">\n    <PasswordForgetForm />\n  </UserFormPage>\n);\n\nexport default PasswordForgetPage;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport {default as PasswordForgetForm} from './PasswordForgetForm';\nexport {default as PasswordForgetPage} from './PasswordForget';\nexport {PasswordForgetLink};","import React from 'react';\nimport SignInForm from './SignInForm';\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { UserFormPage } from '../UserFormPage';\n\nconst SignInPage = () => (\n  <UserFormPage title=\"Log In\">\n    <SignInForm />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </UserFormPage>\n);\n\nexport default SignInPage;\n","import { Firebase } from '../components/Firebase';\n\nconst firebase = new Firebase();\n\nexport default firebase;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const updateUserBoards = boardIds => {\n  return {\n    type: types.UPDATE_USER_BOARDS,\n    boardIds\n  };\n};\n\nexport const loadUserData = user => {\n  return {\n    type: types.LOAD_USER_DATA,\n    user\n  };\n};\n\nexport const fetchUserData = userId => {\n  return async dispatch => {\n    try {\n      const user = await firebase\n        .getUserDoc(userId)\n        .get()\n        .then(doc => doc.data());\n      dispatch(loadUserData(user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","export const UPDATE_USER_BOARDS = 'ADD_USER_BOARD';\nexport const LOAD_USER_DATA = 'LOAD_USER_DATA';\nexport const LOAD_USER_BOARDS = 'LOAD_USER_BOARDS';\n","export const getUserData = state => {\n  return state.user;\n};\n","import * as types from './types';\n\nconst user = (state = {}, action) => {\n  switch (action.type) {\n    case types.UPDATE_USER_BOARDS:\n      return {\n        ...state,\n        boardIds: [...action.boardIds]\n      };\n    case types.LOAD_USER_DATA: {\n      const { user } = action;\n      return {\n        ...state,\n        ...user\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default user;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const selectBoard = boardId => {\n  return {\n    type: types.SELECT_BOARD,\n    boardId\n  };\n};\n\nexport const selectList = listId => {\n  return {\n    type: types.SELECT_LIST,\n    listId\n  };\n};\n\nexport const selectCard = cardId => {\n  return {\n    type: types.SELECT_CARD,\n    cardId\n  };\n};\n","export const SELECT_BOARD = 'SELECT_BOARD';\nexport const SELECT_LIST = 'SELECT_LIST';\nexport const SELECT_CARD = 'SELECT_CARD';\n","export const getCurrentBoardId = state => {\n  return state.current.boardId;\n};\n\nexport const getCurrentListId = state => {\n  return state.current.listId;\n};\n\nexport const getCurrentCardId = state => {\n  return state.current.cardId;\n};\n\nexport const getCurrent = state => {\n  return state.current;\n};\n","import React, { Component } from 'react';\n\nexport default class BoardGrid extends Component {\n  render() {\n    return <ul className=\"board-grid\">{this.props.children}</ul>;\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BoardTile = props => {\n  const { boardId, boardTitle, onClick } = props;\n  return (\n    <li className=\"board-grid__tile\">\n      <Link\n        className=\"board-grid__link\"\n        to={`/home/board/${boardId}`}\n        onClick={onClick}\n      >\n        <span className=\"board-grid__title\">{boardTitle}</span>\n      </Link>\n    </li>\n  );\n};\n\nexport default BoardTile;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadBoardsById = boardsById => {\n  return {\n    type: types.LOAD_BOARDS_BY_ID,\n    boardsById\n  };\n};\n\nexport const fetchBoardsById = userId => {\n  return async dispatch => {\n    try {\n      const boardsById = await firebase.db\n        .collection('boards')\n        .where('memberIds', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const boardsById = {};\n          snapshot.forEach(doc => {\n            boardsById[doc.id] = doc.data();\n          });\n          return boardsById;\n        });\n      dispatch(loadBoardsById(boardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateBoardsById = board => {\n  return {\n    type: types.UPDATE_BOARDS_BY_ID,\n    board\n  };\n};\n\nexport const reorderLists = (boardId, listIds) => {\n  return {\n    type: types.REORDER_LISTS,\n    boardId,\n    listIds\n  };\n};\n\nexport const updateListIds = (boardId, listIds) => {\n  return {\n    type: types.UPDATE_LIST_IDS,\n    boardId,\n    listIds\n  };\n};\n","export const LOAD_BOARDS_BY_ID = 'LOAD_BOARDS_BY_ID';\nexport const UPDATE_BOARDS_BY_ID = 'UPDATE_BOARDS_BY_ID';\nexport const REORDER_LISTS = 'REORDER_LISTS';\nexport const UPDATE_LIST_IDS = 'UPDATE_LIST_IDS';","export const getBoardsById = state => {\n  return state.boardsById;\n};\n\nexport const getBoardsArray = state => {\n  const { boardsById } = state;\n  return Object.keys(boardsById).map(boardId => {\n    return {\n      boardId,\n      ...boardsById[boardId]\n    };\n  });\n};\n\nexport const getBoard = (state, boardId) => {\n  const { boardsById } = state;\n  return boardsById[boardId];\n};\n","import * as types from './types';\n\nconst boardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_BOARDS_BY_ID: {\n      const { boardsById } = action;\n      return {\n        ...state,\n        ...boardsById\n      };\n    }\n    case types.UPDATE_BOARDS_BY_ID: {\n      const { board } = action;\n      return {\n        ...state,\n        ...board\n      };\n    }\n    case types.UPDATE_LIST_IDS:\n    case types.REORDER_LISTS: {\n      const { boardId, listIds } = action;\n      return {\n        ...state,\n        [boardId]: {\n          ...state[boardId],\n          listIds\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default boardsById;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport BoardGrid from './BoardGrid';\nimport BoardTile from './BoardTile';\nimport './BoardGrid.scss';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Icon } from '../Icon';\n\nclass BoardGridContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const { userId } = this.props.user;\n    this.listener = this.props.firebase.db\n      .collection('boards')\n      .where('memberIds', 'array-contains', userId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const board = {\n            [change.doc.id]: change.doc.data()\n          };\n          this.props.updateBoardsById(board);\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  }\n\n  render() {\n    const { boardIds, userId } = this.props.user;\n    const { boardsArray, selectBoard } = this.props;\n    const boardTiles = boardsArray.map(board => {\n      const { boardTitle, boardId } = board;\n      return (\n        <BoardTile\n          key={boardId}\n          boardTitle={boardTitle}\n          boardId={boardId}\n          onClick={() => selectBoard(boardId)}\n        />\n      );\n    });\n    return (\n      <section>\n        <BoardGrid>\n          {boardTiles}\n          <button\n            type=\"button\"\n            className=\"board-grid__tile board-grid__btn--add\"\n            onClick={this.props.openBoardComposer}\n          >\n            <Icon name=\"plus-circle\" />\n            Create board\n          </button>\n        </BoardGrid>\n      </section>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUserBoards: boardIds =>\n      dispatch(userActions.updateUserBoards(boardIds)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardGridContainer)\n);\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport './Modal.scss';\n\nconst Modal = ({\n  onModalClose,\n  children,\n  className = '',\n  onModalClick,\n  size = 'md'\n}) => {\n  return (\n    <div className=\"modal\" onClick={onModalClick}>\n      <div className={`modal__content ${className} modal__content--${size}`}>\n        <Button\n          type=\"button\"\n          className=\"modal__btn--close\"\n          onClick={onModalClose}\n          iconOnly\n        >\n          <Icon name=\"x\" />\n        </Button>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport { Modal } from '../Modal';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\nimport './BoardComposer.scss';\n\nconst INITIAL_STATE = {\n  boardTitle: ''\n};\n\nexport default class BoardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { boardTitle } = this.state;\n    const { handleSubmit, onClose } = this.props;\n    this.props.handleSubmit(boardTitle);\n    this.props.onClose();\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { boardTitle } = this.state;\n    return (\n      <Modal onModalClose={this.props.onClose} size=\"sm\">\n        <form onSubmit={this.onSubmit}>\n          <Input\n            name=\"boardTitle\"\n            title=\"Board Title\"\n            value={boardTitle}\n            onChange={this.onChange}\n            type=\"text\"\n          />\n          <Button\n            className=\"board-composer__btn--add\"\n            type=\"submit\"\n            onClick={this.onSubmit}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Create Board\n          </Button>\n        </form>\n      </Modal>\n    );\n  }\n}\n","export const CARD = 'CARD';\nexport const LIST = 'LIST';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input } from '../Input';\nimport { Icon } from '../Icon';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Button } from '../Button';\nimport './ListComposer.scss';\n\nconst INITIAL_STATE = {\n  listTitle: '',\n  isActive: false\n};\n\nclass ListComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ listTitle: '' });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { listTitle } = this.state;\n    const { boardId } = this.props;\n    this.props.firebase.addList({ boardId, listTitle });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = e => {\n    if (e.target.value === '') {\n      this.setState({\n        isActive: false\n      });\n    }\n  };\n\n  render() {\n    const { listTitle, isActive } = this.state;\n    return (\n      <div\n        className={`list-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"list-composer__form\" onSubmit={this.onSubmit}>\n          <Input\n            onChange={this.onChange}\n            value={listTitle}\n            placeholder={isActive ? 'Enter list title...' : 'Add a list'}\n            required={true}\n            name=\"listTitle\"\n            hideLabel={true}\n            className=\"list-composer__input\"\n          />\n          {isActive && (\n            <div className=\"list-composer__footer\">\n              <Button\n                className=\"list-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add List\n              </Button>\n              <Button\n                className=\"list-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => dispatch(userActions.getUserData(userId)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListComposer)\n);\n","import React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { ListComposer } from '../ListComposer';\n\nconst Board = props => {\n  const { boardId, children } = props;\n  return (\n    <Droppable\n      droppableId={boardId}\n      type={droppableTypes.LIST}\n      direction=\"horizontal\"\n    >\n      {provided => (\n        <div\n          className=\"board\"\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n        >\n          {children}\n          {provided.placeholder}\n          <ListComposer boardId={boardId} />\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nexport default Board;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadListsById = listsById => {\n  return {\n    type: types.LOAD_LISTS_BY_ID,\n    listsById\n  };\n};\n\nexport const fetchListsById = boardId => {\n  return async dispatch => {\n    try {\n      const listsById = await firebase.db\n        .collection('lists')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const listsById = {};\n          snapshot.forEach(doc => {\n            listsById[doc.id] = doc.data();\n          });\n          return listsById;\n        });\n      dispatch(loadListsById(listsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateListsById = list => {\n  return {\n    type: types.UPDATE_LISTS_BY_ID,\n    list\n  };\n};\n","export const LOAD_LISTS_BY_ID = 'LOAD_LISTS_BY_ID';\nexport const FETCH_LISTS_BY_ID = 'FETCH_LISTS_BY_ID';\nexport const UPDATE_LISTS_BY_ID = 'UPDATE_LISTS_BY_ID';\nexport const DELETE_CARD = 'DELETE_CARD';\n","export const getListsById = state => {\n  return state.listsById;\n};\n\nexport const getListsArray = state => {\n  const { listsById, boardsById, current } = state;\n  const { boardId } = current;\n  const board = boardsById[boardId];\n  if (!board) return null;\n  const { listIds } = board;\n\n  return listIds.map(listId => {\n    return {\n      listId,\n      ...listsById[listId]\n    };\n  });\n};\n","import * as types from './types';\n\nconst listsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_LISTS_BY_ID: {\n      const { listsById } = action;\n      return {\n        ...state,\n        ...listsById\n      };\n    }\n    case types.UPDATE_LISTS_BY_ID: {\n      const { list } = action;\n      return {\n        ...state,\n        ...list\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default listsById;\n","export const getCardsById = state => {\n  return state.cardsById;\n};\n\nexport const getCardsArray = (state, ownProps) => {\n  const { cardsById } = state;\n  const { cardIds } = ownProps;\n  return cardIds.map(cardId => cardsById[cardId]);\n};\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadCardsById = cardsById => {\n  return {\n    type: types.LOAD_CARDS_BY_ID,\n    cardsById\n  };\n};\n\nexport const fetchCardsById = boardId => {\n  return async dispatch => {\n    try {\n      const cardsById = await firebase.db\n        .collection('cards')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const cards = {};\n          snapshot.forEach(doc => {\n            cards[doc.id] = {\n              cardId: doc.id,\n              ...doc.data()\n            };\n          });\n          return cards;\n        });\n      dispatch(loadCardsById(cardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateCardsById = card => {\n  return {\n    type: types.UPDATE_CARDS_BY_ID,\n    card\n  };\n};\n\n","export const ADD_CARD = 'ADD_CARD';\nexport const SET_CARD_DUE_DATE = 'SET_CARD_DUE_DATE';\nexport const ADD_CARD_SUBTASK = 'ADD_CARD_SUBTASK';\nexport const REMOVE_CARD_SUBTASK = 'REMOVE_CARD_SUBTASK';\nexport const CHANGE_CARD_DESCRIPTION = 'CHANGE_CARD_DESCRIPTION';\nexport const SET_CARD_COLOR = 'SET_CARD_COLOR';\nexport const DELETE_CARD = 'DELETE_CARD';\nexport const MOVE_CARD = 'MOVE_CARD';\nexport const LOAD_CARDS_BY_ID = 'LOAD_CARDS_BY_ID';\nexport const UPDATE_CARDS_BY_ID = 'UPDATE_CARDS_BY_ID';\n\n","import * as types from './types';\n\nconst cardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_CARDS_BY_ID: {\n      const { cardsById } = action;\n      return {\n        ...state,\n        ...cardsById\n      };\n    }\n    case types.UPDATE_CARDS_BY_ID: {\n      const { card } = action;\n      return {\n        ...state,\n        ...card\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default cardsById;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadTasksById = tasksById => {\n  return {\n    type: types.LOAD_TASKS_BY_ID,\n    tasksById\n  };\n};\n\nexport const fetchTasksById = () => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateTasksById = task => {\n  return {\n    type: types.UPDATE_TASKS_BY_ID,\n    task\n  };\n};\n\nexport const fetchCardTasks = boardId => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserTasks = userId => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .where('assignedTo', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addTask = ({ taskId, taskData }) => {\n  return {\n    type: types.ADD_TASK,\n    taskId,\n    taskData\n  };\n};\n\nexport const deleteTask = taskId => {\n  return {\n    type: types.DELETE_TASK,\n    taskId\n  };\n};\n\nexport const updateTask = ({ taskId, taskData }) => {\n  return {\n    type: types.UPDATE_TASK,\n    taskId,\n    taskData\n  };\n};\n","export const LOAD_TASKS_BY_ID = 'LOAD_TASKS_BY_ID';\nexport const FETCH_TASKS_BY_ID = 'FETCH_TASKS_BY_ID';\nexport const UPDATE_TASKS_BY_ID = 'UPDATE_TASKS_BY_ID';\nexport const ADD_TASK = 'ADD_TASK';\nexport const UPDATE_TASK = 'UPDATE_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\n","export const getTasksById = state => {\n  const { tasksById } = state;\n  return tasksById;\n};\n\nexport const getTasksArray = (state, taskIds) => {\n  const { tasksById } = state;\n  if (!taskIds) return [];\n\n  return taskIds.map(taskId => {\n    return tasksById[taskId];\n  });\n};\n","import * as types from './types';\n\nconst tasksById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_TASKS_BY_ID: {\n      const { tasksById } = action;\n      return {\n        ...state,\n        ...tasksById\n      };\n    }\n    case types.ADD_TASK: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        [taskId]: {\n          taskId,\n          ...taskData\n        }\n      };\n    }\n    case types.DELETE_TASK: {\n      const { taskId } = action;\n      const { [taskId]: deletedTask, ...restOfTasks } = state;\n      return restOfTasks;\n    }\n    case types.UPDATE_TASK: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        [taskId]: {\n          ...state[taskId],\n          ...taskData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default tasksById;\n","import React, { Component, createRef } from 'react';\nimport './Textarea.scss';\n\nexport default class Textarea extends Component {\n  static defaultProps = {\n    isAutoHeightResizeEnabled: true\n  };\n\n  constructor(props) {\n    super(props);\n    this.textareaEl = createRef();\n  }\n\n  componentDidMount() {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n    this.autoHeightResize();\n  }\n\n  autoHeightResize = () => {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n\n    this.textareaEl.current.style.height = '0px'; // resets scroll height\n    this.textareaEl.current.style.height = `${\n      this.textareaEl.current.scrollHeight\n    }px`;\n  };\n\n  render() {\n    const {\n      className,\n      name,\n      value,\n      onChange,\n      placeholder,\n      isRequired,\n      onBlur,\n      onFocus,\n      onKeyDown\n    } = this.props;\n    return (\n      <textarea\n        className={`textarea ${className}`}\n        id={name}\n        name={name}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={isRequired}\n        onBlur={onBlur}\n        onInput={this.autoHeightResize}\n        ref={this.textareaEl}\n        onFocus={onFocus}\n        onKeyDown={onKeyDown}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon } from '../Icon';\nimport { withAuthorization } from '../Session';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport './CardComposer.scss';\n\nconst INITIAL_STATE = {\n  cardTitle: '',\n  isActive: false\n};\n\nclass CardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ cardTitle: '' });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { cardTitle } = this.state;\n    const { boardId } = this.props.current;\n    const { listId } = this.props;\n    this.props.firebase.addCard({ boardId, listId, cardTitle });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onBlur = e => {\n    if (e.target.value !== '') return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const { cardTitle, isActive } = this.state;\n\n    return (\n      <div\n        className={`card-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"card-composer__form\" onSubmit={this.onSubmit}>\n          <Textarea\n            onChange={this.onChange}\n            value={cardTitle}\n            placeholder={isActive ? 'Enter card title...' : 'Add a card'}\n            isRequired\n            name=\"cardTitle\"\n            className=\"card-composer__textarea\"\n            isAutoHeightResizeEnabled={false}\n          />\n          {isActive && (\n            <div className=\"card-composer__footer\">\n              <Button\n                className=\"card-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add Card\n              </Button>\n              <Button\n                className=\"card-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardComposer)\n);\n","import React from 'react';\nimport './Menu.scss';\n\nconst Menu = ({ children, onClick, className = '' }) => {\n  return <ul className={`menu ${className}`} onClick={onClick}>{children}</ul>;\n};\n\nexport default Menu;\n","import React from 'react';\nimport './Menu.scss';\n\nconst MenuItem = ({ children, className = '' }) => {\n  return <li className={`menu__item ${className}`}>{children}</li>;\n};\n\nexport default MenuItem;\n","import React, { Component } from 'react';\n\nexport default class Popover extends Component {\n  componentDidMount() {\n    document.addEventListener('click', this.handleOutsideClick, false);\n  }\n\n  handleOutsideClick = e => {\n    const { onOutsideClick } = this.props;\n    onOutsideClick(e.target);\n    e.preventDefault();\n    document.removeEventListener('click', this.handleOutsideClick);\n  };\n\n  render() {\n    const { className, onClick, style, children } = this.props;\n    return (\n      <div className={`popover ${className}`} onClick={onClick} style={style}>\n        {children}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from '../Button';\nimport Popover from './Popover';\nimport './Popover.scss';\n\nexport default class PopoverWrapper extends Component {\n  state = {\n    isOpen: false\n  };\n\n  static defaultProps = {\n    wrapperClass: '',\n    popoverClass: '',\n    buttonProps: {},\n    align: 'left',\n    anchorEl: null\n  };\n\n  handleOutsideClick = target => {\n    if (this.componentEl && !this.componentEl.contains(target)) {\n      this.setState({\n        isOpen: false\n      });\n    }\n  };\n\n  toggleOpen = () => {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  };\n\n  render() {\n    const {\n      children,\n      alignInner,\n      alignOuter,\n      buttonProps,\n      wrapperClass,\n      popoverClass,\n      anchorEl\n    } = this.props;\n    const { isOpen } = this.state;\n\n    let popoverWrapperStyle = null;\n    \n    if (anchorEl) {\n      const { offsetTop, offsetLeft } = anchorEl;\n      popoverWrapperStyle = {\n        position: 'absolute',\n        top: offsetTop,\n        [alignOuter]: offsetLeft\n      };\n    }\n\n    return (\n      <div\n        className={`popover-wrapper ${isOpen ? 'is-active' : ''} ${wrapperClass}`}\n        ref={el => (this.componentEl = el)}\n        style={popoverWrapperStyle}\n      >\n        <Button type=\"button\" onClick={this.toggleOpen} {...buttonProps} />\n        {isOpen && (\n          <Popover\n            className={`align-${alignInner} ${popoverClass}`}\n            onClick={this.toggleOpen}\n            onOutsideClick={this.handleOutsideClick}\n          >\n            {children}\n          </Popover>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport './Card.scss';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { PopoverWrapper } from '../Popover';\nimport { Menu, MenuItem } from '../Menu';\n\nexport default class Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleCardClick = e => {\n    if (e.target.matches('button') || e.target.matches('a')) return;\n    const { cardId, onCardClick } = this.props;\n    onCardClick(cardId);\n  };\n\n  render() {\n    const { cardTitle, cardId, cardIndex } = this.props;\n    return (\n      <Draggable draggableId={cardId} index={cardIndex}>\n        {provided => (\n          <>\n            <div\n              className=\"card\"\n              onClick={this.handleCardClick}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              ref={provided.innerRef}\n            >\n              <div className=\"card__header\" ref={el => (this.headerEl = el)}>\n                <div className=\"card__tags\" />\n                <h3 className=\"card__title\">{cardTitle}</h3>\n              </div>\n              <div className=\"card__footer\">\n                <div className=\"card__labels\" />\n              </div>\n            </div>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { Card } from '../Card';\n\nexport default class Cards extends Component {\n  static propTypes = {\n    listId: PropTypes.string.isRequired\n  };\n\n  /*\n\n  shouldComponentUpdate(nextProps) {\n    if (this.props.cards === nextProps.cards) {\n      return false;\n    }\n    return true;\n  }\n*/\n  componentDidUpdate(prevProps) {\n    if (this.props.cards.length > prevProps.cards.length) {\n      this.scrollToBottom();\n    }\n  }\n\n  scrollToBottom = () => {\n    this.listEnd.scrollIntoView();\n  };\n\n  render() {\n    const { listId, cards, style, onCardClick, onCardDelete } = this.props;\n\n    return (\n      <Droppable droppableId={listId} type={droppableTypes.CARD}>\n        {(provided, snapshot) => (\n          <div\n            className=\"list__content\"\n            ref={provided.innerRef}\n            style={{\n              ...style,\n              minHeight: snapshot.isDraggingOver ? 80 : 16\n            }}\n            {...provided.droppableProps}\n          >\n            {cards.map((card, cardIndex) => {\n              const { cardId, cardTitle } = card;\n              return (\n                <Card\n                  key={cardId}\n                  cardTitle={cardTitle}\n                  cardId={cardId}\n                  cardIndex={cardIndex}\n                  listId={listId}\n                  onCardClick={onCardClick}\n                  onCardDelete={onCardDelete}\n                />\n              );\n            })}\n            {provided.placeholder}\n            <div\n              style={{ float: 'left', clear: 'both' }}\n              ref={el => (this.listEnd = el)}\n            />\n          </div>\n        )}\n      </Droppable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { CardComposer } from '../CardComposer';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\nimport { Input } from '../Input';\nimport Cards from './Cards';\nimport './List.scss';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDragging: this.props.isDragging,\n      listTitle: this.props.listTitle\n    };\n  }\n\n  handleListDelete = e => {\n    e.preventDefault();\n    const { listId, boardId, firebase } = this.props;\n    firebase.deleteList({ listId, boardId });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onBlur = e => {\n    const { listTitle, listId, firebase } = this.props;\n    const { listTitle: newListTitle } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newListTitle !== listTitle) {\n      firebase.updateList(listId, {\n        listTitle: newListTitle\n      });\n      console.log('updated!');\n    }\n  };\n\n  render() {\n    const {\n      cards,\n      onCardClick,\n      listId,\n      listIndex,\n      isFetchingCards\n    } = this.props;\n    if (isFetchingCards) return null;\n\n    const { listTitle, viewportHeight } = this.state;\n\n    return (\n      <Draggable draggableId={listId} index={listIndex}>\n        {provided => (\n          <>\n            <section\n              className=\"list\"\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <header\n                className=\"list__header\"\n                ref={el => (this.listHeaderEl = el)}\n              >\n                <Input\n                  className=\"list__input--title\"\n                  name=\"listTitle\"\n                  type=\"text\"\n                  value={listTitle}\n                  onChange={this.onChange}\n                  required\n                  hideLabel\n                  onBlur={this.onBlur}\n                />\n                <PopoverWrapper\n                  wrapperClass=\"list__popover-wrapper\"\n                  popoverClass=\"list__popover\"\n                  alignInner=\"left\"\n                  buttonProps={{\n                    size: 'medium',\n                    iconOnly: true,\n                    className: 'list__btn--more-actions',\n                    children: <Icon name=\"more-vertical\" />\n                  }}\n                >\n                  <Menu>\n                    <MenuItem>\n                      <a href=\"\" onClick={this.handleListDelete}>\n                        Delete\n                      </a>\n                    </MenuItem>\n                  </Menu>\n                </PopoverWrapper>\n              </header>\n              <Cards\n                cards={cards}\n                listId={listId}\n                onCardClick={onCardClick}\n                onCardDelete={this.handleCardDelete}\n              />\n              {provided.placeholder}\n              <CardComposer listId={listId} />\n            </section>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state),\n    cards: cardSelectors.getCardsArray(state, ownProps)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => dispatch(userActions.getUserData(userId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(List)\n);\n","import React from 'react';\nimport './Toolbar.scss';\n\nconst Toolbar = ({ className, children, ...props }) => (\n  <div className={`toolbar ${className}`} {...props}>\n    {children}\n  </div>\n);\n\nToolbar.defaultProps = {\n  className: ''\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport './Checkbox.scss';\n\nconst Checkbox = ({\n  value,\n  id,\n  name,\n  isChecked,\n  onClick,\n  onChange,\n  className,\n  labelClass,\n  ...props\n}) => {\n  return (\n    <label\n      htmlFor={id}\n      onClick={onClick}\n      className={`checkbox__label ${labelClass}`}\n    >\n      {isChecked && <Icon name=\"check\" />}\n      <input\n        type=\"checkbox\"\n        id={id}\n        value={value}\n        name={name}\n        checked={isChecked}\n        className={`checkbox ${className}`}\n        onChange={onChange}\n        {...props}\n      />\n    </label>\n  );\n};\n\nCheckbox.defaultProps = {\n  className: '',\n  labelClass: ''\n};\n\nexport default Checkbox;\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\n\nconst CardEditorMoreActions = ({ onMenuClick }) => (\n  <PopoverWrapper\n    wrapperClass=\"card-editor__popover-wrapper\"\n    popoverClass=\"card-editor__popover\"\n    alignOuter=\"right\"\n    alignInner=\"right\"\n    buttonProps={{\n      size: 'medium',\n      iconOnly: true,\n      className: 'card-editor__toolbar-btn',\n      children: <Icon name=\"more-horizontal\" />\n    }}\n  >\n    <Menu onClick={onMenuClick}>\n      <MenuItem>\n        <a href=\"\" data-action=\"delete\">\n          Delete card\n        </a>\n      </MenuItem>\n    </Menu>\n  </PopoverWrapper>\n);\n\nexport default CardEditorMoreActions;\n","export const BACKSPACE = 'Backspace';\nexport const ENTER = 'Enter';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { Input } from '../Input';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { Modal } from '../Modal';\nimport { Toolbar } from '../Toolbar';\nimport { Checkbox } from '../Checkbox';\nimport CardEditorMoreActions from './CardEditorMoreActions';\nimport * as keys from '../../constants/keys';\nimport './CardEditor.scss';\n\nclass CardEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cardId: this.props.card.cardId,\n      cardTitle: this.props.card.cardTitle,\n      cardDescription: this.props.card.cardDescription,\n      newTask: '',\n      cardTasks: this.props.tasksArray.reduce((tasks, task) => {\n        const { taskId, text, isCompleted } = task;\n        tasks[taskId] = {\n          text,\n          isCompleted\n        };\n        return tasks;\n      }, {}),\n      cardComment: '',\n      currentFocus: null,\n      isCommentFormFocused: false\n    };\n    this.commentFormRef = null;\n    this.setCommentFormRef = element => {\n      this.commentFormRef = element;\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.tasksArray.length !== Object.keys(state.cardTasks).length) {\n      return {\n        cardTasks: props.tasksArray.reduce((tasks, task) => {\n          const { taskId, text, isCompleted } = task;\n          tasks[taskId] = {\n            text,\n            isCompleted\n          };\n          return tasks;\n        }, {})\n      };\n    }\n    return null;\n  }\n\n  updateCardTasks = () => {\n    const { tasksArray } = this.props;\n    this.setState({\n      cardTasks: tasksArray.reduce((tasks, task) => {\n        const { taskId, text, isCompleted } = task;\n        tasks[taskId] = {\n          text,\n          isCompleted\n        };\n        return tasks;\n      }, {})\n    });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleCardDelete = () => {\n    const { card, firebase, onCardEditorClose } = this.props;\n    const { cardId, listId } = card;\n    firebase.deleteCard({ cardId, listId });\n    onCardEditorClose();\n  };\n\n  onBlur = e => {\n    const { card, firebase } = this.props;\n    const { cardTitle, cardDescription, currentFocus } = this.state;\n    const cardKey = e.target.name;\n\n    // When field loses focus, update card if change is detected\n\n    if (this.state[cardKey] !== card[cardKey]) {\n      const { cardId } = card;\n      firebase.updateCard(cardId, {\n        [cardKey]: this.state[cardKey]\n      });\n      console.log('updated!');\n    }\n\n    this.setState({\n      currentFocus: null\n    });\n  };\n\n  onSubmitComment = e => {\n    console.log(e.target.value);\n\n    e.preventDefault();\n  };\n\n  resetNewTaskForm = () => {\n    this.setState({\n      newTask: ''\n    });\n  };\n\n  addTask = e => {\n    const { user, firebase, card } = this.props;\n    const { userId } = user;\n    const { cardId, boardId } = card;\n    const { newTask: text } = this.state;\n    firebase.addTask({ userId, text, cardId, boardId });\n    this.resetNewTaskForm();\n    e.preventDefault();\n  };\n\n  onFocus = e => {\n    this.setState({\n      currentFocus: e.target.name\n    });\n  };\n\n  handleModalClick = e => {\n    const { currentFocus } = this.state;\n    if (\n      (currentFocus === 'cardComment' &&\n        !this.commentFormRef.contains(e.target)) ||\n      (currentFocus === 'newTask' && !this.newTaskFormEl.contains(e.target))\n    ) {\n      this.setState({\n        currentFocus: null\n      });\n    }\n  };\n\n  handleMoreActions = e => {\n    if (!e.target.matches('a')) return;\n    const { action } = e.target.dataset;\n    const { cardId } = this.props;\n    switch (action) {\n      case 'delete':\n        this.handleCardDelete(cardId);\n        break;\n    }\n    e.preventDefault(); // prevents page reload\n  };\n\n  onTaskChange = e => {\n    const { cardTasks } = this.state;\n    this.setState({\n      cardTasks: {\n        ...cardTasks,\n        [e.target.name]: {\n          ...cardTasks[e.target.name],\n          text: e.target.value\n        }\n      }\n    });\n  };\n\n  handleCheckboxChange = e => {\n    const taskId = e.target.name;\n    this.toggleTaskCompletion(taskId);\n  };\n\n  toggleTaskCompletion = taskId => {\n    const { isCompleted } = this.state.cardTasks[taskId];\n    this.setState(prevState => ({\n      cardTasks: {\n        ...prevState.cardTasks,\n        [taskId]: {\n          ...prevState.cardTasks[taskId],\n          isCompleted: !prevState.cardTasks[taskId].isCompleted\n        }\n      }\n    }));\n    const { firebase } = this.props;\n    firebase.updateTask(taskId, { isCompleted: !isCompleted });\n  };\n\n  updateTask = e => {\n    const taskId = e.target.name;\n    const { cardTasks } = this.state;\n    const { text } = cardTasks[taskId];\n    const { firebase } = this.props;\n    firebase.updateTask(taskId, { text });\n  };\n\n  deleteTask = e => {\n    if (e.target.value !== '' || e.key !== keys.BACKSPACE) return;\n    console.log(e.target.name);\n    console.log(e.target.value !== '');\n  };\n\n  render() {\n    const { onCardEditorClose, card, user, tasksById, tasksArray } = this.props;\n    const { taskIds } = card;\n    const hasTasks = taskIds !== undefined && taskIds.length > 0;\n\n    const {\n      cardTitle,\n      cardDescription,\n      cardComment,\n      currentFocus,\n      newTask,\n      cardTasks\n    } = this.state;\n    const isCommentInvalid = cardComment === '';\n    const isNewTaskInvalid = newTask === '';\n    const commentFormIsFocused = currentFocus === 'cardComment';\n\n    return (\n      <Modal\n        onModalClose={onCardEditorClose}\n        className=\"card-editor\"\n        onModalClick={this.handleModalClick}\n        size=\"lg\"\n      >\n        <Toolbar className=\"card-editor__toolbar\">\n          <CardEditorMoreActions onMenuClick={this.handleMoreActions} />\n        </Toolbar>\n        <form\n          name=\"editCardForm\"\n          onFocus={this.onFocus}\n          className=\"card-editor__edit-card-form\"\n        >\n          <Textarea\n            className=\"card-editor__textarea--title\"\n            name=\"cardTitle\"\n            value={cardTitle}\n            onChange={this.onChange}\n            required\n            onBlur={this.onBlur}\n            onFocus={this.onFocus}\n          />\n          <div\n            className={`card-editor__section ${\n              currentFocus === 'cardDescription' ? 'is-focused' : ''\n            }`}\n          >\n            <div className=\"card-editor__section-icon\">\n              <Icon name=\"edit-3\" />\n            </div>\n            <Textarea\n              className=\"card-editor__textarea card-editor__textarea--description\"\n              name=\"cardDescription\"\n              value={cardDescription}\n              onChange={this.onChange}\n              placeholder=\"Add a description\"\n              onBlur={this.onBlur}\n              onFocus={this.onFocus}\n            />\n          </div>\n        </form>\n        <div\n          className={`card-editor__section ${\n            currentFocus === 'newTask' ? 'is-focused' : ''\n          }`}\n        >\n          <hr className=\"card-editor__hr\" />\n          {hasTasks && (\n            <ul className=\"card-editor__tasks\">\n              {tasksArray.map(task => {\n                const { taskId } = task;\n                return (\n                  <li className=\"card-editor__task\" key={taskId}>\n                    <Checkbox\n                      id={`cb-${taskId}`}\n                      value={taskId}\n                      name={taskId}\n                      isChecked={cardTasks[taskId].isCompleted}\n                      onChange={this.handleCheckboxChange}\n                      className=\"card-editor__checkbox\"\n                      labelClass=\"card-editor__checkbox-label\"\n                    />\n                    <Textarea\n                      value={cardTasks[taskId].text}\n                      onChange={this.onTaskChange}\n                      onBlur={this.updateTask}\n                      name={taskId}\n                      className=\"card-editor__textarea--task\"\n                      onKeyDown={this.deleteTask}\n                    />\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n          <div className=\"card-editor__section-icon\">\n            <Icon name=\"check-square\" />\n          </div>\n          <form\n            name=\"newTaskForm\"\n            className={`card-editor__new-task-form ${\n              currentFocus === 'newTask' ? 'is-focused' : ''\n            }`}\n            ref={el => (this.newTaskFormEl = el)}\n            onSubmit={this.addTask}\n          >\n            <Textarea\n              className=\"card-editor__textarea card-editor__textarea--new-task\"\n              name=\"newTask\"\n              value={newTask}\n              onChange={this.onChange}\n              placeholder=\"Add a task\"\n              onFocus={this.onFocus}\n            />\n            {currentFocus === 'newTask' && (\n              <Button\n                type=\"submit\"\n                color=\"secondary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isNewTaskInvalid}\n                onClick={this.addTask}\n                className=\"card-editor__btn--add-task\"\n              >\n                Add task\n              </Button>\n            )}\n          </form>\n        </div>\n        <div\n          className={`card-editor__section ${\n            commentFormIsFocused ? 'is-focused' : ''\n          }`}\n        >\n          <hr className=\"card-editor__hr\" />\n          <div className=\"card-editor__section-icon\">\n            <Icon name=\"message-circle\" />\n          </div>\n          <form\n            name=\"commentForm\"\n            className={`card-editor__comment-form ${\n              commentFormIsFocused ? 'is-focused' : ''\n            }`}\n            ref={this.setCommentFormRef}\n          >\n            <Textarea\n              className=\"card-editor__textarea card-editor__textarea--comment\"\n              name=\"cardComment\"\n              value={cardComment}\n              onChange={this.onChange}\n              placeholder=\"Write a comment...\"\n              onFocus={this.onFocus}\n            />\n            {commentFormIsFocused && (\n              <Button\n                type=\"submit\"\n                color=\"secondary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isCommentInvalid}\n                onClick={this.onSubmitComment}\n                name=\"cardCommentSubmit\"\n                className=\"card-editor__btn--submit-comment\"\n              >\n                Comment\n              </Button>\n            )}\n          </form>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    current: currentSelectors.getCurrent(state),\n    listsById: listSelectors.getListsById(state),\n    listsArray: listSelectors.getListsArray(state),\n    tasksById: taskSelectors.getTasksById(state),\n    tasksArray: taskSelectors.getTasksArray(state, ownProps.card.taskIds)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId)),\n    updateListsById: list => dispatch(listActions.updateListsById(list)),\n    updateCardsById: card => dispatch(cardActions.updateCardsById(card)),\n    reorderLists: (boardId, listIds) =>\n      dispatch(boardActions.reorderLists(boardId, listIds))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardEditor)\n);\n","\n/**\n * Checks if two arrays or objects are equal\n * @param {Array|Object} value\n * @param {Array|Object} other\n */\n\n// eslint-disable-next-line import/prefer-default-export\nexport const isEqual = (value, other) => {\n  const type = Object.prototype.toString.call(value);\n\n  // If both objects are not the same type, return false\n  if (type !== Object.prototype.toString.call(other)) return false;\n\n  const typeObj = '[object Object]';\n  const typeArr = '[object Array]';\n  // If items are neither objects nor arrays, return false\n  if (type !== typeObj && type !== typeArr) return false;\n\n  // Compare length of two items\n  const valueLen = type === typeArr ? value.length : Object.keys(value).length;\n  const otherLen = type === typeArr ? other.length : Object.keys(other).length;\n  if (valueLen !== otherLen) return false;\n\n  const compare = (item1, item2) => {\n    const typeFunc = '[object Function]';\n    const itemType = Object.prototype.toString.call(item1);\n    if (itemType !== Object.prototype.toString.call(item2)) return false;\n    if (itemType === typeObj || itemType === typeArr) {\n      return isEqual(item1, item2);\n    }\n    if (itemType === typeFunc) {\n      return item1.toString() === item2.toString();\n    }\n    return item1 === item2;\n  };\n\n  if (type === typeArr) {\n    for (let i = 0; i < valueLen; i++) {\n      if (!compare(value[i], other[i])) return false;\n    }\n  } else {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (compare(value[key], other[key]) === false) return false;\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * Delays callback execution until next browser repaint\n * Best used for `scroll` and `resize` window events\n * @param {Function} callback - The function to debounce\n */\n\nexport const windowDebouncer = callback => {\n  let request;\n\n  return (...args) => {\n    const context = this;\n\n    if (request) {\n      window.cancelAnimationFrame(request);\n    }\n\n    request = window.requestAnimationFrame(() => {\n      callback.apply(context, args);\n    });\n  };\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport * as ROUTES from '../../constants/routes';\nimport Board from './Board';\nimport { Input } from '../Input';\nimport { List } from '../List';\nimport { CardEditor } from '../CardEditor';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { utils } from '../../utils';\nimport './Board.scss';\n\nclass BoardContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: true,\n      isDragging: false,\n      isCardEditorOpen: false,\n      boardTitle: this.props.boardTitle\n    };\n  }\n\n  componentDidMount() {\n    const {\n      current,\n      fetchListsById,\n      fetchCardsById,\n      fetchCardTasks,\n      firebase,\n      updateBoardsById,\n      updateListsById,\n      updateCardsById,\n      boardId,\n      board,\n      updateListIds,\n      addTask,\n      updateTask,\n      deleteTask\n    } = this.props;\n\n    if (current.boardId !== boardId) {\n      this.props.selectBoard(boardId);\n    }\n\n    fetchListsById(boardId);\n    fetchCardsById(boardId);\n    fetchCardTasks(boardId).then(() => {\n      this.setState({\n        isFetching: false\n      });\n    });\n    this.boardObserver = firebase.getBoardDoc(boardId).onSnapshot(snapshot => {\n      const updatedBoard = snapshot.data();\n      if (!utils.isEqual(updatedBoard.listIds, board.listIds)) {\n        updateListIds(boardId, updatedBoard.listIds);\n      }\n    });\n    this.listObserver = firebase.db\n      .collection('lists')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const list = {\n            [change.doc.id]: change.doc.data()\n          };\n          updateListsById(list);\n        });\n      });\n    this.taskObserver = firebase.db\n      .collection('tasks')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const taskId = change.doc.id;\n          const taskData = change.doc.data();\n          if (change.type === 'added') {\n            addTask({ taskId, taskData });\n          }\n          if (change.type === 'modified') {\n            updateTask({ taskId, taskData });\n          }\n          if (change.type === 'removed') {\n            deleteTask(taskId);\n          }\n        });\n      });\n    this.cardObserver = firebase.db\n      .collection('cards')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const card = {\n            [change.doc.id]: {\n              cardId: change.doc.id,\n              ...change.doc.data()\n            }\n          };\n          updateCardsById(card);\n        });\n      });\n    console.log('mounted');\n  }\n\n  componentWillUnmount() {\n    this.boardObserver();\n    this.listObserver();\n    this.cardObserver();\n    this.taskObserver();\n  }\n\n  onDragStart = () => {\n    this.setState({\n      isDragging: true\n    });\n  };\n\n  onDragEnd = ({ destination, draggableId, source, type }) => {\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    const { firebase } = this.props;\n    if (type === droppableTypes.CARD) {\n      const { listsById } = this.props;\n      const isMovedWithinList = source.droppableId === destination.droppableId;\n      const updatedCardIds = [...listsById[destination.droppableId].cardIds];\n      if (isMovedWithinList) {\n        updatedCardIds.splice(source.index, 1);\n        updatedCardIds.splice(destination.index, 0, draggableId);\n        firebase.updateList(source.droppableId, {\n          cardIds: updatedCardIds\n        });\n      } else {\n        updatedCardIds.splice(destination.index, 0, draggableId);\n        firebase.moveCardToList({\n          cardId: draggableId,\n          origListId: source.droppableId,\n          newListId: destination.droppableId,\n          updatedCardIds\n        });\n      }\n    }\n\n    if (type === droppableTypes.LIST) {\n      const { boardsById, current, reorderLists } = this.props;\n      const { boardId } = current;\n      const updatedListIds = [...boardsById[boardId].listIds];\n      updatedListIds.splice(source.index, 1);\n      updatedListIds.splice(destination.index, 0, draggableId);\n      firebase.updateBoard(boardId, {\n        listIds: updatedListIds\n      });\n      reorderLists(boardId, updatedListIds);\n    }\n\n    this.setState({\n      isDragging: false\n    });\n  };\n\n  toggleCardEditor = () => {\n    this.setState(prevState => ({\n      isCardEditorOpen: !prevState.isCardEditorOpen\n    }));\n  };\n\n  handleCardClick = cardId => {\n    this.props.selectCard(cardId);\n    this.toggleCardEditor();\n  };\n\n  onTitleChange = e => {\n    this.setState({\n      boardTitle: e.target.value\n    });\n  };\n\n  onTitleBlur = e => {\n    const { boardTitle, boardId, firebase } = this.props;\n    const { boardTitle: newBoardTitle } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newBoardTitle !== boardTitle) {\n      firebase.updateBoard(boardId, {\n        boardTitle: newBoardTitle\n      });\n      console.log('updated!');\n    }\n  };\n\n  render() {\n    const { isFetching, isCardEditorOpen } = this.state;\n    const {\n      current,\n      boardsById,\n      listsArray,\n      cardsById,\n      boardId,\n      board\n    } = this.props;\n    if (isFetching) return null;\n    const { cardId } = current;\n    const { boardTitle } = board;\n    const lists = listsArray.map((list, listIndex) => {\n      const { listId, listTitle, cardIds } = list;\n      return (\n        <List\n          listId={listId}\n          key={listId}\n          listIndex={listIndex}\n          listTitle={listTitle}\n          cardIds={cardIds}\n          isFetchingCards={this.state.isFetching}\n          isDragging={this.state.isDragging}\n          onCardClick={this.handleCardClick}\n          boardId={boardId}\n        />\n      );\n    });\n\n    return (\n      <main className=\"board-container\">\n        <Input\n          className=\"board__input--title\"\n          name=\"boardTitle\"\n          type=\"text\"\n          value={boardTitle}\n          onChange={this.onTitleChange}\n          required\n          hideLabel\n          onBlur={this.onTitleBlur}\n        />\n        <DragDropContext\n          onDragEnd={this.onDragEnd}\n          onDragStart={this.onDragStart}\n        >\n          <Board boardId={boardId}>{lists}</Board>\n        </DragDropContext>\n        {isCardEditorOpen && (\n          <CardEditor\n            card={cardsById[cardId]}\n            onCardEditorClose={this.toggleCardEditor}\n          />\n        )}\n      </main>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    current: currentSelectors.getCurrent(state),\n    listsById: listSelectors.getListsById(state),\n    listsArray: listSelectors.getListsArray(state),\n    cardsById: cardSelectors.getCardsById(state),\n    board: boardSelectors.getBoard(state, ownProps.boardId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId)),\n    selectCard: cardId => dispatch(currentActions.selectCard(cardId)),\n    fetchListsById: boardId => dispatch(listActions.fetchListsById(boardId)),\n    updateListsById: list => dispatch(listActions.updateListsById(list)),\n    fetchCardsById: boardId => dispatch(cardActions.fetchCardsById(boardId)),\n    fetchCardTasks: boardId => dispatch(taskActions.fetchCardTasks(boardId)),\n    updateCardsById: card => dispatch(cardActions.updateCardsById(card)),\n    reorderLists: (boardId, listIds) =>\n      dispatch(boardActions.reorderLists(boardId, listIds)),\n    updateListIds: (boardId, listIds) =>\n      dispatch(boardActions.updateListIds(boardId, listIds)),\n    addTask: ({ taskId, taskData }) => dispatch(taskActions.addTask({ taskId, taskData })),\n    deleteTask: taskId => dispatch(taskActions.deleteTask(taskId)),\n    updateTask: ({ taskId, taskData }) =>\n      dispatch(taskActions.updateTask({ taskId, taskData }))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardContainer)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { withAuthorization } from '../Session';\nimport * as ROUTES from '../../constants/routes';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { currentSelectors } from '../../ducks/current';\nimport { BoardGridContainer } from '../BoardGrid';\nimport { BoardComposer } from '../BoardComposer';\nimport { BoardContainer } from '../Board';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport './Home.scss';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isBoardComposerOpen: false,\n      isFetching: true\n    };\n  }\n\n  componentDidMount() {\n    const userId = this.props.firebase.auth.currentUser.uid;\n    console.log('mounted home');\n    this.props.fetchUserData(userId);\n    this.props.fetchBoardsById(userId).then(() =>\n      this.setState({\n        isFetching: false\n      })\n    );\n  }\n\n  toggleBoardComposer = () => {\n    this.setState(prevState => ({\n      isBoardComposerOpen: !prevState.isBoardComposerOpen\n    }));\n  };\n\n  createBoard = boardTitle => {\n    const userId = this.props.user.userId;\n    this.props.firebase.addBoard({ userId, boardTitle });\n  };\n\n  render() {\n    const { isBoardComposerOpen, isFetching } = this.state;\n    const userId = this.props.user.userId;\n    if (isFetching) return null;\n    return (\n      <>\n        {isBoardComposerOpen && (\n          <BoardComposer\n            onClose={this.toggleBoardComposer}\n            handleSubmit={this.createBoard}\n          />\n        )}\n        <Switch>\n          <Route\n            exact\n            path={ROUTES.HOME}\n            render={() => (\n              <main className=\"main\">\n                <h1>Home</h1>\n                {userId && (\n                  <BoardGridContainer\n                    openBoardComposer={this.toggleBoardComposer}\n                  />\n                )}\n              </main>\n            )}\n          />\n          <Route\n            path={ROUTES.BOARD}\n            render={props => (\n              <BoardContainer boardId={props.match.params.id} {...props} />\n            )}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    currentBoardId: currentSelectors.getCurrentBoardId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUserData: userId => dispatch(userActions.fetchUserData(userId)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(HomePage)\n);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .passwordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n    const isInvalid = passwordOne === '' || passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"passwordOne\"\n          title=\"New Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          title=\"Confirm New Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Change My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React from 'react';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport { PasswordChangeForm } from '../PasswordChange';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport './Account.scss';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <main className=\"account\">\n        <h1>Account: {authUser.email}</h1>\n        <section className=\"account__section\">\n        <h2>Forgot your password?</h2>\n          <PasswordForgetForm />\n        </section>\n        <section className=\"account__section\">\n        <h2>Change your password.</h2>\n          <PasswordChangeForm />\n        </section>\n      </main>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(AccountPage);\n","import React, { Component } from 'react';\nimport { Navbar } from '../Navbar';\nimport './Header.scss';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <Navbar />\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport { Navbar } from '../Navbar';\nimport * as ROUTES from '../../constants/routes';\nimport { LandingPage } from '../Landing';\nimport { SignUpPage } from '../SignUp';\nimport { SignInPage } from '../SignIn';\nimport { PasswordForgetPage } from '../PasswordForget';\nimport { HomePage } from '../Home';\nimport { AccountPage } from '../Account';\nimport { AdminPage } from '../Admin';\nimport { withAuthentication } from '../Session';\nimport { Header } from '../Header';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Header />\n        <Switch>\n          <Route exact path={ROUTES.LANDING} component={LandingPage} />\n          <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n          <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n          <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n          <Route path={ROUTES.HOME} component={HomePage} />\n          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n          <Route path={ROUTES.ADMIN} component={AdminPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { boardsById } from '../ducks/boards';\nimport { cardsById } from '../ducks/cards';\nimport { listsById } from '../ducks/lists';\nimport { user } from '../ducks/user';\nimport { current } from '../ducks/current';\nimport { tasksById } from '../ducks/tasks';\n\nexport default combineReducers({\n  boardsById,\n  cardsById,\n  listsById,\n  user,\n  current,\n  tasksById\n});\n","import * as types from './types';\n\nconst current = (state = {}, action) => {\n  switch (action.type) {\n    case types.SELECT_BOARD: {\n      const { boardId } = action;\n      return {\n        ...state,\n        boardId\n      };\n    }\n    case types.SELECT_LIST: {\n      const { listId } = action;\n      return {\n        ...state,\n        listId\n      };\n    }\n    case types.SELECT_CARD: {\n      const { cardId } = action;\n      return {\n        ...state,\n        cardId\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport { current };\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\n\nexport default history;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport 'normalize.css';\nimport './index.scss';\nimport { App } from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { FirebaseContext } from './components/Firebase';\nimport reducers from './store/reducers';\nimport firebase from './store/firebase';\nimport history from './store/history';\n\nconst store = createStore(reducers, {}, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <FirebaseContext.Provider value={firebase}>\n      <Router basename={process.env.PUBLIC_URL} history={history}>\n        <App />\n      </Router>\n    </FirebaseContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}