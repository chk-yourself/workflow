{"version":3,"sources":["components/Firebase/context.js","components/Firebase/Firebase.js","constants/routes.js","components/SignOut/SignOutButton.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Navigation/Navigation.js","components/Input/Input.js","components/SignUp/SignUpForm.js","components/SignUp/SignUp.js","components/SignUp/index.js","components/SignIn/SignInForm.js","components/PasswordForget/PasswordForgetForm.js","components/PasswordForget/PasswordForget.js","components/PasswordForget/index.js","components/SignIn/SignIn.js","store/firebase.js","ducks/user/actions.js","ducks/user/types.js","ducks/user/selectors.js","ducks/user/reducers.js","ducks/current/actions.js","ducks/current/types.js","ducks/current/selectors.js","components/BoardGrid/BoardGrid.js","components/BoardGrid/BoardTile.js","ducks/boards/actions.js","ducks/boards/types.js","ducks/boards/selectors.js","ducks/boards/reducers.js","components/BoardGrid/BoardGridContainer.js","components/Board/Board.js","ducks/lists/actions.js","ducks/lists/types.js","ducks/lists/selectors.js","ducks/lists/reducers.js","components/FeatherIcon/FeatherIcon.js","components/Card/Card.js","ducks/cards/selectors.js","ducks/cards/actions.js","ducks/cards/types.js","ducks/cards/reducers.js","components/Textarea/Textarea.js","components/Card/CardComposer.js","components/List/List.js","components/List/ListComposer.js","components/List/ListContainer.js","components/Board/BoardContainer.js","components/Modal/Modal.js","components/Board/BoardComposer.js","components/Home/Home.js","components/PasswordChange/PasswordChangeForm.js","components/Account/Account.js","components/Header/Header.jsx","components/App/App.js","serviceWorker.js","store/reducers.js","ducks/current/reducers.js","store/history.js","index.js","assets/feather/feather-sprite.svg"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","createUserWithEmailAndPassword","email","password","auth","signInWithEmailAndPassword","signOut","passwordReset","sendPasswordResetEmail","passwordUpdate","newPassword","currentUser","updatePassword","addUser","_ref","userId","name","username","_ref$boardIds","boardIds","db","collection","doc","set","updateUser","newValue","arguments","length","undefined","update","updateBoard","boardId","updateList","listId","updateCard","cardId","getUserDoc","getBoardDoc","getTimestamp","firestore","FieldValue","serverTimestamp","addToArray","value","arrayUnion","addBoard","_ref2","boardTitle","add","title","createdAt","lastModifiedAt","listIds","authorId","memberIds","then","ref","id","addList","_ref3","listTitle","cardIds","addCard","_ref4","cardTitle","initializeApp","HOME","type","onClick","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","authUser","inherits","createClass","key","_this2","listener","onAuthStateChanged","setState","Session_context","Provider","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","NavigationAuth","className","Link","to","ROUTES","SignOut_SignOutButton","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","Input","hideLabel","htmlFor","onChange","placeholder","required","isRequired","INITIAL_STATE","passwordOne","passwordTwo","error","SignUpForm","onSubmit","e","_this$state","user","uid","objectSpread","catch","preventDefault","defineProperty","target","_this$state2","isInvalid","components_Input_Input","disabled","message","SignUpPage","SignUp_SignUpForm","SignUpLink","SignInForm","PasswordForgetForm","PasswordForgetPage","PasswordForget_PasswordForgetForm","PasswordForgetLink","SignInPage","SignIn_SignInForm","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","updateUserBoards","getUserData","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","get","data","sent","loadUserData","t0","console","log","stop","_x","apply","action","toConsumableArray","selectBoard","selectList","selectCard","types","getCurrentBoardId","current","getCurrentListId","getCurrentCardId","getCurrent","BoardGrid","children","BoardTile","concat","loadBoardsById","boardsById","fetchBoardsById","where","snapshot","forEach","updateBoardsById","board","getBoardsById","getBoardsArray","keys","map","BoardGridContainer","onSnapshot","querySnapshot","docChanges","change","_this$props$user","_this$props","boardsArray","boardTiles","BoardGrid_BoardTile","BoardGrid_BoardGrid","openBoardComposer","connect","userSelectors","boardSelectors","userActions","boardActions","currentActions","Board","loadListsById","listsById","fetchListsById","updateListsById","list","getListsById","getListsArray","FeatherIcon","addClass","trim","xmlns","xmlnsXlink","viewBox","width","height","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","xlinkHref","featherIcons","Card","FeatherIcon_FeatherIcon","getCardsById","cardsById","getCardsArray","loadCardsById","fetchCardsById","updateCardsById","card","Textarea","style","CardComposer","resetForm","onFocus","isActive","onBlur","components_Textarea_Textarea","Fragment","currentSelectors","List","ListComposer","ListContainer","isFetching","_this$props$current","cards","Card_Card_Card","List_List_List","components_Card_CardComposer","listSelectors","listsArray","cardSelectors","listActions","cardActions","BoardContainer","lists","List_ListContainer","components_Board_Board","List_ListComposer","Modal","onModalClose","BoardComposer","handleSubmit","onClose","components_Modal_Modal","HomePage","toggleBoardComposer","prevState","showCreateBoardForm","createBoard","BoardComposer_BoardComposer","Switch","Route","exact","path","render","BoardGrid_BoardGridContainer","Board_BoardContainer","currentBoardId","PasswordChangeForm","PasswordChange_PasswordChangeForm","Header","components_Navigation_Navigation","Header_Header_Header","component","LandingPage","AccountPage","AdminPage","Boolean","window","location","hostname","match","combineReducers","createBrowserHistory","basename","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","es","context","Router","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.93262f5e.chunk.js","sourcesContent":["import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import firebase from 'firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\nclass Firebase {\n  constructor() {\n    firebase.initializeApp(config);\n    this.auth = firebase.auth();\n    this.db = firebase.firestore();\n  }\n\n  // Auth API\n  createUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  signInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  signOut = () => this.auth.signOut();\n\n  passwordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  passwordUpdate = newPassword =>\n    this.auth.currentUser.updatePassword(newPassword);\n\n  // User API\n\n  addUser = ({ userId, name, username, email, boardIds = [] }) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .set({ userId, name, username, email, boardIds });\n\n  updateUser = (userId, newValue = {}) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .update(newValue);\n\n  updateBoard = (boardId, newValue = {}) =>\n    this.db\n      .collection('boards')\n      .doc(boardId)\n      .update(newValue);\n\n  updateList = (listId, newValue = {}) =>\n    this.db\n      .collection('lists')\n      .doc(listId)\n      .update(newValue);\n\n  updateCard = (cardId, newValue = {}) =>\n    this.db\n      .collection('cards')\n      .doc(cardId)\n      .update(newValue);\n\n  getUserDoc = userId => this.db.collection('users').doc(userId);\n\n  getBoardDoc = boardId => this.db.collection('boards').doc(boardId);\n\n  getTimestamp = () => firebase.firestore.FieldValue.serverTimestamp();\n\n  addToArray = value => firebase.firestore.FieldValue.arrayUnion(value);\n\n  addBoard = ({ userId, boardTitle }) => {\n    this.db\n      .collection('boards')\n      .add({\n        title: boardTitle,\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        listIds: [],\n        authorId: userId,\n        memberIds: [userId]\n      })\n      .then(ref => {\n        this.updateUser(userId, {\n          boardIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  addList = ({ boardId, listTitle }) => {\n    this.db\n      .collection('lists')\n      .add({\n        title: listTitle,\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        cardIds: [],\n        boardId\n      })\n      .then(ref => {\n        this.updateBoard(boardId, {\n          listIds: this.addToArray(ref.id),\n          lastModifiedAt: this.getTimestamp()\n        });\n      });\n  };\n\n  addCard = ({ boardId, listId, cardTitle }) => {\n    this.db\n      .collection('cards')\n      .add({\n        title: cardTitle,\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        listId,\n        boardId\n      })\n      .then(ref => {\n        this.updateList(listId, {\n          cardIds: this.addToArray(ref.id),\n          lastModifiedAt: this.getTimestamp()\n        });\n      });\n  };\n}\n\nexport default Firebase;\n","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const BOARD = '/home/board/:id';\n","import React from 'react';\nimport {withFirebase} from '../Firebase';\n\nconst SignOutButton = ({firebase}) => (\n  <button type=\"button\" onClick={firebase.signOut}>Sign Out</button>\n);\n\nexport default withFirebase(SignOutButton);","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        authUser: null\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        authUser\n          ? this.setState({ authUser })\n          : this.setState({ authUser: null });\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport AuthUserContext from './context';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          this.props.history.push(ROUTES.SIGN_IN);\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n  return compose(\n    withRouter,\n    withFirebase\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { SignOutButton } from '../SignOut';\nimport './Navigation.scss';\nimport { AuthUserContext } from '../Session';\n\nconst NavigationAuth = () => (\n  <ul className=\"navlinks\">\n    <li>\n      <Link to={ROUTES.HOME}>Home</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ADMIN}>Admin</Link>\n    </li>\n    <li>\n      <SignOutButton />\n    </li>\n  </ul>\n);\n\nconst NavigationNonAuth = () => (\n  <ul className=\"navlinks\">\n    <li>\n      <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n    </li>\n  </ul>\n);\n\nconst Navigation = () => {\n  return (\n    <nav className=\"navbar\">\n      <span className=\"navbar__logo\">\n        <Link to={ROUTES.LANDING}>workflow</Link>\n      </span>\n      <AuthUserContext.Consumer>\n        {authUser => (authUser ? <NavigationAuth /> : <NavigationNonAuth />)}\n      </AuthUserContext.Consumer>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport './Input.scss';\n\nconst Input = props => {\n  return (\n    <div className=\"input__group\">\n      {!props.hideLabel && (\n        <label htmlFor={props.name} className=\"input__label\">\n          {props.title}\n        </label>\n      )}\n      <input\n        className=\"input\"\n        id={props.name}\n        name={props.name}\n        type={props.type}\n        value={props.value}\n        onChange={props.onChange}\n        placeholder={props.placeholder}\n        required={props.isRequired}\n      />\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\n\nconst INITIAL_STATE = {\n  username: '',\n  name: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { username, email, name, passwordOne } = this.state;\n    this.props.firebase\n      .createUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        const userId = authUser.user.uid;\n        return this.props.firebase.addUser({\n          userId,\n          name,\n          username,\n          email\n        });\n      })\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const {\n      username,\n      name,\n      email,\n      passwordOne,\n      passwordTwo,\n      error\n    } = this.state;\n    const isInvalid =\n      passwordOne === '' ||\n      passwordTwo === '' ||\n      email === '' ||\n      username === '' ||\n      passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <Input\n          name=\"name\"\n          title=\"Full Name\"\n          value={name}\n          onChange={this.onChange}\n          type=\"text\"\n        />\n        <Input\n          name=\"username\"\n          title=\"Username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n        />\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n        />\n        <Input\n          name=\"passwordOne\"\n          title=\"Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          title=\"Confirm Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign Up\n        </button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignUpForm);\n","import React from 'react';\nimport SignUpForm from './SignUpForm';\n\nconst SignUpPage = () => (\n  <main className=\"app__main\">\n    <h1>Sign Up</h1>\n    <SignUpForm />\n  </main>\n);\n\nexport default SignUpPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nexport { default as SignUpPage } from './SignUp';\nexport { default as SignUpForm } from './SignUpForm';\nexport { SignUpLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose, renderComponent } from 'recompose';\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email, password } = this.state;\n    this.props.firebase\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n    const isInvalid = password === '' || email === '';\n    return (\n      <form onSubmit={this.onSubmit}>\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n        />\n        <Input\n          name=\"password\"\n          title=\"Password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign In\n        </button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignInForm);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null\n};\n\nclass PasswordForgetForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .passwordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, error } = this.state;\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordForgetForm);\n","import React from 'react';\nimport PasswordForgetForm from './PasswordForgetForm';\n\nconst PasswordForgetPage = () => (\n  <main className=\"app__main\">\n    <h1>Forgot your password?</h1>\n    <PasswordForgetForm />\n  </main>\n);\n\nexport default PasswordForgetPage;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport {default as PasswordForgetForm} from './PasswordForgetForm';\nexport {default as PasswordForgetPage} from './PasswordForget';\nexport {PasswordForgetLink};","import React from 'react';\nimport SignInForm from './SignInForm';\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\n\nconst SignInPage = () => (\n  <main className=\"app__main\">\n    <h1>Sign In</h1>\n    <SignInForm />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </main>\n);\n\nexport default SignInPage;\n","import { Firebase } from '../components/Firebase';\n\nconst firebase = new Firebase();\n\nexport default firebase;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const updateUserBoards = boardIds => {\n  return {\n    type: types.UPDATE_USER_BOARDS,\n    boardIds\n  };\n};\n\nexport const getUserData = userId => {\n  return async dispatch => {\n    try {\n      const user = await firebase\n        .getUserDoc(userId)\n        .get()\n        .then(doc => doc.data());\n      dispatch(loadUserData(user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const loadUserData = user => {\n  return {\n    type: types.LOAD_USER_DATA,\n    user\n  };\n};\n","export const UPDATE_USER_BOARDS = 'ADD_USER_BOARD';\nexport const LOAD_USER_DATA = 'LOAD_USER_DATA';\nexport const LOAD_USER_BOARDS = 'LOAD_USER_BOARDS';\n","export const getUserData = state => {\n  return state.user;\n};\n","import * as types from './types';\n\nconst user = (state = {}, action) => {\n  switch (action.type) {\n    case types.UPDATE_USER_BOARDS:\n      return {\n        ...state,\n        boardIds: [...action.boardIds]\n      };\n    case types.LOAD_USER_DATA:\n      return {\n        ...state,\n        ...action.user\n      };\n    default:\n      return state;\n  }\n};\n\nexport default user;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const selectBoard = boardId => {\n  return {\n    type: types.SELECT_BOARD,\n    boardId\n  };\n};\n\nexport const selectList = listId => {\n  return {\n    type: types.SELECT_LIST,\n    listId\n  };\n};\n\nexport const selectCard = cardId => {\n  return {\n    types: types.SELECT_CARD,\n    cardId\n  };\n};\n","export const SELECT_BOARD = 'SELECT_BOARD';\nexport const SELECT_LIST = 'SELECT_LIST';\nexport const SELECT_CARD = 'SELECT_CARD';\n","export const getCurrentBoardId = state => {\n  return state.current.boardId;\n};\n\nexport const getCurrentListId = state => {\n  return state.current.listId;\n};\n\nexport const getCurrentCardId = state => {\n  return state.current.cardId;\n};\n\nexport const getCurrent = state => {\n  return state.current;\n};\n","import React, { Component } from 'react';\n\nexport default class BoardGrid extends Component {\n  render() {\n    return <ul className=\"board-grid\">{this.props.children}</ul>;\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BoardTile = props => {\n  return (\n    <li className=\"board-grid__tile\">\n      <Link\n        className=\"board-grid__link\"\n        to={`/home/board/${props.boardId}`}\n        onClick={props.onClick}\n      >\n        <span className=\"board-grid__title\">{props.title}</span>\n      </Link>\n    </li>\n  );\n};\n\nexport default BoardTile;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadBoardsById = boardsById => {\n  return {\n    type: types.LOAD_BOARDS_BY_ID,\n    boardsById\n  };\n};\n\nexport const fetchBoardsById = userId => {\n  return async dispatch => {\n    try {\n      const boardsById = await firebase.db\n        .collection('boards')\n        .where('memberIds', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const boardsById = {};\n          snapshot.forEach(doc => {\n            boardsById[doc.id] = doc.data();\n          });\n          return boardsById;\n        });\n      dispatch(loadBoardsById(boardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateBoardsById = board => {\n  return {\n    type: types.UPDATE_BOARDS_BY_ID,\n    board\n  };\n};\n","export const LOAD_BOARDS_BY_ID = 'LOAD_BOARDS_BY_ID';\nexport const UPDATE_BOARDS_BY_ID = 'UPDATE_BOARDS_BY_ID';\n","export const getBoardsById = state => {\n  return state.boardsById;\n};\n\nexport const getBoardsArray = state => {\n  const { boardsById } = state;\n  return Object.keys(boardsById).map(boardId => {\n    return {\n      boardId,\n      ...boardsById[boardId]\n    };\n  });\n};\n","import * as types from './types';\n\nconst boardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_BOARDS_BY_ID:\n      const { boardsById } = action;\n      return {\n        ...state,\n        ...boardsById\n      };\n    case types.UPDATE_BOARDS_BY_ID:\n      const { board } = action;\n      return {\n        ...state,\n        ...board\n      };\n    default:\n      return state;\n  }\n};\n\nexport default boardsById;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport BoardGrid from './BoardGrid';\nimport BoardTile from './BoardTile';\nimport './BoardGrid.scss';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\n\nclass BoardGridContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const { userId } = this.props.user;\n    this.props.fetchBoardsById(userId);\n    this.listener = this.props.firebase.db\n      .collection('boards')\n      .where('memberIds', 'array-contains', userId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const board = {\n            [change.doc.id]: change.doc.data()\n          };\n          this.props.updateBoardsById(board);\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  }\n\n  render() {\n    const { boardIds, userId } = this.props.user;\n    const { boardsArray, selectBoard } = this.props;\n    const boardTiles = boardsArray.map(board => {\n      const { title, boardId } = board;\n      return (\n        <BoardTile\n          key={boardId}\n          title={title}\n          boardId={boardId}\n          onClick={() => selectBoard(boardId)}\n        />\n      );\n    });\n    return (\n      <section>\n        <BoardGrid>\n          {boardTiles}\n          <button\n            type=\"button\"\n            className=\"board-grid__tile board-grid__btn--add\"\n            onClick={this.props.openBoardComposer}\n          >\n            Create new board...\n          </button>\n        </BoardGrid>\n      </section>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => dispatch(userActions.getUserData(userId)),\n    updateUserBoards: boardIds =>\n      dispatch(userActions.updateUserBoards(boardIds)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardGridContainer)\n);\n","import React from 'react';\n\nconst Board = props => {\n  return <div className=\"board\">{props.children}</div>;\n};\n\nexport default Board;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadListsById = listsById => {\n  return {\n    type: types.LOAD_LISTS_BY_ID,\n    listsById\n  };\n};\n\nexport const fetchListsById = boardId => {\n  return async dispatch => {\n    try {\n      const listsById = await firebase.db\n        .collection('lists')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const listsById = {};\n          snapshot.forEach(doc => {\n            listsById[doc.id] = doc.data();\n          });\n          return listsById;\n        });\n      dispatch(loadListsById(listsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateListsById = list => {\n  return {\n    type: types.UPDATE_LISTS_BY_ID,\n    list\n  };\n};\n","export const LOAD_LISTS_BY_ID = 'LOAD_LISTS_BY_ID';\nexport const FETCH_LISTS_BY_ID = 'FETCH_LISTS_BY_ID';\nexport const UPDATE_LISTS_BY_ID = 'UPDATE_LISTS_BY_ID';\n","export const getListsById = state => {\n  return state.listsById;\n};\n\nexport const getListsArray = state => {\n  const { listsById } = state;\n  return Object.keys(listsById).map(listId => {\n    return {\n      listId,\n      ...listsById[listId]\n    };\n  });\n};\n","import * as types from './types';\n\nconst listsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_LISTS_BY_ID:\n      return {\n        ...state,\n        ...action.listsById\n      };\n    case types.UPDATE_LISTS_BY_ID:\n      return {\n        ...state,\n        ...action.list\n      };\n    default:\n      return state;\n  }\n};\n\nexport default listsById;\n","import React from 'react';\nimport featherIcons from '../../assets/feather/feather-sprite.svg';\n\nfunction FeatherIcon(props) {\n  return (\n    <svg\n      className={`feather feather-${props.name} ${props.addClass || ''}`.trim()}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n      height=\"24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <use xlinkHref={`${featherIcons}#${props.name}`} />\n    </svg>\n  );\n}\n\nexport default FeatherIcon;\n","import React, { Component } from 'react';\nimport './Card.scss';\nimport {FeatherIcon} from '../FeatherIcon';\n\nexport default class Card extends Component {\n  render() {\n    return (\n      <div className=\"card\" onClick={this.props.onClick}>\n        <div className=\"card__header\">\n        <button className=\"card__btn--more-actions\" type=\"button\">\n          <FeatherIcon name=\"more-horizontal\" />\n          </button>\n          <div className=\"card__tags\" />\n          <h3 className=\"card__title\">{this.props.title}</h3>\n        </div>\n        <div className=\"card__footer\">\n          <div className=\"card__labels\" />\n        </div>\n      </div>\n    );\n  }\n}\n","export const getCardsById = state => {\n  return state.cardsById;\n};\n\nexport const getCardsArray = state => {\n  const { cardsById } = state;\n  return Object.keys(cardsById).map(cardId => {\n    return {\n      cardId,\n      ...cardsById[cardId]\n    };\n  });\n};\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadCardsById = cardsById => {\n  return {\n    type: types.LOAD_CARDS_BY_ID,\n    cardsById\n  };\n};\n\nexport const fetchCardsById = boardId => {\n  return async dispatch => {\n    try {\n      const cardsById = await firebase.db\n        .collection('cards')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const cardsById = {};\n          snapshot.forEach(doc => {\n            cardsById[doc.id] = doc.data();\n          });\n          return cardsById;\n        });\n      dispatch(loadCardsById(cardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateCardsById = card => {\n  return {\n    type: types.UPDATE_CARDS_BY_ID,\n    card\n  };\n};\n","export const ADD_CARD = 'ADD_CARD';\nexport const SET_CARD_DUE_DATE = 'SET_CARD_DUE_DATE';\nexport const ADD_CARD_SUBTASK = 'ADD_CARD_SUBTASK';\nexport const REMOVE_CARD_SUBTASK = 'REMOVE_CARD_SUBTASK';\nexport const CHANGE_CARD_DESCRIPTION = 'CHANGE_CARD_DESCRIPTION';\nexport const SET_CARD_COLOR = 'SET_CARD_COLOR';\nexport const DELETE_CARD = 'DELETE_CARD';\nexport const MOVE_CARD = 'MOVE_CARD';\nexport const LOAD_CARDS_BY_ID = 'LOAD_CARDS_BY_ID';\nexport const UPDATE_CARDS_BY_ID = 'UPDATE_CARDS_BY_ID';\n","import * as types from './types';\n\nconst cardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_CARDS_BY_ID:\n      const { cardsById } = action;\n      return {\n        ...state,\n        ...cardsById\n      };\n    case types.UPDATE_CARDS_BY_ID:\n      const { card } = action;\n      return {\n        ...state,\n        ...card\n      };\n    default:\n      return state;\n  }\n};\n\nexport default cardsById;\n","import React from 'react';\nimport './Textarea.scss';\n\nconst Textarea = props => {\n  return (\n    <textarea\n      className={`textarea ${props.style}`}\n      id={props.name}\n      name={props.name}\n      value={props.value}\n      onChange={props.onChange}\n      placeholder={props.placeholder}\n      required={props.isRequired}\n    />\n  );\n};\n\nexport default Textarea;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FeatherIcon } from '../FeatherIcon';\nimport { withAuthorization } from '../Session';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Textarea } from '../Textarea';\nimport './CardComposer.scss';\n\nclass CardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cardTitle: '',\n      isActive: false\n    };\n  }\n\n  resetForm = () => {\n    this.setState({ cardTitle: '' });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { cardTitle } = this.state;\n    const { boardId } = this.props.current;\n    const { listId } = this.props;\n    this.props.firebase.addCard({ boardId, listId, cardTitle });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = e => {\n    if (e.target.value !== '') return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const { cardTitle, isActive } = this.state;\n    return (\n      <div\n        className={`card-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"card-composer__form\" onSubmit={this.onSubmit}>\n          <Textarea\n            onChange={this.onChange}\n            value={cardTitle}\n            placeholder={isActive ? 'Enter card title...' : 'Add a card'}\n            isRequired={true}\n            name=\"cardTitle\"\n            style=\"card\"\n          />\n          {isActive && (\n            <>\n              <button className=\"card-composer__btn--add\" type=\"submit\">\n                Add Card\n              </button>\n              <button className=\"card-composer__btn--close\" type=\"button\">\n                <FeatherIcon name=\"x\" />\n              </button>\n            </>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardComposer)\n);\n","import React, { Component } from 'react';\nimport './List.scss';\nimport { CardComposer } from '../Card';\n\nexport default class List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <section className=\"list\">\n        <header className=\"list__header\">\n          <h2 className=\"list__title\">{this.props.title}</h2>\n        </header>\n        <div className=\"list__content\">\n        {this.props.children}\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input } from '../Input';\nimport { FeatherIcon } from '../FeatherIcon';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport './List.scss';\n\nclass ListComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listTitle: '',\n      isActive: false\n    };\n  }\n\n  resetForm = () => {\n    this.setState({ listTitle: '' });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { listTitle } = this.state;\n    const { boardId } = this.props.current;\n    this.props.firebase.addList({ boardId, listTitle });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = e => {\n    if (e.target.value === '') {\n      this.setState({\n        isActive: false\n      });\n    }\n  };\n\n  render() {\n    const { listTitle, isActive } = this.state;\n    return (\n      <div\n        className={`list-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"list-composer__form\" onSubmit={this.onSubmit}>\n          <Input\n            onChange={this.onChange}\n            value={listTitle}\n            placeholder={isActive ? 'Enter list title...' : 'Add a list'}\n            required=\"true\"\n            name=\"listTitle\"\n            hideLabel=\"true\"\n          />\n          {isActive && (\n            <>\n              <button className=\"list-composer__btn--add\" type=\"submit\">\n                Add List\n              </button>\n              <button className=\"list-composer__btn--close\" type=\"button\">\n                <FeatherIcon name=\"x\" />\n              </button>\n            </>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => dispatch(userActions.getUserData(userId)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListComposer)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport List from './List';\nimport { Card, CardComposer } from '../Card';\n\nclass ListContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: true\n    };\n  }\n\n  componentDidMount() {\n    const { boardId, listId, cardId } = this.props.current;\n    this.props.fetchCardsById(boardId).then(() => {\n      this.setState({ isFetching: false });\n    });\n    this.listener = this.props.firebase.db\n      .collection('cards')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const card = {\n            [change.doc.id]: change.doc.data()\n          };\n          this.props.updateCardsById(card);\n        });\n      });\n    console.log('mounted');\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  }\n\n  render() {\n    if (this.state.isFetching) return null;\n    const { cardIds, cardsById, listId, title } = this.props;\n    const cards = cardIds.map(cardId => {\n      const card = cardsById[cardId];\n      const cardTitle = card.title;\n      return <Card key={cardId} title={cardTitle} />;\n    });\n\n    return (\n      <List title={title}>\n        {cards}\n        <CardComposer listId={listId} />\n      </List>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    current: currentSelectors.getCurrent(state),\n    listsById: listSelectors.getListsById(state),\n    listsArray: listSelectors.getListsArray(state),\n    cardsById: cardSelectors.getCardsById(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => dispatch(userActions.getUserData(userId)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId)),\n    fetchListsById: boardId => dispatch(listActions.fetchListsById(boardId)),\n    updateListsById: list => dispatch(listActions.updateListsById(list)),\n    fetchCardsById: boardId => dispatch(cardActions.fetchCardsById(boardId)),\n    updateCardsById: listId => dispatch(cardActions.updateCardsById(listId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListContainer)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport Board from './Board';\nimport { ListContainer, ListComposer } from '../List';\nimport './Board.scss';\n\nclass BoardContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const { boardId } = this.props.current;\n    this.props.fetchListsById(boardId);\n    this.listener = this.props.firebase.db\n      .collection('lists')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const list = {\n            [change.doc.id]: change.doc.data()\n          };\n          this.props.updateListsById(list);\n        });\n      });\n    console.log('mounted');\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  }\n\n  render() {\n    const { boardId } = this.props.current;\n    const { boardsById, listsArray } = this.props;\n    const board = boardsById[boardId];\n    const boardTitle = board.title;\n    const lists = listsArray.map(list => {\n      const { listId, title, cardIds } = list;\n      return (\n        <ListContainer\n          listId={listId}\n          key={listId}\n          title={title}\n          cardIds={cardIds}\n        />\n      );\n    });\n\n    return (\n      <main className=\"board-container\">\n        <h1>{boardTitle}</h1>\n        <Board>\n          {lists}\n          <ListComposer />\n        </Board>\n      </main>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    current: currentSelectors.getCurrent(state),\n    listsById: listSelectors.getListsById(state),\n    listsArray: listSelectors.getListsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => dispatch(userActions.getUserData(userId)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId)),\n    fetchListsById: boardId => dispatch(listActions.fetchListsById(boardId)),\n    updateListsById: list => dispatch(listActions.updateListsById(list))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardContainer)\n);\n","import React from 'react';\nimport { FeatherIcon } from '../FeatherIcon';\nimport './Modal.scss';\n\nconst Modal = ({ onModalClose, children }) => {\n  return (\n    <div className=\"modal\">\n      <div className=\"modal__content\">\n        <button\n          type=\"button\"\n          className=\"modal__btn--close\"\n          onClick={onModalClose}\n        >\n          <FeatherIcon name=\"x\" />\n        </button>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport { Modal } from '../Modal';\nimport { Input } from '../Input';\n\nconst INITIAL_STATE = {\n  boardTitle: ''\n};\n\nexport default class BoardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { boardTitle } = this.state;\n    const { handleSubmit, onClose } = this.props;\n    this.props.handleSubmit(boardTitle);\n    this.props.onClose();\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { boardTitle } = this.state;\n    return (\n      <Modal onModalClose={this.props.onClose}>\n        <form onSubmit={this.onSubmit}>\n          <Input\n            name=\"boardTitle\"\n            title=\"Board Title\"\n            value={boardTitle}\n            onChange={this.onChange}\n            type=\"text\"\n          />\n          <button type=\"submit\">Create Board</button>\n        </form>\n      </Modal>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { withAuthorization } from '../Session';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { currentSelectors } from '../../ducks/current';\nimport { BoardGridContainer } from '../BoardGrid';\nimport { BoardComposer } from '../Board';\nimport { BoardContainer } from '../Board';\nimport './Home.scss';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showCreateBoardForm: false\n    };\n  }\n  componentDidMount() {\n    const userId = this.props.firebase.auth.currentUser.uid;\n    this.props.getUserData(userId);\n  }\n\n  toggleBoardComposer = () => {\n    this.setState(prevState => ({\n      showCreateBoardForm: !prevState.showCreateBoardForm\n    }));\n  };\n\n  createBoard = boardTitle => {\n    const userId = this.props.user.userId;\n    this.props.firebase.addBoard({ userId, boardTitle });\n  };\n\n  render() {\n    const { showCreateBoardForm } = this.state;\n    const userId = this.props.user.userId;\n    return (\n      <>\n        {showCreateBoardForm && (\n          <BoardComposer\n            onClose={this.toggleBoardComposer}\n            handleSubmit={this.createBoard}\n          />\n        )}\n        <Switch>\n          <Route\n            exact\n            path={ROUTES.HOME}\n            render={() => (\n              <main className=\"main\">\n                <h1>Home</h1>\n                {userId && (\n                  <BoardGridContainer\n                    openBoardComposer={this.toggleBoardComposer}\n                  />\n                )}\n              </main>\n            )}\n          />\n          <Route\n            path={ROUTES.BOARD}\n            render={props => <BoardContainer {...props} />}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    currentBoardId: currentSelectors.getCurrentBoardId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => dispatch(userActions.getUserData(userId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(HomePage)\n);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .passwordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n    const isInvalid = passwordOne === '' || passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <Input\n          name=\"passwordOne\"\n          title=\"New Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          title=\"Confirm New Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React from 'react';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport { PasswordChangeForm } from '../PasswordChange';\nimport { AuthUserContext, withAuthorization } from '../Session';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <div>\n        <h1>Account: {authUser.email}</h1>\n        <PasswordForgetForm />\n        <PasswordChangeForm />\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(AccountPage);\n","import React, { Component } from 'react';\nimport { Navigation } from '../Navigation';\nimport './Header.scss';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <Navigation />\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport { Navigation } from '../Navigation';\nimport * as ROUTES from '../../constants/routes';\nimport { LandingPage } from '../Landing';\nimport { SignUpPage } from '../SignUp';\nimport { SignInPage } from '../SignIn';\nimport { PasswordForgetPage } from '../PasswordForget';\nimport { HomePage } from '../Home';\nimport { AccountPage } from '../Account';\nimport { AdminPage } from '../Admin';\nimport { withAuthentication } from '../Session';\nimport { Board } from '../Board';\nimport {Header} from '../Header';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Header />\n        <Switch>\n          <Route exact path={ROUTES.LANDING} component={LandingPage} />\n          <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n          <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n          <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n          <Route path={ROUTES.HOME} component={HomePage} />\n          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n          <Route path={ROUTES.ADMIN} component={AdminPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { boardsById } from '../ducks/boards';\nimport { cardsById } from '../ducks/cards';\nimport { listsById } from '../ducks/lists';\nimport { user } from '../ducks/user';\nimport { current } from '../ducks/current';\n\nexport default combineReducers({\n  boardsById,\n  cardsById,\n  listsById,\n  user,\n  current\n});\n","import * as types from './types';\n\nconst current = (state = {}, action) => {\n  switch (action.type) {\n    case types.SELECT_BOARD:\n      const { boardId } = action;\n      return {\n        ...state,\n        boardId\n      };\n    case types.SELECT_LIST:\n      const { listId } = action;\n      return {\n        ...state,\n        listId\n      };\n    case types.SELECT_CARD:\n      const { cardId } = action;\n      return {\n        ...state,\n        cardId\n      };\n    default:\n      return state;\n  }\n};\n\nexport { current };\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\n\nexport default history;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport './index.scss';\nimport { App } from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { FirebaseContext } from './components/Firebase';\nimport reducers from './store/reducers';\nimport firebase from './store/firebase';\nimport history from './store/history';\n\nconst store = createStore(reducers, {}, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <FirebaseContext.Provider value={firebase}>\n      <Router basename={process.env.PUBLIC_URL} history={history}>\n        <App />\n      </Router>\n    </FirebaseContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/feather-sprite.0ed672ce.svg\";"],"sourceRoot":""}