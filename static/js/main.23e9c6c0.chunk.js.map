{"version":3,"sources":["assets/feather/feather-sprite.svg","components/Firebase/context.js","components/Firebase/Firebase.js","constants/routes.js","components/Button/Button.js","components/SignOut/SignOutButton.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Icon/Icon.js","components/Navbar/Navbar.js","components/Input/Input.js","components/SignUp/SignUpForm.js","components/UserFormPage/UserFormPage.js","components/SignUp/SignUp.js","components/SignUp/index.js","components/SignIn/SignInForm.js","components/PasswordForget/PasswordForgetForm.js","components/PasswordForget/PasswordForget.js","components/PasswordForget/index.js","components/SignIn/SignIn.js","store/firebase.js","ducks/users/actions.js","ducks/users/types.js","ducks/users/selectors.js","ducks/users/reducer.js","ducks/current/actions.js","ducks/current/types.js","ducks/current/selectors.js","components/BoardGrid/BoardGrid.js","components/BoardGrid/BoardTile.js","ducks/boards/actions.js","ducks/boards/types.js","ducks/boards/selectors.js","ducks/boards/reducers.js","components/BoardGrid/BoardGridContainer.js","components/Modal/Modal.js","components/BoardComposer/BoardComposer.js","constants/droppableTypes.js","components/ListComposer/ListComposer.js","components/Board/Board.js","ducks/lists/actions.js","ducks/lists/types.js","ducks/lists/selectors.js","ducks/lists/reducers.js","ducks/cards/selectors.js","ducks/cards/actions.js","ducks/cards/types.js","ducks/cards/reducers.js","ducks/tasks/actions.js","ducks/tasks/types.js","ducks/tasks/selectors.js","ducks/tasks/reducer.js","components/Textarea/Textarea.js","constants/keys.js","components/CardComposer/CardComposer.js","components/Menu/Menu.js","components/Menu/MenuItem.js","components/Popover/Popover.js","components/Popover/PopoverWrapper.js","components/Card/Card.js","components/List/Cards.js","components/List/List.js","ducks/comments/actions.js","ducks/comments/types.js","ducks/comments/selectors.js","ducks/comments/reducer.js","components/Toolbar/Toolbar.jsx","components/Avatar/Avatar.js","components/CardEditor/CardEditorAssignMember.js","components/MemberSearch/MemberSearch.js","components/CardEditor/CardEditorMoreActions.js","components/Checkbox/Checkbox.js","components/CardEditor/CardEditorTask.js","components/CardEditor/CardEditorComment.js","components/CardEditor/CardEditor.js","utils/utils.js","components/Board/BoardContainer.js","components/Home/Home.js","components/PasswordChange/PasswordChangeForm.js","components/Account/Account.js","components/Header/Header.jsx","components/App/App.js","serviceWorker.js","store/reducers.js","ducks/current/reducers.js","store/history.js","index.js"],"names":["module","exports","__webpack_require__","p","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","signInWithGoogle","provider","auth","GoogleAuthProvider","addScope","signInWithPopup","then","result","credential","token","accessToken","console","log","user","catch","error","errorCode","code","message","email","alert","signInWithGithub","GithubAuthProvider","signInWithRedirect","createUserWithEmailAndPassword","password","signInWithEmailAndPassword","signOut","passwordReset","sendPasswordResetEmail","passwordUpdate","newPassword","currentUser","updatePassword","getTimestamp","firestore","FieldValue","serverTimestamp","addToArray","value","arrayUnion","removeFromArray","arrayRemove","getUserDoc","userId","db","collection","doc","addUser","_ref","name","username","_ref$boardIds","boardIds","_ref$photoURL","photoURL","set","updateUser","newValue","arguments","length","undefined","update","getBoardDoc","boardId","updateBoard","objectSpread","lastModifiedAt","addBoard","_ref2","boardTitle","add","createdAt","listIds","createdBy","memberIds","ref","id","getListDoc","listId","updateList","addList","_ref3","listTitle","cardIds","deleteList","_ref4","batch","listRef","boardRef","delete","where","get","snapshot","docs","forEach","commit","getCardDoc","cardId","addCard","_ref5","cardTitle","assignedTo","updateCard","assignCard","_ref6","cardRef","deleteCard","_ref7","moveCardToList","_ref8","origListId","newListId","updatedCardIds","origListRef","newListRef","getTaskDoc","taskId","addTask","_ref9","_ref9$memberIds","_ref9$boardId","_ref9$cardId","_ref9$dueDate","dueDate","text","isCompleted","concat","toConsumableArray","taskIds","updateTask","deleteTask","_ref10","_ref10$cardId","taskRef","getCommentDoc","commentId","addComment","_ref11","_ref11$memberIds","isPinned","from","to","likes","commentIds","updateComment","initializeApp","HOME","Button","children","_ref$type","type","onClick","_ref$className","className","_ref$color","color","_ref$size","size","_ref$variant","variant","disabled","_ref$iconOnly","iconOnly","buttonRef","objectWithoutProperties","defaultProps","components_Button_Button","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","authUser","inherits","createClass","key","_this2","listener","onAuthStateChanged","setState","Session_context","Provider","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","Icon","addClass","trim","xmlns","xmlnsXlink","viewBox","width","height","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","xlinkHref","featherIcons","NavLinksAuth","Fragment","Link","ROUTES","components_SignOut_SignOutButton","NavLinksNonAuth","Navbar","viewportWidth","window","innerWidth","isMobileNavVisible","isTouchEnabled","handleResize","toggleMobileNavVisibility","prevState","handleClick","e","minWidth","target","matches","handleOutsideClick","navLinksEl","contains","handleTouch","document","removeEventListener","addEventListener","_this$state","_this$props","navLinksClass","navRef","isMobileView","el","navEl","Icon_Icon","Navbar_NavLinksAuth","Navbar_NavLinksNonAuth","Input","onFocus","onChange","onInput","placeholder","isRequired","onBlur","autoComplete","inputRef","hideLabel","label","onKeyDown","htmlFor","required","INITIAL_STATE","passwordOne","passwordTwo","SignUpForm","onSubmit","uid","preventDefault","defineProperty","_this$state2","isInvalid","components_Input_Input","UserFormPage","title","SignUpPage","components_UserFormPage_UserFormPage","SignUp_SignUpForm","SignUpLink","SignInForm","enableGoogleLogin","PasswordForgetForm","PasswordForgetPage","PasswordForget_PasswordForgetForm","PasswordForgetLink","SignInPage","SignIn_SignInForm","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","loadUserData","loadUsersById","usersById","fetchUsersById","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","users","data","sent","t0","stop","_x","apply","fetchUserData","_callee2","_context2","_x2","userData","deleteUser","getUsersById","getUserData","getUsersArray","keys","map","getMembersArray","memberId","action","_toPropertyKey","selectUser","selectBoard","selectList","selectCard","getCurrentUserId","current","getCurrentBoardId","getCurrentListId","getCurrentCardId","getCurrent","BoardGrid","BoardTile","loadBoardsById","boardsById","fetchBoardsById","updateBoardsById","board","reorderLists","updateListIds","getBoardsById","getBoardsArray","getBoard","BoardGridContainer","boardObserver","onSnapshot","querySnapshot","docChanges","change","_this$props2","boardsArray","boardTiles","BoardGrid_BoardTile","BoardGrid_BoardGrid","openBoardComposer","connect","ownProps","currentSelectors","userSelectors","boardSelectors","boardActions","currentActions","Modal","onModalClose","onModalClick","BoardComposer","handleSubmit","onClose","components_Modal_Modal","CARD","LIST","isActive","ListComposer","resetForm","onReset","Board","react_beautiful_dnd_esm","droppableId","droppableTypes","direction","provided","innerRef","droppableProps","components_ListComposer_ListComposer","loadListsById","listsById","fetchListsById","updateListsById","list","getListsById","getListsArray","getCardsById","cardsById","getCardsArray","loadCardsById","fetchCardsById","cards","updateCardsById","card","loadTasksById","tasksById","fetchTasksById","tasks","updateTasksById","task","fetchCardTasks","fetchUserTasks","_callee3","_context3","_x3","taskData","getTasksById","getTasksArray","reducer_toPropertyKey","Textarea","autoHeightResize","isAutoHeightResizeEnabled","textareaEl","style","scrollHeight","createRef","onDragStart","isReadOnly","readOnly","BACKSPACE","ENTER","TAB","ARROW_DOWN","ARROW_UP","CardComposer","Textarea_Textarea_Textarea","Menu","menuRef","MenuItem","Popover","onOutsideClick","PopoverWrapper","isOpen","componentEl","toggleOpen","handleClose","alignInner","alignOuter","buttonProps","wrapperClass","popoverClass","anchorEl","popoverWrapperStyle","offsetTop","offsetLeft","position","top","Popover_Popover","align","Card","handleCardClick","onCardClick","cardIndex","draggableId","index","draggableProps","dragHandleProps","headerEl","Cards","scrollToBottom","listEnd","scrollIntoView","behavior","prevProps","onCardDelete","minHeight","isDraggingOver","Card_Card_Card","float","clear","List","handleListDelete","newListTitle","_this$props3","listIndex","isFetchingCards","viewportHeight","listHeaderEl","PopoverWrapper_PopoverWrapper","components_Menu_Menu","Menu_MenuItem","href","Cards_Cards","handleCardDelete","components_CardComposer_CardComposer","cardSelectors","loadCommentsById","commentsById","fetchCommentsById","comments","updateCommentsById","comment","fetchCardComments","fetchUserComments","commentData","deleteComment","getCommentsById","getCommentsArray","comments_reducer_toPropertyKey","Toolbar","Avatar","getUserInitials","fullName","split","charAt","join","toUpperCase","imgSrc","imgProps","classes","avatar","src","alt","img","backgroundColor","CardEditorAssignMember","MemberSearch","query","selectedMember","selectedIndex","filteredList","memberSearchEl","matchUser","regExp","RegExp","test","filter","newIndex","indexOf","persistSelectedMember","onMemberClick","nextIndex","prevIndex","inputEl","focus","assignedMembers","_this$state3","i","isAssigned","Avatar_Avatar_Avatar","CardEditorMoreActions","onMenuClick","data-action","Checkbox","isChecked","labelClass","checked","appRoot","getElementById","CardEditorTask","portal","appendChild","removeChild","toggleCompleted","inner","components_Checkbox_Checkbox","isDragging","ReactDOM","createPortal","CardEditorComment","secondsElapsed","tick","handleLikeClick","handleLike","secondsSinceCreation","Math","floor","Date","now","toDate","getTime","interval","setInterval","clearInterval","date","dateCreatedFull","timeCreated","toLocaleTimeString","hour","minute","hour12","dateCreated","toDateString","isToday","isYesterday","setDate","getDate","cardActions","commentActions","CardEditor","updateCardTasks","tasksArray","cardTasks","reduce","handleCardEditorClose","currentValue","cardKey","updatedValue","currentFocus","newComment","_this$props4","newTask","handleModalClick","commentFormEl","newTaskFormEl","handleMoreActions","dataset","onTaskChange","handleCheckboxChange","toggleTaskCompleted","updateTaskText","_this$props5","moveTask","destination","source","updatedTaskIds","splice","handleCommentLike","_this$props6","assignMember","_this$props7","isFetching","cardDescription","_this$props8","commentObserver","_this3","_this$props9","commentsArray","usersArray","membersArray","hasTasks","hasComments","isNewCommentInvalid","isNewTaskInvalid","commentFormIsFocused","components_Toolbar_Toolbar","MemberSearch_MemberSearch_MemberSearch","CardEditor_CardEditorMoreActions","member","onDragEnd","CardEditorTask_CardEditorTask","components_CardEditor_CardEditorComment","taskSelectors","commentSelectors","isEqual","other","prototype","toString","typeArr","valueLen","compare","item1","item2","itemType","hasOwnProperty","windowDebouncer","callback","request","_len","args","Array","_key","cancelAnimationFrame","requestAnimationFrame","BoardContainer","isMovedWithinList","updatedListIds","toggleCardEditor","isCardEditorOpen","onTitleChange","onTitleBlur","newBoardTitle","updatedBoard","utils","listObserver","taskObserver","cardObserver","listsArray","lists","components_List_List","components_Board_Board","components_CardEditor_CardEditor","listSelectors","listActions","taskActions","HomePage","toggleBoardComposer","isBoardComposerOpen","createBoard","BoardComposer_BoardComposer_BoardComposer","Switch","Route","exact","path","render","BoardGrid_BoardGridContainer","Board_BoardContainer","match","params","currentBoardId","userActions","PasswordChangeForm","PasswordChange_PasswordChangeForm","Header","Navbar_Navbar_Navbar","Header_Header_Header","component","LandingPage","Home_Home","AccountPage","AdminPage","Boolean","location","hostname","combineReducers","createBrowserHistory","basename","store","createStore","reducers","applyMiddleware","thunk","es","context","Router","components_App_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.23e9c6c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/feather-sprite.0ed672ce.svg\";","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import firebase from 'firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\nclass Firebase {\n  constructor() {\n    firebase.initializeApp(config);\n    this.auth = firebase.auth();\n    this.db = firebase.firestore();\n  }\n\n  // Auth API\n\n  signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    provider.addScope('https://www.googleapis.com/auth/contacts.readonly');\n    this.auth.signInWithPopup(provider).then((result) => {\n      if (result.credential) {\n      const token = result.credential.accessToken;\n      console.log(token);\n      const user = result.user;\n      }\n    }).catch((error) => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      const email = error.email;\n      const credential = error.credential;\n\n      if (errorCode === 'auth/account-exists-with-different-credential') {\n        alert('You have already signed up with a different auth provider for that email.');\n      } else {\n        console.error(error);\n      }\n    });\n  };\n\n  signInWithGithub = () => {\n    const provider = new firebase.auth.GithubAuthProvider();\n    this.auth.signInWithRedirect(provider);\n  };\n\n\n  createUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  signInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  signOut = () => this.auth.signOut();\n\n  passwordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  passwordUpdate = newPassword =>\n    this.auth.currentUser.updatePassword(newPassword);\n\n  // Utility API\n\n  getTimestamp = () => firebase.firestore.FieldValue.serverTimestamp();\n  addToArray = value => firebase.firestore.FieldValue.arrayUnion(value);\n  removeFromArray = value => firebase.firestore.FieldValue.arrayRemove(value);\n\n  // User API\n\n  getUserDoc = userId => this.db.collection('users').doc(userId);\n\n  addUser = ({ userId, name, username, email, boardIds = [], photoURL = null }) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .set({ userId, name, username, email, boardIds, photoURL });\n\n  updateUser = (userId, newValue = {}) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .update(newValue);\n\n  // Board API\n\n  getBoardDoc = boardId => this.db.collection('boards').doc(boardId);\n\n  updateBoard = (boardId, newValue = {}) =>\n    this.getBoardDoc(boardId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  addBoard = ({ userId, boardTitle }) => {\n    this.db\n      .collection('boards')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        listIds: [],\n        createdBy: userId,\n        memberIds: [userId],\n        boardTitle\n      })\n      .then(ref => {\n        this.updateUser(userId, {\n          boardIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  // List API\n\n  getListDoc = listId => this.db.collection('lists').doc(listId);\n\n  updateList = (listId, newValue = {}) =>\n    this.getListDoc(listId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  addList = ({ boardId, listTitle }) => {\n    this.db\n      .collection('lists')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        cardIds: [],\n        boardId,\n        listTitle\n      })\n      .then(ref => {\n        this.updateBoard(boardId, {\n          listIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  deleteList = ({ listId, boardId }) => {\n    const batch = this.db.batch();\n    const listRef = this.getListDoc(listId);\n    const boardRef = this.getBoardDoc(boardId);\n\n    // Delete list\n    batch.delete(listRef);\n\n    // Remove list id from board\n    batch.update(boardRef, {\n      listIds: this.removeFromArray(listId),\n      lastModifiedAt: this.getTimestamp()\n    });\n\n    // Delete cards assigned to list\n    this.db\n      .collection('cards')\n      .where('listId', '==', listId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('list deleted');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  // Card API\n\n  getCardDoc = cardId => this.db.collection('cards').doc(cardId);\n\n  addCard = ({ boardId, listId, cardTitle }) => {\n    this.db\n      .collection('cards')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        assignedTo: [],\n        listId,\n        boardId,\n        cardTitle\n      })\n      .then(ref => {\n        this.updateList(listId, {\n          cardIds: this.addToArray(ref.id),\n          lastModifiedAt: this.getTimestamp()\n        });\n      });\n  };\n\n  updateCard = (cardId, newValue = {}) => {\n    this.getCardDoc(cardId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  assignCard = ({ cardId, boardId, userId }) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const boardRef = this.getBoardDoc(boardId);\n    batch.update(cardRef, {\n      assignedTo: this.addToArray(userId),\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(boardRef, {\n      memberIds: this.addToArray(userId),\n      lastModifiedAt: this.getTimestamp()\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('task deleted');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  deleteCard = ({ cardId, listId }) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const listRef = this.getListDoc(listId);\n    batch.delete(cardRef);\n    batch.update(listRef, {\n      cardIds: this.removeFromArray(cardId),\n      lastModifiedAt: this.getTimestamp()\n    });\n\n    // Delete tasks assigned to card\n    this.db\n      .collection('tasks')\n      .where('cardId', '==', cardId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('card deleted');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  moveCardToList = ({ cardId, origListId, newListId, updatedCardIds }) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const origListRef = this.getListDoc(origListId);\n    const newListRef = this.getListDoc(newListId);\n    batch.update(cardRef, {\n      listId: newListId,\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(origListRef, {\n      cardIds: this.removeFromArray(cardId),\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(newListRef, {\n      cardIds: updatedCardIds,\n      lastModifiedAt: this.getTimestamp()\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('card moved');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  // Task API\n\n  getTaskDoc = taskId => this.db.collection('tasks').doc(taskId);\n\n  addTask = ({ userId, memberIds = [], boardId = null, cardId = null, dueDate = null, text }) => {\n    this.db\n      .collection('tasks')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        isCompleted: false,\n        createdBy: userId,\n        assignedTo: [userId, ...memberIds],\n        dueDate,\n        boardId,\n        cardId,\n        text\n      })\n      .then(ref => {\n        if (cardId === null) return;\n        this.updateCard(cardId, {\n          taskIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  updateTask = (taskId, newValue = {}) => {\n    this.getTaskDoc(taskId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  deleteTask = ({ taskId, cardId = null }) => {\n    const batch = this.db.batch();\n    const taskRef = this.getTaskDoc(taskId);\n    batch.delete(taskRef);\n\n    if (cardId) {\n      const cardRef = this.getCardDoc(cardId);\n      batch.update(cardRef, {\n        taskIds: this.removeFromArray(taskId),\n        lastModifiedAt: this.getTimestamp()\n      });\n    }\n    return batch\n      .commit()\n      .then(() => {\n        console.log('task deleted');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  // Comment API\n  getCommentDoc = commentId => this.db.collection('comments').doc(commentId);\n\n  addComment = ({ userId, memberIds = [], boardId, cardId, text }) => {\n    this.db\n      .collection('comments')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        isPinned: false,\n        from: userId,\n        to: memberIds,\n        likes: [],\n        boardId,\n        cardId,\n        text\n      })\n      .then(ref => {\n        this.updateCard(cardId, {\n          commentIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  updateComment = (commentId, newValue = {}) => {\n    this.getCommentDoc(commentId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n}\n\nexport default Firebase;\n","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const BOARD = '/home/board/:id';\n","import React from 'react';\nimport './Button.scss';\n\nconst Button = ({\n  children,\n  type = 'button',\n  onClick,\n  className = '',\n  color = 'neutral',\n  size = 'md',\n  variant = 'text',\n  disabled,\n  name,\n  iconOnly = false,\n  buttonRef,\n  ...props\n}) => (\n  // eslint-disable-next-line react/button-has-type\n  <button\n    className={`${className} ${color} ${size} ${variant} ${\n      iconOnly ? 'icon-only' : ''\n    }`}\n    type={type}\n    onClick={onClick}\n    disabled={disabled}\n    name={name}\n    ref={buttonRef}\n    {...props}\n  >\n    {children}\n  </button>\n);\n\nButton.defaultProps = {\n  type: 'button',\n  className: '',\n  color: 'neutral',\n  size: 'md',\n  variant: 'text',\n  iconOnly: false\n};\n\nexport default Button;\n","import React from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Button } from '../Button';\nimport './SignOutButton.scss';\n\nconst SignOutButton = ({ firebase }) => (\n  <Button\n    type=\"button\"\n    onClick={firebase.signOut}\n    className=\"btn--sign-out\"\n    color=\"primary\"\n  >\n    Sign Out\n  </Button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        authUser: null\n      };\n    }\n\n    componentDidMount() {\n      const { firebase } = this.props;\n\n      this.listener = firebase.auth.onAuthStateChanged(authUser => {\n        authUser\n          ? this.setState({ authUser })\n          : this.setState({ authUser: null });\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport AuthUserContext from './context';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          this.props.history.push(ROUTES.SIGN_IN);\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n  return compose(\n    withRouter,\n    withFirebase\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from 'react';\nimport featherIcons from '../../assets/feather/feather-sprite.svg';\n\nfunction Icon(props) {\n  return (\n    <svg\n      className={`feather feather-${props.name} ${props.addClass || ''}`.trim()}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n      height=\"24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <use xlinkHref={`${featherIcons}#${props.name}`} />\n    </svg>\n  );\n}\n\nexport default Icon;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { SignOutButton } from '../SignOut';\nimport './Navbar.scss';\nimport { AuthUserContext } from '../Session';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\n\nconst NavLinksAuth = () => (\n  <>\n    <li>\n      <Link to={ROUTES.HOME}>Home</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ADMIN}>Admin</Link>\n    </li>\n    <li>\n      <SignOutButton />\n    </li>\n  </>\n);\n\nconst NavLinksNonAuth = () => (\n  <>\n    <li>\n      <Link to={ROUTES.SIGN_IN}>Log In</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.SIGN_UP}>Get Started</Link>\n    </li>\n  </>\n);\n\nexport default class Navbar extends Component {\n  static defaultProps = {\n    minWidth: 768\n  };\n\n  state = {\n    viewportWidth: window.innerWidth,\n    isMobileNavVisible: false,\n    isTouchEnabled: false\n  };\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick);\n  }\n\n  handleResize = () => {\n    this.setState({\n      viewportWidth: window.innerWidth\n    });\n  };\n\n  toggleMobileNavVisibility = () => {\n    this.setState(prevState => ({\n      isMobileNavVisible: !prevState.isMobileNavVisible\n    }));\n  };\n\n  handleClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    if (!isMobileView) return;\n    if (e.target.matches('button') || e.target.matches('a')) {\n      this.toggleMobileNavVisibility();\n    }\n  };\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n    window.removeEventListener('resize', this.handleResize);\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  handleOutsideClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n    if (\n      !isMobileView ||\n      this.navLinksEl.contains(e.target) ||\n      e.target.matches('button') ||\n      e.target.matches('a')\n    )\n      return;\n    this.setState({\n      isMobileNavVisible: false\n    });\n  };\n\n  handleTouch = () => {\n    const { isTouchEnabled } = this.state;\n    if (isTouchEnabled === true) return;\n    this.setState({\n      isTouchEnabled: true\n    });\n    document.removeEventListener('touchstart', this.handleTouch);\n    document.removeEventListener('click', this.handleOutsideClick);\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  render() {\n    const { viewportWidth, isMobileNavVisible } = this.state;\n    const { minWidth, navRef, navLinksClass } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    return (\n      <nav\n        className={`navbar ${isMobileView ? 'is-collapsed' : ''} ${\n          isMobileView && isMobileNavVisible ? 'show-links' : ''\n        }`}\n        ref={el => (this.navEl = el)}\n      >\n        <span className=\"navbar__logo\">\n          <Link to={ROUTES.LANDING} onClick={this.handleClick}>\n            workflow\n          </Link>\n        </span>\n        {isMobileView && (\n          <Button\n            type=\"button\"\n            color=\"primary\"\n            onClick={this.toggleMobileNavVisibility}\n            iconOnly\n          >\n            <Icon name=\"menu\" />\n          </Button>\n        )}\n        <ul\n          className={`navbar__links ${navLinksClass}`}\n          onClick={this.handleClick}\n          ref={el => (this.navLinksEl = el)}\n        >\n          <AuthUserContext.Consumer>\n            {authUser => (authUser ? <NavLinksAuth /> : <NavLinksNonAuth />)}\n          </AuthUserContext.Consumer>\n        </ul>\n      </nav>\n    );\n  }\n}\n","import React from 'react';\nimport './Input.scss';\n\nconst Input = ({\n  className = '',\n  name,\n  type,\n  value,\n  onFocus,\n  onChange,\n  onInput,\n  placeholder,\n  isRequired,\n  onBlur,\n  autoComplete,\n  inputRef,\n  hideLabel,\n  label,\n  onKeyDown\n}) => {\n  return (\n    <>\n      {!hideLabel && (\n        <label htmlFor={name} className=\"input__label\">\n          {label}\n        </label>\n      )}\n      <input\n        className={className}\n        id={name}\n        name={name}\n        type={type}\n        value={value}\n        onFocus={onFocus}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={isRequired}\n        onBlur={onBlur}\n        autoComplete={autoComplete}\n        ref={inputRef}\n        onInput={onInput}\n        onKeyDown={onKeyDown}\n      />\n    </>\n  );\n};\n\nexport default Input;\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  username: '',\n  name: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { username, email, name, passwordOne } = this.state;\n    this.props.firebase\n      .createUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        const userId = authUser.user.uid;\n        const photoURL = authUser.user.photoURL || null;\n        return this.props.firebase.addUser({\n          userId,\n          name,\n          username,\n          email,\n          photoURL\n        });\n      })\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const {\n      username,\n      name,\n      email,\n      passwordOne,\n      passwordTwo,\n      error\n    } = this.state;\n    const isInvalid =\n      passwordOne === '' ||\n      passwordTwo === '' ||\n      email === '' ||\n      username === '' ||\n      passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"name\"\n          label=\"Full Name\"\n          value={name}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"username\"\n          label=\"Username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordOne\"\n          label=\"Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          label=\"Confirm Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Create Account\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignUpForm);\n","import React from 'react';\nimport './UserFormPage.scss';\n\nconst UserFormPage = ({ title, children }) => (\n  <main className=\"user-form__container\">\n    <h1 className=\"user-form__title\">{title}</h1>\n    {children}\n  </main>\n);\n\nexport default UserFormPage;\n","import React from 'react';\nimport SignUpForm from './SignUpForm';\nimport { UserFormPage } from '../UserFormPage';\n\nconst SignUpPage = () => (\n  <UserFormPage title=\"Create an account\">\n    <SignUpForm />\n  </UserFormPage>\n);\n\nexport default SignUpPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nexport { default as SignUpPage } from './SignUp';\nexport { default as SignUpForm } from './SignUpForm';\nexport { SignUpLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email, password } = this.state;\n    this.props.firebase\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  enableGoogleLogin = e => {\n    const { signInWithGoogle } = this.props.firebase;\n    signInWithGoogle();\n    e.preventDefault();\n  }\n\n  render() {\n    const { email, password, error } = this.state;\n    const isInvalid = password === '' || email === '';\n    return (\n      <form className=\"user-form\">\n      {/*\n        <Button\n          type=\"click\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.enableGoogleLogin}\n        >\n          Continue with Google\n        </Button>\n        <Button\n          type=\"click\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.enableGithubLogin}\n        >\n          Continue with Github\n        </Button>\n      */}\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"password\"\n          label=\"Password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Log In\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignInForm);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null\n};\n\nclass PasswordForgetForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .passwordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, error } = this.state;\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Reset My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordForgetForm);\n","import React from 'react';\nimport PasswordForgetForm from './PasswordForgetForm';\nimport { UserFormPage } from '../UserFormPage';\n\nconst PasswordForgetPage = () => (\n  <UserFormPage title=\"Forgot your password?\">\n    <PasswordForgetForm />\n  </UserFormPage>\n);\n\nexport default PasswordForgetPage;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport {default as PasswordForgetForm} from './PasswordForgetForm';\nexport {default as PasswordForgetPage} from './PasswordForget';\nexport {PasswordForgetLink};","import React from 'react';\nimport SignInForm from './SignInForm';\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { UserFormPage } from '../UserFormPage';\n\nconst SignInPage = () => (\n  <UserFormPage title=\"Log In\">\n    <SignInForm />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </UserFormPage>\n);\n\nexport default SignInPage;\n","import { Firebase } from '../components/Firebase';\n\nconst firebase = new Firebase();\n\nexport default firebase;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\n\nexport const loadUserData = user => {\n  return {\n    type: types.LOAD_USER_DATA,\n    user\n  };\n};\n\nexport const loadUsersById = usersById => {\n  return {\n    type: types.LOAD_USERS_BY_ID,\n    usersById\n  };\n};\n\nexport const fetchUsersById = () => {\n  return async dispatch => {\n    try {\n      const usersById = await firebase.db\n        .collection('users')\n        .get()\n        .then(snapshot => {\n          const users = {};\n          snapshot.forEach(doc => {\n            users[doc.id] = {\n              userId: doc.id,\n              ...doc.data()\n            };\n          });\n          return users;\n        });\n      dispatch(loadUsersById(usersById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserData = userId => {\n  return async dispatch => {\n    try {\n      const user = await firebase\n        .getUserDoc(userId)\n        .get()\n        .then(doc => doc.data());\n      dispatch(loadUserData(user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addUser = ({ userId, userData }) => {\n  return {\n    type: types.ADD_USER,\n    userId,\n    userData\n  };\n};\n\nexport const deleteUser = userId => {\n  return {\n    type: types.DELETE_USER,\n    userId\n  };\n};\n\nexport const updateUser = ({ userId, userData }) => {\n  return {\n    type: types.UPDATE_USER,\n    userId,\n    userData\n  };\n};\n","export const LOAD_USER_DATA = 'LOAD_USER_DATA';\nexport const LOAD_USERS_BY_ID = 'LOAD_USERS_BY_ID';\nexport const ADD_USER = 'ADD_USER';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const DELETE_USER = 'DELETE_USER';\n","export const getUsersById = state => {\n  return state.usersById;\n};\n\nexport const getUserData = (state, userId) => {\n  return state.usersById[userId];\n};\n\n// returns array of all users\nexport const getUsersArray = state => {\n  const { usersById } = state;\n  return Object.keys(usersById).map(userId => {\n    return {\n      userId,\n      ...usersById[userId]\n    };\n  });\n};\n\n// returns subset of users\nexport const getMembersArray = (state, memberIds) => {\n  const { usersById } = state;\n  return memberIds.map(memberId => usersById[memberId]);\n};\n","import * as types from './types';\n\nconst usersById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_USERS_BY_ID: {\n      const { usersById } = action;\n      return {\n        ...state,\n        ...usersById\n      };\n    }\n    case types.LOAD_USER_DATA: {\n      const { user } = action;\n      return {\n        ...state,\n        ...user\n      };\n    }\n    case types.ADD_USER: {\n      const { userId, userData } = action;\n      return {\n        ...state,\n        [userId]: {\n          userId,\n          ...userData\n        }\n      };\n    }\n    case types.DELETE_USER: {\n      const { userId } = action;\n      const { [userId]: deletedUser, ...restOfUsers } = state;\n      return restOfUsers;\n    }\n    case types.UPDATE_USER: {\n      const { userId, userData } = action;\n      return {\n        ...state,\n        [userId]: {\n          ...state[userId],\n          ...userData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default usersById;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const selectUser = userId => {\n  return {\n    type: types.SELECT_USER,\n    userId\n  };\n};\n\nexport const selectBoard = boardId => {\n  return {\n    type: types.SELECT_BOARD,\n    boardId\n  };\n};\n\nexport const selectList = listId => {\n  return {\n    type: types.SELECT_LIST,\n    listId\n  };\n};\n\nexport const selectCard = cardId => {\n  return {\n    type: types.SELECT_CARD,\n    cardId\n  };\n};\n","export const SELECT_BOARD = 'SELECT_BOARD';\nexport const SELECT_LIST = 'SELECT_LIST';\nexport const SELECT_CARD = 'SELECT_CARD';\nexport const SELECT_USER = 'SELECT_USER';\n","export const getCurrentUserId = state => {\n  return state.current.userId;\n};\n\nexport const getCurrentBoardId = state => {\n  return state.current.boardId;\n};\n\nexport const getCurrentListId = state => {\n  return state.current.listId;\n};\n\nexport const getCurrentCardId = state => {\n  return state.current.cardId;\n};\n\nexport const getCurrent = state => {\n  return state.current;\n};\n","import React, { Component } from 'react';\n\nexport default class BoardGrid extends Component {\n  render() {\n    return <ul className=\"board-grid\">{this.props.children}</ul>;\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BoardTile = props => {\n  const { boardId, boardTitle, onClick } = props;\n  return (\n    <li className=\"board-grid__tile\">\n      <Link\n        className=\"board-grid__link\"\n        to={`/home/board/${boardId}`}\n        onClick={onClick}\n      >\n        <span className=\"board-grid__title\">{boardTitle}</span>\n      </Link>\n    </li>\n  );\n};\n\nexport default BoardTile;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadBoardsById = boardsById => {\n  return {\n    type: types.LOAD_BOARDS_BY_ID,\n    boardsById\n  };\n};\n\nexport const fetchBoardsById = userId => {\n  return async dispatch => {\n    try {\n      const boardsById = await firebase.db\n        .collection('boards')\n        .where('memberIds', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const boardsById = {};\n          snapshot.forEach(doc => {\n            boardsById[doc.id] = doc.data();\n          });\n          return boardsById;\n        });\n      dispatch(loadBoardsById(boardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateBoardsById = board => {\n  return {\n    type: types.UPDATE_BOARDS_BY_ID,\n    board\n  };\n};\n\nexport const reorderLists = (boardId, listIds) => {\n  return {\n    type: types.REORDER_LISTS,\n    boardId,\n    listIds\n  };\n};\n\nexport const updateListIds = (boardId, listIds) => {\n  return {\n    type: types.UPDATE_LIST_IDS,\n    boardId,\n    listIds\n  };\n};\n","export const LOAD_BOARDS_BY_ID = 'LOAD_BOARDS_BY_ID';\nexport const UPDATE_BOARDS_BY_ID = 'UPDATE_BOARDS_BY_ID';\nexport const REORDER_LISTS = 'REORDER_LISTS';\nexport const UPDATE_LIST_IDS = 'UPDATE_LIST_IDS';","export const getBoardsById = state => {\n  return state.boardsById;\n};\n\nexport const getBoardsArray = state => {\n  const { boardsById } = state;\n  return Object.keys(boardsById).map(boardId => {\n    return {\n      boardId,\n      ...boardsById[boardId]\n    };\n  });\n};\n\nexport const getBoard = (state, boardId) => {\n  const { boardsById } = state;\n  return boardsById[boardId];\n};\n","import * as types from './types';\n\nconst boardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_BOARDS_BY_ID: {\n      const { boardsById } = action;\n      return {\n        ...state,\n        ...boardsById\n      };\n    }\n    case types.UPDATE_BOARDS_BY_ID: {\n      const { board } = action;\n      return {\n        ...state,\n        ...board\n      };\n    }\n    case types.UPDATE_LIST_IDS:\n    case types.REORDER_LISTS: {\n      const { boardId, listIds } = action;\n      return {\n        ...state,\n        [boardId]: {\n          ...state[boardId],\n          listIds\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default boardsById;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport BoardGrid from './BoardGrid';\nimport BoardTile from './BoardTile';\nimport './BoardGrid.scss';\nimport { withAuthorization } from '../Session';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Icon } from '../Icon';\nimport { userSelectors } from '../../ducks/users';\n\nclass BoardGridContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const { userId, firebase, updateBoardsById } = this.props;\n    this.boardObserver = firebase.db\n      .collection('boards')\n      .where('memberIds', 'array-contains', userId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const board = {\n            [change.doc.id]: change.doc.data()\n          };\n          updateBoardsById(board);\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.boardObserver();\n  }\n\n  render() {\n    const { boardsArray, selectBoard } = this.props;\n    const boardTiles = boardsArray.map(board => {\n      const { boardTitle, boardId } = board;\n      return (\n        <BoardTile\n          key={boardId}\n          boardTitle={boardTitle}\n          boardId={boardId}\n          onClick={() => selectBoard(boardId)}\n        />\n      );\n    });\n    return (\n      <section>\n        <BoardGrid>\n          {boardTiles}\n          <button\n            type=\"button\"\n            className=\"board-grid__tile board-grid__btn--add\"\n            onClick={this.props.openBoardComposer}\n          >\n            <Icon name=\"plus-circle\" />\n            Create board\n          </button>\n        </BoardGrid>\n      </section>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    userId: currentSelectors.getCurrentUserId(state),\n    user: userSelectors.getUserData(state, ownProps.userId),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardGridContainer)\n);\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport './Modal.scss';\n\nconst Modal = ({\n  onModalClose,\n  children,\n  className = '',\n  onModalClick,\n  size = 'md',\n  id\n}) => {\n  return (\n    <div className=\"modal\" onClick={onModalClick}>\n      <div\n        id={id}\n        className={`modal__content ${className} modal__content--${size}`}\n      >\n        <Button\n          type=\"button\"\n          className=\"modal__btn--close\"\n          onClick={onModalClose}\n          iconOnly\n        >\n          <Icon name=\"x\" />\n        </Button>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport { Modal } from '../Modal';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\nimport './BoardComposer.scss';\n\nconst INITIAL_STATE = {\n  boardTitle: ''\n};\n\nexport default class BoardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { boardTitle } = this.state;\n    const { handleSubmit, onClose } = this.props;\n    this.props.handleSubmit(boardTitle);\n    this.props.onClose();\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { boardTitle } = this.state;\n    return (\n      <Modal onModalClose={this.props.onClose} size=\"sm\">\n        <form onSubmit={this.onSubmit}>\n          <Input\n            name=\"boardTitle\"\n            title=\"Board Title\"\n            value={boardTitle}\n            onChange={this.onChange}\n            type=\"text\"\n          />\n          <Button\n            className=\"board-composer__btn--add\"\n            type=\"submit\"\n            onClick={this.onSubmit}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Create Board\n          </Button>\n        </form>\n      </Modal>\n    );\n  }\n}\n","export const CARD = 'CARD';\nexport const LIST = 'LIST';\nexport const TASK = 'TASK';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input } from '../Input';\nimport { Icon } from '../Icon';\nimport { withAuthorization } from '../Session';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Button } from '../Button';\nimport './ListComposer.scss';\n\nconst INITIAL_STATE = {\n  listTitle: '',\n  isActive: false\n};\n\nclass ListComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ listTitle: '' });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { listTitle } = this.state;\n    const { boardId } = this.props;\n    this.props.firebase.addList({ boardId, listTitle });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = e => {\n    if (e.target.value === '') {\n      this.setState({\n        isActive: false\n      });\n    }\n  };\n\n  render() {\n    const { listTitle, isActive } = this.state;\n    return (\n      <div\n        className={`list-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"list-composer__form\" onSubmit={this.onSubmit}>\n          <Input\n            onChange={this.onChange}\n            value={listTitle}\n            placeholder={isActive ? 'Enter list title...' : 'Add a list'}\n            required\n            name=\"listTitle\"\n            hideLabel\n            className=\"list-composer__input\"\n          />\n          {isActive && (\n            <div className=\"list-composer__footer\">\n              <Button\n                className=\"list-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add List\n              </Button>\n              <Button\n                className=\"list-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListComposer)\n);\n","import React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { ListComposer } from '../ListComposer';\n\nconst Board = props => {\n  const { boardId, children } = props;\n  return (\n    <Droppable\n      droppableId={boardId}\n      type={droppableTypes.LIST}\n      direction=\"horizontal\"\n    >\n      {provided => (\n        <div\n          className=\"board\"\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n        >\n          {children}\n          {provided.placeholder}\n          <ListComposer boardId={boardId} />\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nexport default Board;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadListsById = listsById => {\n  return {\n    type: types.LOAD_LISTS_BY_ID,\n    listsById\n  };\n};\n\nexport const fetchListsById = boardId => {\n  return async dispatch => {\n    try {\n      const listsById = await firebase.db\n        .collection('lists')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const listsById = {};\n          snapshot.forEach(doc => {\n            listsById[doc.id] = doc.data();\n          });\n          return listsById;\n        });\n      dispatch(loadListsById(listsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateListsById = list => {\n  return {\n    type: types.UPDATE_LISTS_BY_ID,\n    list\n  };\n};\n","export const LOAD_LISTS_BY_ID = 'LOAD_LISTS_BY_ID';\nexport const FETCH_LISTS_BY_ID = 'FETCH_LISTS_BY_ID';\nexport const UPDATE_LISTS_BY_ID = 'UPDATE_LISTS_BY_ID';\nexport const DELETE_CARD = 'DELETE_CARD';\n","export const getListsById = state => {\n  return state.listsById;\n};\n\nexport const getListsArray = state => {\n  const { listsById, boardsById, current } = state;\n  const { boardId } = current;\n  const board = boardsById[boardId];\n  if (!board) return null;\n  const { listIds } = board;\n\n  return listIds.map(listId => {\n    return {\n      listId,\n      ...listsById[listId]\n    };\n  });\n};\n","import * as types from './types';\n\nconst listsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_LISTS_BY_ID: {\n      const { listsById } = action;\n      return {\n        ...state,\n        ...listsById\n      };\n    }\n    case types.UPDATE_LISTS_BY_ID: {\n      const { list } = action;\n      return {\n        ...state,\n        ...list\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default listsById;\n","export const getCardsById = state => {\n  return state.cardsById;\n};\n\nexport const getCardsArray = (state, ownProps) => {\n  const { cardsById } = state;\n  const { cardIds } = ownProps;\n  return cardIds.map(cardId => cardsById[cardId]);\n};\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadCardsById = cardsById => {\n  return {\n    type: types.LOAD_CARDS_BY_ID,\n    cardsById\n  };\n};\n\nexport const fetchCardsById = boardId => {\n  return async dispatch => {\n    try {\n      const cardsById = await firebase.db\n        .collection('cards')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const cards = {};\n          snapshot.forEach(doc => {\n            cards[doc.id] = {\n              cardId: doc.id,\n              ...doc.data()\n            };\n          });\n          return cards;\n        });\n      dispatch(loadCardsById(cardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateCardsById = card => {\n  return {\n    type: types.UPDATE_CARDS_BY_ID,\n    card\n  };\n};\n\n","export const ADD_CARD = 'ADD_CARD';\nexport const SET_CARD_DUE_DATE = 'SET_CARD_DUE_DATE';\nexport const ADD_CARD_SUBTASK = 'ADD_CARD_SUBTASK';\nexport const REMOVE_CARD_SUBTASK = 'REMOVE_CARD_SUBTASK';\nexport const CHANGE_CARD_DESCRIPTION = 'CHANGE_CARD_DESCRIPTION';\nexport const SET_CARD_COLOR = 'SET_CARD_COLOR';\nexport const DELETE_CARD = 'DELETE_CARD';\nexport const MOVE_CARD = 'MOVE_CARD';\nexport const LOAD_CARDS_BY_ID = 'LOAD_CARDS_BY_ID';\nexport const UPDATE_CARDS_BY_ID = 'UPDATE_CARDS_BY_ID';\n\n","import * as types from './types';\n\nconst cardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_CARDS_BY_ID: {\n      const { cardsById } = action;\n      return {\n        ...state,\n        ...cardsById\n      };\n    }\n    case types.UPDATE_CARDS_BY_ID: {\n      const { card } = action;\n      return {\n        ...state,\n        ...card\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default cardsById;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadTasksById = tasksById => {\n  return {\n    type: types.LOAD_TASKS_BY_ID,\n    tasksById\n  };\n};\n\nexport const fetchTasksById = () => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateTasksById = task => {\n  return {\n    type: types.UPDATE_TASKS_BY_ID,\n    task\n  };\n};\n\nexport const fetchCardTasks = boardId => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserTasks = userId => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .where('assignedTo', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addTask = ({ taskId, taskData }) => {\n  return {\n    type: types.ADD_TASK,\n    taskId,\n    taskData\n  };\n};\n\nexport const deleteTask = taskId => {\n  return {\n    type: types.DELETE_TASK,\n    taskId\n  };\n};\n\nexport const updateTask = ({ taskId, taskData }) => {\n  return {\n    type: types.UPDATE_TASK,\n    taskId,\n    taskData\n  };\n};\n","export const LOAD_TASKS_BY_ID = 'LOAD_TASKS_BY_ID';\nexport const FETCH_TASKS_BY_ID = 'FETCH_TASKS_BY_ID';\nexport const UPDATE_TASKS_BY_ID = 'UPDATE_TASKS_BY_ID';\nexport const ADD_TASK = 'ADD_TASK';\nexport const UPDATE_TASK = 'UPDATE_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\n","export const getTasksById = state => {\n  const { tasksById } = state;\n  return tasksById;\n};\n\nexport const getTasksArray = (state, taskIds) => {\n  const { tasksById } = state;\n  if (!taskIds) return [];\n\n  return taskIds.map(taskId => {\n    return tasksById[taskId];\n  });\n};\n","import * as types from './types';\n\nconst tasksById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_TASKS_BY_ID: {\n      const { tasksById } = action;\n      return {\n        ...state,\n        ...tasksById\n      };\n    }\n    case types.ADD_TASK: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        [taskId]: {\n          taskId,\n          ...taskData\n        }\n      };\n    }\n    case types.DELETE_TASK: {\n      const { taskId } = action;\n      const { [taskId]: deletedTask, ...restOfTasks } = state;\n      return restOfTasks;\n    }\n    case types.UPDATE_TASK: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        [taskId]: {\n          ...state[taskId],\n          ...taskData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default tasksById;\n","import React, { Component, createRef } from 'react';\nimport './Textarea.scss';\n\nexport default class Textarea extends Component {\n  static defaultProps = {\n    isAutoHeightResizeEnabled: true\n  };\n\n  constructor(props) {\n    super(props);\n    this.textareaEl = createRef();\n  }\n\n  componentDidMount() {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n    this.autoHeightResize();\n  }\n\n  autoHeightResize = () => {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n\n    this.textareaEl.current.style.height = '0px'; // resets scroll height\n    this.textareaEl.current.style.height = `${\n      this.textareaEl.current.scrollHeight\n    }px`;\n  };\n\n  render() {\n    const {\n      className,\n      name,\n      value,\n      onChange,\n      placeholder,\n      isRequired,\n      onBlur,\n      onFocus,\n      onKeyDown,\n      onDragStart,\n      isReadOnly\n    } = this.props;\n    return (\n      <textarea\n        className={`textarea ${className}`}\n        id={name}\n        name={name}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={isRequired}\n        onBlur={onBlur}\n        onInput={this.autoHeightResize}\n        ref={this.textareaEl}\n        onFocus={onFocus}\n        onKeyDown={onKeyDown}\n        onDragStart={onDragStart}\n        readOnly={isReadOnly}\n      />\n    );\n  }\n}\n","export const BACKSPACE = 'Backspace';\nexport const ENTER = 'Enter';\nexport const TAB = 'Tab';\nexport const ARROW_DOWN = 'ArrowDown';\nexport const ARROW_UP = 'ArrowUp';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon } from '../Icon';\nimport { withFirebase } from '../Firebase';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport * as keys from '../../constants/keys';\nimport './CardComposer.scss';\n\nconst INITIAL_STATE = {\n  cardTitle: '',\n  isActive: false\n};\n\nclass CardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ cardTitle: '' });\n  };\n\n  onSubmit = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { cardTitle } = this.state;\n    const { boardId } = this.props.current;\n    const { listId } = this.props;\n    this.props.firebase.addCard({ boardId, listId, cardTitle });\n    this.resetForm();\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onBlur = e => {\n    if (e.target.value !== '') return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const { cardTitle, isActive } = this.state;\n\n    return (\n      <div\n        className={`card-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"card-composer__form\" onSubmit={this.onSubmit}>\n          <Textarea\n            onChange={this.onChange}\n            value={cardTitle}\n            placeholder={isActive ? 'Enter card title...' : 'Add a card'}\n            isRequired\n            name=\"cardTitle\"\n            className=\"card-composer__textarea\"\n            isAutoHeightResizeEnabled={false}\n            onKeyDown={this.onSubmit}\n          />\n          {isActive && (\n            <div className=\"card-composer__footer\">\n              <Button\n                className=\"card-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add Card\n              </Button>\n              <Button\n                className=\"card-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardComposer)\n);\n","import React from 'react';\nimport './Menu.scss';\n\nconst Menu = ({ children, onClick, className = '', menuRef }) => {\n  return (\n    <ul className={`menu ${className}`} onClick={onClick} ref={menuRef}>\n      {children}\n    </ul>\n  );\n};\n\nexport default Menu;\n","import React from 'react';\nimport './Menu.scss';\n\nconst MenuItem = ({ children, className = '' }) => {\n  return <li className={`menu__item ${className}`}>{children}</li>;\n};\n\nexport default MenuItem;\n","import React, { Component } from 'react';\n\nexport default class Popover extends Component {\n  state = {\n    isTouchEnabled: false\n  };\n\n  componentDidMount() {\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick, false);\n  }\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  handleOutsideClick = e => {\n    const { onOutsideClick } = this.props;\n    onOutsideClick(e.target);\n  };\n\n  handleTouch = () => {\n    this.setState({\n      isTouchEnabled: true\n    });\n    // remove touch handler to prevent unnecessary refires\n    document.removeEventListener('touchstart', this.handleTouch);\n    // remove outside click handler from click events\n    document.removeEventListener('click', this.handleOutsideClick);\n    // reattach outside click handler to touchstart events\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  render() {\n    const { className, onClick, style, children } = this.props;\n    return (\n      <div className={`popover ${className}`} onClick={onClick} style={style}>\n        {children}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from '../Button';\nimport Popover from './Popover';\nimport './Popover.scss';\n\nexport default class PopoverWrapper extends Component {\n  state = {\n    isOpen: false\n  };\n\n  static defaultProps = {\n    wrapperClass: '',\n    popoverClass: '',\n    buttonProps: {},\n    align: 'left',\n    anchorEl: null\n  };\n\n  handleOutsideClick = target => {\n    if (this.componentEl && !this.componentEl.contains(target)) {\n      this.setState({\n        isOpen: false\n      });\n    }\n  };\n\n  toggleOpen = () => {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  };\n\n  handleClose = e => {\n    if (e.target.matches('input')) return;\n    this.setState(prevState => ({\n      isOpen: false\n    }));\n  };\n\n  render() {\n    const {\n      children,\n      alignInner,\n      alignOuter,\n      buttonProps,\n      wrapperClass,\n      popoverClass,\n      anchorEl\n    } = this.props;\n    const { isOpen } = this.state;\n\n    let popoverWrapperStyle = null;\n    \n    if (anchorEl) {\n      const { offsetTop, offsetLeft } = anchorEl;\n      popoverWrapperStyle = {\n        position: 'absolute',\n        top: offsetTop,\n        [alignOuter]: offsetLeft\n      };\n    }\n\n    return (\n      <div\n        className={`popover-wrapper ${isOpen ? 'is-active' : ''} ${wrapperClass}`}\n        ref={el => (this.componentEl = el)}\n        style={popoverWrapperStyle}\n      >\n        <Button type=\"button\" onClick={this.toggleOpen} {...buttonProps} />\n        {isOpen && (\n          <Popover\n            className={`align-${alignInner} ${popoverClass}`}\n            onClick={this.handleClose}\n            onOutsideClick={this.handleOutsideClick}\n          >\n            {children}\n          </Popover>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport './Card.scss';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { PopoverWrapper } from '../Popover';\nimport { Menu, MenuItem } from '../Menu';\n\nexport default class Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleCardClick = e => {\n    if (e.target.matches('button') || e.target.matches('a')) return;\n    const { cardId, onCardClick } = this.props;\n    onCardClick(cardId);\n  };\n\n  render() {\n    const { cardTitle, cardId, cardIndex } = this.props;\n    return (\n      <Draggable draggableId={cardId} index={cardIndex}>\n        {provided => (\n            <div\n              className=\"card\"\n              onClick={this.handleCardClick}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              ref={provided.innerRef}\n            >\n              <div className=\"card__header\" ref={el => (this.headerEl = el)}>\n                <div className=\"card__tags\" />\n                <h3 className=\"card__title\">{cardTitle}</h3>\n              </div>\n              <div className=\"card__footer\">\n                <div className=\"card__labels\" />\n              </div>\n            </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { Card } from '../Card';\n\nexport default class Cards extends Component {\n  static propTypes = {\n    listId: PropTypes.string.isRequired\n  };\n\n  /*\n\n  shouldComponentUpdate(nextProps) {\n    if (this.props.cards === nextProps.cards) {\n      return false;\n    }\n    return true;\n  }\n*/\n  componentDidUpdate(prevProps) {\n    if (this.props.cards.length > prevProps.cards.length) {\n      this.scrollToBottom();\n    }\n  }\n\n  scrollToBottom = () => {\n    this.listEnd.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  render() {\n    const { listId, cards, style, onCardClick, onCardDelete } = this.props;\n\n    return (\n      <Droppable droppableId={listId} type={droppableTypes.CARD}>\n        {(provided, snapshot) => (\n          <div\n            className=\"list__content\"\n            ref={provided.innerRef}\n            style={{\n              ...style,\n              minHeight: snapshot.isDraggingOver ? 80 : 16\n            }}\n            {...provided.droppableProps}\n          >\n            {cards.map((card, cardIndex) => {\n              const { cardId, cardTitle } = card;\n              return (\n                <Card\n                  key={cardId}\n                  cardTitle={cardTitle}\n                  cardId={cardId}\n                  cardIndex={cardIndex}\n                  listId={listId}\n                  onCardClick={onCardClick}\n                  onCardDelete={onCardDelete}\n                />\n              );\n            })}\n            {provided.placeholder}\n            <div\n              style={{ float: 'left', clear: 'both' }}\n              ref={el => (this.listEnd = el)}\n            />\n          </div>\n        )}\n      </Droppable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { CardComposer } from '../CardComposer';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\nimport { Input } from '../Input';\nimport Cards from './Cards';\nimport './List.scss';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listTitle: this.props.listTitle\n    };\n  }\n\n  handleListDelete = e => {\n    e.preventDefault();\n    const { listId, boardId, firebase } = this.props;\n    firebase.deleteList({ listId, boardId });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onBlur = e => {\n    const { listTitle, listId, firebase } = this.props;\n    const { listTitle: newListTitle } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newListTitle !== listTitle) {\n      firebase.updateList(listId, {\n        listTitle: newListTitle\n      });\n      console.log('updated!');\n    }\n  };\n\n  render() {\n    const {\n      cards,\n      onCardClick,\n      listId,\n      listIndex,\n      isFetchingCards\n    } = this.props;\n    if (isFetchingCards) return null;\n\n    const { listTitle, viewportHeight } = this.state;\n\n    return (\n      <Draggable draggableId={listId} index={listIndex}>\n        {provided => (\n          <>\n            <section\n              className=\"list\"\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <header\n                className=\"list__header\"\n                ref={el => (this.listHeaderEl = el)}\n              >\n                <Input\n                  className=\"list__input--title\"\n                  name=\"listTitle\"\n                  type=\"text\"\n                  value={listTitle}\n                  onChange={this.onChange}\n                  required\n                  hideLabel\n                  onBlur={this.onBlur}\n                />\n                <PopoverWrapper\n                  wrapperClass=\"list__popover-wrapper\"\n                  popoverClass=\"list__popover\"\n                  alignInner=\"left\"\n                  buttonProps={{\n                    size: 'medium',\n                    iconOnly: true,\n                    className: 'list__btn--more-actions',\n                    children: <Icon name=\"more-vertical\" />\n                  }}\n                >\n                  <Menu>\n                    <MenuItem>\n                      <a href=\"\" onClick={this.handleListDelete}>\n                        Delete\n                      </a>\n                    </MenuItem>\n                  </Menu>\n                </PopoverWrapper>\n              </header>\n              <Cards\n                cards={cards}\n                listId={listId}\n                onCardClick={onCardClick}\n                onCardDelete={this.handleCardDelete}\n              />\n              {provided.placeholder}\n              <CardComposer listId={listId} />\n            </section>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    cards: cardSelectors.getCardsArray(state, ownProps)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(List)\n);\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadCommentsById = commentsById => {\n  return {\n    type: types.LOAD_COMMENTS_BY_ID,\n    commentsById\n  };\n};\n\nexport const fetchCommentsById = () => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateCommentsById = comment => {\n  return {\n    type: types.UPDATE_COMMENTS_BY_ID,\n    comment\n  };\n};\n\nexport const fetchCardComments = cardId => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .where('cardId', '==', cardId)\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserComments = userId => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .where('to', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addComment = ({ commentId, commentData }) => {\n  return {\n    type: types.ADD_COMMENT,\n    commentId,\n    commentData\n  };\n};\n\nexport const deleteComment = commentId => {\n  return {\n    type: types.DELETE_COMMENT,\n    commentId\n  };\n};\n\nexport const updateComment = ({ commentId, commentData }) => {\n  return {\n    type: types.UPDATE_COMMENT,\n    commentId,\n    commentData\n  };\n};\n","export const LOAD_COMMENTS_BY_ID = 'LOAD_COMMENTS_BY_ID';\nexport const FETCH_COMMENTS_BY_ID = 'FETCH_COMMENTS_BY_ID';\nexport const UPDATE_COMMENTS_BY_ID = 'UPDATE_COMMENTS_BY_ID';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const UPDATE_COMMENT = 'UPDATE_COMMENT';\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\n","export const getCommentsById = state => {\n  const { commentsById } = state;\n  return commentsById;\n};\n\nexport const getCommentsArray = (state, commentIds) => {\n  const { commentsById } = state;\n  if (!commentIds) return [];\n\n  return commentIds.map(commentId => {\n    return commentsById[commentId];\n  });\n};\n","import * as types from './types';\n\nconst commentsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_COMMENTS_BY_ID: {\n      const { commentsById } = action;\n      return {\n        ...state,\n        ...commentsById\n      };\n    }\n    case types.ADD_COMMENT: {\n      const { commentId, commentData } = action;\n      return {\n        ...state,\n        [commentId]: {\n          commentId,\n          ...commentData\n        }\n      };\n    }\n    case types.DELETE_COMMENT: {\n      const { commentId } = action;\n      const { [commentId]: deletedComment, ...restOfComments } = state;\n      return restOfComments;\n    }\n    case types.UPDATE_COMMENT: {\n      const { commentId, commentData } = action;\n      return {\n        ...state,\n        [commentId]: {\n          ...state[commentId],\n          ...commentData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default commentsById;\n","import React from 'react';\nimport './Toolbar.scss';\n\nconst Toolbar = ({ className, children, ...props }) => (\n  <div className={`toolbar ${className}`} {...props}>\n    {children}\n  </div>\n);\n\nToolbar.defaultProps = {\n  className: ''\n};\n\nexport default Toolbar;\n","import React, { Component } from 'react';\nimport './Avatar.scss';\n\nexport default class Avatar extends Component {\n  static defaultProps = {\n    imgSrc: null,\n    classes: {\n      avatar: '',\n      img: '',\n      placeholder: ''\n    },\n    size: 'md',\n    variant: 'circle'\n  };\n\n  getUserInitials = fullName => {\n    return fullName\n      .split(' ')\n      .map(name => name.charAt(0))\n      .join('')\n      .toUpperCase();\n  };\n\n  render() {\n    const {\n      imgSrc,\n      imgProps,\n      classes,\n      fullName,\n      variant,\n      color,\n      size\n    } = this.props;\n    return (\n      <div\n        className={`avatar avatar--${size} avatar--${variant} ${\n          classes.avatar\n        }`}\n      >\n        {imgSrc !== null ? (\n          <img\n            src={imgSrc}\n            alt={fullName}\n            className={`avatar__img ${classes.img}`}\n            {...imgProps}\n          />\n        ) : (\n          <div\n            className={`avatar__placeholder ${classes.placeholder}`}\n            style={{ backgroundColor: color }}\n          >\n            {this.getUserInitials(fullName)}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport { PopoverWrapper } from '../Popover';\n\nexport default function CardEditorAssignMember({ children }) {\n  return (\n    <PopoverWrapper\n      wrapperClass=\"card-editor__popover-wrapper card-editor__member-search-popover-wrapper\"\n      popoverClass=\"card-editor__popover card-editor__member-search-popover\"\n      alignOuter=\"left\"\n      alignInner=\"left\"\n      buttonProps={{\n        size: 'md',\n        iconOnly: true,\n        className: 'card-editor__toolbar-btn',\n        children: <Icon name=\"users\" />\n      }}\n    >\n      {children}\n    </PopoverWrapper>\n  );\n}\n","import React, { Component } from 'react';\n\nimport { Input } from '../Input';\nimport { Avatar } from '../Avatar';\nimport { Icon } from '../Icon';\nimport * as keys from '../../constants/keys';\nimport './MemberSearch.scss';\n\nexport default class MemberSearch extends Component {\n  state = {\n    query: '',\n    isActive: false,\n    isTouchEnabled: false,\n    selectedMember: '',\n    selectedIndex: null,\n    filteredList: this.props.users\n  };\n\n  componentDidMount() {\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick, false);\n    this.inputEl.focus();\n  }\n\n  handleOutsideClick = e => {\n    if (this.state.query !== '') return;\n    if (!this.memberSearchEl.contains(e.target)) {\n      this.setState({\n        isActive: false\n      });\n    }\n  };\n\n  handleTouch = () => {\n    this.setState({\n      isTouchEnabled: true\n    });\n    // remove touch handler to prevent unnecessary refires\n    document.removeEventListener('touchstart', this.handleTouch);\n    // remove outside click handler from click events\n    document.removeEventListener('click', this.handleOutsideClick);\n    // reattach outside click handler to touchstart events\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  matchUser = (user, query) => {\n    const { name, email, username } = user;\n    const regExp = new RegExp(query, 'i');\n    return regExp.test(name) || regExp.test(email) || regExp.test(username);\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({\n      query: '',\n      isActive: false,\n      isTouchEnabled: false,\n      selectedMember: '',\n      selectedIndex: null,\n      filteredList: this.props.users\n    });\n  };\n\n  onChange = e => {\n    const { users } = this.props;\n    const { selectedMember, selectedIndex } = this.state;\n    const query = e.target.value;\n    const filteredList = users.filter(user => this.matchUser(user, query));\n    const newIndex = filteredList.indexOf(selectedMember);\n    const persistSelectedMember = newIndex !== -1;\n\n    this.setState({\n      selectedMember: persistSelectedMember\n        ? selectedMember\n        : filteredList.length > 0\n        ? filteredList[0].userId\n        : '',\n      selectedIndex: persistSelectedMember ? newIndex : 0,\n      query,\n      filteredList\n    });\n  };\n\n  onKeyDown = e => {\n    if (\n      e.key !== keys.TAB &&\n      e.key !== keys.ARROW_DOWN &&\n      e.key !== keys.ARROW_UP &&\n      e.key !== keys.ENTER\n    )\n      return;\n\n    const { filteredList, selectedIndex, selectedMember } = this.state;\n    const { onMemberClick } = this.props;\n    const nextIndex =\n      selectedIndex === filteredList.length - 1 ? 0 : selectedIndex + 1;\n    const prevIndex =\n      selectedIndex === 0 ? filteredList.length - 1 : selectedIndex - 1;\n\n    // eslint-disable-next-line default-case\n    switch (e.key) {\n      case keys.ARROW_DOWN:\n      // eslint-disable-next-line no-fallthrough\n      case keys.TAB: {\n        this.setState({\n          selectedMember: filteredList[nextIndex].userId,\n          selectedIndex: nextIndex\n        });\n        break;\n      }\n      case keys.ARROW_UP: {\n        this.setState({\n          selectedMember: filteredList[prevIndex].userId,\n          selectedIndex: prevIndex\n        });\n        break;\n      }\n      case keys.ENTER: {\n        if (selectedMember === '') return;\n        onMemberClick(selectedMember);\n        break;\n      }\n    }\n\n    e.preventDefault();\n  };\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  render() {\n    const { users, onMemberClick, assignedMembers } = this.props;\n    const { query, isActive, filteredList, selectedMember } = this.state;\n\n    return (\n      <div\n        className=\"member-search__wrapper\"\n        ref={el => (this.memberSearchEl = el)}\n      >\n        <Input\n          name=\"query\"\n          className=\"member-search\"\n          onChange={this.onChange}\n          value={query}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          type=\"text\"\n          autoComplete=\"off\"\n          hideLabel\n          placeholder=\"Assign or remove member\"\n          onKeyDown={this.onKeyDown}\n          inputRef={el => (this.inputEl = el)}\n        />\n        {isActive && (\n          <ul className=\"member-search__list\">\n            {filteredList.length > 0 ? (\n              filteredList.map((user, i) => {\n                const { name, photoURL, email, username, userId } = user;\n                const isAssigned = assignedMembers.indexOf(userId) !== -1;\n                return (\n                  <li\n                    className={`member-search__item ${\n                      selectedMember === userId ? 'is-selected' : ''\n                    }`}\n                    onClick={() => onMemberClick(userId)}\n                    key={userId}\n                    id={userId}\n                  >\n                    <Icon name={isAssigned ? 'user-minus' : 'user-plus'} />\n                    <Avatar\n                      classes={{\n                        avatar: 'member-search__avatar--sm',\n                        placeholder: 'member-search__avatar-placeholder--sm'\n                      }}\n                      fullName={name}\n                      size=\"sm\"\n                      variant=\"circle\"\n                      imgSrc={photoURL}\n                    />\n                    <span className=\"member-search__info member-search__name\">\n                      {name}\n                    </span>\n                    <span className=\"member-search__info member-search__username\">\n                      {username}\n                    </span>\n                    <span className=\"member-search__info member-search__email\">\n                      {email}\n                    </span>\n                  </li>\n                );\n              })\n            ) : (\n              <li className=\"member-search__item\">\n                <span className=\"member-search__no-match\">\n                  No matches found\n                </span>\n              </li>\n            )}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\n\nconst CardEditorMoreActions = ({ onMenuClick }) => (\n  <PopoverWrapper\n    wrapperClass=\"card-editor__popover-wrapper\"\n    popoverClass=\"card-editor__popover\"\n    alignOuter=\"right\"\n    alignInner=\"right\"\n    buttonProps={{\n      size: 'md',\n      iconOnly: true,\n      className: 'card-editor__toolbar-btn',\n      children: <Icon name=\"more-horizontal\" />\n    }}\n  >\n    <Menu onClick={onMenuClick}>\n      <MenuItem>\n        <a href=\"\" data-action=\"delete\">\n          Delete card\n        </a>\n      </MenuItem>\n    </Menu>\n  </PopoverWrapper>\n);\n\nexport default CardEditorMoreActions;\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport './Checkbox.scss';\n\nconst Checkbox = ({\n  value,\n  id,\n  name,\n  isChecked,\n  onClick,\n  onChange,\n  className,\n  labelClass,\n  ...props\n}) => {\n  return (\n    <label\n      htmlFor={id}\n      onClick={onClick}\n      className={`checkbox__label ${labelClass}`}\n    >\n      {isChecked && <Icon name=\"check\" />}\n      <input\n        type=\"checkbox\"\n        id={id}\n        value={value}\n        name={name}\n        checked={isChecked}\n        className={`checkbox ${className}`}\n        onChange={onChange}\n        {...props}\n      />\n    </label>\n  );\n};\n\nCheckbox.defaultProps = {\n  className: '',\n  labelClass: ''\n};\n\nexport default Checkbox;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Checkbox } from '../Checkbox';\nimport { Textarea } from '../Textarea';\n\nconst appRoot = document.getElementById('root');\n\nexport default class CardEditorTask extends Component {\n  constructor(props) {\n    super(props);\n    this.portal = document.createElement('div');\n  }\n\n  componentDidMount() {\n    appRoot.appendChild(this.portal);\n  }\n\n  onDragStart = e => {\n    console.log('dragstart');\n    this.setState({\n      isReadOnly: true\n    });\n  };\n\n  componentWillUnmount() {\n    appRoot.removeChild(this.portal);\n  }\n\n  render() {\n    const {\n      taskId,\n      index,\n      text,\n      isCompleted,\n      toggleCompleted,\n      onChange,\n      onBlur,\n      onKeyDown\n    } = this.props;\n\n    return (\n      <Draggable draggableId={taskId} index={index}>\n        {(provided, snapshot) => {\n          const inner = (\n            <li\n              className=\"card-editor__task\"\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <Checkbox\n                id={`cb-${taskId}`}\n                value={taskId}\n                name={taskId}\n                isChecked={isCompleted}\n                onChange={toggleCompleted}\n                className=\"card-editor__checkbox\"\n                labelClass=\"card-editor__checkbox-label\"\n              />\n              <Textarea\n                value={text}\n                onChange={onChange}\n                onBlur={onBlur}\n                name={taskId}\n                className=\"card-editor__textarea--task\"\n                onKeyDown={onKeyDown}\n                onDragStart={this.onDragStart}\n              />\n            </li>\n          );\n          return snapshot.isDragging\n            ? ReactDOM.createPortal(inner, this.portal)\n            : inner;\n        }}\n      </Draggable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/users';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { commentActions, commentSelectors } from '../../ducks/comments';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { Avatar } from '../Avatar';\nimport './CardEditorComment.scss';\n\nclass CardEditorComment extends Component {\n  state = {\n    secondsElapsed: 0\n  };\n\n  componentDidMount() {\n    const { createdAt } = this.props.comment;\n    const secondsSinceCreation =\n      Math.floor(Date.now() / 1000) -\n      Math.floor(createdAt.toDate().getTime() / 1000);\n\n    this.setState({\n      secondsElapsed: secondsSinceCreation\n    });\n\n    this.interval = setInterval(this.tick, 1000);\n  }\n\n  tick = () => {\n    this.setState(prevState => ({\n      secondsElapsed: prevState.secondsElapsed + 1\n    }));\n  };\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  handleLikeClick = () => {\n    const { handleLike, comment } = this.props;\n    const { commentId } = comment;\n    handleLike(commentId);\n  };\n\n  render() {\n    const { user, comment } = this.props;\n    const { secondsElapsed } = this.state;\n    const { name, photoURL } = user;\n    const {\n      text,\n      createdAt,\n      lastModifiedAt,\n      likes,\n      to,\n      from,\n      isPinned\n    } = comment;\n    if (!createdAt) return null;\n    const date = new Date();\n    const dateCreatedFull = createdAt.toDate();\n    const timeCreated = dateCreatedFull.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true\n    });\n    const dateCreated = dateCreatedFull.toDateString();\n    const isToday = date.toDateString() === dateCreated;\n    const isYesterday = date.setDate(date.getDate() - 1);\n\n    return (\n      <div\n        className={`card-editor__comment-wrapper ${\n          isPinned ? 'is-pinned' : ''\n        }`}\n      >\n        <Avatar\n          classes={{\n            avatar: 'card-editor__avatar',\n            placeholder: 'card-editor__avatar-placeholder'\n          }}\n          fullName={name}\n          size=\"sm\"\n          variant=\"circle\"\n          imgSrc={photoURL}\n        />\n        <div className=\"card-editor__comment\">\n          <div className=\"card-editor__comment-header\">\n            <div className=\"card-editor__comment-details\">\n              <span className=\"card-editor__full-name\">{name}</span>\n              <span className=\"card-editor__timestamp\">\n                {secondsElapsed < 60\n                  ? 'Just now'\n                  : secondsElapsed < 120 // = up until 2 minutes\n                  ? '1 minute ago'\n                  : secondsElapsed < 3600 // up until 1st hour\n                  ? `${Math.floor(secondsElapsed / 60)} minutes ago`\n                  : secondsElapsed < 21600 // up until 6th hour\n                  ? `${Math.floor(secondsElapsed / 3600)} hours ago`\n                  : isToday\n                  ? `Today at ${timeCreated}`\n                  : isYesterday\n                  ? `Yesterday at ${timeCreated}`\n                  : `${dateCreated} ${timeCreated}`}\n              </span>\n            </div>\n            <Button\n              className=\"card-editor__likes\"\n              onClick={this.handleLikeClick}\n              size=\"sm\"\n            >\n              <span className=\"card-editor__likes-counter\">\n                {likes.length > 0 ? likes.length : ''}\n              </span>\n              <Icon name=\"thumbs-up\" />\n            </Button>\n          </div>\n          <div className=\"card-editor__comment-body\">{text}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state, ownProps.comment.from),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateCardsById: card => dispatch(cardActions.updateCardsById(card)),\n    fetchCardComments: cardId =>\n      dispatch(commentActions.fetchCardComments(cardId)),\n    addComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.addComment({ commentId, commentData })),\n    deleteComment: commentId =>\n      dispatch(commentActions.deleteComment(commentId)),\n    updateComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.updateComment({ commentId, commentData }))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardEditorComment)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { withFirebase } from '../Firebase';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { userSelectors } from '../../ducks/users';\nimport { commentActions, commentSelectors } from '../../ducks/comments';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { Modal } from '../Modal';\nimport { Toolbar } from '../Toolbar';\nimport { Avatar } from '../Avatar';\nimport CardEditorAssignMember from './CardEditorAssignMember';\nimport { MemberSearch } from '../MemberSearch';\nimport CardEditorMoreActions from './CardEditorMoreActions';\nimport * as keys from '../../constants/keys';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport CardEditorTask from './CardEditorTask';\nimport CardEditorComment from './CardEditorComment';\nimport './CardEditor.scss';\n\nclass CardEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching:\n        this.props.commentIds !== undefined && this.props.commentIds.length > 0,\n      cardTitle: this.props.cardTitle,\n      cardDescription: this.props.cardDescription || '',\n      newTask: '',\n      cardTasks: this.props.tasksArray.reduce((tasks, task) => {\n        const { taskId, text, isCompleted } = task;\n        tasks[taskId] = {\n          text,\n          isCompleted\n        };\n        return tasks;\n      }, {}),\n      newComment: '',\n      currentFocus: null,\n      taskIds: this.props.taskIds\n    };\n  }\n\n  componentDidMount() {\n    const {\n      cardId,\n      commentIds,\n      firebase,\n      fetchCardComments,\n      addComment,\n      deleteComment,\n      updateComment\n    } = this.props;\n\n    if (commentIds && commentIds.length > 0) {\n      fetchCardComments(cardId).then(() => {\n        this.setState({\n          isFetching: false\n        });\n      });\n    }\n\n    this.commentObserver = firebase.db\n      .collection('comments')\n      .where('cardId', '==', cardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const commentId = change.doc.id;\n          const commentData = change.doc.data();\n          if (change.type === 'added') {\n            addComment({ commentId, commentData });\n          }\n          if (change.type === 'modified') {\n            updateComment({ commentId, commentData });\n          }\n          if (change.type === 'removed') {\n            deleteComment(commentId);\n          }\n        });\n      });\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if ('taskIds' in props === false) return null;\n    if (props.taskIds.length !== state.taskIds.length) {\n      return {\n        cardTasks: props.tasksArray.reduce((tasks, task) => {\n          const { taskId, text, isCompleted } = task;\n          tasks[taskId] = {\n            text,\n            isCompleted\n          };\n          return tasks;\n        }, {}),\n        taskIds: props.taskIds\n      };\n    }\n    return null;\n  }\n\n  updateCardTasks = () => {\n    const { tasksArray } = this.props;\n    this.setState({\n      cardTasks: tasksArray.reduce((tasks, task) => {\n        const { taskId, text, isCompleted } = task;\n        tasks[taskId] = {\n          text,\n          isCompleted\n        };\n        return tasks;\n      }, {})\n    });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  deleteCard = () => {\n    const { cardId, listId, firebase, handleCardEditorClose } = this.props;\n    firebase.deleteCard({ cardId, listId });\n    handleCardEditorClose();\n  };\n\n  onBlur = e => {\n    const { [cardKey]: currentValue, cardId, firebase } = this.props;\n    const cardKey = e.target.name;\n    const { [cardKey]: updatedValue } = this.state;\n\n    // When field loses focus, update card if change is detected\n\n    if (updatedValue !== currentValue) {\n      firebase.updateCard(cardId, {\n        [cardKey]: updatedValue\n      });\n      console.log('updated!');\n    }\n\n    this.setState({\n      currentFocus: null\n    });\n  };\n\n  addComment = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { userId, firebase, cardId, boardId } = this.props;\n    const { newComment: text } = this.state;\n    firebase.addComment({ userId, text, cardId, boardId });\n    this.resetForm('newComment');\n    e.preventDefault();\n  };\n\n  resetForm = key => {\n    this.setState({\n      [key]: ''\n    });\n  };\n\n  addTask = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { userId, firebase, cardId, boardId } = this.props;\n    const { newTask: text } = this.state;\n    firebase.addTask({ userId, text, cardId, boardId });\n    this.resetForm('newTask');\n    e.preventDefault();\n  };\n\n  onFocus = e => {\n    this.setState({\n      currentFocus: e.target.name\n    });\n  };\n\n  handleModalClick = e => {\n    const { currentFocus } = this.state;\n    if (\n      (currentFocus === 'newComment' &&\n        !this.commentFormEl.contains(e.target)) ||\n      (currentFocus === 'newTask' && !this.newTaskFormEl.contains(e.target))\n    ) {\n      this.setState({\n        currentFocus: null\n      });\n    }\n  };\n\n  handleMoreActions = e => {\n    if (!e.target.matches('a')) return;\n    const { action } = e.target.dataset;\n    switch (action) {\n      case 'delete':\n        this.deleteCard();\n        break;\n    }\n    e.preventDefault(); // prevents page reload\n  };\n\n  onTaskChange = e => {\n    const { cardTasks } = this.state;\n    this.setState({\n      cardTasks: {\n        ...cardTasks,\n        [e.target.name]: {\n          ...cardTasks[e.target.name],\n          text: e.target.value\n        }\n      }\n    });\n  };\n\n  handleCheckboxChange = e => {\n    const taskId = e.target.name;\n    this.toggleTaskCompleted(taskId);\n  };\n\n  toggleTaskCompleted = taskId => {\n    const { isCompleted } = this.state.cardTasks[taskId];\n    this.setState(prevState => ({\n      cardTasks: {\n        ...prevState.cardTasks,\n        [taskId]: {\n          ...prevState.cardTasks[taskId],\n          isCompleted: !prevState.cardTasks[taskId].isCompleted\n        }\n      }\n    }));\n    const { firebase } = this.props;\n    firebase.updateTask(taskId, { isCompleted: !isCompleted });\n  };\n\n  updateTaskText = e => {\n    const taskId = e.target.name;\n    const { cardTasks } = this.state;\n    const { text } = cardTasks[taskId];\n    const { firebase } = this.props;\n    firebase.updateTask(taskId, { text });\n  };\n\n  deleteTask = e => {\n    if (e.target.value !== '' || e.key !== keys.BACKSPACE) return;\n    const { cardId, firebase } = this.props;\n    const taskId = e.target.name;\n    firebase.deleteTask({ taskId, cardId });\n  };\n\n  moveTask = ({ destination, draggableId, source }) => {\n    if (!destination) return;\n    if (destination.index === source.index) return;\n    const { firebase } = this.props;\n    const { taskIds } = this.state;\n    const updatedTaskIds = [...taskIds];\n    updatedTaskIds.splice(source.index, 1);\n    updatedTaskIds.splice(destination.index, 0, draggableId);\n    this.setState({\n      taskIds: updatedTaskIds\n    });\n    firebase.updateCard(source.droppableId, {\n      taskIds: updatedTaskIds\n    });\n  };\n\n  handleCommentLike = commentId => {\n    const { firebase, userId, commentsById } = this.props;\n    const { likes } = commentsById[commentId];\n\n    if (likes.indexOf(userId) === -1) {\n      firebase.updateComment(commentId, {\n        likes: firebase.addToArray(userId)\n      });\n    } else {\n      firebase.updateComment(commentId, {\n        likes: firebase.removeFromArray(userId)\n      });\n    }\n  };\n\n  assignMember = userId => {\n    const { cardId, boardId, assignedTo, firebase } = this.props;\n\n    if (assignedTo.indexOf(userId) !== -1) {\n      firebase.updateCard(cardId, {\n        assignedTo: firebase.removeFromArray(userId),\n        lastModifiedAt: firebase.getTimestamp()\n      });\n    } else {\n      firebase.assignCard({ cardId, boardId, userId }); \n    }\n  };\n\n  componentWillUnmount() {\n    this.commentObserver();\n  }\n\n  render() {\n    const {\n      handleCardEditorClose,\n      cardId,\n      commentIds,\n      userId,\n      assignedTo,\n      commentsArray,\n      usersArray,\n      membersArray\n    } = this.props;\n    const {\n      cardTitle,\n      cardDescription,\n      newComment,\n      currentFocus,\n      newTask,\n      cardTasks,\n      taskIds,\n      isFetching\n    } = this.state;\n    const hasTasks = taskIds !== undefined && taskIds.length > 0;\n    const hasComments = commentIds !== undefined && commentIds.length > 0;\n    const isAssigned = !!assignedTo && assignedTo.length > 0;\n    const isNewCommentInvalid = newComment === '';\n    const isNewTaskInvalid = newTask === '';\n    const commentFormIsFocused = currentFocus === 'newComment';\n\n    if (isFetching) return null;\n\n    return (\n      <Modal\n        onModalClose={handleCardEditorClose}\n        className=\"card-editor\"\n        onModalClick={this.handleModalClick}\n        size=\"lg\"\n        id=\"cardEditor\"\n      >\n        <Toolbar className=\"card-editor__toolbar\">\n          <CardEditorAssignMember>\n            <MemberSearch\n              users={usersArray}\n              assignedMembers={assignedTo}\n              onMemberClick={this.assignMember}\n            />\n          </CardEditorAssignMember>\n          <CardEditorMoreActions onMenuClick={this.handleMoreActions} />\n        </Toolbar>\n        <form\n          name=\"editCardForm\"\n          onFocus={this.onFocus}\n          className=\"card-editor__edit-card-form\"\n        >\n          <Textarea\n            className=\"card-editor__textarea--title\"\n            name=\"cardTitle\"\n            value={cardTitle}\n            onChange={this.onChange}\n            required\n            onBlur={this.onBlur}\n            onFocus={this.onFocus}\n          />\n          <div className=\"card-editor__section\">\n            <div className=\"card-editor__section-icon\">\n              <Icon name=\"user\" />\n            </div>\n            {isAssigned && (\n              <div className=\"card-editor__members\">\n                {membersArray.map(member => {\n                  const { name, photoURL, userId } = member;\n                  return (\n                    <Avatar\n                      classes={{\n                        avatar: 'card-editor__avatar',\n                        placeholder: 'card-editor__avatar-placeholder'\n                      }}\n                      fullName={name}\n                      size=\"sm\"\n                      variant=\"circle\"\n                      imgSrc={photoURL}\n                      key={userId}\n                    />\n                  );\n                })}\n              </div>\n            )}\n          </div>\n          <div\n            className={`card-editor__section ${\n              currentFocus === 'cardDescription' ? 'is-focused' : ''\n            }`}\n          >\n            <div className=\"card-editor__section-icon\">\n              <Icon name=\"edit-3\" />\n            </div>\n            <Textarea\n              className=\"card-editor__textarea card-editor__textarea--description\"\n              name=\"cardDescription\"\n              value={cardDescription}\n              onChange={this.onChange}\n              placeholder=\"Add a description\"\n              onBlur={this.onBlur}\n              onFocus={this.onFocus}\n            />\n          </div>\n        </form>\n        <div\n          className={`card-editor__section ${\n            currentFocus === 'newTask' ? 'is-focused' : ''\n          }`}\n        >\n          <hr className=\"card-editor__hr\" />\n          {hasTasks && (\n            <DragDropContext onDragEnd={this.moveTask}>\n              <Droppable droppableId={cardId} type={droppableTypes.TASK}>\n                {provided => (\n                  <ul\n                    className=\"card-editor__tasks\"\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                  >\n                    {taskIds.map((taskId, index) => {\n                      return (\n                        <CardEditorTask\n                          taskId={taskId}\n                          index={index}\n                          text={cardTasks[taskId].text}\n                          isCompleted={cardTasks[taskId].isCompleted}\n                          toggleCompleted={this.handleCheckboxChange}\n                          onChange={this.onTaskChange}\n                          onBlur={this.updateTaskText}\n                          onKeyDown={this.deleteTask}\n                          key={taskId}\n                        />\n                      );\n                    })}\n                    {provided.placeholder}\n                  </ul>\n                )}\n              </Droppable>\n            </DragDropContext>\n          )}\n          <div className=\"card-editor__section-icon\">\n            <Icon name=\"check-square\" />\n          </div>\n          <form\n            name=\"newTaskForm\"\n            className={`card-editor__new-task-form ${\n              currentFocus === 'newTask' ? 'is-focused' : ''\n            }`}\n            ref={el => (this.newTaskFormEl = el)}\n            onSubmit={this.addTask}\n          >\n            <Textarea\n              className=\"card-editor__textarea card-editor__textarea--new-task\"\n              name=\"newTask\"\n              value={newTask}\n              onChange={this.onChange}\n              placeholder=\"Add a task\"\n              onFocus={this.onFocus}\n              onKeyDown={this.addTask}\n            />\n            {currentFocus === 'newTask' && (\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isNewTaskInvalid}\n                onClick={this.addTask}\n                className=\"card-editor__btn--add-task\"\n              >\n                Add task\n              </Button>\n            )}\n          </form>\n        </div>\n        <div\n          className={`card-editor__section ${\n            commentFormIsFocused ? 'is-focused' : ''\n          }`}\n        >\n          {hasComments && (\n            <div className=\"card-editor__comments\">\n              {commentsArray.map(comment => {\n                const { commentId } = comment;\n                return (\n                  <CardEditorComment\n                    key={commentId}\n                    comment={comment}\n                    handleLike={this.handleCommentLike}\n                  />\n                );\n              })}\n            </div>\n          )}\n          <hr className=\"card-editor__hr\" />\n          <div className=\"card-editor__section-icon\">\n            <Icon name=\"message-circle\" />\n          </div>\n          <form\n            name=\"commentForm\"\n            className={`card-editor__comment-form ${\n              commentFormIsFocused ? 'is-focused' : ''\n            }`}\n            ref={el => (this.commentFormEl = el)}\n            onSubmit={this.addComment}\n          >\n            <Textarea\n              className=\"card-editor__textarea card-editor__textarea--comment\"\n              name=\"newComment\"\n              value={newComment}\n              onChange={this.onChange}\n              placeholder=\"Write a comment...\"\n              onFocus={this.onFocus}\n              onKeyDown={this.addComment}\n            />\n            {commentFormIsFocused && (\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isNewCommentInvalid}\n                onClick={this.addComment}\n                name=\"newCommentSubmit\"\n                className=\"card-editor__btn--submit-comment\"\n              >\n                Comment\n              </Button>\n            )}\n          </form>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    userId: currentSelectors.getCurrentUserId(state),\n    tasksArray: taskSelectors.getTasksArray(state, ownProps.taskIds),\n    commentsArray: commentSelectors.getCommentsArray(\n      state,\n      ownProps.commentIds\n    ),\n    commentsById: commentSelectors.getCommentsById(state),\n    usersArray: userSelectors.getUsersArray(state),\n    membersArray: userSelectors.getMembersArray(state, ownProps.assignedTo)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCardComments: cardId =>\n      dispatch(commentActions.fetchCardComments(cardId)),\n    addComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.addComment({ commentId, commentData })),\n    deleteComment: commentId =>\n      dispatch(commentActions.deleteComment(commentId)),\n    updateComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.updateComment({ commentId, commentData }))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardEditor)\n);\n","\n/**\n * Checks if two arrays or objects are equal\n * @param {Array|Object} value\n * @param {Array|Object} other\n */\n\n// eslint-disable-next-line import/prefer-default-export\nexport const isEqual = (value, other) => {\n  const type = Object.prototype.toString.call(value);\n\n  // If both objects are not the same type, return false\n  if (type !== Object.prototype.toString.call(other)) return false;\n\n  const typeObj = '[object Object]';\n  const typeArr = '[object Array]';\n  // If items are neither objects nor arrays, return false\n  if (type !== typeObj && type !== typeArr) return false;\n\n  // Compare length of two items\n  const valueLen = type === typeArr ? value.length : Object.keys(value).length;\n  const otherLen = type === typeArr ? other.length : Object.keys(other).length;\n  if (valueLen !== otherLen) return false;\n\n  const compare = (item1, item2) => {\n    const typeFunc = '[object Function]';\n    const itemType = Object.prototype.toString.call(item1);\n    if (itemType !== Object.prototype.toString.call(item2)) return false;\n    if (itemType === typeObj || itemType === typeArr) {\n      return isEqual(item1, item2);\n    }\n    if (itemType === typeFunc) {\n      return item1.toString() === item2.toString();\n    }\n    return item1 === item2;\n  };\n\n  if (type === typeArr) {\n    for (let i = 0; i < valueLen; i++) {\n      if (!compare(value[i], other[i])) return false;\n    }\n  } else {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (compare(value[key], other[key]) === false) return false;\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * Delays callback execution until next browser repaint\n * Best used for `scroll` and `resize` window events\n * @param {Function} callback - The function to debounce\n */\n\nexport const windowDebouncer = callback => {\n  let request;\n\n  return (...args) => {\n    const context = this;\n\n    if (request) {\n      window.cancelAnimationFrame(request);\n    }\n\n    request = window.requestAnimationFrame(() => {\n      callback.apply(context, args);\n    });\n  };\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { withFirebase } from '../Firebase';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport * as ROUTES from '../../constants/routes';\nimport Board from './Board';\nimport { Input } from '../Input';\nimport { List } from '../List';\nimport { CardEditor } from '../CardEditor';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { utils } from '../../utils';\nimport './Board.scss';\n\nclass BoardContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: true,\n      isDragging: false,\n      isCardEditorOpen: false,\n      boardTitle: this.props.boardTitle\n    };\n  }\n\n  componentDidMount() {\n    const {\n      current,\n      fetchListsById,\n      fetchCardsById,\n      fetchCardTasks,\n      firebase,\n      updateListsById,\n      updateCardsById,\n      boardId,\n      board,\n      updateListIds,\n      addTask,\n      updateTask,\n      deleteTask,\n      selectBoard\n    } = this.props;\n\n    if (current.boardId !== boardId) {\n      selectBoard(boardId);\n    }\n\n    fetchListsById(boardId);\n    fetchCardsById(boardId);\n    fetchCardTasks(boardId).then(() => {\n      this.setState({\n        isFetching: false\n      });\n    });\n    this.boardObserver = firebase.getBoardDoc(boardId).onSnapshot(snapshot => {\n      const updatedBoard = snapshot.data();\n      if (!utils.isEqual(updatedBoard.listIds, board.listIds)) {\n        updateListIds(boardId, updatedBoard.listIds);\n      }\n    });\n    this.listObserver = firebase.db\n      .collection('lists')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const list = {\n            [change.doc.id]: change.doc.data()\n          };\n          updateListsById(list);\n        });\n      });\n    this.taskObserver = firebase.db\n      .collection('tasks')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const taskId = change.doc.id;\n          const taskData = change.doc.data();\n          if (change.type === 'added') {\n            addTask({ taskId, taskData });\n          }\n          if (change.type === 'modified') {\n            updateTask({ taskId, taskData });\n          }\n          if (change.type === 'removed') {\n            deleteTask(taskId);\n          }\n        });\n      });\n    this.cardObserver = firebase.db\n      .collection('cards')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const card = {\n            [change.doc.id]: {\n              cardId: change.doc.id,\n              ...change.doc.data()\n            }\n          };\n          updateCardsById(card);\n        });\n      });\n    console.log('mounted');\n  }\n\n  componentWillUnmount() {\n    this.boardObserver();\n    this.listObserver();\n    this.cardObserver();\n    this.taskObserver();\n  }\n\n  onDragStart = () => {\n    this.setState({\n      isDragging: true\n    });\n  };\n\n  onDragEnd = ({ destination, draggableId, source, type }) => {\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    const { firebase } = this.props;\n    if (type === droppableTypes.CARD) {\n      const { listsById } = this.props;\n      const isMovedWithinList = source.droppableId === destination.droppableId;\n      const updatedCardIds = [...listsById[destination.droppableId].cardIds];\n      if (isMovedWithinList) {\n        updatedCardIds.splice(source.index, 1);\n        updatedCardIds.splice(destination.index, 0, draggableId);\n        firebase.updateList(source.droppableId, {\n          cardIds: updatedCardIds\n        });\n      } else {\n        updatedCardIds.splice(destination.index, 0, draggableId);\n        firebase.moveCardToList({\n          cardId: draggableId,\n          origListId: source.droppableId,\n          newListId: destination.droppableId,\n          updatedCardIds\n        });\n      }\n    }\n\n    if (type === droppableTypes.LIST) {\n      const { boardsById, current, reorderLists } = this.props;\n      const { boardId } = current;\n      const updatedListIds = [...boardsById[boardId].listIds];\n      updatedListIds.splice(source.index, 1);\n      updatedListIds.splice(destination.index, 0, draggableId);\n      firebase.updateBoard(boardId, {\n        listIds: updatedListIds\n      });\n      reorderLists(boardId, updatedListIds);\n    }\n\n    this.setState({\n      isDragging: false\n    });\n  };\n\n  toggleCardEditor = () => {\n    this.setState(prevState => ({\n      isCardEditorOpen: !prevState.isCardEditorOpen\n    }));\n  };\n\n  handleCardClick = cardId => {\n    this.props.selectCard(cardId);\n    this.toggleCardEditor();\n  };\n\n  onTitleChange = e => {\n    this.setState({\n      boardTitle: e.target.value\n    });\n  };\n\n  onTitleBlur = e => {\n    const { boardTitle, boardId, firebase } = this.props;\n    const { boardTitle: newBoardTitle } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newBoardTitle !== boardTitle) {\n      firebase.updateBoard(boardId, {\n        boardTitle: newBoardTitle\n      });\n      console.log('updated!');\n    }\n  };\n\n  render() {\n    const { isFetching, isCardEditorOpen } = this.state;\n    const { current, listsArray, cardsById, boardId, board } = this.props;\n    if (isFetching) return null;\n    const { cardId } = current;\n    const { boardTitle } = board;\n    const lists = listsArray.map((list, listIndex) => {\n      const { listId, listTitle, cardIds } = list;\n      return (\n        <List\n          listId={listId}\n          key={listId}\n          listIndex={listIndex}\n          listTitle={listTitle}\n          cardIds={cardIds}\n          isFetchingCards={isFetching}\n          isDragging={this.state.isDragging}\n          onCardClick={this.handleCardClick}\n          boardId={boardId}\n        />\n      );\n    });\n\n    return (\n      <main className=\"board-container\">\n        <Input\n          className=\"board__input--title\"\n          name=\"boardTitle\"\n          type=\"text\"\n          value={boardTitle}\n          onChange={this.onTitleChange}\n          required\n          hideLabel\n          onBlur={this.onTitleBlur}\n        />\n        <DragDropContext\n          onDragEnd={this.onDragEnd}\n          onDragStart={this.onDragStart}\n        >\n          <Board boardId={boardId}>{lists}</Board>\n        </DragDropContext>\n        {isCardEditorOpen && (\n          <CardEditor\n            {...cardsById[cardId]}\n            handleCardEditorClose={this.toggleCardEditor}\n          />\n        )}\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    boardsById: boardSelectors.getBoardsById(state),\n    current: currentSelectors.getCurrent(state),\n    listsById: listSelectors.getListsById(state),\n    listsArray: listSelectors.getListsArray(state),\n    cardsById: cardSelectors.getCardsById(state),\n    board: boardSelectors.getBoard(state, ownProps.boardId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId)),\n    selectCard: cardId => dispatch(currentActions.selectCard(cardId)),\n    fetchListsById: boardId => dispatch(listActions.fetchListsById(boardId)),\n    updateListsById: list => dispatch(listActions.updateListsById(list)),\n    fetchCardsById: boardId => dispatch(cardActions.fetchCardsById(boardId)),\n    fetchCardTasks: boardId => dispatch(taskActions.fetchCardTasks(boardId)),\n    updateCardsById: card => dispatch(cardActions.updateCardsById(card)),\n    reorderLists: (boardId, listIds) =>\n      dispatch(boardActions.reorderLists(boardId, listIds)),\n    updateListIds: (boardId, listIds) =>\n      dispatch(boardActions.updateListIds(boardId, listIds)),\n    addTask: ({ taskId, taskData }) =>\n      dispatch(taskActions.addTask({ taskId, taskData })),\n    deleteTask: taskId => dispatch(taskActions.deleteTask(taskId)),\n    updateTask: ({ taskId, taskData }) =>\n      dispatch(taskActions.updateTask({ taskId, taskData }))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardContainer)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { withAuthorization } from '../Session';\nimport * as ROUTES from '../../constants/routes';\nimport { userActions, userSelectors } from '../../ducks/users';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { BoardGridContainer } from '../BoardGrid';\nimport { BoardComposer } from '../BoardComposer';\nimport { BoardContainer } from '../Board';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport './Home.scss';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isBoardComposerOpen: false,\n      isFetching: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      firebase,\n      selectUser,\n      fetchUsersById,\n      fetchBoardsById\n    } = this.props;\n    const userId = firebase.auth.currentUser.uid;\n    selectUser(userId);\n    console.log('mounted home');\n    fetchUsersById()\n      .then(() => fetchBoardsById(userId))\n      .then(() =>\n        this.setState({\n          isFetching: false\n        })\n      );\n  }\n\n  toggleBoardComposer = () => {\n    this.setState(prevState => ({\n      isBoardComposerOpen: !prevState.isBoardComposerOpen\n    }));\n  };\n\n  createBoard = boardTitle => {\n    const { userId, firebase } = this.props;\n    firebase.addBoard({ userId, boardTitle });\n  };\n\n  render() {\n    const { isBoardComposerOpen, isFetching } = this.state;\n    if (isFetching) return null;\n    const { userId } = this.props;\n    return (\n      <>\n        {isBoardComposerOpen && (\n          <BoardComposer\n            onClose={this.toggleBoardComposer}\n            handleSubmit={this.createBoard}\n          />\n        )}\n        <Switch>\n          <Route\n            exact\n            path={ROUTES.HOME}\n            render={() => (\n              <main className=\"main\">\n                <h1>Home</h1>\n                {userId && (\n                  <BoardGridContainer\n                    userId={userId}\n                    openBoardComposer={this.toggleBoardComposer}\n                  />\n                )}\n              </main>\n            )}\n          />\n          <Route\n            path={ROUTES.BOARD}\n            render={props => (\n              <BoardContainer\n                userId={userId}\n                boardId={props.match.params.id}\n                {...props}\n              />\n            )}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentBoardId: currentSelectors.getCurrentBoardId(state),\n    userId: currentSelectors.getCurrentUserId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsersById: () => dispatch(userActions.fetchUsersById()),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    selectUser: userId => dispatch(currentActions.selectUser(userId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(HomePage)\n);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .passwordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n    const isInvalid = passwordOne === '' || passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"passwordOne\"\n          label=\"New Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          label=\"Confirm New Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Change My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React from 'react';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport { PasswordChangeForm } from '../PasswordChange';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport './Account.scss';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <main className=\"account\">\n        <h1>Account: {authUser.email}</h1>\n        <section className=\"account__section\">\n        <h2>Forgot your password?</h2>\n          <PasswordForgetForm />\n        </section>\n        <section className=\"account__section\">\n        <h2>Change your password.</h2>\n          <PasswordChangeForm />\n        </section>\n      </main>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(AccountPage);\n","import React, { Component } from 'react';\nimport { Navbar } from '../Navbar';\nimport './Header.scss';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <Navbar />\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport { Navbar } from '../Navbar';\nimport * as ROUTES from '../../constants/routes';\nimport { LandingPage } from '../Landing';\nimport { SignUpPage } from '../SignUp';\nimport { SignInPage } from '../SignIn';\nimport { PasswordForgetPage } from '../PasswordForget';\nimport { HomePage } from '../Home';\nimport { AccountPage } from '../Account';\nimport { AdminPage } from '../Admin';\nimport { withAuthentication } from '../Session';\nimport { Header } from '../Header';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Header />\n        <Switch>\n          <Route exact path={ROUTES.LANDING} component={LandingPage} />\n          <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n          <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n          <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n          <Route path={ROUTES.HOME} render={props => <HomePage {...props} />} />\n          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n          <Route path={ROUTES.ADMIN} component={AdminPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { boardsById } from '../ducks/boards';\nimport { cardsById } from '../ducks/cards';\nimport { listsById } from '../ducks/lists';\nimport { usersById } from '../ducks/users';\nimport { current } from '../ducks/current';\nimport { tasksById } from '../ducks/tasks';\nimport { commentsById } from '../ducks/comments';\n\nexport default combineReducers({\n  boardsById,\n  cardsById,\n  listsById,\n  usersById,\n  current,\n  tasksById,\n  commentsById\n});\n","import * as types from './types';\n\nconst current = (state = {}, action) => {\n  switch (action.type) {\n    case types.SELECT_USER: {\n      const { userId } = action;\n      return {\n        ...state,\n        userId\n      };\n    }\n    case types.SELECT_BOARD: {\n      const { boardId } = action;\n      return {\n        ...state,\n        boardId\n      };\n    }\n    case types.SELECT_LIST: {\n      const { listId } = action;\n      return {\n        ...state,\n        listId\n      };\n    }\n    case types.SELECT_CARD: {\n      const { cardId } = action;\n      return {\n        ...state,\n        cardId\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport { current };\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\n\nexport default history;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport 'normalize.css';\nimport './index.scss';\nimport { App } from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { FirebaseContext } from './components/Firebase';\nimport reducers from './store/reducers';\nimport firebase from './store/firebase';\nimport history from './store/history';\n\nconst store = createStore(reducers, {}, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <FirebaseContext.Provider value={firebase}>\n      <Router basename={process.env.PUBLIC_URL} history={history}>\n        <App />\n      </Router>\n    </FirebaseContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}