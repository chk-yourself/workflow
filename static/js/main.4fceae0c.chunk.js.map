{"version":3,"sources":["assets/feather/feather-sprite.svg","constants/routes.js","components/Main/Main.jsx","pages/Landing/Landing.js","components/Firebase/context.js","components/Firebase/Firebase.js","components/Input/Input.js","components/Button/Button.js","pages/SignUp/SignUpForm.js","components/UserFormPage/UserFormPage.js","pages/SignUp/SignUp.js","pages/SignIn/SignInForm.js","pages/PasswordForget/PasswordForgetForm.js","pages/PasswordForget/PasswordForget.js","pages/SignIn/SignIn.js","components/Session/context.js","store/firebase.js","ducks/lists/actions.js","ducks/lists/types.js","ducks/projects/actions.js","ducks/projects/types.js","ducks/tasks/actions.js","ducks/tasks/types.js","ducks/users/actions.js","ducks/users/types.js","ducks/currentUser/actions.js","ducks/currentUser/types.js","utils/date/constants.js","utils/date/index.js","ducks/currentUser/selectors.js","ducks/currentUser/reducer.js","utils/react/index.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","ducks/users/selectors.js","ducks/users/reducer.js","components/Icon/Icon.js","components/ProjectGrid/ProjectTile.js","ducks/projects/selectors.js","ducks/projects/reducer.js","ducks/selectedProject/index.js","components/ProjectGrid/ProjectGrid.js","components/withOutsideClick/withOutsideClick.js","components/Modal/Modal.js","components/Radio/Radio.js","components/ColorPicker/ColorPicker.js","components/ProjectIcon/ProjectIcon.js","components/Avatar/Avatar.js","constants/keys.js","components/MemberSearch/MemberSearch.js","components/Popover/Popover.js","components/Popover/PopoverWrapper.js","components/MemberAssigner/MemberAssigner.js","components/ProjectComposer/ProjectComposer.js","constants/droppableTypes.js","components/ListComposer/ListComposer.js","components/Toolbar/Toolbar.jsx","components/Menu/Menu.js","components/Menu/MenuItem.js","components/TaskSettings/TaskSettings.js","components/Project/Project.js","ducks/selectedTask/index.js","ducks/lists/selectors.js","ducks/lists/reducer.js","ducks/tasks/selectors.js","ducks/tasks/reducer.js","ducks/subtasks/actions.js","ducks/subtasks/types.js","ducks/subtasks/selectors.js","ducks/subtasks/reducer.js","components/TaskComposer/TaskComposer.js","utils/function/index.js","components/Textarea/Textarea.js","components/CardComposer/CardComposer.js","components/Tag/Tag.jsx","components/Card/Card.js","components/Checkbox/Checkbox.js","components/Badge/Badge.jsx","components/ProjectBadge/ProjectBadge.jsx","components/Task/Task.js","components/Task/DraggableTask.js","components/Tasks/Tasks.js","components/List/List.js","components/TaskEditor/TaskEditorSection.js","components/TaskEditor/TaskEditorMoreActions.js","components/DragHandle/DragHandle.jsx","components/Subtask/Subtask.js","components/Subtasks/Subtasks.js","components/SubtaskComposer/SubtaskComposer.js","components/TagsInput/TagsInput.js","components/Calendar/Calendar.js","components/DatePicker/DatePicker.js","components/TaskEditor/TaskEditorPane.js","components/Dropdown/Dropdown.js","components/ProjectListDropdown/ProjectListDropdown.js","components/RichTextEditor/utils.js","components/RichTextEditor/RichTextEditor.js","components/CommentComposer/CommentComposer.js","components/CommentEditor/CommentEditor.js","components/Timestamp/Timestamp.jsx","components/Comment/Comment.js","ducks/comments/actions.js","ducks/comments/types.js","ducks/comments/selectors.js","ducks/comments/reducer.js","components/Comments/Comments.js","components/NotesEditor/NotesEditor.js","components/TaskEditor/TaskEditor.js","components/Project/ProjectContainer.js","components/Dashboard/DashboardPanel.js","components/Dashboard/TasksDueSoon.js","components/Notification/Notification.js","components/Dashboard/Notifications.js","components/Dashboard/Dashboard.js","components/ExpansionPanel/ExpansionPanelHeader.jsx","components/ExpansionPanel/ExpansionPanelContent.jsx","components/ExpansionPanel/ExpansionPanel.jsx","components/Folder/Folder.jsx","components/UserTasks/UserTasks.jsx","pages/UserProfile/UserProfile.jsx","components/Search/SearchBar.js","components/Search/SearchSuggestions.js","components/Search/Highlight.js","components/Search/SearchTypeahead.js","components/Search/TagSearchResults.js","components/Search/SearchResults.js","pages/PasswordChange/PasswordChangeForm.js","pages/Account/Account.js","utils/string/index.js","pages/Home/Home.js","pages/Admin/Admin.js","components/Logo/Logo.js","components/Nav/Navbar.js","components/Nav/Sidebar.js","components/Nav/NavLinks.js","components/SignOutButton/SignOutButton.js","components/Topbar/Topbar.js","components/Header/Header.jsx","pages/App/App.jsx","serviceWorker.js","store/reducers.js","store/history.js","store/index.js","index.js"],"names":["module","exports","__webpack_require__","p","HOME","Main","_ref","classes","children","title","react_default","a","createElement","className","concat","main","defaultProps","LandingPage","components_Main_Main","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","signInWithGoogle","provider","app","auth","GoogleAuthProvider","addScope","signInWithPopup","then","result","credential","token","accessToken","console","log","user","catch","error","errorCode","code","message","email","alert","signInWithGithub","GithubAuthProvider","signInWithRedirect","createUserWithEmailAndPassword","password","signInWithEmailAndPassword","signOut","passwordReset","sendPasswordResetEmail","passwordUpdate","newPassword","currentUser","updatePassword","getTimestamp","firestore","FieldValue","serverTimestamp","addToArray","value","arrayUnion","removeFromArray","arrayRemove","deleteField","delete","getDocRef","collection","doc","subcollection","arguments","length","undefined","subdoc","docRef","db","createBatch","batch","queryCollection","path","_ref2","slicedToArray","field","comparisonOperator","where","updateDoc","_ref3","_ref4","newValue","update","objectSpread","lastUpdatedAt","updateBatch","ref","Array","isArray","apply","toConsumableArray","getUserDoc","userId","addUser","_ref5","name","username","_ref5$projectIds","projectIds","_ref5$photoURL","photoURL","userRef","newFolderRef","todayFolderRef","upcomingFolderRef","laterFolderRef","miscFolderRef","unscheduledFolderRef","set","settings","tasks","view","sortBy","folderIds","taskIds","commit","updateUser","addTag","_ref6","taskId","_ref6$color","color","projectCount","userCount","userTagRef","tags","count","merge","projectRef","defineProperty","removeTag","_ref7","_ref7$taskId","shouldCommit","setTagColor","_ref8","tag","getProjectDoc","updateProject","updateProjectName","_ref9","get","snapshot","docs","forEach","projectName","addProject","_ref10","_ref10$color","_ref10$layout","layout","_ref10$isPrivate","isPrivate","_ref10$memberIds","memberIds","_ref10$notes","notes","add","createdAt","listIds","ownerId","memberId","id","updateListName","_ref11","listId","listName","addList","_ref12","_ref12$projectId","_ref12$userId","deleteList","_ref13","listRef","getTaskDoc","addTask","_ref14","_ref14$dueDate","dueDate","_ref14$folderId","folderId","_ref14$assignedTo","assignedTo","isFolderItem","commentIds","subtaskIds","isCompleted","completedAt","folders","updateTask","setTaskDueDate","_ref16","prevDueDate","newDueDate","_ref16$assignedTo","removeAssignee","_ref17","_ref17$dueDate","folderRef","taskRef","addAssignee","_ref18","_ref18$dueDate","deleteTask","_ref19","_ref19$dueDate","_ref19$listId","_ref19$projectId","subtaskId","deleteSubtask","toMillis","commentId","commentRef","moveTaskToList","_ref20","origListId","newListId","updatedTaskIds","newListName","moveTaskToFolder","_ref21","origFolderId","newFolderId","_ref21$type","type","Date","getSubtaskDoc","addSubtask","_ref22","_ref22$memberIds","_ref22$projectId","_ref22$taskId","_ref22$dueDate","updateSubtask","_ref23","asyncToGenerator","regenerator_default","mark","_callee","_args","wrap","_context","prev","next","stop","_x","_ref24","_ref24$taskId","subtaskRef","addComment","_ref25","from","_ref25$to","to","content","_ref25$createdAt","isPinned","likes","createNotification","source","location","event","publishedAt","_ref26","isActive","initializeApp","Input","_ref$className","onFocus","onChange","onInput","placeholder","isRequired","onBlur","autoComplete","innerRef","hideLabel","label","labelClass","onKeyDown","maxLength","minLength","isReadOnly","Fragment","htmlFor","required","readOnly","tabIndex","Button","_ref$type","onClick","onMouseDown","_ref$color","_ref$size","size","_ref$variant","variant","disabled","_ref$iconOnly","iconOnly","objectWithoutProperties","INITIAL_STATE","passwordOne","passwordTwo","SignUpForm","possibleConstructorReturn","getPrototypeOf","call","onSubmit","e","_this$state","state","_this$props","history","authUser","uid","setState","push","ROUTES","preventDefault","target","_this$state2","isInvalid","components_Input_Input","components_Button_Button","compose","withRouter","UserFormPage","SignUpLink","Link","SignUpPage","components_UserFormPage_UserFormPage","SignUp_SignUpForm","SignInForm","enableGoogleLogin","PasswordForgetForm","PasswordForgetLink","PasswordForgetPage","PasswordForget_PasswordForgetForm","SignInPage","SignIn_SignInForm","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","AuthUserContext","loadListsById","listsById","updateList","listData","removeList","_callee2","dispatch","getStore","_getStore","tasksById","_context2","abrupt","_tasksById$taskId","_x3","t0","_x2","fetchListsById","_callee3","_context3","lists","data","sent","_x4","fetchUserLists","_callee4","_context4","_x5","syncProjectLists","_callee6","getState","subscription","_context6","onSnapshot","changes","docChanges","project","projectsById","isLoaded","every","change","setTaskLoadedState","setProjectLoadedState","_callee5","_getState2","changeType","_context5","Promise","all","_x8","_x6","_x7","createList","_callee7","_context7","_x9","loadProjectsById","setTempProjectSettings","key","loadProject","projectData","tempSettings","removeProject","reorderLists","updateProjectTags","syncProject","syncUserProjects","projects","_getState","subtasks","fetchProjectLists","projectLists","loadTasksById","taskData","removeTask","removeTaskTag","userTags","projectTags","isUserTag","_ref7$listId","_getStore$tasksById$t","syncProjectTasks","isInitialLoad","comments","syncUserProjectTasks","assignedTasks","includes","loadAssignedTasks","_getState3","_ref15","isAssignedToUser","isMarkedAsAssigned","addAssignedTask","removeAssignedTask","_x10","syncUserMiscTasks","_callee8","_context8","keys","_getState4","_x13","_x11","_x12","syncTaggedTasks","_callee10","_context10","_callee9","_getState5","_context9","_x16","_x14","_x15","loadUserData","loadUsersById","usersById","userData","removeUser","fetchUsersById","users","syncUsersById","fetchUserData","setCurrentUser","setTempTaskSettings","loadFolders","addFolder","folderData","updateFolder","removeFolder","reorderFolders","loadNotifications","notifications","addNotification","notificationId","notificationData","updateNotification","removeNotification","loadUserTags","createTag","tagId","tagData","updateTag","deleteTag","deleteFolder","loadTasksDueSoon","tasksDueSoon","addTaskDueSoon","removeTaskDueSoon","updateTaskDueSoon","syncTasksDueWithinDays","days","startingDate","setHours","endingDate","timeEnd","setDate","getDate","orderBy","syncFolders","foldersById","exists","syncUserTags","syncUserTasks","_callee12","_context12","_callee11","_context11","_ref27","_ref28","syncCurrentUserData","_ref29","_callee13","_context13","_x17","syncNotifications","_ref30","_callee16","_context16","_ref31","_callee15","notificationsById","_context15","_ref32","_callee14","_ref33","_ref34","_context14","_x21","_x20","_x18","_x19","MONTHS","long","short","daysTotal","WEEK_DAYS","narrow","getMonthDays","monthIndex","year","isLeapYear","getPrevMonth","month","getNextMonth","getMonthDates","monthDays","monthFirstDay","getDay","getMonthFirstDay","_getPrevMonth","prevMonth","prevMonthYear","prevMonthDays","daysFromPrevMonth","daysFromNextMonth","prevMonthDates","map","n","i","day","thisMonthDates","nextMonthDates","isDate","date","prototype","toString","getSimpleDate","dateObj","getMonth","getFullYear","isSimpleDate","isSameDate","base","dateDay","dateMonth","dateYear","baseDay","baseMonth","baseYear","padZero","padStart","toSimpleDateString","simpleDate","toSimpleDateObj","dateString","dateArr","split","isSDSFormat","test","isPriorDate","toDateString","options","useRelative","format","weekday","isToday","today","isYesterday","isTomorrow","num","timeStart","isWithinDays","isThisYear","slice","join","trim","toTimeString","_ref$format","_ref$hour","hour12","TypeError","hours","getHours","minutes","getMinutes","seconds","getSeconds","timeString","unit","digits","h","getCurrentUser","getCurrentUserId","getFolders","getNotifications","getNotificationsArray","getMillis","obj","now","sort","b","getTaskSettings","getTempTaskSettings","getAssignedTasks","getFolderIds","getSortedFilteredTaskGroups","_tempSettings$tasks","projectTasks","reduce","tasksByProject","_folders$projectId","filter","userPermissions","enableNameChange","enableTaskAdd","enableDragNDrop","miscFolder","noProject","dueDates","dueTasks","tasksByDueDate","_tasksById2$taskId","isPastDue","toDate","pastDue","unscheduled","noDueDate","restOfDueTasks","sortedDueDates","getFolder","getTasksDueWithinDays","task","getMergedProjectTags","selectedProject","mergedTags","getAllMergedTags","getCurrentUserProjects","getDisplayName","WrappedComponent","displayName","generateKey","Math","random","withAuthentication","WithAuthentication","_Component","inherits","createClass","_componentDidMount","_this2","onAuthStateChanged","unsubscribe","listener","Session_context","Provider","connect","currentUserSelectors","currentUserActions","withAuthorization","condition","WithAuthorization","getUsersById","getUserData","getUserTaskIds","getUsersArray","getMembersArray","action","reducer_toPropertyKey","Icon","width","height","xmlns","xmlnsXlink","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","xlinkHref","featherIcons","ProjectTile","components_Icon_Icon","getProjectsById","getProjectsArray","getProject","getProjectTags","getProjectName","getProjectColor","getProjectLoadedState","getProjectLists","getTempProjectSettings","listCount","projects_reducer_toPropertyKey","selectProject","getSelectedProjectId","ProjectGrid","openProjectComposer","ProjectGrid_ProjectTile","ownProps","projectSelectors","selectProjectAction","withOutsideClick","WithOutsideClick","handleTouch","isTouchEnabled","document","removeEventListener","handleOutsideClick","addEventListener","setRef","component","setInstance","instance","Error","contains","onOutsideClick","stopPropagation","Modal","onModalClose","_this$props2","onModalClick","_this$props2$size","modal","button","Radio","_ref$classes","radio","inputRef","isChecked","rest","checked","ColorPicker","selectedColor","handleColorChange","selectColor","style","colorPicker","display","components_Radio_Radio","ProjectIcon","Avatar","getUserInitials","fullName","charAt","toUpperCase","imgSrc","imgProps","avatar","src","alt","img","backgroundColor","BACKSPACE","ENTER","TAB","ARROW_DOWN","ARROW_UP","MemberSearch","query","selectedMember","selectedIndex","filteredList","matchUser","regExp","RegExp","onReset","newIndex","indexOf","persistSelectedMember","nextIndex","prevIndex","selectMember","onSelectMember","onClose","inputEl","focus","prevProps","_this$props3","assignedMembers","anchor","position","anchorRect","getBoundingClientRect","top","left","wrapper","input","el","list","isAssigned","item","Avatar_Avatar_Avatar","avatarPlaceholder","info","noMatch","Popover","isVisible","PopoverWrapper","onPopoverClose","toggleOpen","prevState","handleClose","matches","align","onWrapperClick","buttonProps","anchorEl","popoverWrapperStyle","offsetTop","offsetLeft","outer","Popover_Popover","inner","popover","MemberAssigner","isMemberSearchActive","toggleMemberSearch","hideMemberSearch","members","memberSearchIsDisabled","memberAssigner","member","Popover_PopoverWrapper","popoverWrapper","components_MemberSearch_MemberSearch","userSelectors","ProjectComposer","reset","privacy","isColorPickerActive","toggleColorPicker","hideColorPicker","onColorPickerOutsideClick","handleMemberAssignment","components_Modal_Modal","components_ProjectIcon_ProjectIcon","components_ColorPicker_ColorPicker","option","components_MemberAssigner_MemberAssigner","LIST","TASK","FOLDER","ListComposer","clear","toggle","blur","projectsArray","Toolbar","Menu","menuRef","MenuItem","TaskSettings","onToggle","onSave","filters","sortRule","components_Menu_Menu","menu","Menu_MenuItem","filterOption","isDropdownVisible","hideDropdown","isDropdownActive","find","toggleDropdown","sortOption","Project","isListComposerActive","isTaskSettingsMenuVisible","isSortRuleDropdownVisible","toggleListComposer","setInputRef","listComposerInput","onNameChange","onNameBlur","prevName","activateListComposer","saveProjectSettings","_firebase$updateDoc","tempProjectSettings","closeTaskSettingsMenu","_e$target","hideSortRuleDropdown","toggleTaskSettingsMenu","toggleSortRuleDropdown","components_Toolbar_Toolbar","components_TaskSettings_TaskSettings","react_beautiful_dnd_esm","droppableId","droppableTypes","direction","provided","droppableProps","components_ListComposer_ListComposer","projectActions","selectTask","getSelectedTaskId","selectedTask","getSelectedTask","getListsById","getList","getListName","getSelectedProjectLists","lists_reducer_toPropertyKey","getTasksById","getTasksArray","getTasksMatchingQuery","some","getTask","getListTasks","getFolderTasks","getSimpleTasks","getTaskTags","taskTags","taskTag","getTaskLoadedState","getTaggedTasks","tasks_reducer_toPropertyKey","loadSubtasksById","subtasksById","subtaskData","removeSubtask","syncTaskSubtasks","fetchUserSubtasks","syncProjectSubtasks","getSubtasksById","getSubtasksArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","subtask","err","return","getSimpleSubtasks","_subtasksById$subtask","getActiveSubtasks","getCompletedSubtasks","subtasks_reducer_toPropertyKey","TaskComposer","resetForm","debounce","delay","fn","timerId","_len2","args","_key2","clearTimeout","setTimeout","Textarea","autoHeightResize","isAutoHeightResizeEnabled","minHeight","scrollHeight","handleResize","window","onDragStart","onMouseUp","onMouseMove","CardComposer","Textarea_Textarea_Textarea","updateProjectsById","Tag","onDelete","CardDetail","_ref$icon","icon","Card","handleCardClick","onCardClick","nextProps","taskIndex","completedSubtasks","taskMembers","dueDateStr","isDueToday","isDueTmrw","draggableId","index","draggableProps","dragHandleProps","headerEl","components_Tag_Tag","Card_CardDetail","taskSelectors","subtaskSelectors","Checkbox","Badge","ProjectBadge","badge","Task","isFocused","prevPropsName","newName","toggleCompleted","handleTaskClick","_this$props4","onTaskClick","_this$props5","_this$props6","selectedProjectId","components_Checkbox_Checkbox","components_Badge_Badge","memberName","components_ProjectBadge_ProjectBadge","DraggableTask","components_Task_Task","Tasks","scrollToBottom","listEnd","scrollIntoView","behavior","applyViewFilter","viewFilter","applySortRule","applyTaskSettings","dropType","isBoardLayout","components_Card_Card","Task_DraggableTask","isDraggingOver","float","List","handleListDelete","toggleMoreActionsMenu","isMoreActionsMenuVisible","closeMoreActionsMenu","isFetchingTasks","isRestricted","isBoardView","href","Tasks_Tasks","components_CardComposer_CardComposer","components_TaskComposer_TaskComposer","listActions","TaskEditorSection","TaskEditorMoreActions","onMenuClick","data-action","DragHandle","d","Subtask","setTextareaRef","textarea","portal","body","appendChild","removeChild","usePortal","isDragging","components_DragHandle_DragHandle","ReactDOM","createPortal","Subtasks","isLoading","moveSubtask","destination","updatedSubtaskIds","splice","onDragEnd","components_Subtask_Subtask","subtaskActions","SubtaskComposer","composer","iconWrapper","form","selectedTag","focusedTag","hasExactMatch","matchTag","tagSuggestions","findIndex","persistSelectedTag","assignedTags","handleTagDelete","currentTag","hasTags","colorPickerStyle","currentTagEl","_this$currentTagEl","offsetWidth","offsetHeight","Calendar","isMonthsDropdownActive","isYearsDropdownActive","goToNextMonth","onMonthClick","goToPrevMonth","toggleMonthsDropdown","toggleYearsDropdown","closeYearsDropdown","closeMonthsDropdown","selectMonth","selectYear","onYearClick","selectedDate","onDayClick","dates","years","startingYear","getNextYears","calendar","yearOption","monthOption","weekDay","isSelectedDate","DatePicker","currentMonth","currentYear","resetCalendar","selectDate","newDate","setCurrentMonth","setCurrentYear","updateDateString","currentDueDate","closeDatePicker","clearDueDate","Calendar_Calendar_Calendar","TaskEditorPane","Dropdown","closeDropdown","selectedOption","dropdown","data-label","ProjectListDropdown","isLoadingLists","projectLoadedState","selectedList","Dropdown_Dropdown_Dropdown","getUserIdsFromMentions","getInlinesByType","mention","toJS","getMentionedUsers","DEFAULT_BLOCK","schema","inlines","isVoid","RichTextEditor","Value","fromJSON","initialValue","isMentionsListVisible","isEmpty","isEqual","toJSON","hasChanges","prevValue","hasMark","activeMarks","hasInline","inline","hasBlock","_this$state$value","blocks","parent","getParent","first","node","renderMark","editor","attributes","renderNode","text","isMentionsEnabled","endOffset","selection","end","offset","lastChar","endText","ctrlKey","metaKey","toggleMark","firstText","getFirstText","nextText","getNextText","deleteBackward","toggleMentionsList","focusBlock","object","moveToRangeOfNode","setBlocks","unwrapBlock","normalize","getMention","onClickMark","onClickInline","startOffset","start","selectedText","startText","insertText","moveToEndOfText","moveTo","onClickBlock","assertThisInitialized","isList","isType","block","getClosest","wrapBlock","textBefore","exec","toggleFocus","removeFocus","onUpdate","insertMention","mentions","selectedRange","insertInlineAtRange","nodes","leaves","marks","addOns","container","toolbar","addOn","slate_react_es","CommentComposer","components_RichTextEditor_RichTextEditor","CommentEditor","updateComment","Timestamp","secondsElapsed","tick","absoluteMin","clearInterval","interval","getAbsoluteMinSeconds","_absoluteMin","getDateString","isRelative","dateOnly","timeOptions","dateOptions","absoluteDateString","floor","getTime","setInterval","Comment","isCommentEditorActive","handleLike","currentUserId","likesCount","Timestamp_Timestamp_Timestamp","components_CommentEditor_CommentEditor","loadCommentsById","commentsById","commentData","removeComment","fetchCommentsById","fetchTaskComments","fetchUserComments","syncTaskComments","getCommentsById","getComment","getCommentsArray","comment","getTaskComments","comments_reducer_toPropertyKey","Comments","components_Comment_Comment","commentSelectors","commentActions","NotesEditor","updateNotes","TaskEditorWrapper","handleTaskEditorClose","components_TaskEditor_TaskEditorPane","TaskEditor","isDatePickerActive","viewportWidth","setViewportWidth","innerWidth","taskKey","currentValue","updatedValue","handleMoreActions","dataset","assignMember","isProjectTag","projectTag","userTag","setDueDate","_this$props7","toggleDatePicker","_this$props8","moveToList","_this$props9","_this$props10","hasSubtasks","hasComments","taskDueDate","TaskEditor_TaskEditorWrapper","TaskEditor_TaskEditorMoreActions","TaskEditor_TaskEditorSection","components_ProjectListDropdown_ProjectListDropdown","DatePicker_DatePicker_DatePicker","datePickerEl","components_TagsInput_TagsInput","components_NotesEditor_NotesEditor","components_Subtasks_Subtasks","components_SubtaskComposer_SubtaskComposer","components_Comments_Comments","components_CommentComposer_CommentComposer","listSelectors","taskActions","ProjectContainer","isMovedWithinList","updatedListIds","closeTaskEditor","listeners","func","_this3","selectedTaskId","isTaskEditorOpen","components_Project_Project","components_List_List","components_TaskEditor_TaskEditor","selectTaskAction","DashboardPanel","link","Dashboard_DashboardPanel","Notification","getMessage","Notifications","notification","components_Notification_Notification","Dashboard","toggleProjectComposer","Dashboard_TasksDueSoon","components_Dashboard_Notifications","components_ProjectGrid_ProjectGrid","ExpansionPanelHeader","role","onDragOver","ExpansionPanelContent","ExpansionPanel","isExpanded","toggleContent","header","propsIsExpanded","panel","aria-expanded","ExpansionPanel_ExpansionPanelHeader","ExpansionPanel_ExpansionPanelContent","Folder","toggleFolder","tempTaskSettings","isDragDisabled","ExpansionPanel_ExpansionPanel","UserTasks","origIndex","isMovedWithinFolder","completedTaskIds","activeTaskIds","updatedFolderIds","saveTaskSettings","_tempSettings$tasks2","taskGroups","_tempSettings$tasks3","taskGroup","components_Folder_Folder","_ref2$view","_ref2$sortBy","UserProfile","SearchBar","SearchSuggestions","items","selectedItem","category","renderMatch","isSelected","data-id","data-project-id","Highlight","fontWeight","SearchTypeahead","isSearchBarExpanded","persistSelectedItem","matchItem","handleSubmit","onClickProject","onClickTask","_e$target$dataset","onClickTag","handleClick","toggleSearchBar","toggleSuggestions","_this$state3","suggestions","highlightMatch","Search_Highlight","suggestionsRef","_this$state4","SearchBar_SearchBar","Search_SearchSuggestions","TagSearchResults","taggedTasks","SearchResults","PasswordChangeForm","PasswordChange_PasswordChangeForm","getParams","string","params","pair","_pair$split","_pair$split2","decodeURIComponent","HomePage","isProjectComposerOpen","components_ProjectComposer_ProjectComposer","Switch","Route","exact","render","components_Dashboard_Dashboard","Project_ProjectContainer","match","components_UserTasks_UserTasks","pages_UserProfile_UserProfile","search","components_Search_SearchResults","q","Search_TagSearchResults","AccountPage","userActions","AdminPage","loading","Logo","Navbar","isMobileNavVisible","toggleMobileNavVisibility","minWidth","navLinksEl","isMobileView","navbar","navEl","components_Logo_Logo","links","SidebarIcon","NavLinksNonAuth","NavLink","NavLinksAuth","Sidebar_SidebarIcon","components_Search_SearchTypeahead","components_SignOutButton_SignOutButton","Header","isNavExpanded","toggleNav","components_Nav_Sidebar","NavLinks_NavLinksAuth","components_Topbar_Topbar","Navbar_Navbar","NavLinks_NavLinksNonAuth","Header_Header_Header","Boolean","hostname","combineReducers","_state$tags","restOfTags","_toPropertyKey","_state$folders","restOfFolders","_state$notifications","restOfNotifications","currentAssignedTasks","_state$tasksDueSoon","restOfTasks","createBrowserHistory","basename","store","createStore","reducers","applyMiddleware","thunk","es","context","Router","pages_App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4fceae0c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/feather-sprite.453b829f.svg\";","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const BASE = '/0/';\nexport const GLOBAL_SEARCH = '/0/search';\nexport const TASK_SEARCH = '/0/tasks';\nexport const ADMIN = '/admin';\nexport const HOME = '/0/home/:id';\nexport const ACCOUNT = '/0/:id/account';\nexport const PROJECT = '/0/projects/:id';\nexport const USER_PROJECTS = '/0/:id/projects';\nexport const USER_TASKS = '/0/:id/tasks';\nexport const USER_PROFILE = '/0/:id/profile';\n","import React from 'react';\nimport './Main.scss';\n\nconst Main = ({ classes, children, title }) => (\n  <main className={`main ${classes.main || ''}`}>\n    <h1 className={`main__title ${classes.title || ''}`}>{title}</h1>\n    {children}\n  </main>\n);\n\nMain.defaultProps = {\n  classes: {\n    main: '',\n    title: ''\n  }\n};\n\nexport default Main;\n","import React from 'react';\nimport { Main } from '../../components/Main';\n\nconst LandingPage = ({ title, children }) => (\n  <Main title=\"Workflow\" classes={{ main: 'landing' }}>\n  </Main>\n);\n\nexport default LandingPage;\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n    this.auth = app.auth();\n    this.db = app.firestore();\n  }\n\n  // Auth API\n\n  get currentUser() {\n    return this.auth.currentUser;\n  }\n\n  signInWithGoogle = () => {\n    const provider = new app.auth.GoogleAuthProvider();\n    provider.addScope('https://www.googleapis.com/auth/contacts.readonly');\n    this.auth\n      .signInWithPopup(provider)\n      .then(result => {\n        if (result.credential) {\n          const token = result.credential.accessToken;\n          console.log(token);\n          const { user } = result;\n        }\n      })\n      .catch(error => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        const email = error.email;\n        const credential = error.credential;\n\n        if (errorCode === 'auth/account-exists-with-different-credential') {\n          alert(\n            'You have already signed up with a different auth provider for that email.'\n          );\n        } else {\n          console.error(error);\n        }\n      });\n  };\n\n  signInWithGithub = () => {\n    const provider = new app.auth.GithubAuthProvider();\n    this.auth.signInWithRedirect(provider);\n  };\n\n  createUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  signInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  signOut = () => this.auth.signOut();\n\n  passwordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  passwordUpdate = newPassword =>\n    this.auth.currentUser.updatePassword(newPassword);\n\n  // Utility API\n\n  getTimestamp = () => app.firestore.FieldValue.serverTimestamp();\n\n  addToArray = value => app.firestore.FieldValue.arrayUnion(value);\n\n  removeFromArray = value => app.firestore.FieldValue.arrayRemove(value);\n\n  deleteField = () => app.firestore.FieldValue.delete();\n\n  getDocRef = (collection, doc, subcollection = null, subdoc = null) => {\n    const docRef = this.db.doc(`${collection}/${doc}`);\n    return subcollection && subdoc\n      ? docRef.collection(subcollection).doc(subdoc)\n      : docRef;\n  };\n\n  createBatch = () => this.db.batch();\n\n  queryCollection = (path, [field, comparisonOperator, value]) => {\n    return this.db.collection(path).where(field, comparisonOperator, value);\n  };\n\n  updateDoc = ([collection, doc, subcollection, subdoc], newValue = {}) =>\n    this.getDocRef(collection, doc, subcollection, subdoc).update({\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  updateBatch = (batch, ref, newValue = {}) => {\n    const doc = Array.isArray(ref) ? this.getDocRef(...ref) : ref;\n    return batch.update(doc, {\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  // User API\n\n  getUserDoc = userId => this.db.collection('users').doc(userId);\n\n  addUser = ({\n    userId,\n    name,\n    username,\n    email,\n    projectIds = [],\n    photoURL = null\n  }) => {\n    const batch = this.db.batch();\n    const userRef = this.getDocRef('users', userId);\n    const newFolderRef = this.getDocRef('users', userId, 'folders', '0');\n    const todayFolderRef = this.getDocRef('users', userId, 'folders', '1');\n    const upcomingFolderRef = this.getDocRef('users', userId, 'folders', '2');\n    const laterFolderRef = this.getDocRef('users', userId, 'folders', '3');\n    const miscFolderRef = this.getDocRef('users', userId, 'folders', '4');\n    const unscheduledFolderRef = this.getDocRef(\n      'users',\n      userId,\n      'folders',\n      '5'\n    );\n\n    batch.set(userRef, {\n      userId,\n      name,\n      username,\n      email,\n      projectIds,\n      photoURL,\n      settings: {\n        tasks: {\n          view: 'all',\n          sortBy: 'folder'\n        }\n      },\n      folderIds: [0, 1, 2, 3]\n    });\n\n    batch.set(newFolderRef, {\n      name: 'New Tasks',\n      taskIds: []\n    });\n\n    batch.set(todayFolderRef, {\n      name: 'Today',\n      taskIds: []\n    });\n\n    batch.set(upcomingFolderRef, {\n      name: 'Upcoming',\n      taskIds: []\n    });\n\n    batch.set(laterFolderRef, {\n      name: 'Later',\n      taskIds: []\n    });\n\n    batch.set(miscFolderRef, {\n      name: 'No Project',\n      taskIds: []\n    });\n\n    batch.set(unscheduledFolderRef, {\n      name: 'No Due Date',\n      taskIds: []\n    });\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log('User added');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  updateUser = (userId, newValue = {}) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .update(newValue);\n\n  // Tags API\n\n  addTag = ({\n    taskId,\n    userId,\n    name,\n    projectId,\n    color = 'default',\n    projectCount,\n    userCount\n  }) => {\n    const batch = this.db.batch();\n    const userTagRef = this.getDocRef('users', userId, 'tags', name);\n\n    this.updateBatch(batch, ['tasks', taskId], {\n      tags: this.addToArray(name)\n    });\n\n    batch.set(\n      userTagRef,\n      {\n        name,\n        color,\n        count: userCount\n      },\n      { merge: true }\n    );\n\n    if (projectId) {\n      const projectRef = this.getDocRef('projects', projectId);\n\n      batch.set(\n        projectRef,\n        {\n          tags: {\n            [name]: {\n              name,\n              color,\n              count: projectCount\n            }\n          },\n          lastUpdatedAt: this.getTimestamp()\n        },\n        { merge: true }\n      );\n    }\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log('tag added');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  removeTag = ({ taskId = null, name, userId, userCount, projectId, projectCount },\n    batch = this.createBatch(),\n    shouldCommit = true\n  ) => {\n    if (taskId) {\n      this.updateBatch(batch, ['tasks', taskId], {\n        tags: this.removeFromArray(name)\n      });\n    }\n\n    if (userCount !== null) {\n      const userTagRef = this.getDocRef('users', userId, 'tags', name);\n      if (userCount > 0) {\n        this.updateBatch(batch, userTagRef, {\n          count: userCount\n        });\n      } else {\n        batch.delete(userTagRef);\n      }\n    }\n\n    if (projectId) {\n      const projectRef = this.getDocRef('projects', projectId);\n      if (projectCount < 1) {\n        this.updateBatch(batch, projectRef, {\n          [`tags.${name}`]: this.deleteField()\n        });\n      } else {\n        this.updateBatch(batch, projectRef, {\n          [`tags.${name}.count`]: projectCount\n        });\n      }\n    }\n    if (shouldCommit) {\n      return batch\n        .commit()\n        .then(() => {\n          console.log('Tag deleted');\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    }\n  };\n\n  setTagColor = ({ userId, projectId, tag, color }) => {\n    const batch = this.db.batch();\n    const userTagRef = this.getDocRef('users', userId, 'tags', tag);\n    if (projectId) {\n      const projectRef = this.getDocRef('projects', projectId);\n      batch.set(\n        projectRef,\n        {\n          tags: {\n            [tag]: {\n              color\n            }\n          },\n          lastUpdatedAt: this.getTimestamp()\n        },\n        { merge: true }\n      );\n    }\n\n    this.updateBatch(batch, userTagRef, {\n      color\n    });\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log('tag color updated');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  // Project API\n\n  getProjectDoc = projectId => this.db.collection('projects').doc(projectId);\n\n  updateProject = (projectId, newValue = {}) =>\n    this.getProjectDoc(projectId).update({\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  updateProjectName = ({ projectId, name }) => {\n    const batch = this.createBatch();\n\n    this.updateBatch(batch, ['projects', projectId], {\n      name\n    });\n\n    // Update tasks assigned to list\n    this.db\n      .collection('tasks')\n      .where('projectId', '==', projectId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.update(doc.ref, {\n            projectName: name\n          });\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('project name updated');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  addProject = ({\n    userId,\n    name,\n    color = 'default',\n    layout = 'board',\n    isPrivate = false,\n    memberIds = [],\n    notes = ''\n  }) => {\n    this.db\n      .collection('projects')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastUpdatedAt: null,\n        listIds: [],\n        ownerId: userId,\n        settings: {\n          isPrivate,\n          tasks: {\n            view: 'all',\n            sortBy: 'none'\n          }\n        },\n        memberIds,\n        notes,\n        color,\n        layout,\n        name\n      })\n      .then(ref => {\n        const batch = this.createBatch();\n\n        memberIds.forEach(memberId => {\n          this.updateBatch(batch, ['users', memberId], {\n            projectIds: this.addToArray(ref.id)\n          });\n          batch.set(this.getDocRef('users', memberId, 'folders', ref.id), {\n            name,\n            taskIds: []\n          });\n        });\n\n        return batch\n          .commit()\n          .then(() => {\n            console.log(`Created Project: ${name}`);\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  // List API\n\n  updateListName = ({ listId, name }) => {\n    const batch = this.createBatch();\n\n    this.updateBatch(batch, ['lists', listId], {\n      name\n    });\n\n    // Update tasks assigned to list\n    this.db\n      .collection('tasks')\n      .where('listId', '==', listId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.update(doc.ref, {\n            listName: name\n          });\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('List name updated.');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  addList = ({ name, projectId = null, userId = null }) => {\n    this.db\n      .collection('lists')\n      .add({\n        ownerId: userId,\n        createdAt: this.getTimestamp(),\n        lastUpdatedAt: null,\n        taskIds: [],\n        projectId,\n        name\n      })\n      .then(ref => {\n        if (projectId) {\n          this.updateProject(projectId, {\n            listIds: this.addToArray(ref.id)\n          });\n        }\n        if (userId) {\n          this.updateUser(userId, {\n            listIds: this.addToArray(ref.id)\n          });\n        }\n      });\n  };\n\n  deleteList = ({ listId, projectId }) => {\n    const batch = this.createBatch();\n    const listRef = this.getDocRef('lists', listId);\n\n    // Delete list\n    batch.delete(listRef);\n\n    // Remove list id from project\n    this.updateBatch(batch, ['projects', projectId], {\n      listIds: this.removeFromArray(listId)\n    });\n\n    // Delete tasks assigned to list\n    this.db\n      .collection('tasks')\n      .where('listId', '==', listId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('list deleted');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  // Task API\n\n  getTaskDoc = taskId => this.db.collection('tasks').doc(taskId);\n\n  addTask = ({\n    name,\n    projectId,\n    projectName,\n    listId,\n    listName,\n    userId,\n    dueDate = null,\n    folderId = null,\n    assignedTo = []\n  }) => {\n    const isFolderItem = !!folderId;\n\n    this.db\n      .collection('tasks')\n      .add({\n        ownerId: userId,\n        createdAt: this.getTimestamp(),\n        lastUpdatedAt: null,\n        commentIds: [],\n        subtaskIds: [],\n        isCompleted: false,\n        completedAt: null,\n        notes: null,\n        assignedTo: isFolderItem ? [userId] : assignedTo,\n        folders: isFolderItem\n          ? {\n              [userId]: '0'\n            }\n          : {},\n        dueDate,\n        listId,\n        listName,\n        projectId,\n        projectName,\n        name\n      })\n      .then(ref => {\n        if (isFolderItem) {\n          const batch = this.createBatch();\n\n          if (!projectId && folderId !== '4') {\n            this.updateBatch(batch, ['users', userId, 'folders', '4'], {\n              taskIds: this.addToArray(ref.id)\n            });\n          }\n\n          if (!dueDate && folderId !== '5') {\n            this.updateBatch(batch, ['users', userId, 'folders', '5'], {\n              taskIds: this.addToArray(ref.id)\n            });\n          }\n\n          if (dueDate) {\n            console.log(`${+dueDate}`);\n            batch.set(\n              this.getDocRef('users', userId, 'folders', `${+dueDate}`),\n              {\n                taskIds: this.addToArray(ref.id)\n              },\n              { merge: true }\n            );\n          }\n\n          if (folderId !== '0') {\n            this.updateBatch(batch, ['users', userId, 'folders', '0'], {\n              taskIds: this.addToArray(ref.id)\n            });\n          }\n\n          this.updateBatch(batch, ['users', userId, 'folders', folderId], {\n            taskIds: this.addToArray(ref.id)\n          });\n\n          return batch\n            .commit()\n            .then(() => {\n              console.log('Added task');\n            })\n            .catch(error => {\n              console.error(error);\n            });\n        } else {\n          this.updateDoc(['lists', listId], {\n            taskIds: this.addToArray(ref.id)\n          });\n        }\n      });\n  };\n\n  updateTask = (taskId, newValue = {}) => {\n    console.log('task updated');\n    this.getTaskDoc(taskId).update({\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  setTaskDueDate = ({ taskId, prevDueDate, newDueDate, assignedTo = [] }) => {\n    const batch = this.createBatch();\n\n    this.updateBatch(batch, ['tasks', taskId], {\n      dueDate: newDueDate\n    });\n\n    if (assignedTo.length > 0) {\n      assignedTo.forEach(userId => {\n        if (prevDueDate === null) {\n          this.updateBatch(batch, ['users', userId, 'folders', '5'], {\n            taskIds: this.removeFromArray(taskId)\n          });\n        } else {\n          batch.set(\n            this.getDocRef('users', userId, 'folders', `${+prevDueDate}`),\n            {\n              taskIds: this.removeFromArray(taskId)\n            },\n            { merge: true }\n          );\n        }\n\n        if (newDueDate === null) {\n          this.updateBatch(batch, ['users', userId, 'folders', '5'], {\n            taskIds: this.addToArray(taskId)\n          });\n        } else {\n          batch.set(\n            this.getDocRef('users', userId, 'folders', `${+newDueDate}`),\n            {\n              taskIds: this.addToArray(taskId)\n            },\n            { merge: true }\n          );\n        }\n      });\n    }\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log('Set task due date');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  removeAssignee = (\n    { taskId, projectId, userId, folderId, dueDate = null },\n    batch = this.createBatch(),\n    shouldCommit = true\n  ) => {\n    const folderRef = this.getDocRef('users', userId, 'folders', folderId);\n    this.updateBatch(batch, folderRef, {\n      taskIds: this.removeFromArray(taskId)\n    });\n\n    if (!dueDate) {\n      this.updateBatch(batch, ['users', userId, 'folders', '5'], {\n        taskIds: this.removeFromArray(taskId)\n      });\n    } else {\n      this.updateBatch(batch, ['users', userId, 'folders', `${+dueDate}`], {\n        taskIds: this.removeFromArray(taskId)\n      });\n    }\n\n    if (taskId && projectId) {\n      this.updateBatch(batch, ['users', userId, 'folders', projectId], {\n        taskIds: this.removeFromArray(taskId)\n      });\n    }\n\n    if (shouldCommit) {\n      const taskRef = this.getDocRef('tasks', taskId);\n      this.updateBatch(batch, taskRef, {\n        assignedTo: this.removeFromArray(userId),\n        [`folders.${userId}`]: this.deleteField()\n      });\n\n      return batch\n        .commit()\n        .then(() => {\n          console.log('Removed member from task');\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    }\n  };\n\n  addAssignee = ({\n    taskId,\n    projectId,\n    projectName,\n    userId,\n    dueDate = null\n  }) => {\n    const batch = this.db.batch();\n\n    this.updateBatch(batch, ['projects', projectId], {\n      memberIds: this.addToArray(userId)\n    });\n\n    batch.set(\n      this.getDocRef('users', userId, 'folders', projectId),\n      {\n        name: projectName,\n        taskIds: this.addToArray(taskId)\n      },\n      { merge: true }\n    );\n\n    if (taskId) {\n      this.updateBatch(batch, ['users', userId, 'folders', '0'], {\n        taskIds: this.addToArray(taskId)\n      });\n      this.updateBatch(batch, ['tasks', taskId], {\n        assignedTo: this.addToArray(userId),\n        [`folders.${userId}`]: '0'\n      });\n\n      if (!dueDate) {\n        this.updateBatch(batch, ['users', userId, 'folders', '5'], {\n          taskIds: this.addToArray(taskId)\n        });\n      } else {\n        batch.set(\n          this.getDocRef('users', userId, 'folders', `${+dueDate}`),\n          {\n            taskIds: this.addToArray(taskId)\n          },\n          { merge: true }\n        );\n      }\n    }\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log('Assigned task to member');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  deleteTask = (\n    {\n      taskId,\n      assignedTo,\n      folders,\n      subtaskIds,\n      commentIds,\n      dueDate = null,\n      listId = null,\n      projectId = null\n    },\n    batch = this.createBatch(),\n    shouldCommit = true\n  ) => {\n    const taskRef = this.getDocRef('tasks', taskId);\n    batch.delete(taskRef);\n\n    if (listId) {\n      const listRef = this.getDocRef('lists', listId);\n      this.updateBatch(batch, listRef, {\n        taskIds: this.removeFromArray(taskId)\n      });\n    }\n\n    // Delete subtasks\n    if (subtaskIds.length > 0) {\n      subtaskIds.forEach(subtaskId => {\n        this.deleteSubtask({ subtaskId }, batch, false);\n      });\n      console.log('1. Subtasks deleted.');\n    }\n\n    // Delete task assignments\n    if (assignedTo.length > 0) {\n      assignedTo.forEach(userId => {\n        const folderId = folders[userId];\n        const folderRef = this.getDocRef('users', userId, 'folders', folderId);\n        this.updateBatch(batch, folderRef, {\n          taskIds: this.removeFromArray(taskId)\n        });\n\n        if (!projectId) {\n          this.updateBatch(batch, ['users', userId, 'folders', '4'], {\n            taskIds: this.removeFromArray(taskId)\n          });\n        } else {\n          this.updateBatch(batch, ['users', userId, 'folders', projectId], {\n            taskIds: this.removeFromArray(taskId)\n          });\n        }\n\n        if (!dueDate) {\n          this.updateBatch(batch, ['users', userId, 'folders', '5'], {\n            taskIds: this.removeFromArray(taskId)\n          });\n        } else {\n          this.updateBatch(\n            batch,\n            ['users', userId, 'folders', `${dueDate.toMillis()}`],\n            {\n              taskIds: this.removeFromArray(taskId)\n            }\n          );\n        }\n      });\n      console.log('2. Removed task assignments.');\n    }\n\n    // Delete comments\n    if (commentIds.length > 0) {\n      commentIds.forEach(commentId => {\n        const commentRef = this.getDocRef('comments', commentId);\n        batch.delete(commentRef);\n      });\n      console.log('3. Task comments deleted.');\n    }\n\n    if (shouldCommit) {\n      return batch\n        .commit()\n        .then(() => {\n          console.log('task deleted');\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    }\n  };\n\n  moveTaskToList = ({\n    taskId,\n    origListId,\n    newListId,\n    updatedTaskIds,\n    newListName\n  }) => {\n    const batch = this.createBatch();\n    this.updateBatch(batch, ['tasks', taskId], {\n      listId: newListId,\n      listName: newListName\n    });\n\n    this.updateBatch(batch, ['lists', origListId], {\n      taskIds: this.removeFromArray(taskId)\n    });\n\n    this.updateBatch(batch, ['lists', newListId], {\n      taskIds: updatedTaskIds\n    });\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log(`Moved task to ${newListName}`);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  moveTaskToFolder = ({\n    userId,\n    taskId,\n    origFolderId,\n    newFolderId,\n    updatedTaskIds,\n    type = 'default'\n  }) => {\n    const batch = this.createBatch();\n\n    switch (type) {\n      case 'dueDate': {\n        this.updateBatch(batch, ['tasks', taskId], {\n          dueDate: new Date(+newFolderId)\n        });\n        break;\n      }\n      default: {\n        this.updateBatch(batch, ['tasks', taskId], {\n          [`folders.${userId}`]: newFolderId\n        });\n      }\n    }\n\n    this.updateBatch(batch, ['users', userId, 'folders', origFolderId], {\n      taskIds: this.removeFromArray(taskId)\n    });\n    this.updateBatch(batch, ['users', userId, 'folders', newFolderId], {\n      taskIds: updatedTaskIds\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('Task moved to new folder');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  // Subtask API\n\n  getSubtaskDoc = subtaskId => this.db.collection('subtasks').doc(subtaskId);\n\n  addSubtask = ({\n    userId,\n    name,\n    memberIds = [],\n    projectId = null,\n    taskId = null,\n    dueDate = null\n  }) => {\n    this.db\n      .collection('subtasks')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastUpdatedAt: null,\n        isCompleted: false,\n        ownerId: userId,\n        assignedTo: [userId, ...memberIds],\n        completedAt: null,\n        dueDate,\n        projectId,\n        taskId,\n        name\n      })\n      .then(ref => {\n        if (taskId === null) return;\n        this.updateDoc(['tasks', taskId], {\n          subtaskIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  updateSubtask = async (subtaskId, newValue = {}) => {\n    await this.getSubtaskDoc(subtaskId).update({\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  deleteSubtask = (\n    { subtaskId, taskId = null },\n    batch = this.createBatch(),\n    shouldCommit = true\n  ) => {\n    const subtaskRef = this.getDocRef('subtasks', subtaskId);\n    batch.delete(subtaskRef);\n\n    if (taskId) {\n      this.updateBatch(batch, ['tasks', taskId], {\n        subtaskIds: this.removeFromArray(subtaskId)\n      });\n    }\n\n    if (shouldCommit) {\n      return batch\n        .commit()\n        .then(() => {\n          console.log('Subtask deleted.');\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    }\n  };\n\n  // Comment API\n\n  addComment = ({ from, to = [], projectId, taskId, content, createdAt = this.getTimestamp() }) => {\n    this.db\n      .collection('comments')\n      .add({\n        createdAt,\n        lastUpdatedAt: null,\n        isPinned: false,\n        likes: {},\n        from,\n        to,\n        projectId,\n        taskId,\n        content\n      })\n      .then(ref => {\n        this.updateDoc(['tasks', taskId], {\n          commentIds: this.addToArray(ref.id)\n        });\n\n        if (to.length > 0) {\n          to.forEach(user => {\n            this.createNotification({\n              userId: user.userId,\n              source: {\n                user: from,\n                type: 'comment',\n                id: ref.id\n              },\n              location: {\n                type: 'task',\n                taskId,\n                projectId\n              },\n              event: {\n                type: 'mention',\n                publishedAt: createdAt\n              }\n            });\n          });\n        }\n      });\n  };\n\n  /**\n   * @param {String} userId - user id of recipient\n   * @param {Object} source - info about where and by whom the event was triggered { userId, taskId, commentId, projectId }\n   * @param {Object} event - info about event itself {type: mention, update, or reminder, publishedAt, data }\n   */\n\n  createNotification = ({ userId, source, location, event }) => {\n    this.getDocRef('users', userId)\n    .collection('notifications')\n    .add({\n      source,\n      location,\n      event,\n      createdAt: this.getTimestamp(),\n      isActive: true\n    });\n  };\n}\n\nexport default Firebase;\n","import React from 'react';\nimport './Input.scss';\n\nconst Input = ({\n  className = '',\n  name,\n  type,\n  value,\n  onFocus,\n  onChange,\n  onInput,\n  placeholder,\n  isRequired,\n  onBlur,\n  autoComplete,\n  innerRef,\n  hideLabel,\n  label,\n  labelClass,\n  onKeyDown,\n  maxLength,\n  minLength,\n  isReadOnly\n}) => {\n  return (\n    <>\n      {!hideLabel && (\n        <label htmlFor={name} className={`input__label ${labelClass}`}>\n          {label}\n        </label>\n      )}\n      <input\n        className={`input ${className}`}\n        id={name}\n        name={name}\n        type={type}\n        value={value}\n        onFocus={onFocus}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={isRequired}\n        onBlur={onBlur}\n        autoComplete={autoComplete}\n        ref={innerRef}\n        onInput={onInput}\n        onKeyDown={onKeyDown}\n        maxLength={maxLength}\n        minLength={minLength}\n        readOnly={isReadOnly}\n        tabIndex={isReadOnly ? -1 : 0}\n      />\n    </>\n  );\n};\n\nInput.defaultProps = {\n  className: '',\n  innerRef: null\n};\n\nexport default Input;\n","import React from 'react';\nimport './Button.scss';\n\nconst Button = ({\n  children,\n  type = 'button',\n  onClick,\n  onMouseDown,\n  className = '',\n  color = 'neutral',\n  size = 'md',\n  variant = 'text',\n  disabled,\n  name,\n  iconOnly = false,\n  value,\n  innerRef,\n  isActive,\n  ...props\n}) => (\n  // eslint-disable-next-line react/button-has-type\n  <button\n    className={`${className} ${variant}--${color} ${!iconOnly ? size : ''} ${\n      iconOnly ? `icon-only icon-only--${size}` : ''\n    } ${isActive ? 'is-active' : ''}`}\n    type={type}\n    onClick={onClick}\n    onMouseDown={onMouseDown}\n    disabled={disabled}\n    name={name}\n    value={value}\n    ref={innerRef}\n    {...props}\n  >\n    {children}\n  </button>\n);\n\nButton.defaultProps = {\n  type: 'button',\n  className: '',\n  color: 'neutral',\n  size: 'md',\n  variant: 'text',\n  iconOnly: false,\n  ref: null,\n  isActive: false,\n  value: '',\n  name: '',\n  onClick: () => null,\n  onMouseDown: () => null\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { withFirebase } from '../../components/Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../../components/Input';\nimport { Button } from '../../components/Button';\n\nconst INITIAL_STATE = {\n  username: '',\n  name: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { username, email, name, passwordOne } = this.state;\n    const { firebase, history } = this.props;\n    firebase\n      .createUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        const userId = authUser.user.uid;\n        const photoURL = authUser.user.photoURL || null;\n        return firebase.addUser({\n          userId,\n          name,\n          username,\n          email,\n          photoURL\n        });\n      })\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const {\n      username,\n      name,\n      email,\n      passwordOne,\n      passwordTwo,\n      error\n    } = this.state;\n    const isInvalid =\n      passwordOne === '' ||\n      passwordTwo === '' ||\n      email === '' ||\n      username === '' ||\n      passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"name\"\n          label=\"Full Name\"\n          value={name}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"username\"\n          label=\"Username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordOne\"\n          label=\"Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          label=\"Confirm Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Create Account\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignUpForm);\n","import React from 'react';\nimport './UserFormPage.scss';\n\nconst UserFormPage = ({ title, children }) => (\n  <main className=\"user-form__container\">\n    <h1 className=\"user-form__title\">{title}</h1>\n    {children}\n  </main>\n);\n\nexport default UserFormPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignUpForm from './SignUpForm';\nimport { UserFormPage } from '../../components/UserFormPage';\nimport * as ROUTES from '../../constants/routes';\nimport './SignUp.scss';\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account?\n    <Link className=\"link--outlined\" to={ROUTES.SIGN_UP}>\n      Sign Up\n    </Link>\n  </p>\n);\n\nconst SignUpPage = () => (\n  <UserFormPage title=\"Create an account\">\n    <SignUpForm />\n  </UserFormPage>\n);\n\nexport default SignUpPage;\nexport { SignUpLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../../components/Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../../components/Input';\nimport { Button } from '../../components/Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email, password } = this.state;\n    this.props.firebase\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  enableGoogleLogin = e => {\n    const { signInWithGoogle } = this.props.firebase;\n    signInWithGoogle();\n    e.preventDefault();\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n    const isInvalid = password === '' || email === '';\n    return (\n      <form className=\"user-form\">\n        {/*\n        <Button\n          type=\"click\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.enableGoogleLogin}\n        >\n          Continue with Google\n        </Button>\n        <Button\n          type=\"click\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.enableGithubLogin}\n        >\n          Continue with Github\n        </Button>\n      */}\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"password\"\n          label=\"Password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Log In\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignInForm);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../../components/Firebase';\nimport { Input } from '../../components/Input';\nimport { Button } from '../../components/Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null\n};\n\nclass PasswordForgetForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .passwordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, error } = this.state;\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"md\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Reset Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordForgetForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PasswordForgetForm from './PasswordForgetForm';\nimport { UserFormPage } from '../../components/UserFormPage';\nimport * as ROUTES from '../../constants/routes';\nimport './PasswordForget.scss';\n\nconst PasswordForgetLink = () => (\n  <p className=\"user-form__info\">\n    <Link to={ROUTES.PASSWORD_FORGET} className=\"link--sm\">\n      Forgot Password?\n    </Link>\n  </p>\n);\n\nconst PasswordForgetPage = () => (\n  <UserFormPage title=\"Forgot your password?\">\n    <PasswordForgetForm />\n  </UserFormPage>\n);\n\nexport default PasswordForgetPage;\nexport { PasswordForgetLink };\n","import React from 'react';\nimport SignInForm from './SignInForm';\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { UserFormPage } from '../../components/UserFormPage';\n\nconst SignInPage = () => (\n  <UserFormPage title=\"Log In\">\n    <SignInForm />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </UserFormPage>\n);\n\nexport default SignInPage;\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n","import { Firebase } from '../components/Firebase';\n\nconst firebase = new Firebase();\nexport default firebase;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\nimport {\n  removeTask,\n  removeTaskTag,\n  setTaskLoadedState\n} from '../tasks/actions';\nimport { setProjectLoadedState } from '../projects/actions';\n\nexport const loadListsById = listsById => {\n  return {\n    type: types.LOAD_LISTS_BY_ID,\n    listsById\n  };\n};\n\nexport const updateList = ({ listId, listData }) => {\n  return {\n    type: types.UPDATE_LIST,\n    listId,\n    listData\n  };\n};\n\nexport const addList = ({ listId, listData }) => {\n  return {\n    type: types.ADD_LIST,\n    listId,\n    listData\n  };\n};\n\nexport const removeList = ({ listId, projectId }) => {\n  return {\n    type: types.REMOVE_LIST,\n    listId,\n    projectId\n  };\n};\n\n// Thunks\n\n// TODO: remove tags\nexport const deleteList = ({ listId, projectId }) => {\n  return async (dispatch, getStore) => {\n    try {\n      const batch = firebase.createBatch();\n      const listRef = firebase.getDocRef('lists', listId);\n      const projectRef = firebase.getDocRef('projects', projectId);\n      const { taskIds } = getStore().listsById[listId];\n      const { tasksById } = getStore();\n      // Delete list\n      batch.delete(listRef);\n\n      // Remove list id from project\n      firebase.updateBatch(batch, projectRef, {\n        listIds: firebase.removeFromArray(listId)\n      });\n\n      return batch\n        .commit()\n        .then(() => {\n          if (taskIds.length > 0) {\n            taskIds.forEach(async taskId => {\n              const {\n                assignedTo,\n                folders,\n                subtaskIds,\n                commentIds,\n                tags,\n                projectId,\n                dueDate\n              } = tasksById[taskId];\n              await firebase.deleteTask({\n                taskId,\n                assignedTo,\n                folders,\n                subtaskIds,\n                commentIds,\n                projectId,\n                dueDate\n              });\n            });\n          }\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n\nexport const fetchListsById = projectId => {\n  return async dispatch => {\n    try {\n      const listsById = await firebase.db\n        .collection('lists')\n        .where('projectId', '==', projectId)\n        .get()\n        .then(snapshot => {\n          const lists = {};\n          snapshot.forEach(doc => {\n            lists[doc.id] = {\n              listId: doc.id,\n              ...doc.data()\n            };\n          });\n          return lists;\n        });\n      dispatch(loadListsById(listsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserLists = userId => {\n  return async dispatch => {\n    try {\n      const listsById = await firebase.db\n        .collection('lists')\n        .where('userId', '==', userId)\n        .get()\n        .then(snapshot => {\n          const lists = {};\n          snapshot.forEach(doc => {\n            lists[doc.id] = {\n              listId: doc.id,\n              ...doc.data()\n            };\n          });\n          return lists;\n        });\n      dispatch(loadListsById(listsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const syncProjectLists = projectId => {\n  return async (dispatch, getState) => {\n    try {\n      const subscription = await firebase\n        .queryCollection('lists', ['projectId', '==', projectId])\n        .onSnapshot(snapshot => {\n          const changes = snapshot.docChanges();\n          const { projectsById } = getState();\n          const project = projectsById[projectId];\n          const isInitialLoad =\n            snapshot.size === changes.length &&\n            !project.isLoaded.lists &&\n            changes.every(change => change.type === 'added');\n          if (isInitialLoad) {\n            const listsById = {};\n\n            if (changes.length > 0) {\n              changes.forEach(change => {\n                const listId = change.doc.id;\n                const listData = change.doc.data();\n                const { taskIds } = listData;\n                listsById[listId] = {\n                  listId,\n                  ...listData\n                };\n                taskIds.forEach(taskId =>\n                  dispatch(setTaskLoadedState(taskId, 'subtasks'))\n                );\n              });\n              dispatch(loadListsById(listsById));\n            }\n            dispatch(setProjectLoadedState(projectId, 'lists'));\n          } else {\n            changes.forEach(async change => {\n              const { listsById } = getState();\n              const [listId, listData, changeType] = await Promise.all([\n                change.doc.id,\n                change.doc.data(),\n                change.type\n              ]);\n              if (changeType === 'added') {\n                if (listId in listsById) return;\n                dispatch(addList({ listId, listData }));\n                console.log(`List added: ${listData.name}`);\n              } else if (changeType === 'removed') {\n                if (!(listId in listsById)) return;\n                dispatch(removeList({ listId, projectId }));\n                console.log(`List deleted: ${listData.name}`);\n              } else {\n                dispatch(updateList({ listId, listData }));\n                console.log(`List updated: ${listData.name}`);\n              }\n            });\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const createList = ({ projectId, name }) => {\n  return async dispatch => {\n    try {\n      firebase.addList({ projectId, name });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","export const LOAD_LISTS_BY_ID = 'LOAD_LISTS_BY_ID';\nexport const FETCH_LISTS_BY_ID = 'FETCH_LISTS_BY_ID';\nexport const DELETE_CARD = 'DELETE_CARD';\nexport const UPDATE_LIST = 'UPDATE_LIST';\nexport const ADD_LIST = 'ADD_LIST';\nexport const DELETE_LIST = 'DELETE_LIST';\nexport const REMOVE_LIST = 'REMOVE_LIST';\n","import * as types from './types';\nimport firebase from '../../store/firebase';\nimport { loadListsById } from '../lists/actions';\n\nexport const loadProjectsById = projectsById => {\n  return {\n    type: types.LOAD_PROJECTS_BY_ID,\n    projectsById\n  };\n};\n\nexport const setTempProjectSettings = ({ projectId, view, sortBy }) => {\n  return {\n    type: types.SET_TEMP_PROJECT_SETTINGS,\n    projectId,\n    view,\n    sortBy\n  };\n};\n\nexport const setProjectLoadedState = (projectId, key) => {\n  return {\n    type: types.SET_PROJECT_LOADED_STATE,\n    projectId,\n    key\n  };\n};\n\nexport const loadProject = (projectId, projectData) => {\n  return {\n    type: types.LOAD_PROJECT,\n    projectId,\n    projectData\n  };\n};\n\nexport const updateProject = ({ projectId, projectData }) => {\n  return {\n    type: types.UPDATE_PROJECT,\n    projectId,\n    projectData\n  };\n};\n\nexport const addProject = ({ projectId, projectData }) => {\n  return {\n    type: types.ADD_PROJECT,\n    projectId,\n    projectData: {\n      tempSettings: {\n        tasks: {\n          ...projectData.settings.tasks\n        }\n      },\n      ...projectData\n    }\n  };\n};\n\nexport const removeProject = projectId => {\n  return {\n    type: types.REMOVE_PROJECT,\n    projectId\n  };\n};\n\nexport const reorderLists = (projectId, listIds) => {\n  return {\n    type: types.REORDER_LISTS,\n    projectId,\n    listIds\n  };\n};\n\nexport const updateProjectTags = (projectId, tags) => {\n  return {\n    type: types.UPDATE_PROJECT_TAGS,\n    projectId,\n    tags\n  };\n};\n\nexport const syncProject = projectId => {\n  return async dispatch => {\n    try {\n      const subscription = await firebase\n        .getDocRef('projects', projectId)\n        .onSnapshot(snapshot => {\n          const projectData = snapshot.data();\n          dispatch(updateProject({ projectId, projectData }));\n        });\n      return subscription;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n\nexport const syncUserProjects = userId => {\n  return async (dispatch, getState) => {\n    try {\n      const subscription = await firebase\n        .queryCollection('projects', ['memberIds', 'array-contains', userId])\n        .onSnapshot(async snapshot => {\n          const changes = snapshot.docChanges();\n          const isInitialLoad =\n            snapshot.size === changes.length &&\n            changes.every(change => change.type === 'added');\n\n          if (isInitialLoad && changes.length > 1) {\n            const projects = {};\n            changes.forEach(change => {\n              const projectId = change.doc.id;\n              const projectData = change.doc.data();\n              projects[projectId] = {\n                projectId,\n                isLoaded: {\n                  subtasks: projectData.listIds.length === 0,\n                  tasks: projectData.listIds.length === 0,\n                  lists: projectData.listIds.length === 0\n                },\n                tempSettings: {\n                  tasks: { ...projectData.settings.tasks }\n                },\n                ...projectData\n              };\n            });\n            dispatch(loadProjectsById(projects));\n          } else {\n            const { projectsById } = getState();\n            changes.forEach(async change => {\n              const [projectId, projectData, changeType] = await Promise.all([\n                change.doc.id,\n                change.doc.data(),\n                change.type\n              ]);\n              if (changeType === 'added') {\n                if (projectId in projectsById) return;\n                dispatch(addProject({ projectId, projectData }));\n                console.log(`Added Project: ${projectData.name}`);\n              } else if (changeType === 'removed') {\n                if (!(projectId in projectsById)) return;\n                dispatch(removeProject(projectId));\n                console.log(`Deleted Project: ${projectData.name}`);\n              } else {\n                dispatch(updateProject({ projectId, projectData }));\n                console.log(`Updated Project: ${projectData.name}`);\n              }\n            });\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\n\nexport const fetchProjectLists = projectId => {\n  return async dispatch => {\n    try {\n      const projectLists = await firebase.db\n        .collection('lists')\n        .where('projectId', '==', projectId)\n        .get()\n        .then(snapshot => {\n          const lists = {};\n          snapshot.forEach(doc => {\n            lists[doc.id] = {\n              listId: doc.id,\n              ...doc.data()\n            };\n          });\n          return lists;\n        });\n      dispatch(loadListsById(projectLists));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","export const LOAD_PROJECTS_BY_ID = 'LOAD_PROJECTS_BY_ID';\nexport const LOAD_PROJECT = 'LOAD_PROJECT';\nexport const UPDATE_PROJECT = 'UPDATE_PROJECT';\nexport const REORDER_LISTS = 'REORDER_LISTS';\nexport const UPDATE_PROJECT_TAGS = 'UPDATE_PROJECT_TAGS';\nexport const ADD_TAG = 'ADD_TAG';\nexport const ADD_PROJECT = 'ADD_PROJECT';\nexport const REMOVE_PROJECT = 'REMOVE_PROJECT';\nexport const SET_PROJECT_LOADED_STATE = 'SET_PROJECT_LOADED_STATE';\nexport const SET_TEMP_PROJECT_SETTINGS = 'SET_TEMP_PROJECT_SETTINGS';\n","import * as types from './types';\nimport firebase from '../../store/firebase';\nimport { setProjectLoadedState } from '../projects/actions';\nimport {\n  loadAssignedTasks,\n  addAssignedTask,\n  removeAssignedTask\n} from '../currentUser/actions';\n\nexport const loadTasksById = tasksById => {\n  return {\n    type: types.LOAD_TASKS_BY_ID,\n    tasksById\n  };\n};\n\nexport const addTask = ({ taskId, taskData }) => {\n  return {\n    type: types.ADD_TASK,\n    taskId,\n    taskData\n  };\n};\n\nexport const removeTask = ({ taskId, listId }) => {\n  return {\n    type: types.REMOVE_TASK,\n    taskId,\n    listId\n  };\n};\n\nexport const updateTask = ({ taskId, taskData }) => {\n  return {\n    type: types.UPDATE_TASK,\n    taskId,\n    taskData\n  };\n};\n\nexport const addTag = (taskId, tag) => {\n  return {\n    type: types.ADD_TAG,\n    taskId,\n    tag\n  };\n};\n\nexport const removeTag = ({ taskId, name }) => {\n  return {\n    type: types.REMOVE_TAG,\n    taskId,\n    name\n  };\n};\n\nexport const setTaskLoadedState = (taskId, key) => {\n  return {\n    type: types.SET_TASK_LOADED_STATE,\n    taskId,\n    key\n  };\n};\n\n// Thunks\n\nexport const removeTaskTag = ({ taskId, name, userId, projectId }) => {\n  return async (dispatch, getState) => {\n    try {\n      const { currentUser, projectsById } = getState();\n      const { tags: userTags } = currentUser;\n      const projectTags = projectId ? projectsById[projectId].tags : {};\n      const isProjectTag = projectTags && name in projectTags;\n      const isUserTag = userTags && name in userTags;\n      const projectCount = isProjectTag ? projectTags[name].count - 1 : null;\n      const userCount = isUserTag ? userTags[name].count - 1 : null;\n\n      await firebase.removeTag({\n        taskId,\n        name,\n        userId,\n        userCount,\n        projectId,\n        projectCount\n      });\n      dispatch(removeTag({ taskId, name }));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n\nexport const deleteTask = ({ taskId, listId = null }) => {\n  return async (dispatch, getStore) => {\n    try {\n      const {\n        folders,\n        subtaskIds,\n        commentIds,\n        assignedTo,\n        tags,\n        projectId,\n        dueDate\n      } = getStore().tasksById[taskId];\n      const { userId } = getStore().currentUser;\n      await firebase.deleteTask({\n        taskId,\n        listId,\n        assignedTo,\n        folders,\n        subtaskIds,\n        commentIds,\n        dueDate,\n        projectId\n      });\n      if (tags && tags.length > 0) {\n        tags.forEach(name => {\n          dispatch(removeTaskTag({ taskId: null, name, userId, projectId }));\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n\nexport const syncProjectTasks = projectId => {\n  return async (dispatch, getState) => {\n    try {\n      const subscription = await firebase\n        .queryCollection('tasks', ['projectId', '==', projectId])\n        .onSnapshot(snapshot => {\n          const changes = snapshot.docChanges();\n          const isInitialLoad =\n            snapshot.size === changes.length &&\n            changes.every(change => change.type === 'added');\n\n          if (isInitialLoad && changes.length > 1) {\n            const tasksById = {};\n            changes.forEach(change => {\n              const taskId = change.doc.id;\n              const taskData = change.doc.data();\n              tasksById[taskId] = {\n                isLoaded: {\n                  subtasks: false,\n                  comments: false\n                },\n                taskId,\n                ...taskData\n              };\n            });\n            dispatch(loadTasksById(tasksById));\n          } else {\n            changes.forEach(async change => {\n              const [taskId, taskData, changeType] = await Promise.all([\n                change.doc.id,\n                change.doc.data(),\n                change.type\n              ]);\n              const { tasksById } = getState();\n              if (changeType === 'added') {\n                if (taskId in tasksById) return;\n                dispatch(addTask({ taskId, taskData }));\n                console.log(`Task added: ${taskData.name}`);\n              } else if (changeType === 'removed') {\n                if (taskId in tasksById === false) return;\n                const { listId } = taskData;\n                dispatch(removeTask({ taskId, listId }));\n                console.log(`Deleted Task: ${taskData.name}`);\n              } else {\n                dispatch(updateTask({ taskId, taskData }));\n                console.log(`Updated Task: ${taskData.name}`);\n              }\n            });\n          }\n          if (isInitialLoad) {\n            dispatch(setProjectLoadedState(projectId, 'tasks'));\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const syncUserProjectTasks = ({ userId, projectId }) => {\n  return async (dispatch, getState) => {\n    try {\n      const subscription = await firebase\n        .queryCollection('tasks', ['projectId', '==', projectId])\n        .onSnapshot(snapshot => {\n          const changes = snapshot.docChanges();\n          const isInitialLoad =\n            snapshot.size === changes.length &&\n            changes.every(change => change.type === 'added');\n\n          if (isInitialLoad && changes.length > 1) {\n            const tasksById = {};\n            let assignedTasks = [];\n            changes.forEach(change => {\n              const taskId = change.doc.id;\n              const taskData = change.doc.data();\n              const { subtaskIds, commentIds } = taskData;\n              tasksById[taskId] = {\n                isLoaded: {\n                  subtasks: subtaskIds.length === 0,\n                  comments: commentIds.length === 0\n                },\n                taskId,\n                ...taskData\n              };\n              if (taskData.assignedTo.includes(userId)) {\n                assignedTasks = assignedTasks.concat(taskId);\n              }\n            });\n            dispatch(loadTasksById(tasksById));\n            dispatch(loadAssignedTasks(assignedTasks));\n          } else {\n            const { tasksById, currentUser } = getState();\n            const { assignedTasks } = currentUser;\n            changes.forEach(async change => {\n              const [taskId, taskData, changeType] = await Promise.all([\n                change.doc.id,\n                change.doc.data(),\n                change.type\n              ]);\n\n              const isAssignedToUser = taskData.assignedTo.includes(userId);\n              const isMarkedAsAssigned = assignedTasks.includes(taskId);\n              if (changeType === 'added') {\n                if (taskId in tasksById) return;\n                dispatch(addTask({ taskId, taskData }));\n                console.log(`Task added: ${taskData.name}`);\n                if (isAssignedToUser) {\n                  dispatch(addAssignedTask(taskId));\n                }\n              } else if (changeType === 'removed') {\n                if (taskId in tasksById === false) return;\n                const { listId } = taskData;\n                if (isAssignedToUser) {\n                  dispatch(removeAssignedTask(taskId));\n                }\n                dispatch(removeTask({ taskId, listId }));\n                console.log(`Deleted Task: ${taskData.name}`);\n              } else {\n                if (!isAssignedToUser && isMarkedAsAssigned) {\n                  dispatch(removeAssignedTask(taskId));\n                }\n                dispatch(updateTask({ taskId, taskData }));\n                console.log(`Updated Task: ${taskData.name}`);\n                if (isAssignedToUser && !isMarkedAsAssigned) {\n                  dispatch(addAssignedTask(taskId));\n                }\n              }\n            });\n          }\n          if (isInitialLoad) {\n            dispatch(setProjectLoadedState(projectId, 'tasks'));\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const syncUserMiscTasks = userId => {\n  return async (dispatch, getState) => {\n    try {\n      const subscription = await firebase\n        .queryCollection('tasks', ['ownerId', '==', userId])\n        .where('projectId', '==', null)\n        .onSnapshot(snapshot => {\n          const changes = snapshot.docChanges();\n          const isInitialLoad =\n            snapshot.size === changes.length &&\n            changes.every(change => change.type === 'added');\n\n          if (isInitialLoad && changes.length > 1) {\n            const tasksById = {};\n            changes.forEach(change => {\n              tasksById[change.doc.id] = {\n                taskId: change.doc.id,\n                isLoaded: {\n                  subtasks: false,\n                  comments: false\n                },\n                ...change.doc.data()\n              };\n            });\n            dispatch(loadTasksById(tasksById));\n            dispatch(loadAssignedTasks(Object.keys(tasksById)));\n          } else {\n            changes.forEach(async change => {\n              const [taskId, taskData, changeType] = await Promise.all([\n                change.doc.id,\n                change.doc.data(),\n                change.type\n              ]);\n              const { tasksById } = getState();\n              if (changeType === 'added') {\n                if (taskId in tasksById) return;\n                dispatch(addTask({ taskId, taskData }));\n                dispatch(addAssignedTask(taskId));\n                console.log(`Task added: ${taskData.name}`);\n              } else if (changeType === 'removed') {\n                if (taskId in tasksById === false) return;\n                const { listId } = taskData;\n                dispatch(removeAssignedTask(taskId));\n                dispatch(removeTask({ taskId, listId }));\n                console.log(`Task removed: ${taskData.name}`);\n              } else {\n                dispatch(updateTask({ taskId, taskData }));\n                console.log(`Task updated: ${taskData.name}`);\n              }\n            });\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const syncTaggedTasks = ({ projectId, tag }) => {\n  return async (dispatch, getState) => {\n    try {\n      const subscription = await firebase\n        .queryCollection('tasks', ['projectId', '==', projectId])\n        .where('tags', 'array-contains', tag)\n        .onSnapshot(snapshot => {\n          const changes = snapshot.docChanges();\n          const isInitialLoad =\n            snapshot.size === changes.length &&\n            changes.every(change => change.type === 'added');\n\n          if (isInitialLoad && changes.length > 1) {\n            const tasksById = {};\n            changes.forEach(change => {\n              tasksById[change.doc.id] = {\n                taskId: change.doc.id,\n                isLoaded: {\n                  subtasks: false,\n                  comments: false\n                },\n                ...change.doc.data()\n              };\n            });\n            dispatch(loadTasksById(tasksById));\n          } else {\n            changes.forEach(async change => {\n              const [taskId, taskData, changeType] = await Promise.all([\n                change.doc.id,\n                change.doc.data(),\n                change.type\n              ]);\n              const { tasksById } = getState();\n              if (changeType === 'added') {\n                if (taskId in tasksById) return;\n                dispatch(addTask({ taskId, taskData }));\n                console.log(`Task added: ${taskData.name}`);\n              } else if (changeType === 'removed') {\n                if (taskId in tasksById === false) return;\n                const { listId } = taskData;\n                dispatch(removeTask({ taskId, listId }));\n                console.log(`Removed Task: ${taskData.name}`);\n              } else {\n                dispatch(updateTask({ taskId, taskData }));\n                console.log(`Updated Task: ${taskData.name}`);\n              }\n            });\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","export const ADD_TASK = 'ADD_TASK';\nexport const UPDATE_TASK = 'UPDATE_TASK';\nexport const LOAD_TASKS_BY_ID = 'LOAD_TASKS_BY_ID';\nexport const ADD_TAG = 'ADD_TAG';\nexport const REMOVE_TASK = 'REMOVE_TASK';\nexport const REMOVE_TAG = 'REMOVE_TAG';\nexport const SET_TASK_LOADED_STATE = 'SET_TASK_LOADED_STATE';\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadUserData = user => {\n  return {\n    type: types.LOAD_USER_DATA,\n    user\n  };\n};\n\nexport const loadUsersById = usersById => {\n  return {\n    type: types.LOAD_USERS_BY_ID,\n    usersById\n  };\n};\n\nexport const addUser = ({ userId, userData }) => {\n  return {\n    type: types.ADD_USER,\n    userId,\n    userData\n  };\n};\n\nexport const removeUser = userId => {\n  return {\n    type: types.REMOVE_USER,\n    userId\n  };\n};\n\nexport const updateUser = ({ userId, userData }) => {\n  return {\n    type: types.UPDATE_USER,\n    userId,\n    userData\n  };\n};\n\n// Thunks\n\nexport const fetchUsersById = () => {\n  return async dispatch => {\n    try {\n      const usersById = await firebase.db\n        .collection('users')\n        .get()\n        .then(snapshot => {\n          const users = {};\n          snapshot.forEach(doc => {\n            users[doc.id] = {\n              userId: doc.id,\n              ...doc.data()\n            };\n          });\n          return users;\n        });\n      dispatch(loadUsersById(usersById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const syncUsersById = () => {\n  return async (dispatch, getState) => {\n    try {\n      const subscription = await firebase.db\n        .collection('users')\n        .onSnapshot(snapshot => {\n          const changes = snapshot.docChanges();\n          const isInitialLoad =\n            snapshot.size === changes.length &&\n            changes.every(change => change.type === 'added');\n\n          if (isInitialLoad && changes.length > 1) {\n            const users = {};\n            changes.forEach(change => {\n              const userId = change.doc.id;\n              const userData = change.doc.data();\n              users[userId] = {\n                userId,\n                ...userData\n              };\n            });\n            dispatch(loadUsersById(users));\n          } else {\n            const { usersById } = getState();\n            changes.forEach(async change => {\n              const [userId, userData, changeType] = await Promise.all([\n                change.doc.id,\n                change.doc.data(),\n                change.type\n              ]);\n              switch (changeType) {\n                case 'added': {\n                  if (userId in usersById) return;\n                  dispatch(addUser({ userId, userData }));\n                  break;\n                }\n                case 'removed': {\n                  if (!(userId in usersById)) return;\n                  dispatch(removeUser(userId));\n                  break;\n                }\n                default: {\n                  dispatch(updateUser({ userId, userData }));\n                }\n              }\n            });\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserData = userId => {\n  return async dispatch => {\n    try {\n      const user = await firebase\n        .getUserDoc(userId)\n        .get()\n        .then(doc => doc.data());\n      dispatch(loadUserData(user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","export const LOAD_USER_DATA = 'LOAD_USER_DATA';\nexport const LOAD_USERS_BY_ID = 'LOAD_USERS_BY_ID';\nexport const ADD_USER = 'ADD_USER';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const REMOVE_USER = 'REMOVE_USER';\nexport const ADD_TASK = 'ADD_TASK';\nexport const REORDER_FOLDERS = 'REORDER_FOLDERS';\n","import * as types from './types';\nimport firebase from '../../store/firebase';\nimport {\n  loadTasksById,\n  addTask,\n  removeTask,\n  updateTask\n} from '../tasks/actions';\nimport { updateUser } from '../users/actions';\n\nexport const setCurrentUser = currentUser => {\n  return {\n    type: types.SET_CURRENT_USER,\n    currentUser\n  };\n};\n\nexport const setTempTaskSettings = ({ view, sortBy }) => {\n  return {\n    type: types.SET_TEMP_TASK_SETTINGS,\n    view,\n    sortBy\n  };\n};\n\n// Assigned Tasks\n\nexport const loadAssignedTasks = assignedTasks => {\n  return {\n    type: types.LOAD_ASSIGNED_TASKS,\n    assignedTasks\n  };\n};\n\nexport const addAssignedTask = taskId => {\n  return {\n    type: types.ADD_ASSIGNED_TASK,\n    taskId\n  };\n};\n\nexport const removeAssignedTask = taskId => {\n  console.log(`Removed assigned task: ${taskId}`);\n  return {\n    type: types.REMOVE_ASSIGNED_TASK,\n    taskId\n  };\n};\n\n// Folders\n\nexport const loadFolders = folders => {\n  return {\n    type: types.LOAD_FOLDERS,\n    folders\n  };\n};\n\nexport const addFolder = ({ folderId, folderData }) => {\n  return {\n    type: types.ADD_FOLDER,\n    folderId,\n    folderData\n  };\n};\n\nexport const updateFolder = ({ folderId, folderData }) => {\n  return {\n    type: types.UPDATE_FOLDER,\n    folderId,\n    folderData\n  };\n};\n\nexport const removeFolder = folderId => {\n  return {\n    type: types.REMOVE_FOLDER,\n    folderId\n  };\n};\n\nexport const reorderFolders = (userId, folderIds) => {\n  return {\n    type: types.REORDER_FOLDERS,\n    userId,\n    folderIds\n  };\n};\n\n// Notifications\n\nexport const loadNotifications = notifications => {\n  return {\n    type: types.LOAD_NOTIFICATIONS,\n    notifications\n  };\n};\n\nexport const addNotification = ({ notificationId, notificationData }) => {\n  return {\n    type: types.ADD_NOTIFICATION,\n    notificationId,\n    notificationData\n  };\n};\n\nexport const updateNotification = ({ notificationId, notificationData }) => {\n  return {\n    type: types.UPDATE_NOTIFICATION,\n    notificationId,\n    notificationData\n  };\n};\n\nexport const removeNotification = notificationId => {\n  return {\n    type: types.REMOVE_NOTIFICATION,\n    notificationId\n  };\n};\n\n// Tags\n\nexport const loadUserTags = tags => {\n  return {\n    type: types.LOAD_USER_TAGS,\n    tags\n  };\n};\n\nexport const createTag = ({ tagId, tagData }) => {\n  return {\n    type: types.CREATE_TAG,\n    tagId,\n    tagData\n  };\n};\n\nexport const updateTag = ({ tagId, tagData }) => {\n  return {\n    type: types.UPDATE_TAG,\n    tagId,\n    tagData\n  };\n};\n\nexport const deleteTag = name => {\n  return {\n    type: types.DELETE_TAG,\n    name\n  };\n};\n\nexport const deleteFolder = ({ userId, folderId }) => {\n  return async dispatch => {\n    try {\n      await firebase.getDocRef('users', userId, 'folders', folderId).delete();\n      dispatch(removeFolder(folderId));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n\n// Tasks due soon\n\nexport const loadTasksDueSoon = tasksDueSoon => {\n  return {\n    type: types.LOAD_TASKS_DUE_SOON,\n    tasksDueSoon\n  };\n};\n\nexport const addTaskDueSoon = ({ taskId, taskData }) => {\n  return {\n    type: types.ADD_TASK_DUE_SOON,\n    taskId,\n    taskData\n  };\n};\n\nexport const removeTaskDueSoon = taskId => {\n  return {\n    type: types.REMOVE_TASK_DUE_SOON,\n    taskId\n  };\n};\n\nexport const updateTaskDueSoon = ({ taskId, taskData }) => {\n  return {\n    type: types.UPDATE_TASK_DUE_SOON,\n    taskId,\n    taskData\n  };\n};\n\n// Thunks\n\nexport const syncTasksDueWithinDays = (userId, days) => {\n  const startingDate = new Date();\n  startingDate.setHours(0, 0, 0, 0);\n  const endingDate = new Date(startingDate);\n  const timeEnd = new Date(endingDate.setDate(endingDate.getDate() + days));\n\n  return async dispatch => {\n    try {\n      const subscription = await firebase.db\n        .collection('tasks')\n        .where('assignedTo', 'array-contains', userId)\n        .where('dueDate', '<=', timeEnd)\n        .orderBy('dueDate', 'asc')\n        .onSnapshot(async snapshot => {\n          const changes = snapshot.docChanges();\n          const isInitialLoad =\n            snapshot.size === changes.length &&\n            changes.every(change => change.type === 'added');\n\n          if (isInitialLoad) {\n            const tasks = {};\n            changes.forEach(change => {\n              const taskId = change.doc.id;\n              const taskData = change.doc.data();\n              const { subtaskIds, commentIds } = taskData;\n              tasks[taskId] = {\n                isLoaded: {\n                  subtasks: subtaskIds.length === 0,\n                  comments: commentIds.length === 0\n                },\n                taskId,\n                ...taskData\n              };\n            });\n            dispatch(loadTasksDueSoon(tasks));\n            dispatch(loadTasksById(tasks));\n          } else {\n            changes.forEach(change => {\n              const taskId = change.doc.id;\n              const taskData = change.doc.data();\n              if (change.type === 'added') {\n                dispatch(addTaskDueSoon({ taskId, taskData }));\n              } else if (change.type === 'removed') {\n                dispatch(removeTaskDueSoon(taskId));\n              } else {\n                dispatch(updateTaskDueSoon({ taskId, taskData }));\n              }\n            });\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const syncFolders = userId => {\n  return async (dispatch, getState) => {\n    try {\n      const subscription = await firebase\n        .getDocRef('users', userId)\n        .collection('folders')\n        .onSnapshot(async snapshot => {\n          const changes = snapshot.docChanges();\n          const isInitialLoad =\n            snapshot.size === changes.length &&\n            changes.every(change => change.type === 'added');\n          if (isInitialLoad && changes.length > 1) {\n            const foldersById = {};\n            changes.forEach(change => {\n              const folderId = change.doc.id;\n              const folderData = change.doc.data();\n              foldersById[folderId] = {\n                folderId,\n                ...folderData\n              };\n            });\n            await dispatch(loadFolders(foldersById));\n          } else {\n            changes.forEach(async change => {\n              const [folderId, folderData, changeType] = await Promise.all([\n                change.doc.id,\n                change.doc.data(),\n                change.type\n              ]);\n              const { folders } = getState().currentUser;\n              switch (changeType) {\n                case 'added': {\n                  if (folderId in folders) return;\n                  dispatch(addFolder({ folderId, folderData }));\n                  console.log('folder added');\n                  break;\n                }\n                case 'removed': {\n                  if (!change.doc.exists && folderId in folders) {\n                    dispatch(removeFolder(folderId));\n                  }\n                  break;\n                }\n                default: {\n                  if (\n                    folderData.taskIds.length === 0 &&\n                    !['0', '1', '2', '3', '4', '5'].includes(folderId)\n                  ) {\n                    dispatch(deleteFolder({ userId, folderId }));\n                  } else {\n                    dispatch(updateFolder({ folderId, folderData }));\n                    console.log(`Updated Folder: ${folderData.name}`);\n                  }\n                  break;\n                }\n              }\n            });\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\n/*\nexport const createTag = ({ userId, taskId, name }) => {\n  return async (dispatch, getState) => {\n    try {\n      await firebase.addTag({ taskId, userId, name, projectId, color, projectCount, userCount});\n            const { tags } = getState().currentUser;\n           if (changeType === 'added') {\n             console.log(tags);\n              dispatch(addTag({ tagId, tagData }));\n              console.log('tag added');\n            } else if (changeType === 'removed') {\n              dispatch(removeTag(tagId));\n            } else {\n              dispatch(updateTag({ tagId, tagData }));\n              console.log(`Updated Tag: ${tagData.name}`);\n            }\n          });\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n*/\n\nexport const syncUserTags = userId => {\n  return async (dispatch, getState) => {\n    try {\n      const subscription = await firebase\n        .getDocRef('users', userId)\n        .collection('tags')\n        .onSnapshot(async snapshot => {\n          const changes = await snapshot.docChanges();\n          const isInitialLoad =\n            snapshot.size === changes.length &&\n            changes.every(change => change.type === 'added');\n          if (isInitialLoad) {\n            const tags = {};\n            snapshot.forEach(doc => {\n              tags[doc.id] = doc.data();\n            });\n            await dispatch(loadUserTags(tags));\n          } else {\n            changes.forEach(async change => {\n              const [tagId, tagData, changeType] = await Promise.all([\n                change.doc.id,\n                change.doc.data(),\n                change.type\n              ]);\n              const { tags } = getState().currentUser;\n              if (changeType === 'added') {\n                if (tagId in tags) return;\n                console.log(tagId, tagData);\n                dispatch(createTag({ tagId, tagData }));\n                console.log('tag added');\n              } else if (changeType === 'removed') {\n                dispatch(deleteTag(tagId));\n              } else {\n                dispatch(updateTag({ tagId, tagData }));\n                console.log(`Updated Tag: ${tagData.name}`);\n              }\n            });\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const syncUserTasks = userId => {\n  return async (dispatch, getState) => {\n    try {\n      const subscription = await firebase\n        .queryCollection('tasks', ['assignedTo', 'array-contains', userId])\n        .onSnapshot(async snapshot => {\n          const changes = snapshot.docChanges();\n          const isInitialLoad =\n            snapshot.size === changes.length &&\n            changes.every(change => change.type === 'added');\n          if (isInitialLoad && changes.length > 1) {\n            const tasksById = {};\n            changes.forEach(change => {\n              const taskId = change.doc.id;\n              const taskData = change.doc.data();\n              const { subtaskIds, commentIds } = taskData;\n              tasksById[taskId] = {\n                isLoaded: {\n                  subtasks: subtaskIds.length === 0,\n                  comments: commentIds.length === 0\n                },\n                taskId,\n                ...taskData\n              };\n            });\n            dispatch(loadTasksById(tasksById));\n            dispatch(loadAssignedTasks(Object.keys(tasksById)));\n          } else {\n            changes.forEach(async change => {\n              const [taskId, taskData, changeType] = await Promise.all([\n                change.doc.id,\n                change.doc.data(),\n                change.type\n              ]);\n              if (changeType === 'added') {\n                if (!(taskId in getState().tasksById)) {\n                  dispatch(addTask({ taskId, taskData }));\n                }\n                dispatch(addAssignedTask(taskId));\n                console.log('task added');\n              } else if (changeType === 'removed') {\n                const { listId } = taskData;\n                dispatch(removeAssignedTask(taskId));\n                if (taskId in getState().tasksById && !change.doc.exists) {\n                  dispatch(removeTask({ taskId, listId }));\n                }\n              } else {\n                dispatch(updateTask({ taskId, taskData }));\n                console.log(`Updated Task: ${taskData.name}`);\n              }\n            });\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const syncCurrentUserData = userId => {\n  return async (dispatch, getState) => {\n    try {\n      const subscription = await firebase\n        .getDocRef('users', userId)\n        .onSnapshot(snapshot => {\n          const userData = snapshot.data() || null;\n          if (userData) {\n            userData.tempSettings = {\n              tasks: { ...userData.settings.tasks }\n            };\n          }\n          if (!getState().currentUser) {\n            dispatch(setCurrentUser(userData));\n          } else {\n            dispatch(updateUser({ userId, userData }));\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n\nexport const syncNotifications = userId => {\n  return async (dispatch, getState) => {\n    try {\n      const subscription = await firebase\n        .getDocRef('users', userId)\n        .collection('notifications')\n        .where('isActive', '==', true)\n        .onSnapshot(async snapshot => {\n          const changes = snapshot.docChanges();\n          const isInitialLoad =\n            snapshot.size === changes.length &&\n            changes.every(change => change.type === 'added');\n          if (isInitialLoad && changes.length > 1) {\n            const notificationsById = {};\n            changes.forEach(change => {\n              const notificationId = change.doc.id;\n              const notificationData = change.doc.data();\n              notificationsById[notificationId] = {\n                notificationId,\n                ...notificationData\n              };\n            });\n            await dispatch(loadNotifications(notificationsById));\n          } else {\n            changes.forEach(async change => {\n              const [\n                notificationId,\n                notificationData,\n                changeType\n              ] = await Promise.all([\n                change.doc.id,\n                change.doc.data(),\n                change.type\n              ]);\n              const { notifications } = getState().currentUser;\n              switch (changeType) {\n                case 'added': {\n                  if (notifications && notificationId in notifications) return;\n                  dispatch(\n                    addNotification({ notificationId, notificationData })\n                  );\n                  console.log('notification added');\n                  break;\n                }\n                case 'removed': {\n                  if (\n                    !change.doc.exists &&\n                    notifications &&\n                    notificationId in notifications\n                  ) {\n                    dispatch(removeNotification(notificationId));\n                  }\n                  break;\n                }\n                default: {\n                  dispatch(\n                    updateNotification({ notificationId, notificationData })\n                  );\n                  break;\n                }\n              }\n            });\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","export const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const LOAD_FOLDERS = 'LOAD_FOLDERS';\nexport const ADD_FOLDER = 'ADD_FOLDER';\nexport const REMOVE_FOLDER = 'REMOVE_FOLDER';\nexport const UPDATE_FOLDER = 'UPDATE_FOLDER';\nexport const REORDER_FOLDERS = 'REORDER_FOLDERS';\nexport const UPDATE_FOLDER_IDS = 'UPDATE_FOLDER_IDS';\nexport const LOAD_TASKS_DUE_SOON = 'LOAD_TASKS_DUE_SOON';\nexport const ADD_TASK_DUE_SOON = 'ADD_TASK_DUE_SOON';\nexport const REMOVE_TASK_DUE_SOON = 'DELETE_TASK_DUE_SOON';\nexport const UPDATE_TASK_DUE_SOON = 'UPDATE_TASK_DUE_SOON';\nexport const LOAD_USER_TAGS = 'LOAD_USER_TAGS';\nexport const ADD_TAG = 'ADD_TAG';\nexport const REMOVE_TAG = 'REMOVE_TAG';\nexport const UPDATE_TAG = 'UPDATE_TAG';\nexport const CREATE_TAG = 'CREATE_TAG';\nexport const DELETE_TAG = 'DELETE_TAG';\nexport const LOAD_ASSIGNED_TASKS = 'LOAD_ASSIGNED_TASKS';\nexport const ADD_ASSIGNED_TASK = 'ADD_ASSIGNED_TASK';\nexport const REMOVE_ASSIGNED_TASK = 'REMOVE_ASSIGNED_TASK';\nexport const SET_TEMP_TASK_SETTINGS = 'SET_TEMP_TASK_SETTINGS';\nexport const ADD_NOTIFICATION = 'ADD_NOTIFICATION';\nexport const REMOVE_NOTIFICATION = 'ADD_NOTIFICATION';\nexport const UPDATE_NOTIFICATION = 'UPDATE_NOTIFICATION';\nexport const LOAD_NOTIFICATIONS = 'LOAD_NOTIFICATIONS';","// Full names, shortnames, and total days of months,\n// excluding February (depends on leap year)\nexport const MONTHS = [\n  {\n    long: 'January',\n    short: 'Jan',\n    daysTotal: 31\n  },\n  {\n    long: 'February',\n    short: 'Feb',\n    daysTotal: null\n  },\n  {\n    long: 'March',\n    short: 'Mar',\n    daysTotal: 31\n  },\n  {\n    long: 'April',\n    short: 'Apr',\n    daysTotal: 30\n  },\n  {\n    long: 'May',\n    short: 'May',\n    daysTotal: 31\n  },\n  {\n    long: 'June',\n    short: 'Jun',\n    daysTotal: 30\n  },\n  {\n    long: 'July',\n    short: 'Jul',\n    daysTotal: 31\n  },\n  {\n    long: 'August',\n    short: 'Aug',\n    daysTotal: 31\n  },\n  {\n    long: 'September',\n    short: 'Sep',\n    daysTotal: 30\n  },\n  {\n    long: 'October',\n    short: 'Oct',\n    daysTotal: 31\n  },\n  {\n    long: 'November',\n    short: 'Nov',\n    daysTotal: 30\n  },\n  {\n    long: 'December',\n    short: 'Dec',\n    daysTotal: 31\n  }\n];\n\n// Full names and shortnames of days of week\nexport const WEEK_DAYS = [\n  { long: 'Sunday', short: 'Sun', narrow: 'S' },\n  { long: 'Monday', short: 'Mon', narrow: 'M' },\n  { long: 'Tuesday', short: 'Tue', narrow: 'T' },\n  { long: 'Wednesday', short: 'Wed', narrow: 'W' },\n  { long: 'Thursday', short: 'Thu', narrow: 'T' },\n  { long: 'Friday', short: 'Fri', narrow: 'F' },\n  { long: 'Saturday', short: 'Sat', narrow: 'S' }\n];\n","// Helper functions for working with date objects\n\n/* eslint-disable no-nested-ternary */\nimport { MONTHS, WEEK_DAYS } from './constants';\n\nexport { MONTHS, WEEK_DAYS };\n\nexport const isLeapYear = year =>\n  (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n\nexport const getMonthFirstDay = (monthIndex, year) =>\n  new Date(year, monthIndex, 1).getDay();\n\nexport const isToday = date =>\n  new Date().setHours(0, 0, 0, 0) === new Date(+date).setHours(0, 0, 0, 0);\n\nexport const isYesterday = date => {\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  return today.setDate(today.getDate() - 1) === new Date(+date).setHours(0, 0, 0, 0);\n};\n\nexport const isTomorrow = date => {\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  return today.setDate(today.getDate() + 1) === new Date(+date).setHours(0, 0, 0, 0);\n};\n\nexport const isThisYear = date => {\n  return date.getFullYear() === new Date().getFullYear();\n};\n\nexport const getMonthDays = (monthIndex, year) => {\n  if (monthIndex === 1) {\n    return isLeapYear(year) ? 29 : 28;\n  }\n  return MONTHS[monthIndex].daysTotal;\n};\n\nexport const getPrevMonth = (monthIndex, year) => {\n  return {\n    month: monthIndex > 0 ? monthIndex - 1 : 11,\n    year: monthIndex > 0 ? year : year - 1\n  };\n};\n\nexport const getNextMonth = (monthIndex, year) => {\n  return {\n    month: monthIndex < 11 ? monthIndex + 1 : 0,\n    year: monthIndex < 11 ? year : year + 1\n  };\n};\n\nexport const getMonthDates = (month, year) => {\n  const monthDays = getMonthDays(month, year);\n  const monthFirstDay = getMonthFirstDay(month, year);\n  const { month: prevMonth, year: prevMonthYear } = getPrevMonth(month, year);\n  const prevMonthDays = getMonthDays(prevMonth, prevMonthYear);\n  const daysFromPrevMonth = monthFirstDay;\n  const daysFromNextMonth = 7 - ((monthFirstDay + monthDays) % 7);\n  const prevMonthDates = [...new Array(daysFromPrevMonth)].map((n, i) => {\n    return {\n      day: prevMonthDays - daysFromPrevMonth + i + 1,\n      month: prevMonth,\n      year: prevMonthYear\n    };\n  });\n\n  const thisMonthDates = [...new Array(monthDays)].map((n, i) => {\n    return {\n      day: i + 1,\n      month,\n      year\n    };\n  });\n\n  const nextMonthDates = [...new Array(daysFromNextMonth)].map((n, i) => {\n    return {\n      day: i + 1,\n      ...getNextMonth(month, year)\n    };\n  });\n\n  return [...prevMonthDates, ...thisMonthDates, ...nextMonthDates];\n};\n\nexport const isDate = date =>\n  Object.prototype.toString.call(date) === '[object Date]';\n\nexport const getSimpleDate = date => {\n  const dateObj =\n    !isDate(date) && typeof date === 'string' ? new Date(date) : date;\n  return {\n    day: dateObj.getDate(),\n    month: dateObj.getMonth(),\n    year: dateObj.getFullYear()\n  };\n};\n\nexport const isSimpleDate = date => {\n  return date && 'day' in date && 'month' in date && 'year' in date;\n};\n\nexport const isSameDate = (date, base = new Date()) => {\n  if (\n    (!isDate(date) && !isSimpleDate(date)) ||\n    (!isDate(base) && !isSimpleDate(base))\n  )\n    return false;\n  const dateDay = date.day || date.getDate();\n  const dateMonth = date.month || date.getMonth();\n  const dateYear = date.year || date.getFullYear();\n  const baseDay = base.day || base.getDate();\n  const baseMonth = base.month || base.getMonth();\n  const baseYear = date.year || base.getFullYear();\n  return (\n    dateDay === baseDay && dateMonth === baseMonth && dateYear === baseYear\n  );\n};\n\nexport const getNextYears = (num, startingYear = new Date().getFullYear()) => {\n  return [...new Array(num)].map((item, i) => {\n    return startingYear + i;\n  });\n};\n\n/**\n * Pads the start of given value with zero until it reaches the given length\n * @param {Number|String} value - The string to pad\n * @param {Number} length - The target length\n */\n\nexport const padZero = (value, length) => {\n  return `${value}`.padStart(length, '0');\n};\n\n/**\n * Returns string representation of simple date object with format `mm-dd-yy`\n * @param {Object} date - simple date object\n */\nexport const toSimpleDateString = date => {\n  const simpleDate = isSimpleDate(date)\n    ? date\n    : isDate(date)\n    ? getSimpleDate(date)\n    : undefined;\n  if (!simpleDate) return '';\n  const { day, month, year } = simpleDate;\n  return `${padZero(month + 1, 2)}-${padZero(day, 2)}-${year - 2000}`;\n};\n\n/**\n * Converts simple date string back to simple date object\n * @param {String} dateString\n */\nexport const toSimpleDateObj = dateString => {\n  const dateArr = dateString.split('-');\n  const month = dateArr[0] - 1;\n  const day = +dateArr[1];\n  const year = +dateArr[2] + 2000;\n  if (day > getMonthDays(month, year)) {\n    return getSimpleDate(new Date(year, month, day));\n  }\n  return {\n    month,\n    day,\n    year\n  };\n};\n\nexport const isSDSFormat = dateString => {\n  return /^\\d{2}-\\d{2}-\\d{2}$/.test(dateString);\n};\n\n/**\n * Checks if date falls within specified time frame\n * @param {Date Object} date - Javascript date object\n * @param {Number} num - The number of days comprising the time frame to check the date against\n * @param {Date Object} startingDate - The first day of the time frame\n */\nexport const isWithinDays = (date, num, startingDate = new Date()) => {\n  const timeStart = startingDate.setHours(0, 0, 0, 0);\n  const endingDate = new Date(startingDate);\n  const timeEnd = endingDate.setDate(endingDate.getDate() + num);\n  return +date >= timeStart && +date < timeEnd;\n};\n\nexport const isPriorDate = (date, baseDate = new Date()) => {\n  return +date < baseDate.setHours(0, 0, 0, 0);\n};\n\nexport const toDateString = (\n  date,\n  options = {\n    useRelative: false,\n    format: {\n      weekday: 'short',\n      month: 'short',\n      day: 'numeric',\n      year: '2-digit'\n    }\n  }\n) => {\n  const { useRelative, format } = options;\n  if (useRelative) {\n    if (isToday(date)) {\n      return 'Today';\n    }\n    if (isYesterday(date)) {\n      return 'Yesterday';\n    }\n    if (isTomorrow(date)) {\n      return 'Tomorrow';\n    }\n    if (isWithinDays(date, 7)) {\n      return WEEK_DAYS[date.getDay()].long;\n    }\n  }\n  return Object.keys(format)\n    .map(key => {\n      switch (key) {\n        case 'weekday': {\n          const value = format[key];\n          const weekday = date.getDay();\n          return WEEK_DAYS[weekday][value];\n        }\n        case 'month': {\n          const value = format[key];\n          const month = date.getMonth();\n          if (value === 'numeric') {\n            return month + 1;\n          }\n          if (value === '2-digit') {\n            return padZero(month + 1, 2);\n          }\n          return MONTHS[month][value];\n        }\n        case 'day': {\n          const value = format[key];\n          const day = date.getDate();\n          if (value === '2-digit') {\n            return padZero(day, 2);\n          }\n          return day;\n        }\n        case 'year': {\n          const value = format[key];\n          const year = date.getFullYear();\n          if (useRelative && isThisYear(date)) {\n            return null;\n          }\n          if (value === '2-digit') {\n            return `'${+year.slice(2)}`;\n          }\n          return year;\n        }\n        default: {\n          return key;\n        }\n      }\n    })\n    .join(' ')\n    .trim();\n};\n\nexport const toTimeString = (date, { format = 'h:mm:ss', hour12 = true }) => {\n  try {\n    if (!isDate(date)) {\n      throw new TypeError('Not a Date object');\n    }\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const seconds = date.getSeconds();\n    const timeString = format\n      .split(':')\n      .map((unit, i) => {\n        const digits = unit.length;\n        if (i === 0) {\n          const h = hour12 && hours > 12 ? hours - 12 : hours;\n          return digits > 1 && h < 10 ? padZero(h, digits) : h;\n        }\n        if (i === 1) {\n          return digits > 1 && minutes < 10\n            ? padZero(minutes, digits)\n            : minutes;\n        }\n        if (i === 2) {\n          return digits > 1 && seconds < 10\n            ? padZero(seconds, digits)\n            : seconds;\n        }\n      })\n      .join(':');\n    return hour12 ? `${timeString} ${hours < 12 ? 'AM' : 'PM'}` : timeString;\n  } catch (e) {\n    console.error(e);\n  }\n};\n","import { toDateString, isPriorDate } from '../../utils/date';\n\nexport const getCurrentUser = state => {\n  return state.currentUser;\n};\n\nexport const getCurrentUserId = state => {\n  const { currentUser } = state;\n  if (!currentUser) return null;\n  return currentUser.userId;\n};\n\nexport const getFolders = state => {\n  const { currentUser } = state;\n  if (!currentUser) return null;\n  return currentUser.folders;\n};\n\nexport const getNotifications = state => {\n  const { currentUser } = state;\n  if (!currentUser) return null;\n  return currentUser.notifications;\n};\n\nexport const getNotificationsArray = state => {\n  const { currentUser } = state;\n  if (!currentUser) return [];\n  const { notifications } = currentUser;\n  if (!notifications) return [];\n  const getMillis = obj =>\n    obj.createdAt ? obj.createdAt.toMillis() : Date.now();\n  return Object.keys(notifications)\n    .map(notificationId => notifications[notificationId])\n    .sort((a, b) => {\n      return getMillis(b) - getMillis(a);\n    });\n};\n\nexport const getTaskSettings = state => {\n  const { currentUser } = state;\n  if (!currentUser) return null;\n  return currentUser.settings.tasks;\n};\n\nexport const getTempTaskSettings = state => {\n  const { currentUser } = state;\n  if (!currentUser) return null;\n  return currentUser.tempSettings.tasks;\n};\n\nexport const getAssignedTasks = state => {\n  const { currentUser } = state;\n  if (!currentUser) return null;\n\n  return currentUser.assignedTasks;\n};\n\nexport const getFolderIds = state => {\n  const { currentUser } = state;\n  if (!currentUser) return [];\n  return currentUser.folderIds;\n};\n\nexport const getSortedFilteredTaskGroups = state => {\n  const { currentUser } = state;\n  if (!currentUser) return [];\n  const { tempSettings, assignedTasks } = currentUser;\n  const { sortBy, view } = tempSettings.tasks;\n  const { folders } = currentUser;\n  if (!folders) return [];\n  switch (sortBy) {\n    case 'project': {\n      const { tasksById } = state;\n      if (!assignedTasks || !tasksById) return [];\n      const { projectIds } = currentUser;\n      const projectTasks = projectIds.reduce((tasksByProject, projectId) => {\n        const { name, taskIds } = folders[projectId];\n        return tasksByProject.concat(\n          taskIds.length > 0\n            ? {\n                taskIds:\n                  view === 'active'\n                    ? taskIds.filter(taskId => !tasksById[taskId].isCompleted)\n                    : view === 'completed'\n                    ? taskIds.filter(taskId => tasksById[taskId].isCompleted)\n                    : taskIds,\n                projectId,\n                name,\n                projectName: name,\n                dueDate: null,\n                folderId: projectId,\n                userPermissions: {\n                  enableNameChange: false,\n                  enableTaskAdd: false,\n                  enableDragNDrop: true\n                }\n              }\n            : []\n        );\n      }, []);\n      const miscFolder = folders['4'];\n      const noProject =\n        miscFolder.taskIds.length > 0\n          ? {\n              ...miscFolder,\n              projectId: null,\n              projectName: null,\n              dueDate: null,\n              taskIds:\n                view === 'active'\n                  ? miscFolder.taskIds.filter(\n                      taskId => !tasksById[taskId].isCompleted\n                    )\n                  : view === 'completed'\n                  ? miscFolder.taskIds.filter(\n                      taskId => tasksById[taskId].isCompleted\n                    )\n                  : miscFolder.taskIds,\n              userPermissions: {\n                enableNameChange: false,\n                enableTaskAdd: true,\n                enableDragNDrop: true\n              }\n            }\n          : null;\n      return [...projectTasks, ...(noProject ? [noProject] : [])];\n    }\n    case 'folder': {\n      if (!folders) return [];\n      const { folderIds } = currentUser;\n      const { tasksById } = state;\n      return folderIds.map(folderId => {\n        const { taskIds } = folders[folderId];\n        return {\n          ...folders[folderId],\n          taskIds:\n            view === 'active'\n              ? taskIds.filter(taskId => !tasksById[taskId].isCompleted)\n              : view === 'completed'\n              ? taskIds.filter(taskId => tasksById[taskId].isCompleted)\n              : taskIds,\n          projectId: null,\n          projectName: null,\n          dueDate: null,\n          userPermissions: {\n            enableNameChange:\n              folderId !== '0' &&\n              folderId !== '1' &&\n              folderId !== '2' &&\n              folderId !== '3',\n            enableTaskAdd: true,\n            enableDragNDrop: true\n          }\n        };\n      });\n    }\n    case 'dueDate': {\n      const { tasksById } = state;\n      if (!assignedTasks || !tasksById) return [];\n      let dueDates = [];\n      const dueTasks = assignedTasks.reduce((tasksByDueDate, taskId) => {\n        const { dueDate, isCompleted } = tasksById[taskId];\n        if (view === 'active' && isCompleted) return tasksByDueDate;\n        if (view === 'completed' && !isCompleted) return tasksByDueDate;\n        const isPastDue = dueDate && isPriorDate(dueDate.toDate());\n        if (dueDate && !isPastDue) {\n          if (!(`${dueDate.toMillis()}` in tasksByDueDate)) {\n            tasksByDueDate[`${dueDate.toMillis()}`] = {\n              taskIds: [],\n              projectId: null,\n              name: toDateString(dueDate.toDate(), {\n                useRelative: true,\n                format: { weekday: 'short', month: 'short', day: 'numeric' }\n              }),\n              projectName: null,\n              folderId: `${dueDate.toMillis()}`,\n              dueDate: dueDate.toMillis(),\n              userPermissions: {\n                enableNameChange: false,\n                enableTaskAdd: true,\n                enableDragNDrop: true\n              }\n            };\n            dueDates = [...dueDates, dueDate.toMillis()];\n          }\n          tasksByDueDate[`${dueDate.toMillis()}`].taskIds = [\n            ...tasksByDueDate[`${dueDate.toMillis()}`].taskIds,\n            taskId\n          ];\n        } else if (dueDate && isPastDue) {\n          if (!('pastDue' in tasksByDueDate)) {\n            tasksByDueDate.pastDue = {\n              taskIds: [],\n              projectId: null,\n              name: 'Past Due',\n              projectName: null,\n              folderId: null,\n              dueDate: 'pastDue',\n              userPermissions: {\n                enableNameChange: false,\n                enableTaskAdd: false,\n                enableDragNDrop: true\n              }\n            };\n          }\n          tasksByDueDate.pastDue.taskIds = [\n            ...tasksByDueDate.pastDue.taskIds,\n            taskId\n          ];\n        }\n        return tasksByDueDate;\n      }, {});\n      const unscheduled = folders['5'];\n      const noDueDate =\n        unscheduled.taskIds.length > 0\n          ? {\n              ...unscheduled,\n              taskIds:\n                view === 'active'\n                  ? unscheduled.taskIds.filter(\n                      taskId => !tasksById[taskId].isCompleted\n                    )\n                  : view === 'completed'\n                  ? unscheduled.taskIds.filter(\n                      taskId => tasksById[taskId].isCompleted\n                    )\n                  : unscheduled.taskIds,\n              projectId: null,\n              projectName: null,\n              dueDate: null,\n              userPermissions: {\n                enableNameChange: false,\n                enableTaskAdd: true,\n                enableDragNDrop: true\n              }\n            }\n          : null;\n      const { pastDue, ...restOfDueTasks } = dueTasks;\n      const sortedDueDates = [...dueDates].sort((a, b) => a - b);\n      return [\n        ...(pastDue ? [pastDue] : []),\n        ...sortedDueDates.map(date =>\n          `${date}` in folders\n            ? {\n                ...folders[`${date}`],\n                taskIds:\n                  view === 'active'\n                    ? folders[`${date}`].taskIds.filter(\n                        taskId => !tasksById[taskId].isCompleted\n                      )\n                    : view === 'completed'\n                    ? folders[`${date}`].taskIds.filter(\n                        taskId => tasksById[taskId].isCompleted\n                      )\n                    : folders[`${date}`].taskIds,\n                projectId: null,\n                name: toDateString(new Date(date), {\n                  useRelative: true,\n                  format: { weekday: 'short', month: 'short', day: 'numeric' }\n                }),\n                projectName: null,\n                folderId: `${date}`,\n                dueDate: date,\n                userPermissions: {\n                  enableNameChange: false,\n                  enableTaskAdd: true,\n                  enableDragNDrop: true\n                }\n              }\n            : restOfDueTasks[`${date}`]\n        ),\n        ...(noDueDate ? [noDueDate] : [])\n      ];\n    }\n    default: {\n      return [];\n    }\n  }\n};\n\nexport const getFolder = (state, folderId) => {\n  const { currentUser } = state;\n  if (!currentUser) return null;\n  return currentUser.folders[folderId];\n};\n\n// Returns array of tasks due within given number of days\nexport const getTasksDueWithinDays = (state, days = 7) => {\n  const { currentUser, tasksById } = state;\n  if (!currentUser) return [];\n  const { assignedTasks } = currentUser;\n  if (!assignedTasks) return [];\n  const startingDate = new Date();\n  startingDate.setHours(0, 0, 0, 0);\n  const endingDate = new Date(startingDate);\n  const timeEnd = +new Date(endingDate.setDate(endingDate.getDate() + days));\n  return assignedTasks\n    .reduce((tasksDueSoon, taskId) => {\n      const task = tasksById[taskId];\n      if (task && task.dueDate && task.dueDate.toMillis() <= timeEnd) {\n        return tasksDueSoon.concat(task);\n      }\n      return tasksDueSoon;\n    }, [])\n    .sort((a, b) => a.dueDate.toMillis() - b.dueDate.toMillis());\n};\n\nexport const getMergedProjectTags = state => {\n  const {\n    selectedProject: projectId,\n    projectsById,\n    usersById,\n    currentUser\n  } = state;\n  const { userId } = currentUser;\n  if (!projectId) return [];\n  const { tags: projectTags } = projectsById[projectId];\n  const { tags: userTags } = usersById[userId];\n  const mergedTags = { ...userTags, ...projectTags };\n  return Object.keys(mergedTags).map(tag => mergedTags[tag]);\n};\n\nexport const getAllMergedTags = state => {\n  const { projectsById, usersById, currentUser } = state;\n  if (!currentUser) return [];\n  const { tags: userTags, projectIds } = currentUser;\n  const projectTags = projectIds.reduce((tags, projectId) => {\n    const project = projectsById[projectId];\n    if (project && project.tags) {\n      tags = {\n        ...tags,\n        ...project.tags\n      };\n    }\n    return tags;\n  }, {});\n  const mergedTags = { ...userTags, ...projectTags };\n  return Object.keys(mergedTags).map(tag => mergedTags[tag]);\n};\n\nexport const getCurrentUserProjects = state => {\n  const { currentUser, projectsById } = state;\n  if (!currentUser) return [];\n  const { projectIds } = currentUser;\n  return projectIds.map(projectId => projectsById[projectId]);\n};\n","import * as types from './types';\nimport { UPDATE_USER } from '../users/types';\n\nexport default (state = null, action) => {\n  switch (action.type) {\n    case types.SET_CURRENT_USER: {\n      const { currentUser } = action;\n      return currentUser;\n    }\n    case types.LOAD_FOLDERS: {\n      const { folders } = action;\n      return {\n        ...state,\n        folders\n      };\n    }\n    case types.LOAD_NOTIFICATIONS: {\n      const { notifications } = action;\n      return {\n        ...state,\n        notifications\n      };\n    }\n    case types.LOAD_USER_TAGS: {\n      const { tags } = action;\n      return {\n        ...state,\n        tags\n      };\n    }\n    case types.CREATE_TAG: {\n      const { tagId, tagData } = action;\n      return {\n        ...state,\n        tags: {\n          ...state.tags,\n          [tagId]: tagData\n        }\n      };\n    }\n    case types.DELETE_TAG: {\n      const { tagId } = action;\n      const { [tagId]: deletedTag, ...restOfTags } = state.tags;\n      return {\n        ...state,\n        tags: restOfTags\n      };\n    }\n    case types.UPDATE_TAG: {\n      const { tagId, tagData } = action;\n      return {\n        ...state,\n        tags: {\n          ...state.tags,\n          [tagId]: {\n            ...state.tags[tagId],\n            ...tagData\n          }\n        }\n      };\n    }\n    case types.ADD_FOLDER: {\n      const { folderId, folderData } = action;\n      return {\n        ...state,\n        folders: {\n          ...state.folders,\n          [folderId]: {\n            folderId,\n            ...folderData\n          }\n        }\n      };\n    }\n    case types.REMOVE_FOLDER: {\n      const { folderId } = action;\n      const { [folderId]: removedFolder, ...restOfFolders } = state.folders;\n      return {\n        ...state,\n        folders: restOfFolders\n      };\n    }\n    case types.ADD_NOTIFICATION: {\n      const { notificationId, notificationData } = action;\n      return {\n        ...state,\n        notifications: {\n          ...state.notifications,\n          [notificationId]: {\n            notificationId,\n            ...notificationData\n          }\n        }\n      };\n    }\n    case types.REMOVE_NOTIFICATION: {\n      const { notificationId } = action;\n      const {\n        [notificationId]: removedNotification,\n        ...restOfNotifications\n      } = state.notifications;\n      return {\n        ...state,\n        notifications: restOfNotifications\n      };\n    }\n    case types.UPDATE_NOTIFICATION: {\n      const { notificationId, notificationData } = action;\n      return {\n        ...state,\n        notifications: {\n          ...state.notifications,\n          [notificationId]: {\n            ...state.notifications[notificationId],\n            ...notificationData\n          }\n        }\n      };\n    }\n    case types.LOAD_ASSIGNED_TASKS: {\n      const currentAssignedTasks = state.assignedTasks || [];\n      const { assignedTasks } = action;\n      return {\n        ...state,\n        assignedTasks: [...currentAssignedTasks, ...assignedTasks]\n      };\n    }\n    case types.ADD_ASSIGNED_TASK: {\n      const { taskId } = action;\n      const assignedTasks = state.assignedTasks || [];\n      return {\n        ...state,\n        assignedTasks: [...assignedTasks, taskId]\n      };\n    }\n    case types.REMOVE_ASSIGNED_TASK: {\n      const { taskId } = action;\n      return {\n        ...state,\n        assignedTasks: [...state.assignedTasks.filter(id => id !== taskId)]\n      };\n    }\n    case types.UPDATE_FOLDER: {\n      const { folderId, folderData } = action;\n      return {\n        ...state,\n        folders: {\n          ...state.folders,\n          [folderId]: {\n            ...state.folders[folderId],\n            ...folderData\n          }\n        }\n      };\n    }\n    case types.UPDATE_FOLDER_IDS:\n    case types.REORDER_FOLDERS: {\n      const { folderIds } = action;\n      return {\n        ...state,\n        folderIds\n      };\n    }\n    case types.LOAD_TASKS_DUE_SOON: {\n      const { tasksDueSoon } = action;\n      return {\n        ...state,\n        tasksDueSoon\n      };\n    }\n    case types.ADD_TASK_DUE_SOON: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        tasksDueSoon: {\n          ...state.tasksDueSoon,\n          [taskId]: {\n            taskId,\n            ...taskData\n          }\n        }\n      };\n    }\n    case types.REMOVE_TASK_DUE_SOON: {\n      const { taskId } = action;\n      const { [taskId]: removedTask, ...restOfTasks } = state.tasksDueSoon;\n      return {\n        ...state,\n        tasksDueSoon: restOfTasks\n      };\n    }\n    case types.UPDATE_TASK_DUE_SOON: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        tasksDueSoon: {\n          ...state.tasksDueSoon,\n          [taskId]: {\n            ...state.tasksDueSoon[taskId],\n            ...taskData\n          }\n        }\n      };\n    }\n    case types.SET_TEMP_TASK_SETTINGS: {\n      const { view, sortBy } = action;\n      return {\n        ...state,\n        tempSettings: {\n          ...state.tempSettings,\n          tasks: {\n            ...state.tempSettings.tasks,\n            view: view || state.tempSettings.tasks.view,\n            sortBy: sortBy || state.tempSettings.tasks.sortBy\n          }\n        }\n      };\n    }\n    case UPDATE_USER: {\n      const { userData } = action;\n      return {\n        ...state,\n        ...userData\n      };\n    }\n    default:\n      return state;\n  }\n};\n","export const getDisplayName = WrappedComponent =>\n  WrappedComponent.displayName || WrappedComponent.name || 'Component';\n\nexport const generateKey = () =>\n  +Date.now() +\n  Math.random()\n    .toString(36)\n    .slice(2);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport {\n  currentUserActions,\n  currentUserSelectors\n} from '../../ducks/currentUser';\nimport { getDisplayName } from '../../utils/react';\n\nconst withAuthentication = WrappedComponent => {\n  class WithAuthentication extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        authUser: null\n      };\n    }\n\n    async componentDidMount() {\n      const {\n        firebase,\n        history,\n        syncCurrentUserData,\n        setCurrentUser\n      } = this.props;\n\n      this.listener = await firebase.auth.onAuthStateChanged(async authUser => {\n        if (authUser) {\n          this.unsubscribe = await syncCurrentUserData(authUser.uid);\n          this.setState({ authUser });\n          history.push(`/0/home/${authUser.uid}`);\n        } else {\n          history.push(ROUTES.SIGN_IN);\n          if (this.unsubscribe) {\n            this.unsubscribe();\n          }\n          setCurrentUser(null);\n          this.setState({ authUser: null });\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n      if (this.unsubscribe) {\n        this.unsubscribe();\n      }\n    }\n\n    render() {\n      const { currentUser } = this.props;\n      return (\n        <AuthUserContext.Provider value={currentUser}>\n          <WrappedComponent {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  WithAuthentication.displayName = `WithAuthentication(${getDisplayName(\n    WrappedComponent\n  )})`;\n\n  const mapStateToProps = state => {\n    return {\n      currentUser: currentUserSelectors.getCurrentUser(state)\n    };\n  };\n\n  const mapDispatchToProps = dispatch => ({\n    syncCurrentUserData: userId =>\n      dispatch(currentUserActions.syncCurrentUserData(userId)),\n    setCurrentUser: currentUser =>\n      dispatch(currentUserActions.setCurrentUser(currentUser))\n  });\n\n  return compose(\n    withRouter,\n    withFirebase,\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )\n  )(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport AuthUserContext from './context';\nimport * as ROUTES from '../../constants/routes';\nimport { getDisplayName } from '../../utils/react';\n\nconst withAuthorization = condition => WrappedComponent => {\n  class WithAuthorization extends Component {\n    componentDidMount() {\n      const { firebase, history } = this.props;\n      this.listener = firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          history.push(ROUTES.SIGN_IN);\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {currentUser =>\n            condition(currentUser) ? (\n              <WrappedComponent currentUser={currentUser} {...this.props} />\n            ) : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  WithAuthorization.displayName = `WithAuthorization(${getDisplayName(\n    WrappedComponent\n  )})`;\n\n  return compose(\n    withRouter,\n    withFirebase\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","export const getUsersById = state => {\n  return state.usersById;\n};\n\nexport const getUserData = (state, userId) => {\n  return state.usersById[userId];\n};\n\nexport const getUserTaskIds = (state, userId) => {\n  const { taskIds } = state.usersById[userId];\n  if (!taskIds) return [];\n  return taskIds;\n};\n\n// returns array of all users\nexport const getUsersArray = state => {\n  const { usersById } = state;\n  return Object.keys(usersById).map(userId => {\n    return {\n      userId,\n      ...usersById[userId]\n    };\n  });\n};\n\n// returns subset of users\nexport const getMembersArray = (state, memberIds) => {\n  const { usersById } = state;\n  if (!memberIds) return [];\n  return memberIds.map(memberId => usersById[memberId]);\n};\n","import * as types from './types';\n\nconst usersById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_USERS_BY_ID: {\n      const { usersById } = action;\n      return {\n        ...state,\n        ...usersById\n      };\n    }\n    case types.LOAD_USER_DATA: {\n      const { user } = action;\n      return {\n        ...state,\n        ...user\n      };\n    }\n    case types.ADD_USER: {\n      const { userId, userData } = action;\n      return {\n        ...state,\n        [userId]: {\n          userId,\n          ...userData\n        }\n      };\n    }\n    case types.REMOVE_USER: {\n      const { userId } = action;\n      const { [userId]: deletedUser, ...restOfUsers } = state;\n      return restOfUsers;\n    }\n    case types.UPDATE_USER: {\n      const { userId, userData } = action;\n      return {\n        ...state,\n        [userId]: {\n          ...state[userId],\n          ...userData\n        }\n      };\n    }\n    case types.REORDER_FOLDERS: {\n      const { userId, folderIds } = action;\n      return {\n        ...state,\n        [userId]: {\n          ...state[userId],\n          folderIds\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default usersById;\n","import React from 'react';\nimport featherIcons from '../../assets/feather/feather-sprite.svg';\n\nconst Icon = ({ name, className, width, height }) => (\n  <svg\n    className={`feather feather-${name} ${className}`}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    viewBox=\"0 0 24 24\"\n    width={width}\n    height={height}\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <use xlinkHref={`${featherIcons}#${name}`} />\n  </svg>\n);\n\nIcon.defaultProps = {\n  className: '',\n  width: 24,\n  height: 24\n};\n\nexport default Icon;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Icon } from '../Icon';\n\nconst ProjectTile = ({ projectId, name, layout, onClick, color }) => {\n  return (\n    <li className={`project-grid__tile project-grid__tile--${color}`}>\n      <Link\n        className=\"project-grid__link\"\n        to={`/0/projects/${projectId}`}\n        onClick={onClick}\n      >\n        <span className=\"project-grid__title\">{name}</span>\n        <span className=\"project-grid__icon\">\n          <Icon name={layout === 'board' ? 'trello' : 'list'} />\n        </span>\n      </Link>\n    </li>\n  );\n};\n\nexport default ProjectTile;\n","export const getProjectsById = state => {\n  return state.projectsById;\n};\n\nexport const getProjectsArray = state => {\n  const { projectsById } = state;\n  return Object.keys(projectsById).map(projectId => projectsById[projectId]);\n};\n\nexport const getProject = (state, projectId) => {\n  const { projectsById } = state;\n  return projectsById[projectId];\n};\n\nexport const getProjectTags = (state, projectId) => {\n  if (!projectId) return {};\n  const { projectsById } = state;\n  return projectsById[projectId].tags;\n};\n\nexport const getProjectName = (state, projectId) => {\n  if (!projectId) return '';\n  const { projectsById } = state;\n  const project = projectsById[projectId];\n  if (!project) return null;\n  return project.name;\n};\n\nexport const getProjectColor = (state, projectId) => {\n  if (!projectId) return null;\n  const { projectsById } = state;\n  const project = projectsById[projectId];\n  if (!project) return null;\n  return project.color;\n};\n\nexport const getProjectLoadedState = (state, projectId) => {\n  if (!projectId) return '';\n  const { projectsById } = state;\n  return projectsById[projectId].isLoaded;\n};\n\nexport const getProjectLists = (state, projectId) => {\n  const { projectsById, listsById } = state;\n  if (!projectsById || !listsById || !projectId) return [];\n  const { listIds } = projectsById[projectId];\n  return listIds.map(listId => listsById[listId]);\n};\n\nexport const getTempProjectSettings = (state, projectId) => {\n  const { projectsById } = state;\n  const { tempSettings } = projectsById[projectId];\n  return tempSettings;\n};","import * as types from './types';\n\nconst projectsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_PROJECTS_BY_ID: {\n      const { projectsById } = action;\n      return {\n        ...state,\n        ...projectsById\n      };\n    }\n    case types.LOAD_PROJECT: {\n      const { projectId, projectData } = action;\n      return {\n        ...state,\n        [projectId]: {\n          projectId,\n          ...projectData\n        }\n      };\n    }\n    case types.ADD_PROJECT: {\n      const { projectId, projectData } = action;\n      const { listIds, settings } = projectData;\n      const listCount = listIds.length;\n      return {\n        ...state,\n        [projectId]: {\n          projectId,\n          isLoaded: {\n            subtasks: listCount === 0,\n            tasks: listCount === 0,\n            lists: listCount === 0\n          },\n          tempSettings: {\n            tasks: { ...settings.tasks }\n          },\n          ...projectData\n        }\n      };\n    }\n    case types.REMOVE_PROJECT: {\n      const { projectId } = action;\n      const { [projectId]: deletedProject, ...restOfProjects } = state;\n      return restOfProjects;\n    }\n    case types.UPDATE_PROJECT: {\n      const { projectId, projectData } = action;\n      return {\n        ...state,\n        [projectId]: {\n          ...state[projectId],\n          ...projectData\n        }\n      };\n    }\n    case types.SET_PROJECT_LOADED_STATE: {\n      const { projectId, key } = action;\n      return {\n        ...state,\n        [projectId]: {\n          ...state[projectId],\n          isLoaded: {\n            ...state[projectId].isLoaded,\n            [key]: true\n          }\n        }\n      };\n    }\n    case types.REORDER_LISTS: {\n      const { projectId, listIds } = action;\n      return {\n        ...state,\n        [projectId]: {\n          ...state[projectId],\n          listIds\n        }\n      };\n    }\n    case types.UPDATE_PROJECT_TAGS: {\n      const { projectId, tags } = action;\n      return {\n        ...state,\n        [projectId]: {\n          ...state[projectId],\n          tags: {\n            ...tags\n          }\n        }\n      };\n    }\n    case types.SET_TEMP_PROJECT_SETTINGS: {\n      const { projectId, view, sortBy } = action;\n      return {\n        ...state,\n        [projectId]: {\n          ...state[projectId],\n          tempSettings: {\n            ...state[projectId].tempSettings,\n            tasks: {\n              ...state[projectId].tempSettings.tasks,\n              view: view || state[projectId].tempSettings.tasks.view,\n              sortBy: sortBy || state[projectId].tempSettings.tasks.sortBy\n            }\n          }\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default projectsById;\n","export const SELECT_PROJECT = 'SELECT_PROJECT';\n\nexport const selectProject = projectId => {\n  return {\n    type: SELECT_PROJECT,\n    projectId\n  };\n};\n\nconst INITIAL_STATE = null;\n\nexport const selectedProject = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SELECT_PROJECT:\n      return action.projectId;\n    default:\n      return state;\n  }\n};\n\nexport const getSelectedProjectId = state => state.selectedProject;\n\nexport const getSelectedProject = state => {\n  const { selectedProject: projectId, projectsById } = state;\n  return projectsById[projectId];\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ProjectTile from './ProjectTile';\nimport './ProjectGrid.scss';\nimport { projectSelectors } from '../../ducks/projects';\nimport { selectProject as selectProjectAction } from '../../ducks/selectedProject';\nimport { Icon } from '../Icon';\nimport { currentUserSelectors } from '../../ducks/currentUser';\n\nconst ProjectGrid = ({\n  projects,\n  selectProject,\n  className,\n  openProjectComposer\n}) => (\n  <ul className={`project-grid ${className}`}>\n    {projects.map(project => (\n      <ProjectTile\n        key={project.projectId}\n        layout={project.layout}\n        name={project.name}\n        color={project.color}\n        projectId={project.projectId}\n        onClick={() => selectProject(project.projectId)}\n      />\n    ))}\n    <button\n      type=\"button\"\n      className=\"project-grid__tile project-grid__btn--add\"\n      onClick={openProjectComposer}\n    >\n      <span className=\"project-grid__btn--text\">Create project</span>\n      <Icon name=\"plus\" />\n    </button>\n  </ul>\n);\n\nProjectGrid.defaultProps = {\n  className: ''\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    projectsById: projectSelectors.getProjectsById(state),\n    projects: projectSelectors.getProjectsArray(state),\n    userId: currentUserSelectors.getCurrentUserId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectProject: projectId => dispatch(selectProjectAction(projectId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ProjectGrid);\n","import React, { Component } from 'react';\nimport { getDisplayName } from '../../utils/react';\n\nconst withOutsideClick = WrappedComponent => {\n  class WithOutsideClick extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        isTouchEnabled: false\n      };\n    }\n\n    componentDidMount() {\n      document.addEventListener('touchstart', this.handleTouch);\n      document.addEventListener('click', this.handleOutsideClick, false);\n    }\n\n    componentWillUnmount() {\n      const { isTouchEnabled } = this.state;\n      if (isTouchEnabled) {\n        document.removeEventListener('touchstart', this.handleOutsideClick);\n      } else {\n        document.removeEventListener('click', this.handleOutsideClick);\n        document.removeEventListener('touchstart', this.handleTouch);\n      }\n    }\n\n    handleTouch = () => {\n      this.setState({\n        isTouchEnabled: true\n      });\n      // if touch is detected, listen for touch events instead of click events\n      // to improve detection on touch devices\n      // remove touch handler to prevent unnecessary refires\n      document.removeEventListener('touchstart', this.handleTouch);\n      // remove outside click handler from click events\n      document.removeEventListener('click', this.handleOutsideClick);\n      // reattach outside click handler to touchstart events\n      document.addEventListener('touchstart', this.handleOutsideClick);\n    };\n\n    setRef = ref => {\n      this.component = ref;\n    };\n\n    setInstance = ref => {\n      this.instance = ref;\n    };\n\n    handleOutsideClick = e => {\n      if (!this.component) {\n        throw new Error('Must set component ref to prop innerRef!');\n      }\n      if (\n        this.component.contains(e.target) ||\n        (!this.instance.onOutsideClick && !this.props.onOutsideClick)\n      )\n        return;\n      if (this.instance.onOutsideClick) {\n        this.instance.onOutsideClick(e);\n      } else {\n        const { onOutsideClick } = this.props;\n        if (onOutsideClick) {\n          onOutsideClick(e);\n        }\n      }\n      e.stopPropagation();\n    };\n\n    render() {\n      return (\n        <WrappedComponent\n          ref={this.setInstance}\n          innerRef={this.setRef}\n          {...this.props}\n        />\n      );\n    }\n  }\n  WithOutsideClick.displayName = `WithOutsideClick(${getDisplayName(\n    WrappedComponent\n  )})`;\n  return WithOutsideClick;\n};\n\nexport default withOutsideClick;\n","import React, { Component } from 'react';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { withOutsideClick } from '../withOutsideClick';\nimport './Modal.scss';\n\nclass Modal extends Component {\n  static defaultProps = {\n    onModalClick: () => null,\n    onOutsideClick: () => null\n  }\n  \n  onOutsideClick = e => {\n    const { onOutsideClick, onModalClose } = this.props;\n    if (onOutsideClick) {\n      onOutsideClick(e);\n    } else {\n      onModalClose(e);\n    }\n  };\n\n  render() {\n    const {\n      onModalClose,\n      children,\n      onModalClick,\n      size = 'md',\n      classes,\n      id,\n      innerRef\n    } = this.props;\n    return (\n      <div className={`modal ${classes.modal || ''}`} onClick={onModalClick}>\n        <div\n          id={id}\n          ref={innerRef}\n          className={`modal__content ${\n            classes.content || ''\n          } modal__content--${size}`}\n        >\n          <Button\n            type=\"button\"\n            className={`modal__btn--close ${\n            classes.button || ''\n          }`}\n            onClick={onModalClose}\n            iconOnly\n          >\n            <Icon name=\"x\" />\n          </Button>\n          {children}\n        </div>\n      </div>\n    );\n  }\n}\n\nModal.defaultProps = {\n  classes: {\n    modal: '',\n    content: '',\n    button: ''\n  }\n};\n\nexport default withOutsideClick(Modal);\n","import React from 'react';\n\nconst Radio = ({\n  classes = { radio: '', label: '' },\n  name,\n  id,\n  value,\n  onFocus,\n  onChange,\n  onInput,\n  isRequired,\n  onBlur,\n  inputRef,\n  hideLabel,\n  label,\n  onKeyDown,\n  isChecked,\n  ...rest\n}) => {\n  return (\n    <>\n      <input\n        className={`radio ${classes.radio}`}\n        id={id}\n        name={name}\n        type=\"radio\"\n        value={value}\n        onFocus={onFocus}\n        onChange={onChange}\n        onBlur={onBlur}\n        ref={inputRef}\n        onInput={onInput}\n        onKeyDown={onKeyDown}\n        required={isRequired}\n        checked={isChecked}\n        {...rest}\n      />\n      {!hideLabel && (\n        <label htmlFor={id} className={`radio__label ${classes.label}`}>\n          {label}\n        </label>\n      )}\n    </>\n  );\n};\n\nexport default Radio;\n","import React, { Component } from 'react';\nimport { Radio } from '../Radio';\nimport { withOutsideClick } from '../withOutsideClick';\nimport './ColorPicker.scss';\n\nclass ColorPicker extends Component {\n  static defaultProps = {\n    classes: {\n      colorPicker: ''\n    }\n  };\n\n  state = {\n    selectedColor: 'default'\n  };\n\n  handleColorChange = e => {\n    const { selectColor, onChange } = this.props;\n    this.setState({\n      selectedColor: e.target.value\n    });\n    if (onChange) {\n      onChange(e);\n    } else {\n      selectColor(e.target.value);\n    }\n  };\n\n  render() {\n    const { style, isActive, classes, innerRef } = this.props;\n    const { selectedColor } = this.state;\n    return (\n      <div ref={innerRef} className={`color-picker ${classes.colorPicker || ''}`} style={{display: isActive ? 'block' : 'none', ...style}}>\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--default'\n          }}\n          name=\"color\"\n          id=\"colorDefault\"\n          value=\"default\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'default'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--red'\n          }}\n          name=\"color\"\n          id=\"colorRed\"\n          value=\"red\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'red'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--pink'\n          }}\n          name=\"color\"\n          id=\"colorPink\"\n          value=\"pink\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'pink'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--grape'\n          }}\n          name=\"color\"\n          id=\"colorGrape\"\n          value=\"grape\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'grape'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--violet'\n          }}\n          name=\"color\"\n          id=\"colorViolet\"\n          value=\"violet\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'violet'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--indigo'\n          }}\n          name=\"color\"\n          id=\"colorIndigo\"\n          value=\"indigo\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'indigo'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--blue'\n          }}\n          name=\"color\"\n          id=\"colorBlue\"\n          value=\"blue\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'blue'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--cyan'\n          }}\n          name=\"color\"\n          id=\"colorCyan\"\n          value=\"cyan\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'cyan'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--teal'\n          }}\n          name=\"color\"\n          id=\"colorTeal\"\n          value=\"teal\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'teal'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--green'\n          }}\n          name=\"color\"\n          id=\"colorGreen\"\n          value=\"green\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'green'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--yellow'\n          }}\n          name=\"color\"\n          id=\"colorYellow\"\n          value=\"yellow\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'yellow'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--orange'\n          }}\n          name=\"color\"\n          id=\"colorOrange\"\n          value=\"orange\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'orange'}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withOutsideClick(ColorPicker);","import React from 'react';\nimport './ProjectIcon.scss';\n\nconst ProjectIcon = ({ className, color }) => (\n  <span className={`project-icon project-icon--${color} ${className}`} />\n);\n\nProjectIcon.defaultProps = {\n  className: '',\n  color: 'default'\n};\n\nexport default ProjectIcon;\n","import React, { Component } from 'react';\nimport './Avatar.scss';\nimport { fromJSON } from 'tough-cookie';\n\nexport default class Avatar extends Component {\n  static defaultProps = {\n    imgSrc: null,\n    classes: {\n      avatar: '',\n      img: '',\n      placeholder: ''\n    },\n    size: 'md',\n    variant: 'circle',\n    name: 'Guest'\n  };\n\n  getUserInitials = fullName => {\n    return fullName\n      .split(' ')\n      .map(name => name.charAt(0))\n      .join('')\n      .toUpperCase();\n  };\n\n  render() {\n    const {\n      imgSrc,\n      imgProps,\n      classes,\n      name,\n      variant,\n      color,\n      size\n    } = this.props;\n    return (\n      <div\n        className={`avatar avatar--${size} avatar--${variant} ${\n          classes.avatar\n        }`}\n      >\n        {imgSrc !== null ? (\n          <img\n            src={imgSrc}\n            alt={name}\n            className={`avatar__img ${classes.img}`}\n            {...imgProps}\n          />\n        ) : (\n          <div\n            className={`avatar__placeholder ${classes.placeholder}`}\n            style={{ backgroundColor: color }}\n          >\n            {this.getUserInitials(name)}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","export const BACKSPACE = 'Backspace';\nexport const ENTER = 'Enter';\nexport const TAB = 'Tab';\nexport const ARROW_DOWN = 'ArrowDown';\nexport const ARROW_UP = 'ArrowUp';\n","import React, { Component } from 'react';\n\nimport { Input } from '../Input';\nimport { Avatar } from '../Avatar';\nimport { Icon } from '../Icon';\nimport { withOutsideClick } from '../withOutsideClick';\nimport * as keys from '../../constants/keys';\nimport './MemberSearch.scss';\n\nclass MemberSearch extends Component {\n  static defaultProps = {\n    style: null,\n    anchor: null,\n    classes: {\n      avatar: '',\n      avatarPlaceholder: '',\n      wrapper: '',\n      input: '',\n      list: '',\n      item: '',\n      info: '',\n      noMatch: ''\n    },\n    placeholder: '',\n    type: 'text',\n    query: null\n  };\n\n  state = {\n    query: '',\n    isActive: false,\n    selectedMember: '',\n    selectedIndex: null,\n    filteredList: this.props.users\n  };\n\n  componentDidMount() {\n    const { type } = this.props;\n    if (type === 'hidden') return;\n    this.inputEl.focus();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { type, query } = this.props;\n    if (type === 'hidden' && query && query !== prevProps.query) {\n      this.updateList(query);\n    }\n  }\n\n  onOutsideClick = e => {\n    if (this.props.query) return;\n    if (this.state.query !== '') return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  matchUser = (user, query) => {\n    if (query === '') return false;\n    const { name, email, username } = user;\n    const regExp = new RegExp(query, 'i');\n    return regExp.test(name) || regExp.test(email) || regExp.test(username);\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({\n      query: '',\n      isActive: false,\n      selectedMember: '',\n      selectedIndex: null,\n      filteredList: this.props.users\n    });\n  };\n\n  onChange = e => {\n    const query = e.target.value;\n    this.updateList(query);\n  };\n\n  updateList = query => {\n    const { users } = this.props;\n    const { selectedMember } = this.state;\n    const filteredList = users.filter(user => this.matchUser(user, query));\n    const newIndex = filteredList.indexOf(selectedMember);\n    const persistSelectedMember = newIndex !== -1;\n\n    this.setState({\n      selectedMember: persistSelectedMember\n        ? selectedMember\n        : filteredList.length > 0\n        ? filteredList[0].userId\n        : '',\n      selectedIndex: persistSelectedMember ? newIndex : 0,\n      query,\n      filteredList\n    });\n  };\n\n  onKeyDown = e => {\n    if (\n      e.key !== keys.TAB &&\n      e.key !== keys.ARROW_DOWN &&\n      e.key !== keys.ARROW_UP &&\n      e.key !== keys.ENTER\n    )\n      return;\n\n    const { filteredList, selectedIndex, selectedMember } = this.state;\n    const nextIndex =\n      selectedIndex === filteredList.length - 1 ? 0 : selectedIndex + 1;\n    const prevIndex =\n      selectedIndex === 0 ? filteredList.length - 1 : selectedIndex - 1;\n\n    // eslint-disable-next-line default-case\n    switch (e.key) {\n      case keys.ARROW_DOWN:\n      // eslint-disable-next-line no-fallthrough\n      case keys.TAB: {\n        this.setState({\n          selectedMember: filteredList[nextIndex].userId,\n          selectedIndex: nextIndex\n        });\n        break;\n      }\n      case keys.ARROW_UP: {\n        this.setState({\n          selectedMember: filteredList[prevIndex].userId,\n          selectedIndex: prevIndex\n        });\n        break;\n      }\n      case keys.ENTER: {\n        if (selectedMember === '') return;\n        this.selectMember(selectedMember, e);\n        break;\n      }\n    }\n\n    e.preventDefault();\n  };\n\n  selectMember = (memberId, e) => {\n    const { onSelectMember, onClose } = this.props;\n    onSelectMember(memberId, e);\n    if (onClose) {\n      onClose(e);\n    }\n  };\n\n  render() {\n    const {\n      assignedMembers,\n      style,\n      classes,\n      placeholder,\n      type,\n      innerRef,\n      anchor\n    } = this.props;\n    const { filteredList, selectedMember } = this.state;\n    const query = type === 'hidden' ? this.props.query : this.state.query;\n    const isActive =\n      type === 'hidden' ? this.props.isActive : this.state.isActive;\n    const position = {};\n    if (anchor) {\n      const anchorRect = anchor.getBoundingClientRect();\n      position.top = anchorRect.top;\n      position.left = anchorRect.left;\n    }\n\n    return (\n      <div\n        className={`member-search__wrapper ${classes.wrapper || ''}`}\n        ref={innerRef}\n        style={{ ...position, ...style }}\n      >\n        <Input\n          name=\"query\"\n          className={`member-search ${classes.input || ''}`}\n          onChange={this.onChange}\n          value={query}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          type={type}\n          autoComplete=\"off\"\n          hideLabel\n          placeholder={placeholder}\n          onKeyDown={this.onKeyDown}\n          innerRef={el => (this.inputEl = el)}\n        />\n        {isActive && (\n          <ul className={`member-search__list ${classes.list || ''}`}>\n            {filteredList.length > 0 ? (\n              filteredList.map((user, i) => {\n                const { name, photoURL, email, username, userId } = user;\n                const isAssigned =\n                  assignedMembers && assignedMembers.indexOf(userId) !== -1;\n                return (\n                  <li\n                    className={`member-search__item ${classes.item || ''} ${\n                      selectedMember === userId ? 'is-selected' : ''\n                    }`}\n                    onClick={e => this.selectMember(userId, e)}\n                    key={userId}\n                    id={userId}\n                  >\n                    <Icon name={isAssigned ? 'user-minus' : 'user-plus'} />\n                    <Avatar\n                      classes={{\n                        avatar: `member-search__avatar--sm ${classes.avatar ||\n                          ''}`,\n                        placeholder: `member-search__avatar-placeholder--sm ${classes.avatarPlaceholder ||\n                          ''}`\n                      }}\n                      name={name}\n                      size=\"sm\"\n                      variant=\"circle\"\n                      imgSrc={photoURL}\n                    />\n                    <span\n                      className={`member-search__info member-search__name ${classes.info ||\n                        ''}`}\n                    >\n                      {name}\n                    </span>\n                    <span\n                      className={`member-search__info member-search__username ${classes.info ||\n                        ''}`}\n                    >\n                      {username}\n                    </span>\n                    <span\n                      className={`member-search__info member-search__email ${classes.info ||\n                        ''}`}\n                    >\n                      {email}\n                    </span>\n                  </li>\n                );\n              })\n            ) : (\n              <li className={`member-search__item ${classes.item || ''}`}>\n                <span\n                  className={`member-search__no-match ${classes.noMatch || ''}`}\n                >\n                  No matches found\n                </span>\n              </li>\n            )}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withOutsideClick(MemberSearch);\n","import React, { Component } from 'react';\n\nexport default class Popover extends Component {\n\n  render() {\n    const { className, onClick, style, children, isVisible } = this.props;\n    return (\n      <div className={`popover ${className}`} onClick={onClick} style={{...style, display: isVisible ? 'block' : 'none'}}>\n        {children}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from '../Button';\nimport Popover from './Popover';\nimport { withOutsideClick } from '../withOutsideClick';\nimport './Popover.scss';\n\nclass PopoverWrapper extends Component {\n  state = {\n    isActive: 'isActive' in this.props ? null : false\n  };\n\n  static defaultProps = {\n    classes: {\n      wrapper: '',\n      popover: ''\n    },\n    buttonProps: {},\n    align: {\n      outer: 'left',\n      inner: 'left'\n    },\n    anchorEl: null\n  };\n\n  onOutsideClick = e => {\n    const { onOutsideClick, onPopoverClose } = this.props;\n\n    if (onOutsideClick) {\n      onOutsideClick(e);\n    } else {\n\n      this.setState({\n        isActive: false\n      });\n\n      if (onPopoverClose) {\n        onPopoverClose(e);\n      }\n    }\n  };\n\n  toggleOpen = () => {\n    this.setState(prevState => ({\n      isActive: !prevState.isActive\n    }));\n  };\n\n  handleClose = e => {\n    if ('isActive' in this.props) return;\n    if (e.target.matches('input')) return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const {\n      children,\n      align,\n      onWrapperClick,\n      buttonProps,\n      classes,\n      anchorEl,\n      innerRef\n    } = this.props;\n    const isActive =\n      'isActive' in this.props ? this.props.isActive : this.state.isActive;\n\n    let popoverWrapperStyle = null;\n\n    if (anchorEl) {\n      const { offsetTop, offsetLeft } = anchorEl;\n      popoverWrapperStyle = {\n        position: 'absolute',\n        top: offsetTop,\n        [align.outer || 'left']: offsetLeft\n      };\n    }\n\n    return (\n      <div\n        className={`popover-wrapper ${isActive ? 'is-active' : ''} ${\n          classes.wrapper\n        }`}\n        ref={innerRef}\n        style={popoverWrapperStyle}\n        onClick={onWrapperClick}\n      >\n        <Button\n          type=\"button\"\n          onClick={this.toggleOpen}\n          {...buttonProps}\n        />\n          <Popover\n            isVisible={isActive}\n            className={`align-${align.inner || 'left'} ${classes.popover}`}\n            onClick={this.handleClose}\n          >\n            {children}\n          </Popover>\n      </div>\n    );\n  }\n}\n\nexport default withOutsideClick(PopoverWrapper);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon } from '../Icon';\nimport { Avatar } from '../Avatar';\nimport { MemberSearch } from '../MemberSearch';\nimport { PopoverWrapper } from '../Popover';\nimport { userSelectors } from '../../ducks/users';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport './MemberAssigner.scss';\n\nclass MemberAssigner extends Component {\n  static defaultProps = {\n    classes: {\n      memberAssigner: '',\n      avatar: '',\n      avatarPlaceholder: '',\n      popover: '',\n      popoverWrapper: ''\n    },\n    placeholder: '',\n    memberSearchIsDisabled: false\n  };\n\n  state = {\n    isMemberSearchActive: false\n  };\n\n  toggleMemberSearch = () => {\n    this.setState(prevState => ({\n      isMemberSearchActive: !prevState.isMemberSearchActive\n    }));\n  };\n\n  hideMemberSearch = e => {\n    this.setState({\n      isMemberSearchActive: false\n    });\n  };\n\n  render() {\n    const {\n      members,\n      onSelectMember,\n      classes,\n      memberIds,\n      users,\n      placeholder,\n      memberSearchIsDisabled\n    } = this.props;\n    const { isMemberSearchActive } = this.state;\n\n    return (\n      <div className={`member-assigner ${classes.memberAssigner || ''}`}>\n        <div className={`member-assigner__members ${classes.members || ''}`}>\n          {members.map(member => (\n            <Avatar\n              classes={{\n                avatar: `member-assigner__avatar ${classes.avatar || ''}`,\n                placeholder: `member-assigner__avatar-placeholder ${classes.avatarPlaceholder ||\n                  ''}`\n              }}\n              name={member.name}\n              size=\"sm\"\n              variant=\"circle\"\n              imgSrc={member.photoURL}\n              key={member.userId}\n            />\n          ))}\n        </div>\n        {!memberSearchIsDisabled && (\n          <PopoverWrapper\n            isActive={isMemberSearchActive}\n            onOutsideClick={this.hideMemberSearch}\n            classes={{\n              wrapper: `member-assigner__popover-wrapper ${classes.popoverWrapper ||\n                ''}`,\n              popover: `member-assigner__popover ${classes.popover || ''}`\n            }}\n            buttonProps={{\n              size: 'md',\n              iconOnly: true,\n              className: `member-assigner__btn--toggle-member-search ${\n                classes.button\n              } ${isMemberSearchActive ? 'is-active' : ''}`,\n              children: <Icon name=\"plus\" />,\n              onClick: this.toggleMemberSearch\n            }}\n          >\n            {isMemberSearchActive && (\n              <div className=\"member-assigner__search-container\">\n                <div className=\"member-assigner__icon-wrapper\">\n                  <Icon name=\"users\" />\n                </div>\n                <MemberSearch\n                  users={users}\n                  placeholder={placeholder}\n                  assignedMembers={memberIds}\n                  onSelectMember={onSelectMember}\n                  classes={{\n                    wrapper: 'member-assigner__search-wrapper',\n                    input: 'member-assigner__input',\n                    list: 'member-assigner__list'\n                  }}\n                />\n              </div>\n            )}\n          </PopoverWrapper>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    userId: currentUserSelectors.getCurrentUserId(state),\n    users: userSelectors.getUsersArray(state),\n    members: userSelectors.getMembersArray(state, ownProps.memberIds)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MemberAssigner);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withFirebase } from '../Firebase';\nimport { Modal } from '../Modal';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\nimport { Radio } from '../Radio';\nimport { Icon } from '../Icon';\nimport { ColorPicker } from '../ColorPicker';\nimport { ProjectIcon } from '../ProjectIcon';\nimport { MemberAssigner } from '../MemberAssigner';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport './ProjectComposer.scss';\n\nclass ProjectComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      notes: '',\n      layout: 'board',\n      color: 'default',\n      privacy: 'public',\n      memberIds: [props.userId],\n      isColorPickerActive: false\n    };\n  }\n\n  reset = () => {\n    const { userId } = this.props;\n    this.setState({\n      name: '',\n      notes: '',\n      layout: 'board',\n      color: 'default',\n      privacy: 'public',\n      memberIds: [userId],\n      isColorPickerActive: false\n    });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { name, notes, color, layout, privacy, memberIds } = this.state;\n    const isPrivate = privacy === 'private';\n    const { onClose, firebase, userId } = this.props;\n    firebase.addProject({\n      userId,\n      name,\n      color,\n      layout,\n      isPrivate,\n      memberIds,\n      notes\n    });\n    onClose();\n    this.reset();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  toggleColorPicker = () => {\n    this.setState(prevState => ({\n      isColorPickerActive: !prevState.isColorPickerActive\n    }));\n  };\n\n  hideColorPicker = () => {\n    const { isColorPickerActive } = this.state;\n    if (!isColorPickerActive) return;\n    this.setState({\n      isColorPickerActive: false\n    });\n  };\n\n  onColorPickerOutsideClick = e => {\n    const { isColorPickerActive } = this.state;\n    if (\n      isColorPickerActive &&\n      !e.target.matches('.project-composer__btn--toggle-color-picker')\n    ) {\n      this.hideColorPicker();\n    }\n  };\n\n  handleMemberAssignment = (userId, e) => {\n    const { memberIds } = this.state;\n    if (memberIds.includes(userId)) {\n      this.setState(prevState => ({\n        memberIds: prevState.memberIds.filter(memberId => memberId !== userId)\n      }));\n    } else {\n      this.setState(prevState => ({\n        memberIds: [...prevState.memberIds, userId]\n      }));\n    }\n    e.preventDefault();\n  };\n\n  render() {\n    const {\n      name,\n      notes,\n      layout,\n      privacy,\n      color,\n      memberIds,\n      isColorPickerActive\n    } = this.state;\n\n    const settings = {\n      privacy: {\n        options: [\n          {\n            value: 'public',\n            label: 'Public'\n          },\n          {\n            value: 'private',\n            label: 'Private'\n          }\n        ]\n      },\n      layout: {\n        options: [\n          {\n            value: 'board',\n            label: (\n              <>\n                <Icon name=\"trello\" />\n                Board\n              </>\n            )\n          },\n          {\n            value: 'list',\n            label: (\n              <>\n                <Icon name=\"list\" />\n                List\n              </>\n            )\n          }\n        ]\n      }\n    };\n\n    return (\n      <Modal\n        onModalClose={this.props.onClose}\n        size=\"md\"\n        classes={{ content: 'project-composer' }}\n      >\n        <h3 className=\"project-composer__heading\">Create new project</h3>\n        <form className=\"project-composer__form\" onSubmit={this.onSubmit}>\n          <Input\n            name=\"name\"\n            label=\"Project Name\"\n            labelClass=\"project-composer__label\"\n            value={name}\n            onChange={this.onChange}\n            type=\"text\"\n            className=\"project-composer__input--name\"\n          />\n          <div className=\"project-composer__settings\">\n            <div className=\"project-composer__control-group project-composer__control-group--color\">\n              <h4 className=\"project-composer__subheading\">Highlight Color</h4>\n              <Button\n                onClick={this.toggleColorPicker}\n                className={`project-composer__btn--toggle-color-picker ${\n                  isColorPickerActive ? 'is-active' : ''\n                }`}\n              >\n                <ProjectIcon\n                  className=\"project-composer__color-swatch\"\n                  color={color}\n                />\n                <Icon name=\"chevron-down\" />\n              </Button>\n              <ColorPicker\n                onOutsideClick={this.onColorPickerOutsideClick}\n                isActive={isColorPickerActive}\n                onChange={this.onChange}\n                classes={{ colorPicker: 'project-composer__color-picker' }}\n              />\n            </div>\n          </div>\n          <div className=\"project-composer__control-group\">\n            <h4 className=\"project-composer__subheading\">Privacy</h4>\n            {settings.privacy.options.map(option => (\n              <Radio\n                key={option.value}\n                onChange={this.onChange}\n                isChecked={privacy === option.value}\n                label={option.label}\n                name=\"privacy\"\n                id={option.value}\n                value={option.value}\n                classes={{\n                  radio: 'project-composer__radio',\n                  label: 'project-composer__radio-label'\n                }}\n              />\n            ))}\n          </div>\n          {privacy === 'public' && (\n            <div className=\"project-composer__control-group\">\n              <h4 className=\"project-composer__subheading\">Members</h4>\n              <MemberAssigner\n                placeholder=\"Add or remove member\"\n                memberIds={memberIds}\n                onSelectMember={this.handleMemberAssignment}\n              />\n            </div>\n          )}\n          <div className=\"project-composer__control-group\">\n            <h4 className=\"project-composer__subheading\">Layout</h4>\n            {settings.layout.options.map(option => (\n              <Radio\n                key={option.value}\n                onChange={this.onChange}\n                isChecked={layout === option.value}\n                label={option.label}\n                name=\"layout\"\n                id={option.value}\n                value={option.value}\n                classes={{\n                  radio: 'project-composer__radio',\n                  label: 'project-composer__radio-label'\n                }}\n              />\n            ))}\n          </div>\n          <Button\n            className=\"project-composer__btn--add\"\n            type=\"submit\"\n            onClick={this.onSubmit}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Create Project\n          </Button>\n        </form>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    userId: currentUserSelectors.getCurrentUserId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ProjectComposer)\n);\n","export const LIST = 'LIST';\nexport const TASK = 'TASK';\nexport const SUBTASK = 'SUBTASK';\nexport const FOLDER = 'FOLDER';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input } from '../Input';\nimport { Icon } from '../Icon';\nimport { withAuthorization } from '../Session';\nimport { projectSelectors } from '../../ducks/projects';\nimport { Button } from '../Button';\nimport './ListComposer.scss';\n\nclass ListComposer extends Component {\n  state = {\n    name: ''\n  };\n\n  clear = () => {\n    this.setState({ name: '' });\n  };\n\n  reset = () => {\n    this.clear();\n    const { toggle } = this.props;\n    this.input.blur();\n    toggle();\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { name } = this.state;\n    const { projectId, firebase } = this.props;\n    firebase.addList({ projectId, name });\n    this.clear();\n  };\n\n  onChange = e => {\n    this.setState({\n      name: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    const { toggle } = this.props;\n    toggle(e);\n    if (e.target.matches('button')) {\n      this.input.focus();\n    }\n  };\n\n  onBlur = e => {\n    const { name } = this.state;\n    if (name !== '') return;\n    const { toggle } = this.props;\n    toggle(e);\n  };\n\n  inputRef = ref => {\n    this.input = ref;\n    const { inputRef } = this.props;\n    inputRef(ref);\n  };\n\n  render() {\n    const { name } = this.state;\n    const { layout, isActive } = this.props;\n    return (\n      <div\n        className={`list-composer${isActive ? ' is-active' : ''} is-${layout}-layout`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"list-composer__form\" onSubmit={this.onSubmit}>\n        {!isActive && layout === \"list\" && (\n        <Button onClick={this.onFocus} color=\"primary\" className=\"list-composer__btn--icon\" iconOnly>\n          <Icon name=\"plus-circle\" />\n        </Button>\n        )\n        }\n          <Input\n            innerRef={this.inputRef}\n            onChange={this.onChange}\n            value={name}\n            placeholder={isActive ? 'Enter list name...' : 'Add a list'}\n            required\n            name=\"name\"\n            hideLabel\n            className=\"list-composer__input\"\n          />\n          {isActive && (\n            <div className=\"list-composer__footer\">\n              <Button\n                className=\"list-composer__btn list-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n                size=\"sm\"\n              >\n                Add List\n              </Button>\n              {layout === \"board\" &&\n              <Button\n                className=\"list-composer__btn list-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.reset}\n                size=\"sm\"\n              >\n                Cancel\n              </Button>\n              }\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    projectsById: projectSelectors.getProjectsById(state),\n    projectsArray: projectSelectors.getProjectsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListComposer)\n);\n","import React from 'react';\nimport './Toolbar.scss';\n\nconst Toolbar = ({ className, children, isActive, ...props }) => (\n  <div\n    className={`toolbar ${className} ${isActive ? 'is-active' : ''} `}\n    {...props}\n  >\n    {children}\n  </div>\n);\n\nToolbar.defaultProps = {\n  className: '',\n  isActive: true\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport './Menu.scss';\n\nconst Menu = ({ children, onClick, className = '', menuRef }) => {\n  return (\n    <ul className={`menu ${className}`} onClick={onClick} ref={menuRef}>\n      {children}\n    </ul>\n  );\n};\n\nexport default Menu;\n","import React from 'react';\nimport './Menu.scss';\n\nconst MenuItem = ({ children, className = '' }) => {\n  return <li className={`menu__item ${className}`}>{children}</li>;\n};\n\nexport default MenuItem;\n","import React from 'react';\nimport { PopoverWrapper } from '../Popover';\nimport { Icon } from '../Icon';\nimport { Radio } from '../Radio';\nimport { Button } from '../Button';\nimport { Menu, MenuItem } from '../Menu';\nimport './TaskSettings.scss';\n\nconst TaskSettings = ({\n  onToggle,\n  onClose,\n  onSave,\n  isVisible,\n  filters,\n  sortRule,\n  classes\n}) => (\n  <PopoverWrapper\n    isActive={isVisible}\n    onOutsideClick={onClose}\n    classes={{\n      wrapper: `task-settings__wrapper ${classes.wrapper || ''}`,\n      popover: `task-settings ${classes.popover || ''}`\n    }}\n    align={{ inner: 'right' }}\n    buttonProps={{\n      size: 'sm',\n      iconOnly: true,\n      className: `task-settings__btn ${classes.button || ''}`,\n      children: <Icon name=\"sliders\" />,\n      onClick: onToggle\n    }}\n  >\n    <Button\n      type=\"button\"\n      className=\"task-settings__btn--close\"\n      size=\"sm\"\n      onClick={onClose}\n      iconOnly\n    >\n      <Icon name=\"x\" />\n    </Button>\n    <Menu className={classes.menu || ''}>\n      {filters &&\n        filters.map(filter => (\n          <MenuItem className={classes.item || ''} key={filter.filter}>\n            {filter.filter}\n            <Menu className={`${filter.filter}__options`}>\n              {filter.options.map(filterOption => (\n                <MenuItem\n                  key={filterOption.value}\n                  className={`filter__option ${filter.filter}__option`}\n                >\n                  <Radio\n                    name={filter.filter}\n                    id={filterOption.value}\n                    value={filterOption.value}\n                    isChecked={filterOption.value === filter.value}\n                    label={filterOption.name}\n                    onChange={filter.onChange}\n                    classes={{\n                      radio: `filter__radio ${filter.filter}__radio`,\n                      label: `filter__label ${filter.filter}__label`\n                    }}\n                  />\n                </MenuItem>\n              ))}\n            </Menu>\n          </MenuItem>\n        ))}\n      {sortRule && (\n        <MenuItem className={classes.item || ''}>\n          Sort by\n          <PopoverWrapper\n            isActive={sortRule.isDropdownVisible}\n            onOutsideClick={sortRule.hideDropdown}\n            classes={{\n              wrapper: 'sort-rule__dropdown-wrapper',\n              popover: 'sort-rule__dropdown'\n            }}\n            buttonProps={{\n              className: `sort-rule__btn-dropdown ${\n                sortRule.isDropdownActive ? 'is-active' : ''\n              }`,\n              size: 'sm',\n              children: (\n                <>\n                  {\n                    sortRule.options.find(\n                      option => option.value === sortRule.value\n                    ).name\n                  }\n                  <Icon name=\"chevron-down\" />\n                </>\n              ),\n              onClick: sortRule.toggleDropdown\n            }}\n          >\n            <Menu className=\"sort-options\">\n              {sortRule.options &&\n                sortRule.options.map(sortOption => (\n                  <MenuItem\n                    className=\"sort-options__item\"\n                    key={sortOption.value}\n                  >\n                    <Radio\n                      name=\"sortBy\"\n                      id={sortOption.value}\n                      value={sortOption.value}\n                      isChecked={sortOption.value === sortRule.value}\n                      label={\n                        sortOption.value === sortRule.value ? (\n                          <>\n                            <Icon name=\"check\" />\n                            {sortOption.name}\n                          </>\n                        ) : (\n                          sortOption.name\n                        )\n                      }\n                      onChange={sortRule.onChange}\n                      classes={{\n                        radio: `sort-rule__radio`,\n                        label: `sort-rule__radio-label`\n                      }}\n                    />\n                  </MenuItem>\n                ))}\n            </Menu>\n          </PopoverWrapper>\n        </MenuItem>\n      )}\n    </Menu>\n    <Button\n      type=\"button\"\n      color=\"primary\"\n      variant=\"contained\"\n      className=\"task-settings__btn--save\"\n      size=\"sm\"\n      onClick={onSave}\n    >\n      Save View\n    </Button>\n  </PopoverWrapper>\n);\n\nTaskSettings.defaultProps = {\n  classes: {\n    wrapper: '',\n    popover: '',\n    button: '',\n    menu: '',\n    item: ''\n  },\n  filters: null,\n  sortRule: null\n};\n\nexport default TaskSettings;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Droppable } from 'react-beautiful-dnd';\nimport { withFirebase } from '../Firebase';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { ListComposer } from '../ListComposer';\nimport { Button } from '../Button';\nimport { Input } from '../Input';\nimport { Toolbar } from '../Toolbar';\nimport { TaskSettings } from '../TaskSettings';\nimport { projectActions } from '../../ducks/projects';\nimport { ProjectIcon } from '../ProjectIcon';\n\nclass Project extends Component {\n  state = {\n    name: this.props.name,\n    isListComposerActive: false,\n    isTaskSettingsMenuVisible: false,\n    isSortRuleDropdownVisible: false\n  };\n\n  toggleListComposer = () => {\n    this.setState(prevState => ({\n      isListComposerActive: !prevState.isListComposerActive\n    }));\n  };\n\n  setInputRef = ref => {\n    this.listComposerInput = ref;\n  };\n\n  onNameChange = e => {\n    this.setState({\n      name: e.target.value\n    });\n  };\n\n  onNameBlur = e => {\n    const { name: prevName, projectId, firebase } = this.props;\n    const { name } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (prevName !== name) {\n      firebase.updateProjectName({ projectId, name });\n    }\n  };\n\n  activateListComposer = e => {\n    this.listComposerInput.focus();\n  };\n\n  saveProjectSettings = () => {\n    const { firebase, projectId, tempProjectSettings } = this.props;\n    firebase.updateDoc(['projects', projectId], {\n      [`settings.tasks.view`]: tempProjectSettings.tasks.view,\n      [`settings.tasks.sortBy`]: tempProjectSettings.tasks.sortBy\n    });\n    this.closeTaskSettingsMenu();\n  };\n\n  setTempProjectSettings = e => {\n    const { projectId } = this.props;\n    const { setTempProjectSettings } = this.props;\n    const { name, value } = e.target;\n    setTempProjectSettings({\n      projectId,\n      [name]: value\n    });\n    if (name === 'sortBy') {\n      this.hideSortRuleDropdown();\n    }\n  };\n\n  toggleTaskSettingsMenu = e => {\n    this.setState(prevState => ({\n      isTaskSettingsMenuVisible: !prevState.isTaskSettingsMenuVisible,\n      isSortRuleDropdownVisible:\n        prevState.isSortRuleDropdownVisible &&\n        prevState.isTaskSettingsMenuVisible\n          ? !prevState.isSortRuleDropdownVisible\n          : prevState.isSortRuleDropdownVisible\n    }));\n  };\n\n  closeTaskSettingsMenu = () => {\n    this.setState({\n      isTaskSettingsMenuVisible: false,\n      isSortRuleDropdownVisible: false\n    });\n  };\n\n  toggleSortRuleDropdown = () => {\n    this.setState(prevState => ({\n      isSortRuleDropdownVisible: !prevState.isSortRuleDropdownVisible\n    }));\n  };\n\n  hideSortRuleDropdown = () => {\n    this.setState({\n      isSortRuleDropdownVisible: false\n    });\n  };\n\n  render() {\n    const { projectId, color, children, layout, tempSettings } = this.props;\n\n    const {\n      name,\n      isListComposerActive,\n      isTaskSettingsMenuVisible,\n      isSortRuleDropdownVisible\n    } = this.state;\n    return (\n      <div className={`project is-${layout}-layout`}>\n        <div className=\"project__header\">\n          <div className=\"project__header-content\">\n            <div className=\"project__name-wrapper\">\n            <ProjectIcon className=\"project__icon\" color={color} />\n            <span className=\"project__name\">{name}</span>\n            </div>\n            <Input\n              className=\"project__input--name\"\n              name=\"projectName\"\n              type=\"text\"\n              value={name}\n              onChange={this.onNameChange}\n              required\n              hideLabel\n              onBlur={this.onNameBlur}\n            />\n          </div>\n        </div>\n        <Toolbar className=\"project__toolbar\">\n              <Button\n                className=\"project__btn project__btn--add-list\"\n                onClick={this.activateListComposer}\n                color=\"primary\"\n                variant=\"contained\"\n                size=\"sm\"\n              >\n                Add List\n              </Button>\n              <TaskSettings\n                isVisible={isTaskSettingsMenuVisible}\n                onToggle={this.toggleTaskSettingsMenu}\n                onClose={this.closeTaskSettingsMenu}\n                onSave={this.saveProjectSettings}\n                classes={{\n                  wrapper: 'project__task-settings-wrapper',\n                  popover: 'project__task-settings',\n                  item: 'project__task-settings-item',\n                  button: 'project__task-settings-btn'\n                }}\n                filters={[\n                  {\n                    filter: 'view',\n                    options: [\n                      { value: 'active', name: 'Active Tasks' },\n                      { value: 'completed', name: 'Completed Tasks' },\n                      { value: 'all', name: 'All Tasks' }\n                    ],\n                    value: tempSettings.tasks.view,\n                    onChange: this.setTempProjectSettings\n                  }\n                ]}\n                sortRule={{\n                  options: [\n                    { value: 'none', name: 'None' },\n                    { value: 'dueDate', name: 'Due Date' }\n                  ],\n                  value: tempSettings.tasks.sortBy,\n                  onChange: this.setTempProjectSettings,\n                  isDropdownVisible: isSortRuleDropdownVisible,\n                  toggleDropdown: this.toggleSortRuleDropdown,\n                  hideDropdown: this.hideSortRuleDropdown\n                }}\n              />\n            </Toolbar>\n        <Droppable\n          droppableId={projectId}\n          type={droppableTypes.LIST}\n          direction={layout === 'board' ? 'horizontal' : 'vertical'}\n        >\n          {provided => (\n            <div\n              className=\"project__lists\"\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {children}\n              {provided.placeholder}\n              <ListComposer\n                inputRef={this.setInputRef}\n                toggle={this.toggleListComposer}\n                isActive={isListComposerActive}\n                layout={layout}\n                projectId={projectId}\n              />\n            </div>\n          )}\n        </Droppable>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setTempProjectSettings: ({ projectId, view, sortBy }) =>\n      dispatch(\n        projectActions.setTempProjectSettings({ projectId, view, sortBy })\n      )\n  };\n};\n\nexport default withFirebase(\n  connect(\n    null,\n    mapDispatchToProps\n  )(Project)\n);\n","export const SELECT_TASK = 'SELECT_TASK';\n\nexport const selectTask = taskId => {\n  return {\n    type: SELECT_TASK,\n    taskId\n  };\n};\n\nconst INITIAL_STATE = null;\n\nexport const selectedTask = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SELECT_TASK:\n      return action.taskId;\n    default:\n      return state;\n  }\n};\n\nexport const getSelectedTaskId = state => state.selectedTask;\n\nexport const getSelectedTask = state => {\n  const { selectedTask: taskId, tasksById } = state;\n  return tasksById[taskId];\n};\n","export const getListsById = state => {\n  return state.listsById;\n};\n\nexport const getList = (state, listId) => {\n  return state.listsById[listId];\n};\n\nexport const getListName = (state, listId) => {\n  if (!listId) return '';\n  const { listsById } = state;\n  return listsById[listId].name;\n};\n\nexport const getSelectedProjectLists = state => {\n  const { listsById, projectsById, selectedProject } = state;\n  const project = projectsById[selectedProject];\n  if (!project || !project.listIds) return [];\n  const { listIds } = project;\n\n  return listIds.map(listId => listsById[listId]);\n};\n\nexport const getProjectLists = (state, listIds) => {\n  const { listsById } = state;\n  if (!listIds) return [];\n\n  return listIds.map(listId => listsById[listId]);\n};\n","import * as types from './types';\n\nconst listsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_LISTS_BY_ID: {\n      const { listsById } = action;\n      return {\n        ...state,\n        ...listsById\n      };\n    }\n    case types.UPDATE_LIST: {\n      const { listId, listData } = action;\n      return {\n        ...state,\n        [listId]: {\n          ...state[listId],\n          ...listData\n        }\n      };\n    }\n    case types.ADD_LIST: {\n      const { listId, listData } = action;\n      return {\n        ...state,\n        [listId]: {\n          listId,\n          isLoaded: true,\n          ...listData\n        }\n      };\n    }\n    case types.REMOVE_LIST: {\n      const { listId } = action;\n      const { [listId]: deletedList, ...restOfLists } = state;\n      return restOfLists;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default listsById;\n","export const getTasksById = state => {\n  return state.tasksById;\n};\n\nexport const getTasksArray = state => {\n  const { tasksById } = state;\n  return Object.keys(tasksById).map(taskId => tasksById[taskId]);\n};\n\nexport const getTasksMatchingQuery = (state, query) => {\n  const regExp = new RegExp(`\\\\b${query}`, 'i');\n  return getTasksArray(state).filter(task => {\n    return (\n      regExp.test(task.name) ||\n      regExp.test(task.projectName) ||\n      (task.tags && task.tags.some(tag => regExp.test(tag)))\n    );\n  });\n};\n\nexport const getTask = (state, taskId) => {\n  return state.tasksById[taskId];\n};\n\nexport const getListTasks = (state, taskIds) => {\n  const { tasksById } = state;\n  let tasks = [];\n  taskIds.forEach(taskId => {\n    const task = tasksById[taskId];\n    if (!task) return;\n    tasks = tasks.concat(task);\n  });\n  return tasks;\n};\n\nexport const getFolderTasks = (state, taskIds) => {\n  const { tasksById } = state;\n  let tasks = [];\n  taskIds.forEach(taskId => {\n    const task = tasksById[taskId];\n    if (!task) return;\n    tasks = tasks.concat(task);\n  });\n  return tasks;\n};\n\nexport const getSimpleTasks = (state, taskIds) => {\n  const { tasksById } = state;\n  if (!taskIds) return {};\n\n  return taskIds.reduce((tasks, taskId) => {\n    const { name, isCompleted } = tasksById[taskId];\n    tasks[taskId] = {\n      name,\n      isCompleted\n    };\n    return tasks;\n  }, {});\n};\n\nexport const getTaskTags = (state, ownProps) => {\n  const { projectId, tags: taskTags } = ownProps;\n  const { projectsById, currentUser } = state;\n  if (!taskTags || taskTags.length === 0) return [];\n  if (projectId && projectId in projectsById) {\n    const { tags: projectTags } = projectsById[projectId];\n    return taskTags.map(taskTag => projectTags[taskTag]);\n  }\n  if (currentUser && 'tags' in currentUser) {\n    const { tags: userTags } = currentUser;\n    return taskTags.map(taskTag => userTags[taskTag]);\n  }\n  return [];\n};\n\nexport const getTaskLoadedState = (state, taskId) => {\n  const { tasksById } = state;\n  const task = tasksById[taskId];\n  if (!task) return {};\n  return task.isLoaded;\n};\n\nexport const getTaggedTasks = (state, tag) => {\n  const { tasksById } = state;\n  return Object.keys(tasksById)\n    .map(taskId => tasksById[taskId])\n    .filter(task => {\n      return task.tags && task.tags.includes(tag);\n    });\n};\n","import * as types from './types';\n\nconst tasksById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_TASKS_BY_ID: {\n      const { tasksById } = action;\n      return {\n        ...state,\n        ...tasksById\n      };\n    }\n    case types.ADD_TASK: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        [taskId]: {\n          taskId,\n          isLoaded: {\n            subtasks: true,\n            comments: true\n          },\n          ...taskData\n        }\n      };\n    }\n    case types.REMOVE_TASK: {\n      const { taskId } = action;\n      const { [taskId]: deletedTask, ...restOfTasks } = state;\n      return restOfTasks;\n    }\n    case types.UPDATE_TASK: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        [taskId]: {\n          ...state[taskId],\n          ...taskData\n        }\n      };\n    }\n    case types.ADD_TAG: {\n      const { taskId, tag } = action;\n      return {\n        ...state,\n        [taskId]: {\n          ...state[taskId],\n          tags: [...state[taskId].tags, tag]\n        }\n      };\n    }\n    case types.REMOVE_TAG: {\n      const { taskId, name } = action;\n      if (!taskId || !(taskId in state)) return state;\n      return {\n        ...state,\n        [taskId]: {\n          ...state[taskId],\n          tags: state[taskId].tags.filter(tag => tag !== name)\n        }\n      };\n    }\n    case types.SET_TASK_LOADED_STATE: {\n      const { taskId, key } = action;\n      return {\n        ...state,\n        [taskId]: {\n          ...state[taskId],\n          isLoaded: {\n            ...state[taskId].isLoaded,\n            [key]: true\n          }\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default tasksById;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\nimport { setProjectLoadedState } from '../projects/actions';\nimport { setTaskLoadedState } from '../tasks/actions';\n\nexport const loadSubtasksById = subtasksById => {\n  return {\n    type: types.LOAD_SUBTASKS_BY_ID,\n    subtasksById\n  };\n};\n\nexport const addSubtask = ({ subtaskId, subtaskData }) => {\n  console.log('subtask added');\n  return {\n    type: types.ADD_SUBTASK,\n    subtaskId,\n    subtaskData\n  };\n};\n\nexport const removeSubtask = ({ subtaskId, taskId }) => {\n  return {\n    type: types.REMOVE_SUBTASK,\n    subtaskId,\n    taskId\n  };\n};\n\nexport const updateSubtask = ({ subtaskId, subtaskData }) => {\n  return {\n    type: types.UPDATE_SUBTASK,\n    subtaskId,\n    subtaskData\n  };\n};\n\n// Thunks\n\nexport const syncTaskSubtasks = taskId => {\n  return async (dispatch, getState) => {\n    try {\n      const subscription = await firebase.db\n        .collection('subtasks')\n        .where('taskId', '==', taskId)\n        .onSnapshot(snapshot => {\n          const changes = snapshot.docChanges();\n          const { tasksById, subtasksById } = getState();\n          const task = tasksById[taskId];\n          const isInitialLoad =\n            snapshot.size === changes.length &&\n            changes.every(change => change.type === 'added') &&\n            !task.isLoaded.subtasks;\n\n          if (isInitialLoad) {\n            const subtasks = {};\n            if (changes.length > 0) {\n              changes.forEach(change => {\n                const subtaskId = change.doc.id;\n                if (subtaskId in getState().subtasksById) return;\n                const subtaskData = change.doc.data();\n                subtasks[subtaskId] = {\n                  subtaskId,\n                  ...subtaskData\n                };\n              });\n              dispatch(loadSubtasksById(subtasks));\n            }\n            dispatch(setTaskLoadedState(taskId, 'subtasks'));\n          } else {\n            changes.forEach(async change => {\n              const [subtaskId, subtaskData, changeType] = await Promise.all([\n                change.doc.id,\n                change.doc.data(),\n                change.type\n              ]);\n              if (changeType === 'added') {\n                if (subtaskId in subtasksById) return;\n                dispatch(addSubtask({ subtaskId, subtaskData }));\n                console.log(`Subtask added: ${subtaskData.name}`);\n              } else if (changeType === 'removed') {\n                if (!(subtaskId in subtasksById)) return;\n                dispatch(removeSubtask({ subtaskId, taskId }));\n                console.log(`Subtask removed: ${subtaskData.name}`);\n              } else {\n                dispatch(updateSubtask({ subtaskId, subtaskData }));\n                console.log(`Subtask modified: ${subtaskData.name}`);\n              }\n            });\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserSubtasks = userId => {\n  return async dispatch => {\n    try {\n      const subtasksById = await firebase.db\n        .collection('subtasks')\n        .where('assignedTo', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const subtasks = {};\n          snapshot.forEach(doc => {\n            subtasks[doc.id] = {\n              subtaskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return subtasks;\n        });\n      dispatch(loadSubtasksById(subtasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const syncProjectSubtasks = projectId => {\n  return async (dispatch, getState) => {\n    try {\n      const subscription = await firebase\n        .queryCollection('subtasks', ['projectId', '==', projectId])\n        .onSnapshot(snapshot => {\n          const changes = snapshot.docChanges();\n          const isInitialLoad =\n            snapshot.size === changes.length &&\n            changes.every(change => change.type === 'added');\n          if (isInitialLoad && changes.length > 1) {\n            const subtasksById = {};\n            changes.forEach(change => {\n              const subtaskId = change.doc.id;\n              const subtaskData = change.doc.data();\n              subtasksById[change.doc.id] = {\n                subtaskId,\n                ...subtaskData\n              };\n            });\n            dispatch(loadSubtasksById(subtasksById));\n          } else {\n            changes.forEach(async change => {\n              const [subtaskId, subtaskData, changeType] = await Promise.all([\n                change.doc.id,\n                change.doc.data(),\n                change.type\n              ]);\n              const { subtasksById } = getState();\n              if (changeType === 'added') {\n                if (subtaskId in subtasksById) return;\n                dispatch(addSubtask({ subtaskId, subtaskData }));\n                console.log(`Subtask added: ${subtaskData.name}`);\n              } else if (changeType === 'removed') {\n                if (!(subtaskId in subtasksById)) return;\n                const { taskId } = subtaskData;\n                dispatch(removeSubtask({ subtaskId, taskId }));\n                console.log(`Subtask deleted: ${subtaskData.name}`);\n              } else {\n                dispatch(updateSubtask({ subtaskId, subtaskData }));\n                console.log(`Subtask updated: ${subtaskData.name}`);\n              }\n            });\n          }\n          if (isInitialLoad) {\n            dispatch(setProjectLoadedState(projectId, 'subtasks'));\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","export const LOAD_SUBTASKS_BY_ID = 'LOAD_SUBTASKS_BY_ID';\nexport const ADD_SUBTASK = 'ADD_SUBTASK';\nexport const UPDATE_SUBTASK = 'UPDATE_SUBTASK';\nexport const REMOVE_SUBTASK = 'REMOVE_SUBTASK';\n","export const getSubtasksById = state => {\n  const { subtasksById } = state;\n  return subtasksById;\n};\n\nexport const getSubtasksArray = (state, subtaskIds) => {\n  const { subtasksById } = state;\n  if (!subtaskIds) return [];\n  let subtasks = [];\n\n  for (let subtaskId of subtaskIds) {\n    const subtask = subtasksById[subtaskId];\n    if (!subtask) break;\n    subtasks = subtasks.concat(subtask);\n  }\n  \n  return subtasks;\n};\n\nexport const getSimpleSubtasks = (state, subtaskIds) => {\n  const { subtasksById } = state;\n  if (!subtaskIds) return {};\n\n  return subtaskIds.reduce((subtasks, subtaskId) => {\n    const { name, isCompleted } = subtasksById[subtaskId];\n        subtasks[subtaskId] = {\n          name,\n          isCompleted\n        };\n        return subtasks;\n      }, {});\n  };\n\nexport const getActiveSubtasks = (state, subtaskIds) => {\n  const subtasks = getSubtasksArray(state, subtaskIds);\n  return subtasks.filter(subtask => !subtask.isCompleted);\n};\n\nexport const getCompletedSubtasks = (state, subtaskIds) => {\n  const subtasks = getSubtasksArray(state, subtaskIds);\n  if (subtasks.includes(undefined)) return [];\n  return subtasks.filter(subtask => subtask.isCompleted);\n};\n","import * as types from './types';\n\nconst subtasksById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_SUBTASKS_BY_ID: {\n      const { subtasksById } = action;\n      return {\n        ...state,\n        ...subtasksById\n      };\n    }\n    case types.ADD_SUBTASK: {\n      const { subtaskId, subtaskData } = action;\n      return {\n        ...state,\n        [subtaskId]: {\n          subtaskId,\n          isLoaded: true,\n          ...subtaskData\n        }\n      };\n    }\n    case types.REMOVE_SUBTASK: {\n      const { subtaskId } = action;\n      const { [subtaskId]: deletedSubtask, ...restOfSubtasks } = state;\n      return restOfSubtasks;\n    }\n    case types.UPDATE_SUBTASK: {\n      const { subtaskId, subtaskData } = action;\n      return {\n        ...state,\n        [subtaskId]: {\n          ...state[subtaskId],\n          ...subtaskData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default subtasksById;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon } from '../Icon';\nimport { withFirebase } from '../Firebase';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\nimport * as keys from '../../constants/keys';\nimport './TaskComposer.scss';\n\nconst INITIAL_STATE = {\n  name: '',\n  isActive: false\n};\n\nclass TaskComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ name: '' });\n  };\n\n  onSubmit = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { name } = this.state;\n    const {\n      userId,\n      folderId,\n      firebase,\n      projectId,\n      projectName,\n      listId,\n      listName,\n      dueDate\n    } = this.props;\n    firebase.addTask({\n      dueDate: dueDate ? new Date(dueDate) : null,\n      name,\n      userId,\n      folderId,\n      projectId,\n      projectName,\n      listId,\n      listName\n    });\n    this.resetForm();\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = e => {\n    if (e.target.value !== '') return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const { name, isActive } = this.state;\n\n    return (\n      <div\n        className={`task-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"task-composer__form\" onSubmit={this.onSubmit}>\n          <Button\n            className=\"task-composer__btn--submit\"\n            type=\"submit\"\n            onClick={this.onSubmit}\n            iconOnly\n          >\n            <Icon name=\"plus-circle\" />\n          </Button>\n          <Input\n            onChange={this.onChange}\n            value={name}\n            placeholder=\"Add a task\"\n            isRequired\n            name=\"name\"\n            className=\"task-composer__input\"\n            onKeyDown={this.onSubmit}\n            hideLabel\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userId: currentUserSelectors.getCurrentUserId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TaskComposer)\n);\n","/**\n * Delays callback execution until next browser repaint\n * Best used for `scroll` and `resize` window events\n * @param {Function} callback - The function to debounce\n */\n\nexport const windowDebouncer = callback => {\n  let request;\n\n  return (...args) => {\n    const context = this;\n\n    if (request) {\n      window.cancelAnimationFrame(request);\n    }\n\n    request = window.requestAnimationFrame(() => {\n      callback.apply(context, args);\n    });\n  };\n};\n\nexport const debounce = (delay, fn) => {\n  let timerId;\n  return (...args) => {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(() => {\n      fn(...args);\n      timerId = null;\n    }, delay);\n  };\n};\n\n/**\n * Returns a function that executes the first callback on its initial call\n * then the second callback on subsequent calls\n * @param {Function} first - The function executed only on its initial call\n * @param {Function} after - The function executed on subsequent calls\n */\nexport const firstThen = (first, after) => {\n  let count = 0;\n  return (...args) => {\n    count++;\n    if (count === 1) {\n      return first.apply(this, args);\n    }\n    return after.apply(this, args);\n  };\n};\n\nexport const count = (fn, invokeBeforeExecution) => {\n  let count = 0;\n  return args => {\n    count++;\n    if (count <= invokeBeforeExecution) {\n      return true;\n    }\n    return fn(args, count);\n  };\n};\n","import React, { Component } from 'react';\nimport './Textarea.scss';\nimport { debounce } from '../../utils/function';\n\nexport default class Textarea extends Component {\n  static defaultProps = {\n    isAutoHeightResizeEnabled: true,\n    minHeight: 0,\n    tabIndex: 0,\n    onMouseDown: () => null,\n    onMouseUp: () => null,\n    onMouseMove: () => null\n  };\n\n  componentDidMount() {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n    this.autoHeightResize();\n    this.handleResize = debounce(200, this.autoHeightResize);\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  ref = el => {\n    this.el = el;\n    const { innerRef } = this.props;\n    if (innerRef) {\n      innerRef(el);\n    }\n  };\n\n  autoHeightResize = () => {\n    const { isAutoHeightResizeEnabled, minHeight } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n\n    this.el.style.height = `${minHeight}px`; // resets scroll height\n    this.el.style.height = `${this.el.scrollHeight}px`;\n  };\n\n  render() {\n    const {\n      className,\n      name,\n      value,\n      onChange,\n      placeholder,\n      isRequired,\n      onBlur,\n      onFocus,\n      onKeyDown,\n      onDragStart,\n      isReadOnly,\n      onMouseDown,\n      onMouseUp,\n      onMouseMove,\n      tabIndex\n    } = this.props;\n\n    return (\n      <textarea\n        className={`textarea ${className}`}\n        id={name}\n        name={name}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={isRequired}\n        onBlur={onBlur}\n        onInput={this.autoHeightResize}\n        ref={this.ref}\n        onFocus={onFocus}\n        onKeyDown={onKeyDown}\n        onDragStart={onDragStart}\n        readOnly={isReadOnly}\n        onMouseDown={onMouseDown}\n        onMouseUp={onMouseUp}\n        onMouseMove={onMouseMove}\n        tabIndex={tabIndex}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon } from '../Icon';\nimport { withFirebase } from '../Firebase';\nimport { projectActions, projectSelectors } from '../../ducks/projects';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport * as keys from '../../constants/keys';\nimport './CardComposer.scss';\n\nconst INITIAL_STATE = {\n  name: '',\n  isActive: false\n};\n\nclass CardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ name: '' });\n  };\n\n  onSubmit = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { name } = this.state;\n    const {\n      firebase,\n      projectId,\n      projectName,\n      listId,\n      listName,\n      userId\n    } = this.props;\n    firebase.addTask({\n      projectId,\n      listId,\n      name,\n      projectName,\n      listName,\n      userId\n    });\n    this.resetForm();\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onBlur = e => {\n    if (e.target.value !== '') return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const { name, isActive } = this.state;\n\n    return (\n      <div\n        className={`card-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"card-composer__form\" onSubmit={this.onSubmit}>\n          <Textarea\n            onChange={this.onChange}\n            value={name}\n            placeholder={isActive ? 'Enter card title...' : 'Add a card'}\n            isRequired\n            name=\"name\"\n            className=\"card-composer__textarea\"\n            isAutoHeightResizeEnabled={false}\n            onKeyDown={this.onSubmit}\n          />\n          {isActive && (\n            <div className=\"card-composer__footer\">\n              <Button\n                className=\"card-composer__btn\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n                size=\"sm\"\n              >\n                Add Card\n              </Button>\n              <Button\n                className=\"card-composer__btn\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n              >\n                Cancel\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userId: currentUserSelectors.getCurrentUserId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateProjectsById: project =>\n      dispatch(projectActions.updateProjectsById(project))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardComposer)\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport './Tag.scss';\n\nconst Tag = ({ name, color, size, onDelete, className, innerRef, variant }) => (\n  <span\n    className={`tag tag--${size} bg--${color} ${\n      variant !== 'default' ? `tag--${variant}` : ''\n    } ${className}`}\n    ref={innerRef}\n  >\n    <Link to={`/0/tasks?tag=${name}`} className=\"tag__link\">\n      {name}\n    </Link>\n    {size === 'md' && (\n      <Button\n        type=\"button\"\n        size=\"sm\"\n        className=\"tag__btn--delete\"\n        onClick={onDelete}\n        iconOnly\n      >\n        <Icon name=\"x\" />\n      </Button>\n    )}\n  </span>\n);\n\nTag.defaultProps = {\n  className: '',\n  onDelete: () => null,\n  color: 'default',\n  size: 'md',\n  variant: 'default'\n};\n\nexport default Tag;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { userSelectors } from '../../ducks/users';\nimport { subtaskSelectors } from '../../ducks/subtasks';\nimport './Card.scss';\nimport { Tag } from '../Tag';\nimport { Icon } from '../Icon';\nimport { Avatar } from '../Avatar';\nimport { toDateString, isPriorDate } from '../../utils/date';\n\nconst CardDetail = ({ icon = null, children, className = '' }) => (\n  <div className={`card__detail ${className}`}>\n    {icon && <Icon name={icon} />}\n    {children}\n  </div>\n);\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.taskTags.indexOf(undefined) !== -1) {\n      return false;\n    }\n    return true;\n  }\n\n  handleCardClick = e => {\n    if (e.target.matches('button') || e.target.matches('a')) return;\n    const { taskId, onCardClick } = this.props;\n    onCardClick(taskId);\n  };\n\n  render() {\n    const {\n      name,\n      taskId,\n      taskIndex,\n      taskTags,\n      commentIds,\n      dueDate,\n      subtaskIds,\n      completedSubtasks,\n      taskMembers,\n      isCompleted\n    } = this.props;\n\n    const dueDateStr = dueDate\n      ? toDateString(dueDate.toDate(), {\n          useRelative: true,\n          format: { month: 'short', day: 'numeric' }\n        })\n      : null;\n    const isDueToday = dueDateStr === 'Today';\n    const isDueTmrw = dueDateStr === 'Tomorrow';\n    const isPastDue = dueDate && isPriorDate(dueDate.toDate());\n    return (\n      <Draggable draggableId={taskId} index={taskIndex}>\n        {provided => (\n          <div\n            className=\"card\"\n            onClick={this.handleCardClick}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            style={{\n              ...provided.draggableProps.style,\n              backgroundColor: '#fff'\n            }}\n          >\n            <div className=\"card__header\" ref={el => (this.headerEl = el)}>\n              <div className=\"card__tags\">\n                {taskTags.map(taskTag => (\n                  <Tag\n                    key={taskTag.name}\n                    size=\"sm\"\n                    color={taskTag.color}\n                    variant=\"pill\"\n                    className=\"card__tag\"\n                  />\n                ))}\n              </div>\n              <h3 className=\"card__title\">{name}</h3>\n            </div>\n            <div className=\"card__body\">\n              {isCompleted && (\n                <CardDetail className=\"card__completed-status\">\n                  <span className=\"card__completed-status-icon\">\n                    <Icon name=\"check\" />\n                  </span>\n                </CardDetail>\n              )}\n              {dueDate && (\n                <CardDetail\n                  icon=\"calendar\"\n                  className={`card__due-date ${\n                    isDueToday\n                      ? 'is-due-today'\n                      : isDueTmrw\n                      ? 'is-due-tmrw'\n                      : isPastDue\n                      ? 'is-past-due'\n                      : ''\n                  }\n                  `}\n                >\n                  {dueDateStr}\n                </CardDetail>\n              )}\n              {subtaskIds && subtaskIds.length > 0 && (\n                <CardDetail icon=\"check-square\">\n                  {completedSubtasks.length}/{subtaskIds.length}\n                </CardDetail>\n              )}\n              {commentIds && commentIds.length > 0 && (\n                <CardDetail icon=\"message-circle\">\n                  {commentIds.length}\n                </CardDetail>\n              )}\n            </div>\n            <div className=\"card__footer\">\n              {taskMembers && taskMembers.length > 0 && (\n                <div className=\"card__members-wrapper\">\n                  <div className=\"card__members\">\n                    {taskMembers.map(member => {\n                      const { name, photoURL, userId } = member;\n                      return (\n                        <Avatar\n                          classes={{\n                            avatar: 'card__avatar',\n                            placeholder: 'card__avatar-placeholder'\n                          }}\n                          name={name}\n                          size=\"sm\"\n                          variant=\"circle\"\n                          imgSrc={photoURL}\n                          key={userId}\n                        />\n                      );\n                    })}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    taskTags: taskSelectors.getTaskTags(state, ownProps),\n    completedSubtasks: subtaskSelectors.getCompletedSubtasks(\n      state,\n      ownProps.subtaskIds\n    ),\n    taskMembers: userSelectors.getMembersArray(state, ownProps.assignedTo)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Card);\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport './Checkbox.scss';\n\nconst Checkbox = ({\n  value,\n  id,\n  name,\n  isChecked,\n  onClick,\n  onChange,\n  className,\n  labelClass,\n  ...props\n}) => {\n  return (\n    <label\n      htmlFor={id}\n      onClick={onClick}\n      className={`checkbox__label ${labelClass}`}\n    >\n      {isChecked && <Icon name=\"check\" />}\n      <input\n        type=\"checkbox\"\n        id={id}\n        value={value}\n        name={name}\n        checked={isChecked}\n        className={`checkbox ${className}`}\n        onChange={onChange}\n        {...props}\n      />\n    </label>\n  );\n};\n\nCheckbox.defaultProps = {\n  className: '',\n  labelClass: ''\n};\n\nexport default Checkbox;\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport './Badge.scss';\n\nconst Badge = ({ icon, children, className }) => (\n  <span className={`badge ${className}`}>\n    {icon && <Icon name={icon} />}\n    {children}\n  </span>\n);\n\nBadge.defaultProps = {\n  icon: null,\n  className: '',\n  children: null\n};\n\nexport default Badge;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { projectSelectors } from '../../ducks/projects';\nimport './ProjectBadge.scss';\nimport { ProjectIcon } from '../ProjectIcon';\n\nconst ProjectBadge = ({ projectId, size, variant, name, color, classes }) => (\n  <Link\n    to={`/0/projects/${projectId}`}\n    className={`project-badge project-badge--${size} ${\n      variant === 'contained'\n        ? `project-badge--contained project-badge--${color}`\n        : ''\n    } ${classes.badge || ''}`}\n  >\n    {variant === 'icon' && (\n      <ProjectIcon\n        color={color}\n        className={`project-badge__icon ${classes.icon || ''}`}\n      />\n    )}\n    <span className=\"project-badge__name\">{name}</span>\n  </Link>\n);\n\nProjectBadge.defaultProps = {\n  classes: {\n    badge: '',\n    icon: ''\n  },\n  variant: 'icon',\n  size: 'md'\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    color: projectSelectors.getProjectColor(state, ownProps.projectId),\n    name: projectSelectors.getProjectName(state, ownProps.projectId)\n  };\n};\n\nexport default connect(mapStateToProps)(ProjectBadge);\n","/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable no-nested-ternary */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Checkbox } from '../Checkbox';\nimport { Textarea } from '../Textarea';\nimport { Tag } from '../Tag';\nimport { Icon } from '../Icon';\nimport { withFirebase } from '../Firebase';\nimport * as keys from '../../constants/keys';\nimport { taskSelectors } from '../../ducks/tasks';\nimport { userSelectors } from '../../ducks/users';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport { getSelectedProjectId } from '../../ducks/selectedProject';\nimport { Badge } from '../Badge';\nimport { ProjectBadge } from '../ProjectBadge';\nimport { toDateString, isPriorDate } from '../../utils/date';\nimport { ListBadge } from '../ListBadge';\nimport { Avatar } from '../Avatar';\nimport './Task.scss';\n\nclass Task extends Component {\n  static defaultProps = {\n    className: ''\n  };\n  \n  state = {\n    isFocused: false,\n    name: this.props.name,\n    prevPropsName: this.props.name\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.name !== state.prevPropsName) {\n      return {\n        name: props.name,\n        prevPropsName: props.name\n      };\n    }\n    return null;\n  }\n\n  onFocus = () => {\n    this.setState({\n      isFocused: true\n    });\n  };\n\n  onChange = e => {\n    this.setState({\n      name: e.target.value\n    });\n  };\n\n  onBlur = () => {\n    const { name, firebase, taskId } = this.props;\n    const { name: newName } = this.state;\n    if (name !== newName) {\n      firebase.updateDoc(['tasks', taskId], {\n        name: newName\n      });\n    }\n    this.setState({\n      isFocused: false\n    });\n  };\n\n  deleteTask = e => {\n    if (e.target.value !== '' || e.key !== keys.BACKSPACE) return;\n    const {\n      firebase,\n      taskId,\n      listId,\n      assignedTo,\n      folders,\n      subtaskIds,\n      commentIds,\n      dueDate,\n      projectId\n    } = this.props;\n    firebase.deleteTask({\n      taskId,\n      listId,\n      assignedTo,\n      folders,\n      subtaskIds,\n      commentIds,\n      dueDate,\n      projectId\n    });\n  };\n\n  toggleCompleted = () => {\n    const { taskId, isCompleted, firebase } = this.props;\n    firebase.updateDoc(['tasks', taskId], {\n      isCompleted: !isCompleted,\n      completedAt: !isCompleted ? firebase.getTimestamp() : null\n    });\n  };\n\n  handleTaskClick = e => {\n    if (\n      e.target.matches('button') ||\n      e.target.matches('a') ||\n      e.target.matches('label') ||\n      e.target.matches('input[type=\"checkbox\"]')\n    )\n      return;\n    const { taskId, onTaskClick } = this.props;\n    onTaskClick(taskId);\n  };\n\n  onKeyDown = e => {\n    const { provided, taskId, onTaskClick } = this.props;\n    if (provided && provided.dragHandleProps) {\n      provided.dragHandleProps.onKeyDown(e);\n    }\n    if (e.key === keys.ENTER) {\n      onTaskClick(taskId);\n    }\n  };\n\n  render() {\n    const {\n      taskId,\n      taskTags,\n      isCompleted,\n      innerRef,\n      provided,\n      dueDate,\n      projectId,\n      listName,\n      selectedProjectId,\n      taskMembers,\n      className\n    } = this.props;\n    const { isFocused, name } = this.state;\n    const draggableProps = provided ? provided.draggableProps : {};\n    const dragHandleProps = provided ? provided.dragHandleProps : {};\n    const dueDateStr = dueDate\n      ? toDateString(dueDate.toDate(), {\n          useRelative: true,\n          format: { month: 'short', day: 'numeric' }\n        })\n      : null;\n    const isDueToday = dueDateStr === 'Today';\n    const isDueTmrw = dueDateStr === 'Tomorrow';\n    const isPastDue = dueDate && isPriorDate(dueDate.toDate());\n\n    return (\n      <li\n        className={`task ${className || ''} ${isFocused ? 'is-focused' : ''}`}\n        onClick={this.handleTaskClick}\n        tabIndex={0}\n        ref={innerRef}\n        {...draggableProps}\n        {...dragHandleProps}\n        onKeyDown={this.onKeyDown}\n      >\n        <Checkbox\n          id={`cb-${taskId}`}\n          value={taskId}\n          name={taskId}\n          isChecked={isCompleted}\n          onChange={this.toggleCompleted}\n          className=\"task__checkbox\"\n          labelClass=\"task__checkbox-label\"\n        />\n        <div className=\"task__wrapper\">\n          <div className=\"task__badges task__badges--top\">\n            <div className=\"task__tags\">\n              {taskTags.map(taskTag => (\n                <Tag\n                  name={taskTag.name}\n                  key={taskTag.name}\n                  size=\"sm\"\n                  color={taskTag.color}\n                  className=\"task__tag\"\n                />\n              ))}\n            </div>\n            {dueDate && (\n              <Badge\n                icon=\"calendar\"\n                className={`task__detail task__due-date ${\n                  isDueToday\n                    ? 'is-due-today'\n                    : isDueTmrw\n                    ? 'is-due-tmrw'\n                    : isPastDue\n                    ? 'is-past-due'\n                    : ''\n                }\n                  `}\n              >\n                {dueDateStr}\n              </Badge>\n            )}\n            {taskMembers && taskMembers.length > 0 && (\n              <div className=\"task__detail task__members-wrapper\">\n                <div className=\"task__members\">\n                  {taskMembers.map(member => {\n                    const { name: memberName, photoURL, userId } = member;\n                    return (\n                      <Avatar\n                        classes={{\n                          avatar: 'task__avatar',\n                          placeholder: 'task__avatar-placeholder'\n                        }}\n                        name={memberName}\n                        size=\"sm\"\n                        variant=\"circle\"\n                        imgSrc={photoURL}\n                        key={userId}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n          </div>\n          <Textarea\n            value={name}\n            onFocus={this.onFocus}\n            onChange={this.onChange}\n            onBlur={this.onBlur}\n            name={taskId}\n            className=\"task__textarea\"\n            onKeyDown={this.deleteTask}\n            minHeight={14}\n          />\n          <div className=\"task__badges task__badges--btm\">\n            {!selectedProjectId && projectId && (\n              <ProjectBadge projectId={projectId} size=\"sm\" />\n            )}\n          </div>\n        </div>\n      </li>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    userId: currentUserSelectors.getCurrentUserId(state),\n    taskTags: taskSelectors.getTaskTags(state, ownProps),\n    selectedProjectId: getSelectedProjectId(state),\n    taskMembers: userSelectors.getMembersArray(state, ownProps.assignedTo)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Task)\n);\n","import React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport Task from './Task';\n\nconst DraggableTask = ({\n  taskId,\n  index,\n  onTaskClick,\n  listId,\n  folderId,\n  task\n}) => (\n  <Draggable draggableId={taskId} index={index}>\n    {(provided, snapshot) => (\n      <Task\n        innerRef={provided.innerRef}\n        provided={provided}\n        onTaskClick={onTaskClick}\n        listId={listId}\n        folderId={folderId}\n        {...task}\n      />\n    )}\n  </Draggable>\n);\n\nexport default DraggableTask;\n","import React, { Component } from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { Card } from '../Card';\nimport { DraggableTask } from '../Task';\n\nexport default class Tasks extends Component {\n  static defaultProps = {\n    dropType: droppableTypes.TASK\n  };\n\n  /*\n\n  shouldComponentUpdate(nextProps) {\n    if (this.props.cards === nextProps.cards) {\n      return false;\n    }\n    return true;\n  }\n*/\n  componentDidUpdate(prevProps) {\n    if (this.props.tasks.length > prevProps.tasks.length) {\n      this.scrollToBottom();\n    }\n  }\n\n  scrollToBottom = () => {\n    if (!this.listEnd) return;\n    this.listEnd.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  applyViewFilter = tasks => {\n    const { viewFilter } = this.props;\n    switch (viewFilter) {\n      case 'completed': {\n        return tasks.filter(task => task.isCompleted);\n      }\n      case 'active': {\n        return tasks.filter(task => !task.isCompleted);\n      }\n      default: {\n        return tasks;\n      }\n    }\n  };\n\n  applySortRule = tasks => {\n    const { sortBy } = this.props;\n    switch (sortBy) {\n      case 'dueDate': {\n        return [...tasks].sort((a, b) => a.dueDate.toMillis() - b.dueDate.toMillis());\n      }\n      default: {\n        return tasks;\n      }\n    }\n  };\n\n  applyTaskSettings = tasks => {\n    return this.applySortRule(this.applyViewFilter(tasks));\n  };\n\n  render() {\n    const {\n      listId,\n      projectId,\n      dueDate,\n      tasks,\n      onTaskClick,\n      folderId,\n      layout,\n      dropType,\n      viewFilter,\n      sortBy\n    } = this.props;\n    const isBoardLayout = layout === 'board';\n\n    const inner = this.applyTaskSettings(tasks).map((task, taskIndex) => {\n      return isBoardLayout ? (\n        <Card\n          key={task.taskId}\n          taskIndex={taskIndex}\n          onCardClick={onTaskClick}\n          {...task}\n        />\n      ) : (\n        <DraggableTask\n          key={task.taskId}\n          index={taskIndex}\n          onTaskClick={onTaskClick}\n          listId={listId}\n          folderId={folderId}\n          taskId={task.taskId}\n          task={task}\n        />\n      );\n    });\n\n    return (\n      <Droppable\n        droppableId={listId || folderId || projectId || `${dueDate}`}\n        type={dropType}\n      >\n        {(provided, snapshot) =>\n          isBoardLayout ? (\n            <div\n              className=\"list__cards\"\n              ref={provided.innerRef}\n              style={{ minHeight: snapshot.isDraggingOver ? 80 : 16 }}\n              {...provided.droppableProps}\n            >\n              {inner}\n              {provided.placeholder}\n              <div\n                style={{ float: 'left', clear: 'both' }}\n                ref={el => (this.listEnd = el)}\n              />\n            </div>\n          ) : (\n            <ul\n              className=\"list__tasks\"\n              ref={provided.innerRef}\n              style={{ minHeight: snapshot.isDraggingOver ? 60 : 4 }}\n              {...provided.droppableProps}\n            >\n              {inner}\n              {provided.placeholder}\n            </ul>\n          )\n        }\n      </Droppable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { listActions } from '../../ducks/lists';\nimport { projectSelectors } from '../../ducks/projects';\nimport { TaskComposer } from '../TaskComposer';\nimport { CardComposer } from '../CardComposer';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\nimport { Input } from '../Input';\nimport { Tasks } from '../Tasks';\nimport './List.scss';\n\nclass List extends Component {\n  static defaultProps = {\n    isRestricted: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: props.name,\n      isMoreActionsMenuVisible: false\n    };\n  }\n\n  handleListDelete = e => {\n    e.preventDefault();\n    const { listId, projectId, deleteList } = this.props;\n    deleteList({ listId, projectId });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onBlur = e => {\n    const { name, listId, firebase } = this.props;\n    const { name: newName } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newName !== name) {\n      firebase.updateListName({ listId, name: newName });\n    }\n  };\n\n  toggleMoreActionsMenu = e => {\n    this.setState(prevState => ({\n      isMoreActionsMenuVisible: !prevState.isMoreActionsMenuVisible\n    }));\n  };\n\n  closeMoreActionsMenu = e => {\n    this.setState({\n      isMoreActionsMenuVisible: false\n    });\n  };\n\n  render() {\n    const {\n      tasks,\n      name: listName,\n      onTaskClick,\n      listId,\n      index,\n      isFetchingTasks,\n      isRestricted,\n      projectId,\n      projectName,\n      layout,\n      viewFilter,\n      sortBy\n    } = this.props;\n    if (isFetchingTasks) return null;\n\n    const isBoardView = layout === 'board';\n\n    const { name, isMoreActionsMenuVisible } = this.state;\n\n    return (\n      <Draggable draggableId={listId} index={index}>\n        {provided => (\n          <>\n            <section\n              className={`list is-${layout}-layout`}\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <header className=\"list__header\">\n                <Input\n                  className=\"list__input--title\"\n                  name=\"name\"\n                  type=\"text\"\n                  value={name}\n                  onChange={this.onChange}\n                  required={!isRestricted}\n                  hideLabel\n                  isReadOnly={isRestricted}\n                  onBlur={this.onBlur}\n                />\n                <PopoverWrapper\n                  isActive={isMoreActionsMenuVisible}\n                  onOutsideClick={this.closeMoreActionsMenu}\n                  classes={{\n                    wrapper: 'list__popover-wrapper',\n                    popover: 'list__popover'\n                  }}\n                  align={{ inner: 'right' }}\n                  buttonProps={{\n                    size: 'medium',\n                    iconOnly: true,\n                    className: `list__btn--more-actions ${\n                      isMoreActionsMenuVisible ? 'is-active' : ''\n                    }`,\n                    children: <Icon name=\"more-vertical\" />,\n                    onClick: this.toggleMoreActionsMenu\n                  }}\n                >\n                  <Menu>\n                    <MenuItem>\n                      {!isRestricted && (\n                        <a href=\"\" onClick={this.handleListDelete}>\n                          Delete\n                        </a>\n                      )}\n                    </MenuItem>\n                  </Menu>\n                </PopoverWrapper>\n              </header>\n              <div className=\"list__content\">\n                <Tasks\n                  viewFilter={viewFilter}\n                  sortBy={sortBy}\n                  tasks={tasks}\n                  listId={listId}\n                  onTaskClick={onTaskClick}\n                  layout={layout}\n                />\n              </div>\n              {provided.placeholder}\n              {isBoardView ? (\n                <CardComposer\n                  listId={listId}\n                  listName={listName}\n                  projectId={projectId}\n                  projectName={projectName}\n                />\n              ) : (\n                <TaskComposer\n                  listId={listId}\n                  listName={listName}\n                  projectId={projectId}\n                  projectName={projectName}\n                />\n              )}\n            </section>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    tasks: taskSelectors.getListTasks(state, ownProps.taskIds),\n    projectName: projectSelectors.getProjectName(state, ownProps.projectId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteList: ({ listId, projectId }) =>\n      dispatch(listActions.deleteList({ listId, projectId }))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(List)\n);\n","import React from 'react';\n\nconst TaskEditorSection = ({ className, size, children }) => (\n  <div className={`task-editor__section${size === 'sm' ? '--sm' : ''} ${className ? `task-editor__section--${className}` : ''}`}>{children}</div>\n);\n\nTaskEditorSection.defaultProps = {\n  className: '',\n  size: 'default'\n};\n\nexport default TaskEditorSection;\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\n\nconst TaskEditorMoreActions = ({ onMenuClick }) => (\n  <PopoverWrapper\n    classes={{\n      wrapper: 'task-editor__popover-wrapper',\n      popover: 'task-editor__popover'\n    }}\n    align={{ outer: 'right', inner: 'right' }}\n    buttonProps={{\n      size: 'md',\n      iconOnly: true,\n      className: 'task-editor__toolbar-btn',\n      children: <Icon name=\"more-horizontal\" />\n    }}\n  >\n    <Menu onClick={onMenuClick}>\n      <MenuItem>\n        <a href=\"\" data-action=\"delete\">\n          Delete task\n        </a>\n      </MenuItem>\n    </Menu>\n  </PopoverWrapper>\n);\n\nexport default TaskEditorMoreActions;\n","import React from 'react';\nimport './DragHandle.scss';\n\nconst DragHandle = ({ className, isActive, ...props }) => (\n  <span {...props} className={`drag-handle ${className} ${isActive ? 'is-active' : ''}`}>\n    <svg className=\"drag-handle__icon\" viewBox=\"0 0 32 32\">\n      <path d=\"M14,5.5c0,1.7-1.3,3-3,3s-3-1.3-3-3s1.3-3,3-3S14,3.8,14,5.5z M21,8.5c1.7,0,3-1.3,3-3s-1.3-3-3-3s-3,1.3-3,3S19.3,8.5,21,8.5z M11,12.5c-1.7,0-3,1.3-3,3s1.3,3,3,3s3-1.3,3-3S12.7,12.5,11,12.5z M21,12.5c-1.7,0-3,1.3-3,3s1.3,3,3,3s3-1.3,3-3S22.7,12.5,21,12.5z M11,22.5c-1.7,0-3,1.3-3,3s1.3,3,3,3s3-1.3,3-3S12.7,22.5,11,22.5z M21,22.5c-1.7,0-3,1.3-3,3s1.3,3,3,3s3-1.3,3-3S22.7,22.5,21,22.5z\" />\n    </svg>\n  </span>\n);\n\nDragHandle.defaultProps = {\n  className: ''\n};\n\nexport default DragHandle;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Checkbox } from '../Checkbox';\nimport { Textarea } from '../Textarea';\nimport { withFirebase } from '../Firebase';\nimport { DragHandle } from '../DragHandle';\nimport * as keys from '../../constants/keys';\nimport './Subtask.scss';\n\nclass Subtask extends Component {\n  static defaultProps = {\n    usePortal: false\n  };\n\n  state = {\n    name: this.props.name,\n    isFocused: false\n  };\n\n  componentDidMount() {\n    this.portal = document.createElement('div');\n    document.body.appendChild(this.portal);\n  }\n\n  componentWillUnmount() {\n    document.body.removeChild(this.portal);\n  }\n\n  onChange = e => {\n    this.setState({\n      name: e.target.value\n    });\n  };\n\n  onFocus = () => {\n    this.setState({\n      isFocused: true\n    });\n  }\n\n  onBlur = () => {\n    const { name, firebase, subtaskId } = this.props;\n    const { name: newName } = this.state;\n    if (name !== newName) {\n      firebase.updateDoc(['subtasks', subtaskId], {\n        name: newName\n      });\n    }\n    this.setState({\n      isFocused: false\n    });\n  };\n\n  deleteSubtask = e => {\n    if (e.target.value !== '' || e.key !== keys.BACKSPACE) return;\n    const { subtaskId, taskId, firebase } = this.props;\n    firebase.deleteSubtask({ subtaskId, taskId });\n  };\n\n  toggleCompleted = async () => {\n    const { subtaskId, isCompleted, firebase } = this.props;\n    await firebase.updateSubtask(subtaskId, {\n      isCompleted: !isCompleted,\n      completedAt: !isCompleted ? firebase.getTimestamp() : null\n    });\n  };\n\n  setTextareaRef = el => {\n    this.textarea = el;\n  };\n\n  render() {\n    const { subtaskId, index, isCompleted, usePortal } = this.props;\n    const { name, isFocused } = this.state;\n\n    return (\n      <Draggable draggableId={subtaskId} index={index}>\n        {(provided, snapshot) => {\n          const inner = (\n            <li\n              className={`subtask ${snapshot.isDragging ? 'is-dragging' : ''} ${isFocused ? 'is-focused' : ''}`}\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n            >\n              <DragHandle className=\"subtask__drag-handle\" isActive={snapshot.isDragging} {...provided.dragHandleProps} />\n              <Checkbox\n                id={`cb-${subtaskId}`}\n                value={subtaskId}\n                name={subtaskId}\n                isChecked={isCompleted}\n                onChange={this.toggleCompleted}\n                className=\"subtask__checkbox\"\n                labelClass=\"subtask__checkbox-label\"\n              />\n              <Textarea\n                innerRef={this.setTextareaRef}\n                value={name}\n                onChange={this.onChange}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                name={subtaskId}\n                className=\"subtask__textarea\"\n                onKeyDown={this.deleteSubtask}\n              />\n            </li>\n          );\n          return usePortal && snapshot.isDragging\n            ? ReactDOM.createPortal(inner, this.portal)\n            : inner;\n        }}\n      </Draggable>\n    );\n  }\n}\n\nexport default withFirebase(Subtask);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { withFirebase } from '../Firebase';\nimport { Subtask } from '../Subtask';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { subtaskActions, subtaskSelectors } from '../../ducks/subtasks';\nimport { taskSelectors } from '../../ducks/tasks';\nimport { getSelectedProjectId } from '../../ducks/selectedProject';\nimport './Subtasks.scss';\n\nclass Subtasks extends Component {\n  static defaultProps = {\n    usePortal: false\n  };\n\n  state = {\n    isLoading: !this.props.isLoaded\n  };\n\n  async componentDidMount() {\n    const { syncTaskSubtasks, taskId, selectedProjectId } = this.props;\n    if (!selectedProjectId) {\n      this.unsubscribe = await syncTaskSubtasks(taskId);\n      this.setState({\n        isLoading: false\n      });\n    }\n  }\n\n  moveSubtask = ({ destination, draggableId, source }) => {\n    if (!destination) return;\n    if (destination.index === source.index) return;\n    const { firebase, subtaskIds } = this.props;\n    const updatedSubtaskIds = [...subtaskIds];\n    updatedSubtaskIds.splice(source.index, 1);\n    updatedSubtaskIds.splice(destination.index, 0, draggableId);\n    firebase.updateTask(source.droppableId, {\n      subtaskIds: updatedSubtaskIds\n    });\n  };\n\n  componentWillUnmount() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  }\n\n  render() {\n    const { taskId, subtasks, usePortal } = this.props;\n    const { isLoading } = this.state;\n    return (\n      <DragDropContext onDragEnd={this.moveSubtask}>\n        <Droppable droppableId={taskId} type={droppableTypes.SUBTASK}>\n          {provided => (\n            <ul\n              className=\"subtasks\"\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {!isLoading &&\n                subtasks.map((subtask, index) => {\n                  return (\n                    <Subtask\n                      subtaskId={subtask.subtaskId}\n                      taskId={taskId}\n                      index={index}\n                      name={subtask.name}\n                      isCompleted={subtask.isCompleted}\n                      key={subtask.subtaskId}\n                      usePortal={usePortal}\n                    />\n                  );\n                })}\n              {provided.placeholder}\n            </ul>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    subtasks: subtaskSelectors.getSubtasksArray(state, ownProps.subtaskIds),\n    subtasksById: subtaskSelectors.getSubtasksById(state),\n    selectedProjectId: getSelectedProjectId(state),\n    isLoaded: taskSelectors.getTaskLoadedState(state, ownProps.taskId).subtasks\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    syncTaskSubtasks: taskId =>\n      dispatch(subtaskActions.syncTaskSubtasks(taskId))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Subtasks)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withFirebase } from '../Firebase';\nimport { Avatar } from '../Avatar';\nimport { Button } from '../Button';\nimport { Textarea } from '../Textarea';\nimport { Icon } from '../Icon';\nimport * as keys from '../../constants/keys';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport './SubtaskComposer.scss';\n\nclass SubtaskComposer extends Component {\n  static defaultProps = {\n    classes: {\n      composer: '',\n      icon: '',\n      iconWrapper: '',\n      form: '',\n      textarea: '',\n      button: ''\n    }\n  }\n\n  state = {\n    name: '',\n    isFocused: false\n  };\n\n  resetForm = () => {\n    this.setState({ name: '' });\n  };\n\n  onChange = e => {\n    this.setState({\n      name: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isFocused: true\n    });\n  };\n\n  onBlur = e => {\n    if (e.target.value !== '') return;\n    this.setState({\n      isFocused: false\n    });\n  };\n\n  addSubtask = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { userId, firebase, taskId, projectId } = this.props;\n    const { name } = this.state;\n    firebase.addSubtask({ userId, name, taskId, projectId });\n    this.resetForm();\n    e.preventDefault();\n  };\n\n  render() {\n    const { name, isFocused } = this.state;\n    const { currentUser, classes } = this.props;\n    return (\n      <div className={`subtask-composer ${isFocused ? 'is-active' : ''} ${classes.composer || ''}`}>\n      <div className={`subtask-composer__icon-wrapper ${classes.iconWrapper || ''}`}>\n        <Icon name=\"plus-circle\" className={`subtask-composer__icon ${classes.icon || ''}`} />\n      </div>\n      <form\n            name=\"newSubtaskForm\"\n            className={`subtask-composer__form ${classes.form || ''} ${\n              isFocused ? 'is-focused' : ''\n            }`}\n          >\n            <Textarea\n              className={`subtask-composer__textarea ${classes.textarea || ''}`}\n              name=\"subtask\"\n              value={name}\n              onChange={this.onChange}\n              placeholder=\"Add a subtask\"\n              onFocus={this.onFocus}\n              onKeyDown={this.addSubtask}\n              onBlur={this.onBlur}\n            />\n            {isFocused && (\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={name === ''}\n                onClick={this.addSubtask}\n                className={classes.button || ''}\n              >\n                Add subtask\n              </Button>\n            )}\n          </form>\n          </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userId: currentUserSelectors.getCurrentUserId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(SubtaskComposer)\n);\n","import React, { Component } from 'react';\nimport { Tag } from '../Tag';\nimport { Input } from '../Input';\nimport { ColorPicker } from '../ColorPicker';\nimport { withOutsideClick } from '../withOutsideClick';\nimport * as keys from '../../constants/keys';\nimport './TagsInput.scss';\n\nclass TagsInput extends Component {\n  state = {\n    value: '',\n    isActive: false,\n    selectedTag: '',\n    focusedTag: '',\n    selectedIndex: null,\n    hasExactMatch: null,\n    filteredList: []\n  };\n\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.assignedTags.indexOf(undefined) !== -1) {\n      return false;\n    }\n    return true;\n  }\n\n  onFocus = () => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = () => {\n    this.setState({\n      selectedTag: '',\n      selectedIndex: null\n    });\n  };\n\n  resetForm = () => {\n    this.setState({\n      value: '',\n      selectedTag: '',\n      selectedIndex: null,\n      hasExactMatch: null,\n      focusedTag: '',\n      filteredList: []\n    });\n  };\n\n  matchTag = (tag, value) => {\n    const { name } = tag;\n    const regExp = new RegExp(value, 'i');\n    return regExp.test(name);\n  };\n\n  onChange = e => {\n    const { tagSuggestions } = this.props;\n    const { selectedTag } = this.state;\n    const { value } = e.target;\n    const filteredList = tagSuggestions.filter(tag =>\n      this.matchTag(tag, value)\n    );\n    const hasExactMatch =\n      filteredList.findIndex(item => item.name === value) !== -1;\n    const newIndex = filteredList.indexOf(selectedTag);\n    const persistSelectedTag = newIndex !== -1;\n\n    this.setState({\n      selectedTag: persistSelectedTag\n        ? selectedTag\n        : filteredList.length > 0\n        ? filteredList[0].name\n        : '',\n      selectedIndex: persistSelectedTag ? newIndex : 0,\n      value,\n      filteredList: hasExactMatch\n        ? filteredList\n        : [...filteredList, { name: value, color: 'default' }],\n      hasExactMatch\n    });\n  };\n\n  onKeyDown = e => {\n    if (\n      e.key !== keys.TAB &&\n      e.key !== keys.ARROW_DOWN &&\n      e.key !== keys.ARROW_UP &&\n      e.key !== keys.ENTER &&\n      e.key !== keys.BACKSPACE\n    )\n      return;\n\n    const {\n      filteredList,\n      selectedIndex,\n      selectedTag,\n      value,\n      focusedTag\n    } = this.state;\n    const { addTag, removeTag, assignedTags } = this.props;\n    const nextIndex =\n      selectedIndex === filteredList.length - 1 || selectedIndex === null\n        ? 0\n        : selectedIndex + 1;\n    const prevIndex =\n      selectedIndex === 0 ? filteredList.length - 1 : selectedIndex - 1;\n\n    // eslint-disable-next-line default-case\n    switch (e.key) {\n      case keys.ARROW_DOWN:\n      // eslint-disable-next-line no-fallthrough\n      case keys.TAB: {\n        this.setState({\n          selectedTag: filteredList[nextIndex].name,\n          selectedIndex: nextIndex\n        });\n        break;\n      }\n      case keys.ARROW_UP: {\n        this.setState({\n          selectedTag: filteredList[prevIndex].name,\n          selectedIndex: prevIndex\n        });\n        break;\n      }\n      case keys.ENTER: {\n        if (selectedTag === '' && value === '') return;\n        this.resetForm();\n        addTag(selectedTag === '' ? value : selectedTag);\n        break;\n      }\n      case keys.BACKSPACE: {\n        if (value !== '') return;\n        if (focusedTag === '') {\n          this.setState({\n            focusedTag: assignedTags[assignedTags.length - 1].name\n          });\n        } else {\n          this.resetForm();\n          removeTag(focusedTag);\n        }\n      }\n    }\n    e.preventDefault();\n  };\n\n  onOutsideClick = e => {\n    this.setState({\n      isActive: false\n    });\n  };\n\n  handleTagDelete = tag => {\n    const { removeTag } = this.props;\n    this.resetForm();\n    console.log(tag);\n    removeTag(tag);\n  };\n\n  render() {\n    const {\n      isColorPickerActive,\n      hideColorPicker,\n      assignedTags,\n      setTagColor,\n      currentTag,\n      innerRef\n    } = this.props;\n    const {\n      value,\n      isActive,\n      filteredList,\n      selectedTag,\n      hasExactMatch,\n      focusedTag\n    } = this.state;\n\n    const hasTags = assignedTags && assignedTags.length > 0;\n\n    const colorPickerStyle = {};\n    if (this.currentTagEl) {\n      const {\n        offsetLeft,\n        offsetWidth,\n        offsetTop,\n        offsetHeight\n      } = this.currentTagEl;\n      colorPickerStyle.left = offsetLeft + offsetWidth / 2 - 74; // 74 = 1/2 colorPicker width\n      colorPickerStyle.top = offsetTop + offsetHeight + 9; // 9 = colorPicker arrow height\n    }\n\n    return (\n      <div\n        className={`tags__container ${isActive ? 'is-active' : ''} ${\n          !hasTags ? 'no-tags' : ''\n        }`}\n        ref={innerRef}\n      >\n        {assignedTags.map(tag => (\n          <Tag\n            key={tag.name}\n            color={tag.color}\n            size=\"md\"\n            name={tag.name}\n            onDelete={() => this.handleTagDelete(tag.name)}\n            className={focusedTag === tag.name ? 'is-focused' : ''}\n            innerRef={\n              currentTag === tag.name ? el => (this.currentTagEl = el) : null\n            }\n          />\n        ))}\n        <div className=\"tags-input__wrapper\">\n          <Input\n            className=\"tags-input\"\n            onChange={this.onChange}\n            onBlur={this.onBlur}\n            value={value}\n            onFocus={this.onFocus}\n            type=\"text\"\n            autoComplete=\"off\"\n            onKeyDown={this.onKeyDown}\n            hideLabel\n          />\n          {isActive && (\n            <ul className=\"tags-input__list\">\n              {filteredList.map((item, i) => {\n                return (\n                  <li\n                    key={item.name}\n                    className={`tags-input__item ${\n                      selectedTag === item.name ? 'is-selected' : ''\n                    } ${\n                      !hasExactMatch && i === filteredList.length - 1\n                        ? 'tags-input__item--new'\n                        : ''\n                    }`}\n                  >\n                    {!hasExactMatch && i === filteredList.length - 1 ? (\n                      <>\n                        <h4 className=\"tags-input__item--heading\">New Tag</h4>\n                        <span className=\"tags-input__item--name\">\n                          {item.name}\n                        </span>\n                      </>\n                    ) : (\n                      <Tag name={item.name} color={item.color} size=\"sm\" />\n                    )}\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n        </div>\n        {isActive && (\n          <ColorPicker\n            isActive={isColorPickerActive}\n            selectColor={setTagColor}\n            style={colorPickerStyle}\n            onOutsideClick={hideColorPicker}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withOutsideClick(TagsInput);\n","import React, { Component } from 'react';\nimport {\n  MONTHS,\n  WEEK_DAYS,\n  getNextMonth,\n  getPrevMonth,\n  getMonthDates,\n  getNextYears\n} from '../../utils/date';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { PopoverWrapper } from '../Popover';\nimport { Radio } from '../Radio';\nimport './Calendar.scss';\n\nexport default class Calendar extends Component {\n  state = {\n    isMonthsDropdownActive: false,\n    isYearsDropdownActive: false\n  };\n\n  goToNextMonth = () => {\n    const { month, year, onMonthClick } = this.props;\n    onMonthClick(getNextMonth(month, year));\n  };\n\n  goToPrevMonth = () => {\n    const { month, year, onMonthClick } = this.props;\n    onMonthClick(getPrevMonth(month, year));\n  };\n\n  toggleMonthsDropdown = () => {\n    this.setState(prevState => ({\n      isMonthsDropdownActive: !prevState.isMonthsDropdownActive\n    }));\n  };\n\n  toggleYearsDropdown = () => {\n    this.setState(prevState => ({\n      isYearsDropdownActive: !prevState.isYearsDropdownActive\n    }));\n  };\n\n  closeYearsDropdown = () => {\n    this.setState({\n      isYearsDropdownActive: false\n    });\n  };\n\n  closeMonthsDropdown = () => {\n    this.setState({\n      isMonthsDropdownActive: false\n    });\n  };\n\n  selectMonth = e => {\n    const month = +e.target.value;\n    const { onMonthClick, year } = this.props;\n    onMonthClick({ month, year });\n    this.toggleMonthsDropdown();\n  };\n\n  selectYear = e => {\n    const year = +e.target.value;\n    const { onYearClick } = this.props;\n    onYearClick(year);\n    this.toggleYearsDropdown();\n  };\n\n  render() {\n    const {\n      month,\n      year,\n      selectedDate,\n      today,\n      onDayClick,\n      classes\n    } = this.props;\n    const { isMonthsDropdownActive, isYearsDropdownActive } = this.state;\n    const dates = getMonthDates(month, year);\n    const years = getNextYears(4);\n\n    return (\n      <div className={`calendar ${classes.calendar}`}>\n        <div className=\"calendar__year\">\n          <PopoverWrapper\n            isActive={isYearsDropdownActive}\n            onOutsideClick={this.closeYearsDropdown}\n            classes={{\n              wrapper: 'calendar__years-dropdown-wrapper',\n              popover: 'calendar__years-dropdown'\n            }}\n            buttonProps={{\n              className: `calendar__btn--years-dropdown ${\n                isYearsDropdownActive ? 'is-active' : ''\n              }`,\n              children: (\n                <>\n                  {year}\n                  <Icon name=\"chevron-down\" />\n                </>\n              ),\n              onClick: this.toggleYearsDropdown\n            }}\n          >\n            <ul className=\"calendar__years-list\">\n              {years.map(yearOption => (\n                <li className=\"calendar__years-item\" key={yearOption}>\n                  <Radio\n                    name=\"year\"\n                    id={yearOption}\n                    value={yearOption}\n                    isChecked={yearOption === year}\n                    label={\n                      yearOption === year ? (\n                        <>\n                          <Icon name=\"check\" />\n                          {yearOption}\n                        </>\n                      ) : (\n                        yearOption\n                      )\n                    }\n                    onChange={this.selectYear}\n                    classes={{\n                      radio: 'calendar__radio',\n                      label: 'calendar__radio-label'\n                    }}\n                  />\n                </li>\n              ))}\n            </ul>\n          </PopoverWrapper>\n        </div>\n        <div className=\"calendar__month\">\n          <PopoverWrapper\n            isActive={isMonthsDropdownActive}\n            onOutsideClick={this.closeMonthsDropdown}\n            classes={{\n              wrapper: 'calendar__months-dropdown-wrapper',\n              popover: 'calendar__months-dropdown'\n            }}\n            buttonProps={{\n              className: `calendar__btn--months-dropdown ${\n                isMonthsDropdownActive ? 'is-active' : ''\n              }`,\n              children: (\n                <>\n                  {MONTHS[month].long}\n                  <Icon name=\"chevron-down\" />\n                </>\n              ),\n              onClick: this.toggleMonthsDropdown\n            }}\n          >\n            <ul className=\"calendar__months-list\">\n              {MONTHS.map((monthOption, i) => (\n                <li className=\"calendar__months-item\" key={monthOption.long}>\n                  <Radio\n                    name=\"month\"\n                    id={monthOption.long}\n                    value={i}\n                    isChecked={i === month}\n                    label={\n                      i === month ? (\n                        <>\n                          <Icon name=\"check\" />\n                          {monthOption.long}\n                        </>\n                      ) : (\n                        monthOption.long\n                      )\n                    }\n                    onChange={this.selectMonth}\n                    classes={{\n                      radio: 'calendar__radio',\n                      label: 'calendar__radio-label'\n                    }}\n                  />\n                </li>\n              ))}\n            </ul>\n          </PopoverWrapper>\n          <div className=\"calendar__month--prev-next\">\n            <Button\n              type=\"button\"\n              className=\"calendar__btn--month calendar__btn--prev-month\"\n              size=\"sm\"\n              iconOnly\n              onClick={this.goToPrevMonth}\n            >\n              <Icon name=\"chevron-left\" />\n            </Button>\n            <Button\n              type=\"button\"\n              className=\"calendar__btn--month calendar__btn--next-month\"\n              size=\"sm\"\n              iconOnly\n              onClick={this.goToNextMonth}\n            >\n              <Icon name=\"chevron-right\" />\n            </Button>\n          </div>\n        </div>\n        <div className=\"calendar__week-days\">\n          {WEEK_DAYS.map(day => (\n            <div\n              key={day.long}\n              className={`calendar__week-day ${classes.weekDay}`}\n            >\n              {day.narrow}\n            </div>\n          ))}\n        </div>\n        <div className=\"calendar__days\">\n          {dates.map(date => {\n            const isToday =\n              date.day === today.day &&\n              date.month === today.month &&\n              date.year === today.year;\n            const isSelectedDate =\n              selectedDate &&\n              date.day === selectedDate.day &&\n              date.month === selectedDate.month &&\n              date.year === selectedDate.year;\n            return (\n              <div\n                key={`${date.month}--${date.day}`}\n                className={`calendar__day ${\n                  date.month !== month ? 'calendar__day--prev-next' : ''\n                } ${isToday ? 'is-today' : ''} ${\n                  isSelectedDate ? 'is-selected' : ''\n                } ${classes.day}`}\n              >\n                <Button\n                  type=\"button\"\n                  className=\"calendar__btn--day\"\n                  size=\"sm\"\n                  onClick={() => onDayClick(date)}\n                >\n                  {date.day}\n                </Button>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  toSimpleDateString,\n  toSimpleDateObj,\n  isSDSFormat,\n  isSameDate\n} from '../../utils/date';\nimport { Calendar } from '../Calendar';\nimport { Button } from '../Button';\nimport { Input } from '../Input';\nimport './DatePicker.scss';\n\nexport default class DatePicker extends Component {\n  state = {\n    today: {\n      day: new Date().getDate(),\n      month: new Date().getMonth(),\n      year: new Date().getFullYear()\n    },\n    selectedDate: this.props.selectedDate,\n    currentMonth: this.props.currentMonth,\n    currentYear: this.props.currentYear,\n    dateString: toSimpleDateString(this.props.selectedDate) || ''\n  };\n\n  resetCalendar = () => {\n    this.setState({\n      currentMonth: this.props.currentMonth,\n      currentYear: this.props.currentYear\n    });\n  };\n\n  componentDidMount() {}\n\n  selectDate = date => {\n    if (typeof date === 'string') {\n      const newDate = toSimpleDateObj(date);\n      const { month, year } = newDate;\n      const { currentMonth, currentYear } = this.state;\n      this.setState({\n        selectedDate: newDate\n      });\n      if (month !== currentMonth || year !== currentYear) {\n        this.setCurrentMonth({ month, year });\n      }\n    } else {\n      this.setState({\n        selectedDate: date,\n        dateString: toSimpleDateString(date)\n      });\n    }\n  };\n\n  setCurrentMonth = ({ month, year }) => {\n    this.setState({\n      currentMonth: month,\n      currentYear: year\n    });\n  };\n\n  setCurrentYear = year => {\n    this.setState({\n      currentYear: year\n    });\n  };\n\n  updateDateString = e => {\n    const { value } = e.target;\n    this.setState({\n      dateString: value\n    });\n    if (isSDSFormat(value)) {\n      this.selectDate(value);\n    }\n  };\n\n  setDate = () => {\n    const { selectedDate: currentDueDate, selectDate } = this.props;\n    const { selectedDate } = this.state;\n    if (\n      !(currentDueDate === null && selectedDate === null) &&\n      !isSameDate(currentDueDate, selectedDate)\n    ) {\n      const { day, month, year } = selectedDate;\n      const date = new Date(year, month, day);\n      selectDate(date);\n    }\n    this.closeDatePicker();\n  };\n\n  clearDueDate = () => {\n    const { selectedDate, selectDate } = this.props;\n    this.selectDate(null);\n    if (selectedDate !== null) {\n      selectDate(null);\n    }\n    this.closeDatePicker();\n  };\n\n  closeDatePicker = () => {\n    const { onClose } = this.props;\n    this.resetCalendar();\n    onClose();\n  }\n\n  render() {\n    const { isActive, innerRef } = this.props;\n    const {\n      today,\n      selectedDate,\n      currentMonth,\n      currentYear,\n      dateString\n    } = this.state;\n    return (\n      <div\n        className=\"date-picker\"\n        ref={innerRef}\n        style={{ display: !isActive ? 'none' : 'block' }}\n      >\n        <div className=\"date-picker__header\">\n          <div className=\"date-picker__due-date-wrapper\">\n            <Input\n              name=\"dueDate\"\n              type=\"text\"\n              label=\"Due Date\"\n              value={dateString}\n              onChange={this.updateDateString}\n              className=\"date-picker__input--due-date\"\n              labelClass=\"date-picker__label--due-date\"\n              placeholder=\"mm-dd-yy\"\n              maxLength={8}\n            />\n          </div>\n        </div>\n        <Calendar\n          classes={{\n            calendar: 'date-picker__calendar',\n            weekDay: 'date-picker__week-day'\n          }}\n          month={currentMonth}\n          year={currentYear}\n          selectedDate={selectedDate}\n          today={today}\n          onDayClick={this.selectDate}\n          onMonthClick={this.setCurrentMonth}\n          onYearClick={this.setCurrentYear}\n        />\n        <div className=\"date-picker__footer\">\n          <Button\n            size=\"sm\"\n            variant=\"text\"\n            color=\"neutral\"\n            className=\"date-picker__btn--clear\"\n            onClick={this.clearDueDate}\n          >\n            Clear\n          </Button>\n          <Button\n            size=\"sm\"\n            variant=\"contained\"\n            color=\"primary\"\n            className=\"date-picker__btn--set-due-date\"\n            onClick={this.setDate}\n          >\n            Done\n          </Button>\n          <Button\n            size=\"sm\"\n            variant=\"text\"\n            color=\"neutral\"\n            className=\"date-picker__btn--cancel\"\n            onClick={this.closeDatePicker}\n          >\n            Cancel\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport './TaskEditorPane.scss';\n\nconst TaskEditorPane = ({ onClose, onClick, children }) => (\n  <div className=\"task-editor-pane\" onClick={onClick}>\n    <Button\n      type=\"button\"\n      className=\"task-editor-pane__btn--close\"\n      onClick={onClose}\n      iconOnly\n    >\n      <Icon name=\"x\" />\n  </Button>\n  { children }\n  </div>\n);\n\nexport default TaskEditorPane;","import React, { Component } from 'react';\nimport { PopoverWrapper } from '../Popover';\nimport { Menu, MenuItem } from '../Menu';\nimport { Radio } from '../Radio';\nimport { Icon } from '../Icon';\nimport './Dropdown.scss';\n\nexport default class Dropdown extends Component {\n  static defaultProps = {\n    classes: {\n      wrapper: '',\n      dropdown: '',\n      menu: '',\n      item: '',\n      radio: '',\n      label: '',\n      button: ''\n    },\n    options: []\n  };\n\n  state = {\n    isActive: false\n  };\n\n  toggleDropdown = e => {\n    this.setState(prevState => ({\n      isActive: !prevState.isActive\n    }));\n  };\n\n  closeDropdown = e => {\n    this.setState({\n      isActive: false\n    });\n  };\n\n  onChange = e => {\n    const { onChange } = this.props;\n    onChange(e);\n    this.closeDropdown();\n  };\n\n  render() {\n    const { isActive } = this.state;\n    const { classes, options, name, selectedOption, align } = this.props;\n\n    return (\n      <PopoverWrapper\n        isActive={isActive}\n        onOutsideClick={this.closeDropdown}\n        align={align}\n        classes={{\n          wrapper: `dropdown__wrapper ${classes.wrapper || ''}`,\n          popover: `dropdown ${classes.dropdown || ''}`\n        }}\n        buttonProps={{\n          onClick: this.toggleDropdown,\n          className: `dropdown__btn--toggle ${isActive ? 'is-active' : ''} ${classes.button || ''}`,\n          children: (\n            <>\n              {selectedOption.label}\n              <Icon name=\"chevron-down\" />\n            </>\n          )\n        }}\n      >\n        <Menu className={`dropdown__menu ${classes.menu || ''}`}>\n          {options.map(option => (\n            <MenuItem\n              className={`dropdown__item ${classes.item || ''}`}\n              key={option.value}\n            >\n              <Radio\n                name={name}\n                id={option.value}\n                value={option.value}\n                isChecked={option.value === selectedOption.value}\n                label={\n                  option.value === selectedOption.value ? (\n                    <>\n                      <Icon name=\"check\" />\n                      {option.label}\n                    </>\n                  ) : (\n                    option.label\n                  )\n                }\n                onChange={this.onChange}\n                classes={{\n                  radio: `dropdown__radio ${classes.radio || ''}`,\n                  label: `dropdown__label ${classes.label || ''}`\n                }}\n                data-label={option.label}\n              />\n            </MenuItem>\n          ))}\n        </Menu>\n      </PopoverWrapper>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Dropdown } from '../Dropdown';\nimport { projectSelectors, projectActions } from '../../ducks/projects';\n\nclass ProjectListDropdown extends Component {\n  state = {\n    isLoadingLists: !this.props.projectLoadedState.lists\n  };\n\n  async componentDidMount() {\n    const { projectLoadedState, fetchProjectLists, projectId } = this.props;\n    const { lists: isLoaded } = projectLoadedState;\n\n    if (!isLoaded) {\n      await fetchProjectLists(projectId);\n      this.setState({\n        isLoadingLists: false\n      });\n    }\n  }\n\n  render() {\n    const { isLoadingLists } = this.state;\n    const { isActive, onToggle, onChange, lists, selectedList, classes } = this.props;\n    return (\n      <Dropdown\n        options={\n          !isLoadingLists\n            ? lists.map(list => ({ value: list.listId, label: list.name }))\n            : []\n        }\n        selectedOption={selectedList}\n        name=\"list\"\n        align={{ inner: 'right' }}\n        onChange={onChange}\n        classes={classes}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    lists: projectSelectors.getProjectLists(state, ownProps.projectId),\n    projectsById: projectSelectors.getProjectsById(state),\n    projectLoadedState: projectSelectors.getProjectLoadedState(\n      state,\n      ownProps.projectId\n    )\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchProjectLists: projectId =>\n      dispatch(projectActions.fetchProjectLists(projectId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ProjectListDropdown);\n","import { Value } from 'slate';\n\nexport const fromJSON = value => Value.fromJSON(value);\n\nexport const getUserIdsFromMentions = value => {\n  const { document } = value;\n  return document\n    .getInlinesByType('mention')\n    .map(mention => mention.data.get('userId'))\n    .toJS();\n};\n\nexport const getMentionedUsers = value => {\n  const { document } = value;\n  return document\n    .getInlinesByType('mention')\n    .map(mention => ({\n      userId: mention.data.get('userId'),\n      name: mention.data.get('name'),\n      username: mention.data.get('username')\n    }))\n    .toJS();\n};\n","import React, { Component } from 'react';\nimport { Editor } from 'slate-react';\nimport { Value } from 'slate';\nimport { Link } from 'react-router-dom';\nimport isEqual from 'lodash.isequal';\nimport { Toolbar } from '../Toolbar';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport initialValue from './value.json';\nimport * as keys from '../../constants/keys';\nimport { MemberSearch } from '../MemberSearch';\nimport { withOutsideClick } from '../withOutsideClick';\nimport './RichTextEditor.scss';\n\nconst DEFAULT_BLOCK = 'paragraph';\n\nconst schema = {\n  inlines: {\n    mention: {\n      isVoid: true\n    }\n  }\n};\n\nclass RichTextEditor extends Component {\n  static defaultProps = {\n    classes: {\n      container: '',\n      toolbar: '',\n      editor: '',\n      button: '',\n      addOns: ''\n    },\n    placeholder: '',\n    marks: [],\n    blocks: [],\n    inlines: [],\n    isMentionsEnabled: false,\n    onSubmit: () => null,\n    addOns: [],\n    isReadOnly: false\n  };\n\n  state = {\n    value: this.props.value\n      ? Value.fromJSON(this.props.value)\n      : Value.fromJSON(initialValue),\n    isMentionsListVisible: false,\n    query: '',\n    isFocused: false\n  };\n\n  isEmpty = () => {\n    const { value } = this.state;\n    return isEqual(initialValue, value.toJSON());\n  };\n\n  hasChanges = () => {\n    const { value } = this.state;\n    const { value: prevValue } = this.props;\n    return !isEqual(prevValue, value.toJSON());\n  };\n\n  hasMark = type => {\n    const { value } = this.state;\n    return value.activeMarks.some(mark => mark.type === type);\n  };\n\n  hasInline = type => {\n    const { value, isMentionsListVisible } = this.state;\n    return (\n      value.inlines.some(inline => inline.type === type) ||\n      (type === 'mention' && isMentionsListVisible)\n    );\n  };\n\n  hasBlock = type => {\n    const { value } = this.state;\n    if (['numbered-list', 'bulleted-list'].includes(type)) {\n      const { value: { document, blocks } } = this.state;\n      if (blocks.size === 0) return false;\n      const parent = document.getParent(blocks.first().key);\n      return this.hasBlock('list-item') && parent && parent.type === type;\n    }\n    return value.blocks.some(node => node.type === type);\n  };\n\n  renderMark = (props, editor, next) => {\n    const { children, mark, attributes } = props;\n\n    switch (mark.type) {\n      case 'bold':\n        return <strong {...attributes}>{children}</strong>;\n      case 'code':\n        return <code {...attributes}>{children}</code>;\n      case 'italic':\n        return <em {...attributes}>{children}</em>;\n      case 'underlined':\n        return <u {...attributes}>{children}</u>;\n      default:\n        return next();\n    }\n  };\n\n  renderNode = (props, editor, next) => {\n    const { attributes, children, node } = props;\n    const { data } = node;\n\n    switch (node.type) {\n      case 'paragraph':\n        return <p {...attributes}>{children}</p>;\n      case 'block-quote':\n        return <blockquote {...attributes}>{children}</blockquote>;\n      case 'bulleted-list':\n        return <ul {...attributes}>{children}</ul>;\n      case 'heading-one':\n        return <h1 {...attributes}>{children}</h1>;\n      case 'heading-two':\n        return <h2 {...attributes}>{children}</h2>;\n      case 'list-item':\n        return <li {...attributes}>{children}</li>;\n      case 'mention':\n        return (\n          <Link className=\"mention\" to={data.get('href')} {...attributes}>\n            {node.text}\n          </Link>\n        );\n      default:\n        return next();\n    }\n  };\n\n  onKeyDown = (e, editor, next) => {\n    const { value } = editor;\n    const { document } = value;\n    const { isMentionsEnabled } = this.props;\n    const { isMentionsListVisible } = this.state;\n    const endOffset = value.selection.end.offset;\n    const lastChar = value.endText.text.slice(endOffset - 1, endOffset);\n    if (e.ctrlKey || e.metaKey) {\n      let mark;\n      switch (e.key) {\n        case 'b': {\n          mark = 'bold';\n          break;\n        }\n        case 'i': {\n          mark = 'italic';\n          break;\n        }\n        case 'u': {\n          mark = 'underlined';\n          break;\n        }\n        default: {\n          return next();\n        }\n      }\n      editor.toggleMark(mark);\n      e.preventDefault();\n    } else {\n      const firstText = document.getFirstText();\n      const nextText = document.getNextText(firstText.key);\n      switch (e.key) {\n        case keys.BACKSPACE: {\n          if (firstText.text === '' && !nextText) {\n            if (this.hasBlock('list-item')) {\n              const parent = document.getParent(value.focusBlock.key);\n              const ancestor = document.getParent(parent.key);\n              if (ancestor.object === 'document') {\n                editor\n                  .moveToRangeOfNode(value.focusBlock)\n                  .setBlocks(DEFAULT_BLOCK)\n                  .moveToRangeOfNode(parent)\n                  .unwrapBlock(parent.type)\n                  .normalize(document);\n              } else {\n                editor.unwrapBlock(parent.type);\n              }\n            }\n          } else {\n            editor.deleteBackward();\n          if (isMentionsEnabled && isMentionsListVisible && lastChar === '@') {\n            setTimeout(this.toggleMentionsList, 0);\n          }\n          }\n          break;\n        }\n        case '@': {\n          this.toggleMentionsList();\n          break;\n        }\n        default: {\n          return next();\n        }\n      }\n    }\n  };\n\n  onChange = ({ value }) => {\n    this.setState({\n      value,\n      query: this.getMention(value)\n    });\n  };\n\n  onClickMark = e => {\n    e.preventDefault();\n    const type = e.target.value;\n    this.editor.toggleMark(type);\n    this.editor.focus();\n  };\n\n  onClickInline = e => {\n    e.preventDefault();\n    const type = e.target.value;\n    const { value } = this.editor;\n    if (type === 'mention') {\n      const startOffset = value.selection.start.offset;\n      const endOffset = value.selection.end.offset;\n      const selectedText = value.startText.text.slice(startOffset, endOffset);\n      this.editor\n        .insertText(`@${selectedText}`)\n        .moveToEndOfText()\n        .focus();\n      setTimeout(() => {\n        this.toggleMentionsList();\n        if (!this.editor.value.selection.start.offset) {\n          this.editor.normalize().moveTo(selectedText.length + 1);\n        }\n      }, 0);\n    }\n  };\n\n  onClickBlock = e => {\n    e.preventDefault();\n    const type = e.target.value;\n    const { editor } = this;\n    const { value } = editor;\n    const { document } = value;\n\n    if (type !== 'bulleted-list' && type !== 'numbered-list') {\n      const isActive = this.hasBlock(type);\n      const isList = this.hasBlock('list-item');\n      \n      if (isList) {\n        editor.setBlocks(isActive ? DEFAULT_BLOCK : type)\n          .setBlocks()\n          .unwrapBlock('bulleted-list')\n          .unwrapBlock('numbered-list');\n      } else {\n        editor.setBlocks(isActive ? DEFAULT_BLOCK : type);\n      }\n    } else {\n\n      const isList = this.hasBlock('list-item')\n      const isType = value.blocks.some(block => {\n        return !!document.getClosest(block.key, parent => parent.type === type)\n      })\n\n      if (isList && isType) {\n        editor\n          .setBlocks(DEFAULT_BLOCK)\n          .unwrapBlock('bulleted-list')\n          .unwrapBlock('numbered-list')\n      } else if (isList) {\n        editor\n          .unwrapBlock(\n            type === 'bulleted-list' ? 'numbered-list' : 'bulleted-list'\n          )\n          .wrapBlock(type)\n      } else {\n        editor.setBlocks('list-item').wrapBlock(type)\n      }\n    }\n  };\n\n  getMention = value => {\n    if (!value.startText) {\n      return '';\n    }\n\n    const startOffset = value.selection.start.offset;\n    const textBefore = value.startText.text.slice(0, startOffset);\n    const result = /@(\\S*)$/.exec(textBefore);\n\n    return result == null ? '' : result[1];\n  };\n\n  toggleMentionsList = () => {\n    this.setState(prevState => ({\n      isMentionsListVisible: !prevState.isMentionsListVisible\n    }));\n  };\n\n  toggleFocus = () => {\n    const { isFocused } = this.state;\n    setTimeout(() => {\n      this.setState(prevState => ({\n        isFocused: !prevState.isFocused\n      }));\n      if (this.editor && !isFocused) {\n        this.editor.focus();\n      }\n    }, 0);\n  };\n\n  removeFocus = () => {\n    const { isFocused } = this.state;\n    setTimeout(() => {\n      this.setState(() => ({\n        isFocused: false\n      }));\n    }, 0);\n  };\n\n  onFocus = e => {\n    console.log('focus');\n    this.toggleFocus();\n  };\n\n  onBlur = (e, editor, next) => {\n    console.log('on blur');\n    const { isFocused } = this.state;\n    const { value: prevValue, onBlur } = this.props;\n    this.removeFocus();\n    if (prevValue !== undefined && this.hasChanges() && onBlur) {\n      const { value } = this.state;\n      onBlur(value, e);\n    }\n  };\n\n\n  onUpdate = e => {\n    e.preventDefault();\n    const { value } = this.state;\n    const { onUpdate } = this.props;\n    if (onUpdate && this.hasChanges()) {\n      onUpdate(value, e);\n    }\n    this.reset();\n  };\n\n  insertMention = userId => {\n    const { mentions } = this.props;\n    const { map } = mentions;\n    const user = map[userId];\n    const { query } = this.state;\n\n    this.editor.deleteBackward(query.length + 1);\n    const selectedRange = this.editor.value.selection;\n\n    this.editor\n      .insertText(' ')\n      .insertInlineAtRange(selectedRange, {\n        data: {\n          href: `/0/${user.userId}/profile`,\n          userId: user.userId,\n          name: user.name,\n          username: user.username\n        },\n        nodes: [\n          {\n            object: 'text',\n            leaves: [\n              {\n                text: `@${user.name}`\n              }\n            ]\n          }\n        ],\n        type: 'mention'\n      })\n      .focus();\n\n    setTimeout(() => {\n      this.setState({\n        query: ''\n      });\n      this.toggleMentionsList();\n    }, 0);\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    if (this.isEmpty()) return;\n    const { value } = this.state;\n    const { onSubmit } = this.props;\n    onSubmit(value, e);\n    this.reset();\n  };\n\n  reset = () => {\n    const { value } = this.props;\n    this.setState({\n      value: !!value ? Value.fromJSON(value) : Value.fromJSON(initialValue),\n      isMentionsListVisible: false,\n      query: '',\n      isFocused: false\n    });\n  };\n\n  ref = editor => {\n    this.editor = editor;\n  };\n\n  onOutsideClick = e => {\n    const { isFocused } = this.state;\n    if (!this.editor || !isFocused) return;\n    this.editor.blur();\n  };\n\n  render() {\n    const {\n      id,\n      classes,\n      placeholder,\n      marks,\n      inlines,\n      blocks,\n      isMentionsEnabled,\n      mentions,\n      addOns,\n      isReadOnly,\n      innerRef\n    } = this.props;\n    const { value, isMentionsListVisible, query, isFocused } = this.state;\n    return (\n      <div\n        ref={innerRef}\n        className={`rich-text-editor__container ${\n          isFocused ? 'is-focused' : ''\n        } ${classes.container || ''}`}\n      >\n        <Toolbar\n          className={`rich-text-editor__toolbar ${classes.toolbar || ''}`}\n          isActive={isFocused}\n        >\n          {marks.map(mark => (\n            <Button\n              key={`${id}--${mark.type}`}\n              size=\"sm\"\n              className={`rich-text-editor__btn ${classes.button || ''}`}\n              value={mark.type}\n              onMouseDown={this.onClickMark}\n              iconOnly\n              isActive={this.hasMark(mark.type)}\n            >\n              <Icon name={mark.icon} />\n            </Button>\n          ))}\n          {inlines.map(inline => (\n            <Button\n              key={`${id}--${inline.type}`}\n              size=\"sm\"\n              className={`rich-text-editor__btn ${classes.button || ''}`}\n              value={inline.type}\n              onMouseDown={this.onClickInline}\n              iconOnly\n              isActive={this.hasInline(inline.type)}\n            >\n              <Icon name={inline.icon} />\n            </Button>\n          ))}\n          {blocks.map(block => (\n            <Button\n              key={`${id}--${block.type}`}\n              size=\"sm\"\n              className={`rich-text-editor__btn ${classes.button || ''}`}\n              value={block.type}\n              onMouseDown={this.onClickBlock}\n              iconOnly\n              isActive={this.hasBlock(block.type)}\n            >\n              <Icon name={block.icon} />\n            </Button>\n          ))}\n          {addOns.length > 0 && (\n            <div\n              className={`rich-text-editor__add-ons ${classes.addOns || ''}`}\n            >\n              {addOns.map(addOn => (\n                <Button\n                  key={`${id}--${addOn.type}`}\n                  type=\"button\"\n                  onMouseDown={this[addOn.onClick]}\n                  {...addOn.props}\n                />\n              ))}\n            </div>\n          )}\n        </Toolbar>\n        <Editor\n          key={`editor--${id}`}\n          schema={schema}\n          ref={this.ref}\n          value={value}\n          placeholder={placeholder}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          onChange={this.onChange}\n          onKeyDown={this.onKeyDown}\n          className={`rich-text-editor ${classes.editor || ''}`}\n          renderMark={this.renderMark}\n          renderNode={this.renderNode}\n          readOnly={isReadOnly}\n        />\n        {isMentionsEnabled && (\n          <MemberSearch\n            key={`member-search--${id}`}\n            query={query}\n            isActive={isMentionsListVisible}\n            users={mentions.list}\n            placeholder=\"\"\n            assignedMembers={[]}\n            onSelectMember={this.insertMention}\n            type=\"hidden\"\n            classes={{\n              wrapper: 'rich-text-editor__mentions-wrapper',\n              list: 'rich-text-editor__mentions-list'\n            }}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withOutsideClick(RichTextEditor);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withFirebase } from '../Firebase';\nimport { Avatar } from '../Avatar';\nimport * as keys from '../../constants/keys';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport { userSelectors } from '../../ducks/users';\nimport { RichTextEditor, getMentionedUsers } from '../RichTextEditor';\nimport './CommentComposer.scss';\n\nclass CommentComposer extends Component {\n  static defaultProps = {\n    classes: {\n      avatar: '',\n      avatarPlaceholder: '',\n      composer: '',\n      button: ''\n    }\n  };\n\n  addComment = (value, e) => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { currentUser, firebase, taskId, projectId } = this.props;\n    const users = getMentionedUsers(value);\n    firebase.addComment({\n      content: value.toJSON(),\n      to: users,\n      from: {\n        userId: currentUser.userId,\n        name: currentUser.name,\n        username: currentUser.username\n      },\n      taskId,\n      projectId\n    });\n    e.preventDefault();\n  };\n\n  render() {\n    const { currentUser, classes, users, usersById, id } = this.props;\n    return (\n      <>\n        <Avatar\n          classes={{\n            avatar: classes.avatar || '',\n            placeholder: classes.avatarPlaceholder || ''\n          }}\n          name={currentUser.name}\n          size=\"sm\"\n          variant=\"circle\"\n          imgSrc={currentUser.photoURL}\n        />\n        <RichTextEditor\n          key={`comment-composer--${id}`}\n          id={`comment-composer--${id}`}\n          onSubmit={this.addComment}\n          classes={{\n            container: `comment-composer ${classes.composer || ''}`,\n            toolbar: 'comment-composer__toolbar',\n            button: 'comment-composer__toolbar-btn',\n            addOns: 'comment-composer__add-ons'\n          }}\n          isMentionsEnabled\n          mentions={{\n            list: users,\n            map: usersById\n          }}\n          addOns={[\n            {\n              type: 'submit',\n              onClick: 'onSubmit',\n              id: 'submitComment',\n              props: {\n                className: `comment-composer__btn--submit ${classes.button ||\n                  ''}`,\n                color: 'primary',\n                variant: 'contained',\n                children: 'Send'\n              }\n            }\n          ]}\n          marks={[\n            {\n              type: 'bold',\n              icon: 'bold'\n            },\n            {\n              type: 'italic',\n              icon: 'italic'\n            },\n            {\n              type: 'underlined',\n              icon: 'underline'\n            }\n          ]}\n          inlines={[\n            {\n              type: 'mention',\n              icon: 'at-sign'\n            }\n          ]}\n        />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: currentUserSelectors.getCurrentUser(state),\n    users: userSelectors.getUsersArray(state),\n    usersById: userSelectors.getUsersById(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CommentComposer)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withFirebase } from '../Firebase';\nimport { userSelectors } from '../../ducks/users';\nimport { RichTextEditor, getUserIdsFromMentions } from '../RichTextEditor';\nimport './CommentEditor.scss';\n\nclass CommentEditor extends Component {\n  static defaultProps = {\n    classes: {\n      editor: '',\n      button: ''\n    },\n    isReadOnly: true\n  };\n\n  updateComment = (value, e) => {\n    const { firebase, commentId } = this.props;\n    firebase.updateDoc(['comments', commentId], {\n      content: value.toJSON(),\n      to: getUserIdsFromMentions(value)\n    });\n    e.preventDefault();\n  };\n\n  render() {\n    const {\n      isReadOnly,\n      content,\n      classes,\n      users,\n      usersById,\n      commentId\n    } = this.props;\n    return (\n      <RichTextEditor\n        id={commentId}\n        isReadOnly={isReadOnly}\n        value={content}\n        onUpdate={this.updateComment}\n        classes={{\n          container: `comment-editor ${classes.editor || ''}`,\n          toolbar: 'comment-editor__toolbar',\n          button: 'comment-editor__toolbar-btn',\n          addOns: 'comment-editor__add-ons'\n        }}\n        isMentionsEnabled\n        mentions={{\n          list: users,\n          map: usersById\n        }}\n        addOns={[\n          {\n            type: 'update',\n            id: 'updateComment',\n            onClick: 'onUpdate',\n            props: {\n              className: `comment-editor__btn--submit ${classes.button || ''}`,\n              color: 'primary',\n              variant: 'contained',\n              children: 'Save Changes'\n            }\n          }\n        ]}\n        marks={[\n          {\n            type: 'bold',\n            icon: 'bold'\n          },\n          {\n            type: 'italic',\n            icon: 'italic'\n          },\n          {\n            type: 'underlined',\n            icon: 'underline'\n          }\n        ]}\n        inlines={[\n          {\n            type: 'mention',\n            icon: 'at-sign'\n          }\n        ]}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: userSelectors.getUsersArray(state),\n    usersById: userSelectors.getUsersById(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CommentEditor)\n);\n","import React, { Component } from 'react';\nimport { isDate, toDateString, toTimeString } from '../../utils/date';\nimport './Timestamp.scss';\n\nexport default class Timestamp extends Component {\n  static defaultProps = {\n    className: '',\n    isRelative: true,\n    dateOnly: false,\n    absoluteMin: [6, 'h'],\n    timeOptions: {\n      format: 'h:mm',\n      hour12: true\n    },\n    dateOptions: {\n      useRelative: true,\n      format: {\n        weekday: 'short',\n        month: 'short',\n        day: 'numeric',\n        year: '2-digit'\n      }\n    }\n  };\n\n  state = {\n    secondsElapsed: 0\n  };\n\n  componentDidMount() {\n    const { date, isRelative } = this.props;\n    if (!date) return;\n    const secondsElapsed =\n      Math.floor(Date.now() / 1000) - Math.floor(date.getTime() / 1000);\n    this.setState({\n      secondsElapsed\n    });\n    this.absoluteMin = this.getAbsoluteMinSeconds();\n    if (secondsElapsed < this.absoluteMin || !isRelative) {\n      this.interval = setInterval(this.tick, 1000);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n  tick = () => {\n    const { secondsElapsed } = this.state;\n    if (secondsElapsed > this.absoluteMin) {\n      clearInterval(this.interval);\n    } else {\n      this.setState(prevState => ({\n        secondsElapsed: prevState.secondsElapsed + 1\n      }));\n    }\n  };\n\n  // Returns min seconds required for switch to absolute timestamp\n  getAbsoluteMinSeconds = () => {\n    const { absoluteMin } = this.props;\n    const [n, unit] = absoluteMin;\n    switch (unit) {\n      case 'm': {\n        return n * 60;\n      }\n      case 'h': {\n        return n * 60 * 60;\n      }\n      case 'd': {\n        return n * 60 * 60 * 24;\n      }\n      default: {\n        return n;\n      }\n    }\n  };\n\n  getDateString = () => {\n    const { secondsElapsed } = this.state;\n    const { date, isRelative, dateOnly, timeOptions, dateOptions } = this.props;\n    const dateString = toDateString(date, dateOptions);\n    const absoluteDateString = dateOnly\n      ? dateString\n      : `${dateString} at ${toTimeString(date, timeOptions)}`;\n    if (!isRelative) return absoluteDateString;\n    return secondsElapsed < 60 // less than one minute\n      ? 'Just now'\n      : secondsElapsed < 120 // less than 2 minutes\n      ? '1 minute ago'\n      : secondsElapsed < 3600 // less than 1 hour\n      ? `${Math.floor(secondsElapsed / 60)} minutes ago`\n      : secondsElapsed < 7200 // less than 2 hours\n      ? '1 hour ago'\n      : secondsElapsed < this.absoluteMin // default = 6 hours\n      ? `${Math.floor(secondsElapsed / 3600)} hours ago`\n      : absoluteDateString;\n  };\n\n  render() {\n    const { date, className } = this.props;\n    if (!date) return null;\n    return (\n      <span className={`timestamp ${className}`}>{this.getDateString()}</span>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withFirebase } from '../Firebase';\nimport { userSelectors } from '../../ducks/users';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { Avatar } from '../Avatar';\nimport { toDateString } from '../../utils/date';\nimport { CommentEditor } from '../CommentEditor';\nimport { Timestamp } from '../Timestamp';\nimport './Comment.scss';\n\nclass Comment extends Component {\n  state = {\n    isCommentEditorActive: false\n  };\n\n  handleLike = () => {\n    const { commentId, likes, currentUserId, firebase } = this.props;\n\n    if (likes[currentUserId]) {\n      firebase.updateDoc(['comments', commentId], {\n        [`likes.${currentUserId}`]: firebase.deleteField()\n      });\n    } else {\n      firebase.updateDoc([`comments`, commentId], {\n        [`likes.${currentUserId}`]: true\n      });\n    }\n  };\n\n  render() {\n    const { commentId, user, content, createdAt, likes, isPinned } = this.props;\n    const { isCommentEditorActive } = this.state;\n    const { name, photoURL } = user;\n    const likesCount = Object.keys(likes).length;\n    if (!createdAt) return null;\n    return (\n      <div className={`comment__wrapper ${isPinned ? 'is-pinned' : ''}`}>\n        <Avatar\n          classes={{\n            avatar: 'comment__avatar',\n            placeholder: 'comment__avatar-placeholder'\n          }}\n          name={name}\n          size=\"sm\"\n          variant=\"circle\"\n          imgSrc={photoURL}\n        />\n        <div className=\"comment\">\n          <div className=\"comment__header\">\n            <div className=\"comment__details\">\n              <span className=\"comment__name\">{name}</span>\n              <Timestamp\n                className=\"comment__timestamp\"\n                date={createdAt.toDate()}\n              />\n            </div>\n            <Button\n              className=\"comment__likes\"\n              onClick={this.handleLike}\n              size=\"sm\"\n            >\n              <Icon name=\"thumbs-up\" />\n              <span className=\"comment__likes-counter\">\n                {likesCount > 0 ? likesCount : ''}\n              </span>\n            </Button>\n          </div>\n          <CommentEditor\n            key={commentId}\n            commentId={commentId}\n            content={content}\n            isReadOnly={!isCommentEditorActive}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state, ownProps.from.userId),\n    currentUserId: currentUserSelectors.getCurrentUserId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Comment)\n);\n","import * as types from './types';\nimport { setTaskLoadedState } from '../tasks/actions';\nimport firebase from '../../store/firebase';\n\nexport const loadCommentsById = commentsById => {\n  return {\n    type: types.LOAD_COMMENTS_BY_ID,\n    commentsById\n  };\n};\n\nexport const addComment = ({ commentId, commentData }) => {\n  return {\n    type: types.ADD_COMMENT,\n    commentId,\n    commentData\n  };\n};\n\nexport const removeComment = commentId => {\n  return {\n    type: types.REMOVE_COMMENT,\n    commentId\n  };\n};\n\nexport const updateComment = ({ commentId, commentData }) => {\n  return {\n    type: types.UPDATE_COMMENT,\n    commentId,\n    commentData\n  };\n};\n\n// Thunks\n\nexport const fetchCommentsById = () => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchTaskComments = taskId => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .where('taskId', '==', taskId)\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserComments = userId => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .where('to', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const syncTaskComments = taskId => {\n  return async (dispatch, getState) => {\n    try {\n      const subscription = await firebase.db\n        .collection('comments')\n        .where('taskId', '==', taskId)\n        .onSnapshot(async snapshot => {\n          const changes = await snapshot.docChanges();\n          const isInitialLoad =\n            snapshot.size === changes.length &&\n            changes.every(change => change.type === 'added');\n\n          if (isInitialLoad && changes.length > 1) {\n            const comments = {};\n            changes.forEach(change => {\n              const commentId = change.doc.id;\n              if (commentId in getState().commentsById) return;\n              const commentData = change.doc.data();\n              comments[commentId] = {\n                commentId,\n                ...commentData\n              };\n            });\n            dispatch(loadCommentsById(comments));\n            dispatch(setTaskLoadedState(taskId, 'comments'));\n          } else {\n            changes.forEach(change => {\n              const commentId = change.doc.id;\n              const commentData = change.doc.data();\n              if (change.type === 'added') {\n                const { createdAt } = commentData;\n                if (commentId in getState().commentsById) return;\n                dispatch(addComment({ commentId, commentData }));\n              } else if (change.type === 'removed') {\n                dispatch(removeComment(commentId));\n              } else if (!(commentId in getState().commentsById)) {\n                dispatch(addComment({ commentId, commentData }));\n              } else {\n                dispatch(updateComment({ commentId, commentData }));\n              }\n            });\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n","export const LOAD_COMMENTS_BY_ID = 'LOAD_COMMENTS_BY_ID';\nexport const FETCH_COMMENTS_BY_ID = 'FETCH_COMMENTS_BY_ID';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const UPDATE_COMMENT = 'UPDATE_COMMENT';\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\n","export const getCommentsById = state => {\n  const { commentsById } = state;\n  return commentsById;\n};\n\nexport const getComment = (state, commentId) => {\n  const { commentsById } = state;\n  return commentsById[commentId];\n};\n\nexport const getCommentsArray = (state, commentIds) => {\n  const { commentsById } = state;\n  if (!commentIds) return [];\n  let comments = [];\n\n  for (let commentId of commentIds) {\n    const comment = commentsById[commentId];\n    if (!comment) break;\n    comments = comments.concat(comment);\n  }\n  \n  return comments;\n};\n\nexport const getTaskComments = (state, taskId) => {\n  const { commentsById, tasksById } = state;\n  const task = tasksById[taskId];\n  if (!task) return [];\n  const { commentIds } = tasksById[taskId];\n  return commentIds.map(commentId => commentsById[commentId]);\n};","import * as types from './types';\n\nconst commentsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_COMMENTS_BY_ID: {\n      const { commentsById } = action;\n      return {\n        ...state,\n        ...commentsById\n      };\n    }\n    case types.ADD_COMMENT: {\n      const { commentId, commentData } = action;\n      return {\n        ...state,\n        [commentId]: {\n          commentId,\n          isLoaded: true,\n          ...commentData\n        }\n      };\n    }\n    case types.REMOVE_COMMENT: {\n      const { commentId } = action;\n      const { [commentId]: removedComment, ...restOfComments } = state;\n      return restOfComments;\n    }\n    case types.UPDATE_COMMENT: {\n      const { commentId, commentData } = action;\n      return {\n        ...state,\n        [commentId]: {\n          ...state[commentId],\n          ...commentData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default commentsById;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withFirebase } from '../Firebase';\nimport { Comment } from '../Comment';\nimport { commentActions, commentSelectors } from '../../ducks/comments';\nimport { taskSelectors } from '../../ducks/tasks';\nimport { getSelectedProjectId } from '../../ducks/selectedProject';\n\nclass Comments extends Component {\n  state = {\n    isLoading: !this.props.isLoaded.comments\n  };\n\n  async componentDidMount() {\n    const { syncTaskComments, taskId } = this.props;\n      this.unsubscribe = await syncTaskComments(taskId);\n      this.setState({\n        isLoading: false\n      });\n  }\n\n  componentWillUnmount() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  }\n\n  render() {\n    const { taskId, comments } = this.props;\n    const { isLoading } = this.state;\n    if (isLoading) return null;\n    return comments.length > 0 ? comments.map(comment => (\n        <Comment key={comment.commentId} {...comment} />\n      )) : null;\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    comments: commentSelectors.getCommentsArray(\n      state,\n      ownProps.commentIds\n    ),\n    isLoaded: taskSelectors.getTaskLoadedState(state, ownProps.taskId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    syncTaskComments: taskId => dispatch(commentActions.syncTaskComments(taskId))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Comments)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withFirebase } from '../Firebase';\nimport { userSelectors } from '../../ducks/users';\nimport { RichTextEditor, getUserIdsFromMentions } from '../RichTextEditor';\nimport './NotesEditor.scss';\n\nclass NotesEditor extends Component {\n  static defaultProps = {\n    classes: {\n      editor: '',\n      button: ''\n    },\n    placeholder: '',\n    isReadOnly: false\n  };\n\n  updateNotes = (value, e) => {\n    const { firebase, id, type } = this.props;\n    firebase.updateDoc([`${type}s`, id], {\n      notes: value.toJSON(),\n      mentions: getUserIdsFromMentions(value)\n    });\n    e.preventDefault();\n  };\n\n  render() {\n    const {\n      placeholder,\n      value,\n      classes,\n      users,\n      usersById,\n      id,\n      isReadOnly\n    } = this.props;\n    return (\n      <RichTextEditor\n        isReadOnly={isReadOnly}\n        key={`notes-editor__${id}`}\n        id={`notes--${id}`}\n        placeholder={placeholder}\n        value={value}\n        onBlur={this.updateNotes}\n        classes={{\n          container: `notes-editor ${classes.editor || ''}`,\n          toolbar: 'notes-editor__toolbar',\n          button: 'notes-editor__toolbar-btn',\n          addOns: 'notes-editor__add-ons'\n        }}\n        isMentionsEnabled\n        mentions={{\n          list: users,\n          map: usersById\n        }}\n        marks={[\n          {\n            type: 'bold',\n            icon: 'bold'\n          },\n          {\n            type: 'italic',\n            icon: 'italic'\n          },\n          {\n            type: 'underlined',\n            icon: 'underline'\n          }\n        ]}\n        inlines={[\n          {\n            type: 'mention',\n            icon: 'at-sign'\n          }\n        ]}\n        blocks={[\n          {\n            type: 'bulleted-list',\n            icon: 'list'\n          }\n        ]}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: userSelectors.getUsersArray(state),\n    usersById: userSelectors.getUsersById(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(NotesEditor)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withFirebase } from '../Firebase';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { subtaskSelectors } from '../../ducks/subtasks';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { Modal } from '../Modal';\nimport { Toolbar } from '../Toolbar';\nimport TaskEditorSection from './TaskEditorSection';\nimport TaskEditorMoreActions from './TaskEditorMoreActions';\nimport { Subtasks } from '../Subtasks';\nimport { SubtaskComposer } from '../SubtaskComposer';\nimport { TagsInput } from '../TagsInput';\nimport './TaskEditor.scss';\nimport { projectSelectors } from '../../ducks/projects';\nimport { listSelectors } from '../../ducks/lists';\nimport { DatePicker } from '../DatePicker';\nimport TaskEditorPane from './TaskEditorPane';\nimport { ProjectBadge } from '../ProjectBadge';\nimport { getSimpleDate, toDateString, isPriorDate } from '../../utils/date';\nimport { ProjectListDropdown } from '../ProjectListDropdown';\nimport { CommentComposer } from '../CommentComposer';\nimport { Comments } from '../Comments';\nimport { MemberAssigner } from '../MemberAssigner';\nimport { NotesEditor } from '../NotesEditor';\nimport { debounce } from '../../utils/function';\n\n\nconst TaskEditorWrapper = ({\n  layout,\n  handleTaskEditorClose,\n  onOutsideClick,\n  children\n}) => {\n  return layout === 'board' ? (\n    <Modal\n      onModalClose={handleTaskEditorClose}\n      classes={{ content: 'task-editor', button: 'task-editor__btn--close' }}\n      size=\"lg\"\n      id=\"taskEditor\"\n      onOutsideClick={onOutsideClick}\n    >\n      {children}\n    </Modal>\n  ) : (\n    <TaskEditorPane onClose={handleTaskEditorClose}>{children}</TaskEditorPane>\n  );\n};\n\n/*\n  TODO: Break up logic in child components\n  */\n\nclass TaskEditor extends Component {\n  state = {\n    name: this.props.name,\n    isColorPickerActive: false,\n    currentTag: null,\n    isDatePickerActive: false,\n    isMemberSearchActive: false,\n    prevProps: {\n      name: this.props.name\n    },\n    viewportWidth: null\n  };\n\n  componentDidMount() {\n    const { layout } = this.props;\n    if (layout !== 'board') return;\n    this.setViewportWidth();\n    this.handleResize = debounce(200, this.setViewportWidth);\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  componentWillUnmount() {\n    if (this.handleResize) {\n      window.removeEventListener('resize', this.handleResize);\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.name !== state.prevProps.name) {\n      return {\n        name: props.name,\n        prevProps: {\n          name: props.name\n        }\n      };\n    }\n    return null;\n  }\n\n  setViewportWidth = () => {\n    this.setState({\n      viewportWidth: window.innerWidth\n    });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  deleteTask = () => {\n    const { taskId, listId, handleTaskEditorClose, deleteTask } = this.props;\n    deleteTask({ taskId, listId });\n    handleTaskEditorClose();\n  };\n\n  onBlur = e => {\n    const taskKey = e.target.name;\n    const { [taskKey]: currentValue, taskId, firebase } = this.props;\n    const { [taskKey]: updatedValue } = this.state;\n\n    // When field loses focus, update task if change is detected\n\n    if (updatedValue !== currentValue) {\n      firebase.updateDoc(['tasks', taskId], {\n        [taskKey]: updatedValue\n      });\n      console.log('Updated task!');\n    }\n  };\n\n  resetForm = key => {\n    this.setState({\n      [key]: ''\n    });\n  };\n\n  handleMoreActions = e => {\n    if (!e.target.matches('a')) return;\n    const { action } = e.target.dataset;\n    switch (action) {\n      case 'delete':\n        this.deleteTask();\n        break;\n    }\n    e.preventDefault(); // prevents page reload\n  };\n\n  assignMember = (userId, e) => {\n    const {\n      taskId,\n      projectId,\n      projectName,\n      assignedTo,\n      firebase,\n      folders,\n      dueDate\n    } = this.props;\n\n    if (assignedTo.includes(userId)) {\n      if (!projectId) return;\n      const folderId = folders[userId];\n      firebase.removeAssignee({ taskId, projectId, userId, folderId, dueDate });\n    } else {\n      firebase.addAssignee({ taskId, projectId, projectName, userId, dueDate });\n    }\n  };\n\n  toggleColorPicker = value => {\n    this.setState({\n      isColorPickerActive: value\n    });\n  };\n\n  hideColorPicker = () => {\n    this.toggleColorPicker(false);\n  };\n\n  addTag = name => {\n    const {\n      firebase,\n      currentUser,\n      projectTags,\n      taskId,\n      projectId\n    } = this.props;\n    const { userId, tags: userTags } = currentUser;\n    const isProjectTag = projectTags && name in projectTags;\n    const isUserTag = userTags && name in userTags;\n    const projectTag = isProjectTag ? projectTags[name] : null;\n    const userTag = isUserTag ? userTags[name] : null;\n    const projectCount = isProjectTag ? projectTag.count + 1 : 1;\n    const userCount = isUserTag ? userTag.count + 1 : 1;\n    const tagData = isProjectTag\n      ? { ...projectTag, projectCount, userCount }\n      : isUserTag\n      ? { ...userTag, projectCount, userCount }\n      : { name, userCount, projectCount };\n\n    firebase\n      .addTag({\n        userId,\n        taskId,\n        projectId,\n        ...tagData\n      })\n      .then(() => {\n        if (!isUserTag && !isProjectTag) {\n          this.setState({\n            currentTag: name\n          });\n          this.toggleColorPicker(true);\n        }\n      });\n  };\n\n  setTagColor = color => {\n    const { userId, projectId, firebase } = this.props;\n    const { currentTag: tag } = this.state;\n    firebase.setTagColor({ userId, projectId, tag, color });\n  };\n\n  removeTag = name => {\n    const { taskId, currentUser, projectId, removeTaskTag } = this.props;\n    const { userId } = currentUser;\n    removeTaskTag({ taskId, name, userId, projectId });\n    this.toggleColorPicker(false);\n  };\n\n  setDueDate = newDueDate => {\n    const { firebase, taskId, assignedTo, dueDate } = this.props;\n    const prevDueDate = dueDate ? new Date(dueDate.toDate()) : null;\n    firebase.setTaskDueDate({ taskId, prevDueDate, newDueDate, assignedTo });\n  };\n\n  toggleDatePicker = () => {\n    this.setState(prevState => ({\n      isDatePickerActive: !prevState.isDatePickerActive\n    }));\n  };\n\n  toggleCompleted = e => {\n    const { taskId, isCompleted, firebase } = this.props;\n    firebase.updateDoc(['tasks', taskId], {\n      isCompleted: !isCompleted,\n      completedAt: !isCompleted ? firebase.getTimestamp() : null\n    });\n  };\n\n  moveToList = e => {\n    e.stopPropagation();\n    const { firebase, taskId, listsById, listId: origListId } = this.props;\n    const newListId = e.target.value;\n    const newListName = e.target.dataset.label;\n    const updatedTaskIds = [...listsById[newListId].taskIds, taskId];\n    firebase.moveTaskToList({\n      taskId,\n      origListId,\n      newListId,\n      updatedTaskIds,\n      newListName\n    });\n  };\n\n  toggleMemberSearch = () => {\n    this.setState(prevState => ({\n      isMemberSearchActive: !prevState.isMemberSearchActive\n    }));\n  };\n\n  hideMemberSearch = e => {\n    if (e.target.matches('.task-editor__btn--add-member')) return;\n    this.setState({\n      isMemberSearchActive: false\n    });\n  };\n\n  onOutsideClick = e => {\n    const { handleTaskEditorClose } = this.props;\n    if (e.target.matches('.member-search__item')) return;\n    handleTaskEditorClose();\n  };\n\n  render() {\n    const {\n      handleTaskEditorClose,\n      taskId,\n      commentIds,\n      assignedTo,\n      taskTags,\n      mergedTags,\n      dueDate,\n      subtaskIds,\n      projectId,\n      completedSubtasks,\n      layout,\n      listName,\n      listId,\n      isCompleted,\n      notes\n    } = this.props;\n    const {\n      name,\n      isColorPickerActive,\n      isDatePickerActive,\n      currentTag,\n      viewportWidth\n    } = this.state;\n    const hasSubtasks = subtaskIds && subtaskIds.length > 0;\n    const hasComments = commentIds && commentIds.length > 0;\n    const taskDueDate = dueDate\n      ? getSimpleDate(dueDate.toDate())\n      : getSimpleDate(new Date());\n    const dueDateStr = dueDate\n      ? toDateString(dueDate.toDate(), {\n          useRelative: true,\n          format: { month: 'short', day: 'numeric' }\n        })\n      : null;\n    const isDueToday = dueDateStr === 'Today';\n    const isDueTmrw = dueDateStr === 'Tomorrow';\n    const isPastDue = dueDate && isPriorDate(dueDate.toDate());\n    return (\n      <TaskEditorWrapper\n        handleTaskEditorClose={handleTaskEditorClose}\n        onOutsideClick={this.onOutsideClick}\n        layout={layout}\n      >\n        <Toolbar className=\"task-editor__toolbar\">\n          <Button\n            type=\"button\"\n            onClick={this.toggleCompleted}\n            size=\"md\"\n            variant={isCompleted ? 'contained' : 'outlined'}\n            color=\"success\"\n            className=\"task-editor__btn--toggle-completed\"\n          >\n            <Icon name=\"check\" />\n            {isCompleted ? 'Completed' : 'Mark Completed'}\n          </Button>\n          <TaskEditorMoreActions onMenuClick={this.handleMoreActions} />\n        </Toolbar>\n        <form\n          name=\"editTaskForm\"\n          className=\"task-editor__edit-task-form\"\n        >\n          <Textarea\n            className=\"task-editor__textarea--title\"\n            name=\"name\"\n            value={name}\n            onChange={this.onChange}\n            required\n            onBlur={this.onBlur}\n          />\n          {projectId && (\n            <TaskEditorSection size=\"sm\">\n              <div className=\"task-editor__project-name\">\n                <ProjectBadge\n                  projectId={projectId}\n                  size=\"md\"\n                  variant=\"icon\"\n                  classes={{\n                    badge: 'task-editor__project-badge',\n                    icon: 'task-editor__project-badge-icon'\n                  }}\n                />\n              </div>\n              <div className=\"task-editor__list-name\">\n                <ProjectListDropdown\n                  classes={{\n                    button: 'task-editor__project-list-dropdown-btn--toggle',\n                    menu: 'task-editor__project-list-dropdown-menu'\n                  }}\n                  projectId={projectId}\n                  selectedList={{ value: listId, label: listName }}\n                  onChange={this.moveToList}\n                />\n              </div>\n            </TaskEditorSection>\n          )}\n          <TaskEditorSection>\n            <Button\n              onClick={this.toggleDatePicker}\n              type=\"button\"\n              className={`task-editor__btn--due-date ${\n                isDatePickerActive ? 'is-active' : ''\n              }`}\n            >\n              <span className=\"task-editor__due-date-icon\">\n                <Icon name=\"calendar\" />\n              </span>\n              <span className=\"task-editor__due-date-wrapper\">\n                {!dueDate ? (\n                  <span className=\"task-editor__no-due-date\">Set due date</span>\n                ) : (\n                  <>\n                    <span className=\"task-editor__section-title--sm\">\n                      Due Date\n                    </span>\n                    <span\n                      className={`task-editor__due-date ${\n                        isDueToday\n                          ? 'is-due-today'\n                          : isDueTmrw\n                          ? 'is-due-tmrw'\n                          : isPastDue\n                          ? 'is-past-due'\n                          : ''\n                      }`}\n                    >\n                      {dueDateStr}\n                    </span>\n                  </>\n                )}\n              </span>\n            </Button>\n            <DatePicker\n              innerRef={el => (this.datePickerEl = el)}\n              onClose={this.toggleDatePicker}\n              selectedDate={dueDate ? taskDueDate : null}\n              currentMonth={taskDueDate.month}\n              currentYear={taskDueDate.year}\n              selectDate={this.setDueDate}\n              isActive={isDatePickerActive}\n            />\n          </TaskEditorSection>\n          <TaskEditorSection>\n            <div className=\"task-editor__section-icon\">\n              <Icon name=\"user\" />\n            </div>\n            <div className=\"task-editor__members\">\n              <MemberAssigner\n                classes={{ memberAssigner: 'task-editor__member-assigner'}}\n                placeholder=\"Assign or remove member\"\n                memberIds={assignedTo}\n                onSelectMember={this.assignMember}\n                memberSearchIsDisabled={!projectId}\n              />\n            </div>\n          </TaskEditorSection>\n          <TaskEditorSection>\n            <div className=\"task-editor__section-icon\">\n              <Icon name=\"tag\" />\n            </div>\n            <TagsInput\n              addTag={this.addTag}\n              tagSuggestions={mergedTags}\n              assignedTags={taskTags}\n              hideColorPicker={this.hideColorPicker}\n              isColorPickerActive={isColorPickerActive}\n              setTagColor={this.setTagColor}\n              removeTag={this.removeTag}\n              currentTag={currentTag}\n            />\n          </TaskEditorSection>\n          <TaskEditorSection>\n            <div className=\"task-editor__section-icon\">\n              <Icon name=\"edit-3\" />\n            </div>\n            <NotesEditor\n              placeholder=\"Add a description\"\n              type=\"task\"\n              key={`notes--${taskId}`}\n              id={taskId}\n              value={notes}\n              classes={{\n                editor:\n                  'task-editor__textarea task-editor__textarea--description'\n              }}\n            />\n          </TaskEditorSection>\n        </form>\n        <TaskEditorSection>\n          <div className=\"task-editor__section-header\">\n            <div className=\"task-editor__section-icon\">\n              <Icon name=\"check-square\" />\n            </div>\n            <h3 className=\"task-editor__section-title\">\n              {hasSubtasks && (\n                <span className=\"task-editor__section-detail\">\n                  {completedSubtasks.length}/{subtaskIds.length}\n                </span>\n              )}\n              Subtasks\n            </h3>\n            <hr className=\"task-editor__hr\" />\n          </div>\n          <div className=\"task-editor__subtasks-container\">\n          {hasSubtasks && (\n            <Subtasks\n              taskId={taskId}\n              subtaskIds={subtaskIds}\n              projectId={projectId}\n              usePortal={layout === 'board' && viewportWidth >= 576}\n            />\n          )}\n          <SubtaskComposer\n            taskId={taskId}\n            projectId={projectId}\n            classes={{\n              composer: 'task-editor__subtask-composer',\n              iconWrapper: 'task-editor__subtask-composer-icon-wrapper',\n              form: 'task-editor__new-subtask-form',\n              textarea: 'task-editor__textarea--new-subtask',\n              button: 'task-editor__btn--add-subtask'\n            }}\n          />\n          </div>\n        </TaskEditorSection>\n        <TaskEditorSection className=\"comments\">\n          <div className=\"task-editor__section-header\">\n            <div className=\"task-editor__section-icon\">\n              <Icon name=\"message-circle\" />\n            </div>\n            <h3 className=\"task-editor__section-title\">\n              {hasComments && (\n                <span className=\"task-editor__section-detail\">\n                  {commentIds.length}\n                </span>\n              )}\n              {hasComments && commentIds.length === 1 ? 'Comment' : 'Comments'}\n            </h3>\n            <hr className=\"task-editor__hr\" />\n          </div>\n\n          {hasComments && (\n            <div className=\"task-editor__comments\">\n              <Comments taskId={taskId} commentIds={commentIds} />\n            </div>\n          )}\n          <CommentComposer\n            key={`comment-composer--${taskId}`}\n            id={`comment-composer--${taskId}`}\n            taskId={taskId}\n            projectId={projectId}\n            classes={{\n              avatar: 'task-editor__avatar',\n              avatarPlaceholder: 'task-editor__avatar-placeholder',\n              composer: 'task-editor__comment-composer',\n              button: 'task-editor__btn--submit-comment'\n            }}\n          />\n        </TaskEditorSection>\n      </TaskEditorWrapper>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentUser: currentUserSelectors.getCurrentUser(state),\n    taskTags: taskSelectors.getTaskTags(state, ownProps),\n    mergedTags: currentUserSelectors.getMergedProjectTags(state),\n    projectTags: projectSelectors.getProjectTags(state, ownProps.projectId),\n    completedSubtasks: subtaskSelectors.getCompletedSubtasks(\n      state,\n      ownProps.subtaskIds\n    ),\n    listsById: listSelectors.getListsById(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteTask: ({ taskId, listId }) =>\n      dispatch(taskActions.deleteTask({ taskId, listId })),\n    addTag: (taskId, tag) => dispatch(taskActions.addTag(taskId, tag)),\n    removeTaskTag: ({ taskId, name, userId, projectId }) =>\n      dispatch(taskActions.removeTaskTag({ taskId, name, userId, projectId }))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TaskEditor)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { projectActions, projectSelectors } from '../../ducks/projects';\nimport {\n  selectTask as selectTaskAction,\n  getSelectedTask,\n  getSelectedTaskId\n} from '../../ducks/selectedTask';\nimport {\n  selectProject as selectProjectAction,\n  getSelectedProjectId\n} from '../../ducks/selectedProject';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { taskActions } from '../../ducks/tasks';\nimport { subtaskActions } from '../../ducks/subtasks';\nimport Project from './Project';\nimport { List } from '../List';\nimport { TaskEditor } from '../TaskEditor';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport './Project.scss';\n\nclass ProjectContainer extends Component {\n\n  async componentDidMount() {\n    const {\n      projectId,\n      selectProject,\n      selectedProjectId,\n      syncProjectLists,\n      syncProjectSubtasks\n    } = this.props;\n\n    if (selectedProjectId !== projectId) {\n      selectProject(projectId);\n    }\n\n    await Promise.all([\n      syncProjectLists(projectId),\n      syncProjectSubtasks(projectId)\n    ]).then(listeners => {\n      this.unsubscribe = listeners;\n    });\n    console.log('mounted');\n  }\n\n  componentWillUnmount() {\n    const { selectProject } = this.props;\n    selectProject(null);\n    this.unsubscribe.forEach(func => func());\n  }\n\n  onDragStart = () => {\n    this.setState({\n      isDragging: true\n    });\n  };\n\n  onDragEnd = ({ destination, draggableId, source, type }) => {\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    const { firebase, listsById } = this.props;\n    if (type === droppableTypes.TASK) {\n      const isMovedWithinList = source.droppableId === destination.droppableId;\n      const updatedTaskIds = [...listsById[destination.droppableId].taskIds];\n      if (isMovedWithinList) {\n        updatedTaskIds.splice(source.index, 1);\n        updatedTaskIds.splice(destination.index, 0, draggableId);\n        firebase.updateDoc(['lists', source.droppableId], {\n          taskIds: updatedTaskIds\n        });\n      } else {\n        const newListName = listsById[destination.droppableId].name;\n        updatedTaskIds.splice(destination.index, 0, draggableId);\n        firebase.moveTaskToList({\n          taskId: draggableId,\n          origListId: source.droppableId,\n          newListId: destination.droppableId,\n          updatedTaskIds,\n          newListName\n        });\n      }\n    }\n\n    if (type === droppableTypes.LIST) {\n      const { project, projectId, reorderLists } = this.props;\n      const updatedListIds = [...project.listIds];\n      updatedListIds.splice(source.index, 1);\n      updatedListIds.splice(destination.index, 0, draggableId);\n      firebase.updateDoc(['projects', projectId], {\n        listIds: updatedListIds\n      });\n      reorderLists(projectId, updatedListIds);\n    }\n  };\n\n  closeTaskEditor = () => {\n    const { selectTask } = this.props;\n    selectTask(null);\n  };\n\n  handleTaskClick = taskId => {\n    const { selectTask } = this.props;\n    selectTask(taskId);\n  };\n\n  render() {\n    const {\n      lists,\n      selectedTask,\n      projectId,\n      userId,\n      selectedTaskId,\n      isLoaded,\n      project,\n      tempProjectSettings\n    } = this.props;\n    const isTaskEditorOpen = !!selectedTaskId;\n    if (!isLoaded.tasks || !isLoaded.subtasks || !isLoaded.lists) return null;\n    return (\n      <main\n        className={`project-container is-${project.layout}-layout ${\n          isTaskEditorOpen ? 'show-task-editor' : ''\n        }`}\n      >\n        <div className=\"project__wrapper\">\n          <DragDropContext\n            onDragEnd={this.onDragEnd}\n            onDragStart={this.onDragStart}\n          >\n            <Project {...project}>\n              {lists.map((list, i) => {\n                const { listId, name: listName, taskIds } = list;\n                return (\n                  <List\n                    viewFilter={tempProjectSettings.tasks.view}\n                    sortBy={tempProjectSettings.tasks.sortBy}\n                    listId={listId}\n                    key={listId}\n                    index={i}\n                    name={listName}\n                    taskIds={taskIds}\n                    onTaskClick={this.handleTaskClick}\n                    projectId={projectId}\n                    layout={project.layout}\n                    isRestricted={false}\n                  />\n                );\n              })}\n            </Project>\n          </DragDropContext>\n          {isTaskEditorOpen && (\n            <TaskEditor\n              {...selectedTask}\n              handleTaskEditorClose={this.closeTaskEditor}\n              userId={userId}\n              layout={project.layout}\n            />\n          )}\n        </div>\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    selectedProjectId: getSelectedProjectId(state),\n    selectedTaskId: getSelectedTaskId(state),\n    selectedTask: getSelectedTask(state),\n    listsById: listSelectors.getListsById(state),\n    lists: listSelectors.getSelectedProjectLists(state),\n    project: projectSelectors.getProject(state, ownProps.projectId),\n    isLoaded: projectSelectors.getProjectLoadedState(state, ownProps.projectId),\n    tempProjectSettings: projectSelectors.getTempProjectSettings(\n      state,\n      ownProps.projectId\n    )\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectProject: projectId => dispatch(selectProjectAction(projectId)),\n    selectTask: taskId => dispatch(selectTaskAction(taskId)),\n    reorderLists: (projectId, listIds) =>\n      dispatch(projectActions.reorderLists(projectId, listIds)),\n    updateProjectTags: (projectId, tags) =>\n      dispatch(projectActions.updateProjectTags(projectId, tags)),\n    syncProjectLists: projectId =>\n      dispatch(listActions.syncProjectLists(projectId)),\n    syncProjectTasks: projectId =>\n      dispatch(taskActions.syncProjectTasks(projectId)),\n    syncProjectSubtasks: projectId =>\n      dispatch(subtaskActions.syncProjectSubtasks(projectId)),\n    syncProject: projectId => dispatch(projectActions.syncProject(projectId)),\n    setTempProjectSettings: ({ projectId, view, sortBy }) =>\n      dispatch(\n        projectActions.setTempProjectSettings({ projectId, view, sortBy })\n      )\n  };\n};\n\nconst condition = currentUser => !!currentUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ProjectContainer)\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Icon } from '../Icon';\n\nconst DashboardPanel = ({ className, name, children, size, link }) => (\n  <section className={`dashboard-panel ${className ? `dashboard-panel--${className}` : ''} dashboard-panel--${size}`}>\n    <header className=\"dashboard-panel__header\">\n      <h2 className=\"dashboard-panel__name\">\n        {name}\n      </h2>\n      {link && (\n        <Link to={link.path} className=\"dashboard-panel__link\">\n          {link.text}\n        </Link>\n      )}\n    </header>\n    <div className=\"dashboard-panel__content\">{children}</div>\n  </section>\n);\n\nDashboardPanel.defaultProps = {\n  size: 'lg',\n  link: null,\n  className: ''\n};\n\nexport default DashboardPanel;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport DashboardPanel from './DashboardPanel';\nimport { Task } from '../Task';\nimport { currentUserSelectors } from '../../ducks/currentUser';\n\nconst TasksDueSoon = ({ tasksDueSoon, onTaskClick, currentUser }) => (\n  <DashboardPanel\n    className=\"tasks-due-soon\"\n    size=\"md\"\n    name=\"Tasks Due Soon\"\n    link={{ path: `/0/${currentUser.userId}/tasks`, text: 'View all tasks' }}\n  >\n    {tasksDueSoon.map((task, i) => (\n      <Task\n        className=\"tasks-due-soon__task\"\n        index={i}\n        key={task.taskId}\n        onTaskClick={onTaskClick}\n        {...task}\n      />\n    ))}\n  </DashboardPanel>\n);\n\nconst mapStateToProps = state => {\n  return {\n    tasksDueSoon: currentUserSelectors.getTasksDueWithinDays(state, 7)\n  };\n};\n\nconst condition = currentUser => !!currentUser;\n\nexport default withAuthorization(condition)(\n  connect(mapStateToProps)(TasksDueSoon)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { toDateString } from '../../utils/date';\nimport { Timestamp } from '../Timestamp';\nimport {\n  selectTask as selectTaskAction,\n  getSelectedTaskId\n} from '../../ducks/selectedTask';\nimport './Notification.scss';\n\nclass Notification extends Component {\n  onClick = () => {\n    const { onTaskClick, location } = this.props;\n    switch (location.type) {\n      case 'task': {\n        return onTaskClick(location.taskId);\n      }\n      default: {\n        return () => null;\n      }\n    }\n  };\n\n  getMessage = () => {\n    const { event, source } = this.props;\n    switch (event.type) {\n      case 'mention': {\n        return (\n          <>\n            mentioned you in a\n            <a\n              href=\"#\"\n              className=\"notification__link notification__link--task\"\n              onClick={this.onClick}\n            >\n              {source.type}\n            </a>\n            .\n          </>\n        );\n      }\n      default: {\n        return '';\n      }\n    }\n  };\n\n  render() {\n    const { source, event } = this.props;\n    const { user } = source;\n    const { publishedAt } = event;\n\n    return (\n      <li className=\"notification\">\n        {user.userId && (\n          <Link\n            className=\"notification__link notification__link--user-profile\"\n            to={`/0/${user.userId}/profile`}\n          >\n            {user.name}\n          </Link>\n        )}\n        {this.getMessage()}\n        {publishedAt && (\n          <Timestamp\n            date={publishedAt.toDate()}\n            className=\"notification__timestamp\"\n          />\n        )}\n      </li>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectTask: taskId => dispatch(selectTaskAction(taskId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Notification);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport DashboardPanel from './DashboardPanel';\nimport { Notification } from '../Notification';\nimport {\n  currentUserActions,\n  currentUserSelectors\n} from '../../ducks/currentUser';\nimport './Notifications.scss';\n\nclass Notifications extends Component {\n  state = {\n    isLoading: true\n  };\n\n  async componentDidMount() {\n    const { currentUser, syncNotifications } = this.props;\n    const { userId } = currentUser;\n\n    this.unsubscribe = await syncNotifications(userId);\n    this.setState({\n      isLoading: false\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    const { isLoading } = this.state;\n    const { notifications, onTaskClick } = this.props;\n    if (isLoading) return null;\n    return (\n      <DashboardPanel className=\"notifications\" name=\"Notifications\" size=\"sm\">\n        <ul className=\"notifications__list\">\n          {notifications.map(notification => (\n            <Notification\n              key={notification.notificationId}\n              onTaskClick={\n                notification.source.type === 'comment' ? onTaskClick : null\n              }\n              {...notification}\n            />\n          ))}\n        </ul>\n      </DashboardPanel>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    notifications: currentUserSelectors.getNotificationsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    syncNotifications: userId =>\n      dispatch(currentUserActions.syncNotifications(userId))\n  };\n};\n\nconst condition = currentUser => !!currentUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Notifications)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport {\n  selectTask as selectTaskAction,\n  getSelectedTaskId\n} from '../../ducks/selectedTask';\nimport { taskSelectors } from '../../ducks/tasks';\nimport { ProjectGrid } from '../ProjectGrid';\nimport TasksDueSoon from './TasksDueSoon';\nimport Notifications from './Notifications';\nimport DashboardPanel from './DashboardPanel';\nimport { TaskEditor } from '../TaskEditor';\nimport { Main } from '../Main';\nimport './Dashboard.scss';\n\nclass Dashboard extends Component {\n  closeTaskEditor = () => {\n    const { selectTask } = this.props;\n    selectTask(null);\n  };\n\n  handleTaskClick = taskId => {\n    const { selectTask } = this.props;\n    selectTask(taskId);\n  };\n\n  render() {\n    const {\n      tasksById,\n      toggleProjectComposer,\n      currentUser,\n      selectedTaskId\n    } = this.props;\n    const { userId } = currentUser;\n    const isTaskEditorOpen = !!selectedTaskId;\n    return (\n      <Main\n        title=\"Home\"\n        classes={{ main: 'dashboard', title: 'dashboard__header' }}\n      >\n        <TasksDueSoon onTaskClick={this.handleTaskClick} />\n        <Notifications onTaskClick={this.handleTaskClick} />\n        <DashboardPanel className=\"projects\" name=\"Projects\" icon=\"grid\">\n          <ProjectGrid\n            className=\"dashboard__project-grid\"\n            openProjectComposer={toggleProjectComposer}\n          />\n        </DashboardPanel>\n        {isTaskEditorOpen && (\n          <TaskEditor\n            {...tasksById[selectedTaskId]}\n            handleTaskEditorClose={this.closeTaskEditor}\n            userId={userId}\n            layout=\"board\"\n          />\n        )}\n      </Main>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    selectedTaskId: getSelectedTaskId(state),\n    tasksById: taskSelectors.getTasksById(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectTask: taskId => dispatch(selectTaskAction(taskId))\n  };\n};\n\nconst condition = currentUser => !!currentUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Dashboard)\n);\n","import React from 'react';\n\nconst ExpansionPanelHeader = ({ children, className, onClick }) => {\n  return (\n    <header\n      className={`expansion-panel__header ${className}`}\n      role=\"button\"\n      onClick={onClick}\n      tabIndex={0}\n      onKeyDown={onClick}\n      onDragOver={onClick}\n    >\n      {children}\n    </header>\n  );\n};\n\nExpansionPanelHeader.defaultProps = {\n  className: ''\n};\n\nexport default ExpansionPanelHeader;\n","import React from 'react';\n\nconst ExpansionPanelContent = ({ className, children }) => {\n  return <div className={className}>{children}</div>;\n};\n\nExpansionPanelContent.defaultProps = {\n  className: ''\n};\n\nexport default ExpansionPanelContent;\n","import React, { Component } from 'react';\nimport ExpansionPanelHeader from './ExpansionPanelHeader';\nimport ExpansionPanelContent from './ExpansionPanelContent';\nimport * as keys from '../../constants/keys';\n\nexport default class ExpansionPanel extends Component {\n  static defaultProps = {\n    classes: {\n      panel: '',\n      header: '',\n      content: ''\n    },\n    isExpanded: null,\n    onChange: null,\n    id: null,\n    innerRef: null\n  };\n\n  state = {\n    isExpanded: false\n  };\n\n  toggleContent = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { onToggle, id } = this.props;\n    if (!onToggle) {\n      this.setState(prevProps => ({\n        isExpanded: !prevProps.isExpanded\n      }));\n    } else {\n      onToggle(e, id);\n    }\n  };\n\n  onDragOver = e => {\n    e.preventDefault();\n    console.log(e.target);\n  };\n\n  render() {\n    const {\n      classes,\n      header,\n      children,\n      innerRef,\n      isExpanded: propsIsExpanded,\n      ...rest\n    } = this.props;\n    const isExpanded =\n      propsIsExpanded !== null ? propsIsExpanded : this.state.isExpanded;\n\n    return (\n      <section\n        className={`expansion-panel ${classes.panel || ''}`}\n        aria-expanded={isExpanded}\n        ref={innerRef}\n        {...rest}\n        onDragOver={this.onDragOver}\n      >\n        <ExpansionPanelHeader\n          onClick={this.toggleContent}\n          className={classes.header || header.className || ''}\n        >\n          {header.children}\n        </ExpansionPanelHeader>\n        {isExpanded && (\n          <ExpansionPanelContent className={classes.content || ''}>\n            {children}\n          </ExpansionPanelContent>\n        )}\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { taskSelectors } from '../../ducks/tasks';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport { TaskComposer } from '../TaskComposer';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\nimport { Input } from '../Input';\nimport { Tasks } from '../Tasks';\nimport { ExpansionPanel } from '../ExpansionPanel';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport './Folder.scss';\n\nclass Folder extends Component {\n  static defaultProps = {\n    userPermissions: {\n      enableNameChange: false,\n      enableTaskAdd: true\n    }\n  };\n\n  state = {\n    name: this.props.name,\n    isExpanded: this.props.taskIds.length > 0,\n    prevProps: {\n      taskIds: this.props.taskIds\n    }\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    if (state.prevProps.taskIds.length === 0 && props.taskIds.length > 0 && !state.isExpanded) {\n      return {\n        isExpanded: true,\n        prevProps: {\n          ...state.prevProps,\n          taskIds: props.taskIds\n        }\n      };\n    }\n    return null;\n  }\n\n  toggleFolder = e => {\n    if (e.target.matches('.folder__btn--more-actions')) return;\n    this.setState(prevState => ({\n      isExpanded: !prevState.isExpanded\n    }));\n  };\n\n  render() {\n    const {\n      tasks,\n      onTaskClick,\n      projectId,\n      projectName,\n      folderId,\n      index,\n      dueDate,\n      userPermissions,\n      tempTaskSettings\n    } = this.props;\n    const { name, isExpanded } = this.state;\n    return (\n      <Draggable\n        draggableId={folderId || projectId || `${dueDate}`}\n        index={index}\n        isDragDisabled={!userPermissions.enableNameChange}\n      >\n        {(provided, snapshot) => (\n          <>\n            <ExpansionPanel\n              isExpanded={isExpanded}\n              onToggle={this.toggleFolder}\n              classes={{ panel: 'folder', content: 'folder__content' }}\n              innerRef={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              header={{\n                className: 'folder__header',\n                children: (\n                  <>\n                    <Button\n                      type=\"button\"\n                      size=\"sm\"\n                      className={`folder__btn--toggle ${\n                        isExpanded ? 'is-expanded' : ''\n                      }`}\n                      iconOnly\n                    >\n                      <Icon name=\"chevron-right\" />\n                    </Button>\n                    <Input\n                      className=\"folder__input--title\"\n                      name=\"name\"\n                      type=\"text\"\n                      value={name}\n                      onChange={this.onChange}\n                      required={userPermissions.enableNameChange}\n                      hideLabel\n                      isReadOnly={!userPermissions.enableNameChange}\n                      onBlur={this.onBlur}\n                      onClick={this.toggleFolder}\n                    />\n                    {/*\n                    <PopoverWrapper\n                      classes={{\n                        wrapper: 'folder__popover-wrapper',\n                        popover: 'folder__popover'\n                      }}\n                      align={{ inner: 'right' }}\n                      buttonProps={{\n                        size: 'md',\n                        iconOnly: true,\n                        className: 'folder__btn--more-actions',\n                        children: <Icon name=\"more-vertical\" />\n                      }}\n                    >\n                      <Menu>\n                        <MenuItem />\n                      </Menu>\n                    </PopoverWrapper>\n                    */}\n                  </>\n                )\n              }}\n            >\n              <div className=\"folder__tasks\">\n                <Tasks\n                  tasks={tasks}\n                  listId={null}\n                  folderId={folderId}\n                  projectId={projectId}\n                  dueDate={dueDate}\n                  onTaskClick={onTaskClick}\n                  dropType={!userPermissions.enableTaskAdd ? (projectId || folderId || dueDate) : droppableTypes.TASK }\n                  layout=\"list\"\n                />\n              </div>\n              {userPermissions.enableTaskAdd && (\n                <TaskComposer\n                  listId={null}\n                  listName={null}\n                  dueDate={dueDate}\n                  projectId={projectId}\n                  projectName={projectName}\n                  folderId={folderId}\n                />\n              )}\n            </ExpansionPanel>\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    tasks: taskSelectors.getFolderTasks(state, ownProps.taskIds),\n    tempTaskSettings: currentUserSelectors.getTempTaskSettings(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Folder);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport {\n  currentUserActions,\n  currentUserSelectors\n} from '../../ducks/currentUser';\nimport { taskSelectors } from '../../ducks/tasks';\nimport {\n  selectTask as selectTaskAction,\n  getSelectedTaskId\n} from '../../ducks/selectedTask';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { Folder } from '../Folder';\nimport { Main } from '../Main';\nimport { TaskEditor } from '../TaskEditor';\nimport { TaskSettings } from '../TaskSettings';\nimport './UserTasks.scss';\n\nclass UserTasks extends Component {\n  state = {\n    isLoading: true,\n    isTaskSettingsMenuVisible: false,\n    isSortRuleDropdownVisible: false\n  };\n\n  async componentDidMount() {\n    const { currentUser, syncFolders } = this.props;\n    const { userId } = currentUser;\n    this.unsubscribe = await syncFolders(userId);\n    this.setState({\n      isLoading: false\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  closeTaskEditor = () => {\n    const { selectTask } = this.props;\n    selectTask(null);\n  };\n\n  handleTaskClick = taskId => {\n    const { selectTask } = this.props;\n    selectTask(taskId);\n  };\n\n  onDragEnd = ({ destination, draggableId, source, type }) => {\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    const { firebase, currentUser, tasksById } = this.props;\n    const { userId, folders, folderIds, tempSettings } = currentUser;\n    const { view, sortBy } = tempSettings.tasks;\n    switch (type) {\n      case droppableTypes.TASK: {\n        const { droppableId: origFolderId, index: origIndex } = source;\n        const { droppableId: newFolderId, index: newIndex } = destination;\n        const isMovedWithinFolder = origFolderId === newFolderId;\n        const taskIds = [...folders[newFolderId].taskIds];\n        const completedTaskIds = taskIds.filter(\n          taskId => tasksById[taskId].isCompleted\n        );\n        const activeTaskIds = taskIds.filter(\n          taskId => !tasksById[taskId].isCompleted\n        );\n        const updatedTaskIds =\n          view === 'all'\n            ? taskIds\n            : view === 'active'\n            ? activeTaskIds\n            : completedTaskIds;\n\n        if (isMovedWithinFolder) {\n          updatedTaskIds.splice(origIndex, 1);\n          updatedTaskIds.splice(newIndex, 0, draggableId);\n          firebase.updateDoc(['users', userId, 'folders', newFolderId], {\n            taskIds:\n              view === 'all'\n                ? updatedTaskIds\n                : view === 'active'\n                ? [...completedTaskIds, ...updatedTaskIds]\n                : [...activeTaskIds, ...updatedTaskIds]\n          });\n        } else {\n          updatedTaskIds.splice(newIndex, 0, draggableId);\n          firebase.moveTaskToFolder({\n            userId,\n            taskId: draggableId,\n            origFolderId,\n            newFolderId,\n            updatedTaskIds:\n              view === 'all'\n                ? updatedTaskIds\n                : view === 'active'\n                ? [...completedTaskIds, ...updatedTaskIds]\n                : [...activeTaskIds, ...updatedTaskIds],\n            type: sortBy === 'folder' ? 'default' : sortBy\n          });\n        }\n        break;\n      }\n      case droppableTypes.FOLDER: {\n        const { reorderFolders } = this.props;\n        const updatedFolderIds = [...folderIds];\n        updatedFolderIds.splice(source.index, 1);\n        updatedFolderIds.splice(destination.index, 0, draggableId);\n        firebase.updateDoc(`users/${userId}`, {\n          folderIds: updatedFolderIds\n        });\n        reorderFolders(userId, updatedFolderIds);\n        break;\n      }\n      default: {\n        const { droppableId: origFolderId, index: origIndex } = source;\n        const { droppableId: newFolderId, index: newIndex } = destination;\n        const isMovedWithinFolder = origFolderId === newFolderId;\n        const taskIds = [...folders[newFolderId].taskIds];\n        const completedTaskIds = taskIds.filter(\n          taskId => tasksById[taskId].isCompleted\n        );\n        const activeTaskIds = taskIds.filter(\n          taskId => !tasksById[taskId].isCompleted\n        );\n        const updatedTaskIds =\n          view === 'all'\n            ? taskIds\n            : view === 'active'\n            ? activeTaskIds\n            : completedTaskIds;\n        if (isMovedWithinFolder) {\n          updatedTaskIds.splice(origIndex, 1);\n          updatedTaskIds.splice(newIndex, 0, draggableId);\n          firebase.updateDoc(['users', userId, 'folders', newFolderId], {\n            taskIds:\n              view === 'all'\n                ? updatedTaskIds\n                : view === 'active'\n                ? [...completedTaskIds, ...updatedTaskIds]\n                : [...activeTaskIds, ...updatedTaskIds]\n          });\n        }\n      }\n    }\n  };\n\n  saveTaskSettings = () => {\n    const { firebase, currentUser } = this.props;\n    const { userId, tempSettings } = currentUser;\n    const { view, sortBy } = tempSettings.tasks;\n    firebase.updateDoc(['users', userId], {\n      [`settings.tasks.view`]: view,\n      [`settings.tasks.sortBy`]: sortBy\n    });\n    this.closeTaskSettingsMenu();\n  };\n\n  setTempTaskSettings = e => {\n    const { setTempTaskSettings } = this.props;\n    const { name, value } = e.target;\n    setTempTaskSettings({\n      [name]: value\n    });\n    if (name === 'sortBy') {\n      this.hideSortRuleDropdown();\n    }\n  };\n\n  toggleTaskSettingsMenu = e => {\n    e.stopPropagation();\n    this.setState(prevState => ({\n      isTaskSettingsMenuVisible: !prevState.isTaskSettingsMenuVisible,\n      isSortRuleDropdownVisible:\n        prevState.isSortRuleDropdownVisible &&\n        prevState.isTaskSettingsMenuVisible\n          ? !prevState.isSortRuleDropdownVisible\n          : prevState.isSortRuleDropdownVisible\n    }));\n  };\n\n  closeTaskSettingsMenu = () => {\n    this.setState({\n      isTaskSettingsMenuVisible: false,\n      isSortRuleDropdownVisible: false\n    });\n  };\n\n  toggleSortRuleDropdown = () => {\n    this.setState(prevState => ({\n      isSortRuleDropdownVisible: !prevState.isSortRuleDropdownVisible\n    }));\n  };\n\n  hideSortRuleDropdown = () => {\n    this.setState({\n      isSortRuleDropdownVisible: false\n    });\n  };\n\n  render() {\n    const { currentUser, selectedTaskId, tasksById, taskGroups } = this.props;\n    const { userId, tempSettings } = currentUser;\n    const { view, sortBy } = tempSettings.tasks;\n    const {\n      isLoading,\n      isSortRuleDropdownVisible,\n      isTaskSettingsMenuVisible\n    } = this.state;\n\n    const isTaskEditorOpen = !!selectedTaskId;\n    if (isLoading) return null;\n    return (\n      <Main\n        title=\"All Tasks\"\n        classes={{\n          main: `user-tasks__container ${\n            isTaskEditorOpen ? 'show-task-editor' : ''\n          }`,\n          title: 'user-tasks__title'\n        }}\n      >\n        <div className=\"user-tasks__wrapper\">\n          <DragDropContext\n            onDragEnd={this.onDragEnd}\n            onDragStart={this.onDragStart}\n          >\n            <Droppable droppableId={userId} type={droppableTypes.FOLDER}>\n              {provided => (\n                <div\n                  className=\"user-tasks\"\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                >\n                  <TaskSettings\n                    isVisible={isTaskSettingsMenuVisible}\n                    onToggle={this.toggleTaskSettingsMenu}\n                    onClose={this.closeTaskSettingsMenu}\n                    onSave={this.saveTaskSettings}\n                    classes={{\n                      wrapper: 'user-tasks__settings-wrapper',\n                      popover: 'user-tasks__settings',\n                      item: 'user-tasks__settings-item'\n                    }}\n                    filters={[\n                      {\n                        filter: 'view',\n                        options: [\n                          { value: 'active', name: 'Active Tasks' },\n                          { value: 'completed', name: 'Completed Tasks' },\n                          { value: 'all', name: 'All Tasks' }\n                        ],\n                        value: view,\n                        onChange: this.setTempTaskSettings\n                      }\n                    ]}\n                    sortRule={{\n                      options: [\n                        { value: 'folder', name: 'Folder' },\n                        { value: 'project', name: 'Project' },\n                        { value: 'dueDate', name: 'Due Date' }\n                      ],\n                      value: sortBy,\n                      onChange: this.setTempTaskSettings,\n                      isDropdownVisible: isSortRuleDropdownVisible,\n                      toggleDropdown: this.toggleSortRuleDropdown,\n                      hideDropdown: this.hideSortRuleDropdown\n                    }}\n                  />\n                  {taskGroups.map((taskGroup, i) => (\n                    <Folder\n                      key={`${sortBy}-${taskGroup[sortBy] || taskGroup[`${sortBy}Id`]}`}\n                      userId={userId}\n                      folderId={taskGroup.folderId}\n                      projectId={taskGroup.projectId}\n                      projectName={taskGroup.projectName}\n                      dueDate={taskGroup.dueDate}\n                      index={i}\n                      name={taskGroup.name}\n                      taskIds={taskGroup.taskIds}\n                      onTaskClick={this.handleTaskClick}\n                      userPermissions={taskGroup.userPermissions}\n                    />\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n          {isTaskEditorOpen && (\n            <TaskEditor\n              {...tasksById[selectedTaskId]}\n              handleTaskEditorClose={this.closeTaskEditor}\n              userId={userId}\n              layout=\"list\"\n              key={selectedTaskId}\n            />\n          )}\n        </div>\n      </Main>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    taskGroups: currentUserSelectors.getSortedFilteredTaskGroups(state),\n    tasksById: taskSelectors.getTasksById(state),\n    selectedTaskId: getSelectedTaskId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    syncFolders: userId => dispatch(currentUserActions.syncFolders(userId)),\n    selectTask: taskId => dispatch(selectTaskAction(taskId)),\n    syncUserTasks: userId => dispatch(currentUserActions.syncUserTasks(userId)),\n    reorderFolders: (userId, folderIds) =>\n      dispatch(currentUserActions.reorderFolders(userId, folderIds)),\n    setTempTaskSettings: ({ view = null, sortBy = null }) =>\n      dispatch(currentUserActions.setTempTaskSettings({ view, sortBy }))\n  };\n};\n\nconst condition = currentUser => !!currentUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(UserTasks)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Main } from '../../components/Main';\nimport { userSelectors } from '../../ducks/users';\nimport './UserProfile.scss';\n\nclass UserProfile extends Component {\n  render() {\n    const { user } = this.props;\n    return <Main className=\"user-profile\" title={user.name} />;\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state, ownProps.userId)\n  };\n};\n\nexport default connect(mapStateToProps)(UserProfile);\n","import React, { Component } from 'react';\nimport { Button } from '../Button';\nimport { Input } from '../Input';\nimport { Icon } from '../Icon';\nimport './SearchBar.scss';\n\nexport default class SearchBar extends Component {\n\n  componentDidUpdate(prevProps) {\n    const { isExpanded } = this.props;\n    if (isExpanded && !prevProps.isExpanded) {\n      this.input.focus();\n    }\n    if (!isExpanded && prevProps.isExpanded) {\n      this.input.blur();\n    }\n  }\n\n  inputRef = ref => {\n    this.input = ref;\n    const { setInputRef } = this.props;\n    setInputRef(ref);\n  };\n\n  render() {\n    const {\n      value,\n      onClick,\n      onChange,\n      onKeyDown,\n      onSubmit,\n      isExpanded,\n      onFocus\n    } = this.props;\n    return (\n      <div\n        className={`search-bar${isExpanded ? ' is-expanded' : ''} clearfix`}\n      >\n        <form className=\"search-form\" onClick={onClick} onSubmit={onSubmit}>\n          <Input\n            onFocus={onFocus}\n            autoComplete=\"off\"\n            value={value}\n            name=\"search\"\n            className=\"search-form__input\"\n            type=\"text\"\n            innerRef={this.inputRef}\n            hideLabel\n            onChange={onChange}\n            onKeyDown={onKeyDown}\n          />\n          <Input\n            name=\"submit\"\n            className=\"search-form__submit\"\n            type=\"submit\"\n            hideLabel\n          />\n          <Button\n            type=\"button\"\n            className=\"search-form__btn\"\n            name=\"toggle\"\n            iconOnly\n          >\n            <Icon name=\"search\" />\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\n\nconst SearchSuggestions = ({\n  items,\n  onClick,\n  selectedItem,\n  category,\n  renderMatch\n}) => {\n  if (items.length === 0) return null;\n  return (\n    <li className=\"search-suggestions__item\">\n      <span className=\"search-suggestions__name\">{category}</span>\n      <ul className=\"search-suggestions__list\">\n        {items.map(item => {\n          const isSelected =\n            selectedItem === null\n              ? false\n              : (selectedItem.name === item.name &&\n                  (category === 'Projects' &&\n                    selectedItem.projectId === item.projectId)) ||\n                (category === 'Tags' && selectedItem.color === item.color) ||\n                (category === 'Tasks' && selectedItem.taskId === item.taskId);\n          return (\n            <li\n              key={item.taskId || item.projectId || item.name}\n              className={`search-suggestion ${isSelected ? 'is-selected' : ''}`}\n              onClick={onClick}\n              tabIndex={0}\n              data-id={item.taskId || item.projectId || item.name}\n              data-project-id={item.projectId || ''}\n            >\n              {renderMatch(item)}\n            </li>\n          );\n        })}\n      </ul>\n    </li>\n  );\n};\n\nSearchSuggestions.defaultProps = {\n  onClick: () => null\n};\n\nexport default SearchSuggestions;\n","import React from 'react';\n\nconst Highlight = ({ className, children, style }) => (\n  <span style={style} className={`highlight ${className}`}>\n    {children}\n  </span>\n);\n\nHighlight.defaultProps = {\n  className: '',\n  style: {\n    fontWeight: 700\n  }\n};\n\nexport default Highlight;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { Icon } from '../Icon';\nimport * as keys from '../../constants/keys';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport SearchSuggestions from './SearchSuggestions';\nimport SearchBar from './SearchBar';\nimport { selectTask as selectTaskAction } from '../../ducks/selectedTask';\nimport { taskSelectors } from '../../ducks/tasks';\nimport { generateKey } from '../../utils/react';\nimport { withOutsideClick } from '../withOutsideClick';\nimport Highlight from './Highlight';\nimport * as ROUTES from '../../constants/routes';\nimport './SearchTypeahead.scss';\n\nclass SearchTypeahead extends Component {\n  state = {\n    isActive: false,\n    isSearchBarExpanded: false,\n    query: '',\n    selectedItem: null,\n    selectedIndex: null,\n    filteredList: []\n  };\n\n  reset = e => {\n    this.setState({\n      isActive: false,\n      query: '',\n      isSearchBarExpanded: false,\n      selectedItem: null,\n      selectedIndex: null,\n      filteredList: []\n    });\n  };\n\n  onChange = e => {\n    const { value } = e.target;\n    const { selectedItem, filteredList } = this.state;\n    const { projects, tasks, tags } = this.props;\n    const newIndex = selectedItem\n      ? filteredList.findIndex(item => item.name === selectedItem.name)\n      : -1;\n    const persistSelectedItem = newIndex !== -1;\n    this.setState(() => ({\n      query: value,\n      selectedItem: persistSelectedItem ? selectedItem : null,\n      selectedIndex: persistSelectedItem ? newIndex : 0,\n      filteredList: [null, ...projects, ...tasks, ...tags].filter(item => {\n        return item === null || this.matchItem(item);\n      })\n    }));\n  };\n\n  onKeyDown = e => {\n    if (\n      e.key !== keys.TAB &&\n      e.key !== keys.ARROW_DOWN &&\n      e.key !== keys.ARROW_UP &&\n      e.key !== keys.ENTER\n    )\n      return;\n    e.preventDefault();\n\n    const { filteredList, selectedIndex, selectedItem } = this.state;\n    const nextIndex =\n      selectedIndex === filteredList.length - 1 ? 0 : selectedIndex + 1;\n    const prevIndex =\n      selectedIndex === 0 ? filteredList.length - 1 : selectedIndex - 1;\n\n    // eslint-disable-next-line default-case\n    switch (e.key) {\n      case keys.ARROW_DOWN:\n      // eslint-disable-next-line no-fallthrough\n      case keys.TAB: {\n        this.setState({\n          selectedItem: filteredList[nextIndex],\n          selectedIndex: nextIndex\n        });\n        break;\n      }\n      case keys.ARROW_UP: {\n        this.setState({\n          selectedItem: filteredList[prevIndex],\n          selectedIndex: prevIndex\n        });\n        break;\n      }\n      case keys.ENTER: {\n        const { history, selectTask, userId } = this.props;\n        if (selectedItem === null) {\n          this.handleSubmit(e);\n          this.input.blur();\n        } else {\n          if (selectedItem.projectId) {\n            history.push(`/0/projects/${selectedItem.projectId}`);\n            if (selectedItem.taskId) {\n              selectTask(selectedItem.taskId);\n            }\n          } else if (selectedItem.taskId) {\n            history.push(`/0/${userId}/tasks`);\n            selectTask(selectedItem.taskId);\n          } else {\n            history.push(`/0/tasks?tag=${selectedItem.name}`);\n          }\n          this.reset();\n        }\n      }\n    }\n  };\n\n  onClickProject = e => {\n    const { history } = this.props;\n    if (!e.target.matches('li')) return;\n    history.push(`/0/projects/${e.target.dataset.id}`);\n    this.reset();\n  };\n\n  onClickTask = e => {\n    if (!e.target.matches('li')) return;\n    const { history, userId, selectTask } = this.props;\n    const { id, projectId } = e.target.dataset;\n    if (projectId) {\n      history.push(`/0/projects/${projectId}`);\n    } else {\n      history.push(`/0/${userId}/tasks`);\n    }\n    selectTask(id);\n    this.reset();\n  };\n\n  onClickTag = e => {\n    const { history } = this.props;\n    if (!e.target.matches('li')) return;\n    history.push(`/0/tasks?tag=${e.target.dataset.id}`);\n    this.reset();\n  };\n\n  handleClick = e => {\n    const { query } = this.state;\n    const { name } = e.target;\n    if (name === 'search' || (name === 'submit' && query !== '')) return;\n    e.stopPropagation();\n    this.toggleSearchBar();\n  };\n\n  toggleSearchBar = () => {\n    this.setState(prevState => ({\n      isSearchBarExpanded: !prevState.isSearchBarExpanded\n    }));\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { history } = this.props;\n    const { query } = this.state;\n    if (query === '') return;\n    history.push(`/0/search?q=${query}`);\n    this.toggleSuggestions();\n  };\n\n  onOutsideClick = e => {\n    const { isSearchBarExpanded, isActive, query } = this.state;\n    if (\n      !isSearchBarExpanded ||\n      !isActive ||\n      (this.suggestions && this.suggestions.contains(e.target))\n    )\n      return;\n\n    if (query === '') {\n      this.setState({\n        isActive: false,\n        isSearchBarExpanded: false\n      });\n    } else {\n      this.toggleSuggestions();\n    }\n  };\n\n  matchItem = ({ name }) => {\n    const { value } = this.input;\n    if (value === '') return false;\n    const regExp = new RegExp(`\\\\b${value}`, 'i');\n    return regExp.test(name);\n  };\n\n  // If separator is a regular expression that contains capturing parentheses (), matched results are included in the array.\n\n  highlightMatch = ({ name }) => {\n    const { value } = this.input;\n    if (value === '') return name;\n    const regExp = new RegExp(`(\\\\b${value})`, 'gi');\n    return name\n      .split(regExp)\n      .map(text =>\n        regExp.test(text) ? (\n          <Highlight key={generateKey()}>{text}</Highlight>\n        ) : (\n          text\n        )\n      );\n  };\n\n  suggestionsRef = ref => {\n    this.suggestions = ref;\n  };\n\n  inputRef = ref => {\n    this.input = ref;\n  };\n\n  toggleSuggestions = e => {\n    this.setState(prevState => ({\n      isActive: !prevState.isActive\n    }));\n  };\n\n  onFocus = () => {\n    const { isActive } = this.state;\n    if (isActive) return;\n    this.toggleSuggestions();\n  };\n\n  render() {\n    const { projects, tasks, tags, innerRef } = this.props;\n    const { isActive, isSearchBarExpanded, selectedItem, query } = this.state;\n    return (\n      <div className=\"search-typeahead\" ref={innerRef}>\n        <SearchBar\n          setInputRef={this.inputRef}\n          onFocus={this.onFocus}\n          onClick={this.handleClick}\n          onChange={this.onChange}\n          onKeyDown={this.onKeyDown}\n          onSubmit={this.handleSubmit}\n          isExpanded={isSearchBarExpanded}\n          value={query}\n        />\n        {query !== '' && isActive && (\n          <ul ref={this.suggestionsRef} className=\"search-suggestions\">\n            <li\n              tabIndex={0}\n              onClick={this.handleSubmit}\n              className={`search-suggestions__item search-suggestion ${\n                selectedItem === null ? 'is-selected' : ''\n              }`}\n            >\n              <Icon name=\"search\" />\n              Items with <Highlight>{query}</Highlight>\n            </li>\n            <SearchSuggestions\n              onClick={this.onClickProject}\n              category=\"Projects\"\n              items={projects.filter(item => this.matchItem(item))}\n              selectedItem={selectedItem}\n              query={query}\n              renderMatch={item => (\n                <>\n                  <Icon name={item.layout === 'board' ? 'trello' : 'list'} />\n                  {this.highlightMatch(item)}\n                </>\n              )}\n            />\n            <SearchSuggestions\n              onClick={this.onClickTask}\n              category=\"Tasks\"\n              items={tasks.filter(item => this.matchItem(item))}\n              selectedItem={selectedItem}\n              query={query}\n              renderMatch={item => (\n                <>\n                  <Icon name=\"check-square\" />\n                  {this.highlightMatch(item)}\n                </>\n              )}\n            />\n            <SearchSuggestions\n              onClick={this.onClickTag}\n              category=\"Tags\"\n              items={tags.filter(item => this.matchItem(item))}\n              selectedItem={selectedItem}\n              query={query}\n              renderMatch={item => (\n                <>\n                  <Icon name=\"tag\" />\n                  {this.highlightMatch(item)}\n                </>\n              )}\n            />\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    userId: currentUserSelectors.getCurrentUserId(state),\n    projects: currentUserSelectors.getCurrentUserProjects(state),\n    tags: currentUserSelectors.getAllMergedTags(state),\n    tasks: taskSelectors.getTasksArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectTask: taskId => dispatch(selectTaskAction(taskId))\n  };\n};\n\nexport default compose(\n  withRouter,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  withOutsideClick\n)(SearchTypeahead);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport { Task } from '../Task';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport {\n  selectTask as selectTaskAction,\n  getSelectedTaskId\n} from '../../ducks/selectedTask';\nimport { TaskEditor } from '../TaskEditor';\nimport { Main } from '../Main';\nimport { Icon } from '../Icon';\nimport './SearchResults.scss';\n\nclass TagSearchResults extends Component {\n  onTaskClick = taskId => {\n    const { selectTask } = this.props;\n    selectTask(taskId);\n  };\n\n  closeTaskEditor = () => {\n    const { selectTask } = this.props;\n    selectTask(null);\n  };\n\n  render() {\n    const {\n      taggedTasks,\n      currentUser,\n      selectedTaskId,\n      tasksById,\n      tag\n    } = this.props;\n    const { userId } = currentUser;\n    const isTaskEditorOpen = !!selectedTaskId;\n    return (\n      <Main\n        title={<>\n        <Icon name=\"tag\" />\n          {tag}\n          </>\n          }\n        classes={{\n          main: 'search-results',\n          title: 'search-results__title'\n        }}\n      >\n        <div className=\"search-results__tasks-wrapper\">\n          <div className=\"search-results__tasks\">\n            {taggedTasks.map((task, i) => (\n              <Task\n                className=\"search-results__task\"\n                index={i}\n                key={task.taskId}\n                onTaskClick={this.onTaskClick}\n                {...task}\n              />\n            ))}\n          </div>\n          {isTaskEditorOpen && (\n            <TaskEditor\n              {...tasksById[selectedTaskId]}\n              handleTaskEditorClose={this.closeTaskEditor}\n              userId={userId}\n              layout=\"list\"\n              key={selectedTaskId}\n            />\n          )}\n        </div>\n      </Main>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    taggedTasks: taskSelectors.getTaggedTasks(state, ownProps.tag),\n    selectedTaskId: getSelectedTaskId(state),\n    tasksById: taskSelectors.getTasksById(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectTask: taskId => dispatch(selectTaskAction(taskId)),\n    syncTaggedTasks: ({ projectId, tag }) =>\n      dispatch(taskActions.syncTaggedTasks({ projectId, tag }))\n  };\n};\n\nconst condition = currentUser => !!currentUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TagSearchResults)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport { Task } from '../Task';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport {\n  selectTask as selectTaskAction,\n  getSelectedTaskId\n} from '../../ducks/selectedTask';\nimport { TaskEditor } from '../TaskEditor';\nimport { Main } from '../Main';\nimport { Icon } from '../Icon';\nimport './SearchResults.scss';\n\nclass SearchResults extends Component {\n  onTaskClick = taskId => {\n    const { selectTask } = this.props;\n    selectTask(taskId);\n  };\n\n  closeTaskEditor = () => {\n    const { selectTask } = this.props;\n    selectTask(null);\n  };\n\n  render() {\n    const { currentUser, selectedTaskId, tasksById, tasks, query } = this.props;\n    const { userId } = currentUser;\n    const isTaskEditorOpen = !!selectedTaskId;\n    return (\n      <Main\n        title=\"Search Results\"\n        classes={{\n          main: `search-results ${isTaskEditorOpen ? 'show-task-editor' : ''}`,\n          title: 'search-results__title'\n        }}\n      >\n        <h2 className=\"search-results__subheading\">\n          <Icon name=\"search\" />\n          {query}\n        </h2>\n        <div className=\"search-results__tasks-wrapper\">\n          <div className=\"search-results__tasks\">\n            {tasks.map((task, i) => (\n              <Task\n                className=\"search-results__task\"\n                index={i}\n                key={task.taskId}\n                onTaskClick={this.onTaskClick}\n                {...task}\n              />\n            ))}\n          </div>\n          {isTaskEditorOpen && (\n            <TaskEditor\n              {...tasksById[selectedTaskId]}\n              handleTaskEditorClose={this.closeTaskEditor}\n              userId={userId}\n              layout=\"list\"\n              key={selectedTaskId}\n            />\n          )}\n        </div>\n      </Main>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    tasks: taskSelectors.getTasksMatchingQuery(state, ownProps.query),\n    selectedTaskId: getSelectedTaskId(state),\n    tasksById: taskSelectors.getTasksById(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectTask: taskId => dispatch(selectTaskAction(taskId))\n  };\n};\n\nconst condition = currentUser => !!currentUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(SearchResults)\n);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../../components/Firebase';\nimport { Input } from '../../components/Input';\nimport { Button } from '../../components/Button';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .passwordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n    const isInvalid = passwordOne === '' || passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"passwordOne\"\n          label=\"New Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          label=\"Confirm New Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"md\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Change Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport { PasswordChangeForm } from '../PasswordChange';\nimport {\n  currentUserActions,\n  currentUserSelectors\n} from '../../ducks/currentUser';\nimport { AuthUserContext, withAuthorization } from '../../components/Session';\nimport { UserFormPage } from '../../components/UserFormPage';\nimport './Account.scss';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <UserFormPage title=\"My Account\">\n        <section className=\"account-section\">\n        <h2 className=\"account-section__header\">Forgot your password?</h2>\n          <PasswordForgetForm />\n        </section>\n        <section className=\"account-section\">\n        <h2 className=\"account-section__header\">Change your password.</h2>\n          <PasswordChangeForm />\n        </section>\n        </UserFormPage>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: currentUserSelectors.getCurrentUser(state)\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    \n  }\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(AccountPage)\n);\n","export const getParams = string => {\n  const query = string.slice(1);\n  return query.split('&').reduce((params, pair) => {\n    const [key, value] = pair.split('=');\n    return {\n      ...params,\n      [key]: decodeURIComponent(value)\n    };\n  }, {});\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { withAuthorization } from '../../components/Session';\nimport * as ROUTES from '../../constants/routes';\nimport { userActions } from '../../ducks/users';\nimport { ProjectGrid } from '../../components/ProjectGrid';\nimport { ProjectComposer } from '../../components/ProjectComposer';\nimport { ProjectContainer } from '../../components/Project';\nimport { projectActions, projectSelectors } from '../../ducks/projects';\nimport { taskActions } from '../../ducks/tasks';\nimport { currentUserActions } from '../../ducks/currentUser';\nimport { Main } from '../../components/Main';\nimport { Dashboard } from '../../components/Dashboard';\nimport { UserTasks } from '../../components/UserTasks';\nimport { UserProfile } from '../UserProfile';\nimport { SearchResults, TagSearchResults } from '../../components/Search';\nimport { AccountPage } from '../Account';\nimport { getParams } from '../../utils/string';\nimport './Home.scss';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isProjectComposerOpen: false,\n      isLoading: true\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      syncUsersById,\n      currentUser,\n      syncUserProjects,\n      syncUserProjectTasks,\n      syncUserMiscTasks,\n      syncUserTags\n    } = this.props;\n    const { userId, projectIds } = currentUser;\n    console.log('mounted home');\n\n    await Promise.all([\n      syncUsersById(),\n      syncUserProjects(userId),\n      syncUserMiscTasks(userId),\n      syncUserTags(userId),\n      ...projectIds.map(projectId =>\n        syncUserProjectTasks({ userId, projectId })\n      )\n    ]).then(listeners => {\n      this.unsubscribe = listeners;\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe.forEach(func => func());\n    console.log('home unmounted');\n  }\n\n  toggleProjectComposer = () => {\n    this.setState(prevState => ({\n      isProjectComposerOpen: !prevState.isProjectComposerOpen\n    }));\n  };\n\n  render() {\n    const { isProjectComposerOpen, isLoading } = this.state;\n    if (isLoading) return null;\n    const { userId, projectsById } = this.props;\n    return (\n      <>\n        {isProjectComposerOpen && (\n          <ProjectComposer onClose={this.toggleProjectComposer} />\n        )}\n        <Switch>\n          <Route\n            exact\n            path={ROUTES.HOME}\n            render={props => (\n              <Dashboard\n                toggleProjectComposer={this.toggleProjectComposer}\n                {...props}\n              />\n            )}\n          />\n          <Route\n            path={ROUTES.PROJECT}\n            render={props => (\n              <ProjectContainer\n                userId={userId}\n                projectId={props.match.params.id}\n                projectName={projectsById[props.match.params.id].name}\n                {...props}\n              />\n            )}\n          />\n          <Route\n            path={ROUTES.USER_PROJECTS}\n            render={props => (\n              <Main\n                title=\"Projects\"\n                classes={{\n                  main: 'project-grid__container',\n                  title: 'project-grid__header'\n                }}\n              >\n                <ProjectGrid\n                  userId={userId}\n                  openProjectComposer={this.toggleProjectComposer}\n                  {...props}\n                />\n              </Main>\n            )}\n          />\n          <Route\n            path={ROUTES.USER_TASKS}\n            render={props => <UserTasks userId={userId} {...props} />}\n          />\n          <Route\n            path={ROUTES.USER_PROFILE}\n            render={props => (\n              <UserProfile userId={props.match.params.id} {...props} />\n            )}\n          />\n          <Route\n            path={ROUTES.GLOBAL_SEARCH}\n            render={props => {\n              const { search } = props.location;\n              const params = getParams(search);\n              return <SearchResults query={params.q} {...props} />;\n            }}\n          />\n          <Route\n            path={ROUTES.TASK_SEARCH}\n            render={props => {\n              const { search } = props.location;\n              const params = getParams(search);\n              if (params.tag) {\n                return <TagSearchResults tag={params.tag} {...props} />;\n              }\n            }}\n          />\n          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n        </Switch>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    projectsById: projectSelectors.getProjectsById(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    syncUsersById: () => dispatch(userActions.syncUsersById()),\n    syncUserTags: userId => dispatch(currentUserActions.syncUserTags(userId)),\n    syncUserProjects: userId =>\n      dispatch(projectActions.syncUserProjects(userId)),\n    syncUserProjectTasks: ({ userId, projectId }) =>\n      dispatch(taskActions.syncUserProjectTasks({ userId, projectId })),\n    syncUserMiscTasks: userId => dispatch(taskActions.syncUserMiscTasks(userId))\n  };\n};\n\nconst condition = currentUser => !!currentUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(HomePage)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../../components/Session';\nimport { userActions, userSelectors } from '../../ducks/users';\nimport { currentUserActions, currentUserSelectors } from '../../ducks/currentUser';\nimport './Admin.scss';\n\nclass AdminPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      users: {}\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    /*\n    this.props.firebase.users().on('value', snapshot => {\n      this.setState({\n        users: snapshot.val(),\n        loading: false\n      });\n    });\n    */\n  }\n\n  componentWillUnmount() {\n    /*\n    this.props.firebase.users().off();\n    */\n  }\n\n  render() {\n    return (\n      <main className=\"admin\">\n        <h1>Admin</h1>\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentUser: currentUserSelectors.getCurrentUser(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsersById: () => dispatch(userActions.fetchUsersById())\n  };\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(AdminPage)\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { Icon } from '../Icon';\nimport './Logo.scss';\n\nconst Logo = ({ size, className, onClick }) => {\n  return (\n    <div className={`logo logo--${size} ${className}`}>\n      <Link className=\"logo__link\" to={ROUTES.LANDING} onClick={onClick}>\n        <span className=\"logo__text\">workflow</span>\n      </Link>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React, { Component } from 'react';\nimport './Navbar.scss';\nimport { Logo } from '../Logo';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\n\nexport default class Navbar extends Component {\n  static defaultProps = {\n    minWidth: 768,\n    classes: {\n      navbar: '',\n      links: ''\n    }\n  };\n\n  state = {\n    viewportWidth: window.innerWidth,\n    isMobileNavVisible: false,\n    isTouchEnabled: false\n  };\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick);\n  }\n\n  handleResize = () => {\n    this.setState({\n      viewportWidth: window.innerWidth\n    });\n  };\n\n  toggleMobileNavVisibility = () => {\n    this.setState(prevState => ({\n      isMobileNavVisible: !prevState.isMobileNavVisible\n    }));\n  };\n\n  handleClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    if (!isMobileView) return;\n    if (e.target.matches('button') || e.target.matches('a')) {\n      this.toggleMobileNavVisibility();\n    }\n  };\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n    window.removeEventListener('resize', this.handleResize);\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  handleOutsideClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n    if (\n      !isMobileView ||\n      this.navLinksEl.contains(e.target) ||\n      e.target.matches('button') ||\n      e.target.matches('a')\n    )\n      return;\n    this.setState({\n      isMobileNavVisible: false\n    });\n  };\n\n  handleTouch = () => {\n    const { isTouchEnabled } = this.state;\n    if (isTouchEnabled === true) return;\n    this.setState({\n      isTouchEnabled: true\n    });\n    document.removeEventListener('touchstart', this.handleTouch);\n    document.removeEventListener('click', this.handleOutsideClick);\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  render() {\n    const { viewportWidth, isMobileNavVisible } = this.state;\n    const { minWidth, classes, children } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    return (\n      <nav\n        className={`navbar ${isMobileView ? 'is-collapsed' : ''} ${\n          isMobileView && isMobileNavVisible ? 'show-links' : ''\n        } ${classes.navbar}`}\n        ref={el => (this.navEl = el)}\n      >\n        <Logo className=\"navbar__logo\" onClick={this.handleClick} />\n        {isMobileView && (\n          <Button\n            type=\"button\"\n            color=\"primary\"\n            onClick={this.toggleMobileNavVisibility}\n            iconOnly\n          >\n            <Icon name=\"menu\" />\n          </Button>\n        )}\n        <ul\n          className={`navbar__links ${classes.links}`}\n          onClick={this.handleClick}\n          ref={el => (this.navLinksEl = el)}\n        >\n          {children}\n        </ul>\n      </nav>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Logo } from '../Logo';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { withOutsideClick } from '../withOutsideClick';\nimport './Sidebar.scss';\n\nexport const SidebarIcon = ({ name }) => {\n  return <Icon name={name} className=\"sidebar__icon\" />;\n};\n\nclass Sidebar extends Component {\n  onOutsideClick = e => {\n    const { isExpanded } = this.props;\n    if (!isExpanded || e.target.matches('.sidebar__btn--toggle')) return;\n    const { onToggle } = this.props;\n    onToggle();\n  };\n\n  render() {\n    const { onToggle, children, innerRef } = this.props;\n    return (\n      <div ref={innerRef} className=\"sidebar__canvas\">\n        <Button\n          type=\"button\"\n          onClick={onToggle}\n          className=\"sidebar__btn--toggle\"\n          size=\"sm\"\n          iconOnly\n        >\n          <Icon name=\"bar-chart-2\" />\n        </Button>\n        <div className=\"sidebar\">\n          <nav className=\"sidebar__nav\">\n            <div className=\"sidebar__logo\">\n              <Logo size=\"sm\" />\n            </div>\n            <ul className=\"sidebar__list\">{children}</ul>\n          </nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withOutsideClick(Sidebar);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { SidebarIcon } from './Sidebar';\n\nexport const NavLinksNonAuth = ({onClick}) => (\n  <>\n    <li>\n      <NavLink onClick={onClick} to={ROUTES.SIGN_IN}>Log In</NavLink>\n    </li>\n    <li>\n      <NavLink onClick={onClick} to={ROUTES.SIGN_UP}>Get Started</NavLink>\n    </li>\n  </>\n);\n\nexport const NavLinksAuth = ({ userId, onClick }) => (\n  <>\n    <li className=\"sidebar__item\">\n      <NavLink onClick={onClick} className=\"sidebar__link\" to={`/0/home/${userId}`}>\n        <SidebarIcon name=\"home\" />\n        <span className=\"sidebar__section-name\">Home</span>\n      </NavLink>\n    </li>\n    <li className=\"sidebar__item\">\n      <NavLink onClick={onClick} className=\"sidebar__link\" to={`/0/${userId}/projects`}>\n        <SidebarIcon name=\"grid\" />\n        <span className=\"sidebar__section-name\">Projects</span>\n      </NavLink>\n    </li>\n    <li className=\"sidebar__item\">\n      <NavLink onClick={onClick} className=\"sidebar__link\" to={`/0/${userId}/tasks`}>\n        <SidebarIcon name=\"check-square\" />\n        <span className=\"sidebar__section-name\">Tasks</span>\n      </NavLink>\n    </li>\n  </>\n);\n","import React from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Button } from '../Button';\n\nconst SignOutButton = ({ firebase, className }) => (\n  <Button\n    type=\"button\"\n    onClick={firebase.signOut}\n    className={className}\n    color=\"primary\"\n  >\n    Log Out\n  </Button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport { PopoverWrapper } from '../Popover';\nimport { Avatar } from '../Avatar';\nimport { Menu, MenuItem } from '../Menu';\nimport { SignOutButton } from '../SignOutButton';\nimport { SearchTypeahead } from '../Search';\nimport './Topbar.scss';\n\nconst Topbar = ({ currentUser }) => (\n  <div className=\"topbar\">\n    <SearchTypeahead />\n    {currentUser && (\n      <PopoverWrapper\n        classes={{\n          wrapper: 'topbar__user-actions-wrapper',\n          popover: 'topbar__user-actions'\n        }}\n        align={{ outer: 'right', inner: 'right' }}\n        buttonProps={{\n          size: 'sm',\n          iconOnly: true,\n          className: 'topbar__btn--user-actions',\n          children: (\n            <Avatar\n              classes={{\n                avatar: 'topbar__avatar',\n                placeholder: 'topbar__avatar-placeholder'\n              }}\n              name={currentUser.name}\n              size=\"sm\"\n              variant=\"circle\"\n              imgSrc={currentUser.photoURL}\n            />\n          )\n        }}\n      >\n        <Menu>\n          <MenuItem>\n            <NavLink\n              className=\"topbar__link\"\n              to={`/0/${currentUser.userId}/account`}\n            >\n              My Account\n            </NavLink>\n          </MenuItem>\n          <MenuItem>\n            <NavLink\n              className=\"topbar__link\"\n              to={`/0/${currentUser.userId}/profile`}\n            >\n              My Profile\n            </NavLink>\n          </MenuItem>\n          <MenuItem>\n            <SignOutButton className=\"topbar__link\" />\n          </MenuItem>\n        </Menu>\n      </PopoverWrapper>\n    )}\n  </div>\n);\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentUser: currentUserSelectors.getCurrentUser(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Topbar);\n","import React, { Component } from 'react';\nimport { AuthUserContext } from '../Session';\nimport { Navbar, NavLinksAuth, NavLinksNonAuth, Sidebar } from '../Nav';\nimport { Topbar } from '../Topbar';\nimport './Header.scss';\n\nexport default class Header extends Component {\n  state = {\n    isNavExpanded: false\n  };\n\n  toggleNav = e => {\n    this.setState(prevState => ({\n      isNavExpanded: !prevState.isNavExpanded\n    }));\n  };\n\n  render() {\n    const { isNavExpanded } = this.state;\n    return (\n      <header className={`header ${isNavExpanded ? 'expand-nav' : ''}`}>\n        <AuthUserContext.Consumer>\n          {currentUser =>\n            currentUser ? (\n              <>\n                <Sidebar isExpanded={isNavExpanded} onToggle={this.toggleNav}>\n                  <NavLinksAuth\n                    onClick={this.toggleNav}\n                    userId={currentUser.userId}\n                  />\n                </Sidebar>\n                <Topbar />\n              </>\n            ) : (\n              <Navbar>\n                <NavLinksNonAuth />\n              </Navbar>\n            )\n          }\n        </AuthUserContext.Consumer>\n      </header>\n    );\n  }\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { LandingPage } from '../Landing';\nimport { SignUpPage } from '../SignUp';\nimport { SignInPage } from '../SignIn';\nimport { PasswordForgetPage } from '../PasswordForget';\nimport { HomePage } from '../Home';\nimport { AdminPage } from '../Admin';\nimport { withAuthentication } from '../../components/Session';\nimport { Header } from '../../components/Header';\n\nconst App = () => (\n  <>\n    <Header />\n    <Switch>\n      <Route exact path={ROUTES.LANDING} component={LandingPage} />\n      <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n      <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n      <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n      <Route path={ROUTES.BASE} component={HomePage} />\n      <Route path={ROUTES.ADMIN} component={AdminPage} />\n    </Switch>\n  </>\n);\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { projectsById } from '../ducks/projects';\nimport { tasksById } from '../ducks/tasks';\nimport { listsById } from '../ducks/lists';\nimport { usersById } from '../ducks/users';\nimport { subtasksById } from '../ducks/subtasks';\nimport { commentsById } from '../ducks/comments';\nimport { currentUser } from '../ducks/currentUser';\nimport { selectedTask } from '../ducks/selectedTask';\nimport { selectedProject } from '../ducks/selectedProject';\n\nexport default combineReducers({\n  currentUser,\n  projectsById,\n  listsById,\n  tasksById,\n  usersById,\n  subtasksById,\n  commentsById,\n  selectedTask,\n  selectedProject\n});\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory({ basename: process.env.PUBLIC_URL });\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, {}, applyMiddleware(thunk));\nexport default store;\nexport { default as firebase } from './firebase';\nexport { default as history } from './history';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport 'normalize.css';\nimport './index.scss';\nimport { App } from './pages/App';\nimport * as serviceWorker from './serviceWorker';\nimport { FirebaseContext } from './components/Firebase';\nimport store, { firebase, history } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <FirebaseContext.Provider value={firebase}>\n      <Router basename={process.env.PUBLIC_URL} history={history}>\n        <App />\n      </Router>\n    </FirebaseContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}