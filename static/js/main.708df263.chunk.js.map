{"version":3,"sources":["assets/feather/feather-sprite.svg","components/Firebase/context.js","components/Firebase/Firebase.js","constants/routes.js","components/Button/Button.js","components/SignOut/SignOutButton.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Icon/Icon.js","components/Navbar/Navbar.js","components/Input/Input.js","components/SignUp/SignUpForm.js","components/UserFormPage/UserFormPage.js","components/SignUp/SignUp.js","components/SignUp/index.js","components/SignIn/SignInForm.js","components/PasswordForget/PasswordForgetForm.js","components/PasswordForget/PasswordForget.js","components/PasswordForget/index.js","components/SignIn/SignIn.js","store/firebase.js","ducks/user/actions.js","ducks/user/types.js","ducks/user/selectors.js","ducks/user/reducers.js","ducks/current/actions.js","ducks/current/types.js","ducks/current/selectors.js","components/BoardGrid/BoardGrid.js","components/BoardGrid/BoardTile.js","ducks/boards/actions.js","ducks/boards/types.js","ducks/boards/selectors.js","ducks/boards/reducers.js","components/BoardGrid/BoardGridContainer.js","components/Modal/Modal.js","components/BoardComposer/BoardComposer.js","constants/droppableTypes.js","components/ListComposer/ListComposer.js","components/Board/Board.js","ducks/lists/actions.js","ducks/lists/types.js","ducks/lists/selectors.js","ducks/lists/reducers.js","ducks/cards/selectors.js","ducks/cards/actions.js","ducks/cards/types.js","ducks/cards/reducers.js","components/Textarea/Textarea.js","components/CardComposer/CardComposer.js","components/Menu/Menu.js","components/Menu/MenuItem.js","components/Popover/Popover.js","components/Popover/PopoverWrapper.js","components/Card/Card.js","components/List/Cards.js","components/List/List.js","components/Toolbar/Toolbar.jsx","components/CardEditor/CardEditorMoreActions.js","components/CardEditor/CardEditor.js","utils/utils.js","components/Board/BoardContainer.js","components/Home/Home.js","components/PasswordChange/PasswordChangeForm.js","components/Account/Account.js","components/Header/Header.jsx","components/App/App.js","serviceWorker.js","store/reducers.js","ducks/current/reducers.js","store/history.js","index.js"],"names":["module","exports","__webpack_require__","p","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","createUserWithEmailAndPassword","email","password","auth","signInWithEmailAndPassword","signOut","passwordReset","sendPasswordResetEmail","passwordUpdate","newPassword","currentUser","updatePassword","getTimestamp","firestore","FieldValue","serverTimestamp","addToArray","value","arrayUnion","removeFromArray","arrayRemove","getUserDoc","userId","db","collection","doc","addUser","_ref","name","username","_ref$boardIds","boardIds","set","updateUser","newValue","arguments","length","undefined","update","getBoardDoc","boardId","updateBoard","objectSpread","lastModifiedAt","addBoard","_ref2","boardTitle","add","createdAt","listIds","authorId","memberIds","then","ref","id","getListDoc","listId","updateList","addList","_ref3","listTitle","cardIds","deleteList","_ref4","batch","listRef","boardRef","delete","where","get","snapshot","docs","forEach","commit","console","log","catch","error","getCardDoc","cardId","addCard","_ref5","cardTitle","updateCard","deleteCard","_ref6","cardRef","moveCardToList","_ref7","origListId","newListId","updatedCardIds","origListRef","newListRef","initializeApp","HOME","Button","children","_ref$type","type","onClick","_ref$className","className","_ref$color","color","_ref$size","size","_ref$variant","variant","disabled","_ref$iconOnly","iconOnly","buttonRef","objectWithoutProperties","concat","defaultProps","components_Button_Button","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","authUser","inherits","createClass","key","_this2","listener","onAuthStateChanged","setState","Session_context","Provider","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","Icon","addClass","trim","xmlns","xmlnsXlink","viewBox","width","height","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","xlinkHref","featherIcons","NavLinksAuth","Link","to","ROUTES","components_SignOut_SignOutButton","NavLinksNonAuth","_ref2$className","Navbar","viewportWidth","window","innerWidth","isMobileNavVisible","handleResize","toggleMobileNavVisibility","prevState","handleClick","e","minWidth","target","matches","handleOutsideClick","preventDefault","navEl","contains","addEventListener","document","removeEventListener","_this$state","_this$props","isMobileView","navRef","el","Icon_Icon","Navbar_NavLinksAuth","Navbar_NavLinksNonAuth","Input","Fragment","hideLabel","htmlFor","title","onChange","placeholder","required","isRequired","onBlur","INITIAL_STATE","passwordOne","passwordTwo","SignUpForm","onSubmit","user","uid","defineProperty","_this$state2","isInvalid","components_Input_Input","message","UserFormPage","SignUpPage","components_UserFormPage_UserFormPage","SignUp_SignUpForm","SignUpLink","SignInForm","PasswordForgetForm","PasswordForgetPage","PasswordForget_PasswordForgetForm","PasswordForgetLink","SignInPage","SignIn_SignInForm","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","updateUserBoards","fetchUserData","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","data","sent","loadUserData","t0","stop","_x","apply","getUserData","action","toConsumableArray","selectBoard","selectList","selectCard","getCurrentBoardId","current","getCurrentListId","getCurrentCardId","getCurrent","BoardGrid","BoardTile","loadBoardsById","boardsById","fetchBoardsById","updateBoardsById","board","reorderLists","updateListIds","getBoardsById","getBoardsArray","keys","map","getBoard","BoardGridContainer","onSnapshot","querySnapshot","docChanges","change","_this$props$user","boardsArray","boardTiles","BoardGrid_BoardTile","BoardGrid_BoardGrid","openBoardComposer","connect","userSelectors","boardSelectors","userActions","boardActions","currentActions","Modal","onModalClose","onModalClick","BoardComposer","handleSubmit","onClose","components_Modal_Modal","CARD","LIST","isActive","ListComposer","resetForm","onReset","onFocus","currentSelectors","Board","react_beautiful_dnd_esm","droppableId","droppableTypes","direction","provided","innerRef","droppableProps","components_ListComposer_ListComposer","loadListsById","listsById","fetchListsById","updateListsById","list","getListsById","getListsArray","getCardsById","cardsById","getCardsArray","ownProps","loadCardsById","fetchCardsById","updateCardsById","card","Textarea","autoHeightResize","isAutoHeightResizeEnabled","textareaEl","style","scrollHeight","createRef","onInput","CardComposer","Textarea_Textarea_Textarea","Menu","MenuItem","Popover","onOutsideClick","PopoverWrapper","isOpen","componentEl","toggleOpen","alignInner","alignOuter","buttonProps","wrapperClass","popoverClass","anchorEl","popoverWrapperStyle","offsetTop","offsetLeft","position","top","Popover_Popover","align","Card","handleCardClick","onCardClick","_this$props2","cardIndex","draggableId","index","draggableProps","dragHandleProps","headerEl","Cards","scrollToBottom","listEnd","scrollIntoView","prevProps","cards","onCardDelete","minHeight","isDraggingOver","Card_Card_Card","float","clear","List","handleListDelete","newListTitle","isDragging","_this$props3","listIndex","isFetchingCards","viewportHeight","listHeaderEl","PopoverWrapper_PopoverWrapper","components_Menu_Menu","Menu_MenuItem","href","Cards_Cards","handleCardDelete","components_CardComposer_CardComposer","cardSelectors","Toolbar","CardEditorMoreActions","onMenuClick","data-action","CardEditor","onCardEditorClose","cardKey","cardDescription","currentFocus","onSubmitComment","handleModalClick","commentFormRef","subtaskFormRef","handleMoreActions","dataset","cardComment","isCommentFormFocused","setCommentFormRef","element","setSubtaskFormRef","cardSubtask","commentFormIsFocused","components_Toolbar_Toolbar","CardEditor_CardEditorMoreActions","submitSubtask","listSelectors","listsArray","listActions","cardActions","isEqual","other","prototype","toString","typeArr","valueLen","compare","item1","item2","itemType","i","hasOwnProperty","windowDebouncer","callback","request","_len","args","Array","_key","cancelAnimationFrame","requestAnimationFrame","BoardContainer","onDragStart","onDragEnd","destination","source","isMovedWithinList","splice","updatedListIds","toggleCardEditor","isCardEditorOpen","onTitleChange","onTitleBlur","newBoardTitle","isFetching","boardObserver","updatedBoard","utils","listObserver","cardObserver","_this3","_this$props4","lists","components_List_List","components_Board_Board","components_CardEditor_CardEditor","HomePage","toggleBoardComposer","isBoardComposerOpen","createBoard","BoardComposer_BoardComposer_BoardComposer","Switch","Route","exact","path","render","BoardGrid_BoardGridContainer","Board_BoardContainer","match","params","currentBoardId","PasswordChangeForm","PasswordChange_PasswordChangeForm","Header","Navbar_Navbar_Navbar","Header_Header_Header","component","LandingPage","AccountPage","AdminPage","Boolean","location","hostname","combineReducers","createBrowserHistory","basename","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","es","context","Router","components_App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.708df263.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/feather-sprite.0ed672ce.svg\";","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import firebase from 'firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\nclass Firebase {\n  constructor() {\n    firebase.initializeApp(config);\n    this.auth = firebase.auth();\n    this.db = firebase.firestore();\n  }\n\n  // Auth API\n  createUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  signInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  signOut = () => this.auth.signOut();\n\n  passwordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  passwordUpdate = newPassword =>\n    this.auth.currentUser.updatePassword(newPassword);\n\n  // Utility API\n\n  getTimestamp = () => firebase.firestore.FieldValue.serverTimestamp();\n  addToArray = value => firebase.firestore.FieldValue.arrayUnion(value);\n  removeFromArray = value => firebase.firestore.FieldValue.arrayRemove(value);\n\n  // User API\n\n  getUserDoc = userId => this.db.collection('users').doc(userId);\n\n  addUser = ({ userId, name, username, email, boardIds = [] }) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .set({ userId, name, username, email, boardIds });\n\n  updateUser = (userId, newValue = {}) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .update(newValue);\n\n  // Board API\n\n  getBoardDoc = boardId => this.db.collection('boards').doc(boardId);\n\n  updateBoard = (boardId, newValue = {}) =>\n    this.getBoardDoc(boardId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  addBoard = ({ userId, boardTitle }) => {\n    this.db\n      .collection('boards')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        listIds: [],\n        authorId: userId,\n        memberIds: [userId],\n        boardTitle\n      })\n      .then(ref => {\n        this.updateUser(userId, {\n          boardIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  // List API\n\n  getListDoc = listId => this.db.collection('lists').doc(listId);\n\n  updateList = (listId, newValue = {}) =>\n    this.getListDoc(listId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  addList = ({ boardId, listTitle }) => {\n    this.db\n      .collection('lists')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        cardIds: [],\n        boardId,\n        listTitle\n      })\n      .then(ref => {\n        this.updateBoard(boardId, {\n          listIds: this.addToArray(ref.id),\n          lastModifiedAt: this.getTimestamp()\n        });\n      });\n  };\n\n  deleteList = ({ listId, boardId }) => {\n    const batch = this.db.batch();\n    const listRef = this.getListDoc(listId);\n    const boardRef = this.getBoardDoc(boardId);\n\n    // Delete list\n    batch.delete(listRef);\n\n    // Remove list id from board\n    batch.update(boardRef, {\n      listIds: this.removeFromArray(listId),\n      lastModifiedAt: this.getTimestamp()\n    });\n\n    // Delete cards assigned to list\n    this.db\n      .collection('cards')\n      .where('listId', '==', listId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('list deleted');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  // Card API\n\n  getCardDoc = cardId => this.db.collection('cards').doc(cardId);\n\n  addCard = ({ boardId, listId, cardTitle }) => {\n    this.db\n      .collection('cards')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        listId,\n        boardId,\n        cardTitle\n      })\n      .then(ref => {\n        this.updateList(listId, {\n          cardIds: this.addToArray(ref.id),\n          lastModifiedAt: this.getTimestamp()\n        });\n      });\n  };\n\n  updateCard = (cardId, newValue = {}) => {\n    this.getCardDoc(cardId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  deleteCard = ({ cardId, listId }) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const listRef = this.getListDoc(listId);\n    batch.delete(cardRef);\n    batch.update(listRef, {\n      cardIds: this.removeFromArray(cardId),\n      lastModifiedAt: this.getTimestamp()\n    });\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log('card deleted');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  moveCardToList = ({ cardId, origListId, newListId, updatedCardIds }) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const origListRef = this.getListDoc(origListId);\n    const newListRef = this.getListDoc(newListId);\n    batch.update(cardRef, {\n      listId: newListId,\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(origListRef, {\n      cardIds: this.removeFromArray(cardId),\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(newListRef, {\n      cardIds: updatedCardIds,\n      lastModifiedAt: this.getTimestamp()\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('card moved');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n}\n\nexport default Firebase;\n","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const BOARD = '/home/board/:id';\n","import React from 'react';\nimport './Button.scss';\n\nconst Button = ({\n  children,\n  type = 'button',\n  onClick,\n  className = '',\n  color = 'neutral',\n  size = 'md',\n  variant = 'text',\n  disabled,\n  name,\n  iconOnly = false,\n  buttonRef,\n  ...props\n}) => (\n  // eslint-disable-next-line react/button-has-type\n  <button\n    className={`${className} ${color} ${size} ${variant} ${\n      iconOnly ? 'icon-only' : ''\n    }`}\n    type={type}\n    onClick={onClick}\n    disabled={disabled}\n    name={name}\n    ref={buttonRef}\n    {...props}\n  >\n    {children}\n  </button>\n);\n\nButton.defaultProps = {\n  type: 'button',\n  className: '',\n  color: 'neutral',\n  size: 'md',\n  variant: 'text',\n  iconOnly: false\n};\n\nexport default Button;\n","import React from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Button } from '../Button';\nimport './SignOutButton.scss';\n\nconst SignOutButton = ({ firebase }) => (\n  <Button\n    type=\"button\"\n    onClick={firebase.signOut}\n    className=\"btn--sign-out\"\n    color=\"primary\"\n  >\n    Sign Out\n  </Button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        authUser: null\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        authUser\n          ? this.setState({ authUser })\n          : this.setState({ authUser: null });\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport AuthUserContext from './context';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          this.props.history.push(ROUTES.SIGN_IN);\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n  return compose(\n    withRouter,\n    withFirebase\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from 'react';\nimport featherIcons from '../../assets/feather/feather-sprite.svg';\n\nfunction Icon(props) {\n  return (\n    <svg\n      className={`feather feather-${props.name} ${props.addClass || ''}`.trim()}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n      height=\"24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <use xlinkHref={`${featherIcons}#${props.name}`} />\n    </svg>\n  );\n}\n\nexport default Icon;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { SignOutButton } from '../SignOut';\nimport './Navbar.scss';\nimport { AuthUserContext } from '../Session';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\n\nconst NavLinksAuth = ({ className = '', onClick }) => (\n  <ul className={`navbar__links ${className}`} onClick={onClick}>\n    <li>\n      <Link to={ROUTES.HOME}>Home</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ADMIN}>Admin</Link>\n    </li>\n    <li>\n      <SignOutButton />\n    </li>\n  </ul>\n);\n\nconst NavLinksNonAuth = ({ className = '', onClick }) => (\n  <ul className={`navbar__links ${className}`} onClick={onClick}>\n    <li>\n      <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n    </li>\n  </ul>\n);\n\nexport default class Navbar extends Component {\n  static defaultProps = {\n    minWidth: 768\n  };\n\n  state = {\n    viewportWidth: window.innerWidth,\n    isMobileNavVisible: false\n  };\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    document.addEventListener('click', this.handleOutsideClick);\n  }\n\n  handleResize = () => {\n    this.setState({\n      viewportWidth: window.innerWidth\n    });\n  };\n\n  toggleMobileNavVisibility = () => {\n    this.setState(prevState => ({\n      isMobileNavVisible: !prevState.isMobileNavVisible\n    }));\n  };\n\n  handleClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    if (!isMobileView) return;\n    if (e.target.matches('button') || e.target.matches('a')) {\n      this.toggleMobileNavVisibility();\n    }\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    document.removeEventListener('click', this.handleOutsideClick);\n  }\n\n  handleOutsideClick = e => {\n    e.preventDefault(); // prevents double triggering if `touch` event is fired\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    if (!isMobileView || this.navEl.contains(e.target)) return;\n\n    this.setState({\n      isMobileNavVisible: false\n    });\n  };\n\n  render() {\n    const { viewportWidth, isMobileNavVisible } = this.state;\n    const { minWidth, navRef } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    return (\n      <nav\n        className={`navbar ${isMobileView ? 'is-collapsed' : ''} ${\n          isMobileView && isMobileNavVisible ? 'show-links' : ''\n        }`}\n        ref={el => (this.navEl = el)}\n      >\n        <span className=\"navbar__logo\">\n          <Link to={ROUTES.LANDING}>workflow</Link>\n        </span>\n        {isMobileView && (\n          <Button\n            type=\"button\"\n            color=\"primary\"\n            onClick={this.toggleMobileNavVisibility}\n            iconOnly\n          >\n            <Icon name=\"menu\" />\n          </Button>\n        )}\n        <AuthUserContext.Consumer>\n          {authUser =>\n            authUser ? (\n              <NavLinksAuth onClick={this.handleClick} />\n            ) : (\n              <NavLinksNonAuth onClick={this.handleClick} />\n            )\n          }\n        </AuthUserContext.Consumer>\n      </nav>\n    );\n  }\n}\n","import React from 'react';\nimport './Input.scss';\n\nconst Input = props => {\n  return (\n    <>\n      {!props.hideLabel && (\n        <label htmlFor={props.name} className=\"input__label\">\n          {props.title}\n        </label>\n      )}\n      <input\n        className={props.className}\n        id={props.name}\n        name={props.name}\n        type={props.type}\n        value={props.value}\n        onChange={props.onChange}\n        placeholder={props.placeholder}\n        required={props.isRequired}\n        onBlur={props.onBlur}\n      />\n    </>\n  );\n};\n\nexport default Input;\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  username: '',\n  name: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { username, email, name, passwordOne } = this.state;\n    this.props.firebase\n      .createUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        const userId = authUser.user.uid;\n        return this.props.firebase.addUser({\n          userId,\n          name,\n          username,\n          email\n        });\n      })\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const {\n      username,\n      name,\n      email,\n      passwordOne,\n      passwordTwo,\n      error\n    } = this.state;\n    const isInvalid =\n      passwordOne === '' ||\n      passwordTwo === '' ||\n      email === '' ||\n      username === '' ||\n      passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"name\"\n          title=\"Full Name\"\n          value={name}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"username\"\n          title=\"Username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordOne\"\n          title=\"Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          title=\"Confirm Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"large\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Sign Up\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignUpForm);\n","import React from 'react';\nimport './UserFormPage.scss';\n\nconst UserFormPage = ({ title, children }) => (\n  <main className=\"user-form__container\">\n    <h1>{title}</h1>\n    {children}\n  </main>\n);\n\nexport default UserFormPage;\n","import React from 'react';\nimport SignUpForm from './SignUpForm';\nimport { UserFormPage } from '../UserFormPage';\n\nconst SignUpPage = () => (\n  <UserFormPage title=\"Sign Up\">\n    <SignUpForm />\n  </UserFormPage>\n);\n\nexport default SignUpPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nexport { default as SignUpPage } from './SignUp';\nexport { default as SignUpForm } from './SignUpForm';\nexport { SignUpLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose, renderComponent } from 'recompose';\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email, password } = this.state;\n    this.props.firebase\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n    const isInvalid = password === '' || email === '';\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"password\"\n          title=\"Password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"large\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Sign In\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignInForm);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null\n};\n\nclass PasswordForgetForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .passwordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, error } = this.state;\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"large\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Reset My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordForgetForm);\n","import React from 'react';\nimport PasswordForgetForm from './PasswordForgetForm';\nimport { UserFormPage } from '../UserFormPage';\n\nconst PasswordForgetPage = () => (\n  <UserFormPage title=\"Forgot your password?\">\n    <PasswordForgetForm />\n  </UserFormPage>\n);\n\nexport default PasswordForgetPage;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport {default as PasswordForgetForm} from './PasswordForgetForm';\nexport {default as PasswordForgetPage} from './PasswordForget';\nexport {PasswordForgetLink};","import React from 'react';\nimport SignInForm from './SignInForm';\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { UserFormPage } from '../UserFormPage';\n\nconst SignInPage = () => (\n  <UserFormPage title=\"Sign In\">\n    <SignInForm />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </UserFormPage>\n);\n\nexport default SignInPage;\n","import { Firebase } from '../components/Firebase';\n\nconst firebase = new Firebase();\n\nexport default firebase;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const updateUserBoards = boardIds => {\n  return {\n    type: types.UPDATE_USER_BOARDS,\n    boardIds\n  };\n};\n\nexport const fetchUserData = userId => {\n  return async dispatch => {\n    try {\n      const user = await firebase\n        .getUserDoc(userId)\n        .get()\n        .then(doc => doc.data());\n      dispatch(loadUserData(user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const loadUserData = user => {\n  return {\n    type: types.LOAD_USER_DATA,\n    user\n  };\n};\n","export const UPDATE_USER_BOARDS = 'ADD_USER_BOARD';\nexport const LOAD_USER_DATA = 'LOAD_USER_DATA';\nexport const LOAD_USER_BOARDS = 'LOAD_USER_BOARDS';\n","export const getUserData = state => {\n  return state.user;\n};\n","import * as types from './types';\n\nconst user = (state = {}, action) => {\n  switch (action.type) {\n    case types.UPDATE_USER_BOARDS:\n      return {\n        ...state,\n        boardIds: [...action.boardIds]\n      };\n    case types.LOAD_USER_DATA:\n      return {\n        ...state,\n        ...action.user\n      };\n    default:\n      return state;\n  }\n};\n\nexport default user;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const selectBoard = boardId => {\n  return {\n    type: types.SELECT_BOARD,\n    boardId\n  };\n};\n\nexport const selectList = listId => {\n  return {\n    type: types.SELECT_LIST,\n    listId\n  };\n};\n\nexport const selectCard = cardId => {\n  return {\n    type: types.SELECT_CARD,\n    cardId\n  };\n};\n","export const SELECT_BOARD = 'SELECT_BOARD';\nexport const SELECT_LIST = 'SELECT_LIST';\nexport const SELECT_CARD = 'SELECT_CARD';\n","export const getCurrentBoardId = state => {\n  return state.current.boardId;\n};\n\nexport const getCurrentListId = state => {\n  return state.current.listId;\n};\n\nexport const getCurrentCardId = state => {\n  return state.current.cardId;\n};\n\nexport const getCurrent = state => {\n  return state.current;\n};\n","import React, { Component } from 'react';\n\nexport default class BoardGrid extends Component {\n  render() {\n    return <ul className=\"board-grid\">{this.props.children}</ul>;\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BoardTile = props => {\n  const { boardId, boardTitle, onClick } = props;\n  return (\n    <li className=\"board-grid__tile\">\n      <Link\n        className=\"board-grid__link\"\n        to={`/home/board/${boardId}`}\n        onClick={onClick}\n      >\n        <span className=\"board-grid__title\">{boardTitle}</span>\n      </Link>\n    </li>\n  );\n};\n\nexport default BoardTile;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadBoardsById = boardsById => {\n  return {\n    type: types.LOAD_BOARDS_BY_ID,\n    boardsById\n  };\n};\n\nexport const fetchBoardsById = userId => {\n  return async dispatch => {\n    try {\n      const boardsById = await firebase.db\n        .collection('boards')\n        .where('memberIds', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const boardsById = {};\n          snapshot.forEach(doc => {\n            boardsById[doc.id] = doc.data();\n          });\n          return boardsById;\n        });\n      dispatch(loadBoardsById(boardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateBoardsById = board => {\n  return {\n    type: types.UPDATE_BOARDS_BY_ID,\n    board\n  };\n};\n\nexport const reorderLists = (boardId, listIds) => {\n  return {\n    type: types.REORDER_LISTS,\n    boardId,\n    listIds\n  };\n};\n\nexport const updateListIds = (boardId, listIds) => {\n  return {\n    type: types.UPDATE_LIST_IDS,\n    boardId,\n    listIds\n  };\n};\n","export const LOAD_BOARDS_BY_ID = 'LOAD_BOARDS_BY_ID';\nexport const UPDATE_BOARDS_BY_ID = 'UPDATE_BOARDS_BY_ID';\nexport const REORDER_LISTS = 'REORDER_LISTS';\nexport const UPDATE_LIST_IDS = 'UPDATE_LIST_IDS';\n","export const getBoardsById = state => {\n  return state.boardsById;\n};\n\nexport const getBoardsArray = state => {\n  const { boardsById } = state;\n  return Object.keys(boardsById).map(boardId => {\n    return {\n      boardId,\n      ...boardsById[boardId]\n    };\n  });\n};\n\nexport const getBoard = (state, boardId) => {\n  const { boardsById } = state;\n  return boardsById[boardId];\n};\n","import * as types from './types';\n\nconst boardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_BOARDS_BY_ID: {\n      const { boardsById } = action;\n      return {\n        ...state,\n        ...boardsById\n      };\n    }\n    case types.UPDATE_BOARDS_BY_ID: {\n      const { board } = action;\n      return {\n        ...state,\n        ...board\n      };\n    }\n    case types.UPDATE_LIST_IDS:\n    case types.REORDER_LISTS: {\n      const { boardId, listIds } = action;\n      return {\n        ...state,\n        [boardId]: {\n          ...state[boardId],\n          listIds\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default boardsById;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport BoardGrid from './BoardGrid';\nimport BoardTile from './BoardTile';\nimport './BoardGrid.scss';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\n\nclass BoardGridContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  componentDidMount() {\n    const { userId } = this.props.user;\n    this.listener = this.props.firebase.db\n      .collection('boards')\n      .where('memberIds', 'array-contains', userId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const board = {\n            [change.doc.id]: change.doc.data()\n          };\n          this.props.updateBoardsById(board);\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  }\n\n  render() {\n    const { boardIds, userId } = this.props.user;\n    const { boardsArray, selectBoard } = this.props;\n    const boardTiles = boardsArray.map(board => {\n      const { boardTitle, boardId } = board;\n      return (\n        <BoardTile\n          key={boardId}\n          boardTitle={boardTitle}\n          boardId={boardId}\n          onClick={() => selectBoard(boardId)}\n        />\n      );\n    });\n    return (\n      <section>\n        <BoardGrid>\n          {boardTiles}\n          <button\n            type=\"button\"\n            className=\"board-grid__tile board-grid__btn--add\"\n            onClick={this.props.openBoardComposer}\n          >\n            Create new board...\n          </button>\n        </BoardGrid>\n      </section>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUserBoards: boardIds =>\n      dispatch(userActions.updateUserBoards(boardIds)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardGridContainer)\n);\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport './Modal.scss';\n\nconst Modal = ({\n  onModalClose,\n  children,\n  className = '',\n  onModalClick,\n  size = 'md'\n}) => {\n  return (\n    <div className=\"modal\" onClick={onModalClick}>\n      <div className={`modal__content ${className} modal__content--${size}`}>\n        <Button\n          type=\"button\"\n          className=\"modal__btn--close\"\n          onClick={onModalClose}\n          iconOnly\n        >\n          <Icon name=\"x\" />\n        </Button>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport { Modal } from '../Modal';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\nimport './BoardComposer.scss';\n\nconst INITIAL_STATE = {\n  boardTitle: ''\n};\n\nexport default class BoardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { boardTitle } = this.state;\n    const { handleSubmit, onClose } = this.props;\n    this.props.handleSubmit(boardTitle);\n    this.props.onClose();\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { boardTitle } = this.state;\n    return (\n      <Modal onModalClose={this.props.onClose} size=\"sm\">\n        <form onSubmit={this.onSubmit}>\n          <Input\n            name=\"boardTitle\"\n            title=\"Board Title\"\n            value={boardTitle}\n            onChange={this.onChange}\n            type=\"text\"\n          />\n          <Button\n            className=\"board-composer__btn--add\"\n            type=\"submit\"\n            onClick={this.onSubmit}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Create Board\n          </Button>\n        </form>\n      </Modal>\n    );\n  }\n}\n","export const CARD = 'CARD';\nexport const LIST = 'LIST';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input } from '../Input';\nimport { Icon } from '../Icon';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Button } from '../Button';\nimport './ListComposer.scss';\n\nconst INITIAL_STATE = {\n  listTitle: '',\n  isActive: false\n};\n\nclass ListComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ listTitle: '' });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { listTitle } = this.state;\n    const { boardId } = this.props;\n    this.props.firebase.addList({ boardId, listTitle });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = e => {\n    if (e.target.value === '') {\n      this.setState({\n        isActive: false\n      });\n    }\n  };\n\n  render() {\n    const { listTitle, isActive } = this.state;\n    return (\n      <div\n        className={`list-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"list-composer__form\" onSubmit={this.onSubmit}>\n          <Input\n            onChange={this.onChange}\n            value={listTitle}\n            placeholder={isActive ? 'Enter list title...' : 'Add a list'}\n            required={true}\n            name=\"listTitle\"\n            hideLabel={true}\n            className=\"list-composer__input\"\n          />\n          {isActive && (\n            <div className=\"list-composer__footer\">\n              <Button\n                className=\"list-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add List\n              </Button>\n              <Button\n                className=\"list-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => dispatch(userActions.getUserData(userId)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListComposer)\n);\n","import React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { ListComposer } from '../ListComposer';\n\nconst Board = props => {\n  const { boardId, children } = props;\n  return (\n    <Droppable\n      droppableId={boardId}\n      type={droppableTypes.LIST}\n      direction=\"horizontal\"\n    >\n      {provided => (\n        <div\n          className=\"board\"\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n        >\n          {children}\n          {provided.placeholder}\n          <ListComposer boardId={boardId} />\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nexport default Board;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadListsById = listsById => {\n  return {\n    type: types.LOAD_LISTS_BY_ID,\n    listsById\n  };\n};\n\nexport const fetchListsById = boardId => {\n  return async dispatch => {\n    try {\n      const listsById = await firebase.db\n        .collection('lists')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const listsById = {};\n          snapshot.forEach(doc => {\n            listsById[doc.id] = doc.data();\n          });\n          return listsById;\n        });\n      dispatch(loadListsById(listsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateListsById = list => {\n  return {\n    type: types.UPDATE_LISTS_BY_ID,\n    list\n  };\n};\n","export const LOAD_LISTS_BY_ID = 'LOAD_LISTS_BY_ID';\nexport const FETCH_LISTS_BY_ID = 'FETCH_LISTS_BY_ID';\nexport const UPDATE_LISTS_BY_ID = 'UPDATE_LISTS_BY_ID';\nexport const DELETE_CARD = 'DELETE_CARD';\n","export const getListsById = state => {\n  return state.listsById;\n};\n\nexport const getListsArray = state => {\n  const { listsById, boardsById, current } = state;\n  const { boardId } = current;\n  const board = boardsById[boardId];\n  if (!board) return null;\n  const { listIds } = board;\n\n  return listIds.map(listId => {\n    return {\n      listId,\n      ...listsById[listId]\n    };\n  });\n};\n","import * as types from './types';\n\nconst listsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_LISTS_BY_ID: {\n      const { listsById } = action;\n      return {\n        ...state,\n        ...listsById\n      };\n    }\n    case types.UPDATE_LISTS_BY_ID: {\n      const { list } = action;\n      return {\n        ...state,\n        ...list\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default listsById;\n","export const getCardsById = state => {\n  return state.cardsById;\n};\n\nexport const getCardsArray = (state, ownProps) => {\n  const { cardsById } = state;\n  const { cardIds } = ownProps;\n  return cardIds.map(cardId => cardsById[cardId]);\n};\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadCardsById = cardsById => {\n  return {\n    type: types.LOAD_CARDS_BY_ID,\n    cardsById\n  };\n};\n\nexport const fetchCardsById = boardId => {\n  return async dispatch => {\n    try {\n      const cardsById = await firebase.db\n        .collection('cards')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const cardsById = {};\n          snapshot.forEach(doc => {\n            cardsById[doc.id] = {\n              cardId: doc.id,\n              ...doc.data()\n            };\n          });\n          return cardsById;\n        });\n      dispatch(loadCardsById(cardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateCardsById = card => {\n  return {\n    type: types.UPDATE_CARDS_BY_ID,\n    card\n  };\n};\n","export const ADD_CARD = 'ADD_CARD';\nexport const SET_CARD_DUE_DATE = 'SET_CARD_DUE_DATE';\nexport const ADD_CARD_SUBTASK = 'ADD_CARD_SUBTASK';\nexport const REMOVE_CARD_SUBTASK = 'REMOVE_CARD_SUBTASK';\nexport const CHANGE_CARD_DESCRIPTION = 'CHANGE_CARD_DESCRIPTION';\nexport const SET_CARD_COLOR = 'SET_CARD_COLOR';\nexport const DELETE_CARD = 'DELETE_CARD';\nexport const MOVE_CARD = 'MOVE_CARD';\nexport const LOAD_CARDS_BY_ID = 'LOAD_CARDS_BY_ID';\nexport const UPDATE_CARDS_BY_ID = 'UPDATE_CARDS_BY_ID';\n","import * as types from './types';\n\nconst cardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_CARDS_BY_ID: {\n      const { cardsById } = action;\n      return {\n        ...state,\n        ...cardsById\n      };\n    }\n    case types.UPDATE_CARDS_BY_ID: {\n      const { card } = action;\n      return {\n        ...state,\n        ...card\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default cardsById;\n","import React, { Component, createRef } from 'react';\nimport './Textarea.scss';\n\nexport default class Textarea extends Component {\n\n  static defaultProps = {\n    isAutoHeightResizeEnabled: true\n  };\n\n  constructor(props) {\n    super(props);\n    this.textareaEl = createRef();\n  }\n\n  componentDidMount() {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n    this.autoHeightResize();\n  }\n\n  autoHeightResize = () => {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n    \n    this.textareaEl.current.style.height = '0px'; // resets scroll height\n    this.textareaEl.current.style.height = `${\n      this.textareaEl.current.scrollHeight\n    }px`;\n  };\n\n  render() {\n    const {\n      className,\n      name,\n      value,\n      onChange,\n      placeholder,\n      isRequired,\n      onBlur\n    } = this.props;\n    return (\n      <textarea\n        className={`textarea ${className}`}\n        id={name}\n        name={name}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={isRequired}\n        onBlur={onBlur}\n        onInput={this.autoHeightResize}\n        ref={this.textareaEl}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon } from '../Icon';\nimport { withAuthorization } from '../Session';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport './CardComposer.scss';\n\nconst INITIAL_STATE = {\n  cardTitle: '',\n  isActive: false\n};\n\nclass CardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ cardTitle: '' });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { cardTitle } = this.state;\n    const { boardId } = this.props.current;\n    const { listId } = this.props;\n    this.props.firebase.addCard({ boardId, listId, cardTitle });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onBlur = e => {\n    if (e.target.value !== '') return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const { cardTitle, isActive } = this.state;\n\n    return (\n      <div\n        className={`card-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"card-composer__form\" onSubmit={this.onSubmit}>\n          <Textarea\n            onChange={this.onChange}\n            value={cardTitle}\n            placeholder={isActive ? 'Enter card title...' : 'Add a card'}\n            isRequired\n            name=\"cardTitle\"\n            className=\"card-composer__textarea\"\n            isAutoHeightResizeEnabled={false}\n          />\n          {isActive && (\n            <div className=\"card-composer__footer\">\n              <Button\n                className=\"card-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add Card\n              </Button>\n              <Button\n                className=\"card-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardComposer)\n);\n","import React from 'react';\nimport './Menu.scss';\n\nconst Menu = ({ children, onClick, className = '' }) => {\n  return <ul className={`menu ${className}`} onClick={onClick}>{children}</ul>;\n};\n\nexport default Menu;\n","import React from 'react';\nimport './Menu.scss';\n\nconst MenuItem = ({ children, className = '' }) => {\n  return <li className={`menu__item ${className}`}>{children}</li>;\n};\n\nexport default MenuItem;\n","import React, { Component } from 'react';\n\nexport default class Popover extends Component {\n  componentDidMount() {\n    document.addEventListener('click', this.handleOutsideClick, false);\n  }\n\n  handleOutsideClick = e => {\n    const { onOutsideClick } = this.props;\n    onOutsideClick(e.target);\n    e.preventDefault();\n    document.removeEventListener('click', this.handleOutsideClick);\n  };\n\n  render() {\n    const { className, onClick, style, children } = this.props;\n    return (\n      <div className={`popover ${className}`} onClick={onClick} style={style}>\n        {children}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from '../Button';\nimport Popover from './Popover';\nimport './Popover.scss';\n\nexport default class PopoverWrapper extends Component {\n  state = {\n    isOpen: false\n  };\n\n  static defaultProps = {\n    wrapperClass: '',\n    popoverClass: '',\n    buttonProps: {},\n    align: 'left',\n    anchorEl: null\n  };\n\n  handleOutsideClick = target => {\n    if (this.componentEl && !this.componentEl.contains(target)) {\n      this.setState({\n        isOpen: false\n      });\n    }\n  };\n\n  toggleOpen = () => {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  };\n\n  render() {\n    const {\n      children,\n      alignInner,\n      alignOuter,\n      buttonProps,\n      wrapperClass,\n      popoverClass,\n      anchorEl\n    } = this.props;\n    const { isOpen } = this.state;\n\n    let popoverWrapperStyle = null;\n    \n    if (anchorEl) {\n      const { offsetTop, offsetLeft } = anchorEl;\n      popoverWrapperStyle = {\n        position: 'absolute',\n        top: offsetTop,\n        [alignOuter]: offsetLeft\n      };\n    }\n\n    return (\n      <div\n        className={`popover-wrapper ${isOpen ? 'is-active' : ''} ${wrapperClass}`}\n        ref={el => (this.componentEl = el)}\n        style={popoverWrapperStyle}\n      >\n        <Button type=\"button\" onClick={this.toggleOpen} {...buttonProps} />\n        {isOpen && (\n          <Popover\n            className={`align-${alignInner} ${popoverClass}`}\n            onClick={this.toggleOpen}\n            onOutsideClick={this.handleOutsideClick}\n          >\n            {children}\n          </Popover>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport './Card.scss';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { PopoverWrapper } from '../Popover';\nimport { Menu, MenuItem } from '../Menu';\n\nexport default class Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleCardClick = e => {\n    if (e.target.matches('button') || e.target.matches('a')) return;\n    const { cardId, onCardClick } = this.props;\n    onCardClick(cardId);\n  };\n\n  render() {\n    const { cardTitle, cardId, cardIndex } = this.props;\n    return (\n      <Draggable draggableId={cardId} index={cardIndex}>\n        {provided => (\n          <>\n            <div\n              className=\"card\"\n              onClick={this.handleCardClick}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              ref={provided.innerRef}\n            >\n              <div className=\"card__header\" ref={el => (this.headerEl = el)}>\n                <div className=\"card__tags\" />\n                <h3 className=\"card__title\">{cardTitle}</h3>\n              </div>\n              <div className=\"card__footer\">\n                <div className=\"card__labels\" />\n              </div>\n            </div>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { Card } from '../Card';\n\nexport default class Cards extends Component {\n  static propTypes = {\n    listId: PropTypes.string.isRequired\n  };\n\n  /*\n\n  shouldComponentUpdate(nextProps) {\n    if (this.props.cards === nextProps.cards) {\n      return false;\n    }\n    return true;\n  }\n*/\n  componentDidUpdate(prevProps) {\n    if (this.props.cards.length > prevProps.cards.length) {\n      this.scrollToBottom();\n    }\n  }\n\n  scrollToBottom = () => {\n    this.listEnd.scrollIntoView();\n  };\n\n  render() {\n    const { listId, cards, style, onCardClick, onCardDelete } = this.props;\n\n    return (\n      <Droppable droppableId={listId} type={droppableTypes.CARD}>\n        {(provided, snapshot) => (\n          <div\n            className=\"list__content\"\n            ref={provided.innerRef}\n            style={{\n              ...style,\n              minHeight: snapshot.isDraggingOver ? 80 : 16\n            }}\n            {...provided.droppableProps}\n          >\n            {cards.map((card, cardIndex) => {\n              const { cardId, cardTitle } = card;\n              return (\n                <Card\n                  key={cardId}\n                  cardTitle={cardTitle}\n                  cardId={cardId}\n                  cardIndex={cardIndex}\n                  listId={listId}\n                  onCardClick={onCardClick}\n                  onCardDelete={onCardDelete}\n                />\n              );\n            })}\n            {provided.placeholder}\n            <div\n              style={{ float: 'left', clear: 'both' }}\n              ref={el => (this.listEnd = el)}\n            />\n          </div>\n        )}\n      </Droppable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { CardComposer } from '../CardComposer';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\nimport { Input } from '../Input';\nimport Cards from './Cards';\nimport './List.scss';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDragging: this.props.isDragging,\n      listTitle: this.props.listTitle\n    };\n  }\n\n  handleListDelete = e => {\n    e.preventDefault();\n    const { listId, boardId, firebase } = this.props;\n    firebase.deleteList({ listId, boardId });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onBlur = e => {\n    const { listTitle, listId, firebase } = this.props;\n    const { listTitle: newListTitle } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newListTitle !== listTitle) {\n      firebase.updateList(listId, {\n        listTitle: newListTitle\n      });\n      console.log('updated!');\n    }\n  };\n\n  render() {\n    const {\n      cards,\n      onCardClick,\n      listId,\n      listIndex,\n      isFetchingCards\n    } = this.props;\n    if (isFetchingCards) return null;\n\n    const { listTitle, viewportHeight } = this.state;\n\n    return (\n      <Draggable draggableId={listId} index={listIndex}>\n        {provided => (\n          <>\n            <section\n              className=\"list\"\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <header\n                className=\"list__header\"\n                ref={el => (this.listHeaderEl = el)}\n              >\n                <Input\n                  className=\"list__input--title\"\n                  name=\"listTitle\"\n                  type=\"text\"\n                  value={listTitle}\n                  onChange={this.onChange}\n                  required\n                  hideLabel\n                  onBlur={this.onBlur}\n                />\n                <PopoverWrapper\n                  wrapperClass=\"list__popover-wrapper\"\n                  popoverClass=\"list__popover\"\n                  alignInner=\"left\"\n                  buttonProps={{\n                    size: 'medium',\n                    iconOnly: true,\n                    className: 'list__btn--more-actions',\n                    children: <Icon name=\"more-vertical\" />\n                  }}\n                >\n                  <Menu>\n                    <MenuItem>\n                      <a href=\"\" onClick={this.handleListDelete}>\n                        Delete\n                      </a>\n                    </MenuItem>\n                  </Menu>\n                </PopoverWrapper>\n              </header>\n              <Cards\n                cards={cards}\n                listId={listId}\n                onCardClick={onCardClick}\n                onCardDelete={this.handleCardDelete}\n              />\n              {provided.placeholder}\n              <CardComposer listId={listId} />\n            </section>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state),\n    cards: cardSelectors.getCardsArray(state, ownProps)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => dispatch(userActions.getUserData(userId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(List)\n);\n","import React from 'react';\nimport './Toolbar.scss';\n\nconst Toolbar = ({ className, children, ...props }) => (\n  <div className={`toolbar ${className}`} {...props}>\n    {children}\n  </div>\n);\n\nToolbar.defaultProps = {\n  className: ''\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\n\nconst CardEditorMoreActions = ({ onMenuClick }) => (\n  <PopoverWrapper\n    wrapperClass=\"card-editor__popover-wrapper\"\n    popoverClass=\"card-editor__popover\"\n    alignOuter=\"right\"\n    alignInner=\"right\"\n    buttonProps={{\n      size: 'medium',\n      iconOnly: true,\n      className: 'card-editor__toolbar-btn',\n      children: <Icon name=\"more-horizontal\" />\n    }}\n  >\n    <Menu onClick={onMenuClick}>\n      <MenuItem>\n        <a href=\"\" data-action=\"delete\">\n          Delete card\n        </a>\n      </MenuItem>\n    </Menu>\n  </PopoverWrapper>\n);\n\nexport default CardEditorMoreActions;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { Input } from '../Input';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { Modal } from '../Modal';\nimport { Toolbar } from '../Toolbar';\nimport CardEditorMoreActions from './CardEditorMoreActions';\nimport './CardEditor.scss';\n\nclass CardEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cardId: this.props.card.cardId,\n      cardTitle: this.props.card.cardTitle,\n      cardDescription: this.props.card.cardDescription,\n      cardComment: '',\n      currentFocus: null,\n      isCommentFormFocused: false\n    };\n    this.commentFormRef = null;\n    this.subtaskFormRef = null;\n    this.setCommentFormRef = element => {\n      this.commentFormRef = element;\n    };\n    this.setSubtaskFormRef = element => {\n      this.subtaskFormRef = element;\n    };\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n    console.log('changed');\n  };\n\n  handleCardDelete = () => {\n    const { card, firebase, onCardEditorClose } = this.props;\n    const { cardId, listId } = card;\n    firebase.deleteCard({ cardId, listId });\n    onCardEditorClose();\n  };\n\n  onBlur = e => {\n    const { card, firebase } = this.props;\n    const { cardTitle, cardDescription, currentFocus } = this.state;\n    const cardKey = e.target.name;\n\n    // When field loses focus, update card if change is detected\n\n    if (this.state[cardKey] !== card[cardKey]) {\n      const { cardId } = card;\n      firebase.updateCard(cardId, {\n        [cardKey]: this.state[cardKey]\n      });\n      console.log('updated!');\n    }\n\n    this.setState({\n      currentFocus: null\n    });\n  };\n\n  onSubmitComment = e => {\n    console.log(e.target.value);\n\n    e.preventDefault();\n  };\n\n  onFocus = e => {\n    this.setState({\n      currentFocus: e.target.name\n    });\n  };\n\n  handleModalClick = e => {\n    const { currentFocus } = this.state;\n    if (\n      (currentFocus === 'cardComment' &&\n        !this.commentFormRef.contains(e.target)) ||\n      (currentFocus === 'cardSubtask' &&\n        !this.subtaskFormRef.contains(e.target))\n    ) {\n      this.setState({\n        currentFocus: null\n      });\n    }\n  };\n\n  handleMoreActions = e => {\n    if (!e.target.matches('a')) return;\n    const { action } = e.target.dataset;\n    const { cardId } = this.props;\n    switch (action) {\n      case 'delete':\n        this.handleCardDelete(cardId);\n        break;\n    }\n    e.preventDefault(); // prevents page reload\n  };\n\n  render() {\n    const { onCardEditorClose, user } = this.props;\n\n    const {\n      cardTitle,\n      cardDescription,\n      cardComment,\n      currentFocus,\n      cardSubtask\n    } = this.state;\n    const isInvalid = cardComment === '';\n    const commentFormIsFocused = currentFocus === 'cardComment';\n\n    return (\n      <Modal\n        onModalClose={onCardEditorClose}\n        className=\"card-editor\"\n        onModalClick={this.handleModalClick}\n        size=\"lg\"\n      >\n        <Toolbar className=\"card-editor__toolbar\">\n          <CardEditorMoreActions onMenuClick={this.handleMoreActions} />\n        </Toolbar>\n        <form\n          name=\"editCardForm\"\n          onFocus={this.onFocus}\n          className=\"card-editor__edit-card-form\"\n        >\n          <Textarea\n            className=\"card-editor__textarea--title\"\n            name=\"cardTitle\"\n            value={cardTitle}\n            onChange={this.onChange}\n            required\n            onBlur={this.onBlur}\n            onFocus={this.onFocus}\n          />\n          <div\n            className={`card-editor__section ${\n              currentFocus === 'cardDescription' ? 'is-focused' : ''\n            }`}\n          >\n            <div className=\"card-editor__section-icon\">\n              <Icon name=\"edit-3\" />\n            </div>\n            <Textarea\n              className=\"card-editor__textarea--description\"\n              name=\"cardDescription\"\n              value={cardDescription}\n              onChange={this.onChange}\n              placeholder=\"Add a description\"\n              onBlur={this.onBlur}\n              onFocus={this.onFocus}\n            />\n          </div>\n        </form>\n        <div\n          className={`card-editor__section ${\n            currentFocus === 'cardSubtask' ? 'is-focused' : ''\n          }`}\n        >\n          <hr className=\"card-editor__hr\" />\n          <div className=\"card-editor__section-icon\">\n            <Icon name=\"check-square\" />\n          </div>\n          <form\n            name=\"subtaskForm\"\n            className={`card-editor__subtask-form ${\n              currentFocus === 'cardSubtask' ? 'is-focused' : ''\n            }`}\n            onFocus={this.onFocus}\n            ref={this.setSubtaskFormRef}\n          >\n            <Textarea\n              className=\"card-editor__textarea--subtask\"\n              name=\"cardSubtask\"\n              value={cardSubtask}\n              onChange={this.onChange}\n              placeholder=\"Add a subtask\"\n            />\n            {currentFocus === 'cardSubtask' && (\n              <Button\n                type=\"submit\"\n                color=\"secondary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isInvalid}\n                onClick={this.submitSubtask}\n                className=\"card-editor__btn--submit-subtask\"\n              >\n                Add subtask\n              </Button>\n            )}\n          </form>\n        </div>\n        <div\n          className={`card-editor__section ${\n            commentFormIsFocused ? 'is-focused' : ''\n          }`}\n        >\n          <hr className=\"card-editor__hr\" />\n          <div className=\"card-editor__section-icon\">\n            <Icon name=\"message-circle\" />\n          </div>\n          <form\n            name=\"commentForm\"\n            className={`card-editor__comment-form ${\n              commentFormIsFocused ? 'is-focused' : ''\n            }`}\n            onFocus={this.onFocus}\n            ref={this.setCommentFormRef}\n          >\n            <Textarea\n              className=\"card-editor__textarea--comment\"\n              name=\"cardComment\"\n              value={cardComment}\n              onChange={this.onChange}\n              placeholder=\"Write a comment...\"\n            />\n            {commentFormIsFocused && (\n              <Button\n                type=\"submit\"\n                color=\"secondary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isInvalid}\n                onClick={this.onSubmitComment}\n                name=\"cardCommentSubmit\"\n                className=\"card-editor__btn--submit-comment\"\n              >\n                Comment\n              </Button>\n            )}\n          </form>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    current: currentSelectors.getCurrent(state),\n    listsById: listSelectors.getListsById(state),\n    listsArray: listSelectors.getListsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId)),\n    updateListsById: list => dispatch(listActions.updateListsById(list)),\n    updateCardsById: card => dispatch(cardActions.updateCardsById(card)),\n    reorderLists: (boardId, listIds) =>\n      dispatch(boardActions.reorderLists(boardId, listIds))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardEditor)\n);\n","\n/**\n * Checks if two arrays or objects are equal\n * @param {Array|Object} value\n * @param {Array|Object} other\n */\n\n// eslint-disable-next-line import/prefer-default-export\nexport const isEqual = (value, other) => {\n  const type = Object.prototype.toString.call(value);\n\n  // If both objects are not the same type, return false\n  if (type !== Object.prototype.toString.call(other)) return false;\n\n  const typeObj = '[object Object]';\n  const typeArr = '[object Array]';\n  // If items are neither objects nor arrays, return false\n  if (type !== typeObj && type !== typeArr) return false;\n\n  // Compare length of two items\n  const valueLen = type === typeArr ? value.length : Object.keys(value).length;\n  const otherLen = type === typeArr ? other.length : Object.keys(other).length;\n  if (valueLen !== otherLen) return false;\n\n  const compare = (item1, item2) => {\n    const typeFunc = '[object Function]';\n    const itemType = Object.prototype.toString.call(item1);\n    if (itemType !== Object.prototype.toString.call(item2)) return false;\n    if (itemType === typeObj || itemType === typeArr) {\n      return isEqual(item1, item2);\n    }\n    if (itemType === typeFunc) {\n      return item1.toString() === item2.toString();\n    }\n    return item1 === item2;\n  };\n\n  if (type === typeArr) {\n    for (let i = 0; i < valueLen; i++) {\n      if (!compare(value[i], other[i])) return false;\n    }\n  } else {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (compare(value[key], other[key]) === false) return false;\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * Delays callback execution until next browser repaint\n * Best used for `scroll` and `resize` window events\n * @param {Function} callback - The function to debounce\n */\n\nexport const windowDebouncer = callback => {\n  let request;\n\n  return (...args) => {\n    const context = this;\n\n    if (request) {\n      window.cancelAnimationFrame(request);\n    }\n\n    request = window.requestAnimationFrame(() => {\n      callback.apply(context, args);\n    });\n  };\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport * as ROUTES from '../../constants/routes';\nimport Board from './Board';\nimport { Input } from '../Input';\nimport { List } from '../List';\nimport { CardEditor } from '../CardEditor';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { utils } from '../../utils';\nimport './Board.scss';\n\nclass BoardContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: true,\n      isDragging: false,\n      isCardEditorOpen: false,\n      boardTitle: this.props.boardTitle\n    };\n  }\n\n  componentDidMount() {\n    const {\n      current,\n      fetchListsById,\n      fetchCardsById,\n      firebase,\n      updateBoardsById,\n      updateListsById,\n      updateCardsById,\n      boardId,\n      board,\n      updateListIds\n    } = this.props;\n\n    if (current.boardId !== boardId) {\n      this.props.selectBoard(boardId);\n    }\n\n    fetchListsById(boardId);\n    fetchCardsById(boardId).then(() => {\n      this.setState({\n        isFetching: false\n      });\n    });\n    this.boardObserver = firebase.getBoardDoc(boardId).onSnapshot(snapshot => {\n      const updatedBoard = snapshot.data();\n      if (!utils.isEqual(updatedBoard.listIds, board.listIds)) {\n        updateListIds(boardId, updatedBoard.listIds);\n      }\n    });\n    this.listObserver = firebase.db\n      .collection('lists')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const list = {\n            [change.doc.id]: change.doc.data()\n          };\n          updateListsById(list);\n        });\n      });\n    this.cardObserver = firebase.db\n      .collection('cards')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const card = {\n            [change.doc.id]: {\n              cardId: change.doc.id,\n              ...change.doc.data()\n            }\n          };\n          updateCardsById(card);\n        });\n      });\n    console.log('mounted');\n  }\n\n  componentWillUnmount() {\n    this.boardObserver();\n    this.listObserver();\n    this.cardObserver();\n  }\n\n  onDragStart = () => {\n    this.setState({\n      isDragging: true\n    });\n  };\n\n  onDragEnd = ({ destination, draggableId, source, type }) => {\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    const { firebase } = this.props;\n    if (type === droppableTypes.CARD) {\n      const { listsById } = this.props;\n      const isMovedWithinList = source.droppableId === destination.droppableId;\n      const updatedCardIds = [...listsById[destination.droppableId].cardIds];\n      if (isMovedWithinList) {\n        updatedCardIds.splice(source.index, 1);\n        updatedCardIds.splice(destination.index, 0, draggableId);\n        firebase.updateList(source.droppableId, {\n          cardIds: updatedCardIds\n        });\n      } else {\n        updatedCardIds.splice(destination.index, 0, draggableId);\n        firebase.moveCardToList({\n          cardId: draggableId,\n          origListId: source.droppableId,\n          newListId: destination.droppableId,\n          updatedCardIds\n        });\n      }\n    }\n\n    if (type === droppableTypes.LIST) {\n      const { boardsById, current, reorderLists } = this.props;\n      const { boardId } = current;\n      const updatedListIds = [...boardsById[boardId].listIds];\n      updatedListIds.splice(source.index, 1);\n      updatedListIds.splice(destination.index, 0, draggableId);\n      firebase.updateBoard(boardId, {\n        listIds: updatedListIds\n      });\n      reorderLists(boardId, updatedListIds);\n    }\n\n    this.setState({\n      isDragging: false\n    });\n  };\n\n  toggleCardEditor = () => {\n    this.setState(prevState => ({\n      isCardEditorOpen: !prevState.isCardEditorOpen\n    }));\n  };\n\n  handleCardClick = cardId => {\n    this.props.selectCard(cardId);\n    this.toggleCardEditor();\n  };\n\n  onTitleChange = e => {\n    this.setState({\n      boardTitle: e.target.value\n    });\n  };\n\n  onTitleBlur = e => {\n    const { boardTitle, boardId, firebase } = this.props;\n    const { boardTitle: newBoardTitle } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newBoardTitle !== boardTitle) {\n      firebase.updateBoard(boardId, {\n        boardTitle: newBoardTitle\n      });\n      console.log('updated!');\n    }\n  };\n\n  render() {\n    const { isFetching, isCardEditorOpen } = this.state;\n    const {\n      current,\n      boardsById,\n      listsArray,\n      cardsById,\n      boardId,\n      board\n    } = this.props;\n    if (isFetching) return null;\n    const { cardId } = current;\n    const { boardTitle } = board;\n    const lists = listsArray.map((list, listIndex) => {\n      const { listId, listTitle, cardIds } = list;\n      return (\n        <List\n          listId={listId}\n          key={listId}\n          listIndex={listIndex}\n          listTitle={listTitle}\n          cardIds={cardIds}\n          isFetchingCards={this.state.isFetching}\n          isDragging={this.state.isDragging}\n          onCardClick={this.handleCardClick}\n          boardId={boardId}\n        />\n      );\n    });\n\n    return (\n      <main className=\"board-container\">\n        <Input\n          className=\"board__input--title\"\n          name=\"boardTitle\"\n          type=\"text\"\n          value={boardTitle}\n          onChange={this.onTitleChange}\n          required\n          hideLabel\n          onBlur={this.onTitleBlur}\n        />\n        <DragDropContext\n          onDragEnd={this.onDragEnd}\n          onDragStart={this.onDragStart}\n        >\n          <Board boardId={boardId}>{lists}</Board>\n        </DragDropContext>\n        {isCardEditorOpen && (\n          <CardEditor\n            card={cardsById[cardId]}\n            onCardEditorClose={this.toggleCardEditor}\n          />\n        )}\n      </main>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    current: currentSelectors.getCurrent(state),\n    listsById: listSelectors.getListsById(state),\n    listsArray: listSelectors.getListsArray(state),\n    cardsById: cardSelectors.getCardsById(state),\n    board: boardSelectors.getBoard(state, ownProps.boardId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId)),\n    selectCard: cardId => dispatch(currentActions.selectCard(cardId)),\n    fetchListsById: boardId => dispatch(listActions.fetchListsById(boardId)),\n    updateListsById: list => dispatch(listActions.updateListsById(list)),\n    fetchCardsById: boardId => dispatch(cardActions.fetchCardsById(boardId)),\n    updateCardsById: card => dispatch(cardActions.updateCardsById(card)),\n    reorderLists: (boardId, listIds) =>\n      dispatch(boardActions.reorderLists(boardId, listIds)),\n    updateListIds: (boardId, listIds) =>\n      dispatch(boardActions.updateListIds(boardId, listIds))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardContainer)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { withAuthorization } from '../Session';\nimport * as ROUTES from '../../constants/routes';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { currentSelectors } from '../../ducks/current';\nimport { BoardGridContainer } from '../BoardGrid';\nimport { BoardComposer } from '../BoardComposer';\nimport { BoardContainer } from '../Board';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport './Home.scss';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isBoardComposerOpen: false,\n      isFetching: true\n    };\n  }\n\n  componentDidMount() {\n    const userId = this.props.firebase.auth.currentUser.uid;\n    console.log('mounted home');\n    this.props.fetchUserData(userId);\n    this.props.fetchBoardsById(userId).then(() =>\n      this.setState({\n        isFetching: false\n      })\n    );\n  }\n\n  toggleBoardComposer = () => {\n    this.setState(prevState => ({\n      isBoardComposerOpen: !prevState.isBoardComposerOpen\n    }));\n  };\n\n  createBoard = boardTitle => {\n    const userId = this.props.user.userId;\n    this.props.firebase.addBoard({ userId, boardTitle });\n  };\n\n  render() {\n    const { isBoardComposerOpen, isFetching } = this.state;\n    const userId = this.props.user.userId;\n    if (isFetching) return null;\n    return (\n      <>\n        {isBoardComposerOpen && (\n          <BoardComposer\n            onClose={this.toggleBoardComposer}\n            handleSubmit={this.createBoard}\n          />\n        )}\n        <Switch>\n          <Route\n            exact\n            path={ROUTES.HOME}\n            render={() => (\n              <main className=\"main\">\n                <h1>Home</h1>\n                {userId && (\n                  <BoardGridContainer\n                    openBoardComposer={this.toggleBoardComposer}\n                  />\n                )}\n              </main>\n            )}\n          />\n          <Route\n            path={ROUTES.BOARD}\n            render={props => (\n              <BoardContainer boardId={props.match.params.id} {...props} />\n            )}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    currentBoardId: currentSelectors.getCurrentBoardId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUserData: userId => dispatch(userActions.fetchUserData(userId)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(HomePage)\n);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .passwordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n    const isInvalid = passwordOne === '' || passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"passwordOne\"\n          title=\"New Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          title=\"Confirm New Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"large\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Change My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React from 'react';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport { PasswordChangeForm } from '../PasswordChange';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport './Account.scss';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <main className=\"account\">\n        <h1>Account: {authUser.email}</h1>\n        <section className=\"account__section\">\n        <h2>Forgot your password?</h2>\n          <PasswordForgetForm />\n        </section>\n        <section className=\"account__section\">\n        <h2>Change your password.</h2>\n          <PasswordChangeForm />\n        </section>\n      </main>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(AccountPage);\n","import React, { Component } from 'react';\nimport { Navbar } from '../Navbar';\nimport './Header.scss';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <Navbar />\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport { Navbar } from '../Navbar';\nimport * as ROUTES from '../../constants/routes';\nimport { LandingPage } from '../Landing';\nimport { SignUpPage } from '../SignUp';\nimport { SignInPage } from '../SignIn';\nimport { PasswordForgetPage } from '../PasswordForget';\nimport { HomePage } from '../Home';\nimport { AccountPage } from '../Account';\nimport { AdminPage } from '../Admin';\nimport { withAuthentication } from '../Session';\nimport { Header } from '../Header';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Header />\n        <Switch>\n          <Route exact path={ROUTES.LANDING} component={LandingPage} />\n          <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n          <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n          <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n          <Route path={ROUTES.HOME} component={HomePage} />\n          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n          <Route path={ROUTES.ADMIN} component={AdminPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { boardsById } from '../ducks/boards';\nimport { cardsById } from '../ducks/cards';\nimport { listsById } from '../ducks/lists';\nimport { user } from '../ducks/user';\nimport { current } from '../ducks/current';\n\nexport default combineReducers({\n  boardsById,\n  cardsById,\n  listsById,\n  user,\n  current\n});\n","import * as types from './types';\n\nconst current = (state = {}, action) => {\n  switch (action.type) {\n    case types.SELECT_BOARD: {\n      const { boardId } = action;\n      return {\n        ...state,\n        boardId\n      };\n    }\n    case types.SELECT_LIST: {\n      const { listId } = action;\n      return {\n        ...state,\n        listId\n      };\n    }\n    case types.SELECT_CARD: {\n      const { cardId } = action;\n      return {\n        ...state,\n        cardId\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport { current };\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\n\nexport default history;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport 'normalize.css';\nimport './index.scss';\nimport { App } from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { FirebaseContext } from './components/Firebase';\nimport reducers from './store/reducers';\nimport firebase from './store/firebase';\nimport history from './store/history';\n\nconst store = createStore(reducers, {}, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <FirebaseContext.Provider value={firebase}>\n      <Router basename={process.env.PUBLIC_URL} history={history}>\n        <App />\n      </Router>\n    </FirebaseContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}