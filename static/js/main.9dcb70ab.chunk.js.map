{"version":3,"sources":["assets/feather/feather-sprite.svg","components/Firebase/context.js","components/Firebase/Firebase.js","constants/routes.js","components/Button/Button.js","components/SignOut/SignOutButton.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Icon/Icon.js","components/Navbar/Navbar.js","components/Input/Input.js","components/SignUp/SignUpForm.js","components/UserFormPage/UserFormPage.js","components/SignUp/SignUp.js","components/SignUp/index.js","components/SignIn/SignInForm.js","components/PasswordForget/PasswordForgetForm.js","components/PasswordForget/PasswordForget.js","components/PasswordForget/index.js","components/SignIn/SignIn.js","store/firebase.js","ducks/users/actions.js","ducks/users/types.js","ducks/users/selectors.js","ducks/users/reducer.js","ducks/current/actions.js","ducks/current/types.js","ducks/current/selectors.js","components/BoardGrid/BoardGrid.js","components/BoardGrid/BoardTile.js","ducks/boards/actions.js","ducks/boards/types.js","ducks/boards/selectors.js","ducks/boards/reducers.js","components/BoardGrid/BoardGridContainer.js","components/Modal/Modal.js","components/BoardComposer/BoardComposer.js","constants/droppableTypes.js","components/ListComposer/ListComposer.js","components/Board/Board.js","ducks/lists/actions.js","ducks/lists/types.js","ducks/lists/selectors.js","ducks/lists/reducers.js","ducks/cards/selectors.js","ducks/cards/actions.js","ducks/cards/types.js","ducks/cards/reducers.js","ducks/tasks/actions.js","ducks/tasks/types.js","ducks/tasks/selectors.js","ducks/tasks/reducer.js","components/Textarea/Textarea.js","constants/keys.js","components/CardComposer/CardComposer.js","components/Menu/Menu.js","components/Menu/MenuItem.js","components/Popover/Popover.js","components/Popover/PopoverWrapper.js","components/Card/Card.js","components/List/Cards.js","components/List/List.js","ducks/comments/actions.js","ducks/comments/types.js","ducks/comments/selectors.js","ducks/comments/reducer.js","components/Toolbar/Toolbar.jsx","components/Checkbox/Checkbox.js","components/CardEditor/CardEditorMoreActions.js","components/CardEditor/CardEditorTask.js","components/Avatar/Avatar.js","components/CardEditor/CardEditorComment.js","components/CardEditor/CardEditor.js","utils/utils.js","components/Board/BoardContainer.js","components/Home/Home.js","components/PasswordChange/PasswordChangeForm.js","components/Account/Account.js","components/Header/Header.jsx","components/App/App.js","serviceWorker.js","store/reducers.js","ducks/current/reducers.js","store/history.js","index.js"],"names":["module","exports","__webpack_require__","p","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","createUserWithEmailAndPassword","email","password","auth","signInWithEmailAndPassword","signOut","passwordReset","sendPasswordResetEmail","passwordUpdate","newPassword","currentUser","updatePassword","getTimestamp","firestore","FieldValue","serverTimestamp","addToArray","value","arrayUnion","removeFromArray","arrayRemove","getUserDoc","userId","db","collection","doc","addUser","_ref","name","username","_ref$boardIds","boardIds","_ref$photoURL","photoURL","set","updateUser","newValue","arguments","length","undefined","update","getBoardDoc","boardId","updateBoard","objectSpread","lastModifiedAt","addBoard","_ref2","boardTitle","add","createdAt","listIds","authorId","memberIds","then","ref","id","getListDoc","listId","updateList","addList","_ref3","listTitle","cardIds","deleteList","_ref4","batch","listRef","boardRef","delete","where","get","snapshot","docs","forEach","commit","console","log","catch","error","getCardDoc","cardId","addCard","_ref5","cardTitle","updateCard","deleteCard","_ref6","cardRef","moveCardToList","_ref7","origListId","newListId","updatedCardIds","origListRef","newListRef","getTaskDoc","taskId","addTask","_ref8","_ref8$memberIds","_ref8$boardId","_ref8$cardId","_ref8$dueDate","dueDate","text","isCompleted","createdBy","assignedTo","concat","toConsumableArray","taskIds","updateTask","deleteTask","_ref9","_ref9$cardId","taskRef","getCommentDoc","commentId","addComment","_ref10","_ref10$memberIds","isPinned","from","to","likes","commentIds","updateComment","initializeApp","HOME","Button","children","_ref$type","type","onClick","_ref$className","className","_ref$color","color","_ref$size","size","_ref$variant","variant","disabled","_ref$iconOnly","iconOnly","buttonRef","objectWithoutProperties","defaultProps","components_Button_Button","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","authUser","inherits","createClass","key","_this2","listener","onAuthStateChanged","setState","Session_context","Provider","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","Icon","addClass","trim","xmlns","xmlnsXlink","viewBox","width","height","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","xlinkHref","featherIcons","NavLinksAuth","Fragment","Link","ROUTES","components_SignOut_SignOutButton","NavLinksNonAuth","Navbar","viewportWidth","window","innerWidth","isMobileNavVisible","isTouchEnabled","handleResize","toggleMobileNavVisibility","prevState","handleClick","e","minWidth","target","matches","handleOutsideClick","navLinksEl","contains","handleTouch","document","removeEventListener","addEventListener","_this$state","_this$props","navLinksClass","navRef","isMobileView","el","navEl","Icon_Icon","Navbar_NavLinksAuth","Navbar_NavLinksNonAuth","Input","hideLabel","htmlFor","title","onChange","placeholder","required","isRequired","onBlur","INITIAL_STATE","passwordOne","passwordTwo","SignUpForm","onSubmit","user","uid","preventDefault","defineProperty","_this$state2","isInvalid","components_Input_Input","message","UserFormPage","SignUpPage","components_UserFormPage_UserFormPage","SignUp_SignUpForm","SignUpLink","SignInForm","PasswordForgetForm","PasswordForgetPage","PasswordForget_PasswordForgetForm","PasswordForgetLink","SignInPage","SignIn_SignInForm","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","loadUserData","loadUsersById","usersById","fetchUsersById","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","users","data","sent","t0","stop","_x","apply","fetchUserData","_callee2","_context2","_x2","userData","deleteUser","getUsersById","getUserData","action","map","_toPropertyKey","selectUser","selectBoard","selectList","selectCard","getCurrentUserId","current","getCurrentBoardId","getCurrentListId","getCurrentCardId","getCurrent","BoardGrid","BoardTile","loadBoardsById","boardsById","fetchBoardsById","updateBoardsById","board","reorderLists","updateListIds","getBoardsById","getBoardsArray","keys","getBoard","BoardGridContainer","boardObserver","onSnapshot","querySnapshot","docChanges","change","_this$props2","boardsArray","boardTiles","BoardGrid_BoardTile","BoardGrid_BoardGrid","openBoardComposer","connect","ownProps","currentSelectors","userSelectors","boardSelectors","boardActions","currentActions","Modal","onModalClose","onModalClick","BoardComposer","handleSubmit","onClose","components_Modal_Modal","CARD","LIST","isActive","ListComposer","resetForm","onReset","onFocus","Board","react_beautiful_dnd_esm","droppableId","droppableTypes","direction","provided","innerRef","droppableProps","components_ListComposer_ListComposer","loadListsById","listsById","fetchListsById","updateListsById","list","getListsById","getListsArray","getCardsById","cardsById","getCardsArray","loadCardsById","fetchCardsById","cards","updateCardsById","card","loadTasksById","tasksById","fetchTasksById","tasks","updateTasksById","task","fetchCardTasks","fetchUserTasks","_callee3","_context3","_x3","taskData","getTasksById","getTasksArray","reducer_toPropertyKey","Textarea","autoHeightResize","isAutoHeightResizeEnabled","textareaEl","style","scrollHeight","createRef","onKeyDown","onDragStart","isReadOnly","onInput","readOnly","BACKSPACE","ENTER","CardComposer","Textarea_Textarea_Textarea","Menu","MenuItem","Popover","onOutsideClick","PopoverWrapper","isOpen","componentEl","toggleOpen","alignInner","alignOuter","buttonProps","wrapperClass","popoverClass","anchorEl","popoverWrapperStyle","offsetTop","offsetLeft","position","top","Popover_Popover","align","Card","handleCardClick","onCardClick","cardIndex","draggableId","index","draggableProps","dragHandleProps","headerEl","Cards","scrollToBottom","listEnd","scrollIntoView","behavior","prevProps","onCardDelete","minHeight","isDraggingOver","Card_Card_Card","float","clear","List","handleListDelete","newListTitle","_this$props3","listIndex","isFetchingCards","viewportHeight","listHeaderEl","PopoverWrapper_PopoverWrapper","components_Menu_Menu","Menu_MenuItem","href","Cards_Cards","handleCardDelete","components_CardComposer_CardComposer","cardSelectors","loadCommentsById","commentsById","fetchCommentsById","comments","updateCommentsById","comment","fetchCardComments","fetchUserComments","commentData","deleteComment","getCommentsById","getCommentsArray","comments_reducer_toPropertyKey","Toolbar","Checkbox","isChecked","labelClass","checked","CardEditorMoreActions","onMenuClick","data-action","appRoot","getElementById","CardEditorTask","portal","appendChild","removeChild","toggleCompleted","inner","components_Checkbox_Checkbox","isDragging","ReactDOM","createPortal","Avatar","getUserInitials","fullName","split","charAt","join","toUpperCase","imgSrc","imgProps","classes","avatar","src","alt","img","backgroundColor","CardEditorComment","Avatar_Avatar_Avatar","cardActions","commentActions","CardEditor","updateCardTasks","tasksArray","cardTasks","reduce","handleCardEditorClose","cardKey","updatedValue","currentFocus","newComment","_this$props4","newTask","handleModalClick","commentFormEl","newTaskFormEl","handleMoreActions","dataset","onTaskChange","handleCheckboxChange","toggleTaskCompleted","updateTaskText","_this$props5","moveTask","destination","source","updatedTaskIds","splice","isFetching","cardDescription","_this$props6","commentObserver","_this3","_this$props7","commentsArray","hasTasks","hasComments","isNewCommentInvalid","isNewTaskInvalid","commentFormIsFocused","components_Toolbar_Toolbar","CardEditor_CardEditorMoreActions","onDragEnd","CardEditorTask_CardEditorTask","components_CardEditor_CardEditorComment","taskSelectors","commentSelectors","isEqual","other","prototype","toString","typeArr","valueLen","compare","item1","item2","itemType","i","hasOwnProperty","windowDebouncer","callback","request","_len","args","Array","_key","cancelAnimationFrame","requestAnimationFrame","BoardContainer","isMovedWithinList","updatedListIds","toggleCardEditor","isCardEditorOpen","onTitleChange","onTitleBlur","newBoardTitle","updatedBoard","utils","listObserver","taskObserver","cardObserver","listsArray","lists","components_List_List","components_Board_Board","components_CardEditor_CardEditor","listSelectors","listActions","taskActions","HomePage","toggleBoardComposer","isBoardComposerOpen","createBoard","BoardComposer_BoardComposer_BoardComposer","Switch","Route","exact","path","render","BoardGrid_BoardGridContainer","Board_BoardContainer","match","params","currentBoardId","userActions","PasswordChangeForm","PasswordChange_PasswordChangeForm","Header","Navbar_Navbar_Navbar","Header_Header_Header","component","LandingPage","Home_Home","AccountPage","AdminPage","Boolean","location","hostname","combineReducers","createBrowserHistory","basename","store","createStore","reducers","applyMiddleware","thunk","es","context","Router","components_App_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9dcb70ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/feather-sprite.0ed672ce.svg\";","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import firebase from 'firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\nclass Firebase {\n  constructor() {\n    firebase.initializeApp(config);\n    this.auth = firebase.auth();\n    this.db = firebase.firestore();\n  }\n\n  // Auth API\n  createUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  signInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  signOut = () => this.auth.signOut();\n\n  passwordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  passwordUpdate = newPassword =>\n    this.auth.currentUser.updatePassword(newPassword);\n\n  // Utility API\n\n  getTimestamp = () => firebase.firestore.FieldValue.serverTimestamp();\n  addToArray = value => firebase.firestore.FieldValue.arrayUnion(value);\n  removeFromArray = value => firebase.firestore.FieldValue.arrayRemove(value);\n\n  // User API\n\n  getUserDoc = userId => this.db.collection('users').doc(userId);\n\n  addUser = ({ userId, name, username, email, boardIds = [], photoURL = null }) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .set({ userId, name, username, email, boardIds, photoURL });\n\n  updateUser = (userId, newValue = {}) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .update(newValue);\n\n  // Board API\n\n  getBoardDoc = boardId => this.db.collection('boards').doc(boardId);\n\n  updateBoard = (boardId, newValue = {}) =>\n    this.getBoardDoc(boardId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  addBoard = ({ userId, boardTitle }) => {\n    this.db\n      .collection('boards')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        listIds: [],\n        authorId: userId,\n        memberIds: [userId],\n        boardTitle\n      })\n      .then(ref => {\n        this.updateUser(userId, {\n          boardIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  // List API\n\n  getListDoc = listId => this.db.collection('lists').doc(listId);\n\n  updateList = (listId, newValue = {}) =>\n    this.getListDoc(listId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  addList = ({ boardId, listTitle }) => {\n    this.db\n      .collection('lists')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        cardIds: [],\n        boardId,\n        listTitle\n      })\n      .then(ref => {\n        this.updateBoard(boardId, {\n          listIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  deleteList = ({ listId, boardId }) => {\n    const batch = this.db.batch();\n    const listRef = this.getListDoc(listId);\n    const boardRef = this.getBoardDoc(boardId);\n\n    // Delete list\n    batch.delete(listRef);\n\n    // Remove list id from board\n    batch.update(boardRef, {\n      listIds: this.removeFromArray(listId),\n      lastModifiedAt: this.getTimestamp()\n    });\n\n    // Delete cards assigned to list\n    this.db\n      .collection('cards')\n      .where('listId', '==', listId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('list deleted');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  // Card API\n\n  getCardDoc = cardId => this.db.collection('cards').doc(cardId);\n\n  addCard = ({ boardId, listId, cardTitle }) => {\n    this.db\n      .collection('cards')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        listId,\n        boardId,\n        cardTitle\n      })\n      .then(ref => {\n        this.updateList(listId, {\n          cardIds: this.addToArray(ref.id),\n          lastModifiedAt: this.getTimestamp()\n        });\n      });\n  };\n\n  updateCard = (cardId, newValue = {}) => {\n    this.getCardDoc(cardId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  deleteCard = ({ cardId, listId }) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const listRef = this.getListDoc(listId);\n    batch.delete(cardRef);\n    batch.update(listRef, {\n      cardIds: this.removeFromArray(cardId),\n      lastModifiedAt: this.getTimestamp()\n    });\n\n    // Delete tasks assigned to card\n    this.db\n      .collection('tasks')\n      .where('cardId', '==', cardId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('card deleted');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  moveCardToList = ({ cardId, origListId, newListId, updatedCardIds }) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const origListRef = this.getListDoc(origListId);\n    const newListRef = this.getListDoc(newListId);\n    batch.update(cardRef, {\n      listId: newListId,\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(origListRef, {\n      cardIds: this.removeFromArray(cardId),\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(newListRef, {\n      cardIds: updatedCardIds,\n      lastModifiedAt: this.getTimestamp()\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('card moved');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  // Task API\n\n  getTaskDoc = taskId => this.db.collection('tasks').doc(taskId);\n\n  addTask = ({ userId, memberIds = [], boardId = null, cardId = null, dueDate = null, text }) => {\n    this.db\n      .collection('tasks')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        isCompleted: false,\n        createdBy: userId,\n        assignedTo: [userId, ...memberIds],\n        dueDate,\n        boardId,\n        cardId,\n        text\n      })\n      .then(ref => {\n        if (cardId === null) return;\n        this.updateCard(cardId, {\n          taskIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  updateTask = (taskId, newValue = {}) => {\n    this.getTaskDoc(taskId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  deleteTask = ({ taskId, cardId = null }) => {\n    const batch = this.db.batch();\n    const taskRef = this.getTaskDoc(taskId);\n    batch.delete(taskRef);\n\n    if (cardId) {\n      const cardRef = this.getCardDoc(cardId);\n      batch.update(cardRef, {\n        taskIds: this.removeFromArray(taskId),\n        lastModifiedAt: this.getTimestamp()\n      });\n    }\n    return batch\n      .commit()\n      .then(() => {\n        console.log('task deleted');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  // Comment API\n  getCommentDoc = commentId => this.db.collection('comments').doc(commentId);\n\n  addComment = ({ userId, memberIds = [], boardId, cardId, text }) => {\n    this.db\n      .collection('comments')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        isPinned: false,\n        from: userId,\n        to: memberIds,\n        likes: [],\n        boardId,\n        cardId,\n        text\n      })\n      .then(ref => {\n        this.updateCard(cardId, {\n          commentIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  updateComment = (commentId, newValue = {}) => {\n    this.getCommentDoc(commentId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n}\n\nexport default Firebase;\n","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const BOARD = '/home/board/:id';\n","import React from 'react';\nimport './Button.scss';\n\nconst Button = ({\n  children,\n  type = 'button',\n  onClick,\n  className = '',\n  color = 'neutral',\n  size = 'md',\n  variant = 'text',\n  disabled,\n  name,\n  iconOnly = false,\n  buttonRef,\n  ...props\n}) => (\n  // eslint-disable-next-line react/button-has-type\n  <button\n    className={`${className} ${color} ${size} ${variant} ${\n      iconOnly ? 'icon-only' : ''\n    }`}\n    type={type}\n    onClick={onClick}\n    disabled={disabled}\n    name={name}\n    ref={buttonRef}\n    {...props}\n  >\n    {children}\n  </button>\n);\n\nButton.defaultProps = {\n  type: 'button',\n  className: '',\n  color: 'neutral',\n  size: 'md',\n  variant: 'text',\n  iconOnly: false\n};\n\nexport default Button;\n","import React from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Button } from '../Button';\nimport './SignOutButton.scss';\n\nconst SignOutButton = ({ firebase }) => (\n  <Button\n    type=\"button\"\n    onClick={firebase.signOut}\n    className=\"btn--sign-out\"\n    color=\"primary\"\n  >\n    Sign Out\n  </Button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        authUser: null\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        authUser\n          ? this.setState({ authUser })\n          : this.setState({ authUser: null });\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport AuthUserContext from './context';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          this.props.history.push(ROUTES.SIGN_IN);\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n  return compose(\n    withRouter,\n    withFirebase\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from 'react';\nimport featherIcons from '../../assets/feather/feather-sprite.svg';\n\nfunction Icon(props) {\n  return (\n    <svg\n      className={`feather feather-${props.name} ${props.addClass || ''}`.trim()}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n      height=\"24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <use xlinkHref={`${featherIcons}#${props.name}`} />\n    </svg>\n  );\n}\n\nexport default Icon;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { SignOutButton } from '../SignOut';\nimport './Navbar.scss';\nimport { AuthUserContext } from '../Session';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\n\nconst NavLinksAuth = () => (\n  <>\n    <li>\n      <Link to={ROUTES.HOME}>Home</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ADMIN}>Admin</Link>\n    </li>\n    <li>\n      <SignOutButton />\n    </li>\n  </>\n);\n\nconst NavLinksNonAuth = () => (\n  <>\n    <li>\n      <Link to={ROUTES.SIGN_IN}>Log In</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.SIGN_UP}>Get Started</Link>\n    </li>\n  </>\n);\n\nexport default class Navbar extends Component {\n  static defaultProps = {\n    minWidth: 768\n  };\n\n  state = {\n    viewportWidth: window.innerWidth,\n    isMobileNavVisible: false,\n    isTouchEnabled: false\n  };\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick);\n  }\n\n  handleResize = () => {\n    this.setState({\n      viewportWidth: window.innerWidth\n    });\n  };\n\n  toggleMobileNavVisibility = () => {\n    this.setState(prevState => ({\n      isMobileNavVisible: !prevState.isMobileNavVisible\n    }));\n  };\n\n  handleClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    if (!isMobileView) return;\n    if (e.target.matches('button') || e.target.matches('a')) {\n      this.toggleMobileNavVisibility();\n    }\n  };\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n    window.removeEventListener('resize', this.handleResize);\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  handleOutsideClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n    if (\n      !isMobileView ||\n      this.navLinksEl.contains(e.target) ||\n      e.target.matches('button') ||\n      e.target.matches('a')\n    )\n      return;\n    this.setState({\n      isMobileNavVisible: false\n    });\n  };\n\n  handleTouch = () => {\n    const { isTouchEnabled } = this.state;\n    if (isTouchEnabled === true) return;\n    this.setState({\n      isTouchEnabled: true\n    });\n    document.removeEventListener('touchstart', this.handleTouch);\n    document.removeEventListener('click', this.handleOutsideClick);\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  render() {\n    const { viewportWidth, isMobileNavVisible } = this.state;\n    const { minWidth, navRef, navLinksClass } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    return (\n      <nav\n        className={`navbar ${isMobileView ? 'is-collapsed' : ''} ${\n          isMobileView && isMobileNavVisible ? 'show-links' : ''\n        }`}\n        ref={el => (this.navEl = el)}\n      >\n        <span className=\"navbar__logo\">\n          <Link to={ROUTES.LANDING} onClick={this.handleClick}>\n            workflow\n          </Link>\n        </span>\n        {isMobileView && (\n          <Button\n            type=\"button\"\n            color=\"primary\"\n            onClick={this.toggleMobileNavVisibility}\n            iconOnly\n          >\n            <Icon name=\"menu\" />\n          </Button>\n        )}\n        <ul\n          className={`navbar__links ${navLinksClass}`}\n          onClick={this.handleClick}\n          ref={el => (this.navLinksEl = el)}\n        >\n          <AuthUserContext.Consumer>\n            {authUser => (authUser ? <NavLinksAuth /> : <NavLinksNonAuth />)}\n          </AuthUserContext.Consumer>\n        </ul>\n      </nav>\n    );\n  }\n}\n","import React from 'react';\nimport './Input.scss';\n\nconst Input = props => {\n  return (\n    <>\n      {!props.hideLabel && (\n        <label htmlFor={props.name} className=\"input__label\">\n          {props.title}\n        </label>\n      )}\n      <input\n        className={props.className}\n        id={props.name}\n        name={props.name}\n        type={props.type}\n        value={props.value}\n        onChange={props.onChange}\n        placeholder={props.placeholder}\n        required={props.isRequired}\n        onBlur={props.onBlur}\n      />\n    </>\n  );\n};\n\nexport default Input;\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  username: '',\n  name: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { username, email, name, passwordOne } = this.state;\n    this.props.firebase\n      .createUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        const userId = authUser.user.uid;\n        const photoURL = authUser.user.photoURL || null;\n        return this.props.firebase.addUser({\n          userId,\n          name,\n          username,\n          email,\n          photoURL\n        });\n      })\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const {\n      username,\n      name,\n      email,\n      passwordOne,\n      passwordTwo,\n      error\n    } = this.state;\n    const isInvalid =\n      passwordOne === '' ||\n      passwordTwo === '' ||\n      email === '' ||\n      username === '' ||\n      passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"name\"\n          title=\"Full Name\"\n          value={name}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"username\"\n          title=\"Username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordOne\"\n          title=\"Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          title=\"Confirm Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Create Account\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignUpForm);\n","import React from 'react';\nimport './UserFormPage.scss';\n\nconst UserFormPage = ({ title, children }) => (\n  <main className=\"user-form__container\">\n    <h1 className=\"user-form__title\">{title}</h1>\n    {children}\n  </main>\n);\n\nexport default UserFormPage;\n","import React from 'react';\nimport SignUpForm from './SignUpForm';\nimport { UserFormPage } from '../UserFormPage';\n\nconst SignUpPage = () => (\n  <UserFormPage title=\"Create an account\">\n    <SignUpForm />\n  </UserFormPage>\n);\n\nexport default SignUpPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nexport { default as SignUpPage } from './SignUp';\nexport { default as SignUpForm } from './SignUpForm';\nexport { SignUpLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email, password } = this.state;\n    this.props.firebase\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n    const isInvalid = password === '' || email === '';\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"password\"\n          title=\"Password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Log In\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignInForm);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null\n};\n\nclass PasswordForgetForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .passwordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, error } = this.state;\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Reset My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordForgetForm);\n","import React from 'react';\nimport PasswordForgetForm from './PasswordForgetForm';\nimport { UserFormPage } from '../UserFormPage';\n\nconst PasswordForgetPage = () => (\n  <UserFormPage title=\"Forgot your password?\">\n    <PasswordForgetForm />\n  </UserFormPage>\n);\n\nexport default PasswordForgetPage;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport {default as PasswordForgetForm} from './PasswordForgetForm';\nexport {default as PasswordForgetPage} from './PasswordForget';\nexport {PasswordForgetLink};","import React from 'react';\nimport SignInForm from './SignInForm';\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { UserFormPage } from '../UserFormPage';\n\nconst SignInPage = () => (\n  <UserFormPage title=\"Log In\">\n    <SignInForm />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </UserFormPage>\n);\n\nexport default SignInPage;\n","import { Firebase } from '../components/Firebase';\n\nconst firebase = new Firebase();\n\nexport default firebase;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\n\nexport const loadUserData = user => {\n  return {\n    type: types.LOAD_USER_DATA,\n    user\n  };\n};\n\nexport const loadUsersById = usersById => {\n  return {\n    type: types.LOAD_USERS_BY_ID,\n    usersById\n  };\n};\n\nexport const fetchUsersById = () => {\n  return async dispatch => {\n    try {\n      const usersById = await firebase.db\n        .collection('users')\n        .get()\n        .then(snapshot => {\n          const users = {};\n          snapshot.forEach(doc => {\n            users[doc.id] = {\n              userId: doc.id,\n              ...doc.data()\n            };\n          });\n          return users;\n        });\n      dispatch(loadUsersById(usersById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserData = userId => {\n  return async dispatch => {\n    try {\n      const user = await firebase\n        .getUserDoc(userId)\n        .get()\n        .then(doc => doc.data());\n      dispatch(loadUserData(user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addUser = ({ userId, userData }) => {\n  return {\n    type: types.ADD_USER,\n    userId,\n    userData\n  };\n};\n\nexport const deleteUser = userId => {\n  return {\n    type: types.DELETE_USER,\n    userId\n  };\n};\n\nexport const updateUser = ({ userId, userData }) => {\n  return {\n    type: types.UPDATE_USER,\n    userId,\n    userData\n  };\n};\n","export const LOAD_USER_DATA = 'LOAD_USER_DATA';\nexport const LOAD_USERS_BY_ID = 'LOAD_USERS_BY_ID';\nexport const ADD_USER = 'ADD_USER';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const DELETE_USER = 'DELETE_USER';\n","export const getUsersById = state => {\n  return state.usersById;\n};\n\nexport const getUserData = (state, userId) => {\n  return state.usersById[userId];\n};\n","import * as types from './types';\n\nconst usersById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_USERS_BY_ID: {\n      const { usersById } = action;\n      return {\n        ...state,\n        ...usersById\n      };\n    }\n    case types.LOAD_USER_DATA: {\n      const { user } = action;\n      return {\n        ...state,\n        ...user\n      };\n    }\n    case types.ADD_USER: {\n      const { userId, userData } = action;\n      return {\n        ...state,\n        [userId]: {\n          userId,\n          ...userData\n        }\n      };\n    }\n    case types.DELETE_USER: {\n      const { userId } = action;\n      const { [userId]: deletedUser, ...restOfUsers } = state;\n      return restOfUsers;\n    }\n    case types.UPDATE_USER: {\n      const { userId, userData } = action;\n      return {\n        ...state,\n        [userId]: {\n          ...state[userId],\n          ...userData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default usersById;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const selectUser = userId => {\n  return {\n    type: types.SELECT_USER,\n    userId\n  };\n};\n\nexport const selectBoard = boardId => {\n  return {\n    type: types.SELECT_BOARD,\n    boardId\n  };\n};\n\nexport const selectList = listId => {\n  return {\n    type: types.SELECT_LIST,\n    listId\n  };\n};\n\nexport const selectCard = cardId => {\n  return {\n    type: types.SELECT_CARD,\n    cardId\n  };\n};\n","export const SELECT_BOARD = 'SELECT_BOARD';\nexport const SELECT_LIST = 'SELECT_LIST';\nexport const SELECT_CARD = 'SELECT_CARD';\nexport const SELECT_USER = 'SELECT_USER';\n","export const getCurrentUserId = state => {\n  return state.current.userId;\n};\n\nexport const getCurrentBoardId = state => {\n  return state.current.boardId;\n};\n\nexport const getCurrentListId = state => {\n  return state.current.listId;\n};\n\nexport const getCurrentCardId = state => {\n  return state.current.cardId;\n};\n\nexport const getCurrent = state => {\n  return state.current;\n};\n","import React, { Component } from 'react';\n\nexport default class BoardGrid extends Component {\n  render() {\n    return <ul className=\"board-grid\">{this.props.children}</ul>;\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BoardTile = props => {\n  const { boardId, boardTitle, onClick } = props;\n  return (\n    <li className=\"board-grid__tile\">\n      <Link\n        className=\"board-grid__link\"\n        to={`/home/board/${boardId}`}\n        onClick={onClick}\n      >\n        <span className=\"board-grid__title\">{boardTitle}</span>\n      </Link>\n    </li>\n  );\n};\n\nexport default BoardTile;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadBoardsById = boardsById => {\n  return {\n    type: types.LOAD_BOARDS_BY_ID,\n    boardsById\n  };\n};\n\nexport const fetchBoardsById = userId => {\n  return async dispatch => {\n    try {\n      const boardsById = await firebase.db\n        .collection('boards')\n        .where('memberIds', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const boardsById = {};\n          snapshot.forEach(doc => {\n            boardsById[doc.id] = doc.data();\n          });\n          return boardsById;\n        });\n      dispatch(loadBoardsById(boardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateBoardsById = board => {\n  return {\n    type: types.UPDATE_BOARDS_BY_ID,\n    board\n  };\n};\n\nexport const reorderLists = (boardId, listIds) => {\n  return {\n    type: types.REORDER_LISTS,\n    boardId,\n    listIds\n  };\n};\n\nexport const updateListIds = (boardId, listIds) => {\n  return {\n    type: types.UPDATE_LIST_IDS,\n    boardId,\n    listIds\n  };\n};\n","export const LOAD_BOARDS_BY_ID = 'LOAD_BOARDS_BY_ID';\nexport const UPDATE_BOARDS_BY_ID = 'UPDATE_BOARDS_BY_ID';\nexport const REORDER_LISTS = 'REORDER_LISTS';\nexport const UPDATE_LIST_IDS = 'UPDATE_LIST_IDS';","export const getBoardsById = state => {\n  return state.boardsById;\n};\n\nexport const getBoardsArray = state => {\n  const { boardsById } = state;\n  return Object.keys(boardsById).map(boardId => {\n    return {\n      boardId,\n      ...boardsById[boardId]\n    };\n  });\n};\n\nexport const getBoard = (state, boardId) => {\n  const { boardsById } = state;\n  return boardsById[boardId];\n};\n","import * as types from './types';\n\nconst boardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_BOARDS_BY_ID: {\n      const { boardsById } = action;\n      return {\n        ...state,\n        ...boardsById\n      };\n    }\n    case types.UPDATE_BOARDS_BY_ID: {\n      const { board } = action;\n      return {\n        ...state,\n        ...board\n      };\n    }\n    case types.UPDATE_LIST_IDS:\n    case types.REORDER_LISTS: {\n      const { boardId, listIds } = action;\n      return {\n        ...state,\n        [boardId]: {\n          ...state[boardId],\n          listIds\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default boardsById;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport BoardGrid from './BoardGrid';\nimport BoardTile from './BoardTile';\nimport './BoardGrid.scss';\nimport { withAuthorization } from '../Session';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Icon } from '../Icon';\nimport { userSelectors } from '../../ducks/users';\n\nclass BoardGridContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const { userId, firebase, updateBoardsById } = this.props;\n    this.boardObserver = firebase.db\n      .collection('boards')\n      .where('memberIds', 'array-contains', userId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const board = {\n            [change.doc.id]: change.doc.data()\n          };\n          updateBoardsById(board);\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.boardObserver();\n  }\n\n  render() {\n    const { boardsArray, selectBoard } = this.props;\n    const boardTiles = boardsArray.map(board => {\n      const { boardTitle, boardId } = board;\n      return (\n        <BoardTile\n          key={boardId}\n          boardTitle={boardTitle}\n          boardId={boardId}\n          onClick={() => selectBoard(boardId)}\n        />\n      );\n    });\n    return (\n      <section>\n        <BoardGrid>\n          {boardTiles}\n          <button\n            type=\"button\"\n            className=\"board-grid__tile board-grid__btn--add\"\n            onClick={this.props.openBoardComposer}\n          >\n            <Icon name=\"plus-circle\" />\n            Create board\n          </button>\n        </BoardGrid>\n      </section>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    userId: currentSelectors.getCurrentUserId(state),\n    user: userSelectors.getUserData(state, ownProps.userId),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardGridContainer)\n);\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport './Modal.scss';\n\nconst Modal = ({\n  onModalClose,\n  children,\n  className = '',\n  onModalClick,\n  size = 'md',\n  id\n}) => {\n  return (\n    <div className=\"modal\" onClick={onModalClick}>\n      <div\n        id={id}\n        className={`modal__content ${className} modal__content--${size}`}\n      >\n        <Button\n          type=\"button\"\n          className=\"modal__btn--close\"\n          onClick={onModalClose}\n          iconOnly\n        >\n          <Icon name=\"x\" />\n        </Button>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport { Modal } from '../Modal';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\nimport './BoardComposer.scss';\n\nconst INITIAL_STATE = {\n  boardTitle: ''\n};\n\nexport default class BoardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { boardTitle } = this.state;\n    const { handleSubmit, onClose } = this.props;\n    this.props.handleSubmit(boardTitle);\n    this.props.onClose();\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { boardTitle } = this.state;\n    return (\n      <Modal onModalClose={this.props.onClose} size=\"sm\">\n        <form onSubmit={this.onSubmit}>\n          <Input\n            name=\"boardTitle\"\n            title=\"Board Title\"\n            value={boardTitle}\n            onChange={this.onChange}\n            type=\"text\"\n          />\n          <Button\n            className=\"board-composer__btn--add\"\n            type=\"submit\"\n            onClick={this.onSubmit}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Create Board\n          </Button>\n        </form>\n      </Modal>\n    );\n  }\n}\n","export const CARD = 'CARD';\nexport const LIST = 'LIST';\nexport const TASK = 'TASK';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input } from '../Input';\nimport { Icon } from '../Icon';\nimport { withAuthorization } from '../Session';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Button } from '../Button';\nimport './ListComposer.scss';\n\nconst INITIAL_STATE = {\n  listTitle: '',\n  isActive: false\n};\n\nclass ListComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ listTitle: '' });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { listTitle } = this.state;\n    const { boardId } = this.props;\n    this.props.firebase.addList({ boardId, listTitle });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = e => {\n    if (e.target.value === '') {\n      this.setState({\n        isActive: false\n      });\n    }\n  };\n\n  render() {\n    const { listTitle, isActive } = this.state;\n    return (\n      <div\n        className={`list-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"list-composer__form\" onSubmit={this.onSubmit}>\n          <Input\n            onChange={this.onChange}\n            value={listTitle}\n            placeholder={isActive ? 'Enter list title...' : 'Add a list'}\n            required\n            name=\"listTitle\"\n            hideLabel\n            className=\"list-composer__input\"\n          />\n          {isActive && (\n            <div className=\"list-composer__footer\">\n              <Button\n                className=\"list-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add List\n              </Button>\n              <Button\n                className=\"list-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListComposer)\n);\n","import React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { ListComposer } from '../ListComposer';\n\nconst Board = props => {\n  const { boardId, children } = props;\n  return (\n    <Droppable\n      droppableId={boardId}\n      type={droppableTypes.LIST}\n      direction=\"horizontal\"\n    >\n      {provided => (\n        <div\n          className=\"board\"\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n        >\n          {children}\n          {provided.placeholder}\n          <ListComposer boardId={boardId} />\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nexport default Board;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadListsById = listsById => {\n  return {\n    type: types.LOAD_LISTS_BY_ID,\n    listsById\n  };\n};\n\nexport const fetchListsById = boardId => {\n  return async dispatch => {\n    try {\n      const listsById = await firebase.db\n        .collection('lists')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const listsById = {};\n          snapshot.forEach(doc => {\n            listsById[doc.id] = doc.data();\n          });\n          return listsById;\n        });\n      dispatch(loadListsById(listsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateListsById = list => {\n  return {\n    type: types.UPDATE_LISTS_BY_ID,\n    list\n  };\n};\n","export const LOAD_LISTS_BY_ID = 'LOAD_LISTS_BY_ID';\nexport const FETCH_LISTS_BY_ID = 'FETCH_LISTS_BY_ID';\nexport const UPDATE_LISTS_BY_ID = 'UPDATE_LISTS_BY_ID';\nexport const DELETE_CARD = 'DELETE_CARD';\n","export const getListsById = state => {\n  return state.listsById;\n};\n\nexport const getListsArray = state => {\n  const { listsById, boardsById, current } = state;\n  const { boardId } = current;\n  const board = boardsById[boardId];\n  if (!board) return null;\n  const { listIds } = board;\n\n  return listIds.map(listId => {\n    return {\n      listId,\n      ...listsById[listId]\n    };\n  });\n};\n","import * as types from './types';\n\nconst listsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_LISTS_BY_ID: {\n      const { listsById } = action;\n      return {\n        ...state,\n        ...listsById\n      };\n    }\n    case types.UPDATE_LISTS_BY_ID: {\n      const { list } = action;\n      return {\n        ...state,\n        ...list\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default listsById;\n","export const getCardsById = state => {\n  return state.cardsById;\n};\n\nexport const getCardsArray = (state, ownProps) => {\n  const { cardsById } = state;\n  const { cardIds } = ownProps;\n  return cardIds.map(cardId => cardsById[cardId]);\n};\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadCardsById = cardsById => {\n  return {\n    type: types.LOAD_CARDS_BY_ID,\n    cardsById\n  };\n};\n\nexport const fetchCardsById = boardId => {\n  return async dispatch => {\n    try {\n      const cardsById = await firebase.db\n        .collection('cards')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const cards = {};\n          snapshot.forEach(doc => {\n            cards[doc.id] = {\n              cardId: doc.id,\n              ...doc.data()\n            };\n          });\n          return cards;\n        });\n      dispatch(loadCardsById(cardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateCardsById = card => {\n  return {\n    type: types.UPDATE_CARDS_BY_ID,\n    card\n  };\n};\n\n","export const ADD_CARD = 'ADD_CARD';\nexport const SET_CARD_DUE_DATE = 'SET_CARD_DUE_DATE';\nexport const ADD_CARD_SUBTASK = 'ADD_CARD_SUBTASK';\nexport const REMOVE_CARD_SUBTASK = 'REMOVE_CARD_SUBTASK';\nexport const CHANGE_CARD_DESCRIPTION = 'CHANGE_CARD_DESCRIPTION';\nexport const SET_CARD_COLOR = 'SET_CARD_COLOR';\nexport const DELETE_CARD = 'DELETE_CARD';\nexport const MOVE_CARD = 'MOVE_CARD';\nexport const LOAD_CARDS_BY_ID = 'LOAD_CARDS_BY_ID';\nexport const UPDATE_CARDS_BY_ID = 'UPDATE_CARDS_BY_ID';\n\n","import * as types from './types';\n\nconst cardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_CARDS_BY_ID: {\n      const { cardsById } = action;\n      return {\n        ...state,\n        ...cardsById\n      };\n    }\n    case types.UPDATE_CARDS_BY_ID: {\n      const { card } = action;\n      return {\n        ...state,\n        ...card\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default cardsById;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadTasksById = tasksById => {\n  return {\n    type: types.LOAD_TASKS_BY_ID,\n    tasksById\n  };\n};\n\nexport const fetchTasksById = () => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateTasksById = task => {\n  return {\n    type: types.UPDATE_TASKS_BY_ID,\n    task\n  };\n};\n\nexport const fetchCardTasks = boardId => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserTasks = userId => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .where('assignedTo', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addTask = ({ taskId, taskData }) => {\n  return {\n    type: types.ADD_TASK,\n    taskId,\n    taskData\n  };\n};\n\nexport const deleteTask = taskId => {\n  return {\n    type: types.DELETE_TASK,\n    taskId\n  };\n};\n\nexport const updateTask = ({ taskId, taskData }) => {\n  return {\n    type: types.UPDATE_TASK,\n    taskId,\n    taskData\n  };\n};\n","export const LOAD_TASKS_BY_ID = 'LOAD_TASKS_BY_ID';\nexport const FETCH_TASKS_BY_ID = 'FETCH_TASKS_BY_ID';\nexport const UPDATE_TASKS_BY_ID = 'UPDATE_TASKS_BY_ID';\nexport const ADD_TASK = 'ADD_TASK';\nexport const UPDATE_TASK = 'UPDATE_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\n","export const getTasksById = state => {\n  const { tasksById } = state;\n  return tasksById;\n};\n\nexport const getTasksArray = (state, taskIds) => {\n  const { tasksById } = state;\n  if (!taskIds) return [];\n\n  return taskIds.map(taskId => {\n    return tasksById[taskId];\n  });\n};\n","import * as types from './types';\n\nconst tasksById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_TASKS_BY_ID: {\n      const { tasksById } = action;\n      return {\n        ...state,\n        ...tasksById\n      };\n    }\n    case types.ADD_TASK: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        [taskId]: {\n          taskId,\n          ...taskData\n        }\n      };\n    }\n    case types.DELETE_TASK: {\n      const { taskId } = action;\n      const { [taskId]: deletedTask, ...restOfTasks } = state;\n      return restOfTasks;\n    }\n    case types.UPDATE_TASK: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        [taskId]: {\n          ...state[taskId],\n          ...taskData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default tasksById;\n","import React, { Component, createRef } from 'react';\nimport './Textarea.scss';\n\nexport default class Textarea extends Component {\n  static defaultProps = {\n    isAutoHeightResizeEnabled: true\n  };\n\n  constructor(props) {\n    super(props);\n    this.textareaEl = createRef();\n  }\n\n  componentDidMount() {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n    this.autoHeightResize();\n  }\n\n  autoHeightResize = () => {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n\n    this.textareaEl.current.style.height = '0px'; // resets scroll height\n    this.textareaEl.current.style.height = `${\n      this.textareaEl.current.scrollHeight\n    }px`;\n  };\n\n  render() {\n    const {\n      className,\n      name,\n      value,\n      onChange,\n      placeholder,\n      isRequired,\n      onBlur,\n      onFocus,\n      onKeyDown,\n      onDragStart,\n      isReadOnly\n    } = this.props;\n    return (\n      <textarea\n        className={`textarea ${className}`}\n        id={name}\n        name={name}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={isRequired}\n        onBlur={onBlur}\n        onInput={this.autoHeightResize}\n        ref={this.textareaEl}\n        onFocus={onFocus}\n        onKeyDown={onKeyDown}\n        onDragStart={onDragStart}\n        readOnly={isReadOnly}\n      />\n    );\n  }\n}\n","export const BACKSPACE = 'Backspace';\nexport const ENTER = 'Enter';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon } from '../Icon';\nimport { withAuthorization } from '../Session';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport * as keys from '../../constants/keys';\nimport './CardComposer.scss';\n\nconst INITIAL_STATE = {\n  cardTitle: '',\n  isActive: false\n};\n\nclass CardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ cardTitle: '' });\n  };\n\n  onSubmit = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { cardTitle } = this.state;\n    const { boardId } = this.props.current;\n    const { listId } = this.props;\n    this.props.firebase.addCard({ boardId, listId, cardTitle });\n    this.resetForm();\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onBlur = e => {\n    if (e.target.value !== '') return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const { cardTitle, isActive } = this.state;\n\n    return (\n      <div\n        className={`card-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"card-composer__form\" onSubmit={this.onSubmit}>\n          <Textarea\n            onChange={this.onChange}\n            value={cardTitle}\n            placeholder={isActive ? 'Enter card title...' : 'Add a card'}\n            isRequired\n            name=\"cardTitle\"\n            className=\"card-composer__textarea\"\n            isAutoHeightResizeEnabled={false}\n            onKeyDown={this.onSubmit}\n          />\n          {isActive && (\n            <div className=\"card-composer__footer\">\n              <Button\n                className=\"card-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add Card\n              </Button>\n              <Button\n                className=\"card-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardComposer)\n);\n","import React from 'react';\nimport './Menu.scss';\n\nconst Menu = ({ children, onClick, className = '' }) => {\n  return <ul className={`menu ${className}`} onClick={onClick}>{children}</ul>;\n};\n\nexport default Menu;\n","import React from 'react';\nimport './Menu.scss';\n\nconst MenuItem = ({ children, className = '' }) => {\n  return <li className={`menu__item ${className}`}>{children}</li>;\n};\n\nexport default MenuItem;\n","import React, { Component } from 'react';\n\nexport default class Popover extends Component {\n  state = {\n    isTouchEnabled: false\n  };\n\n  componentDidMount() {\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick, false);\n  }\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  handleOutsideClick = e => {\n    const { onOutsideClick } = this.props;\n    onOutsideClick(e.target);\n  };\n\n  handleTouch = () => {\n    this.setState({\n      isTouchEnabled: true\n    });\n    // remove touch handler to prevent unnecessary refires\n    document.removeEventListener('touchstart', this.handleTouch);\n    // remove outside click handler from click events\n    document.removeEventListener('click', this.handleOutsideClick);\n    // reattach outside click handler to touchstart events\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  render() {\n    const { className, onClick, style, children } = this.props;\n    return (\n      <div className={`popover ${className}`} onClick={onClick} style={style}>\n        {children}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from '../Button';\nimport Popover from './Popover';\nimport './Popover.scss';\n\nexport default class PopoverWrapper extends Component {\n  state = {\n    isOpen: false\n  };\n\n  static defaultProps = {\n    wrapperClass: '',\n    popoverClass: '',\n    buttonProps: {},\n    align: 'left',\n    anchorEl: null\n  };\n\n  handleOutsideClick = target => {\n    if (this.componentEl && !this.componentEl.contains(target)) {\n      this.setState({\n        isOpen: false\n      });\n    }\n  };\n\n  toggleOpen = () => {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  };\n\n  render() {\n    const {\n      children,\n      alignInner,\n      alignOuter,\n      buttonProps,\n      wrapperClass,\n      popoverClass,\n      anchorEl\n    } = this.props;\n    const { isOpen } = this.state;\n\n    let popoverWrapperStyle = null;\n    \n    if (anchorEl) {\n      const { offsetTop, offsetLeft } = anchorEl;\n      popoverWrapperStyle = {\n        position: 'absolute',\n        top: offsetTop,\n        [alignOuter]: offsetLeft\n      };\n    }\n\n    return (\n      <div\n        className={`popover-wrapper ${isOpen ? 'is-active' : ''} ${wrapperClass}`}\n        ref={el => (this.componentEl = el)}\n        style={popoverWrapperStyle}\n      >\n        <Button type=\"button\" onClick={this.toggleOpen} {...buttonProps} />\n        {isOpen && (\n          <Popover\n            className={`align-${alignInner} ${popoverClass}`}\n            onClick={this.toggleOpen}\n            onOutsideClick={this.handleOutsideClick}\n          >\n            {children}\n          </Popover>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport './Card.scss';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { PopoverWrapper } from '../Popover';\nimport { Menu, MenuItem } from '../Menu';\n\nexport default class Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleCardClick = e => {\n    if (e.target.matches('button') || e.target.matches('a')) return;\n    const { cardId, onCardClick } = this.props;\n    onCardClick(cardId);\n  };\n\n  render() {\n    const { cardTitle, cardId, cardIndex } = this.props;\n    return (\n      <Draggable draggableId={cardId} index={cardIndex}>\n        {provided => (\n            <div\n              className=\"card\"\n              onClick={this.handleCardClick}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              ref={provided.innerRef}\n            >\n              <div className=\"card__header\" ref={el => (this.headerEl = el)}>\n                <div className=\"card__tags\" />\n                <h3 className=\"card__title\">{cardTitle}</h3>\n              </div>\n              <div className=\"card__footer\">\n                <div className=\"card__labels\" />\n              </div>\n            </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { Card } from '../Card';\n\nexport default class Cards extends Component {\n  static propTypes = {\n    listId: PropTypes.string.isRequired\n  };\n\n  /*\n\n  shouldComponentUpdate(nextProps) {\n    if (this.props.cards === nextProps.cards) {\n      return false;\n    }\n    return true;\n  }\n*/\n  componentDidUpdate(prevProps) {\n    if (this.props.cards.length > prevProps.cards.length) {\n      this.scrollToBottom();\n    }\n  }\n\n  scrollToBottom = () => {\n    this.listEnd.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  render() {\n    const { listId, cards, style, onCardClick, onCardDelete } = this.props;\n\n    return (\n      <Droppable droppableId={listId} type={droppableTypes.CARD}>\n        {(provided, snapshot) => (\n          <div\n            className=\"list__content\"\n            ref={provided.innerRef}\n            style={{\n              ...style,\n              minHeight: snapshot.isDraggingOver ? 80 : 16\n            }}\n            {...provided.droppableProps}\n          >\n            {cards.map((card, cardIndex) => {\n              const { cardId, cardTitle } = card;\n              return (\n                <Card\n                  key={cardId}\n                  cardTitle={cardTitle}\n                  cardId={cardId}\n                  cardIndex={cardIndex}\n                  listId={listId}\n                  onCardClick={onCardClick}\n                  onCardDelete={onCardDelete}\n                />\n              );\n            })}\n            {provided.placeholder}\n            <div\n              style={{ float: 'left', clear: 'both' }}\n              ref={el => (this.listEnd = el)}\n            />\n          </div>\n        )}\n      </Droppable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { CardComposer } from '../CardComposer';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\nimport { Input } from '../Input';\nimport Cards from './Cards';\nimport './List.scss';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listTitle: this.props.listTitle\n    };\n  }\n\n  handleListDelete = e => {\n    e.preventDefault();\n    const { listId, boardId, firebase } = this.props;\n    firebase.deleteList({ listId, boardId });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onBlur = e => {\n    const { listTitle, listId, firebase } = this.props;\n    const { listTitle: newListTitle } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newListTitle !== listTitle) {\n      firebase.updateList(listId, {\n        listTitle: newListTitle\n      });\n      console.log('updated!');\n    }\n  };\n\n  render() {\n    const {\n      cards,\n      onCardClick,\n      listId,\n      listIndex,\n      isFetchingCards\n    } = this.props;\n    if (isFetchingCards) return null;\n\n    const { listTitle, viewportHeight } = this.state;\n\n    return (\n      <Draggable draggableId={listId} index={listIndex}>\n        {provided => (\n          <>\n            <section\n              className=\"list\"\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <header\n                className=\"list__header\"\n                ref={el => (this.listHeaderEl = el)}\n              >\n                <Input\n                  className=\"list__input--title\"\n                  name=\"listTitle\"\n                  type=\"text\"\n                  value={listTitle}\n                  onChange={this.onChange}\n                  required\n                  hideLabel\n                  onBlur={this.onBlur}\n                />\n                <PopoverWrapper\n                  wrapperClass=\"list__popover-wrapper\"\n                  popoverClass=\"list__popover\"\n                  alignInner=\"left\"\n                  buttonProps={{\n                    size: 'medium',\n                    iconOnly: true,\n                    className: 'list__btn--more-actions',\n                    children: <Icon name=\"more-vertical\" />\n                  }}\n                >\n                  <Menu>\n                    <MenuItem>\n                      <a href=\"\" onClick={this.handleListDelete}>\n                        Delete\n                      </a>\n                    </MenuItem>\n                  </Menu>\n                </PopoverWrapper>\n              </header>\n              <Cards\n                cards={cards}\n                listId={listId}\n                onCardClick={onCardClick}\n                onCardDelete={this.handleCardDelete}\n              />\n              {provided.placeholder}\n              <CardComposer listId={listId} />\n            </section>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    cards: cardSelectors.getCardsArray(state, ownProps)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(List)\n);\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadCommentsById = commentsById => {\n  return {\n    type: types.LOAD_COMMENTS_BY_ID,\n    commentsById\n  };\n};\n\nexport const fetchCommentsById = () => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateCommentsById = comment => {\n  return {\n    type: types.UPDATE_COMMENTS_BY_ID,\n    comment\n  };\n};\n\nexport const fetchCardComments = cardId => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .where('cardId', '==', cardId)\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserComments = userId => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .where('to', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addComment = ({ commentId, commentData }) => {\n  return {\n    type: types.ADD_COMMENT,\n    commentId,\n    commentData\n  };\n};\n\nexport const deleteComment = commentId => {\n  return {\n    type: types.DELETE_COMMENT,\n    commentId\n  };\n};\n\nexport const updateComment = ({ commentId, commentData }) => {\n  return {\n    type: types.UPDATE_COMMENT,\n    commentId,\n    commentData\n  };\n};\n","export const LOAD_COMMENTS_BY_ID = 'LOAD_COMMENTS_BY_ID';\nexport const FETCH_COMMENTS_BY_ID = 'FETCH_COMMENTS_BY_ID';\nexport const UPDATE_COMMENTS_BY_ID = 'UPDATE_COMMENTS_BY_ID';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const UPDATE_COMMENT = 'UPDATE_COMMENT';\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\n","export const getCommentsById = state => {\n  const { commentsById } = state;\n  return commentsById;\n};\n\nexport const getCommentsArray = (state, commentIds) => {\n  const { commentsById } = state;\n  if (!commentIds) return [];\n\n  return commentIds.map(commentId => {\n    return commentsById[commentId];\n  });\n};\n","import * as types from './types';\n\nconst commentsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_COMMENTS_BY_ID: {\n      const { commentsById } = action;\n      return {\n        ...state,\n        ...commentsById\n      };\n    }\n    case types.ADD_COMMENT: {\n      const { commentId, commentData } = action;\n      return {\n        ...state,\n        [commentId]: {\n          commentId,\n          ...commentData\n        }\n      };\n    }\n    case types.DELETE_COMMENT: {\n      const { commentId } = action;\n      const { [commentId]: deletedComment, ...restOfComments } = state;\n      return restOfComments;\n    }\n    case types.UPDATE_COMMENT: {\n      const { commentId, commentData } = action;\n      return {\n        ...state,\n        [commentId]: {\n          ...state[commentId],\n          ...commentData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default commentsById;\n","import React from 'react';\nimport './Toolbar.scss';\n\nconst Toolbar = ({ className, children, ...props }) => (\n  <div className={`toolbar ${className}`} {...props}>\n    {children}\n  </div>\n);\n\nToolbar.defaultProps = {\n  className: ''\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport './Checkbox.scss';\n\nconst Checkbox = ({\n  value,\n  id,\n  name,\n  isChecked,\n  onClick,\n  onChange,\n  className,\n  labelClass,\n  ...props\n}) => {\n  return (\n    <label\n      htmlFor={id}\n      onClick={onClick}\n      className={`checkbox__label ${labelClass}`}\n    >\n      {isChecked && <Icon name=\"check\" />}\n      <input\n        type=\"checkbox\"\n        id={id}\n        value={value}\n        name={name}\n        checked={isChecked}\n        className={`checkbox ${className}`}\n        onChange={onChange}\n        {...props}\n      />\n    </label>\n  );\n};\n\nCheckbox.defaultProps = {\n  className: '',\n  labelClass: ''\n};\n\nexport default Checkbox;\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\n\nconst CardEditorMoreActions = ({ onMenuClick }) => (\n  <PopoverWrapper\n    wrapperClass=\"card-editor__popover-wrapper\"\n    popoverClass=\"card-editor__popover\"\n    alignOuter=\"right\"\n    alignInner=\"right\"\n    buttonProps={{\n      size: 'medium',\n      iconOnly: true,\n      className: 'card-editor__toolbar-btn',\n      children: <Icon name=\"more-horizontal\" />\n    }}\n  >\n    <Menu onClick={onMenuClick}>\n      <MenuItem>\n        <a href=\"\" data-action=\"delete\">\n          Delete card\n        </a>\n      </MenuItem>\n    </Menu>\n  </PopoverWrapper>\n);\n\nexport default CardEditorMoreActions;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Checkbox } from '../Checkbox';\nimport { Textarea } from '../Textarea';\n\nconst appRoot = document.getElementById('root');\n\nexport default class CardEditorTask extends Component {\n  constructor(props) {\n    super(props);\n    this.portal = document.createElement('div');\n  }\n\n  componentDidMount() {\n    appRoot.appendChild(this.portal);\n  }\n\n  onDragStart = e => {\n    console.log('dragstart');\n    this.setState({\n      isReadOnly: true\n    });\n  };\n\n  componentWillUnmount() {\n    appRoot.removeChild(this.portal);\n  }\n\n  render() {\n    const {\n      taskId,\n      index,\n      text,\n      isCompleted,\n      toggleCompleted,\n      onChange,\n      onBlur,\n      onKeyDown\n    } = this.props;\n\n    return (\n      <Draggable draggableId={taskId} index={index}>\n        {(provided, snapshot) => {\n          const inner = (\n            <li\n              className=\"card-editor__task\"\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <Checkbox\n                id={`cb-${taskId}`}\n                value={taskId}\n                name={taskId}\n                isChecked={isCompleted}\n                onChange={toggleCompleted}\n                className=\"card-editor__checkbox\"\n                labelClass=\"card-editor__checkbox-label\"\n              />\n              <Textarea\n                value={text}\n                onChange={onChange}\n                onBlur={onBlur}\n                name={taskId}\n                className=\"card-editor__textarea--task\"\n                onKeyDown={onKeyDown}\n                onDragStart={this.onDragStart}\n              />\n            </li>\n          );\n          return snapshot.isDragging\n            ? ReactDOM.createPortal(inner, this.portal)\n            : inner;\n        }}\n      </Draggable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './Avatar.scss';\n\nexport default class Avatar extends Component {\n  static defaultProps = {\n    imgSrc: null,\n    classes: {\n      avatar: '',\n      img: '',\n      placeholder: ''\n    },\n    size: 'md',\n    variant: 'circle'\n  };\n\n  getUserInitials = fullName => {\n    return fullName\n      .split(' ')\n      .map(name => name.charAt(0))\n      .join('')\n      .toUpperCase();\n  };\n\n  render() {\n    const {\n      imgSrc,\n      imgProps,\n      classes,\n      fullName,\n      variant,\n      color,\n      size\n    } = this.props;\n    return (\n      <div\n        className={`avatar avatar--${size} avatar--${variant} ${\n          classes.avatar\n        }`}\n      >\n        {imgSrc !== null ? (\n          <img\n            src={imgSrc}\n            alt={fullName}\n            className={`avatar__img ${classes.img}`}\n            {...imgProps}\n          />\n        ) : (\n          <div\n            className={`avatar__placeholder ${classes.placeholder}`}\n            style={{ backgroundColor: color }}\n          >\n            {this.getUserInitials(fullName)}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/users';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { commentActions, commentSelectors } from '../../ducks/comments';\nimport { Icon } from '../Icon';\nimport { Avatar } from '../Avatar';\nimport './CardEditorComment.scss';\n\nclass CardEditorComment extends Component {\n  componentDidMount() {}\n\n  componentWillUnmount() {}\n\n  render() {\n    const { user, comment } = this.props;\n    console.log(user);\n    const { name, photoURL } = user;\n    const {\n      text,\n      createdAt,\n      lastModifiedAt,\n      likes,\n      to,\n      from,\n      isPinned\n    } = comment;\n    return (\n      <div\n        className={`card-editor__comment-wrapper ${\n          isPinned ? 'is-pinned' : ''\n        }`}\n      >\n        <Avatar\n          classes={{\n            avatar: 'card-editor__avatar',\n            placeholder: 'card-editor__avatar-placeholder'\n          }}\n          fullName={name}\n          size=\"sm\"\n          variant=\"circle\"\n          imgSrc={photoURL}\n        />\n        <div className=\"card-editor__comment\">\n          <div className=\"card-editor__comment-header\">\n            <div className=\"card-editor__comment-details\">\n              <span className=\"card-editor__full-name\">{name}</span>\n              <span className=\"card-editor__time-elapsed\" />\n            </div>\n            <div className=\"card-editor__likes\">\n              <span className=\"card-editor__likes-counter\">\n                {likes.length > 0 ? likes.length : ''}\n              </span>\n              <Icon name=\"thumbs-up\" />\n            </div>\n          </div>\n          <div className=\"card-editor__comment-body\">{text}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state, ownProps.comment.from),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateCardsById: card => dispatch(cardActions.updateCardsById(card)),\n    fetchCardComments: cardId =>\n      dispatch(commentActions.fetchCardComments(cardId)),\n    addComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.addComment({ commentId, commentData })),\n    deleteComment: commentId =>\n      dispatch(commentActions.deleteComment(commentId)),\n    updateComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.updateComment({ commentId, commentData }))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardEditorComment)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { commentActions, commentSelectors } from '../../ducks/comments';\nimport { Input } from '../Input';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { Modal } from '../Modal';\nimport { Toolbar } from '../Toolbar';\nimport { Checkbox } from '../Checkbox';\nimport CardEditorMoreActions from './CardEditorMoreActions';\nimport * as keys from '../../constants/keys';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport CardEditorTask from './CardEditorTask';\nimport CardEditorComment from './CardEditorComment';\nimport './CardEditor.scss';\n\nclass CardEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching:\n        this.props.card.commentIds !== undefined &&\n        this.props.card.commentIds.length > 0,\n      cardTitle: this.props.card.cardTitle,\n      cardDescription: this.props.card.cardDescription,\n      newTask: '',\n      cardTasks: this.props.tasksArray.reduce((tasks, task) => {\n        const { taskId, text, isCompleted } = task;\n        tasks[taskId] = {\n          text,\n          isCompleted\n        };\n        return tasks;\n      }, {}),\n      newComment: '',\n      currentFocus: null,\n      taskIds: this.props.card.taskIds\n    };\n  }\n\n  componentDidMount() {\n    const {\n      card,\n      firebase,\n      fetchCardComments,\n      addComment,\n      deleteComment,\n      updateComment\n    } = this.props;\n\n    const { cardId, commentIds } = card;\n\n    if (commentIds && commentIds.length > 0) {\n      fetchCardComments(cardId).then(() => {\n        this.setState({\n          isFetching: false\n        });\n      });\n    }\n\n    this.commentObserver = firebase.db\n      .collection('comments')\n      .where('cardId', '==', cardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const commentId = change.doc.id;\n          const commentData = change.doc.data();\n          if (change.type === 'added') {\n            addComment({ commentId, commentData });\n          }\n          if (change.type === 'modified') {\n            updateComment({ commentId, commentData });\n          }\n          if (change.type === 'removed') {\n            deleteComment(commentId);\n          }\n        });\n      });\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if ('taskIds' in props.card === false) return null;\n    if (props.card.taskIds.length !== state.taskIds.length) {\n      return {\n        cardTasks: props.tasksArray.reduce((tasks, task) => {\n          const { taskId, text, isCompleted } = task;\n          tasks[taskId] = {\n            text,\n            isCompleted\n          };\n          return tasks;\n        }, {}),\n        taskIds: props.card.taskIds\n      };\n    }\n    return null;\n  }\n\n  updateCardTasks = () => {\n    const { tasksArray } = this.props;\n    this.setState({\n      cardTasks: tasksArray.reduce((tasks, task) => {\n        const { taskId, text, isCompleted } = task;\n        tasks[taskId] = {\n          text,\n          isCompleted\n        };\n        return tasks;\n      }, {})\n    });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  deleteCard = () => {\n    const { card, firebase, handleCardEditorClose } = this.props;\n    const { cardId, listId } = card;\n    firebase.deleteCard({ cardId, listId });\n    handleCardEditorClose();\n  };\n\n  onBlur = e => {\n    const { card, firebase } = this.props;\n    const cardKey = e.target.name;\n    const { [cardKey]: updatedValue } = this.state;\n\n    // When field loses focus, update card if change is detected\n\n    if (updatedValue !== card[cardKey]) {\n      const { cardId } = card;\n      firebase.updateCard(cardId, {\n        [cardKey]: updatedValue\n      });\n      console.log('updated!');\n    }\n\n    this.setState({\n      currentFocus: null\n    });\n  };\n\n  addComment = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { userId, firebase, card } = this.props;\n    const { cardId, boardId } = card;\n    const { newComment: text } = this.state;\n    firebase.addComment({ userId, text, cardId, boardId });\n    this.resetForm('newComment');\n    e.preventDefault();\n  };\n\n  resetForm = key => {\n    this.setState({\n      [key]: ''\n    });\n  };\n\n  addTask = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { userId, firebase, card } = this.props;\n    const { cardId, boardId } = card;\n    const { newTask: text } = this.state;\n    firebase.addTask({ userId, text, cardId, boardId });\n    this.resetForm('newTask');\n    e.preventDefault();\n  };\n\n  onFocus = e => {\n    this.setState({\n      currentFocus: e.target.name\n    });\n  };\n\n  handleModalClick = e => {\n    const { currentFocus } = this.state;\n    if (\n      (currentFocus === 'newComment' &&\n        !this.commentFormEl.contains(e.target)) ||\n      (currentFocus === 'newTask' && !this.newTaskFormEl.contains(e.target))\n    ) {\n      this.setState({\n        currentFocus: null\n      });\n    }\n  };\n\n  handleMoreActions = e => {\n    if (!e.target.matches('a')) return;\n    const { action } = e.target.dataset;\n    switch (action) {\n      case 'delete':\n        this.deleteCard();\n        break;\n    }\n    e.preventDefault(); // prevents page reload\n  };\n\n  onTaskChange = e => {\n    const { cardTasks } = this.state;\n    this.setState({\n      cardTasks: {\n        ...cardTasks,\n        [e.target.name]: {\n          ...cardTasks[e.target.name],\n          text: e.target.value\n        }\n      }\n    });\n  };\n\n  handleCheckboxChange = e => {\n    const taskId = e.target.name;\n    this.toggleTaskCompleted(taskId);\n  };\n\n  toggleTaskCompleted = taskId => {\n    const { isCompleted } = this.state.cardTasks[taskId];\n    this.setState(prevState => ({\n      cardTasks: {\n        ...prevState.cardTasks,\n        [taskId]: {\n          ...prevState.cardTasks[taskId],\n          isCompleted: !prevState.cardTasks[taskId].isCompleted\n        }\n      }\n    }));\n    const { firebase } = this.props;\n    firebase.updateTask(taskId, { isCompleted: !isCompleted });\n  };\n\n  updateTaskText = e => {\n    const taskId = e.target.name;\n    const { cardTasks } = this.state;\n    const { text } = cardTasks[taskId];\n    const { firebase } = this.props;\n    firebase.updateTask(taskId, { text });\n  };\n\n  deleteTask = e => {\n    if (e.target.value !== '' || e.key !== keys.BACKSPACE) return;\n    const { card, firebase } = this.props;\n    const { cardId } = card;\n    const taskId = e.target.name;\n    firebase.deleteTask({ taskId, cardId });\n  };\n\n  moveTask = ({ destination, draggableId, source }) => {\n    if (!destination) return;\n    if (destination.index === source.index) return;\n    const { firebase } = this.props;\n    const { taskIds } = this.state;\n    const updatedTaskIds = [...taskIds];\n    updatedTaskIds.splice(source.index, 1);\n    updatedTaskIds.splice(destination.index, 0, draggableId);\n    this.setState({\n      taskIds: updatedTaskIds\n    });\n    firebase.updateCard(source.droppableId, {\n      taskIds: updatedTaskIds\n    });\n  };\n\n  componentWillUnmount() {\n    this.commentObserver();\n  }\n\n  render() {\n    const {\n      handleCardEditorClose,\n      card,\n      userId,\n      commentsArray\n    } = this.props;\n    const { cardId, commentIds } = card;\n    const {\n      cardTitle,\n      cardDescription,\n      newComment,\n      currentFocus,\n      newTask,\n      cardTasks,\n      taskIds,\n      isFetching\n    } = this.state;\n    const hasTasks = taskIds !== undefined && taskIds.length > 0;\n    const hasComments = commentIds !== undefined && commentIds.length > 0;\n    const isNewCommentInvalid = newComment === '';\n    const isNewTaskInvalid = newTask === '';\n    const commentFormIsFocused = currentFocus === 'newComment';\n    console.log(commentsArray);\n\n    if (isFetching) return null;\n\n    return (\n      <Modal\n        onModalClose={handleCardEditorClose}\n        className=\"card-editor\"\n        onModalClick={this.handleModalClick}\n        size=\"lg\"\n        id=\"cardEditor\"\n      >\n        <Toolbar className=\"card-editor__toolbar\">\n          <CardEditorMoreActions onMenuClick={this.handleMoreActions} />\n        </Toolbar>\n        <form\n          name=\"editCardForm\"\n          onFocus={this.onFocus}\n          className=\"card-editor__edit-card-form\"\n        >\n          <Textarea\n            className=\"card-editor__textarea--title\"\n            name=\"cardTitle\"\n            value={cardTitle}\n            onChange={this.onChange}\n            required\n            onBlur={this.onBlur}\n            onFocus={this.onFocus}\n          />\n          <div\n            className={`card-editor__section ${\n              currentFocus === 'cardDescription' ? 'is-focused' : ''\n            }`}\n          >\n            <div className=\"card-editor__section-icon\">\n              <Icon name=\"edit-3\" />\n            </div>\n            <Textarea\n              className=\"card-editor__textarea card-editor__textarea--description\"\n              name=\"cardDescription\"\n              value={cardDescription}\n              onChange={this.onChange}\n              placeholder=\"Add a description\"\n              onBlur={this.onBlur}\n              onFocus={this.onFocus}\n            />\n          </div>\n        </form>\n        <div\n          className={`card-editor__section ${\n            currentFocus === 'newTask' ? 'is-focused' : ''\n          }`}\n        >\n          <hr className=\"card-editor__hr\" />\n          {hasTasks && (\n            <DragDropContext onDragEnd={this.moveTask}>\n              <Droppable droppableId={cardId} type={droppableTypes.TASK}>\n                {provided => (\n                  <ul\n                    className=\"card-editor__tasks\"\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                  >\n                    {taskIds.map((taskId, index) => {\n                      return (\n                        <CardEditorTask\n                          taskId={taskId}\n                          index={index}\n                          text={cardTasks[taskId].text}\n                          isCompleted={cardTasks[taskId].isCompleted}\n                          toggleCompleted={this.handleCheckboxChange}\n                          onChange={this.onTaskChange}\n                          onBlur={this.updateTaskText}\n                          onKeyDown={this.deleteTask}\n                          key={taskId}\n                        />\n                      );\n                    })}\n                    {provided.placeholder}\n                  </ul>\n                )}\n              </Droppable>\n            </DragDropContext>\n          )}\n          <div className=\"card-editor__section-icon\">\n            <Icon name=\"check-square\" />\n          </div>\n          <form\n            name=\"newTaskForm\"\n            className={`card-editor__new-task-form ${\n              currentFocus === 'newTask' ? 'is-focused' : ''\n            }`}\n            ref={el => (this.newTaskFormEl = el)}\n            onSubmit={this.addTask}\n          >\n            <Textarea\n              className=\"card-editor__textarea card-editor__textarea--new-task\"\n              name=\"newTask\"\n              value={newTask}\n              onChange={this.onChange}\n              placeholder=\"Add a task\"\n              onFocus={this.onFocus}\n              onKeyDown={this.addTask}\n            />\n            {currentFocus === 'newTask' && (\n              <Button\n                type=\"submit\"\n                color=\"secondary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isNewTaskInvalid}\n                onClick={this.addTask}\n                className=\"card-editor__btn--add-task\"\n              >\n                Add task\n              </Button>\n            )}\n          </form>\n        </div>\n        <div\n          className={`card-editor__section ${\n            commentFormIsFocused ? 'is-focused' : ''\n          }`}\n        >\n          {hasComments && (\n            <div className=\"card-editor__comments\">\n              {commentsArray.map(comment => {\n                const { commentId } = comment;\n                return <CardEditorComment key={commentId} comment={comment} />;\n              })}\n            </div>\n          )}\n          <hr className=\"card-editor__hr\" />\n          <div className=\"card-editor__section-icon\">\n            <Icon name=\"message-circle\" />\n          </div>\n          <form\n            name=\"commentForm\"\n            className={`card-editor__comment-form ${\n              commentFormIsFocused ? 'is-focused' : ''\n            }`}\n            ref={el => (this.commentFormEl = el)}\n            onSubmit={this.addComment}\n          >\n            <Textarea\n              className=\"card-editor__textarea card-editor__textarea--comment\"\n              name=\"newComment\"\n              value={newComment}\n              onChange={this.onChange}\n              placeholder=\"Write a comment...\"\n              onFocus={this.onFocus}\n              onKeyDown={this.addComment}\n            />\n            {commentFormIsFocused && (\n              <Button\n                type=\"submit\"\n                color=\"secondary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isNewCommentInvalid}\n                onClick={this.addComment}\n                name=\"newCommentSubmit\"\n                className=\"card-editor__btn--submit-comment\"\n              >\n                Comment\n              </Button>\n            )}\n          </form>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    userId: currentSelectors.getCurrentUserId(state),\n    tasksArray: taskSelectors.getTasksArray(state, ownProps.card.taskIds),\n    commentsArray: commentSelectors.getCommentsArray(\n      state,\n      ownProps.card.commentIds\n    )\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCardComments: cardId =>\n      dispatch(commentActions.fetchCardComments(cardId)),\n    addComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.addComment({ commentId, commentData })),\n    deleteComment: commentId =>\n      dispatch(commentActions.deleteComment(commentId)),\n    updateComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.updateComment({ commentId, commentData }))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardEditor)\n);\n","\n/**\n * Checks if two arrays or objects are equal\n * @param {Array|Object} value\n * @param {Array|Object} other\n */\n\n// eslint-disable-next-line import/prefer-default-export\nexport const isEqual = (value, other) => {\n  const type = Object.prototype.toString.call(value);\n\n  // If both objects are not the same type, return false\n  if (type !== Object.prototype.toString.call(other)) return false;\n\n  const typeObj = '[object Object]';\n  const typeArr = '[object Array]';\n  // If items are neither objects nor arrays, return false\n  if (type !== typeObj && type !== typeArr) return false;\n\n  // Compare length of two items\n  const valueLen = type === typeArr ? value.length : Object.keys(value).length;\n  const otherLen = type === typeArr ? other.length : Object.keys(other).length;\n  if (valueLen !== otherLen) return false;\n\n  const compare = (item1, item2) => {\n    const typeFunc = '[object Function]';\n    const itemType = Object.prototype.toString.call(item1);\n    if (itemType !== Object.prototype.toString.call(item2)) return false;\n    if (itemType === typeObj || itemType === typeArr) {\n      return isEqual(item1, item2);\n    }\n    if (itemType === typeFunc) {\n      return item1.toString() === item2.toString();\n    }\n    return item1 === item2;\n  };\n\n  if (type === typeArr) {\n    for (let i = 0; i < valueLen; i++) {\n      if (!compare(value[i], other[i])) return false;\n    }\n  } else {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (compare(value[key], other[key]) === false) return false;\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * Delays callback execution until next browser repaint\n * Best used for `scroll` and `resize` window events\n * @param {Function} callback - The function to debounce\n */\n\nexport const windowDebouncer = callback => {\n  let request;\n\n  return (...args) => {\n    const context = this;\n\n    if (request) {\n      window.cancelAnimationFrame(request);\n    }\n\n    request = window.requestAnimationFrame(() => {\n      callback.apply(context, args);\n    });\n  };\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport * as ROUTES from '../../constants/routes';\nimport Board from './Board';\nimport { Input } from '../Input';\nimport { List } from '../List';\nimport { CardEditor } from '../CardEditor';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { utils } from '../../utils';\nimport './Board.scss';\n\nclass BoardContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: true,\n      isDragging: false,\n      isCardEditorOpen: false,\n      boardTitle: this.props.boardTitle\n    };\n  }\n\n  componentDidMount() {\n    const {\n      current,\n      fetchListsById,\n      fetchCardsById,\n      fetchCardTasks,\n      firebase,\n      updateListsById,\n      updateCardsById,\n      boardId,\n      board,\n      updateListIds,\n      addTask,\n      updateTask,\n      deleteTask,\n      selectBoard\n    } = this.props;\n\n    if (current.boardId !== boardId) {\n      selectBoard(boardId);\n    }\n\n    fetchListsById(boardId);\n    fetchCardsById(boardId);\n    fetchCardTasks(boardId).then(() => {\n      this.setState({\n        isFetching: false\n      });\n    });\n    this.boardObserver = firebase.getBoardDoc(boardId).onSnapshot(snapshot => {\n      const updatedBoard = snapshot.data();\n      if (!utils.isEqual(updatedBoard.listIds, board.listIds)) {\n        updateListIds(boardId, updatedBoard.listIds);\n      }\n    });\n    this.listObserver = firebase.db\n      .collection('lists')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const list = {\n            [change.doc.id]: change.doc.data()\n          };\n          updateListsById(list);\n        });\n      });\n    this.taskObserver = firebase.db\n      .collection('tasks')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const taskId = change.doc.id;\n          const taskData = change.doc.data();\n          if (change.type === 'added') {\n            addTask({ taskId, taskData });\n          }\n          if (change.type === 'modified') {\n            updateTask({ taskId, taskData });\n          }\n          if (change.type === 'removed') {\n            deleteTask(taskId);\n          }\n        });\n      });\n    this.cardObserver = firebase.db\n      .collection('cards')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const card = {\n            [change.doc.id]: {\n              cardId: change.doc.id,\n              ...change.doc.data()\n            }\n          };\n          updateCardsById(card);\n        });\n      });\n    console.log('mounted');\n  }\n\n  componentWillUnmount() {\n    this.boardObserver();\n    this.listObserver();\n    this.cardObserver();\n    this.taskObserver();\n  }\n\n  onDragStart = () => {\n    this.setState({\n      isDragging: true\n    });\n  };\n\n  onDragEnd = ({ destination, draggableId, source, type }) => {\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    const { firebase } = this.props;\n    if (type === droppableTypes.CARD) {\n      const { listsById } = this.props;\n      const isMovedWithinList = source.droppableId === destination.droppableId;\n      const updatedCardIds = [...listsById[destination.droppableId].cardIds];\n      if (isMovedWithinList) {\n        updatedCardIds.splice(source.index, 1);\n        updatedCardIds.splice(destination.index, 0, draggableId);\n        firebase.updateList(source.droppableId, {\n          cardIds: updatedCardIds\n        });\n      } else {\n        updatedCardIds.splice(destination.index, 0, draggableId);\n        firebase.moveCardToList({\n          cardId: draggableId,\n          origListId: source.droppableId,\n          newListId: destination.droppableId,\n          updatedCardIds\n        });\n      }\n    }\n\n    if (type === droppableTypes.LIST) {\n      const { boardsById, current, reorderLists } = this.props;\n      const { boardId } = current;\n      const updatedListIds = [...boardsById[boardId].listIds];\n      updatedListIds.splice(source.index, 1);\n      updatedListIds.splice(destination.index, 0, draggableId);\n      firebase.updateBoard(boardId, {\n        listIds: updatedListIds\n      });\n      reorderLists(boardId, updatedListIds);\n    }\n\n    this.setState({\n      isDragging: false\n    });\n  };\n\n  toggleCardEditor = () => {\n    this.setState(prevState => ({\n      isCardEditorOpen: !prevState.isCardEditorOpen\n    }));\n  };\n\n  handleCardClick = cardId => {\n    this.props.selectCard(cardId);\n    this.toggleCardEditor();\n  };\n\n  onTitleChange = e => {\n    this.setState({\n      boardTitle: e.target.value\n    });\n  };\n\n  onTitleBlur = e => {\n    const { boardTitle, boardId, firebase } = this.props;\n    const { boardTitle: newBoardTitle } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newBoardTitle !== boardTitle) {\n      firebase.updateBoard(boardId, {\n        boardTitle: newBoardTitle\n      });\n      console.log('updated!');\n    }\n  };\n\n  render() {\n    const { isFetching, isCardEditorOpen } = this.state;\n    const { current, listsArray, cardsById, boardId, board } = this.props;\n    if (isFetching) return null;\n    const { cardId } = current;\n    const { boardTitle } = board;\n    const lists = listsArray.map((list, listIndex) => {\n      const { listId, listTitle, cardIds } = list;\n      return (\n        <List\n          listId={listId}\n          key={listId}\n          listIndex={listIndex}\n          listTitle={listTitle}\n          cardIds={cardIds}\n          isFetchingCards={isFetching}\n          isDragging={this.state.isDragging}\n          onCardClick={this.handleCardClick}\n          boardId={boardId}\n        />\n      );\n    });\n\n    return (\n      <main className=\"board-container\">\n        <Input\n          className=\"board__input--title\"\n          name=\"boardTitle\"\n          type=\"text\"\n          value={boardTitle}\n          onChange={this.onTitleChange}\n          required\n          hideLabel\n          onBlur={this.onTitleBlur}\n        />\n        <DragDropContext\n          onDragEnd={this.onDragEnd}\n          onDragStart={this.onDragStart}\n        >\n          <Board boardId={boardId}>{lists}</Board>\n        </DragDropContext>\n        {isCardEditorOpen && (\n          <CardEditor\n            card={cardsById[cardId]}\n            handleCardEditorClose={this.toggleCardEditor}\n          />\n        )}\n      </main>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    boardsById: boardSelectors.getBoardsById(state),\n    current: currentSelectors.getCurrent(state),\n    listsById: listSelectors.getListsById(state),\n    listsArray: listSelectors.getListsArray(state),\n    cardsById: cardSelectors.getCardsById(state),\n    board: boardSelectors.getBoard(state, ownProps.boardId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId)),\n    selectCard: cardId => dispatch(currentActions.selectCard(cardId)),\n    fetchListsById: boardId => dispatch(listActions.fetchListsById(boardId)),\n    updateListsById: list => dispatch(listActions.updateListsById(list)),\n    fetchCardsById: boardId => dispatch(cardActions.fetchCardsById(boardId)),\n    fetchCardTasks: boardId => dispatch(taskActions.fetchCardTasks(boardId)),\n    updateCardsById: card => dispatch(cardActions.updateCardsById(card)),\n    reorderLists: (boardId, listIds) =>\n      dispatch(boardActions.reorderLists(boardId, listIds)),\n    updateListIds: (boardId, listIds) =>\n      dispatch(boardActions.updateListIds(boardId, listIds)),\n    addTask: ({ taskId, taskData }) =>\n      dispatch(taskActions.addTask({ taskId, taskData })),\n    deleteTask: taskId => dispatch(taskActions.deleteTask(taskId)),\n    updateTask: ({ taskId, taskData }) =>\n      dispatch(taskActions.updateTask({ taskId, taskData }))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardContainer)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { withAuthorization } from '../Session';\nimport * as ROUTES from '../../constants/routes';\nimport { userActions, userSelectors } from '../../ducks/users';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { BoardGridContainer } from '../BoardGrid';\nimport { BoardComposer } from '../BoardComposer';\nimport { BoardContainer } from '../Board';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport './Home.scss';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isBoardComposerOpen: false,\n      isFetching: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      firebase,\n      selectUser,\n      fetchUsersById,\n      fetchBoardsById\n    } = this.props;\n    const userId = firebase.auth.currentUser.uid;\n    selectUser(userId);\n    console.log('mounted home');\n    fetchUsersById()\n      .then(() => fetchBoardsById(userId))\n      .then(() =>\n        this.setState({\n          isFetching: false\n        })\n      );\n  }\n\n  toggleBoardComposer = () => {\n    this.setState(prevState => ({\n      isBoardComposerOpen: !prevState.isBoardComposerOpen\n    }));\n  };\n\n  createBoard = boardTitle => {\n    const { userId, firebase } = this.props;\n    firebase.addBoard({ userId, boardTitle });\n  };\n\n  render() {\n    const { isBoardComposerOpen, isFetching } = this.state;\n    if (isFetching) return null;\n    const { userId } = this.props;\n    return (\n      <>\n        {isBoardComposerOpen && (\n          <BoardComposer\n            onClose={this.toggleBoardComposer}\n            handleSubmit={this.createBoard}\n          />\n        )}\n        <Switch>\n          <Route\n            exact\n            path={ROUTES.HOME}\n            render={() => (\n              <main className=\"main\">\n                <h1>Home</h1>\n                {userId && (\n                  <BoardGridContainer\n                    userId={userId}\n                    openBoardComposer={this.toggleBoardComposer}\n                  />\n                )}\n              </main>\n            )}\n          />\n          <Route\n            path={ROUTES.BOARD}\n            render={props => (\n              <BoardContainer\n                userId={userId}\n                boardId={props.match.params.id}\n                {...props}\n              />\n            )}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentBoardId: currentSelectors.getCurrentBoardId(state),\n    userId: currentSelectors.getCurrentUserId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsersById: () => dispatch(userActions.fetchUsersById()),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    selectUser: userId => dispatch(currentActions.selectUser(userId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(HomePage)\n);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .passwordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n    const isInvalid = passwordOne === '' || passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"passwordOne\"\n          title=\"New Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          title=\"Confirm New Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Change My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React from 'react';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport { PasswordChangeForm } from '../PasswordChange';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport './Account.scss';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <main className=\"account\">\n        <h1>Account: {authUser.email}</h1>\n        <section className=\"account__section\">\n        <h2>Forgot your password?</h2>\n          <PasswordForgetForm />\n        </section>\n        <section className=\"account__section\">\n        <h2>Change your password.</h2>\n          <PasswordChangeForm />\n        </section>\n      </main>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(AccountPage);\n","import React, { Component } from 'react';\nimport { Navbar } from '../Navbar';\nimport './Header.scss';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <Navbar />\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport { Navbar } from '../Navbar';\nimport * as ROUTES from '../../constants/routes';\nimport { LandingPage } from '../Landing';\nimport { SignUpPage } from '../SignUp';\nimport { SignInPage } from '../SignIn';\nimport { PasswordForgetPage } from '../PasswordForget';\nimport { HomePage } from '../Home';\nimport { AccountPage } from '../Account';\nimport { AdminPage } from '../Admin';\nimport { withAuthentication } from '../Session';\nimport { Header } from '../Header';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Header />\n        <Switch>\n          <Route exact path={ROUTES.LANDING} component={LandingPage} />\n          <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n          <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n          <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n          <Route path={ROUTES.HOME} render={props => <HomePage {...props} />} />\n          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n          <Route path={ROUTES.ADMIN} component={AdminPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { boardsById } from '../ducks/boards';\nimport { cardsById } from '../ducks/cards';\nimport { listsById } from '../ducks/lists';\nimport { usersById } from '../ducks/users';\nimport { current } from '../ducks/current';\nimport { tasksById } from '../ducks/tasks';\nimport { commentsById } from '../ducks/comments';\n\nexport default combineReducers({\n  boardsById,\n  cardsById,\n  listsById,\n  usersById,\n  current,\n  tasksById,\n  commentsById\n});\n","import * as types from './types';\n\nconst current = (state = {}, action) => {\n  switch (action.type) {\n    case types.SELECT_USER: {\n      const { userId } = action;\n      return {\n        ...state,\n        userId\n      };\n    }\n    case types.SELECT_BOARD: {\n      const { boardId } = action;\n      return {\n        ...state,\n        boardId\n      };\n    }\n    case types.SELECT_LIST: {\n      const { listId } = action;\n      return {\n        ...state,\n        listId\n      };\n    }\n    case types.SELECT_CARD: {\n      const { cardId } = action;\n      return {\n        ...state,\n        cardId\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport { current };\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\n\nexport default history;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport 'normalize.css';\nimport './index.scss';\nimport { App } from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { FirebaseContext } from './components/Firebase';\nimport reducers from './store/reducers';\nimport firebase from './store/firebase';\nimport history from './store/history';\n\nconst store = createStore(reducers, {}, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <FirebaseContext.Provider value={firebase}>\n      <Router basename={process.env.PUBLIC_URL} history={history}>\n        <App />\n      </Router>\n    </FirebaseContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}