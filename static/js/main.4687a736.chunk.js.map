{"version":3,"sources":["assets/feather/feather-sprite.svg","constants/routes.js","components/Main/Main.jsx","pages/Landing/Landing.js","components/Firebase/context.js","components/Firebase/Firebase.js","components/Input/Input.js","components/Button/Button.js","pages/SignUp/SignUpForm.js","pages/SignUp/SignUp.js","pages/PasswordForget/PasswordForgetForm.js","components/UserFormPage/UserFormPage.js","pages/PasswordForget/PasswordForget.js","pages/Login/LoginForm.js","pages/Login/Login.js","components/Session/context.js","store/firebase.js","ducks/lists/actions.js","ducks/lists/types.js","ducks/projects/actions.js","ducks/projects/types.js","ducks/tasks/actions.js","ducks/tasks/types.js","ducks/users/actions.js","ducks/users/types.js","ducks/currentUser/actions.js","ducks/currentUser/types.js","utils/date/constants.js","utils/date/index.js","ducks/currentUser/selectors.js","ducks/currentUser/reducer.js","utils/react/index.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","ducks/users/selectors.js","ducks/users/reducer.js","components/Icon/Icon.js","components/ProjectGrid/ProjectTile.js","ducks/projects/selectors.js","ducks/projects/reducer.js","ducks/selectedProject/index.js","components/ProjectGrid/ProjectGrid.js","components/withOutsideClick/withOutsideClick.js","components/Modal/Modal.js","components/Radio/Radio.js","components/ColorPicker/ColorPicker.js","components/ProjectIcon/ProjectIcon.js","components/Avatar/Avatar.js","constants/keys.js","components/MemberSearch/MemberSearch.js","components/Popover/Popover.js","components/Popover/PopoverWrapper.js","components/MemberAssigner/MemberAssigner.js","components/ProjectComposer/ProjectComposerControlGroup.jsx","components/ProjectComposer/ProjectComposer.js","constants/droppableTypes.js","components/ListComposer/ListComposer.js","components/Toolbar/Toolbar.jsx","components/Menu/Menu.js","components/Menu/MenuItem.js","components/SelectDropdown/SelectDropdown.js","components/Settings/Settings.js","components/DropdownMenu/DropdownMenu.jsx","components/RichTextEditor/utils.js","components/RichTextEditor/RichTextEditor.js","components/NotesEditor/NotesEditor.js","components/Project/ProjectOverview.js","components/Project/Project.js","ducks/selectedTask/index.js","ducks/lists/selectors.js","ducks/lists/reducer.js","ducks/tasks/selectors.js","ducks/tasks/reducer.js","ducks/subtasks/actions.js","ducks/subtasks/types.js","ducks/subtasks/selectors.js","ducks/subtasks/reducer.js","components/TaskComposer/TaskComposer.js","utils/function/index.js","components/Textarea/Textarea.js","components/CardComposer/CardComposer.js","components/Tag/Tag.jsx","components/Badge/Badge.jsx","components/Card/Card.js","components/Checkbox/Checkbox.js","components/ProjectBadge/ProjectBadge.jsx","components/Task/Task.js","components/Task/DraggableTask.js","components/Tasks/Tasks.js","components/List/List.js","components/TaskEditor/TaskEditorSection.js","components/TaskEditor/TaskEditorMoreActions.js","components/Subtask/Subtask.js","components/Subtasks/Subtasks.js","components/SubtaskComposer/SubtaskComposer.js","components/TagsInput/TagsInput.js","components/Calendar/Calendar.js","components/DatePicker/DatePicker.js","components/TaskEditor/TaskEditorPane.js","components/ProjectListDropdown/ProjectListDropdown.js","components/CommentComposer/CommentComposer.js","components/CommentEditor/CommentEditor.js","components/Timestamp/Timestamp.jsx","components/Comment/Comment.js","ducks/comments/actions.js","ducks/comments/types.js","ducks/comments/selectors.js","ducks/comments/reducer.js","components/Comments/Comments.js","components/TaskEditor/TaskEditor.js","components/Project/ProjectContainer.js","components/Dashboard/DashboardPanel.js","components/Dashboard/TasksDueSoon.js","components/Notification/Notification.js","components/Dashboard/Notifications.js","components/Dashboard/Dashboard.js","components/Dashboard/OverdueTasks.js","components/ExpansionPanel/ExpansionPanelHeader.jsx","components/ExpansionPanel/ExpansionPanelContent.jsx","components/ExpansionPanel/ExpansionPanel.jsx","components/Folder/Folder.jsx","components/TaskSettings/TaskSettings.js","components/UserTasks/UserTasks.jsx","pages/UserProfile/UserProfile.jsx","components/Search/SearchBar.js","components/Search/SearchSuggestions.js","components/Search/Mark.js","components/Search/SearchTypeahead.js","components/Search/TagSearchResults.js","components/Search/SearchResults.js","pages/PasswordChange/PasswordChangeForm.js","pages/Account/Account.js","utils/string/index.js","pages/Home/Home.js","pages/Admin/Admin.js","components/Logo/Logo.js","components/Nav/Navbar.js","components/Nav/Sidebar.js","components/Nav/NavLinks.js","components/SignOutButton/SignOutButton.js","components/Topbar/Topbar.js","components/Header/Header.jsx","pages/App/App.jsx","serviceWorker.js","store/reducers.js","store/history.js","store/index.js","index.js"],"names":["module","exports","__webpack_require__","p","HOME","Main","_ref","classes","children","title","react_default","a","createElement","className","concat","main","defaultProps","LandingPage","components_Main_Main","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","signInWithGoogle","provider","app","auth","GoogleAuthProvider","signInWithPopup","then","result","credential","accessToken","user","catch","error","errorCode","code","message","email","alert","console","signInWithGithub","GithubAuthProvider","token","log","createUserWithEmailAndPassword","password","signInWithEmailAndPassword","signOut","passwordReset","sendPasswordResetEmail","passwordUpdate","newPassword","currentUser","updatePassword","getTimestamp","firestore","FieldValue","serverTimestamp","addToArray","value","arrayUnion","removeFromArray","arrayRemove","deleteField","delete","getDocRef","collection","doc","subcollection","arguments","length","undefined","subdoc","docRef","fs","createBatch","batch","queryCollection","path","_ref2","slicedToArray","field","comparisonOperator","where","updateDoc","_ref3","_ref4","newValue","update","objectSpread","lastUpdatedAt","updateBatch","ref","Array","isArray","apply","toConsumableArray","initPresenceDetection","uid","userStatusDBRef","db","isOfflineDB","state","database","ServerValue","TIMESTAMP","isOnlineDB","userStatusFSRef","isOfflineFS","isOnlineFS","on","snapshot","val","onDisconnect","set","getUserDoc","userId","addUser","_ref5","name","username","_ref5$projectIds","projectIds","_ref5$photoURL","photoURL","userRef","newFolderRef","todayFolderRef","upcomingFolderRef","laterFolderRef","miscFolderRef","unscheduledFolderRef","settings","tasks","view","sortBy","folderIds","taskIds","commit","updateUser","addTag","_ref6","taskId","_ref6$color","color","projectCount","userCount","userTagRef","tags","count","merge","projectRef","defineProperty","removeTag","_ref7","_ref7$taskId","shouldCommit","setTagColor","_ref8","tag","getProjectDoc","updateProject","updateProjectName","_ref9","get","docs","forEach","projectName","addProject","_ref10","_ref10$color","_ref10$layout","layout","_ref10$isPrivate","isPrivate","_ref10$memberIds","memberIds","_ref10$notes","notes","add","createdAt","listIds","ownerId","memberId","id","updateListName","_ref11","listId","listName","addList","_ref12","_ref12$projectId","_ref12$userId","deleteList","_ref13","listRef","getTaskDoc","addTask","_ref14","_ref14$dueDate","dueDate","_ref14$folderId","folderId","_ref14$assignedTo","assignedTo","isFolderItem","commentIds","subtaskIds","isCompleted","completedAt","folders","updateTask","setTaskDueDate","_ref16","prevDueDate","newDueDate","_ref16$assignedTo","removeAssignee","_ref17","_ref17$taskId","_ref17$dueDate","addAssignee","_ref18","_ref18$taskId","_ref18$dueDate","deleteTask","_ref19","_ref19$dueDate","_ref19$listId","_ref19$projectId","taskRef","subtaskId","deleteSubtask","folderRef","toMillis","commentId","commentRef","moveTaskToList","_ref20","origListId","newListId","updatedTaskIds","newListName","moveTaskToFolder","_ref21","origFolderId","newFolderId","_ref21$type","type","Date","getSubtaskDoc","addSubtask","_ref22","_ref22$memberIds","_ref22$projectId","_ref22$taskId","_ref22$dueDate","updateSubtask","_ref23","asyncToGenerator","regenerator_default","mark","_callee","_args","wrap","_context","prev","next","stop","_x","_ref24","_ref24$taskId","subtaskRef","addComment","_ref25","from","_ref25$to","to","content","_ref25$createdAt","isPinned","likes","createNotification","source","location","event","publishedAt","_ref26","isActive","initializeApp","Input","_ref$className","onFocus","onChange","onInput","placeholder","isRequired","onBlur","autoComplete","innerRef","hideLabel","label","labelClass","onKeyDown","maxLength","minLength","isReadOnly","Fragment","htmlFor","required","readOnly","tabIndex","Button","_ref$type","onClick","onMouseDown","_ref$color","_ref$size","size","_ref$variant","variant","disabled","_ref$iconOnly","iconOnly","objectWithoutProperties","INITIAL_STATE","passwordOne","passwordTwo","SignUpForm","possibleConstructorReturn","getPrototypeOf","call","onSubmit","e","_this$state","_this$props","history","authUser","setState","push","ROUTES","preventDefault","target","_this$state2","isInvalid","components_Input_Input","components_Button_Button","compose","withRouter","SignUpLink","Link","SignUpPage","SignUp_SignUpForm","PasswordForgetForm","UserFormPage","heading","PasswordForgetLink","PasswordForgetPage","components_UserFormPage_UserFormPage","PasswordForget_PasswordForgetForm","LoginForm","enableGoogleLogin","enableGithubLogin","PasswordForget_PasswordForgetLink","LoginPage","Login_LoginForm","SignUp_SignUpLink","AuthUserContext","loadListsById","listsById","updateList","listData","removeList","_callee2","dispatch","getStore","_getStore","tasksById","_context2","abrupt","_tasksById$taskId","_x3","t0","_x2","fetchListsById","_callee3","_context3","lists","data","sent","_x4","fetchUserLists","_callee4","_context4","_x5","syncProjectLists","_callee6","getState","subscription","_context6","onSnapshot","changes","docChanges","project","projectsById","isLoaded","every","change","setTaskLoadedState","setProjectLoadedState","_callee5","_getState2","changeType","_context5","Promise","all","_x8","_x6","_x7","createList","_callee7","_context7","_x9","loadProjectsById","setTempProjectSettings","key","loadProject","projectData","tempSettings","removeProject","reorderLists","updateProjectTags","syncProject","syncUserProjects","projects","_getState","subtasks","fetchProjectLists","projectLists","loadTasksById","taskData","removeTask","removeTaskTag","userTags","projectTags","isUserTag","_ref7$listId","_getStore$tasksById$t","syncProjectTasks","isInitialLoad","comments","syncUserProjectTasks","assignedTasks","includes","loadAssignedTasks","_getState3","_ref15","isAssignedToUser","isMarkedAsAssigned","addAssignedTask","removeAssignedTask","_x10","syncUserMiscTasks","_callee8","_context8","keys","_getState4","_x13","_x11","_x12","syncTaggedTasks","_callee10","_context10","_callee9","_getState5","_context9","_x16","_x14","_x15","loadUserData","loadUsersById","usersById","userData","removeUser","updateUserStatus","status","fetchUsersById","users","syncUsersById","fetchUserData","syncUserPresence","setCurrentUser","setTempTaskSettings","loadFolders","addFolder","folderData","updateFolder","removeFolder","reorderFolders","loadNotifications","notifications","addNotification","notificationId","notificationData","updateNotification","removeNotification","loadUserTags","createTag","tagId","tagData","updateTag","deleteTag","deleteFolder","loadTasksDueSoon","tasksDueSoon","addTaskDueSoon","removeTaskDueSoon","updateTaskDueSoon","syncTasksDueWithinDays","days","startingDate","setHours","endingDate","timeEnd","setDate","getDate","orderBy","syncFolders","foldersById","exists","syncUserTags","syncUserTasks","_callee12","_context12","_callee11","_context11","_ref27","_ref28","syncCurrentUserData","_ref29","_callee13","_context13","_x17","syncNotifications","_ref30","_callee16","_context16","_ref31","_callee15","notificationsById","_context15","_ref32","_callee14","_ref33","_ref34","_context14","_x21","_x20","_x18","_x19","MONTHS","long","short","daysTotal","WEEK_DAYS","narrow","getMonthDays","monthIndex","year","isLeapYear","getPrevMonth","month","getNextMonth","getMonthDates","monthDays","monthFirstDay","getDay","getMonthFirstDay","_getPrevMonth","prevMonth","prevMonthYear","prevMonthDays","daysFromPrevMonth","daysFromNextMonth","prevMonthDates","map","n","i","day","thisMonthDates","nextMonthDates","isDate","date","prototype","toString","getSimpleDate","dateObj","getMonth","getFullYear","isSimpleDate","isSameDate","base","dateDay","dateMonth","dateYear","baseDay","baseMonth","baseYear","padZero","padStart","toSimpleDateString","simpleDate","toSimpleDateObj","dateString","dateArr","split","isSDSFormat","test","isPriorDate","toDateString","options","useRelative","format","weekday","isToday","today","isYesterday","isTomorrow","num","timeStart","isWithinDays","isThisYear","slice","join","trim","toTimeString","_ref$format","_ref$hour","hour12","TypeError","hours","getHours","minutes","getMinutes","seconds","getSeconds","timeString","unit","digits","h","getCurrentUser","getCurrentUserId","getFolders","getNotifications","getNotificationsArray","getMillis","obj","now","sort","b","getTaskSettings","getTempTaskSettings","getAssignedTasks","getFolderIds","getSortedFilteredTaskGroups","_tempSettings$tasks","projectTasks","reduce","tasksByProject","folder","filter","userPermissions","enableNameChange","enableTaskAdd","enableDragNDrop","miscFolder","noProject","dueDates","dueTasks","tasksByDueDate","_tasksById2$taskId","isPastDue","toDate","pastDue","unscheduled","noDueDate","restOfDueTasks","sortedDueDates","getFolder","getTasksDueWithinDays","task","dueDateMS","getOverdueTasks","overdueTasks","getMergedProjectTags","mergedTags","getAllMergedTags","getCurrentUserProjects","getDisplayName","WrappedComponent","displayName","generateKey","Math","random","withAuthentication","WithAuthentication","_Component","inherits","createClass","_componentDidMount","_this2","onAuthStateChanged","unsubscribe","listener","Session_context","Provider","connect","currentUserSelectors","currentUserActions","withAuthorization","condition","WithAuthorization","getUsersById","getUserData","getUserTaskIds","getUsersArray","getMembersArray","action","reducer_toPropertyKey","isOnline","Icon","width","height","xmlns","xmlnsXlink","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","xlinkHref","featherIcons","ProjectTile","components_Icon_Icon","getProjectsById","getProjectsArray","getProject","getProjectTags","getProjectName","getProjectColor","getProjectLoadedState","getProjectLists","getTempProjectSettings","listCount","projects_reducer_toPropertyKey","selectProject","getSelectedProjectId","selectedProject","ProjectGrid","openProjectComposer","ProjectGrid_ProjectTile","ownProps","projectSelectors","selectProjectAction","withOutsideClick","WithOutsideClick","handleTouch","isTouchEnabled","document","removeEventListener","handleOutsideClick","addEventListener","setRef","component","setInstance","instance","Error","contains","onOutsideClick","stopPropagation","Modal","onModalClose","_this$props2","onModalClick","_this$props2$size","modal","button","Radio","_ref$classes","radio","inputRef","isChecked","rest","checked","ColorPicker","selectedColor","handleColorChange","selectColor","style","colorPicker","display","components_Radio_Radio","ProjectIcon","Avatar","getUserInitials","fullName","charAt","toUpperCase","imgSrc","imgProps","avatar","src","alt","img","backgroundColor","BACKSPACE","ENTER","TAB","ARROW_DOWN","ARROW_UP","MemberSearch","query","selectedMember","selectedIndex","filteredList","matchUser","regExp","RegExp","onReset","newIndex","findIndex","item","persistSelectedMember","lastIndex","nextIndex","prevIndex","selectMember","onSelectMember","onClose","inputEl","focus","prevProps","_this$props3","assignedMembers","anchor","position","anchorRect","getBoundingClientRect","top","left","wrapper","input","el","list","isAssigned","indexOf","Avatar_Avatar_Avatar","avatarPlaceholder","info","noMatch","Popover","isVisible","PopoverWrapper","onPopoverClose","toggleOpen","prevState","handleClose","matches","align","onWrapperClick","buttonProps","anchorEl","popoverWrapperStyle","offsetTop","offsetLeft","outer","Popover_Popover","inner","popover","MemberAssigner","isMemberSearchActive","toggleMemberSearch","hideMemberSearch","members","memberSearchIsDisabled","memberAssigner","member","Popover_PopoverWrapper","popoverWrapper","components_MemberSearch_MemberSearch","userSelectors","ProjectComposerControlGroup","privacy","ProjectComposer","isColorPickerActive","reset","setColor","toggleColorPicker","hideColorPicker","handleMemberAssignment","components_Modal_Modal","ProjectComposer_ProjectComposerControlGroup","components_ProjectIcon_ProjectIcon","components_ColorPicker_ColorPicker","option","components_MemberAssigner_MemberAssigner","LIST","TASK","FOLDER","ListComposer","clear","toggle","blur","projectsArray","Toolbar","Menu","menuRef","MenuItem","SelectDropdown","toggleDropdown","closeDropdown","dropdown","components_Menu_Menu","menu","Menu_MenuItem","data-label","Settings","icon","onToggle","onSave","setting","fieldset","radioLabel","select","SelectDropdown_SelectDropdown_SelectDropdown","dropdownWrapper","selectOption","selectLabel","dropdownButton","DropdownMenu","links","activeLink","aria-label","link","href","NavLink","text","getUserIdsFromMentions","getInlinesByType","mention","toJS","getMentionedUsers","DEFAULT_BLOCK","schema","inlines","isVoid","RichTextEditor","Value","fromJSON","initialValue","isMentionsListVisible","isFocused","userSuggestions","mentions","isEmpty","isEqual","toJSON","hasChanges","prevValue","hasMark","activeMarks","some","hasInline","inline","hasBlock","_this$state$value","blocks","parent","getParent","first","node","renderMark","editor","attributes","renderNode","isMentionsEnabled","endOffset","selection","end","offset","lastChar","endText","ctrlKey","metaKey","toggleMark","firstText","getFirstText","nextText","getNextText","deleteBackward","setTimeout","focusBlock","object","moveToRangeOfNode","setBlocks","unwrapBlock","normalize","toggleMentionsList","insertMention","getMention","onClickMark","onClickInline","startOffset","start","selectedText","startText","insertText","moveToEndOfText","moveTo","onClickBlock","assertThisInitialized","isList","isType","block","getClosest","wrapBlock","textBefore","exec","isBlurred","moveToRangeOfDocument","onUpdate","selectedRange","insertInlineAtRange","nodes","leaves","marks","addOns","_this$state3","container","components_Toolbar_Toolbar","toolbar","addOn","slate_react_es","NotesEditor","updateNotes","components_RichTextEditor_RichTextEditor","ProjectOverviewSection","ProjectOverview","ProjectOverview_ProjectOverviewSection","components_NotesEditor_NotesEditor","Project","prevName","isListComposerActive","isProjectSettingsActive","toggleListComposer","setInputRef","listComposerInput","onNameChange","onNameBlur","activateListComposer","saveProjectSettings","_firebase$updateDoc","tempProjectSettings","closeSettingsMenu","_e$target","toggleSettingsMenu","url","match","pathname","route","DropdownMenu_DropdownMenu_DropdownMenu","Switch","Route","render","components_Settings_Settings","active","completed","none","board","react_beautiful_dnd_esm","droppableId","droppableTypes","direction","provided","droppableProps","components_ListComposer_ListComposer","Project_ProjectOverview","params","projectActions","selectTask","getSelectedTaskId","selectedTask","getSelectedTask","getListsById","getList","getListName","getSelectedProjectLists","lists_reducer_toPropertyKey","getTasksById","getTasksArray","getTasksMatchingQuery","getTask","getListTasks","getFolderTasks","getTaskTags","taskTags","taskTag","getTaskLoadedState","getTaggedTasks","getTasksByViewFilter","tasksByView","getTaskIdsByViewFilter","taskIdsByView","getSortedTaskIds","taskA","taskB","dueDateA","dueDateB","getAssignees","getCompletedSubtasks","subtasksById","subtask","tasks_reducer_toPropertyKey","loadSubtasksById","subtaskData","removeSubtask","syncTaskSubtasks","fetchUserSubtasks","syncProjectSubtasks","getSubtasksById","getSubtasksArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","getSimpleSubtasks","_subtasksById$subtask","getActiveSubtasks","subtasks_reducer_toPropertyKey","TaskComposer","resetForm","debounce","delay","fn","timerId","_len2","args","_key2","clearTimeout","Textarea","autoHeightResize","isAutoHeightResizeEnabled","minHeight","scrollHeight","handleResize","window","onDragStart","onMouseUp","onMouseMove","CardComposer","Textarea_Textarea_Textarea","updateProjectsById","Tag","onDelete","Badge","Card","nextProps","index","completedSubtasks","dueDateStr","isDueToday","isDueTmrw","draggableId","draggableProps","dragHandleProps","headerEl","components_Tag_Tag","components_Badge_Badge","memberName","taskSelectors","selectTaskAction","Checkbox","ProjectBadge","badge","Task","pointX","pointY","newName","toggleCompleted","handleTaskClick","_this$props4","_this$props5","pageX","pageY","innerWidth","textarea","setTextareaRef","_this$props6","selectedProjectId","components_Checkbox_Checkbox","components_ProjectBadge_ProjectBadge","taskActions","DraggableTask","isDragDisabled","components_Task_Task","Tasks","scrollToBottom","listEnd","scrollIntoView","behavior","dropType","isBoardLayout","components_Card_Card","Task_DraggableTask","isDraggingOver","float","List","isMoreActionsMenuVisible","handleListDelete","toggleMoreActionsMenu","closeMoreActionsMenu","applySortRule","taskIdsByViewFilter","isRestricted","viewFilter","isBoardView","Tasks_Tasks","listSelectors","listActions","TaskEditorSection","TaskEditorMoreActions","onMenuClick","data-action","Subtask","isDragging","portal","body","appendChild","removeChild","usePortal","ReactDOM","createPortal","Subtasks","isLoading","moveSubtask","destination","updatedSubtaskIds","splice","onDragEnd","components_Subtask_Subtask","subtaskSelectors","subtaskActions","SubtaskComposer","composer","iconWrapper","form","TagsInput","selectedTag","currentTag","focusedTag","hasExactMatch","matchTag","tagSuggestions","persistSelectedTag","assignedTags","isProjectTag","projectTag","userTag","setCurrentTagRef","onClickSuggestion","dataset","hasTags","colorPickerStyle","_this$currentTag","offsetWidth","offsetHeight","data-tag","Calendar","isMonthsDropdownActive","isYearsDropdownActive","goToNextMonth","onMonthClick","goToPrevMonth","toggleMonthsDropdown","toggleYearsDropdown","closeYearsDropdown","closeMonthsDropdown","selectMonth","selectYear","onYearClick","selectedDate","onDayClick","dates","years","startingYear","getNextYears","calendar","yearOption","monthOption","weekDay","isSelectedDate","DatePicker","currentMonth","currentYear","resetCalendar","selectDate","newDate","setCurrentMonth","setCurrentYear","updateDateString","currentDueDate","closeDatePicker","clearDueDate","Calendar_Calendar_Calendar","TaskEditorPane","ProjectListDropdown","selectedList","CommentComposer","CommentEditor","updateComment","Timestamp","secondsElapsed","tick","absoluteMin","clearInterval","interval","getAbsoluteMinSeconds","_absoluteMin","getDateString","isRelative","dateOnly","timeOptions","dateOptions","absoluteDateString","floor","getTime","setInterval","Comment","isCommentEditorActive","handleLike","currentUserId","likesCount","Timestamp_Timestamp_Timestamp","components_CommentEditor_CommentEditor","loadCommentsById","commentsById","commentData","removeComment","fetchCommentsById","fetchTaskComments","fetchUserComments","syncTaskComments","getCommentsById","getComment","getCommentsArray","comment","getTaskComments","comments_reducer_toPropertyKey","Comments","components_Comment_Comment","commentSelectors","commentActions","TaskEditorWrapper","handleTaskEditorClose","components_TaskEditor_TaskEditorPane","TaskEditor","isDatePickerActive","viewportWidth","setViewportWidth","taskKey","currentValue","updatedValue","handleMoreActions","assignMember","setDueDate","toggleDatePicker","moveToList","_this$props7","hasSubtasks","hasComments","taskDueDate","TaskEditor_TaskEditorWrapper","TaskEditor_TaskEditorMoreActions","TaskEditor_TaskEditorSection","components_ProjectListDropdown_ProjectListDropdown","DatePicker_DatePicker_DatePicker","datePickerEl","components_TagsInput_TagsInput","components_Subtasks_Subtasks","components_SubtaskComposer_SubtaskComposer","components_Comments_Comments","components_CommentComposer_CommentComposer","ProjectContainer","_tempProjectSettings$","isMovedWithinList","updatedListIds","closeTaskEditor","listeners","selectedTaskId","func","isTaskEditorOpen","components_Project_Project","components_List_List","components_TaskEditor_TaskEditor","DashboardPanel","Dashboard_DashboardPanel","Notification","onTaskClick","getMessage","Notifications","notification","components_Notification_Notification","Dashboard","toggleProjectComposer","Dashboard_TasksDueSoon","components_Dashboard_Notifications","components_ProjectGrid_ProjectGrid","ExpansionPanelHeader","role","onDragOver","ExpansionPanelContent","ExpansionPanel","isExpanded","toggleContent","header","propsIsExpanded","panel","aria-expanded","ExpansionPanel_ExpansionPanelHeader","ExpansionPanel_ExpansionPanelContent","Folder","toggleFolder","tempTaskSettings","ExpansionPanel_ExpansionPanel","components_TaskComposer_TaskComposer","enableDragnDrop","TaskSettings","filters","sortRule","filterOption","isDropdownVisible","hideDropdown","isDropdownActive","find","sortOption","UserTasks","isTaskSettingsMenuVisible","isSortRuleDropdownVisible","origIndex","isMovedWithinFolder","updatedFolderIds","saveTaskSettings","_tempSettings$tasks2","closeTaskSettingsMenu","hideSortRuleDropdown","toggleTaskSettingsMenu","toggleSortRuleDropdown","taskGroups","_tempSettings$tasks3","components_TaskSettings_TaskSettings","taskGroup","components_Folder_Folder","_ref2$view","_ref2$sortBy","UserProfile","SearchBar","SearchSuggestions","items","selectedItem","category","renderMatch","isSelected","data-id","data-project-id","Mark","fontWeight","SearchTypeahead","isSearchBarExpanded","persistSelectedItem","matchItem","handleSubmit","openTask","openProject","openTaggedTasks","onClickProject","onClickTask","_e$target$dataset","onClickTag","handleClick","toggleSearchBar","suggestions","toggleSuggestions","highlightMatch","Search_Mark","suggestionsRef","_this$state4","SearchBar_SearchBar","Search_SearchSuggestions","TagSearchResults","taggedTasks","SearchResults","PasswordChangeForm","PasswordChange_PasswordChangeForm","getParams","string","pair","_pair$split","_pair$split2","decodeURIComponent","HomePage","isProjectComposerOpen","_this3","components_ProjectComposer_ProjectComposer","exact","components_Dashboard_Dashboard","Project_ProjectContainer","components_UserTasks_UserTasks","pages_UserProfile_UserProfile","search","components_Search_SearchResults","q","Search_TagSearchResults","AccountPage","userActions","AdminPage","loading","Logo","Navbar","isMobileNavVisible","toggleMobileNavVisibility","minWidth","navLinksEl","isMobileView","navbar","navEl","components_Logo_Logo","SidebarIcon","NavLinksNonAuth","NavLinksAuth","Sidebar_SidebarIcon","components_Search_SearchTypeahead","components_SignOutButton_SignOutButton","Header","isNavExpanded","toggleNav","isLoginPage","isSignUpPage","components_Nav_Sidebar","NavLinks_NavLinksAuth","components_Topbar_Topbar","Navbar_Navbar","NavLinks_NavLinksNonAuth","components_Header_Header","Boolean","hostname","combineReducers","_state$tags","restOfTags","_toPropertyKey","_state$folders","restOfFolders","_state$notifications","restOfNotifications","currentAssignedTasks","_state$tasksDueSoon","restOfTasks","createBrowserHistory","basename","store","createStore","reducers","applyMiddleware","thunk","es","context","Router","pages_App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4687a736.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/feather-sprite.453b829f.svg\";","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const LOG_IN = '/login';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const BASE = '/0/';\nexport const GLOBAL_SEARCH = '/0/search';\nexport const TASK_SEARCH = '/0/tasks';\nexport const ADMIN = '/admin';\nexport const HOME = '/0/home/:id';\nexport const ACCOUNT = '/0/:id/account';\nexport const PROJECT = '/0/projects/:id';\nexport const PROJECT_TASKS = '/0/projects/:id/tasks';\nexport const PROJECT_OVERVIEW = '/0/projects/:id/overview';\nexport const USER_PROJECTS = '/0/:id/projects';\nexport const USER_TASKS = '/0/:id/tasks';\nexport const USER_PROFILE = '/0/:id/profile';\n","import React from 'react';\nimport './Main.scss';\n\nconst Main = ({ classes, children, title }) => (\n  <main className={`main ${classes.main || ''}`}>\n    <h1 className={`main__title ${classes.title || ''}`}>{title}</h1>\n    {children}\n  </main>\n);\n\nMain.defaultProps = {\n  classes: {\n    main: '',\n    title: ''\n  }\n};\n\nexport default Main;\n","import React from 'react';\nimport { Main } from '../../components/Main';\n\nconst LandingPage = ({ title, children }) => (\n  <Main title=\"Workflow\" classes={{ main: 'landing' }}>\n  </Main>\n);\n\nexport default LandingPage;\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n    this.auth = app.auth();\n    this.fs = app.firestore();\n    this.db = app.database();\n  }\n\n  // Auth API\n\n  get currentUser() {\n    return this.auth.currentUser;\n  }\n\n  signInWithGoogle = () => {\n    const provider = new app.auth.GoogleAuthProvider();\n    this.auth\n      .signInWithPopup(provider)\n      .then(result => {\n        if (result.credential) {\n          const token = result.credential.accessToken;\n          const { user } = result;\n        }\n      })\n      .catch(error => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        const email = error.email;\n        const credential = error.credential;\n\n        if (errorCode === 'auth/account-exists-with-different-credential') {\n          alert(\n            'You have already signed up with a different auth provider for that email.'\n          );\n        } else {\n          console.error(error);\n        }\n      });\n  };\n\n  signInWithGithub = () => {\n    const provider = new app.auth.GithubAuthProvider();\n    this.auth\n      .signInWithPopup(provider)\n      .then(result => {\n        if (result.credential) {\n          const token = result.credential.accessToken;\n          console.log(token);\n          const { user } = result;\n        }\n      })\n      .catch(error => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        const email = error.email;\n        const credential = error.credential;\n\n        if (errorCode === 'auth/account-exists-with-different-credential') {\n          alert(\n            'You have already signed up with a different auth provider for that email.'\n          );\n        } else {\n          console.error(error);\n        }\n      });\n  };\n\n  createUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  signInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  signOut = () => this.auth.signOut();\n\n  passwordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  passwordUpdate = newPassword =>\n    this.auth.currentUser.updatePassword(newPassword);\n\n  // Utility API\n\n  getTimestamp = () => app.firestore.FieldValue.serverTimestamp();\n\n  addToArray = value => app.firestore.FieldValue.arrayUnion(value);\n\n  removeFromArray = value => app.firestore.FieldValue.arrayRemove(value);\n\n  deleteField = () => app.firestore.FieldValue.delete();\n\n  getDocRef = (collection, doc, subcollection = null, subdoc = null) => {\n    const docRef = this.fs.doc(`${collection}/${doc}`);\n    return subcollection && subdoc\n      ? docRef.collection(subcollection).doc(subdoc)\n      : docRef;\n  };\n\n  createBatch = () => this.fs.batch();\n\n  queryCollection = (path, [field, comparisonOperator, value]) => {\n    return this.fs.collection(path).where(field, comparisonOperator, value);\n  };\n\n  updateDoc = ([collection, doc, subcollection, subdoc], newValue = {}) =>\n    this.getDocRef(collection, doc, subcollection, subdoc).update({\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  updateBatch = (batch, ref, newValue = {}) => {\n    const doc = Array.isArray(ref) ? this.getDocRef(...ref) : ref;\n    return batch.update(doc, {\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  // User Presence\n\n  initPresenceDetection = uid => {\n    const userStatusDBRef = this.db.ref(`/status/${uid}`);\n    const isOfflineDB = {\n      state: 'offline',\n      lastUpdatedAt: app.database.ServerValue.TIMESTAMP\n    };\n\n    const isOnlineDB = {\n      state: 'online',\n      lastUpdatedAt: app.database.ServerValue.TIMESTAMP\n    };\n\n    const userStatusFSRef = this.fs.doc(`/status/${uid}`);\n    const isOfflineFS = {\n      state: 'offline',\n      lastUpdatedAt: this.getTimestamp()\n    };\n\n    const isOnlineFS = {\n      state: 'online',\n      lastUpdatedAt: this.getTimestamp()\n    };\n\n    this.db.ref('.info/connected').on('value', snapshot => {\n      if (snapshot.val() === false) {\n        userStatusFSRef.set(isOfflineFS);\n        return;\n      }\n\n      userStatusDBRef\n        .onDisconnect()\n        .set(isOfflineDB)\n        .then(() => {\n          userStatusDBRef.set(isOnlineDB);\n          userStatusFSRef.set(isOnlineFS);\n        });\n    });\n  };\n\n  // User API\n\n  getUserDoc = userId => this.fs.collection('users').doc(userId);\n\n  addUser = ({\n    userId,\n    name,\n    username,\n    email,\n    projectIds = [],\n    photoURL = null\n  }) => {\n    const batch = this.fs.batch();\n    const userRef = this.getDocRef('users', userId);\n    const newFolderRef = this.getDocRef('users', userId, 'folders', '0');\n    const todayFolderRef = this.getDocRef('users', userId, 'folders', '1');\n    const upcomingFolderRef = this.getDocRef('users', userId, 'folders', '2');\n    const laterFolderRef = this.getDocRef('users', userId, 'folders', '3');\n    const miscFolderRef = this.getDocRef('users', userId, 'folders', '4');\n    const unscheduledFolderRef = this.getDocRef(\n      'users',\n      userId,\n      'folders',\n      '5'\n    );\n\n    batch.set(userRef, {\n      userId,\n      name,\n      username,\n      email,\n      projectIds,\n      photoURL,\n      settings: {\n        tasks: {\n          view: 'all',\n          sortBy: 'folder'\n        }\n      },\n      folderIds: [0, 1, 2, 3]\n    });\n\n    batch.set(newFolderRef, {\n      name: 'New Tasks',\n      taskIds: []\n    });\n\n    batch.set(todayFolderRef, {\n      name: 'Today',\n      taskIds: []\n    });\n\n    batch.set(upcomingFolderRef, {\n      name: 'Upcoming',\n      taskIds: []\n    });\n\n    batch.set(laterFolderRef, {\n      name: 'Later',\n      taskIds: []\n    });\n\n    batch.set(miscFolderRef, {\n      name: 'No Project',\n      taskIds: []\n    });\n\n    batch.set(unscheduledFolderRef, {\n      name: 'No Due Date',\n      taskIds: []\n    });\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log('User added');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  updateUser = (userId, newValue = {}) =>\n    this.fs\n      .collection('users')\n      .doc(userId)\n      .update(newValue);\n\n  // Tags API\n\n  addTag = ({\n    taskId,\n    userId,\n    name,\n    projectId,\n    color = 'default',\n    projectCount,\n    userCount\n  }) => {\n    const batch = this.fs.batch();\n    const userTagRef = this.getDocRef('users', userId, 'tags', name);\n\n    this.updateBatch(batch, ['tasks', taskId], {\n      tags: this.addToArray(name)\n    });\n\n    batch.set(\n      userTagRef,\n      {\n        name,\n        color,\n        count: userCount\n      },\n      { merge: true }\n    );\n\n    if (projectId) {\n      const projectRef = this.getDocRef('projects', projectId);\n\n      batch.set(\n        projectRef,\n        {\n          tags: {\n            [name]: {\n              name,\n              color,\n              count: projectCount\n            }\n          },\n          lastUpdatedAt: this.getTimestamp()\n        },\n        { merge: true }\n      );\n    }\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log('tag added');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  removeTag = (\n    { taskId = null, name, userId, userCount, projectId, projectCount },\n    batch = this.createBatch(),\n    shouldCommit = true\n  ) => {\n    if (taskId) {\n      this.updateBatch(batch, ['tasks', taskId], {\n        tags: this.removeFromArray(name)\n      });\n    }\n\n    if (userCount !== null) {\n      const userTagRef = this.getDocRef('users', userId, 'tags', name);\n      if (userCount > 0) {\n        this.updateBatch(batch, userTagRef, {\n          count: userCount\n        });\n      } else {\n        batch.delete(userTagRef);\n      }\n    }\n\n    if (projectId) {\n      const projectRef = this.getDocRef('projects', projectId);\n      if (projectCount < 1) {\n        this.updateBatch(batch, projectRef, {\n          [`tags.${name}`]: this.deleteField()\n        });\n      } else {\n        this.updateBatch(batch, projectRef, {\n          [`tags.${name}.count`]: projectCount\n        });\n      }\n    }\n    if (shouldCommit) {\n      return batch\n        .commit()\n        .then(() => {\n          console.log('Tag deleted');\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    }\n  };\n\n  setTagColor = ({ userId, projectId, tag, color }) => {\n    const batch = this.fs.batch();\n    const userTagRef = this.getDocRef('users', userId, 'tags', tag);\n    if (projectId) {\n      const projectRef = this.getDocRef('projects', projectId);\n      batch.set(\n        projectRef,\n        {\n          tags: {\n            [tag]: {\n              color\n            }\n          },\n          lastUpdatedAt: this.getTimestamp()\n        },\n        { merge: true }\n      );\n    }\n\n    this.updateBatch(batch, userTagRef, {\n      color\n    });\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log('tag color updated');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  // Project API\n\n  getProjectDoc = projectId => this.fs.collection('projects').doc(projectId);\n\n  updateProject = (projectId, newValue = {}) =>\n    this.getProjectDoc(projectId).update({\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  updateProjectName = ({ projectId, name }) => {\n    const batch = this.createBatch();\n\n    this.updateBatch(batch, ['projects', projectId], {\n      name\n    });\n\n    // Update tasks assigned to list\n    this.fs\n      .collection('tasks')\n      .where('projectId', '==', projectId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.update(doc.ref, {\n            projectName: name\n          });\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('project name updated');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  addProject = ({\n    userId,\n    name,\n    color = 'default',\n    layout = 'board',\n    isPrivate = false,\n    memberIds = [],\n    notes = null\n  }) => {\n    this.fs\n      .collection('projects')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastUpdatedAt: null,\n        listIds: [],\n        ownerId: userId,\n        settings: {\n          isPrivate,\n          layout,\n          tasks: {\n            view: 'all',\n            sortBy: 'none'\n          }\n        },\n        memberIds,\n        notes,\n        color,\n        name\n      })\n      .then(ref => {\n        const batch = this.createBatch();\n\n        memberIds.forEach(memberId => {\n          this.updateBatch(batch, ['users', memberId], {\n            projectIds: this.addToArray(ref.id)\n          });\n          batch.set(this.getDocRef('users', memberId, 'folders', ref.id), {\n            name,\n            taskIds: []\n          });\n        });\n\n        return batch\n          .commit()\n          .then(() => {\n            console.log(`Created Project: ${name}`);\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  // List API\n\n  updateListName = ({ listId, name }) => {\n    const batch = this.createBatch();\n\n    this.updateBatch(batch, ['lists', listId], {\n      name\n    });\n\n    // Update tasks assigned to list\n    this.fs\n      .collection('tasks')\n      .where('listId', '==', listId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.update(doc.ref, {\n            listName: name\n          });\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('List name updated.');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  addList = ({ name, projectId = null, userId = null }) => {\n    this.fs\n      .collection('lists')\n      .add({\n        ownerId: userId,\n        createdAt: this.getTimestamp(),\n        lastUpdatedAt: null,\n        taskIds: [],\n        projectId,\n        name\n      })\n      .then(ref => {\n        if (projectId) {\n          this.updateProject(projectId, {\n            listIds: this.addToArray(ref.id)\n          });\n        }\n        if (userId) {\n          this.updateUser(userId, {\n            listIds: this.addToArray(ref.id)\n          });\n        }\n      });\n  };\n\n  deleteList = ({ listId, projectId }) => {\n    const batch = this.createBatch();\n    const listRef = this.getDocRef('lists', listId);\n\n    // Delete list\n    batch.delete(listRef);\n\n    // Remove list id from project\n    this.updateBatch(batch, ['projects', projectId], {\n      listIds: this.removeFromArray(listId)\n    });\n\n    // Delete tasks assigned to list\n    this.fs\n      .collection('tasks')\n      .where('listId', '==', listId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('list deleted');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  // Task API\n\n  getTaskDoc = taskId => this.fs.collection('tasks').doc(taskId);\n\n  addTask = ({\n    name,\n    projectId,\n    projectName,\n    listId,\n    listName,\n    userId,\n    dueDate = null,\n    folderId = null,\n    assignedTo = []\n  }) => {\n    const isFolderItem = !!folderId;\n\n    this.fs\n      .collection('tasks')\n      .add({\n        ownerId: userId,\n        createdAt: this.getTimestamp(),\n        lastUpdatedAt: null,\n        commentIds: [],\n        subtaskIds: [],\n        isCompleted: false,\n        completedAt: null,\n        notes: null,\n        assignedTo: isFolderItem ? [userId] : assignedTo,\n        folders: isFolderItem\n          ? {\n              [userId]: '0'\n            }\n          : {},\n        dueDate,\n        listId,\n        listName,\n        projectId,\n        projectName,\n        name\n      })\n      .then(ref => {\n        if (isFolderItem) {\n          const batch = this.createBatch();\n\n          if (!projectId && folderId !== '4') {\n            this.updateBatch(batch, ['users', userId, 'folders', '4'], {\n              taskIds: this.addToArray(ref.id)\n            });\n          }\n\n          if (!dueDate && folderId !== '5') {\n            this.updateBatch(batch, ['users', userId, 'folders', '5'], {\n              taskIds: this.addToArray(ref.id)\n            });\n          }\n\n          if (dueDate) {\n            console.log(`${+dueDate}`);\n            batch.set(\n              this.getDocRef('users', userId, 'folders', `${+dueDate}`),\n              {\n                taskIds: this.addToArray(ref.id)\n              },\n              { merge: true }\n            );\n          }\n\n          if (folderId !== '0') {\n            this.updateBatch(batch, ['users', userId, 'folders', '0'], {\n              taskIds: this.addToArray(ref.id)\n            });\n          }\n\n          this.updateBatch(batch, ['users', userId, 'folders', folderId], {\n            taskIds: this.addToArray(ref.id)\n          });\n\n          return batch\n            .commit()\n            .then(() => {\n              console.log('Added task');\n            })\n            .catch(error => {\n              console.error(error);\n            });\n        } else {\n          this.updateDoc(['lists', listId], {\n            taskIds: this.addToArray(ref.id)\n          });\n        }\n      });\n  };\n\n  updateTask = (taskId, newValue = {}) => {\n    console.log('task updated');\n    this.getTaskDoc(taskId).update({\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  setTaskDueDate = ({ taskId, prevDueDate, newDueDate, assignedTo = [] }) => {\n    const batch = this.createBatch();\n\n    this.updateBatch(batch, ['tasks', taskId], {\n      dueDate: newDueDate\n    });\n\n    if (assignedTo.length > 0) {\n      assignedTo.forEach(userId => {\n        if (prevDueDate === null) {\n          this.updateBatch(batch, ['users', userId, 'folders', '5'], {\n            taskIds: this.removeFromArray(taskId)\n          });\n        } else {\n          batch.set(\n            this.getDocRef('users', userId, 'folders', `${+prevDueDate}`),\n            {\n              taskIds: this.removeFromArray(taskId)\n            },\n            { merge: true }\n          );\n        }\n\n        if (newDueDate === null) {\n          this.updateBatch(batch, ['users', userId, 'folders', '5'], {\n            taskIds: this.addToArray(taskId)\n          });\n        } else {\n          batch.set(\n            this.getDocRef('users', userId, 'folders', `${+newDueDate}`),\n            {\n              taskIds: this.addToArray(taskId)\n            },\n            { merge: true }\n          );\n        }\n      });\n    }\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log('Set task due date');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  removeAssignee = (\n    { projectId, userId, folderId, taskId = null, dueDate = null },\n    batch = this.createBatch(),\n    shouldCommit = true\n  ) => {\n    if (!taskId) {\n      this.updateBatch(batch, ['users', userId], {\n        projectIds: this.removeFromArray(projectId)\n      });\n      this.updateBatch(batch, ['projects', projectId], {\n        memberIds: this.removeFromArray(userId)\n      });\n    } else {\n      this.updateBatch(batch, ['users', userId, 'folders', folderId], {\n        taskIds: this.removeFromArray(taskId)\n      });\n\n      if (!dueDate) {\n        this.updateBatch(batch, ['users', userId, 'folders', '5'], {\n          taskIds: this.removeFromArray(taskId)\n        });\n      } else {\n        this.updateBatch(batch, ['users', userId, 'folders', `${+dueDate}`], {\n          taskIds: this.removeFromArray(taskId)\n        });\n      }\n      if (projectId) {\n        this.updateBatch(batch, ['users', userId, 'folders', projectId], {\n          taskIds: this.removeFromArray(taskId)\n        });\n      }\n    }\n\n    if (shouldCommit) {\n      if (taskId) {\n        this.updateBatch(batch, ['tasks', taskId], {\n          assignedTo: this.removeFromArray(userId),\n          [`folders.${userId}`]: this.deleteField()\n        });\n      }\n\n      return batch\n        .commit()\n        .then(() => {\n          console.log('Removed assignee');\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    }\n  };\n\n  addAssignee = ({\n    projectId,\n    projectName,\n    userId,\n    taskId = null,\n    dueDate = null\n  }) => {\n    const batch = this.fs.batch();\n\n    this.updateBatch(batch, ['projects', projectId], {\n      memberIds: this.addToArray(userId)\n    });\n\n    this.updateBatch(batch, ['users', userId], {\n      projectIds: this.addToArray(projectId)\n    });\n\n    if (taskId) {\n      batch.set(\n        this.getDocRef('users', userId, 'folders', projectId),\n        {\n          name: projectName,\n          taskIds: this.addToArray(taskId)\n        },\n        { merge: true }\n      );\n\n      this.updateBatch(batch, ['users', userId, 'folders', '0'], {\n        taskIds: this.addToArray(taskId)\n      });\n      this.updateBatch(batch, ['tasks', taskId], {\n        assignedTo: this.addToArray(userId),\n        [`folders.${userId}`]: '0'\n      });\n\n      if (!dueDate) {\n        this.updateBatch(batch, ['users', userId, 'folders', '5'], {\n          taskIds: this.addToArray(taskId)\n        });\n      } else {\n        batch.set(\n          this.getDocRef('users', userId, 'folders', `${+dueDate}`),\n          {\n            taskIds: this.addToArray(taskId)\n          },\n          { merge: true }\n        );\n      }\n    }\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log('Added assignee');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  deleteTask = (\n    {\n      taskId,\n      assignedTo,\n      folders,\n      subtaskIds,\n      commentIds,\n      dueDate = null,\n      listId = null,\n      projectId = null\n    },\n    batch = this.createBatch(),\n    shouldCommit = true\n  ) => {\n    const taskRef = this.getDocRef('tasks', taskId);\n    batch.delete(taskRef);\n\n    if (listId) {\n      const listRef = this.getDocRef('lists', listId);\n      this.updateBatch(batch, listRef, {\n        taskIds: this.removeFromArray(taskId)\n      });\n    }\n\n    // Delete subtasks\n    if (subtaskIds.length > 0) {\n      subtaskIds.forEach(subtaskId => {\n        this.deleteSubtask({ subtaskId }, batch, false);\n      });\n      console.log('1. Subtasks deleted.');\n    }\n\n    // Delete task assignments\n    if (assignedTo.length > 0) {\n      assignedTo.forEach(userId => {\n        const folderId = folders[userId];\n        const folderRef = this.getDocRef('users', userId, 'folders', folderId);\n        this.updateBatch(batch, folderRef, {\n          taskIds: this.removeFromArray(taskId)\n        });\n\n        if (!projectId) {\n          this.updateBatch(batch, ['users', userId, 'folders', '4'], {\n            taskIds: this.removeFromArray(taskId)\n          });\n        } else {\n          this.updateBatch(batch, ['users', userId, 'folders', projectId], {\n            taskIds: this.removeFromArray(taskId)\n          });\n        }\n\n        if (!dueDate) {\n          this.updateBatch(batch, ['users', userId, 'folders', '5'], {\n            taskIds: this.removeFromArray(taskId)\n          });\n        } else {\n          this.updateBatch(\n            batch,\n            ['users', userId, 'folders', `${dueDate.toMillis()}`],\n            {\n              taskIds: this.removeFromArray(taskId)\n            }\n          );\n        }\n      });\n      console.log('2. Removed task assignments.');\n    }\n\n    // Delete comments\n    if (commentIds.length > 0) {\n      commentIds.forEach(commentId => {\n        const commentRef = this.getDocRef('comments', commentId);\n        batch.delete(commentRef);\n      });\n      console.log('3. Task comments deleted.');\n    }\n\n    if (shouldCommit) {\n      return batch\n        .commit()\n        .then(() => {\n          console.log('task deleted');\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    }\n  };\n\n  moveTaskToList = ({\n    taskId,\n    origListId,\n    newListId,\n    updatedTaskIds,\n    newListName\n  }) => {\n    const batch = this.createBatch();\n    this.updateBatch(batch, ['tasks', taskId], {\n      listId: newListId,\n      listName: newListName\n    });\n\n    this.updateBatch(batch, ['lists', origListId], {\n      taskIds: this.removeFromArray(taskId)\n    });\n\n    this.updateBatch(batch, ['lists', newListId], {\n      taskIds: updatedTaskIds\n    });\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log(`Moved task to ${newListName}`);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  moveTaskToFolder = ({\n    userId,\n    taskId,\n    origFolderId,\n    newFolderId,\n    updatedTaskIds,\n    type = 'default'\n  }) => {\n    const batch = this.createBatch();\n\n    switch (type) {\n      case 'dueDate': {\n        this.updateBatch(batch, ['tasks', taskId], {\n          dueDate: new Date(+newFolderId)\n        });\n        break;\n      }\n      default: {\n        this.updateBatch(batch, ['tasks', taskId], {\n          [`folders.${userId}`]: newFolderId\n        });\n      }\n    }\n\n    this.updateBatch(batch, ['users', userId, 'folders', origFolderId], {\n      taskIds: this.removeFromArray(taskId)\n    });\n    this.updateBatch(batch, ['users', userId, 'folders', newFolderId], {\n      taskIds: updatedTaskIds\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('Task moved to new folder');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  // Subtask API\n\n  getSubtaskDoc = subtaskId => this.fs.collection('subtasks').doc(subtaskId);\n\n  addSubtask = ({\n    userId,\n    name,\n    memberIds = [],\n    projectId = null,\n    taskId = null,\n    dueDate = null\n  }) => {\n    this.fs\n      .collection('subtasks')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastUpdatedAt: null,\n        isCompleted: false,\n        ownerId: userId,\n        assignedTo: [userId, ...memberIds],\n        completedAt: null,\n        dueDate,\n        projectId,\n        taskId,\n        name\n      })\n      .then(ref => {\n        if (taskId === null) return;\n        this.updateDoc(['tasks', taskId], {\n          subtaskIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  updateSubtask = async (subtaskId, newValue = {}) => {\n    await this.getSubtaskDoc(subtaskId).update({\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  deleteSubtask = (\n    { subtaskId, taskId = null },\n    batch = this.createBatch(),\n    shouldCommit = true\n  ) => {\n    const subtaskRef = this.getDocRef('subtasks', subtaskId);\n    batch.delete(subtaskRef);\n\n    if (taskId) {\n      this.updateBatch(batch, ['tasks', taskId], {\n        subtaskIds: this.removeFromArray(subtaskId)\n      });\n    }\n\n    if (shouldCommit) {\n      return batch\n        .commit()\n        .then(() => {\n          console.log('Subtask deleted.');\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    }\n  };\n\n  // Comment API\n\n  addComment = ({\n    from,\n    to = [],\n    projectId,\n    taskId,\n    content,\n    createdAt = this.getTimestamp()\n  }) => {\n    this.fs\n      .collection('comments')\n      .add({\n        createdAt,\n        lastUpdatedAt: null,\n        isPinned: false,\n        likes: {},\n        from,\n        to,\n        projectId,\n        taskId,\n        content\n      })\n      .then(ref => {\n        this.updateDoc(['tasks', taskId], {\n          commentIds: this.addToArray(ref.id)\n        });\n\n        if (to.length > 0) {\n          to.forEach(user => {\n            this.createNotification({\n              userId: user.userId,\n              source: {\n                user: from,\n                type: 'comment',\n                id: ref.id\n              },\n              location: {\n                type: 'task',\n                taskId,\n                projectId\n              },\n              event: {\n                type: 'mention',\n                publishedAt: createdAt\n              }\n            });\n          });\n        }\n      });\n  };\n\n  /**\n   * @param {String} userId - user id of recipient\n   * @param {Object} source - info about where and by whom the event was triggered { userId, taskId, commentId, projectId }\n   * @param {Object} event - info about event itself {type: mention, update, or reminder, publishedAt, data }\n   */\n\n  createNotification = ({ userId, source, location, event }) => {\n    this.getDocRef('users', userId)\n      .collection('notifications')\n      .add({\n        source,\n        location,\n        event,\n        createdAt: this.getTimestamp(),\n        isActive: true\n      });\n  };\n}\n\nexport default Firebase;\n","import React from 'react';\nimport './Input.scss';\n\nconst Input = ({\n  className = '',\n  name,\n  type,\n  value,\n  onFocus,\n  onChange,\n  onInput,\n  placeholder,\n  isRequired,\n  onBlur,\n  autoComplete,\n  innerRef,\n  hideLabel,\n  label,\n  labelClass,\n  onKeyDown,\n  maxLength,\n  minLength,\n  isReadOnly\n}) => {\n  return (\n    <>\n      {!hideLabel && (\n        <label htmlFor={name} className={`input__label ${labelClass}`}>\n          {label}\n        </label>\n      )}\n      <input\n        className={`input ${className}`}\n        id={name}\n        name={name}\n        type={type}\n        value={value}\n        onFocus={onFocus}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={isRequired}\n        onBlur={onBlur}\n        autoComplete={autoComplete}\n        ref={innerRef}\n        onInput={onInput}\n        onKeyDown={onKeyDown}\n        maxLength={maxLength}\n        minLength={minLength}\n        readOnly={isReadOnly}\n        tabIndex={isReadOnly ? -1 : 0}\n      />\n    </>\n  );\n};\n\nInput.defaultProps = {\n  className: '',\n  innerRef: null,\n  labelClass: ''\n};\n\nexport default Input;\n","import React from 'react';\nimport './Button.scss';\n\nconst Button = ({\n  children,\n  type = 'button',\n  onClick,\n  onMouseDown,\n  className = '',\n  color = 'neutral',\n  size = 'md',\n  variant = 'text',\n  disabled,\n  name,\n  iconOnly = false,\n  value,\n  innerRef,\n  isActive,\n  ...props\n}) => (\n  // eslint-disable-next-line react/button-has-type\n  <button\n    className={`${className} ${variant}--${color} ${!iconOnly ? size : ''} ${\n      iconOnly ? `icon-only icon-only--${size}` : ''\n    } ${isActive ? 'is-active' : ''}`}\n    type={type}\n    onClick={onClick}\n    onMouseDown={onMouseDown}\n    disabled={disabled}\n    name={name}\n    value={value}\n    ref={innerRef}\n    {...props}\n  >\n    {children}\n  </button>\n);\n\nButton.defaultProps = {\n  type: 'button',\n  className: '',\n  color: 'neutral',\n  size: 'md',\n  variant: 'text',\n  iconOnly: false,\n  ref: null,\n  isActive: false,\n  value: '',\n  name: '',\n  onClick: () => null,\n  onMouseDown: () => null\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { withFirebase } from '../../components/Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../../components/Input';\nimport { Button } from '../../components/Button';\n\nconst INITIAL_STATE = {\n  username: '',\n  name: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { username, email, name, passwordOne } = this.state;\n    const { firebase, history } = this.props;\n    firebase\n      .createUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        const userId = authUser.user.uid;\n        const photoURL = authUser.user.photoURL || null;\n        return firebase.addUser({\n          userId,\n          name,\n          username,\n          email,\n          photoURL\n        });\n      })\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const {\n      username,\n      name,\n      email,\n      passwordOne,\n      passwordTwo,\n      error\n    } = this.state;\n    const isInvalid =\n      passwordOne === '' ||\n      passwordTwo === '' ||\n      email === '' ||\n      username === '' ||\n      passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"name\"\n          label=\"Full Name\"\n          value={name}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n          labelClass=\"user-form__label\"\n        />\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n          labelClass=\"user-form__label\"\n        />\n        <Input\n          name=\"username\"\n          label=\"Username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n          labelClass=\"user-form__label\"\n        />\n        <Input\n          name=\"passwordOne\"\n          label=\"Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n          labelClass=\"user-form__label\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          label=\"Confirm Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n          labelClass=\"user-form__label\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"md\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n          className=\"sign-up__btn\"\n        >\n          Create Account\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignUpForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignUpForm from './SignUpForm';\nimport * as ROUTES from '../../constants/routes';\nimport './SignUp.scss';\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account?\n    <Link className=\"link--outlined\" to={ROUTES.SIGN_UP}>\n      Sign Up\n    </Link>\n  </p>\n);\n\nconst SignUpPage = () => (\n  <main className=\"sign-up\">\n  <div className=\"sign-up__content\">\n    <h1 className=\"sign-up__heading\">Sign Up</h1>\n    <SignUpForm />\n    </div>\n  </main>\n);\n\nexport default SignUpPage;\nexport { SignUpLink };\n","import React, { Component } from 'react';\nimport { withFirebase } from '../../components/Firebase';\nimport { Input } from '../../components/Input';\nimport { Button } from '../../components/Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null\n};\n\nclass PasswordForgetForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .passwordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, error } = this.state;\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n          labelClass=\"user-form__label\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"md\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Reset Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordForgetForm);\n","import React from 'react';\nimport './UserFormPage.scss';\n\nconst UserFormPage = ({ title, children, classes }) => (\n  <main className={`user-form__container ${classes.main || ''}`}>\n    <h1 className={`user-form__title ${classes.heading || ''}`}>{title}</h1>\n    {children}\n  </main>\n);\n\nUserFormPage.defaultProps = {\n  classes: {\n    main: '',\n    heading: ''\n  },\n  title: ''\n};\n\nexport default UserFormPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PasswordForgetForm from './PasswordForgetForm';\nimport { UserFormPage } from '../../components/UserFormPage';\nimport * as ROUTES from '../../constants/routes';\nimport './PasswordForget.scss';\n\nconst PasswordForgetLink = () => (\n  <p className=\"user-form__pw-forget\">\n    <Link to={ROUTES.PASSWORD_FORGET} className=\"user-form__link link--sm\">\n      Forgot your password?\n    </Link>\n  </p>\n);\n\nconst PasswordForgetPage = () => (\n  <UserFormPage title=\"Forgot your password?\">\n    <PasswordForgetForm />\n  </UserFormPage>\n);\n\nexport default PasswordForgetPage;\nexport { PasswordForgetLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../../components/Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../../components/Input';\nimport { Button } from '../../components/Button';\nimport { PasswordForgetLink } from '../PasswordForget';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\n\nclass LoginForm extends Component {\n  state = { ...INITIAL_STATE };\n\n  onSubmit = e => {\n    const { email, password } = this.state;\n    const { firebase, history } = this.props;\n    firebase\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  enableGoogleLogin = e => {\n    const { signInWithGoogle } = this.props.firebase;\n    signInWithGoogle();\n    e.preventDefault();\n  };\n\n  enableGithubLogin = e => {\n    const { signInWithGoogle } = this.props.firebase;\n    signInWithGoogle();\n    e.preventDefault();\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n    const isInvalid = password === '' || email === '';\n    return (\n      <form className=\"user-form\">\n        <Button\n          size=\"md\"\n          variant=\"outlined\"\n          color=\"neutral\"\n          onClick={this.enableGoogleLogin}\n          className=\"login__btn--alt\"\n        >\n          Continue with Google\n        </Button>\n        <Button\n          size=\"md\"\n          variant=\"outlined\"\n          color=\"neutral\"\n          onClick={this.enableGithubLogin}\n          className=\"login__btn--alt\"\n        >\n          Continue with Github\n        </Button>\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n          labelClass=\"user-form__label\"\n        />\n        <Input\n          name=\"password\"\n          label=\"Password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n          labelClass=\"user-form__label\"\n        />\n        <PasswordForgetLink />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"md\"\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={this.onSubmit}\n          className=\"login__btn\"\n        >\n          Log In\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(LoginForm);\n","import React from 'react';\nimport LoginForm from './LoginForm';\nimport { SignUpLink } from '../SignUp';\nimport './Login.scss';\n\nconst LoginPage = () => (\n  <main className=\"login\">\n  <div className=\"login__content\">\n    <h1 className=\"login__heading\">Log In</h1>\n    <LoginForm />\n    </div>\n    <footer className=\"login__footer\">\n      <SignUpLink />\n    </footer>\n  </main>\n);\n\nexport default LoginPage;\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n","import { Firebase } from '../components/Firebase';\n\nconst firebase = new Firebase();\nexport default firebase;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\nimport {\n  removeTask,\n  removeTaskTag,\n  setTaskLoadedState\n} from '../tasks/actions';\nimport { setProjectLoadedState } from '../projects/actions';\n\nexport const loadListsById = listsById => {\n  return {\n    type: types.LOAD_LISTS_BY_ID,\n    listsById\n  };\n};\n\nexport const updateList = ({ listId, listData }) => {\n  return {\n    type: types.UPDATE_LIST,\n    listId,\n    listData\n  };\n};\n\nexport const addList = ({ listId, listData }) => {\n  return {\n    type: types.ADD_LIST,\n    listId,\n    listData\n  };\n};\n\nexport const removeList = ({ listId, projectId }) => {\n  return {\n    type: types.REMOVE_LIST,\n    listId,\n    projectId\n  };\n};\n\n// Thunks\n\n// TODO: remove tags\nexport const deleteList = ({ listId, projectId }) => {\n  return async (dispatch, getStore) => {\n    try {\n      const batch = firebase.createBatch();\n      const listRef = firebase.getDocRef('lists', listId);\n      const projectRef = firebase.getDocRef('projects', projectId);\n      const { taskIds } = getStore().listsById[listId];\n      const { tasksById } = getStore();\n      // Delete list\n      batch.delete(listRef);\n\n      // Remove list id from project\n      firebase.updateBatch(batch, projectRef, {\n        listIds: firebase.removeFromArray(listId)\n      });\n\n      return batch\n        .commit()\n        .then(() => {\n          if (taskIds.length > 0) {\n            taskIds.forEach(async taskId => {\n              const {\n                assignedTo,\n                folders,\n                subtaskIds,\n                commentIds,\n                tags,\n                projectId,\n                dueDate\n              } = tasksById[taskId];\n              await firebase.deleteTask({\n                taskId,\n                assignedTo,\n                folders,\n                subtaskIds,\n                commentIds,\n                projectId,\n                dueDate\n              });\n            });\n          }\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n\nexport const fetchListsById = projectId => {\n  return async dispatch => {\n    try {\n      const listsById = await firebase.fs\n        .collection('lists')\n        .where('projectId', '==', projectId)\n        .get()\n        .then(snapshot => {\n          const lists = {};\n          snapshot.forEach(doc => {\n            lists[doc.id] = {\n              listId: doc.id,\n              ...doc.data()\n            };\n          });\n          return lists;\n        });\n      dispatch(loadListsById(listsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserLists = userId => {\n  return async dispatch => {\n    try {\n      const listsById = await firebase.fs\n        .collection('lists')\n        .where('userId', '==', userId)\n        .get()\n        .then(snapshot => {\n          const lists = {};\n          snapshot.forEach(doc => {\n            lists[doc.id] = {\n              listId: doc.id,\n              ...doc.data()\n            };\n          });\n          return lists;\n        });\n      dispatch(loadListsById(listsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const syncProjectLists = projectId => {\n  return async (dispatch, getState) => {\n    try {\n      const subscription = await firebase\n        .queryCollection('lists', ['projectId', '==', projectId])\n        .onSnapshot(snapshot => {\n          const changes = snapshot.docChanges();\n          const { projectsById } = getState();\n          const project = projectsById[projectId];\n          const isInitialLoad =\n            snapshot.size === changes.length &&\n            !project.isLoaded.lists &&\n            changes.every(change => change.type === 'added');\n          if (isInitialLoad) {\n            const listsById = {};\n\n            if (changes.length > 0) {\n              changes.forEach(change => {\n                const listId = change.doc.id;\n                const listData = change.doc.data();\n                const { taskIds } = listData;\n                listsById[listId] = {\n                  listId,\n                  ...listData\n                };\n                taskIds.forEach(taskId =>\n                  dispatch(setTaskLoadedState(taskId, 'subtasks'))\n                );\n              });\n              dispatch(loadListsById(listsById));\n            }\n            dispatch(setProjectLoadedState(projectId, 'lists'));\n          } else {\n            changes.forEach(async change => {\n              const { listsById } = getState();\n              const [listId, listData, changeType] = await Promise.all([\n                change.doc.id,\n                change.doc.data(),\n                change.type\n              ]);\n              if (changeType === 'added') {\n                if (listId in listsById) return;\n                dispatch(addList({ listId, listData }));\n                console.log(`List added: ${listData.name}`);\n              } else if (changeType === 'removed') {\n                if (!(listId in listsById)) return;\n                dispatch(removeList({ listId, projectId }));\n                console.log(`List deleted: ${listData.name}`);\n              } else {\n                dispatch(updateList({ listId, listData }));\n                console.log(`List updated: ${listData.name}`);\n              }\n            });\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const createList = ({ projectId, name }) => {\n  return async dispatch => {\n    try {\n      firebase.addList({ projectId, name });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","export const LOAD_LISTS_BY_ID = 'LOAD_LISTS_BY_ID';\nexport const FETCH_LISTS_BY_ID = 'FETCH_LISTS_BY_ID';\nexport const DELETE_CARD = 'DELETE_CARD';\nexport const UPDATE_LIST = 'UPDATE_LIST';\nexport const ADD_LIST = 'ADD_LIST';\nexport const DELETE_LIST = 'DELETE_LIST';\nexport const REMOVE_LIST = 'REMOVE_LIST';\n","import * as types from './types';\nimport firebase from '../../store/firebase';\nimport { loadListsById } from '../lists/actions';\n\nexport const loadProjectsById = projectsById => {\n  return {\n    type: types.LOAD_PROJECTS_BY_ID,\n    projectsById\n  };\n};\n\nexport const setTempProjectSettings = ({ projectId, view, sortBy, layout }) => {\n  return {\n    type: types.SET_TEMP_PROJECT_SETTINGS,\n    projectId,\n    view,\n    sortBy,\n    layout\n  };\n};\n\nexport const setProjectLoadedState = (projectId, key) => {\n  return {\n    type: types.SET_PROJECT_LOADED_STATE,\n    projectId,\n    key\n  };\n};\n\nexport const loadProject = (projectId, projectData) => {\n  return {\n    type: types.LOAD_PROJECT,\n    projectId,\n    projectData\n  };\n};\n\nexport const updateProject = ({ projectId, projectData }) => {\n  return {\n    type: types.UPDATE_PROJECT,\n    projectId,\n    projectData\n  };\n};\n\nexport const addProject = ({ projectId, projectData }) => {\n  return {\n    type: types.ADD_PROJECT,\n    projectId,\n    projectData: {\n      tempSettings: {\n        layout: projectData.settings.layout,\n        tasks: {\n          ...projectData.settings.tasks\n        }\n      },\n      ...projectData\n    }\n  };\n};\n\nexport const removeProject = projectId => {\n  return {\n    type: types.REMOVE_PROJECT,\n    projectId\n  };\n};\n\nexport const reorderLists = (projectId, listIds) => {\n  return {\n    type: types.REORDER_LISTS,\n    projectId,\n    listIds\n  };\n};\n\nexport const updateProjectTags = (projectId, tags) => {\n  return {\n    type: types.UPDATE_PROJECT_TAGS,\n    projectId,\n    tags\n  };\n};\n\nexport const syncProject = projectId => {\n  return async dispatch => {\n    try {\n      const subscription = await firebase\n        .getDocRef('projects', projectId)\n        .onSnapshot(snapshot => {\n          const projectData = snapshot.data();\n          dispatch(updateProject({ projectId, projectData }));\n        });\n      return subscription;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n\nexport const syncUserProjects = userId => {\n  return async (dispatch, getState) => {\n    try {\n      const subscription = await firebase\n        .queryCollection('projects', ['memberIds', 'array-contains', userId])\n        .onSnapshot(async snapshot => {\n          const changes = snapshot.docChanges();\n          const isInitialLoad =\n            snapshot.size === changes.length &&\n            changes.every(change => change.type === 'added');\n\n          if (isInitialLoad && changes.length > 1) {\n            const projects = {};\n            changes.forEach(change => {\n              const projectId = change.doc.id;\n              const projectData = change.doc.data();\n              projects[projectId] = {\n                projectId,\n                isLoaded: {\n                  subtasks: projectData.listIds.length === 0,\n                  tasks: projectData.listIds.length === 0,\n                  lists: projectData.listIds.length === 0\n                },\n                tempSettings: {\n                  layout: projectData.settings.layout,\n                  tasks: { ...projectData.settings.tasks }\n                },\n                ...projectData\n              };\n            });\n            dispatch(loadProjectsById(projects));\n          } else {\n            const { projectsById } = getState();\n            changes.forEach(async change => {\n              const [projectId, projectData, changeType] = await Promise.all([\n                change.doc.id,\n                change.doc.data(),\n                change.type\n              ]);\n              if (changeType === 'added') {\n                if (projectId in projectsById) return;\n                dispatch(addProject({ projectId, projectData }));\n                console.log(`Added Project: ${projectData.name}`);\n              } else if (changeType === 'removed') {\n                if (!(projectId in projectsById)) return;\n                dispatch(removeProject(projectId));\n                console.log(`Deleted Project: ${projectData.name}`);\n              } else {\n                dispatch(updateProject({ projectId, projectData }));\n                console.log(`Updated Project: ${projectData.name}`);\n              }\n            });\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\n\nexport const fetchProjectLists = projectId => {\n  return async dispatch => {\n    try {\n      const projectLists = await firebase.fs\n        .collection('lists')\n        .where('projectId', '==', projectId)\n        .get()\n        .then(snapshot => {\n          const lists = {};\n          snapshot.forEach(doc => {\n            lists[doc.id] = {\n              listId: doc.id,\n              ...doc.data()\n            };\n          });\n          return lists;\n        });\n      dispatch(loadListsById(projectLists));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","export const LOAD_PROJECTS_BY_ID = 'LOAD_PROJECTS_BY_ID';\nexport const LOAD_PROJECT = 'LOAD_PROJECT';\nexport const UPDATE_PROJECT = 'UPDATE_PROJECT';\nexport const REORDER_LISTS = 'REORDER_LISTS';\nexport const UPDATE_PROJECT_TAGS = 'UPDATE_PROJECT_TAGS';\nexport const ADD_TAG = 'ADD_TAG';\nexport const ADD_PROJECT = 'ADD_PROJECT';\nexport const REMOVE_PROJECT = 'REMOVE_PROJECT';\nexport const SET_PROJECT_LOADED_STATE = 'SET_PROJECT_LOADED_STATE';\nexport const SET_TEMP_PROJECT_SETTINGS = 'SET_TEMP_PROJECT_SETTINGS';\n","import * as types from './types';\nimport firebase from '../../store/firebase';\nimport { setProjectLoadedState } from '../projects/actions';\nimport {\n  loadAssignedTasks,\n  addAssignedTask,\n  removeAssignedTask\n} from '../currentUser/actions';\n\nexport const loadTasksById = tasksById => {\n  return {\n    type: types.LOAD_TASKS_BY_ID,\n    tasksById\n  };\n};\n\nexport const addTask = ({ taskId, taskData }) => {\n  return {\n    type: types.ADD_TASK,\n    taskId,\n    taskData\n  };\n};\n\nexport const removeTask = ({ taskId, listId }) => {\n  return {\n    type: types.REMOVE_TASK,\n    taskId,\n    listId\n  };\n};\n\nexport const updateTask = ({ taskId, taskData }) => {\n  return {\n    type: types.UPDATE_TASK,\n    taskId,\n    taskData\n  };\n};\n\nexport const addTag = (taskId, tag) => {\n  return {\n    type: types.ADD_TAG,\n    taskId,\n    tag\n  };\n};\n\nexport const removeTag = ({ taskId, name }) => {\n  return {\n    type: types.REMOVE_TAG,\n    taskId,\n    name\n  };\n};\n\nexport const setTaskLoadedState = (taskId, key) => {\n  return {\n    type: types.SET_TASK_LOADED_STATE,\n    taskId,\n    key\n  };\n};\n\n// Thunks\n\nexport const removeTaskTag = ({ taskId, name, userId, projectId }) => {\n  return async (dispatch, getState) => {\n    try {\n      const { currentUser, projectsById } = getState();\n      const { tags: userTags } = currentUser;\n      const projectTags = projectId ? projectsById[projectId].tags : {};\n      const isProjectTag = projectTags && name in projectTags;\n      const isUserTag = userTags && name in userTags;\n      const projectCount = isProjectTag ? projectTags[name].count - 1 : null;\n      const userCount = isUserTag ? userTags[name].count - 1 : null;\n\n      await firebase.removeTag({\n        taskId,\n        name,\n        userId,\n        userCount,\n        projectId,\n        projectCount\n      });\n      dispatch(removeTag({ taskId, name }));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n\nexport const deleteTask = ({ taskId, listId = null }) => {\n  return async (dispatch, getStore) => {\n    try {\n      const {\n        folders,\n        subtaskIds,\n        commentIds,\n        assignedTo,\n        tags,\n        projectId,\n        dueDate\n      } = getStore().tasksById[taskId];\n      const { userId } = getStore().currentUser;\n      await firebase.deleteTask({\n        taskId,\n        listId,\n        assignedTo,\n        folders,\n        subtaskIds,\n        commentIds,\n        dueDate,\n        projectId\n      });\n      if (tags && tags.length > 0) {\n        tags.forEach(name => {\n          dispatch(removeTaskTag({ taskId: null, name, userId, projectId }));\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n\nexport const syncProjectTasks = projectId => {\n  return async (dispatch, getState) => {\n    try {\n      const subscription = await firebase\n        .queryCollection('tasks', ['projectId', '==', projectId])\n        .onSnapshot(snapshot => {\n          const changes = snapshot.docChanges();\n          const isInitialLoad =\n            snapshot.size === changes.length &&\n            changes.every(change => change.type === 'added');\n\n          if (isInitialLoad && changes.length > 1) {\n            const tasksById = {};\n            changes.forEach(change => {\n              const taskId = change.doc.id;\n              const taskData = change.doc.data();\n              tasksById[taskId] = {\n                isLoaded: {\n                  subtasks: false,\n                  comments: false\n                },\n                taskId,\n                ...taskData\n              };\n            });\n            dispatch(loadTasksById(tasksById));\n          } else {\n            changes.forEach(async change => {\n              const [taskId, taskData, changeType] = await Promise.all([\n                change.doc.id,\n                change.doc.data(),\n                change.type\n              ]);\n              const { tasksById } = getState();\n              if (changeType === 'added') {\n                if (taskId in tasksById) return;\n                dispatch(addTask({ taskId, taskData }));\n                console.log(`Task added: ${taskData.name}`);\n              } else if (changeType === 'removed') {\n                if (taskId in tasksById === false) return;\n                const { listId } = taskData;\n                dispatch(removeTask({ taskId, listId }));\n                console.log(`Deleted Task: ${taskData.name}`);\n              } else {\n                dispatch(updateTask({ taskId, taskData }));\n                console.log(`Updated Task: ${taskData.name}`);\n              }\n            });\n          }\n          if (isInitialLoad) {\n            dispatch(setProjectLoadedState(projectId, 'tasks'));\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const syncUserProjectTasks = ({ userId, projectId }) => {\n  return async (dispatch, getState) => {\n    try {\n      const subscription = await firebase\n        .queryCollection('tasks', ['projectId', '==', projectId])\n        .onSnapshot(snapshot => {\n          const changes = snapshot.docChanges();\n          const isInitialLoad =\n            snapshot.size === changes.length &&\n            changes.every(change => change.type === 'added');\n\n          if (isInitialLoad && changes.length > 1) {\n            const tasksById = {};\n            let assignedTasks = [];\n            changes.forEach(change => {\n              const taskId = change.doc.id;\n              const taskData = change.doc.data();\n              const { subtaskIds, commentIds } = taskData;\n              tasksById[taskId] = {\n                isLoaded: {\n                  subtasks: subtaskIds.length === 0,\n                  comments: commentIds.length === 0\n                },\n                taskId,\n                ...taskData\n              };\n              if (taskData.assignedTo.includes(userId)) {\n                assignedTasks = assignedTasks.concat(taskId);\n              }\n            });\n            dispatch(loadTasksById(tasksById));\n            dispatch(loadAssignedTasks(assignedTasks));\n          } else {\n            const { tasksById, currentUser } = getState();\n            const { assignedTasks } = currentUser;\n            changes.forEach(async change => {\n              const [taskId, taskData, changeType] = await Promise.all([\n                change.doc.id,\n                change.doc.data(),\n                change.type\n              ]);\n\n              const isAssignedToUser = taskData.assignedTo.includes(userId);\n              const isMarkedAsAssigned = assignedTasks.includes(taskId);\n              if (changeType === 'added') {\n                if (taskId in tasksById) return;\n                dispatch(addTask({ taskId, taskData }));\n                console.log(`Task added: ${taskData.name}`);\n                if (isAssignedToUser) {\n                  dispatch(addAssignedTask(taskId));\n                }\n              } else if (changeType === 'removed') {\n                if (taskId in tasksById === false) return;\n                const { listId } = taskData;\n                if (isAssignedToUser) {\n                  dispatch(removeAssignedTask(taskId));\n                }\n                dispatch(removeTask({ taskId, listId }));\n                console.log(`Deleted Task: ${taskData.name}`);\n              } else {\n                if (!isAssignedToUser && isMarkedAsAssigned) {\n                  dispatch(removeAssignedTask(taskId));\n                }\n                dispatch(updateTask({ taskId, taskData }));\n                console.log(`Updated Task: ${taskData.name}`);\n                if (isAssignedToUser && !isMarkedAsAssigned) {\n                  dispatch(addAssignedTask(taskId));\n                }\n              }\n            });\n          }\n          if (isInitialLoad) {\n            dispatch(setProjectLoadedState(projectId, 'tasks'));\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const syncUserMiscTasks = userId => {\n  return async (dispatch, getState) => {\n    try {\n      const subscription = await firebase\n        .queryCollection('tasks', ['ownerId', '==', userId])\n        .where('projectId', '==', null)\n        .onSnapshot(snapshot => {\n          const changes = snapshot.docChanges();\n          const isInitialLoad =\n            snapshot.size === changes.length &&\n            changes.every(change => change.type === 'added');\n\n          if (isInitialLoad && changes.length > 1) {\n            const tasksById = {};\n            changes.forEach(change => {\n              tasksById[change.doc.id] = {\n                taskId: change.doc.id,\n                isLoaded: {\n                  subtasks: false,\n                  comments: false\n                },\n                ...change.doc.data()\n              };\n            });\n            dispatch(loadTasksById(tasksById));\n            dispatch(loadAssignedTasks(Object.keys(tasksById)));\n          } else {\n            changes.forEach(async change => {\n              const [taskId, taskData, changeType] = await Promise.all([\n                change.doc.id,\n                change.doc.data(),\n                change.type\n              ]);\n              const { tasksById } = getState();\n              if (changeType === 'added') {\n                if (taskId in tasksById) return;\n                dispatch(addTask({ taskId, taskData }));\n                dispatch(addAssignedTask(taskId));\n                console.log(`Task added: ${taskData.name}`);\n              } else if (changeType === 'removed') {\n                if (taskId in tasksById === false) return;\n                const { listId } = taskData;\n                dispatch(removeAssignedTask(taskId));\n                dispatch(removeTask({ taskId, listId }));\n                console.log(`Task removed: ${taskData.name}`);\n              } else {\n                dispatch(updateTask({ taskId, taskData }));\n                console.log(`Task updated: ${taskData.name}`);\n              }\n            });\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const syncTaggedTasks = ({ projectId, tag }) => {\n  return async (dispatch, getState) => {\n    try {\n      const subscription = await firebase\n        .queryCollection('tasks', ['projectId', '==', projectId])\n        .where('tags', 'array-contains', tag)\n        .onSnapshot(snapshot => {\n          const changes = snapshot.docChanges();\n          const isInitialLoad =\n            snapshot.size === changes.length &&\n            changes.every(change => change.type === 'added');\n\n          if (isInitialLoad && changes.length > 1) {\n            const tasksById = {};\n            changes.forEach(change => {\n              tasksById[change.doc.id] = {\n                taskId: change.doc.id,\n                isLoaded: {\n                  subtasks: false,\n                  comments: false\n                },\n                ...change.doc.data()\n              };\n            });\n            dispatch(loadTasksById(tasksById));\n          } else {\n            changes.forEach(async change => {\n              const [taskId, taskData, changeType] = await Promise.all([\n                change.doc.id,\n                change.doc.data(),\n                change.type\n              ]);\n              const { tasksById } = getState();\n              if (changeType === 'added') {\n                if (taskId in tasksById) return;\n                dispatch(addTask({ taskId, taskData }));\n                console.log(`Task added: ${taskData.name}`);\n              } else if (changeType === 'removed') {\n                if (taskId in tasksById === false) return;\n                const { listId } = taskData;\n                dispatch(removeTask({ taskId, listId }));\n                console.log(`Removed Task: ${taskData.name}`);\n              } else {\n                dispatch(updateTask({ taskId, taskData }));\n                console.log(`Updated Task: ${taskData.name}`);\n              }\n            });\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","export const ADD_TASK = 'ADD_TASK';\nexport const UPDATE_TASK = 'UPDATE_TASK';\nexport const LOAD_TASKS_BY_ID = 'LOAD_TASKS_BY_ID';\nexport const ADD_TAG = 'ADD_TAG';\nexport const REMOVE_TASK = 'REMOVE_TASK';\nexport const REMOVE_TAG = 'REMOVE_TAG';\nexport const SET_TASK_LOADED_STATE = 'SET_TASK_LOADED_STATE';\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadUserData = user => {\n  return {\n    type: types.LOAD_USER_DATA,\n    user\n  };\n};\n\nexport const loadUsersById = usersById => {\n  return {\n    type: types.LOAD_USERS_BY_ID,\n    usersById\n  };\n};\n\nexport const addUser = ({ userId, userData }) => {\n  return {\n    type: types.ADD_USER,\n    userId,\n    userData\n  };\n};\n\nexport const removeUser = userId => {\n  return {\n    type: types.REMOVE_USER,\n    userId\n  };\n};\n\nexport const updateUser = ({ userId, userData }) => {\n  return {\n    type: types.UPDATE_USER,\n    userId,\n    userData\n  };\n};\n\nexport const updateUserStatus = ({ userId, status }) => {\n  return {\n    type: types.UPDATE_USER_STATUS,\n    userId,\n    status\n  };\n};\n\n// Thunks\n\nexport const fetchUsersById = () => {\n  return async dispatch => {\n    try {\n      const usersById = await firebase.fs\n        .collection('users')\n        .get()\n        .then(snapshot => {\n          const users = {};\n          snapshot.forEach(doc => {\n            users[doc.id] = {\n              userId: doc.id,\n              ...doc.data()\n            };\n          });\n          return users;\n        });\n      dispatch(loadUsersById(usersById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const syncUsersById = () => {\n  return async (dispatch, getState) => {\n    try {\n      const subscription = await firebase.fs\n        .collection('users')\n        .onSnapshot(snapshot => {\n          const changes = snapshot.docChanges();\n          const isInitialLoad =\n            snapshot.size === changes.length &&\n            changes.every(change => change.type === 'added');\n\n          if (isInitialLoad && changes.length > 1) {\n            const users = {};\n            changes.forEach(change => {\n              const userId = change.doc.id;\n              const userData = change.doc.data();\n              users[userId] = {\n                userId,\n                ...userData\n              };\n            });\n            dispatch(loadUsersById(users));\n          } else {\n            const { usersById } = getState();\n            changes.forEach(async change => {\n              const [userId, userData, changeType] = await Promise.all([\n                change.doc.id,\n                change.doc.data(),\n                change.type\n              ]);\n              switch (changeType) {\n                case 'added': {\n                  if (userId in usersById) return;\n                  dispatch(addUser({ userId, userData }));\n                  break;\n                }\n                case 'removed': {\n                  if (!(userId in usersById)) return;\n                  dispatch(removeUser(userId));\n                  break;\n                }\n                default: {\n                  dispatch(updateUser({ userId, userData }));\n                }\n              }\n            });\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserData = userId => {\n  return async dispatch => {\n    try {\n      const user = await firebase\n        .getUserDoc(userId)\n        .get()\n        .then(doc => doc.data());\n      dispatch(loadUserData(user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const syncUserPresence = () => {\n  return async (dispatch, getState) => {\n    try {\n      const subscription = await firebase.fs\n        .collection('status')\n        .onSnapshot(snapshot => {\n          const changes = snapshot.docChanges();\n          changes.forEach(change => {\n            const userId = change.doc.id;\n            const { state } = change.doc.data();\n            if (change.type === 'added') {\n              console.log(`User ${userId} is online`);\n              // ...\n            }\n            if (change.type === 'removed') {\n              console.log(`User ${userId} is offline.`);\n              // ...\n            }\n            dispatch(updateUserStatus(userId, state));\n          });\n        });\n      return subscription;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n","export const LOAD_USER_DATA = 'LOAD_USER_DATA';\nexport const LOAD_USERS_BY_ID = 'LOAD_USERS_BY_ID';\nexport const ADD_USER = 'ADD_USER';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const REMOVE_USER = 'REMOVE_USER';\nexport const ADD_TASK = 'ADD_TASK';\nexport const REORDER_FOLDERS = 'REORDER_FOLDERS';\nexport const UPDATE_USER_STATUS = 'UPDATE_USER_STATUS';\n","import * as types from './types';\nimport firebase from '../../store/firebase';\nimport {\n  loadTasksById,\n  addTask,\n  removeTask,\n  updateTask\n} from '../tasks/actions';\nimport { updateUser } from '../users/actions';\n\nexport const setCurrentUser = currentUser => {\n  return {\n    type: types.SET_CURRENT_USER,\n    currentUser\n  };\n};\n\nexport const setTempTaskSettings = ({ view, sortBy }) => {\n  return {\n    type: types.SET_TEMP_TASK_SETTINGS,\n    view,\n    sortBy\n  };\n};\n\n// Assigned Tasks\n\nexport const loadAssignedTasks = assignedTasks => {\n  return {\n    type: types.LOAD_ASSIGNED_TASKS,\n    assignedTasks\n  };\n};\n\nexport const addAssignedTask = taskId => {\n  return {\n    type: types.ADD_ASSIGNED_TASK,\n    taskId\n  };\n};\n\nexport const removeAssignedTask = taskId => {\n  console.log(`Removed assigned task: ${taskId}`);\n  return {\n    type: types.REMOVE_ASSIGNED_TASK,\n    taskId\n  };\n};\n\n// Folders\n\nexport const loadFolders = folders => {\n  return {\n    type: types.LOAD_FOLDERS,\n    folders\n  };\n};\n\nexport const addFolder = ({ folderId, folderData }) => {\n  return {\n    type: types.ADD_FOLDER,\n    folderId,\n    folderData\n  };\n};\n\nexport const updateFolder = ({ folderId, folderData }) => {\n  return {\n    type: types.UPDATE_FOLDER,\n    folderId,\n    folderData\n  };\n};\n\nexport const removeFolder = folderId => {\n  return {\n    type: types.REMOVE_FOLDER,\n    folderId\n  };\n};\n\nexport const reorderFolders = (userId, folderIds) => {\n  return {\n    type: types.REORDER_FOLDERS,\n    userId,\n    folderIds\n  };\n};\n\n// Notifications\n\nexport const loadNotifications = notifications => {\n  return {\n    type: types.LOAD_NOTIFICATIONS,\n    notifications\n  };\n};\n\nexport const addNotification = ({ notificationId, notificationData }) => {\n  return {\n    type: types.ADD_NOTIFICATION,\n    notificationId,\n    notificationData\n  };\n};\n\nexport const updateNotification = ({ notificationId, notificationData }) => {\n  return {\n    type: types.UPDATE_NOTIFICATION,\n    notificationId,\n    notificationData\n  };\n};\n\nexport const removeNotification = notificationId => {\n  return {\n    type: types.REMOVE_NOTIFICATION,\n    notificationId\n  };\n};\n\n// Tags\n\nexport const loadUserTags = tags => {\n  return {\n    type: types.LOAD_USER_TAGS,\n    tags\n  };\n};\n\nexport const createTag = ({ tagId, tagData }) => {\n  return {\n    type: types.CREATE_TAG,\n    tagId,\n    tagData\n  };\n};\n\nexport const updateTag = ({ tagId, tagData }) => {\n  return {\n    type: types.UPDATE_TAG,\n    tagId,\n    tagData\n  };\n};\n\nexport const deleteTag = name => {\n  return {\n    type: types.DELETE_TAG,\n    name\n  };\n};\n\nexport const deleteFolder = ({ userId, folderId }) => {\n  return async dispatch => {\n    try {\n      await firebase.getDocRef('users', userId, 'folders', folderId).delete();\n      dispatch(removeFolder(folderId));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n\n// Tasks due soon\n\nexport const loadTasksDueSoon = tasksDueSoon => {\n  return {\n    type: types.LOAD_TASKS_DUE_SOON,\n    tasksDueSoon\n  };\n};\n\nexport const addTaskDueSoon = ({ taskId, taskData }) => {\n  return {\n    type: types.ADD_TASK_DUE_SOON,\n    taskId,\n    taskData\n  };\n};\n\nexport const removeTaskDueSoon = taskId => {\n  return {\n    type: types.REMOVE_TASK_DUE_SOON,\n    taskId\n  };\n};\n\nexport const updateTaskDueSoon = ({ taskId, taskData }) => {\n  return {\n    type: types.UPDATE_TASK_DUE_SOON,\n    taskId,\n    taskData\n  };\n};\n\n// Thunks\n\nexport const syncTasksDueWithinDays = (userId, days) => {\n  const startingDate = new Date();\n  startingDate.setHours(0, 0, 0, 0);\n  const endingDate = new Date(startingDate);\n  const timeEnd = new Date(endingDate.setDate(endingDate.getDate() + days));\n\n  return async dispatch => {\n    try {\n      const subscription = await firebase.fs\n        .collection('tasks')\n        .where('assignedTo', 'array-contains', userId)\n        .where('dueDate', '<=', timeEnd)\n        .orderBy('dueDate', 'asc')\n        .onSnapshot(async snapshot => {\n          const changes = snapshot.docChanges();\n          const isInitialLoad =\n            snapshot.size === changes.length &&\n            changes.every(change => change.type === 'added');\n\n          if (isInitialLoad) {\n            const tasks = {};\n            changes.forEach(change => {\n              const taskId = change.doc.id;\n              const taskData = change.doc.data();\n              const { subtaskIds, commentIds } = taskData;\n              tasks[taskId] = {\n                isLoaded: {\n                  subtasks: subtaskIds.length === 0,\n                  comments: commentIds.length === 0\n                },\n                taskId,\n                ...taskData\n              };\n            });\n            dispatch(loadTasksDueSoon(tasks));\n            dispatch(loadTasksById(tasks));\n          } else {\n            changes.forEach(change => {\n              const taskId = change.doc.id;\n              const taskData = change.doc.data();\n              if (change.type === 'added') {\n                dispatch(addTaskDueSoon({ taskId, taskData }));\n              } else if (change.type === 'removed') {\n                dispatch(removeTaskDueSoon(taskId));\n              } else {\n                dispatch(updateTaskDueSoon({ taskId, taskData }));\n              }\n            });\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const syncFolders = userId => {\n  return async (dispatch, getState) => {\n    try {\n      const subscription = await firebase\n        .getDocRef('users', userId)\n        .collection('folders')\n        .onSnapshot(async snapshot => {\n          const changes = snapshot.docChanges();\n          const isInitialLoad =\n            snapshot.size === changes.length &&\n            changes.every(change => change.type === 'added');\n          if (isInitialLoad && changes.length > 1) {\n            const foldersById = {};\n            changes.forEach(change => {\n              const folderId = change.doc.id;\n              const folderData = change.doc.data();\n              foldersById[folderId] = {\n                folderId,\n                ...folderData\n              };\n            });\n            await dispatch(loadFolders(foldersById));\n          } else {\n            changes.forEach(async change => {\n              const [folderId, folderData, changeType] = await Promise.all([\n                change.doc.id,\n                change.doc.data(),\n                change.type\n              ]);\n              const { folders } = getState().currentUser;\n              switch (changeType) {\n                case 'added': {\n                  if (folderId in folders) return;\n                  dispatch(addFolder({ folderId, folderData }));\n                  console.log('folder added');\n                  break;\n                }\n                case 'removed': {\n                  if (!change.doc.exists && folderId in folders) {\n                    dispatch(removeFolder(folderId));\n                  }\n                  break;\n                }\n                default: {\n                  if (\n                    folderData.taskIds.length === 0 &&\n                    !['0', '1', '2', '3', '4', '5'].includes(folderId)\n                  ) {\n                    dispatch(deleteFolder({ userId, folderId }));\n                  } else {\n                    dispatch(updateFolder({ folderId, folderData }));\n                    console.log(`Updated Folder: ${folderData.name}`);\n                  }\n                  break;\n                }\n              }\n            });\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\n/*\nexport const createTag = ({ userId, taskId, name }) => {\n  return async (dispatch, getState) => {\n    try {\n      await firebase.addTag({ taskId, userId, name, projectId, color, projectCount, userCount});\n            const { tags } = getState().currentUser;\n           if (changeType === 'added') {\n             console.log(tags);\n              dispatch(addTag({ tagId, tagData }));\n              console.log('tag added');\n            } else if (changeType === 'removed') {\n              dispatch(removeTag(tagId));\n            } else {\n              dispatch(updateTag({ tagId, tagData }));\n              console.log(`Updated Tag: ${tagData.name}`);\n            }\n          });\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n*/\n\nexport const syncUserTags = userId => {\n  return async (dispatch, getState) => {\n    try {\n      const subscription = await firebase\n        .getDocRef('users', userId)\n        .collection('tags')\n        .onSnapshot(async snapshot => {\n          const changes = await snapshot.docChanges();\n          const isInitialLoad =\n            snapshot.size === changes.length &&\n            changes.every(change => change.type === 'added');\n          if (isInitialLoad) {\n            const tags = {};\n            snapshot.forEach(doc => {\n              tags[doc.id] = doc.data();\n            });\n            await dispatch(loadUserTags(tags));\n          } else {\n            changes.forEach(async change => {\n              const [tagId, tagData, changeType] = await Promise.all([\n                change.doc.id,\n                change.doc.data(),\n                change.type\n              ]);\n              const { tags } = getState().currentUser;\n              if (changeType === 'added') {\n                if (tagId in tags) return;\n                console.log(tagId, tagData);\n                dispatch(createTag({ tagId, tagData }));\n                console.log('tag added');\n              } else if (changeType === 'removed') {\n                dispatch(deleteTag(tagId));\n              } else {\n                dispatch(updateTag({ tagId, tagData }));\n                console.log(`Updated Tag: ${tagData.name}`);\n              }\n            });\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const syncUserTasks = userId => {\n  return async (dispatch, getState) => {\n    try {\n      const subscription = await firebase\n        .queryCollection('tasks', ['assignedTo', 'array-contains', userId])\n        .onSnapshot(async snapshot => {\n          const changes = snapshot.docChanges();\n          const isInitialLoad =\n            snapshot.size === changes.length &&\n            changes.every(change => change.type === 'added');\n          if (isInitialLoad && changes.length > 1) {\n            const tasksById = {};\n            changes.forEach(change => {\n              const taskId = change.doc.id;\n              const taskData = change.doc.data();\n              const { subtaskIds, commentIds } = taskData;\n              tasksById[taskId] = {\n                isLoaded: {\n                  subtasks: subtaskIds.length === 0,\n                  comments: commentIds.length === 0\n                },\n                taskId,\n                ...taskData\n              };\n            });\n            dispatch(loadTasksById(tasksById));\n            dispatch(loadAssignedTasks(Object.keys(tasksById)));\n          } else {\n            changes.forEach(async change => {\n              const [taskId, taskData, changeType] = await Promise.all([\n                change.doc.id,\n                change.doc.data(),\n                change.type\n              ]);\n              if (changeType === 'added') {\n                if (!(taskId in getState().tasksById)) {\n                  dispatch(addTask({ taskId, taskData }));\n                }\n                dispatch(addAssignedTask(taskId));\n                console.log('task added');\n              } else if (changeType === 'removed') {\n                const { listId } = taskData;\n                dispatch(removeAssignedTask(taskId));\n                if (taskId in getState().tasksById && !change.doc.exists) {\n                  dispatch(removeTask({ taskId, listId }));\n                }\n              } else {\n                dispatch(updateTask({ taskId, taskData }));\n                console.log(`Updated Task: ${taskData.name}`);\n              }\n            });\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const syncCurrentUserData = userId => {\n  return async (dispatch, getState) => {\n    try {\n      const subscription = await firebase\n        .getDocRef('users', userId)\n        .onSnapshot(snapshot => {\n          const userData = snapshot.data() || null;\n          if (userData) {\n            userData.tempSettings = {\n              tasks: { ...userData.settings.tasks }\n            };\n          }\n          if (!getState().currentUser) {\n            dispatch(setCurrentUser(userData));\n          } else {\n            dispatch(updateUser({ userId, userData }));\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n\nexport const syncNotifications = userId => {\n  return async (dispatch, getState) => {\n    try {\n      const subscription = await firebase\n        .getDocRef('users', userId)\n        .collection('notifications')\n        .where('isActive', '==', true)\n        .onSnapshot(async snapshot => {\n          const changes = snapshot.docChanges();\n          const isInitialLoad =\n            snapshot.size === changes.length &&\n            changes.every(change => change.type === 'added');\n          if (isInitialLoad && changes.length > 1) {\n            const notificationsById = {};\n            changes.forEach(change => {\n              const notificationId = change.doc.id;\n              const notificationData = change.doc.data();\n              notificationsById[notificationId] = {\n                notificationId,\n                ...notificationData\n              };\n            });\n            await dispatch(loadNotifications(notificationsById));\n          } else {\n            changes.forEach(async change => {\n              const [\n                notificationId,\n                notificationData,\n                changeType\n              ] = await Promise.all([\n                change.doc.id,\n                change.doc.data(),\n                change.type\n              ]);\n              const { notifications } = getState().currentUser;\n              switch (changeType) {\n                case 'added': {\n                  if (notifications && notificationId in notifications) return;\n                  dispatch(\n                    addNotification({ notificationId, notificationData })\n                  );\n                  console.log('notification added');\n                  break;\n                }\n                case 'removed': {\n                  if (\n                    !change.doc.exists &&\n                    notifications &&\n                    notificationId in notifications\n                  ) {\n                    dispatch(removeNotification(notificationId));\n                  }\n                  break;\n                }\n                default: {\n                  dispatch(\n                    updateNotification({ notificationId, notificationData })\n                  );\n                  break;\n                }\n              }\n            });\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","export const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const LOAD_FOLDERS = 'LOAD_FOLDERS';\nexport const ADD_FOLDER = 'ADD_FOLDER';\nexport const REMOVE_FOLDER = 'REMOVE_FOLDER';\nexport const UPDATE_FOLDER = 'UPDATE_FOLDER';\nexport const REORDER_FOLDERS = 'REORDER_FOLDERS';\nexport const UPDATE_FOLDER_IDS = 'UPDATE_FOLDER_IDS';\nexport const LOAD_TASKS_DUE_SOON = 'LOAD_TASKS_DUE_SOON';\nexport const ADD_TASK_DUE_SOON = 'ADD_TASK_DUE_SOON';\nexport const REMOVE_TASK_DUE_SOON = 'DELETE_TASK_DUE_SOON';\nexport const UPDATE_TASK_DUE_SOON = 'UPDATE_TASK_DUE_SOON';\nexport const LOAD_USER_TAGS = 'LOAD_USER_TAGS';\nexport const ADD_TAG = 'ADD_TAG';\nexport const REMOVE_TAG = 'REMOVE_TAG';\nexport const UPDATE_TAG = 'UPDATE_TAG';\nexport const CREATE_TAG = 'CREATE_TAG';\nexport const DELETE_TAG = 'DELETE_TAG';\nexport const LOAD_ASSIGNED_TASKS = 'LOAD_ASSIGNED_TASKS';\nexport const ADD_ASSIGNED_TASK = 'ADD_ASSIGNED_TASK';\nexport const REMOVE_ASSIGNED_TASK = 'REMOVE_ASSIGNED_TASK';\nexport const SET_TEMP_TASK_SETTINGS = 'SET_TEMP_TASK_SETTINGS';\nexport const ADD_NOTIFICATION = 'ADD_NOTIFICATION';\nexport const REMOVE_NOTIFICATION = 'ADD_NOTIFICATION';\nexport const UPDATE_NOTIFICATION = 'UPDATE_NOTIFICATION';\nexport const LOAD_NOTIFICATIONS = 'LOAD_NOTIFICATIONS';","// Full names, shortnames, and total days of months,\n// excluding February (depends on leap year)\nexport const MONTHS = [\n  {\n    long: 'January',\n    short: 'Jan',\n    daysTotal: 31\n  },\n  {\n    long: 'February',\n    short: 'Feb',\n    daysTotal: null\n  },\n  {\n    long: 'March',\n    short: 'Mar',\n    daysTotal: 31\n  },\n  {\n    long: 'April',\n    short: 'Apr',\n    daysTotal: 30\n  },\n  {\n    long: 'May',\n    short: 'May',\n    daysTotal: 31\n  },\n  {\n    long: 'June',\n    short: 'Jun',\n    daysTotal: 30\n  },\n  {\n    long: 'July',\n    short: 'Jul',\n    daysTotal: 31\n  },\n  {\n    long: 'August',\n    short: 'Aug',\n    daysTotal: 31\n  },\n  {\n    long: 'September',\n    short: 'Sep',\n    daysTotal: 30\n  },\n  {\n    long: 'October',\n    short: 'Oct',\n    daysTotal: 31\n  },\n  {\n    long: 'November',\n    short: 'Nov',\n    daysTotal: 30\n  },\n  {\n    long: 'December',\n    short: 'Dec',\n    daysTotal: 31\n  }\n];\n\n// Full names and shortnames of days of week\nexport const WEEK_DAYS = [\n  { long: 'Sunday', short: 'Sun', narrow: 'S' },\n  { long: 'Monday', short: 'Mon', narrow: 'M' },\n  { long: 'Tuesday', short: 'Tue', narrow: 'T' },\n  { long: 'Wednesday', short: 'Wed', narrow: 'W' },\n  { long: 'Thursday', short: 'Thu', narrow: 'T' },\n  { long: 'Friday', short: 'Fri', narrow: 'F' },\n  { long: 'Saturday', short: 'Sat', narrow: 'S' }\n];\n","// Helper functions for working with date objects\n\n/* eslint-disable no-nested-ternary */\nimport { MONTHS, WEEK_DAYS } from './constants';\n\nexport { MONTHS, WEEK_DAYS };\n\nexport const isLeapYear = year =>\n  (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n\nexport const getMonthFirstDay = (monthIndex, year) =>\n  new Date(year, monthIndex, 1).getDay();\n\nexport const isToday = date =>\n  new Date().setHours(0, 0, 0, 0) === new Date(+date).setHours(0, 0, 0, 0);\n\nexport const isYesterday = date => {\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  return today.setDate(today.getDate() - 1) === new Date(+date).setHours(0, 0, 0, 0);\n};\n\nexport const isTomorrow = date => {\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  return today.setDate(today.getDate() + 1) === new Date(+date).setHours(0, 0, 0, 0);\n};\n\nexport const isThisYear = date => {\n  return date.getFullYear() === new Date().getFullYear();\n};\n\nexport const getMonthDays = (monthIndex, year) => {\n  if (monthIndex === 1) {\n    return isLeapYear(year) ? 29 : 28;\n  }\n  return MONTHS[monthIndex].daysTotal;\n};\n\nexport const getPrevMonth = (monthIndex, year) => {\n  return {\n    month: monthIndex > 0 ? monthIndex - 1 : 11,\n    year: monthIndex > 0 ? year : year - 1\n  };\n};\n\nexport const getNextMonth = (monthIndex, year) => {\n  return {\n    month: monthIndex < 11 ? monthIndex + 1 : 0,\n    year: monthIndex < 11 ? year : year + 1\n  };\n};\n\nexport const getMonthDates = (month, year) => {\n  const monthDays = getMonthDays(month, year);\n  const monthFirstDay = getMonthFirstDay(month, year);\n  const { month: prevMonth, year: prevMonthYear } = getPrevMonth(month, year);\n  const prevMonthDays = getMonthDays(prevMonth, prevMonthYear);\n  const daysFromPrevMonth = monthFirstDay;\n  const daysFromNextMonth = 7 - ((monthFirstDay + monthDays) % 7);\n  const prevMonthDates = [...new Array(daysFromPrevMonth)].map((n, i) => {\n    return {\n      day: prevMonthDays - daysFromPrevMonth + i + 1,\n      month: prevMonth,\n      year: prevMonthYear\n    };\n  });\n\n  const thisMonthDates = [...new Array(monthDays)].map((n, i) => {\n    return {\n      day: i + 1,\n      month,\n      year\n    };\n  });\n\n  const nextMonthDates = [...new Array(daysFromNextMonth)].map((n, i) => {\n    return {\n      day: i + 1,\n      ...getNextMonth(month, year)\n    };\n  });\n\n  return [...prevMonthDates, ...thisMonthDates, ...nextMonthDates];\n};\n\nexport const isDate = date =>\n  Object.prototype.toString.call(date) === '[object Date]';\n\nexport const getSimpleDate = date => {\n  const dateObj =\n    !isDate(date) && typeof date === 'string' ? new Date(date) : date;\n  return {\n    day: dateObj.getDate(),\n    month: dateObj.getMonth(),\n    year: dateObj.getFullYear()\n  };\n};\n\nexport const isSimpleDate = date => {\n  return date && 'day' in date && 'month' in date && 'year' in date;\n};\n\nexport const isSameDate = (date, base = new Date()) => {\n  if (\n    (!isDate(date) && !isSimpleDate(date)) ||\n    (!isDate(base) && !isSimpleDate(base))\n  )\n    return false;\n  const dateDay = date.day || date.getDate();\n  const dateMonth = date.month || date.getMonth();\n  const dateYear = date.year || date.getFullYear();\n  const baseDay = base.day || base.getDate();\n  const baseMonth = base.month || base.getMonth();\n  const baseYear = date.year || base.getFullYear();\n  return (\n    dateDay === baseDay && dateMonth === baseMonth && dateYear === baseYear\n  );\n};\n\nexport const getNextYears = (num, startingYear = new Date().getFullYear()) => {\n  return [...new Array(num)].map((item, i) => {\n    return startingYear + i;\n  });\n};\n\n/**\n * Pads the start of given value with zero until it reaches the given length\n * @param {Number|String} value - The string to pad\n * @param {Number} length - The target length\n */\n\nexport const padZero = (value, length) => {\n  return `${value}`.padStart(length, '0');\n};\n\n/**\n * Returns string representation of simple date object with format `mm-dd-yy`\n * @param {Object} date - simple date object\n */\nexport const toSimpleDateString = date => {\n  const simpleDate = isSimpleDate(date)\n    ? date\n    : isDate(date)\n    ? getSimpleDate(date)\n    : undefined;\n  if (!simpleDate) return '';\n  const { day, month, year } = simpleDate;\n  return `${padZero(month + 1, 2)}-${padZero(day, 2)}-${year - 2000}`;\n};\n\n/**\n * Converts simple date string back to simple date object\n * @param {String} dateString\n */\nexport const toSimpleDateObj = dateString => {\n  const dateArr = dateString.split('-');\n  const month = dateArr[0] - 1;\n  const day = +dateArr[1];\n  const year = +dateArr[2] + 2000;\n  if (day > getMonthDays(month, year)) {\n    return getSimpleDate(new Date(year, month, day));\n  }\n  return {\n    month,\n    day,\n    year\n  };\n};\n\nexport const isSDSFormat = dateString => {\n  return /^\\d{2}-\\d{2}-\\d{2}$/.test(dateString);\n};\n\n/**\n * Checks if date falls within specified time frame\n * @param {Date Object} date - Javascript date object\n * @param {Number} num - The number of days comprising the time frame to check the date against\n * @param {Date Object} startingDate - The first day of the time frame\n */\nexport const isWithinDays = (date, num, startingDate = new Date()) => {\n  const timeStart = startingDate.setHours(0, 0, 0, 0);\n  const endingDate = new Date(startingDate);\n  const timeEnd = endingDate.setDate(endingDate.getDate() + num);\n  return +date >= timeStart && +date < timeEnd;\n};\n\nexport const isPriorDate = (date, baseDate = new Date()) => {\n  return +date < baseDate.setHours(0, 0, 0, 0);\n};\n\nexport const toDateString = (\n  date,\n  options = {\n    useRelative: false,\n    format: {\n      weekday: 'short',\n      month: 'short',\n      day: 'numeric',\n      year: '2-digit'\n    }\n  }\n) => {\n  const { useRelative, format } = options;\n  if (useRelative) {\n    if (isToday(date)) {\n      return 'Today';\n    }\n    if (isYesterday(date)) {\n      return 'Yesterday';\n    }\n    if (isTomorrow(date)) {\n      return 'Tomorrow';\n    }\n    if (isWithinDays(date, 7)) {\n      return WEEK_DAYS[date.getDay()].long;\n    }\n  }\n  return Object.keys(format)\n    .map(key => {\n      switch (key) {\n        case 'weekday': {\n          const value = format[key];\n          const weekday = date.getDay();\n          return WEEK_DAYS[weekday][value];\n        }\n        case 'month': {\n          const value = format[key];\n          const month = date.getMonth();\n          if (value === 'numeric') {\n            return month + 1;\n          }\n          if (value === '2-digit') {\n            return padZero(month + 1, 2);\n          }\n          return MONTHS[month][value];\n        }\n        case 'day': {\n          const value = format[key];\n          const day = date.getDate();\n          if (value === '2-digit') {\n            return padZero(day, 2);\n          }\n          return day;\n        }\n        case 'year': {\n          const value = format[key];\n          const year = date.getFullYear();\n          if (useRelative && isThisYear(date)) {\n            return null;\n          }\n          if (value === '2-digit') {\n            return `'${+year.slice(2)}`;\n          }\n          return year;\n        }\n        default: {\n          return key;\n        }\n      }\n    })\n    .join(' ')\n    .trim();\n};\n\nexport const toTimeString = (date, { format = 'h:mm:ss', hour12 = true }) => {\n  try {\n    if (!isDate(date)) {\n      throw new TypeError('Not a Date object');\n    }\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const seconds = date.getSeconds();\n    const timeString = format\n      .split(':')\n      .map((unit, i) => {\n        const digits = unit.length;\n        if (i === 0) {\n          const h = hour12 && hours > 12 ? hours - 12 : hours;\n          return digits > 1 && h < 10 ? padZero(h, digits) : h;\n        }\n        if (i === 1) {\n          return digits > 1 && minutes < 10\n            ? padZero(minutes, digits)\n            : minutes;\n        }\n        if (i === 2) {\n          return digits > 1 && seconds < 10\n            ? padZero(seconds, digits)\n            : seconds;\n        }\n      })\n      .join(':');\n    return hour12 ? `${timeString} ${hours < 12 ? 'AM' : 'PM'}` : timeString;\n  } catch (e) {\n    console.error(e);\n  }\n};\n","import { toDateString, isPriorDate } from '../../utils/date';\n\nexport const getCurrentUser = state => {\n  return state.currentUser;\n};\n\nexport const getCurrentUserId = state => {\n  const { currentUser } = state;\n  if (!currentUser) return null;\n  return currentUser.userId;\n};\n\nexport const getFolders = state => {\n  const { currentUser } = state;\n  if (!currentUser) return null;\n  return currentUser.folders;\n};\n\nexport const getNotifications = state => {\n  const { currentUser } = state;\n  if (!currentUser) return null;\n  return currentUser.notifications;\n};\n\nexport const getNotificationsArray = state => {\n  const { currentUser } = state;\n  if (!currentUser) return [];\n  const { notifications } = currentUser;\n  if (!notifications) return [];\n  const getMillis = obj =>\n    obj.createdAt ? obj.createdAt.toMillis() : Date.now();\n  return Object.keys(notifications)\n    .map(notificationId => notifications[notificationId])\n    .sort((a, b) => {\n      return getMillis(b) - getMillis(a);\n    });\n};\n\nexport const getTaskSettings = state => {\n  const { currentUser } = state;\n  if (!currentUser) return null;\n  return currentUser.settings.tasks;\n};\n\nexport const getTempTaskSettings = state => {\n  const { currentUser } = state;\n  if (!currentUser) return null;\n  return currentUser.tempSettings.tasks;\n};\n\nexport const getAssignedTasks = state => {\n  const { currentUser } = state;\n  if (!currentUser) return null;\n\n  return currentUser.assignedTasks;\n};\n\nexport const getFolderIds = state => {\n  const { currentUser } = state;\n  if (!currentUser) return [];\n  return currentUser.folderIds;\n};\n\nexport const getSortedFilteredTaskGroups = state => {\n  const { currentUser } = state;\n  if (!currentUser) return [];\n  const { tempSettings, assignedTasks } = currentUser;\n  const { sortBy, view } = tempSettings.tasks;\n  const { folders } = currentUser;\n  if (!folders) return [];\n  switch (sortBy) {\n    case 'project': {\n      const { tasksById } = state;\n      if (!assignedTasks || !tasksById) return [];\n      const { projectIds } = currentUser;\n      const projectTasks = projectIds.reduce((tasksByProject, projectId) => {\n        const folder = folders[projectId];\n        if (!folder) return tasksByProject;\n        const { name, taskIds } = folder;\n        return tasksByProject.concat(\n          taskIds.length > 0\n            ? {\n                taskIds:\n                  view === 'active'\n                    ? taskIds.filter(taskId => !tasksById[taskId].isCompleted)\n                    : view === 'completed'\n                    ? taskIds.filter(taskId => tasksById[taskId].isCompleted)\n                    : taskIds,\n                projectId,\n                name,\n                projectName: name,\n                dueDate: null,\n                folderId: projectId,\n                userPermissions: {\n                  enableNameChange: false,\n                  enableTaskAdd: false,\n                  enableDragNDrop: true\n                }\n              }\n            : []\n        );\n      }, []);\n      const miscFolder = folders['4'];\n      const noProject =\n        miscFolder.taskIds.length > 0\n          ? {\n              ...miscFolder,\n              projectId: null,\n              projectName: null,\n              dueDate: null,\n              taskIds:\n                view === 'active'\n                  ? miscFolder.taskIds.filter(\n                      taskId => !tasksById[taskId].isCompleted\n                    )\n                  : view === 'completed'\n                  ? miscFolder.taskIds.filter(\n                      taskId => tasksById[taskId].isCompleted\n                    )\n                  : miscFolder.taskIds,\n              userPermissions: {\n                enableNameChange: false,\n                enableTaskAdd: true,\n                enableDragNDrop: true\n              }\n            }\n          : null;\n      return [...projectTasks, ...(noProject ? [noProject] : [])];\n    }\n    case 'folder': {\n      if (!folders) return [];\n      const { folderIds } = currentUser;\n      const { tasksById } = state;\n      return folderIds.map(folderId => {\n        const { taskIds } = folders[folderId];\n        return {\n          ...folders[folderId],\n          taskIds:\n            view === 'active'\n              ? taskIds.filter(taskId => !tasksById[taskId].isCompleted)\n              : view === 'completed'\n              ? taskIds.filter(taskId => tasksById[taskId].isCompleted)\n              : taskIds,\n          projectId: null,\n          projectName: null,\n          dueDate: null,\n          userPermissions: {\n            enableNameChange:\n              folderId !== '0' &&\n              folderId !== '1' &&\n              folderId !== '2' &&\n              folderId !== '3',\n            enableTaskAdd: true,\n            enableDragNDrop: true\n          }\n        };\n      });\n    }\n    case 'dueDate': {\n      const { tasksById } = state;\n      if (!assignedTasks || !tasksById) return [];\n      let dueDates = [];\n      const dueTasks = assignedTasks.reduce((tasksByDueDate, taskId) => {\n        const { dueDate, isCompleted } = tasksById[taskId];\n        if (view === 'active' && isCompleted) return tasksByDueDate;\n        if (view === 'completed' && !isCompleted) return tasksByDueDate;\n        const isPastDue = dueDate && isPriorDate(dueDate.toDate());\n        if (dueDate && !isPastDue) {\n          if (!(`${dueDate.toMillis()}` in tasksByDueDate)) {\n            tasksByDueDate[`${dueDate.toMillis()}`] = {\n              taskIds: [],\n              projectId: null,\n              name: toDateString(dueDate.toDate(), {\n                useRelative: true,\n                format: { weekday: 'short', month: 'short', day: 'numeric' }\n              }),\n              projectName: null,\n              folderId: `${dueDate.toMillis()}`,\n              dueDate: dueDate.toMillis(),\n              userPermissions: {\n                enableNameChange: false,\n                enableTaskAdd: true,\n                enableDragNDrop: true\n              }\n            };\n            dueDates = [...dueDates, dueDate.toMillis()];\n          }\n          tasksByDueDate[`${dueDate.toMillis()}`].taskIds = [\n            ...tasksByDueDate[`${dueDate.toMillis()}`].taskIds,\n            taskId\n          ];\n        } else if (dueDate && isPastDue) {\n          if (!('pastDue' in tasksByDueDate)) {\n            tasksByDueDate.pastDue = {\n              taskIds: [],\n              projectId: null,\n              name: 'Past Due',\n              projectName: null,\n              folderId: null,\n              dueDate: 'pastDue',\n              userPermissions: {\n                enableNameChange: false,\n                enableTaskAdd: false,\n                enableDragNDrop: false\n              }\n            };\n          }\n          tasksByDueDate.pastDue.taskIds = [\n            ...tasksByDueDate.pastDue.taskIds,\n            taskId\n          ];\n        }\n        return tasksByDueDate;\n      }, {});\n      const unscheduled = folders['5'];\n      const noDueDate =\n        unscheduled.taskIds.length > 0\n          ? {\n              ...unscheduled,\n              taskIds:\n                view === 'active'\n                  ? unscheduled.taskIds.filter(\n                      taskId => !tasksById[taskId].isCompleted\n                    )\n                  : view === 'completed'\n                  ? unscheduled.taskIds.filter(\n                      taskId => tasksById[taskId].isCompleted\n                    )\n                  : unscheduled.taskIds,\n              projectId: null,\n              projectName: null,\n              dueDate: null,\n              userPermissions: {\n                enableNameChange: false,\n                enableTaskAdd: true,\n                enableDragNDrop: true\n              }\n            }\n          : null;\n      const { pastDue, ...restOfDueTasks } = dueTasks;\n      const sortedDueDates = [...dueDates].sort((a, b) => a - b);\n      return [\n        ...(pastDue ? [pastDue] : []),\n        ...sortedDueDates.map(date =>\n          `${date}` in folders\n            ? {\n                ...folders[`${date}`],\n                taskIds:\n                  view === 'active'\n                    ? folders[`${date}`].taskIds.filter(\n                        taskId => !tasksById[taskId].isCompleted\n                      )\n                    : view === 'completed'\n                    ? folders[`${date}`].taskIds.filter(\n                        taskId => tasksById[taskId].isCompleted\n                      )\n                    : folders[`${date}`].taskIds,\n                projectId: null,\n                name: toDateString(new Date(date), {\n                  useRelative: true,\n                  format: { weekday: 'short', month: 'short', day: 'numeric' }\n                }),\n                projectName: null,\n                folderId: `${date}`,\n                dueDate: date,\n                userPermissions: {\n                  enableNameChange: false,\n                  enableTaskAdd: true,\n                  enableDragNDrop: true\n                }\n              }\n            : restOfDueTasks[`${date}`]\n        ),\n        ...(noDueDate ? [noDueDate] : [])\n      ];\n    }\n    default: {\n      return [];\n    }\n  }\n};\n\nexport const getFolder = (state, folderId) => {\n  const { currentUser } = state;\n  if (!currentUser) return null;\n  return currentUser.folders[folderId];\n};\n\n// Returns array of tasks due within next given number of days\nexport const getTasksDueWithinDays = (state, days = 7) => {\n  const { currentUser, tasksById } = state;\n  if (!currentUser) return [];\n  const { assignedTasks } = currentUser;\n  if (!assignedTasks) return [];\n  const timeStart = new Date().setHours(0, 0, 0, 0);\n  const endingDate = new Date(timeStart);\n  const timeEnd = +new Date(endingDate.setDate(endingDate.getDate() + days));\n  return assignedTasks\n    .reduce((tasksDueSoon, taskId) => {\n      const task = tasksById[taskId];\n      if (task) {\n        const { isCompleted, dueDate } = task;\n        const dueDateMS = dueDate ? dueDate.toMillis() : null;\n        if (!isCompleted && dueDateMS <= timeEnd) {\n          return tasksDueSoon.concat(task);\n        }\n      }\n      return tasksDueSoon;\n    }, [])\n    .sort((a, b) => a.dueDate.toMillis() - b.dueDate.toMillis());\n};\n\nexport const getOverdueTasks = state => {\n  const { currentUser, tasksById } = state;\n  if (!currentUser) return [];\n  const { assignedTasks } = currentUser;\n  if (!assignedTasks) return [];\n  const timeEnd = new Date().setHours(0, 0, 0, 0);\n  return assignedTasks\n    .reduce((overdueTasks, taskId) => {\n      const task = tasksById[taskId];\n      if (task) {\n        const { isCompleted, dueDate } = task;\n        if (!isCompleted && dueDate && dueDate.toMillis() < timeEnd) {\n          return overdueTasks.concat(task);\n        }\n      }\n      return overdueTasks;\n    }, [])\n    .sort((a, b) => a.dueDate.toMillis() - b.dueDate.toMillis());\n};\n\nexport const getMergedProjectTags = (state, projectId) => {\n  const { projectsById, currentUser } = state;\n  if (!currentUser) return [];\n  const { tags: userTags } = currentUser;\n  const projectTags = projectId ? projectsById[projectId].tags : {};\n  const mergedTags = { ...userTags, ...projectTags };\n  return Object.keys(mergedTags).map(tag => mergedTags[tag]);\n};\n\nexport const getAllMergedTags = state => {\n  const { projectsById, currentUser } = state;\n  if (!currentUser) return [];\n  const { tags: userTags, projectIds } = currentUser;\n  const projectTags = projectIds.reduce((tags, projectId) => {\n    const project = projectsById[projectId];\n    if (project && project.tags) {\n      return {\n        ...tags,\n        ...project.tags\n      };\n    }\n    return tags;\n  }, {});\n  const mergedTags = { ...userTags, ...projectTags };\n  return Object.keys(mergedTags).map(tag => mergedTags[tag]);\n};\n\nexport const getCurrentUserProjects = state => {\n  const { currentUser, projectsById } = state;\n  if (!currentUser) return [];\n  const { projectIds } = currentUser;\n  return projectIds.map(projectId => projectsById[projectId]);\n};\n","import * as types from './types';\nimport { UPDATE_USER } from '../users/types';\n\nexport default (state = null, action) => {\n  switch (action.type) {\n    case types.SET_CURRENT_USER: {\n      const { currentUser } = action;\n      return currentUser;\n    }\n    case types.LOAD_FOLDERS: {\n      const { folders } = action;\n      return {\n        ...state,\n        folders\n      };\n    }\n    case types.LOAD_NOTIFICATIONS: {\n      const { notifications } = action;\n      return {\n        ...state,\n        notifications\n      };\n    }\n    case types.LOAD_USER_TAGS: {\n      const { tags } = action;\n      return {\n        ...state,\n        tags\n      };\n    }\n    case types.CREATE_TAG: {\n      const { tagId, tagData } = action;\n      return {\n        ...state,\n        tags: {\n          ...state.tags,\n          [tagId]: tagData\n        }\n      };\n    }\n    case types.DELETE_TAG: {\n      const { tagId } = action;\n      const { [tagId]: deletedTag, ...restOfTags } = state.tags;\n      return {\n        ...state,\n        tags: restOfTags\n      };\n    }\n    case types.UPDATE_TAG: {\n      const { tagId, tagData } = action;\n      return {\n        ...state,\n        tags: {\n          ...state.tags,\n          [tagId]: {\n            ...state.tags[tagId],\n            ...tagData\n          }\n        }\n      };\n    }\n    case types.ADD_FOLDER: {\n      const { folderId, folderData } = action;\n      return {\n        ...state,\n        folders: {\n          ...state.folders,\n          [folderId]: {\n            folderId,\n            ...folderData\n          }\n        }\n      };\n    }\n    case types.REMOVE_FOLDER: {\n      const { folderId } = action;\n      const { [folderId]: removedFolder, ...restOfFolders } = state.folders;\n      return {\n        ...state,\n        folders: restOfFolders\n      };\n    }\n    case types.ADD_NOTIFICATION: {\n      const { notificationId, notificationData } = action;\n      return {\n        ...state,\n        notifications: {\n          ...state.notifications,\n          [notificationId]: {\n            notificationId,\n            ...notificationData\n          }\n        }\n      };\n    }\n    case types.REMOVE_NOTIFICATION: {\n      const { notificationId } = action;\n      const {\n        [notificationId]: removedNotification,\n        ...restOfNotifications\n      } = state.notifications;\n      return {\n        ...state,\n        notifications: restOfNotifications\n      };\n    }\n    case types.UPDATE_NOTIFICATION: {\n      const { notificationId, notificationData } = action;\n      return {\n        ...state,\n        notifications: {\n          ...state.notifications,\n          [notificationId]: {\n            ...state.notifications[notificationId],\n            ...notificationData\n          }\n        }\n      };\n    }\n    case types.LOAD_ASSIGNED_TASKS: {\n      const currentAssignedTasks = state.assignedTasks || [];\n      const { assignedTasks } = action;\n      return {\n        ...state,\n        assignedTasks: [...currentAssignedTasks, ...assignedTasks]\n      };\n    }\n    case types.ADD_ASSIGNED_TASK: {\n      const { taskId } = action;\n      const assignedTasks = state.assignedTasks || [];\n      return {\n        ...state,\n        assignedTasks: [...assignedTasks, taskId]\n      };\n    }\n    case types.REMOVE_ASSIGNED_TASK: {\n      const { taskId } = action;\n      return {\n        ...state,\n        assignedTasks: [...state.assignedTasks.filter(id => id !== taskId)]\n      };\n    }\n    case types.UPDATE_FOLDER: {\n      const { folderId, folderData } = action;\n      return {\n        ...state,\n        folders: {\n          ...state.folders,\n          [folderId]: {\n            ...state.folders[folderId],\n            ...folderData\n          }\n        }\n      };\n    }\n    case types.UPDATE_FOLDER_IDS:\n    case types.REORDER_FOLDERS: {\n      const { folderIds } = action;\n      return {\n        ...state,\n        folderIds\n      };\n    }\n    case types.LOAD_TASKS_DUE_SOON: {\n      const { tasksDueSoon } = action;\n      return {\n        ...state,\n        tasksDueSoon\n      };\n    }\n    case types.ADD_TASK_DUE_SOON: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        tasksDueSoon: {\n          ...state.tasksDueSoon,\n          [taskId]: {\n            taskId,\n            ...taskData\n          }\n        }\n      };\n    }\n    case types.REMOVE_TASK_DUE_SOON: {\n      const { taskId } = action;\n      const { [taskId]: removedTask, ...restOfTasks } = state.tasksDueSoon;\n      return {\n        ...state,\n        tasksDueSoon: restOfTasks\n      };\n    }\n    case types.UPDATE_TASK_DUE_SOON: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        tasksDueSoon: {\n          ...state.tasksDueSoon,\n          [taskId]: {\n            ...state.tasksDueSoon[taskId],\n            ...taskData\n          }\n        }\n      };\n    }\n    case types.SET_TEMP_TASK_SETTINGS: {\n      const { view, sortBy } = action;\n      return {\n        ...state,\n        tempSettings: {\n          ...state.tempSettings,\n          tasks: {\n            ...state.tempSettings.tasks,\n            view: view || state.tempSettings.tasks.view,\n            sortBy: sortBy || state.tempSettings.tasks.sortBy\n          }\n        }\n      };\n    }\n    case UPDATE_USER: {\n      const { userData } = action;\n      return {\n        ...state,\n        ...userData\n      };\n    }\n    default:\n      return state;\n  }\n};\n","export const getDisplayName = WrappedComponent =>\n  WrappedComponent.displayName || WrappedComponent.name || 'Component';\n\nexport const generateKey = () =>\n  +Date.now() +\n  Math.random()\n    .toString(36)\n    .slice(2);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport {\n  currentUserActions,\n  currentUserSelectors\n} from '../../ducks/currentUser';\nimport { getDisplayName } from '../../utils/react';\n\nconst withAuthentication = WrappedComponent => {\n  class WithAuthentication extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        authUser: null\n      };\n    }\n\n    async componentDidMount() {\n      const {\n        firebase,\n        history,\n        syncCurrentUserData,\n        setCurrentUser\n      } = this.props;\n\n      this.listener = await firebase.auth.onAuthStateChanged(async authUser => {\n        if (authUser) {\n          this.unsubscribe = await syncCurrentUserData(authUser.uid);\n          this.setState({ authUser });\n          firebase.initPresenceDetection(authUser.uid);\n          history.push(`/0/home/${authUser.uid}`);\n        } else {\n          history.push(ROUTES.LOG_IN);\n          if (this.unsubscribe) {\n            this.unsubscribe();\n          }\n          setCurrentUser(null);\n          this.setState({ authUser: null });\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n      if (this.unsubscribe) {\n        this.unsubscribe();\n      }\n    }\n\n    render() {\n      const { currentUser } = this.props;\n      return (\n        <AuthUserContext.Provider value={currentUser}>\n          <WrappedComponent {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  WithAuthentication.displayName = `WithAuthentication(${getDisplayName(\n    WrappedComponent\n  )})`;\n\n  const mapStateToProps = state => {\n    return {\n      currentUser: currentUserSelectors.getCurrentUser(state)\n    };\n  };\n\n  const mapDispatchToProps = dispatch => ({\n    syncCurrentUserData: userId =>\n      dispatch(currentUserActions.syncCurrentUserData(userId)),\n    setCurrentUser: currentUser =>\n      dispatch(currentUserActions.setCurrentUser(currentUser))\n  });\n\n  return compose(\n    withRouter,\n    withFirebase,\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )\n  )(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport AuthUserContext from './context';\nimport * as ROUTES from '../../constants/routes';\nimport { getDisplayName } from '../../utils/react';\n\nconst withAuthorization = condition => WrappedComponent => {\n  class WithAuthorization extends Component {\n    componentDidMount() {\n      const { firebase, history } = this.props;\n      this.listener = firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          history.push(ROUTES.LOG_IN);\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {currentUser =>\n            condition(currentUser) ? (\n              <WrappedComponent currentUser={currentUser} {...this.props} />\n            ) : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  WithAuthorization.displayName = `WithAuthorization(${getDisplayName(\n    WrappedComponent\n  )})`;\n\n  return compose(\n    withRouter,\n    withFirebase\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","export const getUsersById = state => {\n  return state.usersById;\n};\n\nexport const getUserData = (state, userId) => {\n  return state.usersById[userId];\n};\n\nexport const getUserTaskIds = (state, userId) => {\n  const { taskIds } = state.usersById[userId];\n  if (!taskIds) return [];\n  return taskIds;\n};\n\n// returns array of all users\nexport const getUsersArray = state => {\n  const { usersById } = state;\n  return Object.keys(usersById).map(userId => {\n    return {\n      userId,\n      ...usersById[userId]\n    };\n  });\n};\n\n// returns subset of users\nexport const getMembersArray = (state, memberIds) => {\n  const { usersById } = state;\n  if (!memberIds) return [];\n  return memberIds.map(memberId => usersById[memberId]);\n};\n","import * as types from './types';\n\nconst usersById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_USERS_BY_ID: {\n      const { usersById } = action;\n      return {\n        ...state,\n        ...usersById\n      };\n    }\n    case types.LOAD_USER_DATA: {\n      const { user } = action;\n      return {\n        ...state,\n        ...user\n      };\n    }\n    case types.ADD_USER: {\n      const { userId, userData } = action;\n      return {\n        ...state,\n        [userId]: {\n          userId,\n          ...userData\n        }\n      };\n    }\n    case types.REMOVE_USER: {\n      const { userId } = action;\n      const { [userId]: deletedUser, ...restOfUsers } = state;\n      return restOfUsers;\n    }\n    case types.UPDATE_USER: {\n      const { userId, userData } = action;\n      return {\n        ...state,\n        [userId]: {\n          ...state[userId],\n          ...userData\n        }\n      };\n    }\n    case types.UPDATE_USER_STATUS: {\n      const { userId, status } = action;\n      return {\n        ...state,\n        [userId]: {\n          ...state[userId],\n          isOnline: status === 'online'\n        }\n      };\n    }\n    case types.REORDER_FOLDERS: {\n      const { userId, folderIds } = action;\n      return {\n        ...state,\n        [userId]: {\n          ...state[userId],\n          folderIds\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default usersById;\n","import React from 'react';\nimport featherIcons from '../../assets/feather/feather-sprite.svg';\n\nconst Icon = ({ name, className, width, height }) => (\n  <svg\n    className={`feather feather-${name} ${className}`}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    viewBox=\"0 0 24 24\"\n    width={width}\n    height={height}\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <use xlinkHref={`${featherIcons}#${name}`} />\n  </svg>\n);\n\nIcon.defaultProps = {\n  className: '',\n  width: 24,\n  height: 24\n};\n\nexport default Icon;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Icon } from '../Icon';\n\nconst ProjectTile = ({ projectId, name, layout, onClick, color }) => {\n  return (\n    <li className={`project-grid__tile project-grid__tile--${color}`}>\n      <Link\n        className=\"project-grid__link\"\n        to={`/0/projects/${projectId}/tasks`}\n        onClick={onClick}\n      >\n        <span className=\"project-grid__title\">{name}</span>\n        <span className=\"project-grid__icon\">\n          <Icon name={layout === 'board' ? 'trello' : 'list'} />\n        </span>\n      </Link>\n    </li>\n  );\n};\n\nexport default ProjectTile;\n","export const getProjectsById = state => {\n  return state.projectsById;\n};\n\nexport const getProjectsArray = state => {\n  const { projectsById } = state;\n  return Object.keys(projectsById).map(projectId => projectsById[projectId]);\n};\n\nexport const getProject = (state, projectId) => {\n  const { projectsById } = state;\n  return projectsById[projectId];\n};\n\nexport const getProjectTags = (state, projectId) => {\n  if (!projectId) return {};\n  const { projectsById } = state;\n  return projectsById[projectId].tags;\n};\n\nexport const getProjectName = (state, projectId) => {\n  if (!projectId) return '';\n  const { projectsById } = state;\n  const project = projectsById[projectId];\n  if (!project) return null;\n  return project.name;\n};\n\nexport const getProjectColor = (state, projectId) => {\n  if (!projectId) return null;\n  const { projectsById } = state;\n  const project = projectsById[projectId];\n  if (!project) return null;\n  return project.color;\n};\n\nexport const getProjectLoadedState = (state, projectId) => {\n  if (!projectId) return '';\n  const { projectsById } = state;\n  return projectsById[projectId].isLoaded;\n};\n\nexport const getProjectLists = (state, projectId) => {\n  const { projectsById, listsById } = state;\n  if (!projectsById || !listsById || !projectId) return [];\n  const { listIds } = projectsById[projectId];\n  return listIds.map(listId => listsById[listId]);\n};\n\nexport const getTempProjectSettings = (state, projectId) => {\n  const { projectsById } = state;\n  const { tempSettings } = projectsById[projectId];\n  return tempSettings;\n};\n","import * as types from './types';\n\nconst projectsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_PROJECTS_BY_ID: {\n      const { projectsById } = action;\n      return {\n        ...state,\n        ...projectsById\n      };\n    }\n    case types.LOAD_PROJECT: {\n      const { projectId, projectData } = action;\n      return {\n        ...state,\n        [projectId]: {\n          projectId,\n          ...projectData\n        }\n      };\n    }\n    case types.ADD_PROJECT: {\n      const { projectId, projectData } = action;\n      const { listIds, settings } = projectData;\n      const listCount = listIds.length;\n      return {\n        ...state,\n        [projectId]: {\n          projectId,\n          isLoaded: {\n            subtasks: listCount === 0,\n            tasks: listCount === 0,\n            lists: listCount === 0\n          },\n          tempSettings: {\n            tasks: { ...settings.tasks }\n          },\n          ...projectData\n        }\n      };\n    }\n    case types.REMOVE_PROJECT: {\n      const { projectId } = action;\n      const { [projectId]: deletedProject, ...restOfProjects } = state;\n      return restOfProjects;\n    }\n    case types.UPDATE_PROJECT: {\n      const { projectId, projectData } = action;\n      return {\n        ...state,\n        [projectId]: {\n          ...state[projectId],\n          ...projectData\n        }\n      };\n    }\n    case types.SET_PROJECT_LOADED_STATE: {\n      const { projectId, key } = action;\n      return {\n        ...state,\n        [projectId]: {\n          ...state[projectId],\n          isLoaded: {\n            ...state[projectId].isLoaded,\n            [key]: true\n          }\n        }\n      };\n    }\n    case types.REORDER_LISTS: {\n      const { projectId, listIds } = action;\n      return {\n        ...state,\n        [projectId]: {\n          ...state[projectId],\n          listIds\n        }\n      };\n    }\n    case types.UPDATE_PROJECT_TAGS: {\n      const { projectId, tags } = action;\n      return {\n        ...state,\n        [projectId]: {\n          ...state[projectId],\n          tags: {\n            ...tags\n          }\n        }\n      };\n    }\n    case types.SET_TEMP_PROJECT_SETTINGS: {\n      const { projectId, view, sortBy, layout } = action;\n      return {\n        ...state,\n        [projectId]: {\n          ...state[projectId],\n          tempSettings: {\n            ...state[projectId].tempSettings,\n            layout: layout || state[projectId].tempSettings.layout,\n            tasks: {\n              ...state[projectId].tempSettings.tasks,\n              view: view || state[projectId].tempSettings.tasks.view,\n              sortBy: sortBy || state[projectId].tempSettings.tasks.sortBy\n            }\n          }\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default projectsById;\n","export const SELECT_PROJECT = 'SELECT_PROJECT';\n\nexport const selectProject = projectId => {\n  return {\n    type: SELECT_PROJECT,\n    projectId\n  };\n};\n\nconst INITIAL_STATE = null;\n\nexport const selectedProject = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SELECT_PROJECT:\n      return action.projectId;\n    default:\n      return state;\n  }\n};\n\nexport const getSelectedProjectId = state => state.selectedProject;\n\nexport const getSelectedProject = state => {\n  const { selectedProject: projectId, projectsById } = state;\n  return projectsById[projectId];\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ProjectTile from './ProjectTile';\nimport './ProjectGrid.scss';\nimport { projectSelectors } from '../../ducks/projects';\nimport { selectProject as selectProjectAction } from '../../ducks/selectedProject';\nimport { Icon } from '../Icon';\nimport { currentUserSelectors } from '../../ducks/currentUser';\n\nconst ProjectGrid = ({\n  projects,\n  selectProject,\n  className,\n  openProjectComposer\n}) => (\n  <ul className={`project-grid ${className}`}>\n    {projects.map(project => (\n      <ProjectTile\n        key={project.projectId}\n        layout={project.layout}\n        name={project.name}\n        color={project.color}\n        projectId={project.projectId}\n        onClick={() => selectProject(project.projectId)}\n      />\n    ))}\n    <button\n      type=\"button\"\n      className=\"project-grid__tile project-grid__btn--add\"\n      onClick={openProjectComposer}\n    >\n      <span className=\"project-grid__btn--text\">Create project</span>\n      <Icon name=\"plus\" />\n    </button>\n  </ul>\n);\n\nProjectGrid.defaultProps = {\n  className: ''\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    projectsById: projectSelectors.getProjectsById(state),\n    projects: projectSelectors.getProjectsArray(state),\n    userId: currentUserSelectors.getCurrentUserId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectProject: projectId => dispatch(selectProjectAction(projectId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ProjectGrid);\n","import React, { Component } from 'react';\nimport { getDisplayName } from '../../utils/react';\n\nconst withOutsideClick = WrappedComponent => {\n  class WithOutsideClick extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        isTouchEnabled: false\n      };\n    }\n\n    componentDidMount() {\n      document.addEventListener('touchstart', this.handleTouch);\n      document.addEventListener('mousedown', this.handleOutsideClick, false);\n    }\n\n    componentWillUnmount() {\n      const { isTouchEnabled } = this.state;\n      if (isTouchEnabled) {\n        document.removeEventListener('touchstart', this.handleOutsideClick);\n      } else {\n        document.removeEventListener('mousedown', this.handleOutsideClick);\n        document.removeEventListener('touchstart', this.handleTouch);\n      }\n    }\n\n    handleTouch = () => {\n      this.setState({\n        isTouchEnabled: true\n      });\n      // if touch is detected, listen for touch events instead of click events\n      // to improve detection on touch devices\n      // remove touch handler to prevent unnecessary refires\n      document.removeEventListener('touchstart', this.handleTouch);\n      // remove outside click handler from click events\n      document.removeEventListener('mousedown', this.handleOutsideClick);\n      // reattach outside click handler to touchstart events\n      document.addEventListener('touchstart', this.handleOutsideClick);\n    };\n\n    setRef = ref => {\n      this.component = ref;\n    };\n\n    setInstance = ref => {\n      this.instance = ref;\n    };\n\n    handleOutsideClick = e => {\n      if (!this.component) {\n        throw new Error('Must set component ref to prop innerRef!');\n      }\n      if (\n        this.component.contains(e.target) ||\n        (!this.instance.onOutsideClick && !this.props.onOutsideClick)\n      )\n        return;\n      if (this.instance.onOutsideClick) {\n        this.instance.onOutsideClick(e);\n      } else {\n        const { onOutsideClick } = this.props;\n        if (onOutsideClick) {\n          onOutsideClick(e);\n        }\n      }\n      e.stopPropagation();\n    };\n\n    render() {\n      return (\n        <WrappedComponent\n          ref={this.setInstance}\n          innerRef={this.setRef}\n          {...this.props}\n        />\n      );\n    }\n  }\n  WithOutsideClick.displayName = `WithOutsideClick(${getDisplayName(\n    WrappedComponent\n  )})`;\n  return WithOutsideClick;\n};\n\nexport default withOutsideClick;\n","import React, { Component } from 'react';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { withOutsideClick } from '../withOutsideClick';\nimport './Modal.scss';\n\nclass Modal extends Component {\n  static defaultProps = {\n    onModalClick: () => null,\n    onOutsideClick: () => null\n  }\n  \n  onOutsideClick = e => {\n    const { onOutsideClick, onModalClose } = this.props;\n    if (onOutsideClick) {\n      onOutsideClick(e);\n    } else {\n      onModalClose(e);\n    }\n  };\n\n  render() {\n    const {\n      onModalClose,\n      children,\n      onModalClick,\n      size = 'md',\n      classes,\n      id,\n      innerRef\n    } = this.props;\n    return (\n      <div className={`modal ${classes.modal || ''}`} onClick={onModalClick}>\n        <div\n          id={id}\n          ref={innerRef}\n          className={`modal__content ${\n            classes.content || ''\n          } modal__content--${size}`}\n        >\n          <Button\n            type=\"button\"\n            className={`modal__btn--close ${\n            classes.button || ''\n          }`}\n            onClick={onModalClose}\n            iconOnly\n          >\n            <Icon name=\"x\" />\n          </Button>\n          {children}\n        </div>\n      </div>\n    );\n  }\n}\n\nModal.defaultProps = {\n  classes: {\n    modal: '',\n    content: '',\n    button: ''\n  }\n};\n\nexport default withOutsideClick(Modal);\n","import React from 'react';\n\nconst Radio = ({\n  classes = { radio: '', label: '' },\n  name,\n  id,\n  value,\n  onFocus,\n  onChange,\n  onInput,\n  isRequired,\n  onBlur,\n  inputRef,\n  hideLabel,\n  label,\n  onKeyDown,\n  isChecked,\n  ...rest\n}) => {\n  return (\n    <>\n      <input\n        className={`radio ${classes.radio}`}\n        id={id}\n        name={name}\n        type=\"radio\"\n        value={value}\n        onFocus={onFocus}\n        onChange={onChange}\n        onBlur={onBlur}\n        ref={inputRef}\n        onInput={onInput}\n        onKeyDown={onKeyDown}\n        required={isRequired}\n        checked={isChecked}\n        {...rest}\n      />\n      {!hideLabel && (\n        <label htmlFor={id} className={`radio__label ${classes.label}`}>\n          {label}\n        </label>\n      )}\n    </>\n  );\n};\n\nexport default Radio;\n","import React, { Component } from 'react';\nimport { Radio } from '../Radio';\nimport { withOutsideClick } from '../withOutsideClick';\nimport './ColorPicker.scss';\n\nclass ColorPicker extends Component {\n  static defaultProps = {\n    classes: {\n      colorPicker: ''\n    },\n    isActive: false,\n    style: {},\n    selectColor: () => null\n  };\n\n  state = {\n    selectedColor: 'default'\n  };\n\n  handleColorChange = e => {\n    const { selectColor } = this.props;\n    this.setState({\n      selectedColor: e.target.value\n    });\n    if (selectColor) {\n      selectColor(e.target.value);\n    }\n  };\n\n  render() {\n    const { style, isActive, classes, innerRef } = this.props;\n    const { selectedColor } = this.state;\n    return (\n      <div\n        ref={innerRef}\n        className={`color-picker ${classes.colorPicker || ''}`}\n        style={{ display: isActive ? 'block' : 'none', ...style }}\n      >\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--default'\n          }}\n          name=\"color\"\n          id=\"colorDefault\"\n          value=\"default\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'default'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--red'\n          }}\n          name=\"color\"\n          id=\"colorRed\"\n          value=\"red\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'red'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--pink'\n          }}\n          name=\"color\"\n          id=\"colorPink\"\n          value=\"pink\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'pink'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--grape'\n          }}\n          name=\"color\"\n          id=\"colorGrape\"\n          value=\"grape\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'grape'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--violet'\n          }}\n          name=\"color\"\n          id=\"colorViolet\"\n          value=\"violet\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'violet'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--indigo'\n          }}\n          name=\"color\"\n          id=\"colorIndigo\"\n          value=\"indigo\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'indigo'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--blue'\n          }}\n          name=\"color\"\n          id=\"colorBlue\"\n          value=\"blue\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'blue'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--cyan'\n          }}\n          name=\"color\"\n          id=\"colorCyan\"\n          value=\"cyan\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'cyan'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--teal'\n          }}\n          name=\"color\"\n          id=\"colorTeal\"\n          value=\"teal\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'teal'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--green'\n          }}\n          name=\"color\"\n          id=\"colorGreen\"\n          value=\"green\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'green'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--yellow'\n          }}\n          name=\"color\"\n          id=\"colorYellow\"\n          value=\"yellow\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'yellow'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--orange'\n          }}\n          name=\"color\"\n          id=\"colorOrange\"\n          value=\"orange\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'orange'}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withOutsideClick(ColorPicker);\n","import React from 'react';\nimport './ProjectIcon.scss';\n\nconst ProjectIcon = ({ className, color }) => (\n  <span className={`project-icon project-icon--${color} ${className}`} />\n);\n\nProjectIcon.defaultProps = {\n  className: '',\n  color: 'default'\n};\n\nexport default ProjectIcon;\n","import React, { Component } from 'react';\nimport './Avatar.scss';\nimport { fromJSON } from 'tough-cookie';\n\nexport default class Avatar extends Component {\n  static defaultProps = {\n    imgSrc: null,\n    classes: {\n      avatar: '',\n      img: '',\n      placeholder: ''\n    },\n    size: 'md',\n    variant: 'circle',\n    name: 'Guest'\n  };\n\n  getUserInitials = fullName => {\n    return fullName\n      .split(' ')\n      .map(name => name.charAt(0))\n      .join('')\n      .toUpperCase();\n  };\n\n  render() {\n    const {\n      imgSrc,\n      imgProps,\n      classes,\n      name,\n      variant,\n      color,\n      size\n    } = this.props;\n    return (\n      <div\n        className={`avatar avatar--${size} avatar--${variant} ${\n          classes.avatar\n        }`}\n      >\n        {imgSrc !== null ? (\n          <img\n            src={imgSrc}\n            alt={name}\n            className={`avatar__img ${classes.img}`}\n            {...imgProps}\n          />\n        ) : (\n          <div\n            className={`avatar__placeholder ${classes.placeholder}`}\n            style={{ backgroundColor: color }}\n          >\n            {this.getUserInitials(name)}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","export const BACKSPACE = 'Backspace';\nexport const ENTER = 'Enter';\nexport const TAB = 'Tab';\nexport const ARROW_DOWN = 'ArrowDown';\nexport const ARROW_UP = 'ArrowUp';\n","import React, { Component } from 'react';\n\nimport { Input } from '../Input';\nimport { Avatar } from '../Avatar';\nimport { Icon } from '../Icon';\nimport { withOutsideClick } from '../withOutsideClick';\nimport * as keys from '../../constants/keys';\nimport './MemberSearch.scss';\n\nclass MemberSearch extends Component {\n  static defaultProps = {\n    style: null,\n    anchor: null,\n    classes: {\n      avatar: '',\n      avatarPlaceholder: '',\n      wrapper: '',\n      input: '',\n      list: '',\n      item: '',\n      info: '',\n      noMatch: ''\n    },\n    placeholder: '',\n    type: 'text',\n    query: null\n  };\n\n  state = {\n    query: '',\n    isActive: false,\n    selectedMember: '',\n    selectedIndex: null,\n    filteredList: this.props.users\n  };\n\n  componentDidMount() {\n    const { type } = this.props;\n    if (type === 'hidden') return;\n    this.inputEl.focus();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { type, query } = this.props;\n    if (type === 'hidden' && query && query !== prevProps.query) {\n      this.updateList(query);\n    }\n  }\n\n  onOutsideClick = e => {\n    if (this.props.query) return;\n    if (this.state.query !== '') return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  matchUser = (user, query) => {\n    if (query === '') return false;\n    const { name, email, username } = user;\n    const regExp = new RegExp(query, 'i');\n    return regExp.test(name) || regExp.test(email) || regExp.test(username);\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({\n      query: '',\n      isActive: false,\n      selectedMember: '',\n      selectedIndex: null,\n      filteredList: this.props.users\n    });\n  };\n\n  onChange = e => {\n    const query = e.target.value;\n    this.updateList(query);\n  };\n\n  updateList = query => {\n    const { users } = this.props;\n    const { selectedMember } = this.state;\n    const filteredList = users.filter(user => this.matchUser(user, query));\n    const newIndex = filteredList.findIndex(item => item.userId === selectedMember);\n    const persistSelectedMember = newIndex !== -1;\n\n    this.setState({\n      selectedMember: persistSelectedMember\n        ? selectedMember\n        : filteredList.length > 0\n        ? filteredList[0].userId\n        : '',\n      selectedIndex: persistSelectedMember ? newIndex : 0,\n      query,\n      filteredList\n    });\n  };\n\n  onKeyDown = e => {\n    if (\n      e.key !== keys.TAB &&\n      e.key !== keys.ARROW_DOWN &&\n      e.key !== keys.ARROW_UP &&\n      e.key !== keys.ENTER\n    )\n      return;\n\n    const { filteredList, selectedIndex, selectedMember, query } = this.state;\n    const lastIndex = filteredList.length - 1;\n    const nextIndex =\n      selectedIndex === lastIndex ? 0 : selectedIndex + 1;\n    const prevIndex =\n      selectedIndex === 0 ? lastIndex : selectedIndex - 1;\n\n    // eslint-disable-next-line default-case\n    switch (e.key) {\n      case keys.ARROW_DOWN:\n      // eslint-disable-next-line no-fallthrough\n      case keys.TAB: {\n        this.setState({\n          selectedMember: !query ? filteredList[0].userId : filteredList[nextIndex].userId,\n          selectedIndex: !query ? 0 : nextIndex\n        });\n        break;\n      }\n      case keys.ARROW_UP: {\n        this.setState({\n          selectedMember: !query ? filteredList[lastIndex].userId : filteredList[prevIndex].userId,\n          selectedIndex: !query ? lastIndex : prevIndex\n        });\n        break;\n      }\n      case keys.ENTER: {\n        if (selectedMember === '') return;\n        this.selectMember(selectedMember, e);\n        break;\n      }\n    }\n\n    e.preventDefault();\n  };\n\n  selectMember = (memberId, e) => {\n    const { onSelectMember, onClose } = this.props;\n    onSelectMember(memberId, e);\n    if (onClose) {\n      onClose(e);\n    }\n  };\n\n  render() {\n    const {\n      assignedMembers,\n      style,\n      classes,\n      placeholder,\n      type,\n      innerRef,\n      anchor\n    } = this.props;\n    const { filteredList } = this.state;\n    const query = type === 'hidden' ? this.props.query : this.state.query;\n    const isActive =\n      type === 'hidden' ? this.props.isActive : this.state.isActive;\n      const selectedMember =\n      type === 'hidden' ? this.props.selectedMember : this.state.selectedMember;\n    const position = {};\n    if (anchor) {\n      const anchorRect = anchor.getBoundingClientRect();\n      position.top = anchorRect.top;\n      position.left = anchorRect.left;\n    }\n\n    return (\n      <div\n        className={`member-search__wrapper ${classes.wrapper || ''}`}\n        ref={innerRef}\n        style={{ ...position, ...style }}\n      >\n        <Input\n          name=\"query\"\n          className={`member-search ${classes.input || ''}`}\n          onChange={this.onChange}\n          value={query}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          type={type}\n          autoComplete=\"off\"\n          hideLabel\n          placeholder={placeholder}\n          onKeyDown={this.onKeyDown}\n          innerRef={el => (this.inputEl = el)}\n        />\n        {isActive && (\n          <ul className={`member-search__list ${classes.list || ''}`}>\n            {filteredList.length > 0 ? (\n              filteredList.map((user, i) => {\n                const { name, photoURL, email, username, userId } = user;\n                const isAssigned =\n                  assignedMembers && assignedMembers.indexOf(userId) !== -1;\n                return (\n                  <li\n                    className={`member-search__item ${classes.item || ''} ${\n                      selectedMember === userId ? 'is-selected' : ''\n                    }`}\n                    onClick={e => this.selectMember(userId, e)}\n                    key={userId}\n                    id={userId}\n                  >\n                    <Icon name={isAssigned ? 'user-minus' : 'user-plus'} />\n                    <Avatar\n                      classes={{\n                        avatar: `member-search__avatar--sm ${classes.avatar ||\n                          ''}`,\n                        placeholder: `member-search__avatar-placeholder--sm ${classes.avatarPlaceholder ||\n                          ''}`\n                      }}\n                      name={name}\n                      size=\"sm\"\n                      variant=\"circle\"\n                      imgSrc={photoURL}\n                    />\n                    <span\n                      className={`member-search__info member-search__name ${classes.info ||\n                        ''}`}\n                    >\n                      {name}\n                    </span>\n                    <span\n                      className={`member-search__info member-search__username ${classes.info ||\n                        ''}`}\n                    >\n                      {username}\n                    </span>\n                    <span\n                      className={`member-search__info member-search__email ${classes.info ||\n                        ''}`}\n                    >\n                      {email}\n                    </span>\n                  </li>\n                );\n              })\n            ) : (\n              <li className={`member-search__item ${classes.item || ''}`}>\n                <span\n                  className={`member-search__no-match ${classes.noMatch || ''}`}\n                >\n                  No matches found\n                </span>\n              </li>\n            )}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withOutsideClick(MemberSearch);\n","import React, { Component } from 'react';\n\nexport default class Popover extends Component {\n\n  render() {\n    const { className, onClick, style, children, isVisible } = this.props;\n    return (\n      <div className={`popover ${className}`} onClick={onClick} style={{...style, display: isVisible ? 'block' : 'none'}}>\n        {children}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from '../Button';\nimport Popover from './Popover';\nimport { withOutsideClick } from '../withOutsideClick';\nimport './Popover.scss';\n\nclass PopoverWrapper extends Component {\n  state = {\n    isActive: 'isActive' in this.props ? null : false\n  };\n\n  static defaultProps = {\n    classes: {\n      wrapper: '',\n      popover: ''\n    },\n    buttonProps: {},\n    align: {\n      outer: 'left',\n      inner: 'left'\n    },\n    anchorEl: null\n  };\n\n  onOutsideClick = e => {\n    const { onOutsideClick, onPopoverClose } = this.props;\n\n    if (onOutsideClick) {\n      onOutsideClick(e);\n    } else {\n\n      this.setState({\n        isActive: false\n      });\n\n      if (onPopoverClose) {\n        onPopoverClose(e);\n      }\n    }\n  };\n\n  toggleOpen = () => {\n    this.setState(prevState => ({\n      isActive: !prevState.isActive\n    }));\n  };\n\n  handleClose = e => {\n    if ('isActive' in this.props) return;\n    if (e.target.matches('input')) return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const {\n      children,\n      align,\n      onWrapperClick,\n      buttonProps,\n      classes,\n      anchorEl,\n      innerRef\n    } = this.props;\n    const isActive =\n      'isActive' in this.props ? this.props.isActive : this.state.isActive;\n\n    let popoverWrapperStyle = null;\n\n    if (anchorEl) {\n      const { offsetTop, offsetLeft } = anchorEl;\n      popoverWrapperStyle = {\n        position: 'absolute',\n        top: offsetTop,\n        [align.outer || 'left']: offsetLeft\n      };\n    }\n\n    return (\n      <div\n        className={`popover-wrapper ${isActive ? 'is-active' : ''} ${\n          classes.wrapper\n        }`}\n        ref={innerRef}\n        style={popoverWrapperStyle}\n        onClick={onWrapperClick}\n      >\n        <Button\n          type=\"button\"\n          onClick={this.toggleOpen}\n          {...buttonProps}\n        />\n          <Popover\n            isVisible={isActive}\n            className={`align-${align.inner || 'left'} ${classes.popover}`}\n            onClick={this.handleClose}\n          >\n            {children}\n          </Popover>\n      </div>\n    );\n  }\n}\n\nexport default withOutsideClick(PopoverWrapper);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon } from '../Icon';\nimport { Avatar } from '../Avatar';\nimport { MemberSearch } from '../MemberSearch';\nimport { PopoverWrapper } from '../Popover';\nimport { userSelectors } from '../../ducks/users';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport './MemberAssigner.scss';\n\nclass MemberAssigner extends Component {\n  static defaultProps = {\n    classes: {\n      memberAssigner: '',\n      avatar: '',\n      avatarPlaceholder: '',\n      popover: '',\n      popoverWrapper: ''\n    },\n    placeholder: '',\n    memberSearchIsDisabled: false\n  };\n\n  state = {\n    isMemberSearchActive: false\n  };\n\n  toggleMemberSearch = () => {\n    this.setState(prevState => ({\n      isMemberSearchActive: !prevState.isMemberSearchActive\n    }));\n  };\n\n  hideMemberSearch = e => {\n    this.setState({\n      isMemberSearchActive: false\n    });\n  };\n\n  render() {\n    const {\n      members,\n      onSelectMember,\n      classes,\n      memberIds,\n      users,\n      placeholder,\n      memberSearchIsDisabled\n    } = this.props;\n    const { isMemberSearchActive } = this.state;\n\n    return (\n      <div className={`member-assigner ${classes.memberAssigner || ''}`}>\n        <div className={`member-assigner__members ${classes.members || ''}`}>\n          {members.map(member => (\n            <Avatar\n              classes={{\n                avatar: `member-assigner__avatar ${classes.avatar || ''}`,\n                placeholder: `member-assigner__avatar-placeholder ${classes.avatarPlaceholder ||\n                  ''}`\n              }}\n              name={member.name}\n              size=\"sm\"\n              variant=\"circle\"\n              imgSrc={member.photoURL}\n              key={member.userId}\n            />\n          ))}\n        </div>\n        {!memberSearchIsDisabled && (\n          <PopoverWrapper\n            isActive={isMemberSearchActive}\n            onOutsideClick={this.hideMemberSearch}\n            classes={{\n              wrapper: `member-assigner__popover-wrapper ${classes.popoverWrapper ||\n                ''}`,\n              popover: `member-assigner__popover ${classes.popover || ''}`\n            }}\n            buttonProps={{\n              size: 'md',\n              iconOnly: true,\n              className: `member-assigner__btn--toggle-member-search ${\n                classes.button\n              } ${isMemberSearchActive ? 'is-active' : ''}`,\n              children: <Icon name=\"plus\" />,\n              onClick: this.toggleMemberSearch\n            }}\n          >\n            {isMemberSearchActive && (\n              <div className=\"member-assigner__search-container\">\n                <div className=\"member-assigner__icon-wrapper\">\n                  <Icon name=\"users\" />\n                </div>\n                <MemberSearch\n                  users={users}\n                  placeholder={placeholder}\n                  assignedMembers={memberIds}\n                  onSelectMember={onSelectMember}\n                  classes={{\n                    wrapper: 'member-assigner__search-wrapper',\n                    input: 'member-assigner__input',\n                    list: 'member-assigner__list'\n                  }}\n                />\n              </div>\n            )}\n          </PopoverWrapper>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    userId: currentUserSelectors.getCurrentUserId(state),\n    users: userSelectors.getUsersArray(state),\n    members: userSelectors.getMembersArray(state, ownProps.memberIds)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MemberAssigner);\n","import React from 'react';\n\nconst ProjectComposerControlGroup = ({ name, children, className }) => (\n  <div className={`project-composer__control-group ${className}`}>\n    <h4 className=\"project-composer__subheading\">{name}</h4>\n    {children}\n  </div>\n);\n\nProjectComposerControlGroup.defaultProps = {\n  className: ''\n};\n\nexport default ProjectComposerControlGroup;\n","import React, { Component } from 'react';\nimport { withAuthorization } from '../Session';\nimport { Modal } from '../Modal';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\nimport { Radio } from '../Radio';\nimport { Icon } from '../Icon';\nimport { ColorPicker } from '../ColorPicker';\nimport { ProjectIcon } from '../ProjectIcon';\nimport { MemberAssigner } from '../MemberAssigner';\nimport ProjectComposerControlGroup from './ProjectComposerControlGroup';\nimport './ProjectComposer.scss';\n\nconst settings = {\n  privacy: {\n    options: [\n      {\n        value: 'public',\n        label: 'Public'\n      },\n      {\n        value: 'private',\n        label: 'Private'\n      }\n    ]\n  },\n  layout: {\n    options: [\n      {\n        value: 'board',\n        label: (\n          <>\n            <Icon name=\"trello\" />\n            Board\n          </>\n        )\n      },\n      {\n        value: 'list',\n        label: (\n          <>\n            <Icon name=\"list\" />\n            List\n          </>\n        )\n      }\n    ]\n  }\n};\n\nclass ProjectComposer extends Component {\n  state = {\n    name: '',\n    layout: 'board',\n    color: 'default',\n    privacy: 'public',\n    memberIds: [this.props.currentUser.userId],\n    isColorPickerActive: false\n  };\n\n  reset = () => {\n    const { currentUser } = this.props;\n    const { userId } = currentUser;\n    this.setState({\n      name: '',\n      layout: 'board',\n      color: 'default',\n      privacy: 'public',\n      memberIds: [userId],\n      isColorPickerActive: false\n    });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { name, color, layout, privacy, memberIds } = this.state;\n    const isPrivate = privacy === 'private';\n    const { onClose, firebase, currentUser } = this.props;\n    const { userId } = currentUser;\n    firebase.addProject({\n      userId,\n      name,\n      color,\n      layout,\n      isPrivate,\n      memberIds\n    });\n    onClose();\n    this.reset();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  setColor = color => {\n    this.setState({\n      color\n    });\n  };\n\n  toggleColorPicker = () => {\n    this.setState(prevState => ({\n      isColorPickerActive: !prevState.isColorPickerActive\n    }));\n  };\n\n  hideColorPicker = e => {\n    const { isColorPickerActive } = this.state;\n    if (\n      !isColorPickerActive ||\n      (isColorPickerActive &&\n        e.target.matches('.project-composer__btn--toggle-color-picker'))\n    )\n      return;\n    this.setState({\n      isColorPickerActive: false\n    });\n  };\n\n  handleMemberAssignment = (userId, e) => {\n    const { memberIds } = this.state;\n    this.setState(prevState => ({\n      memberIds: memberIds.includes(userId)\n        ? prevState.memberIds.filter(memberId => memberId !== userId)\n        : [...prevState.memberIds, userId]\n    }));\n    e.preventDefault();\n  };\n\n  render() {\n    const {\n      name,\n      layout,\n      privacy,\n      color,\n      memberIds,\n      isColorPickerActive\n    } = this.state;\n\n    return (\n      <Modal\n        onModalClose={this.props.onClose}\n        size=\"md\"\n        classes={{ content: 'project-composer' }}\n      >\n        <h3 className=\"project-composer__heading\">Create new project</h3>\n        <form className=\"project-composer__form\" onSubmit={this.onSubmit}>\n          <Input\n            name=\"name\"\n            label=\"Project Name\"\n            labelClass=\"project-composer__label\"\n            value={name}\n            onChange={this.onChange}\n            type=\"text\"\n            className=\"project-composer__input--name\"\n          />\n          <div className=\"project-composer__settings\">\n            <ProjectComposerControlGroup\n              name=\"Highlight Color\"\n              className=\"project-composer__control-group--color\"\n            >\n              <Button\n                onClick={this.toggleColorPicker}\n                className={`project-composer__btn--toggle-color-picker ${\n                  isColorPickerActive ? 'is-active' : ''\n                }`}\n              >\n                <ProjectIcon\n                  className=\"project-composer__color-swatch\"\n                  color={color}\n                />\n                <Icon name=\"chevron-down\" />\n              </Button>\n              <ColorPicker\n                onOutsideClick={this.hideColorPicker}\n                isActive={isColorPickerActive}\n                selectColor={this.setColor}\n                classes={{ colorPicker: 'project-composer__color-picker' }}\n              />\n            </ProjectComposerControlGroup>\n          </div>\n          <ProjectComposerControlGroup name=\"Privacy\">\n            {settings.privacy.options.map(option => (\n              <Radio\n                key={option.value}\n                onChange={this.onChange}\n                isChecked={privacy === option.value}\n                label={option.label}\n                name=\"privacy\"\n                id={option.value}\n                value={option.value}\n                classes={{\n                  radio: 'project-composer__radio',\n                  label: 'project-composer__radio-label'\n                }}\n              />\n            ))}\n          </ProjectComposerControlGroup>\n          {privacy === 'public' && (\n            <ProjectComposerControlGroup name=\"Members\">\n              <MemberAssigner\n                placeholder=\"Add or remove member\"\n                memberIds={memberIds}\n                onSelectMember={this.handleMemberAssignment}\n              />\n            </ProjectComposerControlGroup>\n          )}\n          <ProjectComposerControlGroup name=\"Layout\">\n            {settings.layout.options.map(option => (\n              <Radio\n                key={option.value}\n                onChange={this.onChange}\n                isChecked={layout === option.value}\n                label={option.label}\n                name=\"layout\"\n                id={option.value}\n                value={option.value}\n                classes={{\n                  radio: 'project-composer__radio',\n                  label: 'project-composer__radio-label'\n                }}\n              />\n            ))}\n          </ProjectComposerControlGroup>\n          <Button\n            className=\"project-composer__btn--add\"\n            type=\"submit\"\n            onClick={this.onSubmit}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Create Project\n          </Button>\n        </form>\n      </Modal>\n    );\n  }\n}\n\nconst condition = currentUser => !!currentUser;\n\nexport default withAuthorization(condition)(ProjectComposer);\n","export const LIST = 'LIST';\nexport const TASK = 'TASK';\nexport const SUBTASK = 'SUBTASK';\nexport const FOLDER = 'FOLDER';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input } from '../Input';\nimport { Icon } from '../Icon';\nimport { withAuthorization } from '../Session';\nimport { projectSelectors } from '../../ducks/projects';\nimport { Button } from '../Button';\nimport './ListComposer.scss';\n\nclass ListComposer extends Component {\n  state = {\n    name: ''\n  };\n\n  clear = () => {\n    this.setState({ name: '' });\n  };\n\n  reset = () => {\n    this.clear();\n    const { toggle } = this.props;\n    this.input.blur();\n    toggle();\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { name } = this.state;\n    const { projectId, firebase } = this.props;\n    firebase.addList({ projectId, name });\n    this.clear();\n  };\n\n  onChange = e => {\n    this.setState({\n      name: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    const { toggle } = this.props;\n    toggle(e);\n    if (e.target.matches('button')) {\n      this.input.focus();\n    }\n  };\n\n  onBlur = e => {\n    const { name } = this.state;\n    if (name !== '') return;\n    const { toggle } = this.props;\n    toggle(e);\n  };\n\n  inputRef = ref => {\n    this.input = ref;\n    const { inputRef } = this.props;\n    inputRef(ref);\n  };\n\n  render() {\n    const { name } = this.state;\n    const { layout, isActive } = this.props;\n    return (\n      <div\n        className={`list-composer${isActive ? ' is-active' : ''} is-${layout}-layout`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"list-composer__form\" onSubmit={this.onSubmit}>\n        {!isActive && layout === \"list\" && (\n        <Button onClick={this.onFocus} color=\"primary\" className=\"list-composer__btn--icon\" iconOnly>\n          <Icon name=\"plus-circle\" />\n        </Button>\n        )\n        }\n          <Input\n            innerRef={this.inputRef}\n            onChange={this.onChange}\n            value={name}\n            placeholder={isActive ? 'Enter list name...' : 'Add a list'}\n            required\n            name=\"name\"\n            hideLabel\n            className=\"list-composer__input\"\n          />\n          {isActive && (\n            <div className=\"list-composer__footer\">\n              <Button\n                className=\"list-composer__btn list-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n                size=\"sm\"\n              >\n                Add List\n              </Button>\n              {layout === \"board\" &&\n              <Button\n                className=\"list-composer__btn list-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.reset}\n                size=\"sm\"\n              >\n                Cancel\n              </Button>\n              }\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    projectsById: projectSelectors.getProjectsById(state),\n    projectsArray: projectSelectors.getProjectsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListComposer)\n);\n","import React from 'react';\nimport './Toolbar.scss';\n\nconst Toolbar = ({ className, children, isActive, ...props }) => (\n  <div\n    className={`toolbar ${className} ${isActive ? 'is-active' : ''} `}\n    {...props}\n  >\n    {children}\n  </div>\n);\n\nToolbar.defaultProps = {\n  className: '',\n  isActive: true\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport './Menu.scss';\n\nconst Menu = ({ children, onClick, className = '', menuRef }) => {\n  return (\n    <ul className={`menu ${className}`} onClick={onClick} ref={menuRef}>\n      {children}\n    </ul>\n  );\n};\n\nexport default Menu;\n","import React from 'react';\nimport './Menu.scss';\n\nconst MenuItem = ({ children, className = '' }) => {\n  return <li className={`menu__item ${className}`}>{children}</li>;\n};\n\nexport default MenuItem;\n","import React, { Component } from 'react';\nimport { PopoverWrapper } from '../Popover';\nimport { Menu, MenuItem } from '../Menu';\nimport { Radio } from '../Radio';\nimport { Icon } from '../Icon';\nimport './SelectDropdown.scss';\n\nexport default class SelectDropdown extends Component {\n  static defaultProps = {\n    classes: {\n      wrapper: '',\n      dropdown: '',\n      menu: '',\n      item: '',\n      option: '',\n      label: '',\n      button: ''\n    },\n    options: {},\n    value: null,\n    align: {\n      outer: 'left',\n      inner: 'left'\n    }\n  };\n\n  state = {\n    isActive: false\n  };\n\n  toggleDropdown = () => {\n    this.setState(prevState => ({\n      isActive: !prevState.isActive\n    }));\n  };\n\n  closeDropdown = () => {\n    this.setState({\n      isActive: false\n    });\n  };\n\n  onChange = e => {\n    const { onChange } = this.props;\n    onChange(e);\n    this.closeDropdown();\n  };\n\n  render() {\n    const { isActive } = this.state;\n    const { classes, options, name, value, align } = this.props;\n\n    return (\n      <PopoverWrapper\n        isActive={isActive}\n        onOutsideClick={this.closeDropdown}\n        align={align}\n        classes={{\n          wrapper: `select-dropdown__wrapper ${classes.wrapper || ''}`,\n          popover: `select-dropdown ${classes.dropdown || ''}`\n        }}\n        buttonProps={{\n          isActive,\n          onClick: this.toggleDropdown,\n          className: `select-dropdown__btn--toggle ${classes.button || ''}`,\n          children: (\n            <>\n              {value && options[value].name}\n              <Icon name=\"chevron-down\" />\n            </>\n          )\n        }}\n      >\n        <Menu className={`select-dropdown__menu ${classes.menu || ''}`}>\n          {Object.keys(options).map(key => {\n            const option = options[key];\n            return (\n              <MenuItem\n                className={`select-dropdown__item ${classes.item || ''}`}\n                key={option.value}\n              >\n                <Radio\n                  name={name}\n                  id={option.value}\n                  value={option.value}\n                  isChecked={option.value === value}\n                  label={\n                    option.value === value ? (\n                      <>\n                        <Icon name=\"check\" />\n                        {option.name}\n                      </>\n                    ) : (\n                      option.name\n                    )\n                  }\n                  onChange={this.onChange}\n                  classes={{\n                    radio: `select-dropdown__option ${classes.option || ''}`,\n                    label: `select-dropdown__label ${classes.label || ''}`\n                  }}\n                  data-label={option.name}\n                />\n              </MenuItem>\n            );\n          })}\n        </Menu>\n      </PopoverWrapper>\n    );\n  }\n}\n","import React from 'react';\nimport { PopoverWrapper } from '../Popover';\nimport { Icon } from '../Icon';\nimport { Radio } from '../Radio';\nimport { Button } from '../Button';\nimport { SelectDropdown } from '../SelectDropdown';\nimport './Settings.scss';\n\nconst Settings = ({\n  icon,\n  onToggle,\n  onClose,\n  onSave,\n  isActive,\n  settings,\n  classes\n}) => (\n  <PopoverWrapper\n    isActive={isActive}\n    onOutsideClick={onClose}\n    classes={{\n      wrapper: `settings__wrapper ${classes.wrapper || ''}`,\n      popover: `settings ${classes.settings || ''}`\n    }}\n    align={{ inner: 'right' }}\n    buttonProps={{\n      isActive,\n      size: 'sm',\n      iconOnly: true,\n      className: `settings__btn ${classes.button || ''}`,\n      children: <Icon name={icon} />,\n      onClick: onToggle\n    }}\n  >\n    <Button\n      type=\"button\"\n      className=\"settings__btn--close\"\n      size=\"sm\"\n      onClick={onClose}\n      iconOnly\n    >\n      <Icon name=\"x\" />\n    </Button>\n    {settings.map(setting => (\n      <div\n        className={`settings__setting ${classes.setting || ''}`}\n        key={setting.name}\n      >\n        <div className={`settings__name ${classes.name || ''}`}>{setting.name}</div>\n        {\n          {\n            radio: (\n              <fieldset\n                className={`settings__fieldset ${classes.fieldset || ''}`}\n              >\n                {Object.keys(setting.options).map(key => {\n                  const option = setting.options[key];\n                  return (\n                    <Radio\n                      key={option.value}\n                      name={setting.key}\n                      id={option.value}\n                      value={option.value}\n                      isChecked={setting.value === option.value}\n                      label={option.name}\n                      onChange={setting.onChange}\n                      classes={{\n                        radio: `settings__radio ${classes.radio || ''}`,\n                        label: `settings__radio-label ${classes.radioLabel ||\n                          ''}`\n                      }}\n                    />\n                  );\n                })}\n              </fieldset>\n            ),\n            select: (\n              <SelectDropdown\n                name={setting.key}\n                onChange={setting.onChange}\n                value={setting.value}\n                options={setting.options}\n                classes={{\n                  wrapper: `settings__dropdown-wrapper ${classes.dropdownWrapper ||\n                    ''}`,\n                  dropdown: `settings__dropdown ${classes.dropdown || ''}`,\n                  option: `settings__select-option ${classes.selectOption ||\n                    ''}`,\n                  label: `settings__select-label ${classes.selectLabel || ''}`,\n                  menu: `settings__menu ${classes.menu || ''}`,\n                  item: `settings__item ${classes.item || ''}`,\n                  button: `settings__btn--dropdown ${classes.dropdownButton ||\n                    ''}`\n                }}\n              />\n            )\n          }[setting.type]\n        }\n      </div>\n    ))}\n    <Button\n      type=\"button\"\n      color=\"primary\"\n      variant=\"contained\"\n      className=\"settings__btn--save\"\n      size=\"sm\"\n      onClick={onSave}\n    >\n      Save Settings\n    </Button>\n  </PopoverWrapper>\n);\n\nSettings.defaultProps = {\n  icon: 'settings',\n  classes: {\n    name: '',\n    wrapper: '',\n    settings: '',\n    setting: '',\n    radio: '',\n    radioLabel: '',\n    selectOption: '',\n    selectLabel: '',\n    dropdown: '',\n    dropdownWrapper: '',\n    dropdownButton: '',\n    button: '',\n    menu: '',\n    item: ''\n  },\n  settings: {}\n};\n\nexport default Settings;\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { PopoverWrapper } from '../Popover';\nimport { Menu, MenuItem } from '../Menu';\nimport { Icon } from '../Icon';\nimport './DropdownMenu.scss';\n\nexport default class DropdownMenu extends Component {\n  static defaultProps = {\n    classes: {\n      wrapper: '',\n      dropdown: '',\n      menu: '',\n      item: '',\n      link: '',\n      button: ''\n    },\n    links: [],\n    activeLink: '',\n    icon: 'chevron-left',\n    align: {\n      outer: 'left',\n      inner: 'left'\n    }\n  };\n\n  state = {\n    isActive: false\n  };\n\n  toggleDropdown = () => {\n    this.setState(prevState => ({\n      isActive: !prevState.isActive\n    }));\n  };\n\n  closeDropdown = () => {\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const { isActive } = this.state;\n    const { classes, links, align, activeLink, icon } = this.props;\n\n    return (\n      <PopoverWrapper\n        isActive={isActive}\n        onOutsideClick={this.closeDropdown}\n        align={align}\n        classes={{\n          wrapper: `dropdown-menu__wrapper ${classes.wrapper || ''}`,\n          popover: `dropdown-menu ${classes.dropdown || ''}`\n        }}\n        buttonProps={{\n          isActive,\n          onClick: this.toggleDropdown,\n          className: `dropdown-menu__btn--toggle ${classes.button || ''}`,\n          children: (\n            <>\n              {!!activeLink && activeLink}\n              <Icon name={icon} />\n            </>\n          )\n        }}\n      >\n        <Menu\n          onClick={this.toggleDropdown}\n          aria-label=\"submenu\"\n          className={`dropdown-menu__list ${classes.menu || ''}`}\n        >\n          {links.map(link => {\n            return (\n              <MenuItem\n                className={`dropdown-menu__item ${classes.item || ''}`}\n                key={link.href}\n              >\n                <NavLink\n                  className={`dropdown-menu__link ${classes.link || ''}`}\n                  to={link.href}\n                >\n                  {link.text}\n                </NavLink>\n              </MenuItem>\n            );\n          })}\n        </Menu>\n      </PopoverWrapper>\n    );\n  }\n}\n","import { Value } from 'slate';\n\nexport const fromJSON = value => Value.fromJSON(value);\n\nexport const getUserIdsFromMentions = value => {\n  const { document } = value;\n  return document\n    .getInlinesByType('mention')\n    .map(mention => mention.data.get('userId'))\n    .toJS();\n};\n\nexport const getMentionedUsers = value => {\n  const { document } = value;\n  return document\n    .getInlinesByType('mention')\n    .map(mention => ({\n      userId: mention.data.get('userId'),\n      name: mention.data.get('name'),\n      username: mention.data.get('username')\n    }))\n    .toJS();\n};\n","import React, { Component } from 'react';\nimport { Editor } from 'slate-react';\nimport { Value } from 'slate';\nimport { Link } from 'react-router-dom';\nimport isEqual from 'lodash.isequal';\nimport { Toolbar } from '../Toolbar';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport initialValue from './value.json';\nimport * as keys from '../../constants/keys';\nimport { MemberSearch } from '../MemberSearch';\nimport { withOutsideClick } from '../withOutsideClick';\nimport './RichTextEditor.scss';\n\nconst DEFAULT_BLOCK = 'paragraph';\n\nconst schema = {\n  inlines: {\n    mention: {\n      isVoid: true\n    }\n  }\n};\n\nclass RichTextEditor extends Component {\n  static defaultProps = {\n    classes: {\n      container: '',\n      toolbar: '',\n      editor: '',\n      button: '',\n      addOns: ''\n    },\n    placeholder: '',\n    marks: [],\n    blocks: [],\n    inlines: [],\n    isMentionsEnabled: false,\n    onSubmit: () => null,\n    addOns: [],\n    isReadOnly: false\n  };\n\n  state = {\n    value: this.props.value\n      ? Value.fromJSON(this.props.value)\n      : Value.fromJSON(initialValue),\n    isMentionsListVisible: false,\n    query: '',\n    isFocused: false,\n    userSuggestions: this.props.mentions.users,\n    selectedMember: '',\n    selectedIndex: null\n  };\n\n  isEmpty = () => {\n    const { value } = this.state;\n    return isEqual(initialValue, value.toJSON());\n  };\n\n  hasChanges = () => {\n    const { value } = this.state;\n    const { value: prevValue } = this.props;\n    return !isEqual(prevValue, value.toJSON());\n  };\n\n  hasMark = type => {\n    const { value } = this.state;\n    return value.activeMarks.some(mark => mark.type === type);\n  };\n\n  hasInline = type => {\n    const { value, isMentionsListVisible } = this.state;\n    return (\n      value.inlines.some(inline => inline.type === type) ||\n      (type === 'mention' && isMentionsListVisible)\n    );\n  };\n\n  hasBlock = type => {\n    const { value } = this.state;\n    if (['ordered-list', 'unordered-list'].includes(type)) {\n      const {\n        value: { document, blocks }\n      } = this.state;\n      if (blocks.size === 0) return false;\n      const parent = document.getParent(blocks.first().key);\n      return this.hasBlock('list-item') && parent && parent.type === type;\n    }\n    return value.blocks.some(node => node.type === type);\n  };\n\n  renderMark = (props, editor, next) => {\n    const { children, mark, attributes } = props;\n\n    switch (mark.type) {\n      case 'bold':\n        return <strong {...attributes}>{children}</strong>;\n      case 'code':\n        return <code {...attributes}>{children}</code>;\n      case 'italic':\n        return <em {...attributes}>{children}</em>;\n      case 'underlined':\n        return <u {...attributes}>{children}</u>;\n      default:\n        return next();\n    }\n  };\n\n  renderNode = (props, editor, next) => {\n    const { attributes, children, node } = props;\n    const { data } = node;\n\n    switch (node.type) {\n      case 'paragraph':\n        return <p {...attributes}>{children}</p>;\n      case 'block-quote':\n        return <blockquote {...attributes}>{children}</blockquote>;\n      case 'unordered-list':\n        return <ul {...attributes}>{children}</ul>;\n      case 'ordered-list':\n        return <ol {...attributes}>{children}</ol>;\n      case 'heading-one':\n        return <h1 {...attributes}>{children}</h1>;\n      case 'heading-two':\n        return <h2 {...attributes}>{children}</h2>;\n      case 'list-item':\n        return <li {...attributes}>{children}</li>;\n      case 'mention':\n        return (\n          <Link className=\"mention\" to={data.get('href')} {...attributes}>\n            {node.text}\n          </Link>\n        );\n      default:\n        return next();\n    }\n  };\n\n  onKeyDown = (e, editor, next) => {\n    const { value } = editor;\n    const { document } = value;\n    const { isMentionsEnabled } = this.props;\n    const { isMentionsListVisible } = this.state;\n    const endOffset = value.selection.end.offset;\n    const lastChar = value.endText.text.slice(endOffset - 1, endOffset);\n    if (e.ctrlKey || e.metaKey) {\n      let mark;\n      switch (e.key) {\n        case 'b': {\n          mark = 'bold';\n          break;\n        }\n        case 'i': {\n          mark = 'italic';\n          break;\n        }\n        case 'u': {\n          mark = 'underlined';\n          break;\n        }\n        default: {\n          return next();\n        }\n      }\n      editor.toggleMark(mark);\n      e.preventDefault();\n    } else if (\n      isMentionsListVisible && \n        (e.key === keys.TAB ||\n      e.key === keys.ARROW_DOWN ||\n      e.key === keys.ARROW_UP ||\n      e.key === keys.ENTER)\n    ) {\n      const {\n        userSuggestions,\n        selectedIndex,\n        selectedMember,\n        query\n      } = this.state;\n      const lastIndex = userSuggestions.length - 1;\n      const nextIndex = selectedIndex === lastIndex ? 0 : selectedIndex + 1;\n      const prevIndex = selectedIndex === 0 ? lastIndex : selectedIndex - 1;\n      switch (e.key) {\n        case keys.TAB:\n        case keys.ARROW_DOWN: {\n          this.setState({\n            selectedMember: !query\n              ? userSuggestions[0].userId\n              : userSuggestions[nextIndex].userId,\n            selectedIndex: !query ? 0 : nextIndex\n          });\n          break;\n        }\n        case keys.ARROW_UP: {\n          this.setState({\n            selectedMember: !query\n              ? userSuggestions[lastIndex].userId\n              : userSuggestions[prevIndex].userId,\n            selectedIndex: !query ? lastIndex : prevIndex\n          });\n          break;\n        }\n        case keys.ENTER: {\n          if (selectedMember === '') return next();\n          this.insertMention(selectedMember);\n          break;\n        }\n        default: {\n          return next();\n        }\n      }\n      e.preventDefault();\n    } else {\n      const firstText = document.getFirstText();\n      const nextText = document.getNextText(firstText.key);\n      switch (e.key) {\n        case keys.BACKSPACE: {\n          e.preventDefault();\n          if (firstText.text === '' && !nextText) {\n            if (this.hasBlock('list-item')) {\n              const parent = document.getParent(value.focusBlock.key);\n              const ancestor = document.getParent(parent.key);\n              if (ancestor.object === 'document') {\n                editor\n                  .moveToRangeOfNode(value.focusBlock)\n                  .setBlocks(DEFAULT_BLOCK)\n                  .moveToRangeOfNode(parent)\n                  .unwrapBlock(parent.type)\n                  .normalize(document);\n              } else {\n                editor.unwrapBlock(parent.type);\n              }\n            }\n          } else {\n            editor.deleteBackward();\n            if (\n              isMentionsEnabled &&\n              isMentionsListVisible &&\n              lastChar === '@'\n            ) {\n              setTimeout(() => {\n                this.setState({\n                  query: '',\n                  userSuggestions: this.props.mentions.users,\n                  selectedMember: '',\n                  selectedIndex: null,\n                  isMentionsListVisible: false\n                });\n              }, 0);\n            }\n          }\n          break;\n        }\n        case '@': {\n          this.toggleMentionsList();\n          break;\n        }\n        default: {\n          return next();\n        }\n      }\n    }\n  };\n\n  onChange = ({ value }) => {\n    const { mentions } = this.props;\n    const { users } = mentions;\n    const { selectedMember } = this.state;\n    const query = this.getMention(value);\n    const userSuggestions = query\n      ? users.filter(user => this.matchUser(user, query))\n      : users;\n    const newIndex = userSuggestions.findIndex(\n      mention => mention.userId === selectedMember\n    );\n    const persistSelectedMember = newIndex !== -1;\n    this.setState({\n      value,\n      query,\n      userSuggestions,\n      selectedMember: persistSelectedMember\n        ? selectedMember\n        : userSuggestions.length > 0\n        ? userSuggestions[0].userId\n        : '',\n      selectedIndex: persistSelectedMember ? newIndex : 0\n    });\n  };\n\n  matchUser = (user, query) => {\n    if (query === '') return false;\n    const { name, email, username } = user;\n    const regExp = new RegExp(query, 'i');\n    return regExp.test(name) || regExp.test(email) || regExp.test(username);\n  };\n\n  onClickMark = e => {\n    e.preventDefault();\n    const type = e.target.value;\n    this.editor.toggleMark(type);\n    this.editor.focus();\n  };\n\n  onClickInline = e => {\n    e.preventDefault();\n    const type = e.target.value;\n    const { value } = this.editor;\n    if (type === 'mention') {\n      const startOffset = value.selection.start.offset;\n      const endOffset = value.selection.end.offset;\n      const selectedText = value.startText.text.slice(startOffset, endOffset);\n      this.editor\n        .insertText(`@${selectedText}`)\n        .moveToEndOfText()\n        .focus();\n      setTimeout(() => {\n        this.toggleMentionsList();\n        if (!this.editor.value.selection.start.offset) {\n          this.editor.normalize().moveTo(selectedText.length + 1);\n        }\n      }, 0);\n    }\n  };\n\n  onClickBlock = e => {\n    e.preventDefault();\n    const type = e.target.value;\n    const { editor } = this;\n    const { value } = editor;\n    const { document } = value;\n\n    if (type !== 'unordered-list' && type !== 'ordered-list') {\n      const isActive = this.hasBlock(type);\n      const isList = this.hasBlock('list-item');\n\n      if (isList) {\n        editor\n          .setBlocks(isActive ? DEFAULT_BLOCK : type)\n          .unwrapBlock('unordered-list')\n          .unwrapBlock('ordered-list');\n      } else {\n        editor.setBlocks(isActive ? DEFAULT_BLOCK : type);\n      }\n    } else {\n      const isList = this.hasBlock('list-item');\n      const isType = value.blocks.some(block => {\n        return !!document.getClosest(block.key, parent => parent.type === type);\n      });\n\n      if (isList && isType) {\n        editor\n          .setBlocks(DEFAULT_BLOCK)\n          .unwrapBlock('unordered-list')\n          .unwrapBlock('ordered-list');\n      } else if (isList) {\n        editor\n          .unwrapBlock(\n            type === 'unordered-list' ? 'ordered-list' : 'unordered-list'\n          )\n          .wrapBlock(type);\n      } else {\n        editor.setBlocks('list-item').wrapBlock(type);\n      }\n    }\n  };\n\n  getMention = value => {\n    if (!value.startText) {\n      return '';\n    }\n\n    const startOffset = value.selection.start.offset;\n    const textBefore = value.startText.text.slice(0, startOffset);\n    const result = /@(\\S*)$/.exec(textBefore);\n\n    return result == null ? '' : result[1];\n  };\n\n  toggleMentionsList = () => {\n    this.setState(prevState => ({\n      isMentionsListVisible: !prevState.isMentionsListVisible\n    }));\n  };\n\n  onClick = (event, editor, next) => {\n    if (editor.value.selection.isBlurred) {\n      editor.moveToRangeOfDocument().focus();\n    } else {\n      return next();\n    }\n  };\n\n  onFocus = e => {\n    console.log('focus');\n    setTimeout(() => {\n      this.setState({\n        isFocused: true\n      });\n    }, 0);\n  };\n\n  onBlur = (e, editor, next) => {\n    console.log('on blur');\n    const { value: prevValue, onBlur } = this.props;\n    setTimeout(() => {\n      this.setState({\n        isFocused: false,\n        isMentionsListVisible: false\n      });\n    }, 0);\n    if (prevValue !== undefined && this.hasChanges() && onBlur) {\n      const { value } = this.state;\n      onBlur(value, e);\n    } else {\n      return next();\n    }\n  };\n\n  onUpdate = e => {\n    e.preventDefault();\n    const { value } = this.state;\n    const { onUpdate } = this.props;\n    if (onUpdate && this.hasChanges()) {\n      onUpdate(value, e);\n    }\n    this.reset();\n  };\n\n  insertMention = userId => {\n    const { mentions } = this.props;\n    const { usersById } = mentions;\n    const user = usersById[userId];\n    const { query } = this.state;\n\n    this.editor.deleteBackward(query.length + 1);\n    const selectedRange = this.editor.value.selection;\n\n    this.editor\n      .insertText(' ')\n      .insertInlineAtRange(selectedRange, {\n        data: {\n          href: `/0/${user.userId}/profile`,\n          userId: user.userId,\n          name: user.name,\n          username: user.username\n        },\n        nodes: [\n          {\n            object: 'text',\n            leaves: [\n              {\n                text: `@${user.name}`\n              }\n            ]\n          }\n        ],\n        type: 'mention'\n      })\n      .focus();\n\n    setTimeout(() => {\n      this.setState({\n        query: '',\n        userSuggestions: this.props.mentions.users,\n        selectedMember: '',\n        selectedIndex: null,\n        isMentionsListVisible: false\n      });\n    }, 0);\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    if (this.isEmpty()) return;\n    const { value } = this.state;\n    const { onSubmit } = this.props;\n    onSubmit(value, e);\n    this.reset();\n  };\n\n  reset = () => {\n    const { value } = this.props;\n    this.setState({\n      value: !!value ? Value.fromJSON(value) : Value.fromJSON(initialValue),\n      isMentionsListVisible: false,\n      query: '',\n      isFocused: false\n    });\n  };\n\n  ref = editor => {\n    this.editor = editor;\n  };\n\n  onOutsideClick = e => {\n    const { isFocused } = this.state;\n    if (!this.editor || !isFocused) return;\n    this.editor.blur();\n    /*\n    setTimeout(() => {\n      this.setState({\n        isFocused: false,\n        isMentionsListVisible: false\n      });\n    }, 0);\n    */\n  };\n\n  render() {\n    const {\n      id,\n      classes,\n      placeholder,\n      marks,\n      inlines,\n      blocks,\n      isMentionsEnabled,\n      mentions,\n      addOns,\n      isReadOnly,\n      innerRef\n    } = this.props;\n    const {\n      value,\n      isMentionsListVisible,\n      query,\n      isFocused,\n      selectedMember\n    } = this.state;\n    return (\n      <div\n        ref={innerRef}\n        className={`rich-text-editor__container ${\n          isFocused ? 'is-focused' : ''\n        } ${classes.container || ''}`}\n      >\n        <Toolbar\n          className={`rich-text-editor__toolbar ${classes.toolbar || ''}`}\n          isActive={isFocused}\n        >\n          {marks.map(mark => (\n            <Button\n              key={`${id}--${mark.type}`}\n              size=\"sm\"\n              className={`rich-text-editor__btn ${classes.button || ''}`}\n              value={mark.type}\n              onMouseDown={this.onClickMark}\n              iconOnly\n              isActive={this.hasMark(mark.type)}\n            >\n              <Icon name={mark.icon} />\n            </Button>\n          ))}\n          {inlines.map(inline => (\n            <Button\n              key={`${id}--${inline.type}`}\n              size=\"sm\"\n              className={`rich-text-editor__btn ${classes.button || ''}`}\n              value={inline.type}\n              onMouseDown={this.onClickInline}\n              iconOnly\n              isActive={this.hasInline(inline.type)}\n            >\n              <Icon name={inline.icon} />\n            </Button>\n          ))}\n          {blocks.map(block => (\n            <Button\n              key={`${id}--${block.type}`}\n              size=\"sm\"\n              className={`rich-text-editor__btn ${classes.button || ''}`}\n              value={block.type}\n              onMouseDown={this.onClickBlock}\n              iconOnly\n              isActive={this.hasBlock(block.type)}\n            >\n              <Icon name={block.icon} />\n            </Button>\n          ))}\n          {addOns.length > 0 && (\n            <div\n              className={`rich-text-editor__add-ons ${classes.addOns || ''}`}\n            >\n              {addOns.map(addOn => (\n                <Button\n                  key={`${id}--${addOn.type}`}\n                  type=\"button\"\n                  onMouseDown={this[addOn.onClick]}\n                  {...addOn.props}\n                />\n              ))}\n            </div>\n          )}\n        </Toolbar>\n        <Editor\n          key={`editor--${id}`}\n          schema={schema}\n          ref={this.ref}\n          value={value}\n          placeholder={placeholder}\n          onClick={this.onClick}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          onChange={this.onChange}\n          onKeyDown={this.onKeyDown}\n          className={`rich-text-editor ${classes.editor || ''}`}\n          renderMark={this.renderMark}\n          renderNode={this.renderNode}\n          readOnly={isReadOnly}\n        />\n        {isMentionsEnabled && (\n          <MemberSearch\n            key={`member-search--${id}`}\n            query={query}\n            isActive={isMentionsListVisible}\n            users={mentions.users}\n            placeholder=\"\"\n            assignedMembers={[]}\n            selectedMember={selectedMember}\n            onSelectMember={this.insertMention}\n            type=\"hidden\"\n            classes={{\n              wrapper: 'rich-text-editor__mentions-wrapper',\n              list: 'rich-text-editor__mentions-list'\n            }}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withOutsideClick(RichTextEditor);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withFirebase } from '../Firebase';\nimport { userSelectors } from '../../ducks/users';\nimport { RichTextEditor, getUserIdsFromMentions } from '../RichTextEditor';\nimport './NotesEditor.scss';\n\nclass NotesEditor extends Component {\n  static defaultProps = {\n    classes: {\n      editor: '',\n      button: ''\n    },\n    placeholder: '',\n    isReadOnly: false\n  };\n\n  updateNotes = (value, e) => {\n    const { firebase, id, type } = this.props;\n    firebase.updateDoc([`${type}s`, id], {\n      notes: value.toJSON(),\n      mentions: getUserIdsFromMentions(value)\n    });\n    e.preventDefault();\n  };\n\n  render() {\n    const {\n      placeholder,\n      value,\n      classes,\n      users,\n      usersById,\n      id,\n      isReadOnly\n    } = this.props;\n    return (\n      <RichTextEditor\n        isReadOnly={isReadOnly}\n        key={`notes-editor__${id}`}\n        id={`notes--${id}`}\n        placeholder={placeholder}\n        value={value}\n        onBlur={this.updateNotes}\n        classes={{\n          container: `notes-editor ${classes.editor || ''}`,\n          toolbar: 'notes-editor__toolbar',\n          button: 'notes-editor__toolbar-btn',\n          addOns: 'notes-editor__add-ons'\n        }}\n        isMentionsEnabled\n        mentions={{\n          users,\n          usersById\n        }}\n        marks={[\n          {\n            type: 'bold',\n            icon: 'bold'\n          },\n          {\n            type: 'italic',\n            icon: 'italic'\n          },\n          {\n            type: 'underlined',\n            icon: 'underline'\n          }\n        ]}\n        inlines={[\n          {\n            type: 'mention',\n            icon: 'at-sign'\n          }\n        ]}\n        blocks={[\n          {\n            type: 'unordered-list',\n            icon: 'list'\n          }\n        ]}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: userSelectors.getUsersArray(state),\n    usersById: userSelectors.getUsersById(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(NotesEditor)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport { NotesEditor } from '../NotesEditor';\nimport { MemberAssigner } from '../MemberAssigner';\nimport { projectSelectors } from '../../ducks/projects';\nimport { ColorPicker } from '../ColorPicker';\nimport { Button } from '../Button';\nimport { ProjectIcon } from '../ProjectIcon';\nimport { Icon } from '../Icon';\n\nconst ProjectOverviewSection = ({ name, children, className = '' }) => (\n  <div className={`project__overview-section ${className}`}>\n    <h2 className=\"project__subheading\">{name}</h2>\n    {children}\n  </div>\n);\n\nclass ProjectOverview extends Component {\n  state = {\n    isColorPickerActive: false\n  };\n\n  handleMemberAssignment = (userId, e) => {\n    const { firebase, projectId, project } = this.props;\n    const { memberIds, name: projectName } = project;\n\n    if (memberIds.includes(userId)) {\n      firebase.removeAssignee({ projectId, userId });\n    } else {\n      firebase.addAssignee({ projectId, projectName, userId });\n    }\n\n    e.preventDefault();\n  };\n\n  toggleColorPicker = () => {\n    this.setState(prevState => ({\n      isColorPickerActive: !prevState.isColorPickerActive\n    }));\n  };\n\n  setColor = color => {\n    const { firebase, projectId } = this.props;\n    firebase.updateDoc(['projects', projectId], {\n      color\n    });\n  };\n\n  hideColorPicker = e => {\n    const { isColorPickerActive } = this.state;\n    if (\n      !isColorPickerActive ||\n      (isColorPickerActive &&\n        e.target.matches('.project__btn--toggle-color-picker'))\n    )\n      return;\n    this.setState({\n      isColorPickerActive: false\n    });\n  };\n\n  render() {\n    const { projectId, project } = this.props;\n    const { notes, memberIds, color } = project;\n    const { isColorPickerActive } = this.state;\n    return (\n      <div className=\"project__overview\">\n        <ProjectOverviewSection\n          name=\"Highlight Color\"\n          className=\"project__overview-section--color\"\n        >\n          <Button\n            onClick={this.toggleColorPicker}\n            className={`project__btn--toggle-color-picker ${\n              isColorPickerActive ? 'is-active' : ''\n            }`}\n          >\n            <ProjectIcon className=\"project__color-swatch\" color={color} />\n            <Icon name=\"chevron-down\" />\n          </Button>\n          <ColorPicker\n            onOutsideClick={this.hideColorPicker}\n            isActive={isColorPickerActive}\n            selectColor={this.setColor}\n            classes={{ colorPicker: 'project__color-picker' }}\n          />\n        </ProjectOverviewSection>\n        <ProjectOverviewSection name=\"Members\">\n          <MemberAssigner\n            placeholder=\"Add or remove member\"\n            memberIds={memberIds}\n            onSelectMember={this.handleMemberAssignment}\n          />\n        </ProjectOverviewSection>\n        <ProjectOverviewSection name=\"Description\">\n          <NotesEditor\n            classes={{ editor: 'project__notes-editor' }}\n            placeholder=\"Add a description\"\n            type=\"project\"\n            id={projectId}\n            value={notes}\n          />\n        </ProjectOverviewSection>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  project: projectSelectors.getProject(state, ownProps.projectId)\n});\n\nconst condition = currentUser => !!currentUser;\n\nexport default withAuthorization(condition)(\n  connect(mapStateToProps)(ProjectOverview)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport { Droppable } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { ListComposer } from '../ListComposer';\nimport { Button } from '../Button';\nimport { Input } from '../Input';\nimport { Toolbar } from '../Toolbar';\nimport { Icon } from '../Icon';\nimport { Settings } from '../Settings';\nimport { projectActions } from '../../ducks/projects';\nimport { ProjectIcon } from '../ProjectIcon';\nimport { DropdownMenu } from '../DropdownMenu';\nimport { removeTaskDueSoon } from '../../ducks/currentUser/actions';\nimport ProjectOverview from './ProjectOverview';\nimport * as ROUTES from '../../constants/routes';\n\nclass Project extends Component {\n  state = {\n    name: this.props.name,\n    prevName: this.props.name,\n    isListComposerActive: false,\n    isProjectSettingsActive: false\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.name !== state.prevName) {\n      return {\n        name: props.name,\n        prevName: props.name\n      };\n    }\n    return null;\n  }\n\n  toggleListComposer = () => {\n    this.setState(prevState => ({\n      isListComposerActive: !prevState.isListComposerActive\n    }));\n  };\n\n  setInputRef = ref => {\n    this.listComposerInput = ref;\n  };\n\n  onNameChange = e => {\n    this.setState({\n      name: e.target.value\n    });\n  };\n\n  onNameBlur = e => {\n    const { name: prevName, projectId, firebase } = this.props;\n    const { name } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (prevName !== name) {\n      firebase.updateProjectName({ projectId, name });\n    }\n  };\n\n  activateListComposer = e => {\n    this.listComposerInput.focus();\n  };\n\n  saveProjectSettings = () => {\n    const { firebase, projectId, tempProjectSettings } = this.props;\n    firebase.updateDoc(['projects', projectId], {\n      [`settings.layout`]: tempProjectSettings.layout,\n      [`settings.tasks.view`]: tempProjectSettings.tasks.view,\n      [`settings.tasks.sortBy`]: tempProjectSettings.tasks.sortBy\n    });\n    this.closeSettingsMenu();\n  };\n\n  setTempProjectSettings = e => {\n    const { projectId } = this.props;\n    const { setTempProjectSettings } = this.props;\n    const { name, value } = e.target;\n    setTempProjectSettings({\n      projectId,\n      [name]: value\n    });\n  };\n\n  toggleSettingsMenu = e => {\n    this.setState(prevState => ({\n      isProjectSettingsActive: !prevState.isProjectSettingsActive\n    }));\n  };\n\n  closeSettingsMenu = () => {\n    this.setState({\n      isProjectSettingsActive: false\n    });\n  };\n\n  render() {\n    const {\n      projectId,\n      color,\n      children,\n      tempSettings,\n      match: { url },\n      location: { pathname }\n    } = this.props;\n    const { layout } = tempSettings;\n    const route = pathname.slice(url.length + 1);\n\n    const { name, isListComposerActive, isProjectSettingsActive } = this.state;\n    return (\n      <div className={`project project--${layout} project--${route}`}>\n        <div className=\"project__header\">\n          <div className=\"project__header-content\">\n            <div className=\"project__name-wrapper\">\n              <ProjectIcon className=\"project__icon\" color={color} />\n              <span className=\"project__name\">{name}</span>\n            </div>\n            <Input\n              className=\"project__input--name\"\n              name=\"projectName\"\n              type=\"text\"\n              value={name}\n              onChange={this.onNameChange}\n              required\n              hideLabel\n              onBlur={this.onNameBlur}\n            />\n            <DropdownMenu\n              classes={{\n                wrapper: 'project__submenu-wrapper',\n                menu: 'project__submenu',\n                link: 'project__link',\n                button: 'project__btn--toggle-submenu'\n              }}\n              links={[\n                { href: `/0/projects/${projectId}/tasks`, text: 'Tasks' },\n                { href: `/0/projects/${projectId}/overview`, text: 'Overview' }\n              ]}\n              activeLink={route}\n              align={{\n                outer: 'left',\n                inner: 'right'\n              }}\n            />\n          </div>\n        </div>\n        <Switch>\n          <Route\n            path={ROUTES.PROJECT_TASKS}\n            render={props => (\n              <>\n                <Toolbar className=\"project__toolbar\">\n                  <Button\n                    className=\"project__btn project__btn--add-list\"\n                    onClick={this.activateListComposer}\n                    color=\"primary\"\n                    variant=\"contained\"\n                    size=\"sm\"\n                  >\n                    Add List\n                  </Button>\n                  <Settings\n                    icon=\"sliders\"\n                    isActive={isProjectSettingsActive}\n                    onToggle={this.toggleSettingsMenu}\n                    onClose={this.closeSettingsMenu}\n                    onSave={this.saveProjectSettings}\n                    classes={{\n                      wrapper: 'project__settings-wrapper',\n                      settings: 'project__settings',\n                      button: 'project__settings-btn'\n                    }}\n                    settings={[\n                      {\n                        name: 'View',\n                        key: 'view',\n                        type: 'radio',\n                        options: {\n                          active: { value: 'active', name: 'Active Tasks' },\n                          completed: {\n                            value: 'completed',\n                            name: 'Completed Tasks'\n                          },\n                          all: { value: 'all', name: 'All Tasks' }\n                        },\n                        value: tempSettings.tasks.view,\n                        onChange: this.setTempProjectSettings\n                      },\n                      {\n                        name: 'Sort By',\n                        key: 'sortBy',\n                        type: 'select',\n                        options: {\n                          none: { value: 'none', name: 'None' },\n                          dueDate: { value: 'dueDate', name: 'Due Date' }\n                        },\n                        value: tempSettings.tasks.sortBy,\n                        onChange: this.setTempProjectSettings\n                      },\n                      {\n                        name: 'Layout',\n                        key: 'layout',\n                        type: 'select',\n                        options: {\n                          board: { value: 'board', name: 'Board' },\n                          list: { value: 'list', name: 'List' }\n                        },\n                        value: tempSettings.layout,\n                        onChange: this.setTempProjectSettings\n                      }\n                    ]}\n                  />\n                </Toolbar>\n                <Droppable\n                  droppableId={projectId}\n                  type={droppableTypes.LIST}\n                  direction={layout === 'board' ? 'horizontal' : 'vertical'}\n                >\n                  {provided => (\n                    <div\n                      className=\"project__lists\"\n                      ref={provided.innerRef}\n                      {...provided.droppableProps}\n                    >\n                      {children}\n                      {provided.placeholder}\n                      <ListComposer\n                        inputRef={this.setInputRef}\n                        toggle={this.toggleListComposer}\n                        isActive={isListComposerActive}\n                        layout={layout}\n                        projectId={projectId}\n                      />\n                    </div>\n                  )}\n                </Droppable>\n              </>\n            )}\n          />\n          <Route\n            path={ROUTES.PROJECT_OVERVIEW}\n            render={({ match }) => (\n              <ProjectOverview projectId={match.params.id} />\n            )}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setTempProjectSettings: ({ projectId, view, sortBy, layout }) =>\n      dispatch(\n        projectActions.setTempProjectSettings({\n          projectId,\n          view,\n          sortBy,\n          layout\n        })\n      )\n  };\n};\n\nconst condition = currentUser => !!currentUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    null,\n    mapDispatchToProps\n  )(Project)\n);\n","export const SELECT_TASK = 'SELECT_TASK';\n\nexport const selectTask = taskId => {\n  return {\n    type: SELECT_TASK,\n    taskId\n  };\n};\n\nconst INITIAL_STATE = null;\n\nexport const selectedTask = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SELECT_TASK:\n      return action.taskId;\n    default:\n      return state;\n  }\n};\n\nexport const getSelectedTaskId = state => state.selectedTask;\n\nexport const getSelectedTask = state => {\n  const { selectedTask: taskId, tasksById } = state;\n  return tasksById[taskId];\n};\n","export const getListsById = state => {\n  return state.listsById;\n};\n\nexport const getList = (state, listId) => {\n  return state.listsById[listId];\n};\n\nexport const getListName = (state, listId) => {\n  if (!listId) return '';\n  const { listsById } = state;\n  return listsById[listId].name;\n};\n\nexport const getSelectedProjectLists = state => {\n  const { listsById, projectsById, selectedProject } = state;\n  const project = projectsById[selectedProject];\n  if (!project || !project.listIds) return [];\n  const { listIds } = project;\n\n  return listIds.map(listId => listsById[listId]);\n};\n\nexport const getProjectLists = (state, listIds) => {\n  const { listsById } = state;\n  if (!listIds) return [];\n\n  return listIds.map(listId => listsById[listId]);\n};\n","import * as types from './types';\n\nconst listsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_LISTS_BY_ID: {\n      const { listsById } = action;\n      return {\n        ...state,\n        ...listsById\n      };\n    }\n    case types.UPDATE_LIST: {\n      const { listId, listData } = action;\n      return {\n        ...state,\n        [listId]: {\n          ...state[listId],\n          ...listData\n        }\n      };\n    }\n    case types.ADD_LIST: {\n      const { listId, listData } = action;\n      return {\n        ...state,\n        [listId]: {\n          listId,\n          isLoaded: true,\n          ...listData\n        }\n      };\n    }\n    case types.REMOVE_LIST: {\n      const { listId } = action;\n      const { [listId]: deletedList, ...restOfLists } = state;\n      return restOfLists;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default listsById;\n","export const getTasksById = state => {\n  return state.tasksById;\n};\n\nexport const getTasksArray = state => {\n  const { tasksById } = state;\n  return Object.keys(tasksById).map(taskId => tasksById[taskId]);\n};\n\nexport const getTasksMatchingQuery = (state, query) => {\n  const regExp = new RegExp(`\\\\b${query}`, 'i');\n  return getTasksArray(state).filter(task => {\n    return (\n      regExp.test(task.name) ||\n      regExp.test(task.projectName) ||\n      (task.tags && task.tags.some(tag => regExp.test(tag)))\n    );\n  });\n};\n\nexport const getTask = (state, taskId) => {\n  return state.tasksById[taskId];\n};\n\nexport const getListTasks = (state, taskIds) => {\n  const { tasksById } = state;\n  let tasks = [];\n  taskIds.forEach(taskId => {\n    const task = tasksById[taskId];\n    if (!task) return;\n    tasks = tasks.concat(task);\n  });\n  return tasks;\n};\n\nexport const getFolderTasks = (state, taskIds) => {\n  const { tasksById } = state;\n  let tasks = [];\n  taskIds.forEach(taskId => {\n    const task = tasksById[taskId];\n    if (!task) return;\n    tasks = tasks.concat(task);\n  });\n  return tasks;\n};\n\nexport const getTaskTags = (state, taskId) => {\n  const { projectsById, tasksById, currentUser } = state;\n  const task = tasksById[taskId];\n  if (!task) return [];\n  const { projectId, tags: taskTags } = task;\n  if (!taskTags || taskTags.length === 0) return [];\n  if (projectId && projectId in projectsById) {\n    const { tags: projectTags } = projectsById[projectId];\n    return taskTags.map(taskTag => projectTags[taskTag]);\n  }\n  if (currentUser && 'tags' in currentUser) {\n    const { tags: userTags } = currentUser;\n    return taskTags.map(taskTag => userTags[taskTag]);\n  }\n  return [];\n};\n\nexport const getTaskLoadedState = (state, taskId) => {\n  const { tasksById } = state;\n  const task = tasksById[taskId];\n  if (!task) return {};\n  return task.isLoaded;\n};\n\nexport const getTaggedTasks = (state, tag) => {\n  const { tasksById } = state;\n  return Object.keys(tasksById)\n    .map(taskId => tasksById[taskId])\n    .filter(task => {\n      return task.tags && task.tags.includes(tag);\n    });\n};\n\nexport const getTasksByViewFilter = (state, listId) => {\n  const { listsById, tasksById } = state;\n  const list = listsById[listId];\n  const { taskIds } = list;\n  return taskIds.reduce(\n    (tasksByView, taskId) => {\n      const task = tasksById[taskId];\n      const { all, completed, active } = tasksByView;\n      if (task) {\n        return task.isCompleted\n          ? {\n              active,\n              all: [...all, task],\n              completed: [...completed, task]\n            }\n          : {\n              completed,\n              all: [...all, task],\n              active: [...active, task]\n            };\n      }\n      return tasksByView;\n    },\n    {\n      all: [],\n      completed: [],\n      active: []\n    }\n  );\n};\n\nexport const getTaskIdsByViewFilter = (state, { listId, folderId }) => {\n  const { tasksById, listsById, currentUser } = state;\n  const taskIds = listId\n    ? listsById[listId].taskIds\n    : currentUser.folders[folderId].taskIds;\n  return taskIds.reduce(\n    (taskIdsByView, taskId) => {\n      const task = tasksById[taskId];\n      const { completed, active } = taskIdsByView;\n      if (task) {\n        return task.isCompleted\n          ? {\n              ...taskIdsByView,\n              completed: [...completed, taskId]\n            }\n          : {\n              ...taskIdsByView,\n              active: [...active, taskId]\n            };\n      }\n      return taskIdsByView;\n    },\n    {\n      all: taskIds,\n      completed: [],\n      active: []\n    }\n  );\n};\n\nexport const getSortedTaskIds = (state, taskIds, sortBy) => {\n  const { tasksById } = state;\n  switch (sortBy) {\n    case 'dueDate': {\n      return [...taskIds].sort((a, b) => {\n        const taskA = tasksById[a];\n        const taskB = tasksById[b];\n        const dueDateA = taskA.dueDate ? taskA.dueDate.toMillis() : null;\n        const dueDateB = taskB.dueDate ? taskB.dueDate.toMillis() : null;\n        if (!dueDateA && dueDateB) {\n          return 1;\n        }\n        if (dueDateA && !dueDateB) {\n          return -1;\n        }\n        if (!dueDateA && !dueDateB) {\n          return 0;\n        }\n        return dueDateA - dueDateB;\n      });\n    }\n    default: {\n      return taskIds;\n    }\n  }\n};\n\nexport const getAssignees = (state, taskId) => {\n  const { tasksById, usersById } = state;\n  const task = tasksById[taskId];\n  if (!task) return [];\n  const { assignedTo } = task;\n  return assignedTo.map(userId => usersById[userId]);\n};\n\nexport const getCompletedSubtasks = (state, taskId) => {\n  const { tasksById, subtasksById } = state;\n  const task = tasksById[taskId];\n  if (!task) return [];\n  const { subtaskIds } = task;\n  if (!subtaskIds) return [];\n  return subtaskIds.filter(subtaskId => {\n    const subtask = subtasksById[subtaskId];\n    if (subtask) {\n      return subtask.isCompleted;\n    }\n  });\n};\n","import * as types from './types';\n\nconst tasksById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_TASKS_BY_ID: {\n      const { tasksById } = action;\n      return {\n        ...state,\n        ...tasksById\n      };\n    }\n    case types.ADD_TASK: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        [taskId]: {\n          taskId,\n          isLoaded: {\n            subtasks: true,\n            comments: true\n          },\n          ...taskData\n        }\n      };\n    }\n    case types.REMOVE_TASK: {\n      const { taskId } = action;\n      const { [taskId]: deletedTask, ...restOfTasks } = state;\n      return restOfTasks;\n    }\n    case types.UPDATE_TASK: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        [taskId]: {\n          ...state[taskId],\n          ...taskData\n        }\n      };\n    }\n    case types.ADD_TAG: {\n      const { taskId, tag } = action;\n      return {\n        ...state,\n        [taskId]: {\n          ...state[taskId],\n          tags: [...state[taskId].tags, tag]\n        }\n      };\n    }\n    case types.REMOVE_TAG: {\n      const { taskId, name } = action;\n      if (!taskId || !(taskId in state)) return state;\n      return {\n        ...state,\n        [taskId]: {\n          ...state[taskId],\n          tags: state[taskId].tags.filter(tag => tag !== name)\n        }\n      };\n    }\n    case types.SET_TASK_LOADED_STATE: {\n      const { taskId, key } = action;\n      return {\n        ...state,\n        [taskId]: {\n          ...state[taskId],\n          isLoaded: {\n            ...state[taskId].isLoaded,\n            [key]: true\n          }\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default tasksById;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\nimport { setProjectLoadedState } from '../projects/actions';\nimport { setTaskLoadedState } from '../tasks/actions';\n\nexport const loadSubtasksById = subtasksById => {\n  return {\n    type: types.LOAD_SUBTASKS_BY_ID,\n    subtasksById\n  };\n};\n\nexport const addSubtask = ({ subtaskId, subtaskData }) => {\n  console.log('subtask added');\n  return {\n    type: types.ADD_SUBTASK,\n    subtaskId,\n    subtaskData\n  };\n};\n\nexport const removeSubtask = ({ subtaskId, taskId }) => {\n  return {\n    type: types.REMOVE_SUBTASK,\n    subtaskId,\n    taskId\n  };\n};\n\nexport const updateSubtask = ({ subtaskId, subtaskData }) => {\n  return {\n    type: types.UPDATE_SUBTASK,\n    subtaskId,\n    subtaskData\n  };\n};\n\n// Thunks\n\nexport const syncTaskSubtasks = taskId => {\n  return async (dispatch, getState) => {\n    try {\n      const subscription = await firebase.fs\n        .collection('subtasks')\n        .where('taskId', '==', taskId)\n        .onSnapshot(snapshot => {\n          const changes = snapshot.docChanges();\n          const { tasksById, subtasksById } = getState();\n          const task = tasksById[taskId];\n          const isInitialLoad =\n            snapshot.size === changes.length &&\n            changes.every(change => change.type === 'added') &&\n            !task.isLoaded.subtasks;\n\n          if (isInitialLoad) {\n            const subtasks = {};\n            if (changes.length > 0) {\n              changes.forEach(change => {\n                const subtaskId = change.doc.id;\n                if (subtaskId in getState().subtasksById) return;\n                const subtaskData = change.doc.data();\n                subtasks[subtaskId] = {\n                  subtaskId,\n                  ...subtaskData\n                };\n              });\n              dispatch(loadSubtasksById(subtasks));\n            }\n            dispatch(setTaskLoadedState(taskId, 'subtasks'));\n          } else {\n            changes.forEach(async change => {\n              const [subtaskId, subtaskData, changeType] = await Promise.all([\n                change.doc.id,\n                change.doc.data(),\n                change.type\n              ]);\n              if (changeType === 'added') {\n                if (subtaskId in subtasksById) return;\n                dispatch(addSubtask({ subtaskId, subtaskData }));\n                console.log(`Subtask added: ${subtaskData.name}`);\n              } else if (changeType === 'removed') {\n                if (!(subtaskId in subtasksById)) return;\n                dispatch(removeSubtask({ subtaskId, taskId }));\n                console.log(`Subtask removed: ${subtaskData.name}`);\n              } else {\n                dispatch(updateSubtask({ subtaskId, subtaskData }));\n                console.log(`Subtask modified: ${subtaskData.name}`);\n              }\n            });\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserSubtasks = userId => {\n  return async dispatch => {\n    try {\n      const subtasksById = await firebase.fs\n        .collection('subtasks')\n        .where('assignedTo', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const subtasks = {};\n          snapshot.forEach(doc => {\n            subtasks[doc.id] = {\n              subtaskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return subtasks;\n        });\n      dispatch(loadSubtasksById(subtasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const syncProjectSubtasks = projectId => {\n  return async (dispatch, getState) => {\n    try {\n      const subscription = await firebase\n        .queryCollection('subtasks', ['projectId', '==', projectId])\n        .onSnapshot(snapshot => {\n          const changes = snapshot.docChanges();\n          const isInitialLoad =\n            snapshot.size === changes.length &&\n            changes.every(change => change.type === 'added');\n          if (isInitialLoad && changes.length > 1) {\n            const subtasksById = {};\n            changes.forEach(change => {\n              const subtaskId = change.doc.id;\n              const subtaskData = change.doc.data();\n              subtasksById[change.doc.id] = {\n                subtaskId,\n                ...subtaskData\n              };\n            });\n            dispatch(loadSubtasksById(subtasksById));\n          } else {\n            changes.forEach(async change => {\n              const [subtaskId, subtaskData, changeType] = await Promise.all([\n                change.doc.id,\n                change.doc.data(),\n                change.type\n              ]);\n              const { subtasksById } = getState();\n              if (changeType === 'added') {\n                if (subtaskId in subtasksById) return;\n                dispatch(addSubtask({ subtaskId, subtaskData }));\n                console.log(`Subtask added: ${subtaskData.name}`);\n              } else if (changeType === 'removed') {\n                if (!(subtaskId in subtasksById)) return;\n                const { taskId } = subtaskData;\n                dispatch(removeSubtask({ subtaskId, taskId }));\n                console.log(`Subtask deleted: ${subtaskData.name}`);\n              } else {\n                dispatch(updateSubtask({ subtaskId, subtaskData }));\n                console.log(`Subtask updated: ${subtaskData.name}`);\n              }\n            });\n          }\n          if (isInitialLoad) {\n            dispatch(setProjectLoadedState(projectId, 'subtasks'));\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","export const LOAD_SUBTASKS_BY_ID = 'LOAD_SUBTASKS_BY_ID';\nexport const ADD_SUBTASK = 'ADD_SUBTASK';\nexport const UPDATE_SUBTASK = 'UPDATE_SUBTASK';\nexport const REMOVE_SUBTASK = 'REMOVE_SUBTASK';\n","export const getSubtasksById = state => {\n  const { subtasksById } = state;\n  return subtasksById;\n};\n\nexport const getSubtasksArray = (state, subtaskIds) => {\n  const { subtasksById } = state;\n  if (!subtaskIds) return [];\n  let subtasks = [];\n\n  for (let subtaskId of subtaskIds) {\n    const subtask = subtasksById[subtaskId];\n    if (!subtask) break;\n    subtasks = subtasks.concat(subtask);\n  }\n  \n  return subtasks;\n};\n\nexport const getSimpleSubtasks = (state, subtaskIds) => {\n  const { subtasksById } = state;\n  if (!subtaskIds) return {};\n\n  return subtaskIds.reduce((subtasks, subtaskId) => {\n    const { name, isCompleted } = subtasksById[subtaskId];\n        subtasks[subtaskId] = {\n          name,\n          isCompleted\n        };\n        return subtasks;\n      }, {});\n  };\n\nexport const getActiveSubtasks = (state, subtaskIds) => {\n  const subtasks = getSubtasksArray(state, subtaskIds);\n  return subtasks.filter(subtask => !subtask.isCompleted);\n};\n\nexport const getCompletedSubtasks = (state, subtaskIds) => {\n  const subtasks = getSubtasksArray(state, subtaskIds);\n  if (subtasks.includes(undefined)) return [];\n  return subtasks.filter(subtask => subtask.isCompleted);\n};\n","import * as types from './types';\n\nconst subtasksById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_SUBTASKS_BY_ID: {\n      const { subtasksById } = action;\n      return {\n        ...state,\n        ...subtasksById\n      };\n    }\n    case types.ADD_SUBTASK: {\n      const { subtaskId, subtaskData } = action;\n      return {\n        ...state,\n        [subtaskId]: {\n          subtaskId,\n          isLoaded: true,\n          ...subtaskData\n        }\n      };\n    }\n    case types.REMOVE_SUBTASK: {\n      const { subtaskId } = action;\n      const { [subtaskId]: deletedSubtask, ...restOfSubtasks } = state;\n      return restOfSubtasks;\n    }\n    case types.UPDATE_SUBTASK: {\n      const { subtaskId, subtaskData } = action;\n      return {\n        ...state,\n        [subtaskId]: {\n          ...state[subtaskId],\n          ...subtaskData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default subtasksById;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon } from '../Icon';\nimport { withFirebase } from '../Firebase';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\nimport * as keys from '../../constants/keys';\nimport './TaskComposer.scss';\n\nconst INITIAL_STATE = {\n  name: '',\n  isActive: false\n};\n\nclass TaskComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ name: '' });\n  };\n\n  onSubmit = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { name } = this.state;\n    const {\n      userId,\n      folderId,\n      firebase,\n      projectId,\n      projectName,\n      listId,\n      listName,\n      dueDate\n    } = this.props;\n    firebase.addTask({\n      dueDate: dueDate ? new Date(dueDate) : null,\n      name,\n      userId,\n      folderId,\n      projectId,\n      projectName,\n      listId,\n      listName\n    });\n    this.resetForm();\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = e => {\n    if (e.target.value !== '') return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const { name, isActive } = this.state;\n\n    return (\n      <div\n        className={`task-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"task-composer__form\" onSubmit={this.onSubmit}>\n          <Button\n            className=\"task-composer__btn--submit\"\n            type=\"submit\"\n            onClick={this.onSubmit}\n            iconOnly\n          >\n            <Icon name=\"plus-circle\" />\n          </Button>\n          <Input\n            onChange={this.onChange}\n            value={name}\n            placeholder=\"Add a task\"\n            isRequired\n            name=\"name\"\n            className=\"task-composer__input\"\n            onKeyDown={this.onSubmit}\n            hideLabel\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userId: currentUserSelectors.getCurrentUserId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TaskComposer)\n);\n","/**\n * Delays callback execution until next browser repaint\n * Best used for `scroll` and `resize` window events\n * @param {Function} callback - The function to debounce\n */\n\nexport const windowDebouncer = callback => {\n  let request;\n\n  return (...args) => {\n    const context = this;\n\n    if (request) {\n      window.cancelAnimationFrame(request);\n    }\n\n    request = window.requestAnimationFrame(() => {\n      callback.apply(context, args);\n    });\n  };\n};\n\nexport const debounce = (delay, fn) => {\n  let timerId;\n  return (...args) => {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(() => {\n      fn(...args);\n      timerId = null;\n    }, delay);\n  };\n};\n\n/**\n * Returns a function that executes the first callback on its initial call\n * then the second callback on subsequent calls\n * @param {Function} first - The function executed only on its initial call\n * @param {Function} after - The function executed on subsequent calls\n */\nexport const firstThen = (first, after) => {\n  let count = 0;\n  return (...args) => {\n    count++;\n    if (count === 1) {\n      return first.apply(this, args);\n    }\n    return after.apply(this, args);\n  };\n};\n\nexport const count = (fn, invokeBeforeExecution) => {\n  let count = 0;\n  return args => {\n    count++;\n    if (count <= invokeBeforeExecution) {\n      return true;\n    }\n    return fn(args, count);\n  };\n};\n","import React, { Component } from 'react';\nimport './Textarea.scss';\nimport { debounce } from '../../utils/function';\n\nexport default class Textarea extends Component {\n  static defaultProps = {\n    isAutoHeightResizeEnabled: true,\n    minHeight: 0,\n    tabIndex: 0,\n    onMouseDown: () => null,\n    onMouseUp: () => null,\n    onMouseMove: () => null\n  };\n\n  componentDidMount() {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n    this.autoHeightResize();\n    this.handleResize = debounce(200, this.autoHeightResize);\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  ref = el => {\n    this.el = el;\n    const { innerRef } = this.props;\n    if (innerRef) {\n      innerRef(el);\n    }\n  };\n\n  autoHeightResize = () => {\n    const { isAutoHeightResizeEnabled, minHeight } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n    this.el.style.height = `${minHeight}px`; // resets scroll height\n    this.el.style.height = `${this.el.scrollHeight}px`;\n  };\n\n  render() {\n    const {\n      className,\n      name,\n      value,\n      onChange,\n      placeholder,\n      isRequired,\n      onBlur,\n      onFocus,\n      onKeyDown,\n      onDragStart,\n      isReadOnly,\n      onMouseDown,\n      onMouseUp,\n      onMouseMove,\n      tabIndex\n    } = this.props;\n\n    return (\n      <textarea\n        className={`textarea ${className}`}\n        name={name}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={isRequired}\n        onBlur={onBlur}\n        onInput={this.autoHeightResize}\n        ref={this.ref}\n        onFocus={onFocus}\n        onKeyDown={onKeyDown}\n        onDragStart={onDragStart}\n        readOnly={isReadOnly}\n        onMouseDown={onMouseDown}\n        onMouseUp={onMouseUp}\n        onMouseMove={onMouseMove}\n        tabIndex={tabIndex}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon } from '../Icon';\nimport { withFirebase } from '../Firebase';\nimport { projectActions, projectSelectors } from '../../ducks/projects';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport * as keys from '../../constants/keys';\nimport './CardComposer.scss';\n\nconst INITIAL_STATE = {\n  name: '',\n  isActive: false\n};\n\nclass CardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ name: '' });\n  };\n\n  onSubmit = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { name } = this.state;\n    const {\n      firebase,\n      projectId,\n      projectName,\n      listId,\n      listName,\n      userId\n    } = this.props;\n    firebase.addTask({\n      projectId,\n      listId,\n      name,\n      projectName,\n      listName,\n      userId\n    });\n    this.resetForm();\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onBlur = e => {\n    if (e.target.value !== '') return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const { name, isActive } = this.state;\n\n    return (\n      <div\n        className={`card-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"card-composer__form\" onSubmit={this.onSubmit}>\n          <Textarea\n            onChange={this.onChange}\n            value={name}\n            placeholder={isActive ? 'Enter card title...' : 'Add a card'}\n            isRequired\n            name=\"name\"\n            className=\"card-composer__textarea\"\n            isAutoHeightResizeEnabled={false}\n            onKeyDown={this.onSubmit}\n          />\n          {isActive && (\n            <div className=\"card-composer__footer\">\n              <Button\n                className=\"card-composer__btn\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n                size=\"sm\"\n              >\n                Add Card\n              </Button>\n              <Button\n                className=\"card-composer__btn\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n              >\n                Cancel\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userId: currentUserSelectors.getCurrentUserId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateProjectsById: project =>\n      dispatch(projectActions.updateProjectsById(project))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardComposer)\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport './Tag.scss';\n\nconst Tag = ({\n  name,\n  color,\n  size,\n  onDelete,\n  className,\n  innerRef,\n  isFocused,\n  variant\n}) => (\n  <span\n    className={`tag tag--${size} bg--${color} ${\n      variant !== 'default' ? `tag--${variant}` : ''\n    } ${isFocused ? 'is-focused' : ''} ${className}`}\n    ref={innerRef}\n  >\n    <Link to={`/0/tasks?tag=${name}`} className=\"tag__link\">\n      {name}\n    </Link>\n    {size === 'md' && (\n      <Button\n        type=\"button\"\n        size=\"sm\"\n        className=\"tag__btn--delete\"\n        onClick={onDelete}\n        iconOnly\n      >\n        <Icon name=\"x\" />\n      </Button>\n    )}\n  </span>\n);\n\nTag.defaultProps = {\n  className: '',\n  onDelete: () => null,\n  color: 'default',\n  size: 'md',\n  variant: 'default',\n  isFocused: false\n};\n\nexport default Tag;\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport './Badge.scss';\n\nconst Badge = ({ icon, children, className }) => (\n  <span className={`badge ${className}`}>\n    {icon && <Icon name={icon} />}\n    {children}\n  </span>\n);\n\nBadge.defaultProps = {\n  icon: null,\n  className: '',\n  children: null\n};\n\nexport default Badge;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { taskSelectors } from '../../ducks/tasks';\nimport './Card.scss';\nimport { Tag } from '../Tag';\nimport { Icon } from '../Icon';\nimport { Avatar } from '../Avatar';\nimport { toDateString, isPriorDate } from '../../utils/date';\nimport { selectTask as selectTaskAction } from '../../ducks/selectedTask';\nimport { Badge } from '../Badge';\n\nclass Card extends Component {\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.tags.indexOf(undefined) !== -1) {\n      return false;\n    }\n    return true;\n  }\n\n  onClick = e => {\n    if (e.target.matches('button') || e.target.matches('a')) return;\n    const { taskId, selectTask } = this.props;\n    selectTask(taskId);\n  };\n\n  render() {\n    const {\n      taskId,\n      index,\n      tags,\n      completedSubtasks,\n      members,\n      task\n    } = this.props;\n    if (!task) return null;\n\n    const { name, commentIds, dueDate, subtaskIds, isCompleted } = task;\n    const dueDateStr = dueDate\n      ? toDateString(dueDate.toDate(), {\n          useRelative: true,\n          format: { month: 'short', day: 'numeric' }\n        })\n      : null;\n    const isDueToday = dueDateStr === 'Today';\n    const isDueTmrw = dueDateStr === 'Tomorrow';\n    const isPastDue = dueDate && isPriorDate(dueDate.toDate());\n    return (\n      <Draggable draggableId={taskId} index={index}>\n        {provided => (\n          <div\n            className=\"card\"\n            onClick={this.onClick}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            style={{\n              ...provided.draggableProps.style,\n              backgroundColor: '#fff'\n            }}\n          >\n            <div className=\"card__header\" ref={el => (this.headerEl = el)}>\n              <div className=\"card__tags\">\n                {tags.map(tag => (\n                  <Tag\n                    key={tag.name}\n                    size=\"sm\"\n                    color={tag.color}\n                    variant=\"pill\"\n                    className=\"card__tag\"\n                  />\n                ))}\n              </div>\n              <h3 className=\"card__title\">{name}</h3>\n            </div>\n            <div className=\"card__body\">\n              {isCompleted && (\n                <Badge className=\"card__detail card__completed-status\">\n                  <span className=\"card__completed-status-icon\">\n                    <Icon name=\"check\" />\n                  </span>\n                </Badge>\n              )}\n              {dueDate && (\n                <Badge\n                  icon=\"calendar\"\n                  className={`card__detail card__due-date ${\n                    isDueToday\n                      ? 'is-due-today'\n                      : isDueTmrw\n                      ? 'is-due-tmrw'\n                      : isPastDue\n                      ? 'is-past-due'\n                      : ''\n                  }\n                  `}\n                >\n                  {dueDateStr}\n                </Badge>\n              )}\n              {subtaskIds && subtaskIds.length > 0 && (\n                <Badge className=\"card__detail\" icon=\"check-circle\">\n                  {completedSubtasks.length}/{subtaskIds.length}\n                </Badge>\n              )}\n              {commentIds && commentIds.length > 0 && (\n                <Badge className=\"card__detail\" icon=\"message-circle\">\n                  {commentIds.length}\n                </Badge>\n              )}\n            </div>\n            <div className=\"card__footer\">\n              {members && members.length > 0 && (\n                <div className=\"card__members-wrapper\">\n                  <div className=\"card__members\">\n                    {members.map(member => {\n                      const { name: memberName, photoURL, userId } = member;\n                      return (\n                        <Avatar\n                          classes={{\n                            avatar: 'card__avatar',\n                            placeholder: 'card__avatar-placeholder'\n                          }}\n                          name={memberName}\n                          size=\"sm\"\n                          variant=\"circle\"\n                          imgSrc={photoURL}\n                          key={userId}\n                        />\n                      );\n                    })}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    tags: taskSelectors.getTaskTags(state, ownProps.taskId),\n    completedSubtasks: taskSelectors.getCompletedSubtasks(\n      state,\n      ownProps.taskId\n    ),\n    members: taskSelectors.getAssignees(state, ownProps.taskId),\n    task: taskSelectors.getTask(state, ownProps.taskId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectTask: taskId => dispatch(selectTaskAction(taskId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Card);\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport './Checkbox.scss';\n\nconst Checkbox = ({\n  value,\n  id,\n  name,\n  isChecked,\n  onClick,\n  onChange,\n  className,\n  labelClass,\n  ...props\n}) => {\n  return (\n    <label\n      htmlFor={id}\n      onClick={onClick}\n      className={`checkbox__label ${isChecked ? 'is-checked' : ''} ${labelClass}`}\n    >\n      <Icon name=\"check\" />\n      <input\n        type=\"checkbox\"\n        id={id}\n        value={value}\n        name={name}\n        checked={isChecked}\n        className={`checkbox ${className}`}\n        onChange={onChange}\n        {...props}\n      />\n    </label>\n  );\n};\n\nCheckbox.defaultProps = {\n  className: '',\n  labelClass: ''\n};\n\nexport default Checkbox;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { projectSelectors } from '../../ducks/projects';\nimport './ProjectBadge.scss';\nimport { ProjectIcon } from '../ProjectIcon';\n\nconst ProjectBadge = ({ projectId, size, variant, name, color, classes }) => (\n  <Link\n    to={`/0/projects/${projectId}/tasks`}\n    className={`project-badge project-badge--${size} ${\n      variant === 'contained'\n        ? `project-badge--contained project-badge--${color}`\n        : ''\n    } ${classes.badge || ''}`}\n  >\n    {variant === 'icon' && (\n      <ProjectIcon\n        color={color}\n        className={`project-badge__icon ${classes.icon || ''}`}\n      />\n    )}\n    <span className=\"project-badge__name\">{name}</span>\n  </Link>\n);\n\nProjectBadge.defaultProps = {\n  classes: {\n    badge: '',\n    icon: ''\n  },\n  variant: 'icon',\n  size: 'md'\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    color: projectSelectors.getProjectColor(state, ownProps.projectId),\n    name: projectSelectors.getProjectName(state, ownProps.projectId)\n  };\n};\n\nexport default connect(mapStateToProps)(ProjectBadge);\n","/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable no-nested-ternary */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Checkbox } from '../Checkbox';\nimport { Textarea } from '../Textarea';\nimport { Tag } from '../Tag';\nimport { Icon } from '../Icon';\nimport { withFirebase } from '../Firebase';\nimport * as keys from '../../constants/keys';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { selectTask as selectTaskAction } from '../../ducks/selectedTask';\nimport { getSelectedProjectId } from '../../ducks/selectedProject';\nimport { Badge } from '../Badge';\nimport { ProjectBadge } from '../ProjectBadge';\nimport { toDateString, isPriorDate } from '../../utils/date';\nimport { Avatar } from '../Avatar';\nimport './Task.scss';\n\nclass Task extends Component {\n  static defaultProps = {\n    className: ''\n  };\n  \n  state = {\n    isFocused: false,\n    name: this.props.task ? this.props.task.name : '',\n    prevName: this.props.task ? this.props.task.name : '',\n    pointX: null,\n    pointY: null\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.task && props.task.name !== state.prevName) {\n      return {\n        name: props.task.name,\n        prevName: props.task.name\n      };\n    }\n    return null;\n  }\n\n  onFocus = () => {\n    this.setState({\n      isFocused: true\n    });\n  };\n\n  onChange = e => {\n    this.setState({\n      name: e.target.value\n    });\n  };\n\n  onBlur = () => {\n    const { firebase, taskId, task } = this.props;\n    const { name } = task;\n    const { name: newName } = this.state;\n    if (name !== newName) {\n      firebase.updateDoc(['tasks', taskId], {\n        name: newName\n      });\n    }\n    this.setState({\n      isFocused: false\n    });\n  };\n\n  deleteTask = e => {\n    if (e.target.value !== '' || e.key !== keys.BACKSPACE) return;\n    const { taskId, task, deleteTask } = this.props;\n    const { listId } = task;\n    deleteTask({ taskId, listId });\n  };\n\n  toggleCompleted = () => {\n    const { taskId, task, firebase } = this.props;\n    const { isCompleted } = task;\n    firebase.updateDoc(['tasks', taskId], {\n      isCompleted: !isCompleted,\n      completedAt: !isCompleted ? firebase.getTimestamp() : null\n    });\n  };\n\n  handleTaskClick = e => {\n    if (\n      e.target.matches('button') ||\n      e.target.matches('a') ||\n      e.target.matches('label') ||\n      e.target.matches('input[type=\"checkbox\"]')\n    )\n      return;\n    const { taskId, selectTask } = this.props;\n    selectTask(taskId);\n  };\n\n  onKeyDown = e => {\n    const { provided, taskId, selectTask } = this.props;\n    if (provided && provided.dragHandleProps) {\n      provided.dragHandleProps.onKeyDown(e);\n    }\n    if (e.key === keys.ENTER) {\n      selectTask(taskId);\n    }\n  };\n\n  onMouseDown = e => {\n    const { provided } = this.props;\n    if (provided && provided.dragHandleProps) {\n      provided.dragHandleProps.onMouseDown(e);\n    }\n    if (e.target.matches('input') || e.target.matches('label')) return;\n    this.setState({\n      pointX: e.pageX,\n      pointY: e.pageY\n    });\n  };\n\n  onMouseUp = e => {\n    const { pointX, pointY, isFocused } = this.state;\n    if (isFocused) return;\n    if (e.pageX === pointX && e.pageY === pointY && window.innerWidth >= 768 ) {\n      this.textarea.focus();\n    }\n    this.setState({\n      pointX: null,\n      pointY: null\n    });\n  };\n\n  setTextareaRef = ref => {\n    this.textarea = ref;\n  };\n\n  render() {\n    const {\n      taskId,\n      tags,\n      innerRef,\n      provided,\n      selectedProjectId,\n      members,\n      className,\n      task\n    } = this.props;\n    if (!task) return null;\n\n    const { isCompleted, dueDate, projectId } = task;\n    const { isFocused, name } = this.state;\n    const draggableProps = provided ? provided.draggableProps : {};\n    const dragHandleProps = provided ? provided.dragHandleProps : {};\n    const dueDateStr = dueDate\n      ? toDateString(dueDate.toDate(), {\n          useRelative: true,\n          format: { month: 'short', day: 'numeric' }\n        })\n      : null;\n    const isDueToday = dueDateStr === 'Today';\n    const isDueTmrw = dueDateStr === 'Tomorrow';\n    const isPastDue = dueDate && isPriorDate(dueDate.toDate());\n\n    return (\n      <li\n        className={`task ${className || ''} ${isFocused ? 'is-focused' : ''}`}\n        onClick={this.handleTaskClick}\n        tabIndex={0}\n        ref={innerRef}\n        {...draggableProps}\n        {...dragHandleProps}\n        onKeyDown={this.onKeyDown}\n        onMouseDown={this.onMouseDown}\n        onMouseUp={this.onMouseUp}\n      >\n        <Checkbox\n          id={`cb-${taskId}`}\n          value={taskId}\n          name={taskId}\n          isChecked={isCompleted}\n          onChange={this.toggleCompleted}\n          className=\"task__checkbox\"\n          labelClass=\"task__checkbox-label\"\n        />\n        <div className=\"task__wrapper\">\n          <div className=\"task__badges task__badges--top\">\n            <div className=\"task__tags\">\n              {tags.map(tag => (\n                <Tag\n                  name={tag.name}\n                  key={tag.name}\n                  size=\"sm\"\n                  color={tag.color}\n                  className=\"task__tag\"\n                />\n              ))}\n            </div>\n            {dueDate && (\n              <Badge\n                icon=\"calendar\"\n                className={`task__detail task__due-date ${\n                  isDueToday\n                    ? 'is-due-today'\n                    : isDueTmrw\n                    ? 'is-due-tmrw'\n                    : isPastDue\n                    ? 'is-past-due'\n                    : ''\n                }\n                  `}\n              >\n                {dueDateStr}\n              </Badge>\n            )}\n            {members && members.length > 0 && (\n              <div className=\"task__detail task__members-wrapper\">\n                <div className=\"task__members\">\n                  {members.map(member => {\n                    const { name: memberName, photoURL, userId } = member;\n                    return (\n                      <Avatar\n                        classes={{\n                          avatar: 'task__avatar',\n                          placeholder: 'task__avatar-placeholder'\n                        }}\n                        name={memberName}\n                        size=\"sm\"\n                        variant=\"circle\"\n                        imgSrc={photoURL}\n                        key={userId}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n          </div>\n          <Textarea\n            innerRef={this.setTextareaRef}\n            value={name}\n            onFocus={this.onFocus}\n            onChange={this.onChange}\n            onBlur={this.onBlur}\n            name={taskId}\n            className=\"task__textarea\"\n            onKeyDown={this.deleteTask}\n            minHeight={14}\n          />\n          <div className=\"task__badges task__badges--btm\">\n            {!selectedProjectId && projectId && (\n              <ProjectBadge projectId={projectId} size=\"sm\" />\n            )}\n          </div>\n        </div>\n      </li>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    tags: taskSelectors.getTaskTags(state, ownProps.taskId),\n    selectedProjectId: getSelectedProjectId(state),\n    members: taskSelectors.getAssignees(state, ownProps.taskId),\n    task: taskSelectors.getTask(state, ownProps.taskId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectTask: taskId => dispatch(selectTaskAction(taskId)),\n    deleteTask: ({ taskId, listId }) => dispatch(taskActions.deleteTask({ taskId, listId }))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Task)\n);\n","import React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { connect } from 'react-redux';\nimport { taskSelectors } from '../../ducks/tasks';\nimport Task from './Task';\n\nconst DraggableTask = ({ taskId, index, isDragDisabled, tasksById }) => {\n  if (!(taskId in tasksById)) return null;\n  return (\n    <Draggable\n      draggableId={taskId}\n      index={index}\n      isDragDisabled={isDragDisabled}\n    >\n      {(provided, snapshot) => (\n        <Task\n          taskId={taskId}\n          innerRef={provided.innerRef}\n          provided={provided}\n        />\n      )}\n    </Draggable>\n  );\n};\n\nDraggableTask.defaultProps = {\n  isDragDisabled: false\n};\n\nconst mapStateToProps = state => ({\n  tasksById: taskSelectors.getTasksById(state)\n});\n\nexport default connect(mapStateToProps)(DraggableTask);\n","import React, { Component } from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { Card } from '../Card';\nimport { DraggableTask } from '../Task';\n\nexport default class Tasks extends Component {\n  static defaultProps = {\n    dropType: droppableTypes.TASK,\n    isDragDisabled: false\n  };\n\n  /*\n\n  shouldComponentUpdate(nextProps) {\n    if (this.props.cards === nextProps.cards) {\n      return false;\n    }\n    return true;\n  }\n*/\n  componentDidUpdate(prevProps) {\n    if (this.props.taskIds.length > prevProps.taskIds.length) {\n      this.scrollToBottom();\n    }\n  }\n\n  scrollToBottom = () => {\n    if (!this.listEnd) return;\n    this.listEnd.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  render() {\n    const {\n      listId,\n      projectId,\n      dueDate,\n      taskIds,\n      folderId,\n      layout,\n      dropType,\n      isDragDisabled\n    } = this.props;\n    const isBoardLayout = layout === 'board';\n\n    const inner = taskIds.map((taskId, i) => {\n      return isBoardLayout ? (\n        <Card key={taskId} index={i} taskId={taskId} />\n      ) : (\n        <DraggableTask\n          key={taskId}\n          isDragDisabled={isDragDisabled}\n          index={i}\n          taskId={taskId}\n        />\n      );\n    });\n\n    return (\n      <Droppable\n        droppableId={listId || folderId || projectId || `${dueDate}`}\n        type={dropType}\n      >\n        {(provided, snapshot) =>\n          isBoardLayout ? (\n            <div\n              className=\"list__cards\"\n              ref={provided.innerRef}\n              style={{ minHeight: snapshot.isDraggingOver ? 80 : 16 }}\n              {...provided.droppableProps}\n            >\n              {inner}\n              {provided.placeholder}\n              <div\n                style={{ float: 'left', clear: 'both' }}\n                ref={el => (this.listEnd = el)}\n              />\n            </div>\n          ) : (\n            <ul\n              className=\"list__tasks\"\n              ref={provided.innerRef}\n              style={{ minHeight: snapshot.isDraggingOver ? 60 : 4 }}\n              {...provided.droppableProps}\n            >\n              {inner}\n              {provided.placeholder}\n            </ul>\n          )\n        }\n      </Droppable>\n    );\n  }\n}\n","import React, { Component, createElement } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { taskSelectors } from '../../ducks/tasks';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { TaskComposer } from '../TaskComposer';\nimport { CardComposer } from '../CardComposer';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\nimport { Input } from '../Input';\nimport { Tasks } from '../Tasks';\nimport { Button } from '../Button';\nimport './List.scss';\n\nclass List extends Component {\n  static defaultProps = {\n    isRestricted: false\n  };\n\n  state = {\n    name: this.props.list ? this.props.list.name : '',\n    prevName: this.props.list ? this.props.list.name : '',\n    isMoreActionsMenuVisible: false\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.list.name !== state.prevName) {\n      return {\n        name: props.list.name,\n        prevName: props.list.name\n      };\n    }\n    return null;\n  }\n\n  handleListDelete = e => {\n    e.preventDefault();\n    const { listId, projectId, deleteList } = this.props;\n    deleteList({ listId, projectId });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onBlur = e => {\n    const { list, listId, firebase } = this.props;\n    const { name } = list;\n    const { name: newName } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newName !== name) {\n      firebase.updateListName({ listId, name: newName });\n    }\n  };\n\n  toggleMoreActionsMenu = e => {\n    this.setState(prevState => ({\n      isMoreActionsMenuVisible: !prevState.isMoreActionsMenuVisible\n    }));\n  };\n\n  closeMoreActionsMenu = e => {\n    this.setState({\n      isMoreActionsMenuVisible: false\n    });\n  };\n\n  applySortRule = taskIds => {\n    const { sortBy, tasksById } = this.props;\n    switch (sortBy) {\n      case 'dueDate': {\n        return [...taskIds].sort((a, b) => {\n          const taskA = tasksById[a];\n          const taskB = tasksById[b];\n          const dueDateA = taskA && taskA.dueDate ? taskA.dueDate.toMillis() : null;\n          const dueDateB = taskB && taskB.dueDate ? taskB.dueDate.toMillis() : null;\n          if (!dueDateA && dueDateB) {\n            return 1;\n          }\n          if (dueDateA && !dueDateB) {\n            return -1;\n          }\n          if (!dueDateA && !dueDateB) {\n            return 0;\n          }\n          return dueDateA - dueDateB;\n        });\n      }\n      default: {\n        return taskIds;\n      }\n    }\n  };\n\n  render() {\n    const {\n      taskIdsByViewFilter,\n      listId,\n      index,\n      isRestricted,\n      projectId,\n      projectName,\n      layout,\n      viewFilter,\n      list\n    } = this.props;\n    if (!list) return null;\n    const { name: listName } = list;\n    const isBoardView = layout === 'board';\n    const { name, isMoreActionsMenuVisible } = this.state;\n    const taskIds = this.applySortRule(taskIdsByViewFilter[viewFilter]);\n\n    return (\n      <Draggable draggableId={listId} index={index}>\n        {provided => (\n          <>\n            <section\n              className={`list is-${layout}-layout`}\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <header className=\"list__header\">\n                <Input\n                  className=\"list__input--title\"\n                  name=\"name\"\n                  type=\"text\"\n                  value={name}\n                  onChange={this.onChange}\n                  required={!isRestricted}\n                  hideLabel\n                  isReadOnly={isRestricted}\n                  onBlur={this.onBlur}\n                />\n                <PopoverWrapper\n                  isActive={isMoreActionsMenuVisible}\n                  onOutsideClick={this.closeMoreActionsMenu}\n                  classes={{\n                    wrapper: 'list__popover-wrapper',\n                    popover: 'list__popover'\n                  }}\n                  align={{ inner: 'right' }}\n                  buttonProps={{\n                    size: 'md',\n                    iconOnly: true,\n                    isActive: isMoreActionsMenuVisible,\n                    className: 'list__btn--more-actions',\n                    children: <Icon name=\"more-vertical\" />,\n                    onClick: this.toggleMoreActionsMenu\n                  }}\n                >\n                  <Menu>\n                    <MenuItem className=\"list__more-actions-item\">\n                      {!isRestricted && (\n                        <Button\n                          className=\"list__btn\"\n                          onClick={this.handleListDelete}\n                        >\n                          Delete\n                        </Button>\n                      )}\n                    </MenuItem>\n                  </Menu>\n                </PopoverWrapper>\n              </header>\n              <div className=\"list__content\">\n                <Tasks taskIds={taskIds} listId={listId} layout={layout} />\n              </div>\n              {provided.placeholder}\n              {createElement(\n                isBoardView ? CardComposer : TaskComposer,\n                {\n                  listId,\n                  listName,\n                  projectId,\n                  projectName\n                },\n                null\n              )}\n            </section>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    taskIdsByViewFilter: taskSelectors.getTaskIdsByViewFilter(state, {\n      listId: ownProps.listId\n    }),\n    tasksById: taskSelectors.getTasksById(state),\n    list: listSelectors.getList(state, ownProps.listId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteList: ({ listId, projectId }) =>\n      dispatch(listActions.deleteList({ listId, projectId }))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(List)\n);\n","import React from 'react';\n\nconst TaskEditorSection = ({ className, size, children }) => (\n  <div className={`task-editor__section${size === 'sm' ? '--sm' : ''} ${className ? `task-editor__section--${className}` : ''}`}>{children}</div>\n);\n\nTaskEditorSection.defaultProps = {\n  className: '',\n  size: 'default'\n};\n\nexport default TaskEditorSection;\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\n\nconst TaskEditorMoreActions = ({ onMenuClick }) => (\n  <PopoverWrapper\n    classes={{\n      wrapper: 'task-editor__popover-wrapper',\n      popover: 'task-editor__popover'\n    }}\n    align={{ outer: 'right', inner: 'right' }}\n    buttonProps={{\n      size: 'md',\n      iconOnly: true,\n      className: 'task-editor__toolbar-btn',\n      children: <Icon name=\"more-horizontal\" />\n    }}\n  >\n    <Menu onClick={onMenuClick}>\n      <MenuItem>\n        <a href=\"\" data-action=\"delete\">\n          Delete task\n        </a>\n      </MenuItem>\n    </Menu>\n  </PopoverWrapper>\n);\n\nexport default TaskEditorMoreActions;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Checkbox } from '../Checkbox';\nimport { Textarea } from '../Textarea';\nimport { withFirebase } from '../Firebase';\nimport * as keys from '../../constants/keys';\nimport './Subtask.scss';\n\nclass Subtask extends Component {\n  static defaultProps = {\n    usePortal: false\n  };\n\n  state = {\n    name: this.props.name,\n    isFocused: false,\n    pointX: null,\n    pointY: null,\n    isDragging: false\n  };\n\n  componentDidMount() {\n    this.portal = document.createElement('div');\n    document.body.appendChild(this.portal);\n  }\n\n  componentWillUnmount() {\n    document.body.removeChild(this.portal);\n  }\n\n  onChange = e => {\n    this.setState({\n      name: e.target.value\n    });\n  };\n\n  onFocus = () => {\n    this.setState({\n      isFocused: true\n    });\n  };\n\n  onBlur = () => {\n    const { name, firebase, subtaskId } = this.props;\n    const { name: newName } = this.state;\n    if (name !== newName) {\n      firebase.updateDoc(['subtasks', subtaskId], {\n        name: newName\n      });\n    }\n    this.setState({\n      isFocused: false\n    });\n  };\n\n  deleteSubtask = e => {\n    if (e.target.value !== '' || e.key !== keys.BACKSPACE) return;\n    const { subtaskId, taskId, firebase } = this.props;\n    firebase.deleteSubtask({ subtaskId, taskId });\n  };\n\n  toggleCompleted = async () => {\n    const { subtaskId, isCompleted, firebase } = this.props;\n    await firebase.updateSubtask(subtaskId, {\n      isCompleted: !isCompleted,\n      completedAt: !isCompleted ? firebase.getTimestamp() : null\n    });\n  };\n\n  setTextareaRef = el => {\n    this.textarea = el;\n  };\n\n  onMouseDown = e => {\n    if (e.target.matches('input') || e.target.matches('label')) return;\n    this.setState({\n      pointX: e.pageX,\n      pointY: e.pageY\n    });\n  };\n\n  onMouseUp = e => {\n    const { pointX, pointY, isFocused } = this.state;\n    console.log(isFocused);\n    if (isFocused) return;\n    if (e.pageX === pointX && e.pageY === pointY) {\n      this.textarea.focus();\n    }\n    this.setState({\n      pointX: null,\n      pointY: null\n    });\n  };\n\n  render() {\n    const { subtaskId, index, isCompleted, usePortal } = this.props;\n    const { name, isFocused } = this.state;\n\n    return (\n      <Draggable draggableId={subtaskId} index={index}>\n        {(provided, snapshot) => {\n          const inner = (\n            <li\n              onMouseUp={this.onMouseUp}\n              className={`subtask ${snapshot.isDragging ? 'is-dragging' : ''} ${\n                isFocused ? 'is-focused' : ''\n              }`}\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              onMouseDown={e => {\n                this.onMouseDown(e);\n                provided.dragHandleProps.onMouseDown(e);\n              }}\n            >\n              <Checkbox\n                id={`cb-${subtaskId}`}\n                value={subtaskId}\n                name={subtaskId}\n                isChecked={isCompleted}\n                onChange={this.toggleCompleted}\n                className=\"subtask__checkbox\"\n                labelClass=\"subtask__checkbox-label\"\n              />\n              <Textarea\n                innerRef={this.setTextareaRef}\n                value={name}\n                onChange={this.onChange}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                name={subtaskId}\n                className=\"subtask__textarea\"\n                onKeyDown={this.deleteSubtask}\n              />\n            </li>\n          );\n          return usePortal && snapshot.isDragging\n            ? ReactDOM.createPortal(inner, this.portal)\n            : inner;\n        }}\n      </Draggable>\n    );\n  }\n}\n\nexport default withFirebase(Subtask);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { withFirebase } from '../Firebase';\nimport { Subtask } from '../Subtask';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { subtaskActions, subtaskSelectors } from '../../ducks/subtasks';\nimport { taskSelectors } from '../../ducks/tasks';\nimport { getSelectedProjectId } from '../../ducks/selectedProject';\nimport './Subtasks.scss';\n\nclass Subtasks extends Component {\n  static defaultProps = {\n    usePortal: false\n  };\n\n  state = {\n    isLoading: !this.props.isLoaded\n  };\n\n  async componentDidMount() {\n    const { syncTaskSubtasks, taskId, selectedProjectId } = this.props;\n    if (!selectedProjectId) {\n      this.unsubscribe = await syncTaskSubtasks(taskId);\n      this.setState({\n        isLoading: false\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  }\n\n  moveSubtask = ({ destination, draggableId, source }) => {\n    if (!destination) return;\n    if (destination.index === source.index) return;\n    const { firebase, subtaskIds } = this.props;\n    const updatedSubtaskIds = [...subtaskIds];\n    updatedSubtaskIds.splice(source.index, 1);\n    updatedSubtaskIds.splice(destination.index, 0, draggableId);\n    firebase.updateTask(source.droppableId, {\n      subtaskIds: updatedSubtaskIds\n    });\n  };\n\n  render() {\n    const { taskId, subtasks, usePortal } = this.props;\n    const { isLoading } = this.state;\n    return (\n      <DragDropContext onDragEnd={this.moveSubtask}>\n        <Droppable droppableId={taskId} type={droppableTypes.SUBTASK}>\n          {provided => (\n            <ul\n              className=\"subtasks\"\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {!isLoading &&\n                subtasks.map((subtask, index) => {\n                  return (\n                    <Subtask\n                      subtaskId={subtask.subtaskId}\n                      taskId={taskId}\n                      index={index}\n                      name={subtask.name}\n                      isCompleted={subtask.isCompleted}\n                      key={subtask.subtaskId}\n                      usePortal={usePortal}\n                    />\n                  );\n                })}\n              {provided.placeholder}\n            </ul>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    subtasks: subtaskSelectors.getSubtasksArray(state, ownProps.subtaskIds),\n    subtasksById: subtaskSelectors.getSubtasksById(state),\n    selectedProjectId: getSelectedProjectId(state),\n    isLoaded: taskSelectors.getTaskLoadedState(state, ownProps.taskId).subtasks\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    syncTaskSubtasks: taskId =>\n      dispatch(subtaskActions.syncTaskSubtasks(taskId))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Subtasks)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withFirebase } from '../Firebase';\nimport { Button } from '../Button';\nimport { Textarea } from '../Textarea';\nimport { Icon } from '../Icon';\nimport * as keys from '../../constants/keys';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport './SubtaskComposer.scss';\n\nclass SubtaskComposer extends Component {\n  static defaultProps = {\n    classes: {\n      composer: '',\n      icon: '',\n      iconWrapper: '',\n      form: '',\n      textarea: '',\n      button: ''\n    }\n  };\n\n  state = {\n    name: '',\n    isFocused: false\n  };\n\n  resetForm = () => {\n    this.setState({ name: '' });\n  };\n\n  onChange = e => {\n    this.setState({\n      name: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isFocused: true\n    });\n  };\n\n  onBlur = e => {\n    if (e.target.value !== '') return;\n    this.setState({\n      isFocused: false\n    });\n  };\n\n  addSubtask = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { userId, firebase, taskId, projectId } = this.props;\n    const { name } = this.state;\n    firebase.addSubtask({ userId, name, taskId, projectId });\n    this.resetForm();\n    e.preventDefault();\n  };\n\n  render() {\n    const { name, isFocused } = this.state;\n    const { classes } = this.props;\n    return (\n      <div\n        className={`subtask-composer ${\n          isFocused ? 'is-active' : ''\n        } ${classes.composer || ''}`}\n      >\n        <div\n          className={`subtask-composer__icon-wrapper ${classes.iconWrapper ||\n            ''}`}\n        >\n          <Icon\n            name=\"plus-circle\"\n            className={`subtask-composer__icon ${classes.icon || ''}`}\n          />\n        </div>\n        <form\n          name=\"newSubtaskForm\"\n          className={`subtask-composer__form ${classes.form || ''} ${\n            isFocused ? 'is-focused' : ''\n          }`}\n        >\n          <Textarea\n            className={`subtask-composer__textarea ${classes.textarea || ''}`}\n            name=\"subtask\"\n            value={name}\n            onChange={this.onChange}\n            placeholder=\"Add a subtask\"\n            onFocus={this.onFocus}\n            onKeyDown={this.addSubtask}\n            onBlur={this.onBlur}\n          />\n          {isFocused && (\n            <Button\n              type=\"submit\"\n              color=\"primary\"\n              size=\"small\"\n              variant=\"contained\"\n              disabled={name === ''}\n              onClick={this.addSubtask}\n              className={classes.button || ''}\n            >\n              Add subtask\n            </Button>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userId: currentUserSelectors.getCurrentUserId(state)\n  };\n};\n\nexport default withFirebase(connect(mapStateToProps)(SubtaskComposer));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withAuthorization } from '../Session';\nimport { Tag } from '../Tag';\nimport { Input } from '../Input';\nimport { ColorPicker } from '../ColorPicker';\nimport { withOutsideClick } from '../withOutsideClick';\nimport { taskActions } from '../../ducks/tasks';\nimport { projectSelectors } from '../../ducks/projects';\nimport * as keys from '../../constants/keys';\nimport './TagsInput.scss';\n\nclass TagsInput extends Component {\n  state = {\n    value: '',\n    isActive: false,\n    isColorPickerActive: false,\n    selectedTag: '',\n    currentTag: null,\n    focusedTag: '',\n    selectedIndex: null,\n    hasExactMatch: null,\n    filteredList: []\n  };\n\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.assignedTags.indexOf(undefined) !== -1) {\n      return false;\n    }\n    return true;\n  }\n\n  onFocus = () => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = () => {\n    this.setState({\n      selectedTag: '',\n      selectedIndex: null\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      value: '',\n      isColorPickerActive: false,\n      selectedTag: '',\n      selectedIndex: null,\n      hasExactMatch: null,\n      focusedTag: '',\n      currentTag: null,\n      filteredList: []\n    });\n  };\n\n  matchTag = (tag, value) => {\n    const { name } = tag;\n    const regExp = new RegExp(value, 'i');\n    return regExp.test(name);\n  };\n\n  onChange = e => {\n    const { tagSuggestions } = this.props;\n    const { selectedTag } = this.state;\n    const { value } = e.target;\n    const filteredList = tagSuggestions.filter(tag =>\n      this.matchTag(tag, value)\n    );\n    const hasExactMatch =\n      filteredList.findIndex(item => item.name === value) !== -1;\n    const newIndex = filteredList.indexOf(selectedTag);\n    const persistSelectedTag = newIndex !== -1;\n\n    this.setState({\n      selectedTag: persistSelectedTag\n        ? selectedTag\n        : filteredList.length > 0\n        ? filteredList[0].name\n        : '',\n      selectedIndex: persistSelectedTag ? newIndex : 0,\n      value,\n      filteredList: hasExactMatch\n        ? filteredList\n        : [...filteredList, { name: value, color: 'default' }],\n      hasExactMatch\n    });\n  };\n\n  onKeyDown = e => {\n    if (\n      e.key !== keys.TAB &&\n      e.key !== keys.ARROW_DOWN &&\n      e.key !== keys.ARROW_UP &&\n      e.key !== keys.ENTER &&\n      e.key !== keys.BACKSPACE\n    )\n      return;\n\n    const {\n      filteredList,\n      selectedIndex,\n      selectedTag,\n      value,\n      focusedTag\n    } = this.state;\n    const { assignedTags } = this.props;\n    const nextIndex =\n      selectedIndex === filteredList.length - 1 || selectedIndex === null\n        ? 0\n        : selectedIndex + 1;\n    const prevIndex =\n      selectedIndex === 0 ? filteredList.length - 1 : selectedIndex - 1;\n\n    // eslint-disable-next-line default-case\n    switch (e.key) {\n      case keys.ARROW_DOWN:\n      // eslint-disable-next-line no-fallthrough\n      case keys.TAB: {\n        this.setState({\n          selectedTag: filteredList[nextIndex].name,\n          selectedIndex: nextIndex\n        });\n        break;\n      }\n      case keys.ARROW_UP: {\n        this.setState({\n          selectedTag: filteredList[prevIndex].name,\n          selectedIndex: prevIndex\n        });\n        break;\n      }\n      case keys.ENTER: {\n        if (selectedTag === '' && value === '') return;\n        this.reset();\n        this.addTag(selectedTag === '' ? value : selectedTag);\n        break;\n      }\n      case keys.BACKSPACE: {\n        if (value !== '') return;\n        if (focusedTag === '') {\n          this.setState({\n            focusedTag: assignedTags[assignedTags.length - 1].name\n          });\n        } else {\n          this.removeTag(focusedTag);\n        }\n      }\n    }\n    e.preventDefault();\n  };\n\n  onOutsideClick = e => {\n    if (e.target.matches('.tags-input__item')) return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  toggleColorPicker = () => {\n    this.setState(prevState => ({\n      isColorPickerActive: !prevState.isColorPickerActive\n    }));\n  };\n\n  hideColorPicker = () => {\n    const { isColorPickerActive } = this.state;\n    if (!isColorPickerActive) return;\n    this.toggleColorPicker();\n  };\n\n  addTag = name => {\n    const {\n      firebase,\n      currentUser,\n      projectTags,\n      taskId,\n      projectId\n    } = this.props;\n    const { userId, tags: userTags } = currentUser;\n    const isProjectTag = projectTags && name in projectTags;\n    const isUserTag = userTags && name in userTags;\n    const projectTag = isProjectTag ? projectTags[name] : null;\n    const userTag = isUserTag ? userTags[name] : null;\n    const projectCount = isProjectTag ? projectTag.count + 1 : 1;\n    const userCount = isUserTag ? userTag.count + 1 : 1;\n    const tagData = isProjectTag\n      ? { ...projectTag, projectCount, userCount }\n      : isUserTag\n      ? { ...userTag, projectCount, userCount }\n      : { name, userCount, projectCount };\n\n    firebase\n      .addTag({\n        userId,\n        taskId,\n        projectId,\n        ...tagData\n      })\n      .then(() => {\n        if (!isUserTag && !isProjectTag) {\n          this.setState({\n            currentTag: name\n          });\n          this.toggleColorPicker();\n        }\n      });\n  };\n\n  setTagColor = color => {\n    const { currentUser, projectId, firebase } = this.props;\n    const { userId } = currentUser;\n    const { currentTag: tag } = this.state;\n    firebase.setTagColor({ userId, projectId, tag, color });\n  };\n\n  removeTag = name => {\n    const { taskId, currentUser, projectId, removeTaskTag } = this.props;\n    const { userId } = currentUser;\n    removeTaskTag({ taskId, name, userId, projectId });\n    this.setState({\n      isColorPickerActive: false,\n      focusedTag: '',\n      currentTag: null\n    });\n  };\n\n  setCurrentTagRef = ref => {\n    this.currentTag = ref;\n  };\n\n  onClickSuggestion = e => {\n    if (!e.target.matches('.tags-input__item')) return;\n    const { tag } = e.target.dataset;\n    this.reset();\n    this.addTag(tag);\n  };\n\n  render() {\n    const { assignedTags, innerRef } = this.props;\n    const {\n      value,\n      isActive,\n      isColorPickerActive,\n      filteredList,\n      selectedTag,\n      currentTag,\n      hasExactMatch,\n      focusedTag\n    } = this.state;\n\n    const hasTags = assignedTags && assignedTags.length > 0;\n\n    const colorPickerStyle = {};\n    if (this.currentTag) {\n      const {\n        offsetLeft,\n        offsetWidth,\n        offsetTop,\n        offsetHeight\n      } = this.currentTag;\n      colorPickerStyle.left = offsetLeft + offsetWidth / 2 - 74; // 74 = 1/2 colorPicker width\n      colorPickerStyle.top = offsetTop + offsetHeight + 9; // 9 = colorPicker arrow height\n    }\n\n    return (\n      <div\n        className={`tags__container ${isActive ? 'is-active' : ''} ${\n          !hasTags ? 'no-tags' : ''\n        }`}\n        ref={innerRef}\n      >\n        {assignedTags.map(tag => (\n          <Tag\n            key={tag.name}\n            color={tag.color}\n            size=\"md\"\n            name={tag.name}\n            onDelete={() => this.removeTag(tag.name)}\n            isFocused={focusedTag === tag.name}\n            innerRef={currentTag === tag.name ? this.setCurrentTagRef : null}\n          />\n        ))}\n        <div className=\"tags-input__wrapper\">\n          <Input\n            className=\"tags-input\"\n            onChange={this.onChange}\n            onBlur={this.onBlur}\n            value={value}\n            onFocus={this.onFocus}\n            type=\"text\"\n            autoComplete=\"off\"\n            onKeyDown={this.onKeyDown}\n            hideLabel\n          />\n          {isActive && (\n            <ul className=\"tags-input__list\">\n              {filteredList.map((item, i) => {\n                return (\n                  <li\n                    key={item.name}\n                    data-tag={item.name}\n                    onClick={this.onClickSuggestion}\n                    tabIndex={0}\n                    className={`tags-input__item ${\n                      selectedTag === item.name ? 'is-selected' : ''\n                    } ${\n                      !hasExactMatch && i === filteredList.length - 1\n                        ? 'tags-input__item--new'\n                        : ''\n                    }`}\n                  >\n                    {!hasExactMatch && i === filteredList.length - 1 ? (\n                      <>\n                        <span className=\"tags-input__item--heading\">New Tag</span>\n                        <span className=\"tags-input__item--name\">\n                          {item.name}\n                        </span>\n                      </>\n                    ) : (\n                      <Tag name={item.name} color={item.color} size=\"sm\" />\n                    )}\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n        </div>\n        {isActive && (\n          <ColorPicker\n            isActive={isColorPickerActive}\n            selectColor={this.setTagColor}\n            style={colorPickerStyle}\n            onOutsideClick={this.hideColorPicker}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  projectTags: projectSelectors.getProjectTags(state, ownProps.projectId)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  removeTaskTag: ({ taskId, name, userId, projectId }) =>\n    dispatch(taskActions.removeTaskTag({ taskId, name, userId, projectId }))\n});\n\nconst condition = currentUser => !!currentUser;\n\nexport default compose(\n  withAuthorization(condition),\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  withOutsideClick\n)(TagsInput);\n","import React, { Component } from 'react';\nimport {\n  MONTHS,\n  WEEK_DAYS,\n  getNextMonth,\n  getPrevMonth,\n  getMonthDates,\n  getNextYears\n} from '../../utils/date';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { PopoverWrapper } from '../Popover';\nimport { Radio } from '../Radio';\nimport './Calendar.scss';\n\nexport default class Calendar extends Component {\n  state = {\n    isMonthsDropdownActive: false,\n    isYearsDropdownActive: false\n  };\n\n  goToNextMonth = () => {\n    const { month, year, onMonthClick } = this.props;\n    onMonthClick(getNextMonth(month, year));\n  };\n\n  goToPrevMonth = () => {\n    const { month, year, onMonthClick } = this.props;\n    onMonthClick(getPrevMonth(month, year));\n  };\n\n  toggleMonthsDropdown = () => {\n    this.setState(prevState => ({\n      isMonthsDropdownActive: !prevState.isMonthsDropdownActive\n    }));\n  };\n\n  toggleYearsDropdown = () => {\n    this.setState(prevState => ({\n      isYearsDropdownActive: !prevState.isYearsDropdownActive\n    }));\n  };\n\n  closeYearsDropdown = () => {\n    this.setState({\n      isYearsDropdownActive: false\n    });\n  };\n\n  closeMonthsDropdown = () => {\n    this.setState({\n      isMonthsDropdownActive: false\n    });\n  };\n\n  selectMonth = e => {\n    const month = +e.target.value;\n    const { onMonthClick, year } = this.props;\n    onMonthClick({ month, year });\n    this.toggleMonthsDropdown();\n  };\n\n  selectYear = e => {\n    const year = +e.target.value;\n    const { onYearClick } = this.props;\n    onYearClick(year);\n    this.toggleYearsDropdown();\n  };\n\n  render() {\n    const {\n      month,\n      year,\n      selectedDate,\n      today,\n      onDayClick,\n      classes\n    } = this.props;\n    const { isMonthsDropdownActive, isYearsDropdownActive } = this.state;\n    const dates = getMonthDates(month, year);\n    const years = getNextYears(4);\n\n    return (\n      <div className={`calendar ${classes.calendar}`}>\n        <div className=\"calendar__year\">\n          <PopoverWrapper\n            isActive={isYearsDropdownActive}\n            onOutsideClick={this.closeYearsDropdown}\n            classes={{\n              wrapper: 'calendar__years-dropdown-wrapper',\n              popover: 'calendar__years-dropdown'\n            }}\n            buttonProps={{\n              className: `calendar__btn--years-dropdown ${\n                isYearsDropdownActive ? 'is-active' : ''\n              }`,\n              children: (\n                <>\n                  {year}\n                  <Icon name=\"chevron-down\" />\n                </>\n              ),\n              onClick: this.toggleYearsDropdown\n            }}\n          >\n            <ul className=\"calendar__years-list\">\n              {years.map(yearOption => (\n                <li className=\"calendar__years-item\" key={yearOption}>\n                  <Radio\n                    name=\"year\"\n                    id={yearOption}\n                    value={yearOption}\n                    isChecked={yearOption === year}\n                    label={\n                      yearOption === year ? (\n                        <>\n                          <Icon name=\"check\" />\n                          {yearOption}\n                        </>\n                      ) : (\n                        yearOption\n                      )\n                    }\n                    onChange={this.selectYear}\n                    classes={{\n                      radio: 'calendar__radio',\n                      label: 'calendar__radio-label'\n                    }}\n                  />\n                </li>\n              ))}\n            </ul>\n          </PopoverWrapper>\n        </div>\n        <div className=\"calendar__month\">\n          <PopoverWrapper\n            isActive={isMonthsDropdownActive}\n            onOutsideClick={this.closeMonthsDropdown}\n            classes={{\n              wrapper: 'calendar__months-dropdown-wrapper',\n              popover: 'calendar__months-dropdown'\n            }}\n            buttonProps={{\n              className: `calendar__btn--months-dropdown ${\n                isMonthsDropdownActive ? 'is-active' : ''\n              }`,\n              children: (\n                <>\n                  {MONTHS[month].long}\n                  <Icon name=\"chevron-down\" />\n                </>\n              ),\n              onClick: this.toggleMonthsDropdown\n            }}\n          >\n            <ul className=\"calendar__months-list\">\n              {MONTHS.map((monthOption, i) => (\n                <li className=\"calendar__months-item\" key={monthOption.long}>\n                  <Radio\n                    name=\"month\"\n                    id={monthOption.long}\n                    value={i}\n                    isChecked={i === month}\n                    label={\n                      i === month ? (\n                        <>\n                          <Icon name=\"check\" />\n                          {monthOption.long}\n                        </>\n                      ) : (\n                        monthOption.long\n                      )\n                    }\n                    onChange={this.selectMonth}\n                    classes={{\n                      radio: 'calendar__radio',\n                      label: 'calendar__radio-label'\n                    }}\n                  />\n                </li>\n              ))}\n            </ul>\n          </PopoverWrapper>\n          <div className=\"calendar__month--prev-next\">\n            <Button\n              type=\"button\"\n              className=\"calendar__btn--month calendar__btn--prev-month\"\n              size=\"sm\"\n              iconOnly\n              onClick={this.goToPrevMonth}\n            >\n              <Icon name=\"chevron-left\" />\n            </Button>\n            <Button\n              type=\"button\"\n              className=\"calendar__btn--month calendar__btn--next-month\"\n              size=\"sm\"\n              iconOnly\n              onClick={this.goToNextMonth}\n            >\n              <Icon name=\"chevron-right\" />\n            </Button>\n          </div>\n        </div>\n        <div className=\"calendar__week-days\">\n          {WEEK_DAYS.map(day => (\n            <div\n              key={day.long}\n              className={`calendar__week-day ${classes.weekDay}`}\n            >\n              {day.narrow}\n            </div>\n          ))}\n        </div>\n        <div className=\"calendar__days\">\n          {dates.map(date => {\n            const isToday =\n              date.day === today.day &&\n              date.month === today.month &&\n              date.year === today.year;\n            const isSelectedDate =\n              selectedDate &&\n              date.day === selectedDate.day &&\n              date.month === selectedDate.month &&\n              date.year === selectedDate.year;\n            return (\n              <div\n                key={`${date.month}--${date.day}`}\n                className={`calendar__day ${\n                  date.month !== month ? 'calendar__day--prev-next' : ''\n                } ${isToday ? 'is-today' : ''} ${\n                  isSelectedDate ? 'is-selected' : ''\n                } ${classes.day}`}\n              >\n                <Button\n                  type=\"button\"\n                  className=\"calendar__btn--day\"\n                  size=\"sm\"\n                  onClick={() => onDayClick(date)}\n                >\n                  {date.day}\n                </Button>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  toSimpleDateString,\n  toSimpleDateObj,\n  isSDSFormat,\n  isSameDate\n} from '../../utils/date';\nimport { Calendar } from '../Calendar';\nimport { Button } from '../Button';\nimport { Input } from '../Input';\nimport './DatePicker.scss';\n\nexport default class DatePicker extends Component {\n  state = {\n    today: {\n      day: new Date().getDate(),\n      month: new Date().getMonth(),\n      year: new Date().getFullYear()\n    },\n    selectedDate: this.props.selectedDate,\n    currentMonth: this.props.currentMonth,\n    currentYear: this.props.currentYear,\n    dateString: toSimpleDateString(this.props.selectedDate) || ''\n  };\n\n  resetCalendar = () => {\n    this.setState({\n      currentMonth: this.props.currentMonth,\n      currentYear: this.props.currentYear\n    });\n  };\n\n  componentDidMount() {}\n\n  selectDate = date => {\n    if (typeof date === 'string') {\n      const newDate = toSimpleDateObj(date);\n      const { month, year } = newDate;\n      const { currentMonth, currentYear } = this.state;\n      this.setState({\n        selectedDate: newDate\n      });\n      if (month !== currentMonth || year !== currentYear) {\n        this.setCurrentMonth({ month, year });\n      }\n    } else {\n      this.setState({\n        selectedDate: date,\n        dateString: toSimpleDateString(date)\n      });\n    }\n  };\n\n  setCurrentMonth = ({ month, year }) => {\n    this.setState({\n      currentMonth: month,\n      currentYear: year\n    });\n  };\n\n  setCurrentYear = year => {\n    this.setState({\n      currentYear: year\n    });\n  };\n\n  updateDateString = e => {\n    const { value } = e.target;\n    this.setState({\n      dateString: value\n    });\n    if (isSDSFormat(value)) {\n      this.selectDate(value);\n    }\n  };\n\n  setDate = () => {\n    const { selectedDate: currentDueDate, selectDate } = this.props;\n    const { selectedDate } = this.state;\n    if (\n      !(currentDueDate === null && selectedDate === null) &&\n      !isSameDate(currentDueDate, selectedDate)\n    ) {\n      const { day, month, year } = selectedDate;\n      const date = new Date(year, month, day);\n      selectDate(date);\n    }\n    this.closeDatePicker();\n  };\n\n  clearDueDate = () => {\n    const { selectedDate, selectDate } = this.props;\n    this.selectDate(null);\n    if (selectedDate !== null) {\n      selectDate(null);\n    }\n    this.closeDatePicker();\n  };\n\n  closeDatePicker = () => {\n    const { onClose } = this.props;\n    this.resetCalendar();\n    onClose();\n  }\n\n  render() {\n    const { isActive, innerRef } = this.props;\n    const {\n      today,\n      selectedDate,\n      currentMonth,\n      currentYear,\n      dateString\n    } = this.state;\n    return (\n      <div\n        className=\"date-picker\"\n        ref={innerRef}\n        style={{ display: !isActive ? 'none' : 'block' }}\n      >\n        <div className=\"date-picker__header\">\n          <div className=\"date-picker__due-date-wrapper\">\n            <Input\n              name=\"dueDate\"\n              type=\"text\"\n              label=\"Due Date\"\n              value={dateString}\n              onChange={this.updateDateString}\n              className=\"date-picker__input--due-date\"\n              labelClass=\"date-picker__label--due-date\"\n              placeholder=\"mm-dd-yy\"\n              maxLength={8}\n            />\n          </div>\n        </div>\n        <Calendar\n          classes={{\n            calendar: 'date-picker__calendar',\n            weekDay: 'date-picker__week-day'\n          }}\n          month={currentMonth}\n          year={currentYear}\n          selectedDate={selectedDate}\n          today={today}\n          onDayClick={this.selectDate}\n          onMonthClick={this.setCurrentMonth}\n          onYearClick={this.setCurrentYear}\n        />\n        <div className=\"date-picker__footer\">\n          <Button\n            size=\"sm\"\n            variant=\"text\"\n            color=\"neutral\"\n            className=\"date-picker__btn--clear\"\n            onClick={this.clearDueDate}\n          >\n            Clear\n          </Button>\n          <Button\n            size=\"sm\"\n            variant=\"contained\"\n            color=\"primary\"\n            className=\"date-picker__btn--set-due-date\"\n            onClick={this.setDate}\n          >\n            Done\n          </Button>\n          <Button\n            size=\"sm\"\n            variant=\"text\"\n            color=\"neutral\"\n            className=\"date-picker__btn--cancel\"\n            onClick={this.closeDatePicker}\n          >\n            Cancel\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport './TaskEditorPane.scss';\n\nconst TaskEditorPane = ({ onClose, onClick, children }) => (\n  <div className=\"task-editor-pane\" onClick={onClick}>\n    <Button\n      type=\"button\"\n      className=\"task-editor-pane__btn--close\"\n      onClick={onClose}\n      iconOnly\n    >\n      <Icon name=\"x\" />\n  </Button>\n  { children }\n  </div>\n);\n\nexport default TaskEditorPane;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { SelectDropdown } from '../SelectDropdown';\nimport { projectSelectors, projectActions } from '../../ducks/projects';\n\nclass ProjectListDropdown extends Component {\n  state = {\n    isLoading: !this.props.isLoaded\n  };\n\n  async componentDidMount() {\n    const { isLoaded, fetchProjectLists, projectId } = this.props;\n\n    if (!isLoaded) {\n      await fetchProjectLists(projectId);\n      this.setState({\n        isLoading: false\n      });\n    }\n  }\n\n  render() {\n    const { isLoading } = this.state;\n    const { onChange, lists, selectedList, classes } = this.props;\n    if (isLoading) return null;\n    return (\n      <SelectDropdown\n        options={lists.reduce(\n          (listsById, list) => ({\n            ...listsById,\n            [list.listId]: {\n              value: list.listId,\n              name: list.name\n            }\n          }),\n          {}\n        )}\n        value={selectedList}\n        name=\"list\"\n        align={{ inner: 'right' }}\n        onChange={onChange}\n        classes={classes}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    lists: projectSelectors.getProjectLists(state, ownProps.projectId),\n    isLoaded: projectSelectors.getProjectLoadedState(state, ownProps.projectId)\n      .lists\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchProjectLists: projectId =>\n      dispatch(projectActions.fetchProjectLists(projectId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ProjectListDropdown);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withFirebase } from '../Firebase';\nimport { Avatar } from '../Avatar';\nimport * as keys from '../../constants/keys';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport { userSelectors } from '../../ducks/users';\nimport { RichTextEditor, getMentionedUsers } from '../RichTextEditor';\nimport './CommentComposer.scss';\n\nclass CommentComposer extends Component {\n  static defaultProps = {\n    classes: {\n      avatar: '',\n      avatarPlaceholder: '',\n      composer: '',\n      button: ''\n    }\n  };\n\n  addComment = (value, e) => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { currentUser, firebase, taskId, projectId } = this.props;\n    const users = getMentionedUsers(value);\n    firebase.addComment({\n      content: value.toJSON(),\n      to: users,\n      from: {\n        userId: currentUser.userId,\n        name: currentUser.name,\n        username: currentUser.username\n      },\n      taskId,\n      projectId\n    });\n    e.preventDefault();\n  };\n\n  render() {\n    const { currentUser, classes, users, usersById, id } = this.props;\n    return (\n      <>\n        <Avatar\n          classes={{\n            avatar: classes.avatar || '',\n            placeholder: classes.avatarPlaceholder || ''\n          }}\n          name={currentUser.name}\n          size=\"sm\"\n          variant=\"circle\"\n          imgSrc={currentUser.photoURL}\n        />\n        <RichTextEditor\n          key={`comment-composer--${id}`}\n          id={`comment-composer--${id}`}\n          onSubmit={this.addComment}\n          classes={{\n            container: `comment-composer ${classes.composer || ''}`,\n            toolbar: 'comment-composer__toolbar',\n            button: 'comment-composer__toolbar-btn',\n            addOns: 'comment-composer__add-ons'\n          }}\n          isMentionsEnabled\n          mentions={{\n            users,\n            usersById\n          }}\n          addOns={[\n            {\n              type: 'submit',\n              onClick: 'onSubmit',\n              id: 'submitComment',\n              props: {\n                className: `comment-composer__btn--submit ${classes.button ||\n                  ''}`,\n                color: 'primary',\n                variant: 'contained',\n                children: 'Send'\n              }\n            }\n          ]}\n          marks={[\n            {\n              type: 'bold',\n              icon: 'bold'\n            },\n            {\n              type: 'italic',\n              icon: 'italic'\n            },\n            {\n              type: 'underlined',\n              icon: 'underline'\n            }\n          ]}\n          inlines={[\n            {\n              type: 'mention',\n              icon: 'at-sign'\n            }\n          ]}\n        />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: currentUserSelectors.getCurrentUser(state),\n    users: userSelectors.getUsersArray(state),\n    usersById: userSelectors.getUsersById(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CommentComposer)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withFirebase } from '../Firebase';\nimport { userSelectors } from '../../ducks/users';\nimport { RichTextEditor, getUserIdsFromMentions } from '../RichTextEditor';\nimport './CommentEditor.scss';\n\nclass CommentEditor extends Component {\n  static defaultProps = {\n    classes: {\n      editor: '',\n      button: ''\n    },\n    isReadOnly: true\n  };\n\n  updateComment = (value, e) => {\n    const { firebase, commentId } = this.props;\n    firebase.updateDoc(['comments', commentId], {\n      content: value.toJSON(),\n      to: getUserIdsFromMentions(value)\n    });\n    e.preventDefault();\n  };\n\n  render() {\n    const {\n      isReadOnly,\n      content,\n      classes,\n      users,\n      usersById,\n      commentId\n    } = this.props;\n    return (\n      <RichTextEditor\n        id={commentId}\n        isReadOnly={isReadOnly}\n        value={content}\n        onUpdate={this.updateComment}\n        classes={{\n          container: `comment-editor ${classes.editor || ''}`,\n          toolbar: 'comment-editor__toolbar',\n          button: 'comment-editor__toolbar-btn',\n          addOns: 'comment-editor__add-ons'\n        }}\n        isMentionsEnabled\n        mentions={{\n          users,\n          usersById\n        }}\n        addOns={[\n          {\n            type: 'update',\n            id: 'updateComment',\n            onClick: 'onUpdate',\n            props: {\n              className: `comment-editor__btn--submit ${classes.button || ''}`,\n              color: 'primary',\n              variant: 'contained',\n              children: 'Save Changes'\n            }\n          }\n        ]}\n        marks={[\n          {\n            type: 'bold',\n            icon: 'bold'\n          },\n          {\n            type: 'italic',\n            icon: 'italic'\n          },\n          {\n            type: 'underlined',\n            icon: 'underline'\n          }\n        ]}\n        inlines={[\n          {\n            type: 'mention',\n            icon: 'at-sign'\n          }\n        ]}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: userSelectors.getUsersArray(state),\n    usersById: userSelectors.getUsersById(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CommentEditor)\n);\n","import React, { Component } from 'react';\nimport { isDate, toDateString, toTimeString } from '../../utils/date';\nimport './Timestamp.scss';\n\nexport default class Timestamp extends Component {\n  static defaultProps = {\n    className: '',\n    isRelative: true,\n    dateOnly: false,\n    absoluteMin: [6, 'h'],\n    timeOptions: {\n      format: 'h:mm',\n      hour12: true\n    },\n    dateOptions: {\n      useRelative: true,\n      format: {\n        weekday: 'short',\n        month: 'short',\n        day: 'numeric',\n        year: '2-digit'\n      }\n    }\n  };\n\n  state = {\n    secondsElapsed: 0\n  };\n\n  componentDidMount() {\n    const { date, isRelative } = this.props;\n    if (!date) return;\n    const secondsElapsed =\n      Math.floor(Date.now() / 1000) - Math.floor(date.getTime() / 1000);\n    this.setState({\n      secondsElapsed\n    });\n    this.absoluteMin = this.getAbsoluteMinSeconds();\n    if (secondsElapsed < this.absoluteMin || !isRelative) {\n      this.interval = setInterval(this.tick, 1000);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n  tick = () => {\n    const { secondsElapsed } = this.state;\n    if (secondsElapsed > this.absoluteMin) {\n      clearInterval(this.interval);\n    } else {\n      this.setState(prevState => ({\n        secondsElapsed: prevState.secondsElapsed + 1\n      }));\n    }\n  };\n\n  // Returns min seconds required for switch to absolute timestamp\n  getAbsoluteMinSeconds = () => {\n    const { absoluteMin } = this.props;\n    const [n, unit] = absoluteMin;\n    switch (unit) {\n      case 'm': {\n        return n * 60;\n      }\n      case 'h': {\n        return n * 60 * 60;\n      }\n      case 'd': {\n        return n * 60 * 60 * 24;\n      }\n      default: {\n        return n;\n      }\n    }\n  };\n\n  getDateString = () => {\n    const { secondsElapsed } = this.state;\n    const { date, isRelative, dateOnly, timeOptions, dateOptions } = this.props;\n    const dateString = toDateString(date, dateOptions);\n    const absoluteDateString = dateOnly\n      ? dateString\n      : `${dateString} at ${toTimeString(date, timeOptions)}`;\n    if (!isRelative) return absoluteDateString;\n    return secondsElapsed < 60 // less than one minute\n      ? 'Just now'\n      : secondsElapsed < 120 // less than 2 minutes\n      ? '1 minute ago'\n      : secondsElapsed < 3600 // less than 1 hour\n      ? `${Math.floor(secondsElapsed / 60)} minutes ago`\n      : secondsElapsed < 7200 // less than 2 hours\n      ? '1 hour ago'\n      : secondsElapsed < this.absoluteMin // default = 6 hours\n      ? `${Math.floor(secondsElapsed / 3600)} hours ago`\n      : absoluteDateString;\n  };\n\n  render() {\n    const { date, className } = this.props;\n    if (!date) return null;\n    return (\n      <span className={`timestamp ${className}`}>{this.getDateString()}</span>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withFirebase } from '../Firebase';\nimport { userSelectors } from '../../ducks/users';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { Avatar } from '../Avatar';\nimport { CommentEditor } from '../CommentEditor';\nimport { Timestamp } from '../Timestamp';\nimport './Comment.scss';\n\nclass Comment extends Component {\n  state = {\n    isCommentEditorActive: false\n  };\n\n  handleLike = () => {\n    const { commentId, likes, currentUserId, firebase } = this.props;\n\n    if (likes[currentUserId]) {\n      firebase.updateDoc(['comments', commentId], {\n        [`likes.${currentUserId}`]: firebase.deleteField()\n      });\n    } else {\n      firebase.updateDoc([`comments`, commentId], {\n        [`likes.${currentUserId}`]: true\n      });\n    }\n  };\n\n  render() {\n    const { commentId, user, content, createdAt, likes, isPinned } = this.props;\n    const { isCommentEditorActive } = this.state;\n    const { name, photoURL } = user;\n    const likesCount = Object.keys(likes).length;\n    if (!createdAt) return null;\n    return (\n      <div className={`comment__wrapper ${isPinned ? 'is-pinned' : ''}`}>\n        <Avatar\n          classes={{\n            avatar: 'comment__avatar',\n            placeholder: 'comment__avatar-placeholder'\n          }}\n          name={name}\n          size=\"sm\"\n          variant=\"circle\"\n          imgSrc={photoURL}\n        />\n        <div className=\"comment\">\n          <div className=\"comment__header\">\n            <div className=\"comment__details\">\n              <span className=\"comment__name\">{name}</span>\n              <Timestamp\n                className=\"comment__timestamp\"\n                date={createdAt.toDate()}\n              />\n            </div>\n            <Button\n              className=\"comment__likes\"\n              onClick={this.handleLike}\n              size=\"sm\"\n            >\n              <Icon name=\"thumbs-up\" />\n              <span className=\"comment__likes-counter\">\n                {likesCount > 0 ? likesCount : ''}\n              </span>\n            </Button>\n          </div>\n          <CommentEditor\n            key={commentId}\n            commentId={commentId}\n            content={content}\n            isReadOnly={!isCommentEditorActive}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state, ownProps.from.userId),\n    currentUserId: currentUserSelectors.getCurrentUserId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Comment)\n);\n","import * as types from './types';\nimport { setTaskLoadedState } from '../tasks/actions';\nimport firebase from '../../store/firebase';\n\nexport const loadCommentsById = commentsById => {\n  return {\n    type: types.LOAD_COMMENTS_BY_ID,\n    commentsById\n  };\n};\n\nexport const addComment = ({ commentId, commentData }) => {\n  return {\n    type: types.ADD_COMMENT,\n    commentId,\n    commentData\n  };\n};\n\nexport const removeComment = commentId => {\n  return {\n    type: types.REMOVE_COMMENT,\n    commentId\n  };\n};\n\nexport const updateComment = ({ commentId, commentData }) => {\n  return {\n    type: types.UPDATE_COMMENT,\n    commentId,\n    commentData\n  };\n};\n\n// Thunks\n\nexport const fetchCommentsById = () => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.fs\n        .collection('comments')\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchTaskComments = taskId => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.fs\n        .collection('comments')\n        .where('taskId', '==', taskId)\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserComments = userId => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.fs\n        .collection('comments')\n        .where('to', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const syncTaskComments = taskId => {\n  return async (dispatch, getState) => {\n    try {\n      const subscription = await firebase.fs\n        .collection('comments')\n        .where('taskId', '==', taskId)\n        .onSnapshot(async snapshot => {\n          const changes = await snapshot.docChanges();\n          const isInitialLoad =\n            snapshot.size === changes.length &&\n            changes.every(change => change.type === 'added');\n\n          if (isInitialLoad && changes.length > 1) {\n            const comments = {};\n            changes.forEach(change => {\n              const commentId = change.doc.id;\n              if (commentId in getState().commentsById) return;\n              const commentData = change.doc.data();\n              comments[commentId] = {\n                commentId,\n                ...commentData\n              };\n            });\n            dispatch(loadCommentsById(comments));\n            dispatch(setTaskLoadedState(taskId, 'comments'));\n          } else {\n            changes.forEach(change => {\n              const commentId = change.doc.id;\n              const commentData = change.doc.data();\n              if (change.type === 'added') {\n                const { createdAt } = commentData;\n                if (commentId in getState().commentsById) return;\n                dispatch(addComment({ commentId, commentData }));\n              } else if (change.type === 'removed') {\n                dispatch(removeComment(commentId));\n              } else if (!(commentId in getState().commentsById)) {\n                dispatch(addComment({ commentId, commentData }));\n              } else {\n                dispatch(updateComment({ commentId, commentData }));\n              }\n            });\n          }\n        });\n      return subscription;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n","export const LOAD_COMMENTS_BY_ID = 'LOAD_COMMENTS_BY_ID';\nexport const FETCH_COMMENTS_BY_ID = 'FETCH_COMMENTS_BY_ID';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const UPDATE_COMMENT = 'UPDATE_COMMENT';\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\n","export const getCommentsById = state => {\n  const { commentsById } = state;\n  return commentsById;\n};\n\nexport const getComment = (state, commentId) => {\n  const { commentsById } = state;\n  return commentsById[commentId];\n};\n\nexport const getCommentsArray = (state, commentIds) => {\n  const { commentsById } = state;\n  if (!commentIds) return [];\n  let comments = [];\n\n  for (let commentId of commentIds) {\n    const comment = commentsById[commentId];\n    if (!comment) break;\n    comments = comments.concat(comment);\n  }\n  \n  return comments;\n};\n\nexport const getTaskComments = (state, taskId) => {\n  const { commentsById, tasksById } = state;\n  const task = tasksById[taskId];\n  if (!task) return [];\n  const { commentIds } = tasksById[taskId];\n  return commentIds.map(commentId => commentsById[commentId]);\n};","import * as types from './types';\n\nconst commentsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_COMMENTS_BY_ID: {\n      const { commentsById } = action;\n      return {\n        ...state,\n        ...commentsById\n      };\n    }\n    case types.ADD_COMMENT: {\n      const { commentId, commentData } = action;\n      return {\n        ...state,\n        [commentId]: {\n          commentId,\n          isLoaded: true,\n          ...commentData\n        }\n      };\n    }\n    case types.REMOVE_COMMENT: {\n      const { commentId } = action;\n      const { [commentId]: removedComment, ...restOfComments } = state;\n      return restOfComments;\n    }\n    case types.UPDATE_COMMENT: {\n      const { commentId, commentData } = action;\n      return {\n        ...state,\n        [commentId]: {\n          ...state[commentId],\n          ...commentData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default commentsById;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withFirebase } from '../Firebase';\nimport { Comment } from '../Comment';\nimport { commentActions, commentSelectors } from '../../ducks/comments';\nimport { taskSelectors } from '../../ducks/tasks';\n\nclass Comments extends Component {\n  state = {\n    isLoading: !this.props.isLoaded\n  };\n\n  async componentDidMount() {\n    const { syncTaskComments, taskId } = this.props;\n      this.unsubscribe = await syncTaskComments(taskId);\n      this.setState({\n        isLoading: false\n      });\n  }\n\n  componentWillUnmount() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  }\n\n  render() {\n    const { comments } = this.props;\n    const { isLoading } = this.state;\n    if (isLoading) return null;\n    return comments.length > 0 ? comments.map(comment => (\n        <Comment key={comment.commentId} {...comment} />\n      )) : null;\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    comments: commentSelectors.getCommentsArray(\n      state,\n      ownProps.commentIds\n    ),\n    isLoaded: taskSelectors.getTaskLoadedState(state, ownProps.taskId).comments\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    syncTaskComments: taskId => dispatch(commentActions.syncTaskComments(taskId))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Comments)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withFirebase } from '../Firebase';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { subtaskSelectors } from '../../ducks/subtasks';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { Modal } from '../Modal';\nimport { Toolbar } from '../Toolbar';\nimport TaskEditorSection from './TaskEditorSection';\nimport TaskEditorMoreActions from './TaskEditorMoreActions';\nimport { Subtasks } from '../Subtasks';\nimport { SubtaskComposer } from '../SubtaskComposer';\nimport { TagsInput } from '../TagsInput';\nimport './TaskEditor.scss';\nimport { listSelectors } from '../../ducks/lists';\nimport { DatePicker } from '../DatePicker';\nimport TaskEditorPane from './TaskEditorPane';\nimport { ProjectBadge } from '../ProjectBadge';\nimport { getSimpleDate, toDateString, isPriorDate } from '../../utils/date';\nimport { ProjectListDropdown } from '../ProjectListDropdown';\nimport { CommentComposer } from '../CommentComposer';\nimport { Comments } from '../Comments';\nimport { MemberAssigner } from '../MemberAssigner';\nimport { NotesEditor } from '../NotesEditor';\nimport { debounce } from '../../utils/function';\n\nconst TaskEditorWrapper = ({\n  layout,\n  handleTaskEditorClose,\n  onOutsideClick,\n  children\n}) => {\n  return layout === 'board' ? (\n    <Modal\n      onModalClose={handleTaskEditorClose}\n      classes={{ content: 'task-editor', button: 'task-editor__btn--close' }}\n      size=\"lg\"\n      id=\"taskEditor\"\n      onOutsideClick={onOutsideClick}\n    >\n      {children}\n    </Modal>\n  ) : (\n    <TaskEditorPane onClose={handleTaskEditorClose}>{children}</TaskEditorPane>\n  );\n};\n\n/*\n  TODO: Break up logic in child components\n  */\n\nclass TaskEditor extends Component {\n  state = {\n    name: this.props.name,\n    isDatePickerActive: false,\n    isMemberSearchActive: false,\n    prevProps: {\n      name: this.props.name\n    },\n    viewportWidth: null\n  };\n\n  componentDidMount() {\n    const { layout } = this.props;\n    if (layout !== 'board') return;\n    this.setViewportWidth();\n    this.handleResize = debounce(200, this.setViewportWidth);\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  componentWillUnmount() {\n    if (this.handleResize) {\n      window.removeEventListener('resize', this.handleResize);\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.name !== state.prevProps.name) {\n      return {\n        name: props.name,\n        prevProps: {\n          name: props.name\n        }\n      };\n    }\n    return null;\n  }\n\n  setViewportWidth = () => {\n    this.setState({\n      viewportWidth: window.innerWidth\n    });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  deleteTask = () => {\n    const { taskId, listId, handleTaskEditorClose, deleteTask } = this.props;\n    deleteTask({ taskId, listId });\n    handleTaskEditorClose();\n  };\n\n  onBlur = e => {\n    const taskKey = e.target.name;\n    const { [taskKey]: currentValue, taskId, firebase } = this.props;\n    const { [taskKey]: updatedValue } = this.state;\n\n    // When field loses focus, update task if change is detected\n\n    if (updatedValue !== currentValue) {\n      firebase.updateDoc(['tasks', taskId], {\n        [taskKey]: updatedValue\n      });\n      console.log('Updated task!');\n    }\n  };\n\n  resetForm = key => {\n    this.setState({\n      [key]: ''\n    });\n  };\n\n  handleMoreActions = e => {\n    if (!e.target.matches('a')) return;\n    const { action } = e.target.dataset;\n    switch (action) {\n      case 'delete':\n        this.deleteTask();\n        break;\n    }\n    e.preventDefault(); // prevents page reload\n  };\n\n  assignMember = (userId, e) => {\n    const {\n      taskId,\n      projectId,\n      projectName,\n      assignedTo,\n      firebase,\n      folders,\n      dueDate\n    } = this.props;\n\n    if (assignedTo.includes(userId)) {\n      if (!projectId) return;\n      const folderId = folders[userId];\n      firebase.removeAssignee({ taskId, projectId, userId, folderId, dueDate });\n    } else {\n      firebase.addAssignee({ taskId, projectId, projectName, userId, dueDate });\n    }\n  };\n\n  setDueDate = newDueDate => {\n    const { firebase, taskId, assignedTo, dueDate } = this.props;\n    const prevDueDate = dueDate ? new Date(dueDate.toDate()) : null;\n    firebase.setTaskDueDate({ taskId, prevDueDate, newDueDate, assignedTo });\n  };\n\n  toggleDatePicker = () => {\n    this.setState(prevState => ({\n      isDatePickerActive: !prevState.isDatePickerActive\n    }));\n  };\n\n  toggleCompleted = e => {\n    const { taskId, isCompleted, firebase } = this.props;\n    firebase.updateDoc(['tasks', taskId], {\n      isCompleted: !isCompleted,\n      completedAt: !isCompleted ? firebase.getTimestamp() : null\n    });\n  };\n\n  moveToList = e => {\n    e.stopPropagation();\n    const { firebase, taskId, listsById, listId: origListId } = this.props;\n    const newListId = e.target.value;\n    const newListName = e.target.dataset.label;\n    const updatedTaskIds = [...listsById[newListId].taskIds, taskId];\n    firebase.moveTaskToList({\n      taskId,\n      origListId,\n      newListId,\n      updatedTaskIds,\n      newListName\n    });\n  };\n\n  toggleMemberSearch = () => {\n    this.setState(prevState => ({\n      isMemberSearchActive: !prevState.isMemberSearchActive\n    }));\n  };\n\n  hideMemberSearch = e => {\n    if (e.target.matches('.task-editor__btn--add-member')) return;\n    this.setState({\n      isMemberSearchActive: false\n    });\n  };\n\n  onOutsideClick = e => {\n    const { handleTaskEditorClose } = this.props;\n    if (e.target.matches('.member-search__item') || e.target.matches('.tags-input__item')) return;\n    handleTaskEditorClose();\n  };\n\n  render() {\n    const {\n      handleTaskEditorClose,\n      taskId,\n      commentIds,\n      assignedTo,\n      taskTags,\n      mergedTags,\n      dueDate,\n      subtaskIds,\n      projectId,\n      completedSubtasks,\n      layout,\n      listId,\n      isCompleted,\n      notes\n    } = this.props;\n    const { name, isDatePickerActive, viewportWidth } = this.state;\n    const hasSubtasks = subtaskIds && subtaskIds.length > 0;\n    const hasComments = commentIds && commentIds.length > 0;\n    const taskDueDate = dueDate\n      ? getSimpleDate(dueDate.toDate())\n      : getSimpleDate(new Date());\n    const dueDateStr = dueDate\n      ? toDateString(dueDate.toDate(), {\n          useRelative: true,\n          format: { month: 'short', day: 'numeric' }\n        })\n      : null;\n    const isDueToday = dueDateStr === 'Today';\n    const isDueTmrw = dueDateStr === 'Tomorrow';\n    const isPastDue = dueDate && isPriorDate(dueDate.toDate());\n    return (\n      <TaskEditorWrapper\n        handleTaskEditorClose={handleTaskEditorClose}\n        onOutsideClick={this.onOutsideClick}\n        layout={layout}\n      >\n        <Toolbar className=\"task-editor__toolbar\">\n          <Button\n            type=\"button\"\n            onClick={this.toggleCompleted}\n            size=\"md\"\n            variant={isCompleted ? 'contained' : 'outlined'}\n            color=\"success\"\n            className=\"task-editor__btn--toggle-completed\"\n          >\n            <Icon name=\"check\" />\n            {isCompleted ? 'Completed' : 'Mark Completed'}\n          </Button>\n          <TaskEditorMoreActions onMenuClick={this.handleMoreActions} />\n        </Toolbar>\n        <div className=\"task-editor__wrapper\">\n          <form name=\"editTaskForm\" className=\"task-editor__edit-task-form\">\n            <Textarea\n              className=\"task-editor__textarea--title\"\n              name=\"name\"\n              value={name}\n              onChange={this.onChange}\n              required\n              onBlur={this.onBlur}\n            />\n            {projectId && (\n              <TaskEditorSection size=\"sm\">\n                <div className=\"task-editor__project-name\">\n                  <ProjectBadge\n                    projectId={projectId}\n                    size=\"md\"\n                    variant=\"icon\"\n                    classes={{\n                      badge: 'task-editor__project-badge',\n                      icon: 'task-editor__project-badge-icon'\n                    }}\n                  />\n                </div>\n                <div className=\"task-editor__list-name\">\n                  <ProjectListDropdown\n                    classes={{\n                      button: 'task-editor__project-list-dropdown-btn--toggle',\n                      menu: 'task-editor__project-list-dropdown-menu'\n                    }}\n                    projectId={projectId}\n                    selectedList={listId}\n                    onChange={this.moveToList}\n                  />\n                </div>\n              </TaskEditorSection>\n            )}\n            <TaskEditorSection>\n              <Button\n                onClick={this.toggleDatePicker}\n                type=\"button\"\n                className={`task-editor__btn--due-date ${\n                  isDatePickerActive ? 'is-active' : ''\n                }`}\n              >\n                <span className=\"task-editor__due-date-icon\">\n                  <Icon name=\"calendar\" />\n                </span>\n                <span className=\"task-editor__due-date-wrapper\">\n                  {!dueDate ? (\n                    <span className=\"task-editor__no-due-date\">\n                      Set due date\n                    </span>\n                  ) : (\n                    <>\n                      <span className=\"task-editor__section-title--sm\">\n                        Due Date\n                      </span>\n                      <span\n                        className={`task-editor__due-date ${\n                          isDueToday\n                            ? 'is-due-today'\n                            : isDueTmrw\n                            ? 'is-due-tmrw'\n                            : isPastDue\n                            ? 'is-past-due'\n                            : ''\n                        }`}\n                      >\n                        {dueDateStr}\n                      </span>\n                    </>\n                  )}\n                </span>\n              </Button>\n              <DatePicker\n                innerRef={el => (this.datePickerEl = el)}\n                onClose={this.toggleDatePicker}\n                selectedDate={dueDate ? taskDueDate : null}\n                currentMonth={taskDueDate.month}\n                currentYear={taskDueDate.year}\n                selectDate={this.setDueDate}\n                isActive={isDatePickerActive}\n              />\n            </TaskEditorSection>\n            <TaskEditorSection>\n              <div className=\"task-editor__section-icon\">\n                <Icon name=\"user\" />\n              </div>\n              <div className=\"task-editor__members\">\n                <MemberAssigner\n                  classes={{ memberAssigner: 'task-editor__member-assigner' }}\n                  placeholder=\"Assign or remove member\"\n                  memberIds={assignedTo}\n                  onSelectMember={this.assignMember}\n                  memberSearchIsDisabled={!projectId}\n                />\n              </div>\n            </TaskEditorSection>\n            <TaskEditorSection>\n              <div className=\"task-editor__section-icon\">\n                <Icon name=\"tag\" />\n              </div>\n              <TagsInput\n                taskId={taskId}\n                projectId={projectId}\n                tagSuggestions={mergedTags}\n                assignedTags={taskTags}\n              />\n            </TaskEditorSection>\n            <TaskEditorSection>\n              <div className=\"task-editor__section-icon\">\n                <Icon name=\"edit-3\" />\n              </div>\n              <NotesEditor\n                placeholder=\"Add a description\"\n                type=\"task\"\n                key={`notes--${taskId}`}\n                id={taskId}\n                value={notes}\n                classes={{\n                  editor:\n                    'task-editor__textarea task-editor__textarea--description'\n                }}\n              />\n            </TaskEditorSection>\n          </form>\n          <TaskEditorSection>\n            <div className=\"task-editor__section-header\">\n              <div className=\"task-editor__section-icon\">\n                <Icon name=\"check-circle\" />\n              </div>\n              <h3 className=\"task-editor__section-title\">\n                {hasSubtasks && (\n                  <span className=\"task-editor__section-detail\">\n                    {completedSubtasks.length}/{subtaskIds.length}\n                  </span>\n                )}\n                Subtasks\n              </h3>\n              <hr className=\"task-editor__hr\" />\n            </div>\n            <div className=\"task-editor__subtasks-container\">\n              <Subtasks\n                taskId={taskId}\n                subtaskIds={subtaskIds}\n                projectId={projectId}\n                usePortal={layout === 'board' && viewportWidth >= 576}\n              />\n              <SubtaskComposer\n                taskId={taskId}\n                projectId={projectId}\n                classes={{\n                  composer: 'task-editor__subtask-composer',\n                  iconWrapper: 'task-editor__subtask-composer-icon-wrapper',\n                  form: 'task-editor__new-subtask-form',\n                  textarea: 'task-editor__textarea--new-subtask',\n                  button: 'task-editor__btn--add-subtask'\n                }}\n              />\n            </div>\n          </TaskEditorSection>\n          <TaskEditorSection className=\"comments\">\n            <div className=\"task-editor__section-header\">\n              <div className=\"task-editor__section-icon\">\n                <Icon name=\"message-circle\" />\n              </div>\n              <h3 className=\"task-editor__section-title\">\n                {hasComments && (\n                  <span className=\"task-editor__section-detail\">\n                    {commentIds.length}\n                  </span>\n                )}\n                {hasComments && commentIds.length === 1\n                  ? 'Comment'\n                  : 'Comments'}\n              </h3>\n              <hr className=\"task-editor__hr\" />\n            </div>\n\n            {hasComments && (\n              <div className=\"task-editor__comments\">\n                <Comments taskId={taskId} commentIds={commentIds} />\n              </div>\n            )}\n            <CommentComposer\n              key={`comment-composer--${taskId}`}\n              id={`comment-composer--${taskId}`}\n              taskId={taskId}\n              projectId={projectId}\n              classes={{\n                avatar: 'task-editor__avatar',\n                avatarPlaceholder: 'task-editor__avatar-placeholder',\n                composer: 'task-editor__comment-composer',\n                button: 'task-editor__btn--submit-comment'\n              }}\n            />\n          </TaskEditorSection>\n        </div>\n      </TaskEditorWrapper>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentUser: currentUserSelectors.getCurrentUser(state),\n    taskTags: taskSelectors.getTaskTags(state, ownProps.taskId),\n    mergedTags: currentUserSelectors.getMergedProjectTags(\n      state,\n      ownProps.projectId\n    ),\n    completedSubtasks: subtaskSelectors.getCompletedSubtasks(\n      state,\n      ownProps.subtaskIds\n    ),\n    listsById: listSelectors.getListsById(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteTask: ({ taskId, listId }) =>\n      dispatch(taskActions.deleteTask({ taskId, listId }))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TaskEditor)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { projectActions, projectSelectors } from '../../ducks/projects';\nimport {\n  selectTask as selectTaskAction,\n  getSelectedTask,\n  getSelectedTaskId\n} from '../../ducks/selectedTask';\nimport {\n  selectProject as selectProjectAction,\n  getSelectedProjectId\n} from '../../ducks/selectedProject';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { subtaskActions } from '../../ducks/subtasks';\nimport Project from './Project';\nimport { List } from '../List';\nimport { TaskEditor } from '../TaskEditor';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport './Project.scss';\n\nclass ProjectContainer extends Component {\n  async componentDidMount() {\n    const {\n      projectId,\n      selectProject,\n      selectedProjectId,\n      syncProjectLists,\n      syncProjectSubtasks\n    } = this.props;\n\n    if (selectedProjectId !== projectId) {\n      selectProject(projectId);\n    }\n\n    await Promise.all([\n      syncProjectLists(projectId),\n      syncProjectSubtasks(projectId)\n    ]).then(listeners => {\n      this.unsubscribe = listeners;\n    });\n    console.log('mounted');\n  }\n\n  componentWillUnmount() {\n    const { selectProject, selectTask, selectedTaskId } = this.props;\n    selectProject(null);\n    if (selectedTaskId) {\n      selectTask(null);\n    }\n    this.unsubscribe.forEach(func => func());\n  }\n\n  onDragEnd = ({ destination, draggableId, source, type }) => {\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    const { firebase, listsById, tempProjectSettings, state } = this.props;\n    const { view, sortBy } = tempProjectSettings.tasks;\n    if (type === droppableTypes.TASK) {\n      const { droppableId: newListId, index: newIndex } = destination;\n      const { droppableId: origListId, index: prevIndex } = source;\n      const isMovedWithinList = origListId === newListId;\n      const taskIdsByView = taskSelectors.getTaskIdsByViewFilter(state, {\n        listId: newListId\n      });\n      const updatedTaskIds = taskSelectors.getSortedTaskIds(\n        state,\n        [...taskIdsByView[view]],\n        sortBy\n      );\n      if (isMovedWithinList) {\n        updatedTaskIds.splice(prevIndex, 1);\n        updatedTaskIds.splice(newIndex, 0, draggableId);\n        firebase.updateDoc(['lists', origListId], {\n          taskIds:\n            view === 'all'\n              ? updatedTaskIds\n              : view === 'active'\n              ? [...taskIdsByView.completed, ...updatedTaskIds]\n              : [...updatedTaskIds, ...taskIdsByView.active]\n        });\n      } else {\n        const newListName = listsById[destination.droppableId].name;\n        updatedTaskIds.splice(newIndex, 0, draggableId);\n        firebase.moveTaskToList({\n          taskId: draggableId,\n          origListId: source.droppableId,\n          newListId: destination.droppableId,\n          updatedTaskIds:\n            view === 'all'\n              ? updatedTaskIds\n              : view === 'active'\n              ? [...taskIdsByView.completed, ...updatedTaskIds]\n              : [...updatedTaskIds, ...taskIdsByView.active],\n          newListName\n        });\n      }\n    }\n\n    if (type === droppableTypes.LIST) {\n      const { project, projectId } = this.props;\n      const updatedListIds = [...project.listIds];\n      updatedListIds.splice(source.index, 1);\n      updatedListIds.splice(destination.index, 0, draggableId);\n      firebase.updateDoc(['projects', projectId], {\n        listIds: updatedListIds\n      });\n    }\n  };\n\n  closeTaskEditor = () => {\n    const { selectTask } = this.props;\n    selectTask(null);\n  };\n\n\n  render() {\n    const {\n      selectedTask,\n      projectId,\n      userId,\n      selectedTaskId,\n      isLoaded,\n      project,\n      tempProjectSettings\n    } = this.props;\n    const { name, listIds } = project;\n    const { layout } = tempProjectSettings;\n    const isTaskEditorOpen = !!selectedTaskId;\n    if (!isLoaded.tasks || !isLoaded.subtasks || !isLoaded.lists) return null;\n    return (\n      <main\n        className={`project-container project-container--${layout} ${\n          isTaskEditorOpen ? 'show-task-editor' : ''\n        }`}\n      >\n        <div className=\"project__wrapper\">\n          <DragDropContext\n            onDragEnd={this.onDragEnd}\n            onDragStart={this.onDragStart}\n          >\n            <Project {...project}>\n              {listIds.map((listId, i) => {\n                return (\n                  <List\n                    viewFilter={tempProjectSettings.tasks.view}\n                    sortBy={tempProjectSettings.tasks.sortBy}\n                    listId={listId}\n                    key={listId}\n                    index={i}\n                    projectId={projectId}\n                    projectName={name}\n                    layout={layout}\n                    isRestricted={false}\n                  />\n                );\n              })}\n            </Project>\n          </DragDropContext>\n          {isTaskEditorOpen && (\n            <TaskEditor\n              {...selectedTask}\n              handleTaskEditorClose={this.closeTaskEditor}\n              userId={userId}\n              layout={layout}\n            />\n          )}\n        </div>\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    state,\n    selectedProjectId: getSelectedProjectId(state),\n    selectedTaskId: getSelectedTaskId(state),\n    selectedTask: getSelectedTask(state),\n    listsById: listSelectors.getListsById(state),\n    project: projectSelectors.getProject(state, ownProps.projectId),\n    isLoaded: projectSelectors.getProjectLoadedState(state, ownProps.projectId),\n    tempProjectSettings: projectSelectors.getTempProjectSettings(\n      state,\n      ownProps.projectId\n    )\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectProject: projectId => dispatch(selectProjectAction(projectId)),\n    selectTask: taskId => dispatch(selectTaskAction(taskId)),\n    syncProjectLists: projectId =>\n      dispatch(listActions.syncProjectLists(projectId)),\n    syncProjectTasks: projectId =>\n      dispatch(taskActions.syncProjectTasks(projectId)),\n    syncProjectSubtasks: projectId =>\n      dispatch(subtaskActions.syncProjectSubtasks(projectId)),\n    syncProject: projectId => dispatch(projectActions.syncProject(projectId)),\n    setTempProjectSettings: ({ projectId, view, sortBy }) =>\n      dispatch(\n        projectActions.setTempProjectSettings({ projectId, view, sortBy })\n      )\n  };\n};\n\nconst condition = currentUser => !!currentUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ProjectContainer)\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst DashboardPanel = ({ className, name, children, size, link }) => (\n  <section className={`dashboard-panel ${className ? `dashboard-panel--${className}` : ''} dashboard-panel--${size}`}>\n    <header className=\"dashboard-panel__header\">\n      <h2 className=\"dashboard-panel__name\">\n        {name}\n      </h2>\n      {link && (\n        <Link to={link.path} className=\"dashboard-panel__link\">\n          {link.text}\n        </Link>\n      )}\n    </header>\n    <div className=\"dashboard-panel__content\">{children}</div>\n  </section>\n);\n\nDashboardPanel.defaultProps = {\n  size: 'lg',\n  link: null,\n  className: ''\n};\n\nexport default DashboardPanel;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport DashboardPanel from './DashboardPanel';\nimport { Task } from '../Task';\nimport { currentUserSelectors } from '../../ducks/currentUser';\n\nconst TasksDueSoon = ({ tasksDueSoon, currentUser }) => (\n  <DashboardPanel\n    className=\"tasks-due-soon\"\n    size=\"md\"\n    name=\"Tasks Due Soon\"\n    link={{ path: `/0/${currentUser.userId}/tasks`, text: 'View all tasks' }}\n  >\n    {tasksDueSoon.length > 0 ? (\n      <ul className=\"dashboard__tasks\">\n        {tasksDueSoon.map((task, i) => (\n          <Task\n            className=\"dashboard__task\"\n            index={i}\n            key={task.taskId}\n            taskId={task.taskId}\n          />\n        ))}\n      </ul>\n    ) : (\n      <div className=\"dashboard__info--empty\">\n        No tasks due in the next <strong>7 days</strong>.\n      </div>\n    )}\n  </DashboardPanel>\n);\n\nconst mapStateToProps = state => {\n  return {\n    tasksDueSoon: currentUserSelectors.getTasksDueWithinDays(state, 7)\n  };\n};\n\nconst condition = currentUser => !!currentUser;\n\nexport default withAuthorization(condition)(\n  connect(mapStateToProps)(TasksDueSoon)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Timestamp } from '../Timestamp';\nimport { selectTask as selectTaskAction } from '../../ducks/selectedTask';\nimport './Notification.scss';\n\nclass Notification extends Component {\n  onClick = () => {\n    const { onTaskClick, location } = this.props;\n    switch (location.type) {\n      case 'task': {\n        return onTaskClick(location.taskId);\n      }\n      default: {\n        return () => null;\n      }\n    }\n  };\n\n  getMessage = () => {\n    const { event, source } = this.props;\n    switch (event.type) {\n      case 'mention': {\n        return (\n          <>\n            mentioned you in a\n            <a\n              href=\"#\"\n              className=\"notification__link notification__link--task\"\n              onClick={this.onClick}\n            >\n              {source.type}\n            </a>\n            .\n          </>\n        );\n      }\n      default: {\n        return '';\n      }\n    }\n  };\n\n  render() {\n    const { source, event } = this.props;\n    const { user } = source;\n    const { publishedAt } = event;\n\n    return (\n      <li className=\"notification\">\n        {user.userId && (\n          <Link\n            className=\"notification__link notification__link--user-profile\"\n            to={`/0/${user.userId}/profile`}\n          >\n            {user.name}\n          </Link>\n        )}\n        {this.getMessage()}\n        {publishedAt && (\n          <Timestamp\n            date={publishedAt.toDate()}\n            className=\"notification__timestamp\"\n          />\n        )}\n      </li>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectTask: taskId => dispatch(selectTaskAction(taskId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Notification);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport DashboardPanel from './DashboardPanel';\nimport { Notification } from '../Notification';\nimport {\n  currentUserActions,\n  currentUserSelectors\n} from '../../ducks/currentUser';\nimport './Notifications.scss';\n\nclass Notifications extends Component {\n  state = {\n    isLoading: true\n  };\n\n  async componentDidMount() {\n    const { currentUser, syncNotifications } = this.props;\n    const { userId } = currentUser;\n\n    this.unsubscribe = await syncNotifications(userId);\n    this.setState({\n      isLoading: false\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    const { isLoading } = this.state;\n    const { notifications, onTaskClick } = this.props;\n    if (isLoading) return null;\n    return (\n      <DashboardPanel className=\"notifications\" name=\"Notifications\" size=\"sm\">\n        {notifications.length > 0 ? (\n          <ul className=\"notifications__list\">\n            {notifications.map(notification => (\n              <Notification\n                key={notification.notificationId}\n                onTaskClick={\n                  notification.source.type === 'comment' ? onTaskClick : null\n                }\n                {...notification}\n              />\n            ))}\n          </ul>\n        ) : (\n          <div className=\"dashboard__info--empty\">\n            You have no notifications.\n          </div>\n        )}\n      </DashboardPanel>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    notifications: currentUserSelectors.getNotificationsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    syncNotifications: userId =>\n      dispatch(currentUserActions.syncNotifications(userId))\n  };\n};\n\nconst condition = currentUser => !!currentUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Notifications)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport {\n  selectTask as selectTaskAction,\n  getSelectedTaskId\n} from '../../ducks/selectedTask';\nimport { taskSelectors } from '../../ducks/tasks';\nimport { ProjectGrid } from '../ProjectGrid';\nimport TasksDueSoon from './TasksDueSoon';\nimport Notifications from './Notifications';\nimport DashboardPanel from './DashboardPanel';\nimport OverdueTasks from './OverdueTasks';\nimport { TaskEditor } from '../TaskEditor';\nimport { Main } from '../Main';\nimport './Dashboard.scss';\n\nclass Dashboard extends Component {\n  closeTaskEditor = () => {\n    const { selectTask } = this.props;\n    selectTask(null);\n  };\n\n  handleTaskClick = taskId => {\n    const { selectTask } = this.props;\n    selectTask(taskId);\n  };\n\n  render() {\n    const {\n      tasksById,\n      toggleProjectComposer,\n      currentUser,\n      selectedTaskId\n    } = this.props;\n    const { userId } = currentUser;\n    const isTaskEditorOpen = !!selectedTaskId;\n    return (\n      <Main\n        title=\"Home\"\n        classes={{ main: 'dashboard', title: 'dashboard__header' }}\n      >\n        <TasksDueSoon />\n        <Notifications onTaskClick={this.handleTaskClick} />\n        <DashboardPanel className=\"projects\" name=\"Projects\" icon=\"grid\">\n          <ProjectGrid\n            className=\"dashboard__project-grid\"\n            openProjectComposer={toggleProjectComposer}\n          />\n        </DashboardPanel>\n        {isTaskEditorOpen && (\n          <TaskEditor\n            {...tasksById[selectedTaskId]}\n            handleTaskEditorClose={this.closeTaskEditor}\n            userId={userId}\n            layout=\"board\"\n          />\n        )}\n      </Main>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    selectedTaskId: getSelectedTaskId(state),\n    tasksById: taskSelectors.getTasksById(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectTask: taskId => dispatch(selectTaskAction(taskId))\n  };\n};\n\nconst condition = currentUser => !!currentUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Dashboard)\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport DashboardPanel from './DashboardPanel';\nimport { Task } from '../Task';\nimport { currentUserSelectors } from '../../ducks/currentUser';\n\nconst OverdueTasks = ({ overdueTasks, currentUser }) => (\n  <DashboardPanel\n    className=\"overdue-tasks\"\n    size=\"md\"\n    name=\"Overdue Tasks\"\n    link={{ path: `/0/${currentUser.userId}/tasks`, text: 'View all tasks' }}\n  >\n    {overdueTasks.map((task, i) => (\n      <Task\n        className=\"dashboard__task\"\n        index={i}\n        key={task.taskId}\n        taskId={task.taskId}\n      />\n    ))}\n  </DashboardPanel>\n);\n\nconst mapStateToProps = state => {\n  return {\n    overdueTasks: currentUserSelectors.getOverdueTasks(state)\n  };\n};\n\nconst condition = currentUser => !!currentUser;\n\nexport default withAuthorization(condition)(\n  connect(mapStateToProps)(OverdueTasks)\n);\n","import React from 'react';\n\nconst ExpansionPanelHeader = ({ children, className, onClick }) => {\n  return (\n    <header\n      className={`expansion-panel__header ${className}`}\n      role=\"button\"\n      onClick={onClick}\n      tabIndex={0}\n      onKeyDown={onClick}\n      onDragOver={onClick}\n    >\n      {children}\n    </header>\n  );\n};\n\nExpansionPanelHeader.defaultProps = {\n  className: ''\n};\n\nexport default ExpansionPanelHeader;\n","import React from 'react';\n\nconst ExpansionPanelContent = ({ className, children }) => {\n  return <div className={className}>{children}</div>;\n};\n\nExpansionPanelContent.defaultProps = {\n  className: ''\n};\n\nexport default ExpansionPanelContent;\n","import React, { Component } from 'react';\nimport ExpansionPanelHeader from './ExpansionPanelHeader';\nimport ExpansionPanelContent from './ExpansionPanelContent';\nimport * as keys from '../../constants/keys';\n\nexport default class ExpansionPanel extends Component {\n  static defaultProps = {\n    classes: {\n      panel: '',\n      header: '',\n      content: ''\n    },\n    isExpanded: null,\n    onChange: null,\n    id: null,\n    innerRef: null\n  };\n\n  state = {\n    isExpanded: false\n  };\n\n  toggleContent = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { onToggle, id } = this.props;\n    if (!onToggle) {\n      this.setState(prevProps => ({\n        isExpanded: !prevProps.isExpanded\n      }));\n    } else {\n      onToggle(e, id);\n    }\n  };\n\n  onDragOver = e => {\n    e.preventDefault();\n    console.log(e.target);\n  };\n\n  render() {\n    const {\n      classes,\n      header,\n      children,\n      innerRef,\n      isExpanded: propsIsExpanded,\n      ...rest\n    } = this.props;\n    const isExpanded =\n      propsIsExpanded !== null ? propsIsExpanded : this.state.isExpanded;\n\n    return (\n      <section\n        className={`expansion-panel ${classes.panel || ''}`}\n        aria-expanded={isExpanded}\n        ref={innerRef}\n        {...rest}\n        onDragOver={this.onDragOver}\n      >\n        <ExpansionPanelHeader\n          onClick={this.toggleContent}\n          className={classes.header || header.className || ''}\n        >\n          {header.children}\n        </ExpansionPanelHeader>\n        {isExpanded && (\n          <ExpansionPanelContent className={classes.content || ''}>\n            {children}\n          </ExpansionPanelContent>\n        )}\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport { TaskComposer } from '../TaskComposer';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\nimport { Input } from '../Input';\nimport { Tasks } from '../Tasks';\nimport { ExpansionPanel } from '../ExpansionPanel';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport './Folder.scss';\n\nclass Folder extends Component {\n  static defaultProps = {\n    userPermissions: {\n      enableNameChange: false,\n      enableTaskAdd: true,\n      enableDragnDrop: true\n    }\n  };\n\n  state = {\n    name: this.props.name,\n    isExpanded: this.props.taskIds.length > 0,\n    prevProps: {\n      taskIds: this.props.taskIds\n    }\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    if (state.prevProps.taskIds.length === 0 && props.taskIds.length > 0 && !state.isExpanded) {\n      return {\n        isExpanded: true,\n        prevProps: {\n          ...state.prevProps,\n          taskIds: props.taskIds\n        }\n      };\n    }\n    return null;\n  }\n\n  toggleFolder = e => {\n    if (e.target.matches('.folder__btn--more-actions')) return;\n    this.setState(prevState => ({\n      isExpanded: !prevState.isExpanded\n    }));\n  };\n\n  render() {\n    const {\n      taskIds,\n      projectId,\n      projectName,\n      folderId,\n      index,\n      dueDate,\n      userPermissions,\n      tempTaskSettings\n    } = this.props;\n    const { name, isExpanded } = this.state;\n    return (\n      <Draggable\n        draggableId={folderId || projectId || `${dueDate}`}\n        index={index}\n        isDragDisabled={!userPermissions.enableNameChange}\n      >\n        {(provided, snapshot) => (\n          <>\n            <ExpansionPanel\n              isExpanded={isExpanded}\n              onToggle={this.toggleFolder}\n              classes={{ panel: 'folder', content: 'folder__content' }}\n              innerRef={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              header={{\n                className: 'folder__header',\n                children: (\n                  <>\n                    <Button\n                      type=\"button\"\n                      size=\"sm\"\n                      className={`folder__btn--toggle ${\n                        isExpanded ? 'is-expanded' : ''\n                      }`}\n                      iconOnly\n                    >\n                      <Icon name=\"chevron-right\" />\n                    </Button>\n                    <Input\n                      className=\"folder__input--title\"\n                      name=\"name\"\n                      type=\"text\"\n                      value={name}\n                      onChange={this.onChange}\n                      required={userPermissions.enableNameChange}\n                      hideLabel\n                      isReadOnly={!userPermissions.enableNameChange}\n                      onBlur={this.onBlur}\n                      onClick={this.toggleFolder}\n                    />\n                    {/*\n                    <PopoverWrapper\n                      classes={{\n                        wrapper: 'folder__popover-wrapper',\n                        popover: 'folder__popover'\n                      }}\n                      align={{ inner: 'right' }}\n                      buttonProps={{\n                        size: 'md',\n                        iconOnly: true,\n                        className: 'folder__btn--more-actions',\n                        children: <Icon name=\"more-vertical\" />\n                      }}\n                    >\n                      <Menu>\n                        <MenuItem />\n                      </Menu>\n                    </PopoverWrapper>\n                    */}\n                  </>\n                )\n              }}\n            >\n              <div className=\"folder__tasks\">\n                <Tasks\n                  taskIds={taskIds}\n                  listId={null}\n                  folderId={folderId}\n                  projectId={projectId}\n                  dueDate={dueDate}\n                  isDragDisabled={!userPermissions.enableDragNDrop}\n                  dropType={!userPermissions.enableTaskAdd ? (projectId || folderId || dueDate) : droppableTypes.TASK }\n                  layout=\"list\"\n                />\n              </div>\n              {userPermissions.enableTaskAdd && (\n                <TaskComposer\n                  listId={null}\n                  listName={null}\n                  dueDate={dueDate}\n                  projectId={projectId}\n                  projectName={projectName}\n                  folderId={folderId}\n                />\n              )}\n            </ExpansionPanel>\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    tempTaskSettings: currentUserSelectors.getTempTaskSettings(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Folder);\n","import React from 'react';\nimport { PopoverWrapper } from '../Popover';\nimport { Icon } from '../Icon';\nimport { Radio } from '../Radio';\nimport { Button } from '../Button';\nimport { Menu, MenuItem } from '../Menu';\nimport './TaskSettings.scss';\n\nconst TaskSettings = ({\n  onToggle,\n  onClose,\n  onSave,\n  isVisible,\n  filters,\n  sortRule,\n  classes\n}) => (\n  <PopoverWrapper\n    isActive={isVisible}\n    onOutsideClick={onClose}\n    classes={{\n      wrapper: `task-settings__wrapper ${classes.wrapper || ''}`,\n      popover: `task-settings ${classes.popover || ''}`\n    }}\n    align={{ inner: 'right' }}\n    buttonProps={{\n      size: 'sm',\n      iconOnly: true,\n      className: `task-settings__btn ${classes.button || ''}`,\n      children: <Icon name=\"sliders\" />,\n      onClick: onToggle\n    }}\n  >\n    <Button\n      type=\"button\"\n      className=\"task-settings__btn--close\"\n      size=\"sm\"\n      onClick={onClose}\n      iconOnly\n    >\n      <Icon name=\"x\" />\n    </Button>\n    <Menu className={classes.menu || ''}>\n      {filters &&\n        filters.map(filter => (\n          <MenuItem className={classes.item || ''} key={filter.filter}>\n            {filter.filter}\n            <Menu className={`${filter.filter}__options`}>\n              {filter.options.map(filterOption => (\n                <MenuItem\n                  key={filterOption.value}\n                  className={`filter__option ${filter.filter}__option`}\n                >\n                  <Radio\n                    name={filter.filter}\n                    id={filterOption.value}\n                    value={filterOption.value}\n                    isChecked={filterOption.value === filter.value}\n                    label={filterOption.name}\n                    onChange={filter.onChange}\n                    classes={{\n                      radio: `filter__radio ${filter.filter}__radio`,\n                      label: `filter__label ${filter.filter}__label`\n                    }}\n                  />\n                </MenuItem>\n              ))}\n            </Menu>\n          </MenuItem>\n        ))}\n      {sortRule && (\n        <MenuItem className={classes.item || ''}>\n          Sort by\n          <PopoverWrapper\n            isActive={sortRule.isDropdownVisible}\n            onOutsideClick={sortRule.hideDropdown}\n            classes={{\n              wrapper: 'sort-rule__dropdown-wrapper',\n              popover: 'sort-rule__dropdown'\n            }}\n            buttonProps={{\n              className: `sort-rule__btn-dropdown ${\n                sortRule.isDropdownActive ? 'is-active' : ''\n              }`,\n              size: 'sm',\n              children: (\n                <>\n                  {\n                    sortRule.options.find(\n                      option => option.value === sortRule.value\n                    ).name\n                  }\n                  <Icon name=\"chevron-down\" />\n                </>\n              ),\n              onClick: sortRule.toggleDropdown\n            }}\n          >\n            <Menu className=\"sort-options\">\n              {sortRule.options &&\n                sortRule.options.map(sortOption => (\n                  <MenuItem\n                    className=\"sort-options__item\"\n                    key={sortOption.value}\n                  >\n                    <Radio\n                      name=\"sortBy\"\n                      id={sortOption.value}\n                      value={sortOption.value}\n                      isChecked={sortOption.value === sortRule.value}\n                      label={\n                        sortOption.value === sortRule.value ? (\n                          <>\n                            <Icon name=\"check\" />\n                            {sortOption.name}\n                          </>\n                        ) : (\n                          sortOption.name\n                        )\n                      }\n                      onChange={sortRule.onChange}\n                      classes={{\n                        radio: `sort-rule__radio`,\n                        label: `sort-rule__radio-label`\n                      }}\n                    />\n                  </MenuItem>\n                ))}\n            </Menu>\n          </PopoverWrapper>\n        </MenuItem>\n      )}\n    </Menu>\n    <Button\n      type=\"button\"\n      color=\"primary\"\n      variant=\"contained\"\n      className=\"task-settings__btn--save\"\n      size=\"sm\"\n      onClick={onSave}\n    >\n      Save View\n    </Button>\n  </PopoverWrapper>\n);\n\nTaskSettings.defaultProps = {\n  classes: {\n    wrapper: '',\n    popover: '',\n    button: '',\n    menu: '',\n    item: ''\n  },\n  filters: null,\n  sortRule: null\n};\n\nexport default TaskSettings;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport {\n  currentUserActions,\n  currentUserSelectors\n} from '../../ducks/currentUser';\nimport { taskSelectors } from '../../ducks/tasks';\nimport {\n  selectTask as selectTaskAction,\n  getSelectedTaskId,\n  getSelectedTask\n} from '../../ducks/selectedTask';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { Folder } from '../Folder';\nimport { Main } from '../Main';\nimport { TaskEditor } from '../TaskEditor';\nimport { TaskSettings } from '../TaskSettings';\nimport './UserTasks.scss';\n\nclass UserTasks extends Component {\n  state = {\n    isLoading: true,\n    isTaskSettingsMenuVisible: false,\n    isSortRuleDropdownVisible: false\n  };\n\n  async componentDidMount() {\n    const { currentUser, syncFolders } = this.props;\n    const { userId } = currentUser;\n    this.unsubscribe = await syncFolders(userId);\n    this.setState({\n      isLoading: false\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n    const { selectedTaskId, selectTask } = this.props;\n    if (selectedTaskId) {\n      selectTask(null);\n    }\n  }\n\n  closeTaskEditor = () => {\n    const { selectTask } = this.props;\n    selectTask(null);\n  };\n\n  handleTaskClick = taskId => {\n    const { selectTask } = this.props;\n    selectTask(taskId);\n  };\n\n  onDragEnd = ({ destination, draggableId, source, type }) => {\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    const { firebase, currentUser, state } = this.props;\n    const { userId, folderIds, tempSettings } = currentUser;\n    const { view, sortBy } = tempSettings.tasks;\n    switch (type) {\n      case droppableTypes.TASK: {\n        const { droppableId: origFolderId, index: origIndex } = source;\n        const { droppableId: newFolderId, index: newIndex } = destination;\n        const isMovedWithinFolder = origFolderId === newFolderId;\n        const taskIdsByView = taskSelectors.getTaskIdsByViewFilter(state, {\n          folderId: newFolderId\n        });\n        const updatedTaskIds = [...taskIdsByView[view]];\n\n        if (isMovedWithinFolder) {\n          updatedTaskIds.splice(origIndex, 1);\n          updatedTaskIds.splice(newIndex, 0, draggableId);\n          firebase.updateDoc(['users', userId, 'folders', newFolderId], {\n            taskIds:\n              view === 'all'\n                ? updatedTaskIds\n                : view === 'active'\n                ? [...taskIdsByView.completed, ...updatedTaskIds]\n                : [...updatedTaskIds, ...taskIdsByView.active]\n          });\n        } else {\n          updatedTaskIds.splice(newIndex, 0, draggableId);\n          firebase.moveTaskToFolder({\n            userId,\n            taskId: draggableId,\n            origFolderId,\n            newFolderId,\n            updatedTaskIds:\n              view === 'all'\n                ? updatedTaskIds\n                : view === 'active'\n                ? [...taskIdsByView.completed, ...updatedTaskIds]\n                : [...updatedTaskIds, ...taskIdsByView.active],\n            type: sortBy === 'folder' ? 'default' : sortBy\n          });\n        }\n        break;\n      }\n      case droppableTypes.FOLDER: {\n        const { reorderFolders } = this.props;\n        const updatedFolderIds = [...folderIds];\n        updatedFolderIds.splice(source.index, 1);\n        updatedFolderIds.splice(destination.index, 0, draggableId);\n        firebase.updateDoc(`users/${userId}`, {\n          folderIds: updatedFolderIds\n        });\n        reorderFolders(userId, updatedFolderIds);\n        break;\n      }\n      default: {\n        const { droppableId: origFolderId, index: origIndex } = source;\n        const { droppableId: newFolderId, index: newIndex } = destination;\n        const isMovedWithinFolder = origFolderId === newFolderId;\n        const taskIdsByView = taskSelectors.getTaskIdsByViewFilter(state, {\n          folderId: newFolderId\n        });\n        const updatedTaskIds = [...taskIdsByView[view]];\n        if (isMovedWithinFolder) {\n          updatedTaskIds.splice(origIndex, 1);\n          updatedTaskIds.splice(newIndex, 0, draggableId);\n          firebase.updateDoc(['users', userId, 'folders', newFolderId], {\n            taskIds:\n              view === 'all'\n                ? updatedTaskIds\n                : view === 'active'\n                ? [...taskIdsByView.completed, ...updatedTaskIds]\n                : [...updatedTaskIds, ...taskIdsByView.active]\n          });\n        }\n      }\n    }\n  };\n\n  saveTaskSettings = () => {\n    const { firebase, currentUser } = this.props;\n    const { userId, tempSettings } = currentUser;\n    const { view, sortBy } = tempSettings.tasks;\n    firebase.updateDoc(['users', userId], {\n      [`settings.tasks.view`]: view,\n      [`settings.tasks.sortBy`]: sortBy\n    });\n    this.closeTaskSettingsMenu();\n  };\n\n  setTempTaskSettings = e => {\n    const { setTempTaskSettings } = this.props;\n    const { name, value } = e.target;\n    setTempTaskSettings({\n      [name]: value\n    });\n    if (name === 'sortBy') {\n      this.hideSortRuleDropdown();\n    }\n  };\n\n  toggleTaskSettingsMenu = e => {\n    e.stopPropagation();\n    this.setState(prevState => ({\n      isTaskSettingsMenuVisible: !prevState.isTaskSettingsMenuVisible,\n      isSortRuleDropdownVisible:\n        prevState.isSortRuleDropdownVisible &&\n        prevState.isTaskSettingsMenuVisible\n          ? !prevState.isSortRuleDropdownVisible\n          : prevState.isSortRuleDropdownVisible\n    }));\n  };\n\n  closeTaskSettingsMenu = () => {\n    this.setState({\n      isTaskSettingsMenuVisible: false,\n      isSortRuleDropdownVisible: false\n    });\n  };\n\n  toggleSortRuleDropdown = () => {\n    this.setState(prevState => ({\n      isSortRuleDropdownVisible: !prevState.isSortRuleDropdownVisible\n    }));\n  };\n\n  hideSortRuleDropdown = () => {\n    this.setState({\n      isSortRuleDropdownVisible: false\n    });\n  };\n\n  render() {\n    const {\n      currentUser,\n      selectedTaskId,\n      selectedTask,\n      taskGroups\n    } = this.props;\n    const { userId, tempSettings } = currentUser;\n    const { view, sortBy } = tempSettings.tasks;\n    const {\n      isLoading,\n      isSortRuleDropdownVisible,\n      isTaskSettingsMenuVisible\n    } = this.state;\n\n    const isTaskEditorOpen = !!selectedTaskId;\n    if (isLoading) return null;\n    return (\n      <Main\n        title=\"My Tasks\"\n        classes={{\n          main: `user-tasks__container ${\n            isTaskEditorOpen ? 'show-task-editor' : ''\n          }`,\n          title: 'user-tasks__title'\n        }}\n      >\n        <div className=\"user-tasks__wrapper\">\n          <DragDropContext\n            onDragEnd={this.onDragEnd}\n            onDragStart={this.onDragStart}\n          >\n            <Droppable droppableId={userId} type={droppableTypes.FOLDER}>\n              {provided => (\n                <div\n                  className=\"user-tasks\"\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                >\n                  <TaskSettings\n                    isVisible={isTaskSettingsMenuVisible}\n                    onToggle={this.toggleTaskSettingsMenu}\n                    onClose={this.closeTaskSettingsMenu}\n                    onSave={this.saveTaskSettings}\n                    classes={{\n                      wrapper: 'user-tasks__settings-wrapper',\n                      popover: 'user-tasks__settings',\n                      item: 'user-tasks__settings-item'\n                    }}\n                    filters={[\n                      {\n                        filter: 'view',\n                        options: [\n                          { value: 'active', name: 'Active Tasks' },\n                          { value: 'completed', name: 'Completed Tasks' },\n                          { value: 'all', name: 'All Tasks' }\n                        ],\n                        value: view,\n                        onChange: this.setTempTaskSettings\n                      }\n                    ]}\n                    sortRule={{\n                      options: [\n                        { value: 'folder', name: 'Folder' },\n                        { value: 'project', name: 'Project' },\n                        { value: 'dueDate', name: 'Due Date' }\n                      ],\n                      value: sortBy,\n                      onChange: this.setTempTaskSettings,\n                      isDropdownVisible: isSortRuleDropdownVisible,\n                      toggleDropdown: this.toggleSortRuleDropdown,\n                      hideDropdown: this.hideSortRuleDropdown\n                    }}\n                  />\n                  {taskGroups.map((taskGroup, i) => (\n                    <Folder\n                      key={`${sortBy}-${taskGroup[sortBy] ||\n                        taskGroup[`${sortBy}Id`]}`}\n                      userId={userId}\n                      folderId={taskGroup.folderId}\n                      projectId={taskGroup.projectId}\n                      projectName={taskGroup.projectName}\n                      dueDate={taskGroup.dueDate}\n                      index={i}\n                      name={taskGroup.name}\n                      taskIds={taskGroup.taskIds}\n                      userPermissions={taskGroup.userPermissions}\n                    />\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n          {isTaskEditorOpen && (\n            <TaskEditor\n              {...selectedTask}\n              handleTaskEditorClose={this.closeTaskEditor}\n              userId={userId}\n              layout=\"list\"\n              key={selectedTaskId}\n            />\n          )}\n        </div>\n      </Main>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    state,\n    selectedTask: getSelectedTask(state),\n    selectedTaskId: getSelectedTaskId(state),\n    taskGroups: currentUserSelectors.getSortedFilteredTaskGroups(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    syncFolders: userId => dispatch(currentUserActions.syncFolders(userId)),\n    selectTask: taskId => dispatch(selectTaskAction(taskId)),\n    syncUserTasks: userId => dispatch(currentUserActions.syncUserTasks(userId)),\n    reorderFolders: (userId, folderIds) =>\n      dispatch(currentUserActions.reorderFolders(userId, folderIds)),\n    setTempTaskSettings: ({ view = null, sortBy = null }) =>\n      dispatch(currentUserActions.setTempTaskSettings({ view, sortBy }))\n  };\n};\n\nconst condition = currentUser => !!currentUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(UserTasks)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Main } from '../../components/Main';\nimport { userSelectors } from '../../ducks/users';\nimport './UserProfile.scss';\n\nclass UserProfile extends Component {\n  render() {\n    const { user } = this.props;\n    return <Main className=\"user-profile\" title={user.name} />;\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state, ownProps.userId)\n  };\n};\n\nexport default connect(mapStateToProps)(UserProfile);\n","import React, { Component } from 'react';\nimport { Button } from '../Button';\nimport { Input } from '../Input';\nimport { Icon } from '../Icon';\nimport './SearchBar.scss';\n\nexport default class SearchBar extends Component {\n\n  componentDidUpdate(prevProps) {\n    const { isExpanded } = this.props;\n    if (isExpanded && !prevProps.isExpanded) {\n      this.input.focus();\n    }\n    if (!isExpanded && prevProps.isExpanded) {\n      this.input.blur();\n    }\n  }\n\n  inputRef = ref => {\n    this.input = ref;\n    const { setInputRef } = this.props;\n    setInputRef(ref);\n  };\n\n  render() {\n    const {\n      value,\n      onClick,\n      onChange,\n      onKeyDown,\n      onSubmit,\n      isExpanded,\n      onFocus\n    } = this.props;\n    return (\n      <div\n        className={`search-bar${isExpanded ? ' is-expanded' : ''} clearfix`}\n      >\n        <form className=\"search-form\" onClick={onClick} onSubmit={onSubmit}>\n          <Input\n            onFocus={onFocus}\n            autoComplete=\"off\"\n            value={value}\n            name=\"search\"\n            className=\"search-form__input\"\n            type=\"text\"\n            innerRef={this.inputRef}\n            hideLabel\n            onChange={onChange}\n            onKeyDown={onKeyDown}\n          />\n          <Input\n            name=\"submit\"\n            className=\"search-form__submit\"\n            type=\"submit\"\n            hideLabel\n          />\n          <Button\n            type=\"button\"\n            className=\"search-form__btn\"\n            name=\"toggle\"\n            iconOnly\n          >\n            <Icon name=\"search\" />\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\n\nconst SearchSuggestions = ({\n  items,\n  onClick,\n  selectedItem,\n  category,\n  renderMatch\n}) => {\n  if (items.length === 0) return null;\n  return (\n    <li className=\"search-suggestions__item\">\n      <span className=\"search-suggestions__name\">{category}</span>\n      <ul className=\"search-suggestions__list\">\n        {items.map(item => {\n          const isSelected =\n            selectedItem === null\n              ? false\n              : (selectedItem.name === item.name &&\n                  (category === 'Projects' &&\n                    selectedItem.projectId === item.projectId)) ||\n                (category === 'Tags' && selectedItem.color === item.color) ||\n                (category === 'Tasks' && selectedItem.taskId === item.taskId);\n          return (\n            <li\n              key={item.taskId || item.projectId || item.name}\n              className={`search-suggestion ${isSelected ? 'is-selected' : ''}`}\n              onClick={onClick}\n              tabIndex={0}\n              data-id={item.taskId || item.projectId || item.name}\n              data-project-id={item.projectId || ''}\n            >\n              {renderMatch(item)}\n            </li>\n          );\n        })}\n      </ul>\n    </li>\n  );\n};\n\nSearchSuggestions.defaultProps = {\n  onClick: () => null\n};\n\nexport default SearchSuggestions;\n","import React from 'react';\n\nconst Mark = ({ className, children, style }) => (\n  <mark style={style} className={`mark ${className}`}>\n    {children}\n  </mark>\n);\n\nMark.defaultProps = {\n  className: '',\n  style: {\n    fontWeight: 700\n  }\n};\n\nexport default Mark;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { Icon } from '../Icon';\nimport * as keys from '../../constants/keys';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport SearchSuggestions from './SearchSuggestions';\nimport SearchBar from './SearchBar';\nimport { selectTask as selectTaskAction } from '../../ducks/selectedTask';\nimport { taskSelectors } from '../../ducks/tasks';\nimport { generateKey } from '../../utils/react';\nimport { withOutsideClick } from '../withOutsideClick';\nimport Mark from './Mark';\nimport './SearchTypeahead.scss';\n\nclass SearchTypeahead extends Component {\n  state = {\n    isActive: false,\n    isSearchBarExpanded: false,\n    query: '',\n    selectedItem: null,\n    selectedIndex: null,\n    filteredList: []\n  };\n\n  reset = e => {\n    this.setState({\n      isActive: false,\n      query: '',\n      isSearchBarExpanded: false,\n      selectedItem: null,\n      selectedIndex: null,\n      filteredList: []\n    });\n  };\n\n  onChange = e => {\n    const { value } = e.target;\n    const { selectedItem, filteredList } = this.state;\n    const { projects, tasks, tags } = this.props;\n    const newIndex = selectedItem\n      ? filteredList.findIndex(item => item.name === selectedItem.name)\n      : -1;\n    const persistSelectedItem = newIndex !== -1;\n    this.setState(() => ({\n      query: value,\n      selectedItem: persistSelectedItem ? selectedItem : null,\n      selectedIndex: persistSelectedItem ? newIndex : 0,\n      filteredList: [null, ...projects, ...tasks, ...tags].filter(item => {\n        return item === null || this.matchItem(item);\n      })\n    }));\n  };\n\n  onKeyDown = e => {\n    if (\n      e.key !== keys.TAB &&\n      e.key !== keys.ARROW_DOWN &&\n      e.key !== keys.ARROW_UP &&\n      e.key !== keys.ENTER\n    )\n      return;\n    e.preventDefault();\n\n    const { filteredList, selectedIndex, selectedItem } = this.state;\n    const nextIndex =\n      selectedIndex === filteredList.length - 1 ? 0 : selectedIndex + 1;\n    const prevIndex =\n      selectedIndex === 0 ? filteredList.length - 1 : selectedIndex - 1;\n\n    // eslint-disable-next-line default-case\n    switch (e.key) {\n      case keys.ARROW_DOWN:\n      // eslint-disable-next-line no-fallthrough\n      case keys.TAB: {\n        this.setState({\n          selectedItem: filteredList[nextIndex],\n          selectedIndex: nextIndex\n        });\n        break;\n      }\n      case keys.ARROW_UP: {\n        this.setState({\n          selectedItem: filteredList[prevIndex],\n          selectedIndex: prevIndex\n        });\n        break;\n      }\n      case keys.ENTER: {\n        if (selectedItem === null) {\n          this.handleSubmit(e);\n          this.input.blur();\n        } else {\n          const { taskId, projectId, name } = selectedItem;\n          if (taskId) {\n            this.openTask({ taskId, projectId });\n          } else if (projectId) {\n            this.openProject(projectId);\n          } else {\n            this.openTaggedTasks(name);\n          }\n        }\n      }\n    }\n  };\n\n  onClickProject = e => {\n    if (!e.target.matches('li')) return;\n    this.openProject(e.target.dataset.id);\n  };\n\n  onClickTask = e => {\n    if (!e.target.matches('li')) return;\n    const { id: taskId, projectId } = e.target.dataset;\n    this.openTask({ taskId, projectId });\n  };\n\n  onClickTag = e => {\n    if (!e.target.matches('li')) return;\n    this.openTaggedTasks(e.target.dataset.id);\n  };\n\n  openTaggedTasks = tag => {\n    const { history } = this.props;\n    history.push(`/0/tasks?tag=${tag}`);\n    this.reset();\n  };\n\n  openProject = projectId => {\n    const { history } = this.props;\n    history.push(`/0/projects/${projectId}/tasks`);\n    this.reset();\n  };\n\n  openTask = ({ taskId, projectId }) => {\n    const { history, userId, selectTask } = this.props;\n    if (projectId) {\n      this.openProject(projectId);\n    } else {\n      history.push(`/0/${userId}/tasks`);\n    }\n    selectTask(taskId);\n    this.reset();\n  };\n\n  handleClick = e => {\n    const { query } = this.state;\n    const { name } = e.target;\n    if (name === 'search' || (name === 'submit' && query !== '')) return;\n    e.stopPropagation();\n    this.toggleSearchBar();\n  };\n\n  toggleSearchBar = () => {\n    this.setState(prevState => ({\n      isSearchBarExpanded: !prevState.isSearchBarExpanded\n    }));\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { history } = this.props;\n    const { query } = this.state;\n    if (query === '') return;\n    history.push(`/0/search?q=${query}`);\n    this.reset();\n  };\n\n  onOutsideClick = e => {\n    const { isSearchBarExpanded, isActive, query } = this.state;\n    if (\n      !isSearchBarExpanded ||\n      !isActive ||\n      (this.suggestions && this.suggestions.contains(e.target))\n    )\n      return;\n\n    if (query === '') {\n      this.setState({\n        isActive: false,\n        isSearchBarExpanded: false\n      });\n    } else {\n      this.toggleSuggestions();\n    }\n  };\n\n  matchItem = ({ name }) => {\n    const { value } = this.input;\n    if (value === '') return false;\n    const regExp = new RegExp(`\\\\b${value}`, 'i');\n    return regExp.test(name);\n  };\n\n  // If separator is a regular expression that contains capturing parentheses (), matched results are included in the array.\n\n  highlightMatch = ({ name }) => {\n    const { value } = this.input;\n    if (value === '') return name;\n    const regExp = new RegExp(`(\\\\b${value})`, 'gi');\n    return name\n      .split(regExp)\n      .map(text =>\n        regExp.test(text) ? (\n          <Mark key={generateKey()}>{text}</Mark>\n        ) : (\n          text\n        )\n      );\n  };\n\n  suggestionsRef = ref => {\n    this.suggestions = ref;\n  };\n\n  inputRef = ref => {\n    this.input = ref;\n  };\n\n  toggleSuggestions = e => {\n    this.setState(prevState => ({\n      isActive: !prevState.isActive\n    }));\n  };\n\n  onFocus = () => {\n    const { isActive } = this.state;\n    if (isActive) return;\n    this.toggleSuggestions();\n  };\n\n  render() {\n    const { projects, tasks, tags, innerRef } = this.props;\n    const { isActive, isSearchBarExpanded, selectedItem, query } = this.state;\n    return (\n      <div className=\"search-typeahead\" ref={innerRef}>\n        <SearchBar\n          setInputRef={this.inputRef}\n          onFocus={this.onFocus}\n          onClick={this.handleClick}\n          onChange={this.onChange}\n          onKeyDown={this.onKeyDown}\n          onSubmit={this.handleSubmit}\n          isExpanded={isSearchBarExpanded}\n          value={query}\n        />\n        {query !== '' && isActive && (\n          <ul ref={this.suggestionsRef} className=\"search-suggestions\">\n            <li\n              tabIndex={0}\n              onClick={this.handleSubmit}\n              className={`search-suggestions__item search-suggestion ${\n                selectedItem === null ? 'is-selected' : ''\n              }`}\n            >\n              <Icon name=\"search\" />\n              Items with <Mark>{query}</Mark>\n            </li>\n            <SearchSuggestions\n              onClick={this.onClickProject}\n              category=\"Projects\"\n              items={projects.filter(item => this.matchItem(item))}\n              selectedItem={selectedItem}\n              query={query}\n              renderMatch={item => (\n                <>\n                  <Icon name={item.layout === 'board' ? 'trello' : 'list'} />\n                  {this.highlightMatch(item)}\n                </>\n              )}\n            />\n            <SearchSuggestions\n              onClick={this.onClickTask}\n              category=\"Tasks\"\n              items={tasks.filter(item => this.matchItem(item))}\n              selectedItem={selectedItem}\n              query={query}\n              renderMatch={item => (\n                <>\n                  <Icon name=\"check-circle\" />\n                  {this.highlightMatch(item)}\n                </>\n              )}\n            />\n            <SearchSuggestions\n              onClick={this.onClickTag}\n              category=\"Tags\"\n              items={tags.filter(item => this.matchItem(item))}\n              selectedItem={selectedItem}\n              query={query}\n              renderMatch={item => (\n                <>\n                  <Icon name=\"tag\" />\n                  {this.highlightMatch(item)}\n                </>\n              )}\n            />\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    userId: currentUserSelectors.getCurrentUserId(state),\n    projects: currentUserSelectors.getCurrentUserProjects(state),\n    tags: currentUserSelectors.getAllMergedTags(state),\n    tasks: taskSelectors.getTasksArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectTask: taskId => dispatch(selectTaskAction(taskId))\n  };\n};\n\nexport default compose(\n  withRouter,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  withOutsideClick\n)(SearchTypeahead);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport { Task } from '../Task';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport {\n  selectTask as selectTaskAction,\n  getSelectedTaskId\n} from '../../ducks/selectedTask';\nimport { TaskEditor } from '../TaskEditor';\nimport { Main } from '../Main';\nimport { Icon } from '../Icon';\nimport './SearchResults.scss';\n\nclass TagSearchResults extends Component {\n  onTaskClick = taskId => {\n    const { selectTask } = this.props;\n    selectTask(taskId);\n  };\n\n  closeTaskEditor = () => {\n    const { selectTask } = this.props;\n    selectTask(null);\n  };\n\n  render() {\n    const {\n      taggedTasks,\n      currentUser,\n      selectedTaskId,\n      tasksById,\n      tag\n    } = this.props;\n    const { userId } = currentUser;\n    const isTaskEditorOpen = !!selectedTaskId;\n    return (\n      <Main\n        title={<>\n        <Icon name=\"tag\" />\n          {tag}\n          </>\n          }\n        classes={{\n          main: 'search-results',\n          title: 'search-results__title'\n        }}\n      >\n        <div className=\"search-results__tasks-wrapper\">\n          <div className=\"search-results__tasks\">\n            {taggedTasks.map((task, i) => (\n              <Task\n                className=\"search-results__task\"\n                index={i}\n                key={task.taskId}\n                onTaskClick={this.onTaskClick}\n                {...task}\n              />\n            ))}\n          </div>\n          {isTaskEditorOpen && (\n            <TaskEditor\n              {...tasksById[selectedTaskId]}\n              handleTaskEditorClose={this.closeTaskEditor}\n              userId={userId}\n              layout=\"list\"\n              key={selectedTaskId}\n            />\n          )}\n        </div>\n      </Main>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    taggedTasks: taskSelectors.getTaggedTasks(state, ownProps.tag),\n    selectedTaskId: getSelectedTaskId(state),\n    tasksById: taskSelectors.getTasksById(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectTask: taskId => dispatch(selectTaskAction(taskId)),\n    syncTaggedTasks: ({ projectId, tag }) =>\n      dispatch(taskActions.syncTaggedTasks({ projectId, tag }))\n  };\n};\n\nconst condition = currentUser => !!currentUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TagSearchResults)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport { Task } from '../Task';\nimport { taskSelectors } from '../../ducks/tasks';\nimport {\n  selectTask as selectTaskAction,\n  getSelectedTaskId\n} from '../../ducks/selectedTask';\nimport { TaskEditor } from '../TaskEditor';\nimport { Main } from '../Main';\nimport { Icon } from '../Icon';\nimport './SearchResults.scss';\n\nclass SearchResults extends Component {\n  componentWillUnmount() {\n    const { selectedTaskId, selectTask } = this.props;\n    if (selectedTaskId) {\n      selectTask(null);\n    }\n  }\n\n  onTaskClick = taskId => {\n    const { selectTask } = this.props;\n    selectTask(taskId);\n  };\n\n  closeTaskEditor = () => {\n    const { selectTask } = this.props;\n    selectTask(null);\n  };\n\n  render() {\n    const { currentUser, selectedTaskId, tasksById, tasks, query } = this.props;\n    const { userId } = currentUser;\n    const isTaskEditorOpen = !!selectedTaskId;\n    return (\n      <Main\n        title=\"Search Results\"\n        classes={{\n          main: `search-results ${isTaskEditorOpen ? 'show-task-editor' : ''}`,\n          title: 'search-results__title'\n        }}\n      >\n        <h2 className=\"search-results__subheading\">\n          <Icon name=\"search\" />\n          {query}\n        </h2>\n        <div className=\"search-results__tasks-wrapper\">\n          <div className=\"search-results__tasks\">\n            {tasks.map((task, i) => (\n              <Task\n                className=\"search-results__task\"\n                index={i}\n                key={task.taskId}\n                onTaskClick={this.onTaskClick}\n                {...task}\n              />\n            ))}\n          </div>\n          {isTaskEditorOpen && (\n            <TaskEditor\n              {...tasksById[selectedTaskId]}\n              handleTaskEditorClose={this.closeTaskEditor}\n              userId={userId}\n              layout=\"list\"\n              key={selectedTaskId}\n            />\n          )}\n        </div>\n      </Main>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    tasks: taskSelectors.getTasksMatchingQuery(state, ownProps.query),\n    selectedTaskId: getSelectedTaskId(state),\n    tasksById: taskSelectors.getTasksById(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectTask: taskId => dispatch(selectTaskAction(taskId))\n  };\n};\n\nconst condition = currentUser => !!currentUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(SearchResults)\n);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../../components/Firebase';\nimport { Input } from '../../components/Input';\nimport { Button } from '../../components/Button';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .passwordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n    const isInvalid = passwordOne === '' || passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"passwordOne\"\n          label=\"New Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n          labelClass=\"user-form__label\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          label=\"Confirm New Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n          labelClass=\"user-form__label\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"md\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Change Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport { PasswordChangeForm } from '../PasswordChange';\nimport {\n  currentUserActions,\n  currentUserSelectors\n} from '../../ducks/currentUser';\nimport { AuthUserContext, withAuthorization } from '../../components/Session';\nimport { UserFormPage } from '../../components/UserFormPage';\nimport './Account.scss';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <UserFormPage title=\"My Account\">\n        <section className=\"account-section\">\n        <h2 className=\"account-section__header\">Forgot your password?</h2>\n          <PasswordForgetForm />\n        </section>\n        <section className=\"account-section\">\n        <h2 className=\"account-section__header\">Change your password.</h2>\n          <PasswordChangeForm />\n        </section>\n        </UserFormPage>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: currentUserSelectors.getCurrentUser(state)\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    \n  }\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(AccountPage)\n);\n","export const getParams = string => {\n  const query = string.slice(1);\n  return query.split('&').reduce((params, pair) => {\n    const [key, value] = pair.split('=');\n    return {\n      ...params,\n      [key]: decodeURIComponent(value)\n    };\n  }, {});\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { withAuthorization } from '../../components/Session';\nimport * as ROUTES from '../../constants/routes';\nimport { userActions } from '../../ducks/users';\nimport { ProjectGrid } from '../../components/ProjectGrid';\nimport { ProjectComposer } from '../../components/ProjectComposer';\nimport { ProjectContainer } from '../../components/Project';\nimport { projectActions, projectSelectors } from '../../ducks/projects';\nimport { taskActions } from '../../ducks/tasks';\nimport { currentUserActions } from '../../ducks/currentUser';\nimport { Main } from '../../components/Main';\nimport { Dashboard } from '../../components/Dashboard';\nimport { UserTasks } from '../../components/UserTasks';\nimport { UserProfile } from '../UserProfile';\nimport { SearchResults, TagSearchResults } from '../../components/Search';\nimport { AccountPage } from '../Account';\nimport { getParams } from '../../utils/string';\nimport './Home.scss';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isProjectComposerOpen: false,\n      isLoading: true\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      syncUsersById,\n      currentUser,\n      syncUserProjects,\n      syncUserProjectTasks,\n      syncUserMiscTasks,\n      syncUserTags\n    } = this.props;\n    const { userId, projectIds } = currentUser;\n    console.log('mounted home');\n\n    await Promise.all([\n      syncUsersById(),\n      syncUserProjects(userId),\n      syncUserMiscTasks(userId),\n      syncUserTags(userId),\n      ...projectIds.map(projectId =>\n        syncUserProjectTasks({ userId, projectId })\n      )\n    ]).then(listeners => {\n      this.unsubscribe = listeners;\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe.forEach(func => func());\n    console.log('home unmounted');\n  }\n\n  toggleProjectComposer = () => {\n    this.setState(prevState => ({\n      isProjectComposerOpen: !prevState.isProjectComposerOpen\n    }));\n  };\n\n  render() {\n    const { isProjectComposerOpen, isLoading } = this.state;\n    if (isLoading) return null;\n    const { userId, projectsById } = this.props;\n    return (\n      <>\n        {isProjectComposerOpen && (\n          <ProjectComposer onClose={this.toggleProjectComposer} />\n        )}\n        <Switch>\n          <Route\n            exact\n            path={ROUTES.HOME}\n            render={props => (\n              <Dashboard\n                toggleProjectComposer={this.toggleProjectComposer}\n                {...props}\n              />\n            )}\n          />\n          <Route\n            path={ROUTES.PROJECT}\n            render={props => (\n              <ProjectContainer\n                userId={userId}\n                projectId={props.match.params.id}\n                projectName={projectsById[props.match.params.id].name}\n                {...props}\n              />\n            )}\n          />\n          <Route\n            path={ROUTES.USER_PROJECTS}\n            render={props => (\n              <Main\n                title=\"Projects\"\n                classes={{\n                  main: 'project-grid__container',\n                  title: 'project-grid__header'\n                }}\n              >\n                <ProjectGrid\n                  userId={userId}\n                  openProjectComposer={this.toggleProjectComposer}\n                  {...props}\n                />\n              </Main>\n            )}\n          />\n          <Route\n            path={ROUTES.USER_TASKS}\n            render={props => <UserTasks userId={userId} {...props} />}\n          />\n          <Route\n            path={ROUTES.USER_PROFILE}\n            render={props => (\n              <UserProfile userId={props.match.params.id} {...props} />\n            )}\n          />\n          <Route\n            path={ROUTES.GLOBAL_SEARCH}\n            render={props => {\n              const { search } = props.location;\n              const params = getParams(search);\n              return <SearchResults query={params.q} {...props} />;\n            }}\n          />\n          <Route\n            path={ROUTES.TASK_SEARCH}\n            render={props => {\n              const { search } = props.location;\n              const params = getParams(search);\n              if (params.tag) {\n                return <TagSearchResults tag={params.tag} {...props} />;\n              }\n            }}\n          />\n          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n        </Switch>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    projectsById: projectSelectors.getProjectsById(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    syncUsersById: () => dispatch(userActions.syncUsersById()),\n    syncUserTags: userId => dispatch(currentUserActions.syncUserTags(userId)),\n    syncUserProjects: userId =>\n      dispatch(projectActions.syncUserProjects(userId)),\n    syncUserProjectTasks: ({ userId, projectId }) =>\n      dispatch(taskActions.syncUserProjectTasks({ userId, projectId })),\n    syncUserMiscTasks: userId => dispatch(taskActions.syncUserMiscTasks(userId))\n  };\n};\n\nconst condition = currentUser => !!currentUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(HomePage)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../../components/Session';\nimport { userActions, userSelectors } from '../../ducks/users';\nimport { currentUserActions, currentUserSelectors } from '../../ducks/currentUser';\nimport './Admin.scss';\n\nclass AdminPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      users: {}\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    /*\n    this.props.firebase.users().on('value', snapshot => {\n      this.setState({\n        users: snapshot.val(),\n        loading: false\n      });\n    });\n    */\n  }\n\n  componentWillUnmount() {\n    /*\n    this.props.firebase.users().off();\n    */\n  }\n\n  render() {\n    return (\n      <main className=\"admin\">\n        <h1>Admin</h1>\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentUser: currentUserSelectors.getCurrentUser(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsersById: () => dispatch(userActions.fetchUsersById())\n  };\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(AdminPage)\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { Icon } from '../Icon';\nimport './Logo.scss';\n\nconst Logo = ({ size, className, onClick }) => {\n  return (\n    <div className={`logo logo--${size} ${className}`}>\n      <Link className=\"logo__link\" to={ROUTES.LANDING} onClick={onClick}>\n        <span className=\"logo__text\">workflow</span>\n      </Link>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React, { Component } from 'react';\nimport './Navbar.scss';\nimport { Logo } from '../Logo';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\n\nexport default class Navbar extends Component {\n  static defaultProps = {\n    minWidth: 768,\n    classes: {\n      navbar: '',\n      links: ''\n    }\n  };\n\n  state = {\n    viewportWidth: window.innerWidth,\n    isMobileNavVisible: false,\n    isTouchEnabled: false\n  };\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick);\n  }\n\n  handleResize = () => {\n    this.setState({\n      viewportWidth: window.innerWidth\n    });\n  };\n\n  toggleMobileNavVisibility = () => {\n    this.setState(prevState => ({\n      isMobileNavVisible: !prevState.isMobileNavVisible\n    }));\n  };\n\n  handleClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    if (!isMobileView) return;\n    if (e.target.matches('button') || e.target.matches('a')) {\n      this.toggleMobileNavVisibility();\n    }\n  };\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n    window.removeEventListener('resize', this.handleResize);\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  handleOutsideClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n    if (\n      !isMobileView ||\n      this.navLinksEl.contains(e.target) ||\n      e.target.matches('button') ||\n      e.target.matches('a')\n    )\n      return;\n    this.setState({\n      isMobileNavVisible: false\n    });\n  };\n\n  handleTouch = () => {\n    const { isTouchEnabled } = this.state;\n    if (isTouchEnabled === true) return;\n    this.setState({\n      isTouchEnabled: true\n    });\n    document.removeEventListener('touchstart', this.handleTouch);\n    document.removeEventListener('click', this.handleOutsideClick);\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  render() {\n    const { viewportWidth, isMobileNavVisible } = this.state;\n    const { minWidth, classes, children } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    return (\n      <nav\n        className={`navbar ${isMobileView ? 'is-collapsed' : ''} ${\n          isMobileView && isMobileNavVisible ? 'show-links' : ''\n        } ${classes.navbar}`}\n        ref={el => (this.navEl = el)}\n      >\n        <Logo className=\"navbar__logo\" onClick={this.handleClick} />\n        {isMobileView && (\n          <Button\n            type=\"button\"\n            color=\"primary\"\n            onClick={this.toggleMobileNavVisibility}\n            iconOnly\n            className=\"navbar__btn--toggle\"\n          >\n            <Icon name=\"menu\" />\n          </Button>\n        )}\n        <ul\n          className={`navbar__links ${classes.links}`}\n          onClick={this.handleClick}\n          ref={el => (this.navLinksEl = el)}\n        >\n          {children}\n        </ul>\n      </nav>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Logo } from '../Logo';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { withOutsideClick } from '../withOutsideClick';\nimport './Sidebar.scss';\n\nexport const SidebarIcon = ({ name }) => {\n  return <Icon name={name} className=\"sidebar__icon\" />;\n};\n\nclass Sidebar extends Component {\n  onOutsideClick = e => {\n    const { isExpanded } = this.props;\n    if (!isExpanded || e.target.matches('.sidebar__btn--toggle')) return;\n    const { onToggle } = this.props;\n    onToggle();\n  };\n\n  render() {\n    const { onToggle, children, innerRef } = this.props;\n    return (\n      <div ref={innerRef} className=\"sidebar__canvas\">\n        <Button\n          type=\"button\"\n          onClick={onToggle}\n          className=\"sidebar__btn--toggle\"\n          size=\"sm\"\n          iconOnly\n        >\n          <Icon name=\"bar-chart-2\" />\n        </Button>\n        <div className=\"sidebar\">\n          <nav className=\"sidebar__nav\">\n            <div className=\"sidebar__logo\">\n              <Logo size=\"sm\" />\n            </div>\n            <ul className=\"sidebar__list\">{children}</ul>\n          </nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withOutsideClick(Sidebar);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { SidebarIcon } from './Sidebar';\n\nexport const NavLinksNonAuth = ({ onClick }) => (\n  <>\n    <li>\n      <NavLink className=\"navbar__link\" onClick={onClick} to={ROUTES.LOG_IN}>\n        Log In\n      </NavLink>\n    </li>\n    <li>\n      <NavLink className=\"navbar__link\" onClick={onClick} to={ROUTES.SIGN_UP}>\n        Sign Up\n      </NavLink>\n    </li>\n  </>\n);\n\nexport const NavLinksAuth = ({ userId, onClick }) => (\n  <>\n    <li className=\"sidebar__item\">\n      <NavLink\n        onClick={onClick}\n        className=\"sidebar__link\"\n        to={`/0/home/${userId}`}\n      >\n        <SidebarIcon name=\"home\" />\n        <span className=\"sidebar__section-name\">Home</span>\n      </NavLink>\n    </li>\n    <li className=\"sidebar__item\">\n      <NavLink\n        onClick={onClick}\n        className=\"sidebar__link\"\n        to={`/0/${userId}/tasks`}\n      >\n        <SidebarIcon name=\"check-circle\" />\n        <span className=\"sidebar__section-name\">My Tasks</span>\n      </NavLink>\n    </li>\n    <li className=\"sidebar__item\">\n      <NavLink\n        onClick={onClick}\n        className=\"sidebar__link\"\n        to={`/0/${userId}/projects`}\n      >\n        <SidebarIcon name=\"grid\" />\n        <span className=\"sidebar__section-name\">Projects</span>\n      </NavLink>\n    </li>\n  </>\n);\n","import React from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Button } from '../Button';\n\nconst SignOutButton = ({ firebase, className }) => (\n  <Button\n    type=\"button\"\n    onClick={firebase.signOut}\n    className={className}\n    color=\"primary\"\n  >\n    Log Out\n  </Button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport { PopoverWrapper } from '../Popover';\nimport { Avatar } from '../Avatar';\nimport { Menu, MenuItem } from '../Menu';\nimport { SignOutButton } from '../SignOutButton';\nimport { SearchTypeahead } from '../Search';\nimport './Topbar.scss';\n\nconst Topbar = ({ currentUser }) => (\n  <div className=\"topbar\">\n    <SearchTypeahead />\n    {currentUser && (\n      <PopoverWrapper\n        classes={{\n          wrapper: 'topbar__user-actions-wrapper',\n          popover: 'topbar__user-actions'\n        }}\n        align={{ outer: 'right', inner: 'right' }}\n        buttonProps={{\n          size: 'sm',\n          iconOnly: true,\n          className: 'topbar__btn--user-actions',\n          children: (\n            <Avatar\n              classes={{\n                avatar: 'topbar__avatar',\n                placeholder: 'topbar__avatar-placeholder'\n              }}\n              name={currentUser.name}\n              size=\"sm\"\n              variant=\"circle\"\n              imgSrc={currentUser.photoURL}\n            />\n          )\n        }}\n      >\n        <Menu>\n          <MenuItem>\n            <NavLink\n              className=\"topbar__link\"\n              to={`/0/${currentUser.userId}/account`}\n            >\n              My Account\n            </NavLink>\n          </MenuItem>\n          <MenuItem>\n            <NavLink\n              className=\"topbar__link\"\n              to={`/0/${currentUser.userId}/profile`}\n            >\n              My Profile\n            </NavLink>\n          </MenuItem>\n          <MenuItem>\n            <SignOutButton className=\"topbar__link\" />\n          </MenuItem>\n        </Menu>\n      </PopoverWrapper>\n    )}\n  </div>\n);\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentUser: currentUserSelectors.getCurrentUser(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Topbar);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { AuthUserContext } from '../Session';\nimport { Navbar, NavLinksAuth, NavLinksNonAuth, Sidebar } from '../Nav';\nimport { Topbar } from '../Topbar';\nimport './Header.scss';\n\nclass Header extends Component {\n  state = {\n    isNavExpanded: false\n  };\n\n  toggleNav = e => {\n    this.setState(prevState => ({\n      isNavExpanded: !prevState.isNavExpanded\n    }));\n  };\n\n  render() {\n    const { isNavExpanded } = this.state;\n    const {\n      history: { location }\n    } = this.props;\n    const isLoginPage = location.pathname === '/login';\n    const isSignUpPage = location.pathname === '/signup';\n    return (\n      <header\n        className={`header ${isLoginPage ? 'header--login' : ''} ${\n          isSignUpPage ? 'header--sign-up' : ''\n        } ${isNavExpanded ? 'expand-nav' : ''}`}\n      >\n        <AuthUserContext.Consumer>\n          {currentUser =>\n            currentUser ? (\n              <>\n                <Sidebar isExpanded={isNavExpanded} onToggle={this.toggleNav}>\n                  <NavLinksAuth\n                    onClick={this.toggleNav}\n                    userId={currentUser.userId}\n                  />\n                </Sidebar>\n                <Topbar />\n              </>\n            ) : (\n              <Navbar>\n                <NavLinksNonAuth />\n              </Navbar>\n            )\n          }\n        </AuthUserContext.Consumer>\n      </header>\n    );\n  }\n}\n\nexport default withRouter(Header);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { LandingPage } from '../Landing';\nimport { SignUpPage } from '../SignUp';\nimport { LoginPage } from '../Login';\nimport { PasswordForgetPage } from '../PasswordForget';\nimport { HomePage } from '../Home';\nimport { AdminPage } from '../Admin';\nimport { withAuthentication } from '../../components/Session';\nimport { Header } from '../../components/Header';\n\nconst App = () => (\n  <>\n    <Header />\n    <Switch>\n      <Route exact path={ROUTES.LANDING} component={LandingPage} />\n      <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n      <Route path={ROUTES.LOG_IN} component={LoginPage} />\n      <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n      <Route path={ROUTES.BASE} component={HomePage} />\n      <Route path={ROUTES.ADMIN} component={AdminPage} />\n    </Switch>\n  </>\n);\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { projectsById } from '../ducks/projects';\nimport { tasksById } from '../ducks/tasks';\nimport { listsById } from '../ducks/lists';\nimport { usersById } from '../ducks/users';\nimport { subtasksById } from '../ducks/subtasks';\nimport { commentsById } from '../ducks/comments';\nimport { currentUser } from '../ducks/currentUser';\nimport { selectedTask } from '../ducks/selectedTask';\nimport { selectedProject } from '../ducks/selectedProject';\n\nexport default combineReducers({\n  currentUser,\n  projectsById,\n  listsById,\n  tasksById,\n  usersById,\n  subtasksById,\n  commentsById,\n  selectedTask,\n  selectedProject\n});\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory({ basename: process.env.PUBLIC_URL });\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, {}, applyMiddleware(thunk));\nexport default store;\nexport { default as firebase } from './firebase';\nexport { default as history } from './history';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport 'normalize.css';\nimport './index.scss';\nimport { App } from './pages/App';\nimport * as serviceWorker from './serviceWorker';\nimport { FirebaseContext } from './components/Firebase';\nimport store, { firebase, history } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <FirebaseContext.Provider value={firebase}>\n      <Router basename={process.env.PUBLIC_URL} history={history}>\n        <App />\n      </Router>\n    </FirebaseContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}