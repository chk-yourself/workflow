{"version":3,"sources":["assets/feather/feather-sprite.svg","components/Firebase/context.js","components/Firebase/Firebase.js","constants/routes.js","components/Button/Button.js","components/SignOut/SignOutButton.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Icon/Icon.js","components/Navbar/Navbar.js","components/Input/Input.js","components/SignUp/SignUpForm.js","components/UserFormPage/UserFormPage.js","components/SignUp/SignUp.js","components/SignUp/index.js","components/SignIn/SignInForm.js","components/PasswordForget/PasswordForgetForm.js","components/PasswordForget/PasswordForget.js","components/PasswordForget/index.js","components/SignIn/SignIn.js","store/firebase.js","ducks/users/actions.js","ducks/users/types.js","ducks/users/selectors.js","ducks/users/reducer.js","ducks/current/actions.js","ducks/current/types.js","ducks/current/selectors.js","components/BoardGrid/BoardGrid.js","components/BoardGrid/BoardTile.js","ducks/boards/actions.js","ducks/boards/types.js","ducks/boards/selectors.js","ducks/boards/reducers.js","components/BoardGrid/BoardGridContainer.js","components/Modal/Modal.js","components/BoardComposer/BoardComposer.js","constants/droppableTypes.js","components/ListComposer/ListComposer.js","components/Board/Board.js","ducks/lists/actions.js","ducks/lists/types.js","ducks/lists/selectors.js","ducks/lists/reducers.js","ducks/cards/selectors.js","ducks/cards/actions.js","ducks/cards/types.js","ducks/cards/reducer.js","ducks/subtasks/actions.js","ducks/subtasks/types.js","ducks/subtasks/selectors.js","ducks/subtasks/reducer.js","components/Textarea/Textarea.js","constants/keys.js","components/CardComposer/CardComposer.js","components/Menu/Menu.js","components/Menu/MenuItem.js","components/Popover/Popover.js","components/Popover/PopoverWrapper.js","components/Card/Card.js","components/List/Cards.js","components/List/List.js","ducks/comments/actions.js","ducks/comments/types.js","ducks/comments/selectors.js","ducks/comments/reducer.js","components/Toolbar/Toolbar.jsx","components/Avatar/Avatar.js","components/CardEditor/CardEditorAssignMember.js","components/MemberSearch/MemberSearch.js","components/CardEditor/CardEditorMoreActions.js","components/Checkbox/Checkbox.js","components/CardEditor/CardEditorSubtask.js","components/CardEditor/CardEditorComment.js","components/Tag/Tag.jsx","components/Radio/Radio.js","components/ColorPicker/ColorPicker.js","components/TagsInput/TagsInput.js","components/CardEditor/CardEditor.js","utils/utils.js","components/Board/BoardContainer.js","components/Home/Home.js","components/PasswordChange/PasswordChangeForm.js","components/Account/Account.js","components/Header/Header.jsx","components/App/App.js","serviceWorker.js","store/reducers.js","ducks/current/reducers.js","store/history.js","index.js"],"names":["module","exports","__webpack_require__","p","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","signInWithGoogle","provider","auth","GoogleAuthProvider","addScope","signInWithPopup","then","result","credential","token","accessToken","console","log","user","catch","error","errorCode","code","message","email","alert","signInWithGithub","GithubAuthProvider","signInWithRedirect","createUserWithEmailAndPassword","password","signInWithEmailAndPassword","signOut","passwordReset","sendPasswordResetEmail","passwordUpdate","newPassword","currentUser","updatePassword","getTimestamp","firestore","FieldValue","serverTimestamp","addToArray","value","arrayUnion","removeFromArray","arrayRemove","deleteField","delete","getUserDoc","userId","db","collection","doc","addUser","_ref","name","username","_ref$boardIds","boardIds","_ref$photoURL","photoURL","set","updateUser","newValue","arguments","length","undefined","update","addTag","_ref2","cardId","boardId","text","_ref2$color","color","batch","userRef","cardRef","getCardDoc","boardRef","getBoardDoc","tags","lastModifiedAt","defineProperty","lastUsedAt","merge","commit","removeTag","_ref3","tag","updateCard","setTagColor","_ref4","updateBoard","objectSpread","addBoard","_ref5","boardTitle","add","createdAt","listIds","createdBy","memberIds","ref","id","getListDoc","listId","updateList","addList","_ref6","listTitle","cardIds","deleteList","_ref7","listRef","where","get","snapshot","docs","forEach","addCard","_ref8","cardTitle","assignedTo","assignCard","_ref9","deleteCard","_ref10","moveCardToList","_ref11","origListId","newListId","updatedCardIds","origListRef","newListRef","getSubtaskDoc","subtaskId","addSubtask","_ref12","_ref12$memberIds","_ref12$boardId","_ref12$cardId","_ref12$dueDate","dueDate","isCompleted","concat","toConsumableArray","subtaskIds","updateSubtask","deleteSubtask","_ref13","_ref13$cardId","subtaskRef","getCommentDoc","commentId","addComment","_ref14","_ref14$memberIds","isPinned","from","to","likes","commentIds","updateComment","initializeApp","HOME","Button","children","_ref$type","type","onClick","_ref$className","className","_ref$color","_ref$size","size","_ref$variant","variant","disabled","_ref$iconOnly","iconOnly","buttonRef","objectWithoutProperties","defaultProps","components_Button_Button","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","authUser","inherits","createClass","key","_this2","listener","onAuthStateChanged","setState","Session_context","Provider","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","Icon","addClass","trim","xmlns","xmlnsXlink","viewBox","width","height","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","xlinkHref","featherIcons","NavLinksAuth","Fragment","Link","ROUTES","components_SignOut_SignOutButton","NavLinksNonAuth","Navbar","viewportWidth","window","innerWidth","isMobileNavVisible","isTouchEnabled","handleResize","toggleMobileNavVisibility","prevState","handleClick","e","minWidth","target","matches","handleOutsideClick","navLinksEl","contains","handleTouch","document","removeEventListener","addEventListener","_this$state","_this$props","navLinksClass","navRef","isMobileView","el","navEl","Icon_Icon","Navbar_NavLinksAuth","Navbar_NavLinksNonAuth","Input","onFocus","onChange","onInput","placeholder","isRequired","onBlur","autoComplete","inputRef","hideLabel","label","labelClass","onKeyDown","htmlFor","required","INITIAL_STATE","passwordOne","passwordTwo","SignUpForm","onSubmit","uid","preventDefault","_this$state2","isInvalid","components_Input_Input","UserFormPage","title","SignUpPage","components_UserFormPage_UserFormPage","SignUp_SignUpForm","SignUpLink","SignInForm","enableGoogleLogin","PasswordForgetForm","PasswordForgetPage","PasswordForget_PasswordForgetForm","PasswordForgetLink","SignInPage","SignIn_SignInForm","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","loadUserData","loadUsersById","usersById","fetchUsersById","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","users","data","sent","t0","stop","_x","apply","fetchUserData","_callee2","_context2","_x2","userData","deleteUser","getUsersById","getUserData","getCurrentUserData","currentUserId","current","getUsersArray","keys","map","getMembersArray","memberId","getUserTags","action","_toPropertyKey","selectUser","selectBoard","selectList","selectCard","getCurrentUserId","getCurrentBoardId","getCurrentListId","getCurrentCardId","getCurrent","getMergedTags","_state$current","boardsById","boardTags","userTags","mergedTags","BoardGrid","BoardTile","loadBoardsById","fetchBoardsById","updateBoardsById","boardData","reorderLists","updateListIds","updateBoardTags","getBoardsById","getBoardsArray","getBoard","getBoardTags","BoardGridContainer","boardObserver","onSnapshot","querySnapshot","docChanges","change","board","_this$props2","boardsArray","boardTiles","BoardGrid_BoardTile","BoardGrid_BoardGrid","openBoardComposer","connect","ownProps","currentSelectors","userSelectors","boardSelectors","boardActions","currentActions","Modal","onModalClose","onModalClick","BoardComposer","handleSubmit","onClose","components_Modal_Modal","CARD","LIST","isActive","ListComposer","resetForm","onReset","Board","react_beautiful_dnd_esm","droppableId","droppableTypes","direction","provided","innerRef","droppableProps","components_ListComposer_ListComposer","loadListsById","listsById","fetchListsById","updateListsById","list","getListsById","getListsArray","getCardsById","cardsById","getCardsArray","getCardTags","cardTags","cardTag","loadCardsById","fetchCardsById","cards","cardData","updateCardsById","card","reducer_toPropertyKey","loadSubtasksById","subtasksById","fetchSubtasksById","subtasks","updateSubtasksById","subtask","fetchCardSubtasks","fetchUserSubtasks","_callee3","_context3","_x3","subtaskData","getSubtasksById","getSubtasksArray","subtasks_reducer_toPropertyKey","Textarea","autoHeightResize","isAutoHeightResizeEnabled","textareaEl","style","scrollHeight","createRef","onDragStart","isReadOnly","readOnly","BACKSPACE","ENTER","TAB","ARROW_DOWN","ARROW_UP","CardComposer","Textarea_Textarea_Textarea","Menu","menuRef","MenuItem","Popover","onOutsideClick","PopoverWrapper","isOpen","componentEl","toggleOpen","handleClose","alignInner","alignOuter","buttonProps","wrapperClass","popoverClass","anchorEl","popoverWrapperStyle","offsetTop","offsetLeft","position","top","Popover_Popover","align","Card","handleCardClick","onCardClick","cardIndex","draggableId","index","draggableProps","dragHandleProps","headerEl","Cards","scrollToBottom","listEnd","scrollIntoView","behavior","prevProps","onCardDelete","minHeight","isDraggingOver","Card_Card_Card","float","clear","List","handleListDelete","newListTitle","_this$props3","listIndex","isFetchingCards","viewportHeight","listHeaderEl","PopoverWrapper_PopoverWrapper","components_Menu_Menu","Menu_MenuItem","href","Cards_Cards","handleCardDelete","components_CardComposer_CardComposer","cardSelectors","loadCommentsById","commentsById","fetchCommentsById","comments","updateCommentsById","comment","fetchCardComments","fetchUserComments","commentData","deleteComment","getCommentsById","getCommentsArray","comments_reducer_toPropertyKey","Toolbar","Avatar","getUserInitials","fullName","split","charAt","join","toUpperCase","imgSrc","imgProps","classes","avatar","src","alt","img","backgroundColor","CardEditorAssignMember","MemberSearch","query","selectedMember","selectedIndex","filteredList","memberSearchEl","matchUser","regExp","RegExp","test","filter","newIndex","indexOf","persistSelectedMember","onMemberClick","nextIndex","prevIndex","inputEl","focus","assignedMembers","_this$state3","i","isAssigned","Avatar_Avatar_Avatar","CardEditorMoreActions","onMenuClick","data-action","Checkbox","isChecked","checked","appRoot","getElementById","CardEditorSubtask","portal","appendChild","removeChild","toggleCompleted","inner","components_Checkbox_Checkbox","isDragging","ReactDOM","createPortal","CardEditorComment","secondsElapsed","tick","handleLikeClick","handleLike","secondsSinceCreation","Math","floor","Date","now","toDate","getTime","interval","setInterval","clearInterval","date","dateCreatedFull","timeCreated","toLocaleTimeString","hour","minute","hour12","dateCreated","toDateString","isToday","isYesterday","setDate","getDate","cardActions","commentActions","Tag","onDelete","tagRef","Radio","_ref$classes","radio","ColorPicker","selectedColor","handleColorChange","selectColor","components_Radio_Radio","TagsInput","selectedTag","focusedTag","hasExactMatch","matchTag","tagSuggestions","findIndex","item","persistSelectedTag","assignedTags","handleTagDelete","nextProps","isColorPickerActive","currentTag","colorPickerStyle","currentTagEl","_this$currentTagEl","offsetWidth","offsetHeight","left","components_Tag_Tag","ColorPicker_ColorPicker_ColorPicker","CardEditor","updateCardSubtasks","subtasksArray","cardSubtasks","reduce","handleCardEditorClose","currentValue","cardKey","updatedValue","currentFocus","newComment","_this$props4","newSubtask","handleModalClick","commentFormEl","newSubtaskFormEl","handleMoreActions","dataset","onSubtaskChange","handleCheckboxChange","toggleSubtaskCompleted","updateSubtaskText","_this$props5","moveSubtask","destination","source","updatedSubtaskIds","splice","handleCommentLike","_this$props6","assignMember","_this$props7","toggleColorPicker","_this$props8","isBoardTag","isUserTag","tagData","_this$props9","_this$props10","isFetching","cardDescription","membersListButton","_this$props11","commentObserver","_this3","_this$props12","commentsArray","usersArray","membersArray","hasSubtasks","hasComments","isNewCommentInvalid","isNewSubtaskInvalid","commentFormIsFocused","newSubtaskFormIsFocused","components_Toolbar_Toolbar","CardEditorAssignMember_CardEditorAssignMember","MemberSearch_MemberSearch_MemberSearch","CardEditor_CardEditorMoreActions","TagsInput_TagsInput_TagsInput","member","click","onDragEnd","CardEditorSubtask_CardEditorSubtask","components_CardEditor_CardEditorComment","subtaskSelectors","commentSelectors","isEqual","other","prototype","toString","typeArr","valueLen","compare","item1","item2","itemType","hasOwnProperty","windowDebouncer","callback","request","_len","args","Array","_key","cancelAnimationFrame","requestAnimationFrame","BoardContainer","isMovedWithinList","updatedListIds","toggleCardEditor","isCardEditorOpen","onTitleChange","onTitleBlur","newBoardTitle","updatedBoard","utils","listObserver","subtaskObserver","cardObserver","listsArray","lists","components_List_List","components_Board_Board","components_CardEditor_CardEditor","listSelectors","listActions","subtaskActions","HomePage","toggleBoardComposer","isBoardComposerOpen","createBoard","BoardComposer_BoardComposer_BoardComposer","Switch","Route","exact","path","render","BoardGrid_BoardGridContainer","Board_BoardContainer","match","params","currentBoardId","userActions","PasswordChangeForm","PasswordChange_PasswordChangeForm","Header","Navbar_Navbar_Navbar","Header_Header_Header","component","LandingPage","Home_Home","AccountPage","AdminPage","Boolean","location","hostname","combineReducers","createBrowserHistory","basename","store","createStore","reducers","applyMiddleware","thunk","es","context","Router","components_App_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ba88c02f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/feather-sprite.0ed672ce.svg\";","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import firebase from 'firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\nclass Firebase {\n  constructor() {\n    firebase.initializeApp(config);\n    this.auth = firebase.auth();\n    this.db = firebase.firestore();\n  }\n\n  // Auth API\n\n  signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    provider.addScope('https://www.googleapis.com/auth/contacts.readonly');\n    this.auth\n      .signInWithPopup(provider)\n      .then(result => {\n        if (result.credential) {\n          const token = result.credential.accessToken;\n          console.log(token);\n          const user = result.user;\n        }\n      })\n      .catch(error => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        const email = error.email;\n        const credential = error.credential;\n\n        if (errorCode === 'auth/account-exists-with-different-credential') {\n          alert(\n            'You have already signed up with a different auth provider for that email.'\n          );\n        } else {\n          console.error(error);\n        }\n      });\n  };\n\n  signInWithGithub = () => {\n    const provider = new firebase.auth.GithubAuthProvider();\n    this.auth.signInWithRedirect(provider);\n  };\n\n  createUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  signInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  signOut = () => this.auth.signOut();\n\n  passwordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  passwordUpdate = newPassword =>\n    this.auth.currentUser.updatePassword(newPassword);\n\n  // Utility API\n\n  getTimestamp = () => firebase.firestore.FieldValue.serverTimestamp();\n\n  addToArray = value => firebase.firestore.FieldValue.arrayUnion(value);\n\n  removeFromArray = value => firebase.firestore.FieldValue.arrayRemove(value);\n\n  deleteField = () => firebase.firestore.FieldValue.delete();\n\n  // User API\n\n  getUserDoc = userId => this.db.collection('users').doc(userId);\n\n  addUser = ({\n    userId,\n    name,\n    username,\n    email,\n    boardIds = [],\n    photoURL = null\n  }) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .set({ userId, name, username, email, boardIds, photoURL });\n\n  updateUser = (userId, newValue = {}) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .update(newValue);\n\n  // Tags API\n\n  addTag = ({ cardId, userId, boardId, text, color = 'default' }) => {\n    const batch = this.db.batch();\n    const userRef = this.getUserDoc(userId);\n    const cardRef = this.getCardDoc(cardId);\n    const boardRef = this.getBoardDoc(boardId);\n\n    batch.update(cardRef, {\n      tags: this.addToArray(text),\n      lastModifiedAt: this.getTimestamp()\n    });\n\n    batch.set(\n      userRef,\n      {\n        tags: {\n          [text]: {\n            text,\n            color,\n            lastUsedAt: this.getTimestamp()\n          }\n        },\n        lastModifiedAt: this.getTimestamp()\n      },\n      { merge: true }\n    );\n\n    batch.set(\n      boardRef,\n      {\n        tags: {\n          [text]: {\n            text,\n            color,\n            lastUsedAt: this.getTimestamp()\n          }\n        },\n        lastModifiedAt: this.getTimestamp()\n      },\n      { merge: true }\n    );\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log('tag added');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  removeTag = ({ cardId, tag }) => {\n    this.updateCard(cardId, {\n      tags: this.removeFromArray(tag)\n    });\n  };\n\n  setTagColor = ({ userId, boardId, tag, color }) => {\n    const batch = this.db.batch();\n    const userRef = this.getUserDoc(userId);\n    const boardRef = this.getBoardDoc(boardId);\n\n    batch.set(\n      userRef,\n      {\n        tags: {\n          [tag]: {\n            color\n          }\n        },\n        lastModifiedAt: this.getTimestamp()\n      },\n      { merge: true }\n    );\n\n    batch.set(\n      boardRef,\n      {\n        tags: {\n          [tag]: {\n            color\n          }\n        },\n        lastModifiedAt: this.getTimestamp()\n      },\n      { merge: true }\n    );\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log('tag color updated');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  // Board API\n\n  getBoardDoc = boardId => this.db.collection('boards').doc(boardId);\n\n  updateBoard = (boardId, newValue = {}) =>\n    this.getBoardDoc(boardId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  addBoard = ({ userId, boardTitle }) => {\n    this.db\n      .collection('boards')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        listIds: [],\n        createdBy: userId,\n        memberIds: [userId],\n        boardTitle\n      })\n      .then(ref => {\n        this.updateUser(userId, {\n          boardIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  // List API\n\n  getListDoc = listId => this.db.collection('lists').doc(listId);\n\n  updateList = (listId, newValue = {}) =>\n    this.getListDoc(listId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  addList = ({ boardId, listTitle }) => {\n    this.db\n      .collection('lists')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        cardIds: [],\n        boardId,\n        listTitle\n      })\n      .then(ref => {\n        this.updateBoard(boardId, {\n          listIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  deleteList = ({ listId, boardId }) => {\n    const batch = this.db.batch();\n    const listRef = this.getListDoc(listId);\n    const boardRef = this.getBoardDoc(boardId);\n\n    // Delete list\n    batch.delete(listRef);\n\n    // Remove list id from board\n    batch.update(boardRef, {\n      listIds: this.removeFromArray(listId),\n      lastModifiedAt: this.getTimestamp()\n    });\n\n    // Delete cards assigned to list\n    this.db\n      .collection('cards')\n      .where('listId', '==', listId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('list deleted');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  // Card API\n\n  getCardDoc = cardId => this.db.collection('cards').doc(cardId);\n\n  addCard = ({ boardId, listId, cardTitle }) => {\n    this.db\n      .collection('cards')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        assignedTo: [],\n        listId,\n        boardId,\n        cardTitle\n      })\n      .then(ref => {\n        this.updateList(listId, {\n          cardIds: this.addToArray(ref.id),\n          lastModifiedAt: this.getTimestamp()\n        });\n      });\n  };\n\n  updateCard = (cardId, newValue = {}) => {\n    this.getCardDoc(cardId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  assignCard = ({ cardId, boardId, userId }) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const boardRef = this.getBoardDoc(boardId);\n    batch.update(cardRef, {\n      assignedTo: this.addToArray(userId),\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(boardRef, {\n      memberIds: this.addToArray(userId),\n      lastModifiedAt: this.getTimestamp()\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('assigned card to member');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  deleteCard = ({ cardId, listId }) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const listRef = this.getListDoc(listId);\n    batch.delete(cardRef);\n    batch.update(listRef, {\n      cardIds: this.removeFromArray(cardId),\n      lastModifiedAt: this.getTimestamp()\n    });\n\n    // Delete subtasks assigned to card\n    this.db\n      .collection('subtasks')\n      .where('cardId', '==', cardId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n      })\n      .then(() => {\n        this.db\n          .collection('comments')\n          .where('cardId', '==', cardId)\n          .get()\n          .then(snapshot => {\n            snapshot.docs.forEach(doc => {\n              batch.delete(doc.ref);\n            });\n            return batch\n              .commit()\n              .then(() => {\n                console.log('card deleted');\n              })\n              .catch(error => {\n                console.error(error);\n              });\n          });\n      });\n  };\n\n  moveCardToList = ({ cardId, origListId, newListId, updatedCardIds }) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const origListRef = this.getListDoc(origListId);\n    const newListRef = this.getListDoc(newListId);\n    batch.update(cardRef, {\n      listId: newListId,\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(origListRef, {\n      cardIds: this.removeFromArray(cardId),\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(newListRef, {\n      cardIds: updatedCardIds,\n      lastModifiedAt: this.getTimestamp()\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('card moved');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  // Subtask API\n\n  getSubtaskDoc = subtaskId => this.db.collection('subtasks').doc(subtaskId);\n\n  addSubtask = ({\n    userId,\n    memberIds = [],\n    boardId = null,\n    cardId = null,\n    dueDate = null,\n    text\n  }) => {\n    this.db\n      .collection('subtasks')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        isCompleted: false,\n        createdBy: userId,\n        assignedTo: [userId, ...memberIds],\n        dueDate,\n        boardId,\n        cardId,\n        text\n      })\n      .then(ref => {\n        if (cardId === null) return;\n        this.updateCard(cardId, {\n          subtaskIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  updateSubtask = (subtaskId, newValue = {}) => {\n    this.getSubtaskDoc(subtaskId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  deleteSubtask = ({ subtaskId, cardId = null }) => {\n    const batch = this.db.batch();\n    const subtaskRef = this.getSubtaskDoc(subtaskId);\n    batch.delete(subtaskRef);\n\n    if (cardId) {\n      const cardRef = this.getCardDoc(cardId);\n      batch.update(cardRef, {\n        subtaskIds: this.removeFromArray(subtaskId),\n        lastModifiedAt: this.getTimestamp()\n      });\n    }\n    return batch\n      .commit()\n      .then(() => {\n        console.log('subtask deleted');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  // Comment API\n  getCommentDoc = commentId => this.db.collection('comments').doc(commentId);\n\n  addComment = ({ userId, memberIds = [], boardId, cardId, text }) => {\n    this.db\n      .collection('comments')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        isPinned: false,\n        from: userId,\n        to: memberIds,\n        likes: [],\n        boardId,\n        cardId,\n        text\n      })\n      .then(ref => {\n        this.updateCard(cardId, {\n          commentIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  updateComment = (commentId, newValue = {}) => {\n    this.getCommentDoc(commentId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n}\n\nexport default Firebase;\n","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const BOARD = '/home/board/:id';\n","import React from 'react';\nimport './Button.scss';\n\nconst Button = ({\n  children,\n  type = 'button',\n  onClick,\n  className = '',\n  color = 'neutral',\n  size = 'md',\n  variant = 'text',\n  disabled,\n  name,\n  iconOnly = false,\n  buttonRef,\n  ...props\n}) => (\n  // eslint-disable-next-line react/button-has-type\n  <button\n    className={`${className} ${color} ${variant} ${!iconOnly ? size : ''} ${\n      iconOnly ? `icon-only icon-only--${size}` : ''\n    }`}\n    type={type}\n    onClick={onClick}\n    disabled={disabled}\n    name={name}\n    ref={buttonRef}\n    {...props}\n  >\n    {children}\n  </button>\n);\n\nButton.defaultProps = {\n  type: 'button',\n  className: '',\n  color: 'neutral',\n  size: 'md',\n  variant: 'text',\n  iconOnly: false\n};\n\nexport default Button;\n","import React from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Button } from '../Button';\nimport './SignOutButton.scss';\n\nconst SignOutButton = ({ firebase }) => (\n  <Button\n    type=\"button\"\n    onClick={firebase.signOut}\n    className=\"btn--sign-out\"\n    color=\"primary\"\n  >\n    Sign Out\n  </Button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        authUser: null\n      };\n    }\n\n    componentDidMount() {\n      const { firebase } = this.props;\n\n      this.listener = firebase.auth.onAuthStateChanged(authUser => {\n        authUser\n          ? this.setState({ authUser })\n          : this.setState({ authUser: null });\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport AuthUserContext from './context';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          this.props.history.push(ROUTES.SIGN_IN);\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n  return compose(\n    withRouter,\n    withFirebase\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from 'react';\nimport featherIcons from '../../assets/feather/feather-sprite.svg';\n\nfunction Icon(props) {\n  return (\n    <svg\n      className={`feather feather-${props.name} ${props.addClass || ''}`.trim()}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n      height=\"24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <use xlinkHref={`${featherIcons}#${props.name}`} />\n    </svg>\n  );\n}\n\nexport default Icon;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { SignOutButton } from '../SignOut';\nimport './Navbar.scss';\nimport { AuthUserContext } from '../Session';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\n\nconst NavLinksAuth = () => (\n  <>\n    <li>\n      <Link to={ROUTES.HOME}>Home</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ADMIN}>Admin</Link>\n    </li>\n    <li>\n      <SignOutButton />\n    </li>\n  </>\n);\n\nconst NavLinksNonAuth = () => (\n  <>\n    <li>\n      <Link to={ROUTES.SIGN_IN}>Log In</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.SIGN_UP}>Get Started</Link>\n    </li>\n  </>\n);\n\nexport default class Navbar extends Component {\n  static defaultProps = {\n    minWidth: 768\n  };\n\n  state = {\n    viewportWidth: window.innerWidth,\n    isMobileNavVisible: false,\n    isTouchEnabled: false\n  };\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick);\n  }\n\n  handleResize = () => {\n    this.setState({\n      viewportWidth: window.innerWidth\n    });\n  };\n\n  toggleMobileNavVisibility = () => {\n    this.setState(prevState => ({\n      isMobileNavVisible: !prevState.isMobileNavVisible\n    }));\n  };\n\n  handleClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    if (!isMobileView) return;\n    if (e.target.matches('button') || e.target.matches('a')) {\n      this.toggleMobileNavVisibility();\n    }\n  };\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n    window.removeEventListener('resize', this.handleResize);\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  handleOutsideClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n    if (\n      !isMobileView ||\n      this.navLinksEl.contains(e.target) ||\n      e.target.matches('button') ||\n      e.target.matches('a')\n    )\n      return;\n    this.setState({\n      isMobileNavVisible: false\n    });\n  };\n\n  handleTouch = () => {\n    const { isTouchEnabled } = this.state;\n    if (isTouchEnabled === true) return;\n    this.setState({\n      isTouchEnabled: true\n    });\n    document.removeEventListener('touchstart', this.handleTouch);\n    document.removeEventListener('click', this.handleOutsideClick);\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  render() {\n    const { viewportWidth, isMobileNavVisible } = this.state;\n    const { minWidth, navRef, navLinksClass } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    return (\n      <nav\n        className={`navbar ${isMobileView ? 'is-collapsed' : ''} ${\n          isMobileView && isMobileNavVisible ? 'show-links' : ''\n        }`}\n        ref={el => (this.navEl = el)}\n      >\n        <span className=\"navbar__logo\">\n          <Link to={ROUTES.LANDING} onClick={this.handleClick}>\n            workflow\n          </Link>\n        </span>\n        {isMobileView && (\n          <Button\n            type=\"button\"\n            color=\"primary\"\n            onClick={this.toggleMobileNavVisibility}\n            iconOnly\n          >\n            <Icon name=\"menu\" />\n          </Button>\n        )}\n        <ul\n          className={`navbar__links ${navLinksClass}`}\n          onClick={this.handleClick}\n          ref={el => (this.navLinksEl = el)}\n        >\n          <AuthUserContext.Consumer>\n            {authUser => (authUser ? <NavLinksAuth /> : <NavLinksNonAuth />)}\n          </AuthUserContext.Consumer>\n        </ul>\n      </nav>\n    );\n  }\n}\n","import React from 'react';\nimport './Input.scss';\n\nconst Input = ({\n  className = '',\n  name,\n  type,\n  value,\n  onFocus,\n  onChange,\n  onInput,\n  placeholder,\n  isRequired,\n  onBlur,\n  autoComplete,\n  inputRef,\n  hideLabel,\n  label,\n  labelClass,\n  onKeyDown\n}) => {\n  return (\n    <>\n      {!hideLabel && (\n        <label htmlFor={name} className={`input__label ${labelClass}`}>\n          {label}\n        </label>\n      )}\n      <input\n        className={className}\n        id={name}\n        name={name}\n        type={type}\n        value={value}\n        onFocus={onFocus}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={isRequired}\n        onBlur={onBlur}\n        autoComplete={autoComplete}\n        ref={inputRef}\n        onInput={onInput}\n        onKeyDown={onKeyDown}\n      />\n    </>\n  );\n};\n\nexport default Input;\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  username: '',\n  name: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { username, email, name, passwordOne } = this.state;\n    this.props.firebase\n      .createUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        const userId = authUser.user.uid;\n        const photoURL = authUser.user.photoURL || null;\n        return this.props.firebase.addUser({\n          userId,\n          name,\n          username,\n          email,\n          photoURL\n        });\n      })\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const {\n      username,\n      name,\n      email,\n      passwordOne,\n      passwordTwo,\n      error\n    } = this.state;\n    const isInvalid =\n      passwordOne === '' ||\n      passwordTwo === '' ||\n      email === '' ||\n      username === '' ||\n      passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"name\"\n          label=\"Full Name\"\n          value={name}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"username\"\n          label=\"Username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordOne\"\n          label=\"Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          label=\"Confirm Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Create Account\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignUpForm);\n","import React from 'react';\nimport './UserFormPage.scss';\n\nconst UserFormPage = ({ title, children }) => (\n  <main className=\"user-form__container\">\n    <h1 className=\"user-form__title\">{title}</h1>\n    {children}\n  </main>\n);\n\nexport default UserFormPage;\n","import React from 'react';\nimport SignUpForm from './SignUpForm';\nimport { UserFormPage } from '../UserFormPage';\n\nconst SignUpPage = () => (\n  <UserFormPage title=\"Create an account\">\n    <SignUpForm />\n  </UserFormPage>\n);\n\nexport default SignUpPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nexport { default as SignUpPage } from './SignUp';\nexport { default as SignUpForm } from './SignUpForm';\nexport { SignUpLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email, password } = this.state;\n    this.props.firebase\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  enableGoogleLogin = e => {\n    const { signInWithGoogle } = this.props.firebase;\n    signInWithGoogle();\n    e.preventDefault();\n  }\n\n  render() {\n    const { email, password, error } = this.state;\n    const isInvalid = password === '' || email === '';\n    return (\n      <form className=\"user-form\">\n      {/*\n        <Button\n          type=\"click\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.enableGoogleLogin}\n        >\n          Continue with Google\n        </Button>\n        <Button\n          type=\"click\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.enableGithubLogin}\n        >\n          Continue with Github\n        </Button>\n      */}\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"password\"\n          label=\"Password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Log In\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignInForm);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null\n};\n\nclass PasswordForgetForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .passwordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, error } = this.state;\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Reset My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordForgetForm);\n","import React from 'react';\nimport PasswordForgetForm from './PasswordForgetForm';\nimport { UserFormPage } from '../UserFormPage';\n\nconst PasswordForgetPage = () => (\n  <UserFormPage title=\"Forgot your password?\">\n    <PasswordForgetForm />\n  </UserFormPage>\n);\n\nexport default PasswordForgetPage;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport {default as PasswordForgetForm} from './PasswordForgetForm';\nexport {default as PasswordForgetPage} from './PasswordForget';\nexport {PasswordForgetLink};","import React from 'react';\nimport SignInForm from './SignInForm';\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { UserFormPage } from '../UserFormPage';\n\nconst SignInPage = () => (\n  <UserFormPage title=\"Log In\">\n    <SignInForm />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </UserFormPage>\n);\n\nexport default SignInPage;\n","import { Firebase } from '../components/Firebase';\n\nconst firebase = new Firebase();\n\nexport default firebase;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\n\nexport const loadUserData = user => {\n  return {\n    type: types.LOAD_USER_DATA,\n    user\n  };\n};\n\nexport const loadUsersById = usersById => {\n  return {\n    type: types.LOAD_USERS_BY_ID,\n    usersById\n  };\n};\n\nexport const fetchUsersById = () => {\n  return async dispatch => {\n    try {\n      const usersById = await firebase.db\n        .collection('users')\n        .get()\n        .then(snapshot => {\n          const users = {};\n          snapshot.forEach(doc => {\n            users[doc.id] = {\n              userId: doc.id,\n              ...doc.data()\n            };\n          });\n          return users;\n        });\n      dispatch(loadUsersById(usersById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserData = userId => {\n  return async dispatch => {\n    try {\n      const user = await firebase\n        .getUserDoc(userId)\n        .get()\n        .then(doc => doc.data());\n      dispatch(loadUserData(user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addUser = ({ userId, userData }) => {\n  return {\n    type: types.ADD_USER,\n    userId,\n    userData\n  };\n};\n\nexport const deleteUser = userId => {\n  return {\n    type: types.DELETE_USER,\n    userId\n  };\n};\n\nexport const updateUser = ({ userId, userData }) => {\n  return {\n    type: types.UPDATE_USER,\n    userId,\n    userData\n  };\n};\n","export const LOAD_USER_DATA = 'LOAD_USER_DATA';\nexport const LOAD_USERS_BY_ID = 'LOAD_USERS_BY_ID';\nexport const ADD_USER = 'ADD_USER';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const DELETE_USER = 'DELETE_USER';\n","export const getUsersById = state => {\n  return state.usersById;\n};\n\nexport const getUserData = (state, userId) => {\n  return state.usersById[userId];\n};\n\nexport const getCurrentUserData = state => {\n  const currentUserId = state.current.userId;\n  return state.usersById[currentUserId];\n};\n\n// returns array of all users\nexport const getUsersArray = state => {\n  const { usersById } = state;\n  return Object.keys(usersById).map(userId => {\n    return {\n      userId,\n      ...usersById[userId]\n    };\n  });\n};\n\n// returns subset of users\nexport const getMembersArray = (state, memberIds) => {\n  const { usersById } = state;\n  if (!memberIds) return [];\n  return memberIds.map(memberId => usersById[memberId]);\n};\n\nexport const getUserTags = state => {\n  \n}","import * as types from './types';\n\nconst usersById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_USERS_BY_ID: {\n      const { usersById } = action;\n      return {\n        ...state,\n        ...usersById\n      };\n    }\n    case types.LOAD_USER_DATA: {\n      const { user } = action;\n      return {\n        ...state,\n        ...user\n      };\n    }\n    case types.ADD_USER: {\n      const { userId, userData } = action;\n      return {\n        ...state,\n        [userId]: {\n          userId,\n          ...userData\n        }\n      };\n    }\n    case types.DELETE_USER: {\n      const { userId } = action;\n      const { [userId]: deletedUser, ...restOfUsers } = state;\n      return restOfUsers;\n    }\n    case types.UPDATE_USER: {\n      const { userId, userData } = action;\n      return {\n        ...state,\n        [userId]: {\n          ...state[userId],\n          ...userData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default usersById;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const selectUser = userId => {\n  return {\n    type: types.SELECT_USER,\n    userId\n  };\n};\n\nexport const selectBoard = boardId => {\n  return {\n    type: types.SELECT_BOARD,\n    boardId\n  };\n};\n\nexport const selectList = listId => {\n  return {\n    type: types.SELECT_LIST,\n    listId\n  };\n};\n\nexport const selectCard = cardId => {\n  return {\n    type: types.SELECT_CARD,\n    cardId\n  };\n};\n","export const SELECT_BOARD = 'SELECT_BOARD';\nexport const SELECT_LIST = 'SELECT_LIST';\nexport const SELECT_CARD = 'SELECT_CARD';\nexport const SELECT_USER = 'SELECT_USER';\n","export const getCurrentUserId = state => {\n  return state.current.userId;\n};\n\nexport const getCurrentBoardId = state => {\n  return state.current.boardId;\n};\n\nexport const getCurrentListId = state => {\n  return state.current.listId;\n};\n\nexport const getCurrentCardId = state => {\n  return state.current.cardId;\n};\n\nexport const getCurrent = state => {\n  return state.current;\n};\n\nexport const getMergedTags = state => {\n  const { boardId, userId } = state.current;\n  const { boardsById, usersById } = state;\n  const { tags: boardTags } = boardsById[boardId];\n  const { tags: userTags } = usersById[userId];\n  const mergedTags = { ...userTags, ...boardTags };\n  return Object.keys(mergedTags).map(tag => mergedTags[tag]);\n};\n","import React, { Component } from 'react';\n\nexport default class BoardGrid extends Component {\n  render() {\n    return <ul className=\"board-grid\">{this.props.children}</ul>;\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BoardTile = props => {\n  const { boardId, boardTitle, onClick } = props;\n  return (\n    <li className=\"board-grid__tile\">\n      <Link\n        className=\"board-grid__link\"\n        to={`/home/board/${boardId}`}\n        onClick={onClick}\n      >\n        <span className=\"board-grid__title\">{boardTitle}</span>\n      </Link>\n    </li>\n  );\n};\n\nexport default BoardTile;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadBoardsById = boardsById => {\n  return {\n    type: types.LOAD_BOARDS_BY_ID,\n    boardsById\n  };\n};\n\nexport const fetchBoardsById = userId => {\n  return async dispatch => {\n    try {\n      const boardsById = await firebase.db\n        .collection('boards')\n        .where('memberIds', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const boardsById = {};\n          snapshot.forEach(doc => {\n            boardsById[doc.id] = doc.data();\n          });\n          return boardsById;\n        });\n      dispatch(loadBoardsById(boardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateBoardsById = (boardId, boardData) => {\n  return {\n    type: types.UPDATE_BOARDS_BY_ID,\n    boardId,\n    boardData\n  };\n};\n\nexport const reorderLists = (boardId, listIds) => {\n  return {\n    type: types.REORDER_LISTS,\n    boardId,\n    listIds\n  };\n};\n\nexport const updateListIds = (boardId, listIds) => {\n  return {\n    type: types.UPDATE_LIST_IDS,\n    boardId,\n    listIds\n  };\n};\n\nexport const updateBoardTags = (boardId, tags) => {\n  return {\n    type: types.UPDATE_BOARD_TAGS,\n    boardId,\n    tags\n  };\n};\n\n","export const LOAD_BOARDS_BY_ID = 'LOAD_BOARDS_BY_ID';\nexport const UPDATE_BOARDS_BY_ID = 'UPDATE_BOARDS_BY_ID';\nexport const REORDER_LISTS = 'REORDER_LISTS';\nexport const UPDATE_LIST_IDS = 'UPDATE_LIST_IDS';\nexport const UPDATE_BOARD_TAGS = 'UPDATE_BOARD_TAGS';\nexport const ADD_TAG = 'ADD_TAG';\n","export const getBoardsById = state => {\n  return state.boardsById;\n};\n\nexport const getBoardsArray = state => {\n  const { boardsById } = state;\n  return Object.keys(boardsById).map(boardId => {\n    return {\n      boardId,\n      ...boardsById[boardId]\n    };\n  });\n};\n\nexport const getBoard = (state, boardId) => {\n  const { boardsById } = state;\n  return boardsById[boardId];\n};\n\nexport const getBoardTags = (state, boardId) => {\n  const { boardsById } = state;\n  return boardsById[boardId].tags;\n};\n","import * as types from './types';\n\nconst boardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_BOARDS_BY_ID: {\n      const { boardsById } = action;\n      return {\n        ...state,\n        ...boardsById\n      };\n    }\n    case types.UPDATE_BOARDS_BY_ID: {\n      const { boardId, boardData } = action;\n      return {\n        ...state,\n        [boardId]: {\n          ...state[boardId],\n          ...boardData\n        }\n      };\n    }\n    case types.UPDATE_LIST_IDS:\n    case types.REORDER_LISTS: {\n      const { boardId, listIds } = action;\n      return {\n        ...state,\n        [boardId]: {\n          ...state[boardId],\n          listIds\n        }\n      };\n    }\n    case types.UPDATE_BOARD_TAGS: {\n      const { boardId, tags } = action;\n      return {\n        ...state,\n        [boardId]: {\n          ...state[boardId],\n          tags\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default boardsById;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport BoardGrid from './BoardGrid';\nimport BoardTile from './BoardTile';\nimport './BoardGrid.scss';\nimport { withAuthorization } from '../Session';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Icon } from '../Icon';\nimport { userSelectors } from '../../ducks/users';\n\nclass BoardGridContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const { userId, firebase, updateBoardsById } = this.props;\n    this.boardObserver = firebase.db\n      .collection('boards')\n      .where('memberIds', 'array-contains', userId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const board = {\n            [change.doc.id]: change.doc.data()\n          };\n          updateBoardsById(board);\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.boardObserver();\n  }\n\n  render() {\n    const { boardsArray, selectBoard } = this.props;\n    const boardTiles = boardsArray.map(board => {\n      const { boardTitle, boardId } = board;\n      return (\n        <BoardTile\n          key={boardId}\n          boardTitle={boardTitle}\n          boardId={boardId}\n          onClick={() => selectBoard(boardId)}\n        />\n      );\n    });\n    return (\n      <section>\n        <BoardGrid>\n          {boardTiles}\n          <button\n            type=\"button\"\n            className=\"board-grid__tile board-grid__btn--add\"\n            onClick={this.props.openBoardComposer}\n          >\n            <Icon name=\"plus-circle\" />\n            Create board\n          </button>\n        </BoardGrid>\n      </section>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    userId: currentSelectors.getCurrentUserId(state),\n    user: userSelectors.getUserData(state, ownProps.userId),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardGridContainer)\n);\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport './Modal.scss';\n\nconst Modal = ({\n  onModalClose,\n  children,\n  className = '',\n  onModalClick,\n  size = 'md',\n  id\n}) => {\n  return (\n    <div className=\"modal\" onClick={onModalClick}>\n      <div\n        id={id}\n        className={`modal__content ${className} modal__content--${size}`}\n      >\n        <Button\n          type=\"button\"\n          className=\"modal__btn--close\"\n          onClick={onModalClose}\n          iconOnly\n        >\n          <Icon name=\"x\" />\n        </Button>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport { Modal } from '../Modal';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\nimport './BoardComposer.scss';\n\nconst INITIAL_STATE = {\n  boardTitle: ''\n};\n\nexport default class BoardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { boardTitle } = this.state;\n    const { handleSubmit, onClose } = this.props;\n    this.props.handleSubmit(boardTitle);\n    this.props.onClose();\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { boardTitle } = this.state;\n    return (\n      <Modal onModalClose={this.props.onClose} size=\"sm\">\n        <form onSubmit={this.onSubmit}>\n          <Input\n            name=\"boardTitle\"\n            title=\"Board Title\"\n            value={boardTitle}\n            onChange={this.onChange}\n            type=\"text\"\n          />\n          <Button\n            className=\"board-composer__btn--add\"\n            type=\"submit\"\n            onClick={this.onSubmit}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Create Board\n          </Button>\n        </form>\n      </Modal>\n    );\n  }\n}\n","export const CARD = 'CARD';\nexport const LIST = 'LIST';\nexport const TASK = 'TASK';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input } from '../Input';\nimport { Icon } from '../Icon';\nimport { withAuthorization } from '../Session';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Button } from '../Button';\nimport './ListComposer.scss';\n\nconst INITIAL_STATE = {\n  listTitle: '',\n  isActive: false\n};\n\nclass ListComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ listTitle: '' });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { listTitle } = this.state;\n    const { boardId } = this.props;\n    this.props.firebase.addList({ boardId, listTitle });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = e => {\n    if (e.target.value === '') {\n      this.setState({\n        isActive: false\n      });\n    }\n  };\n\n  render() {\n    const { listTitle, isActive } = this.state;\n    return (\n      <div\n        className={`list-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"list-composer__form\" onSubmit={this.onSubmit}>\n          <Input\n            onChange={this.onChange}\n            value={listTitle}\n            placeholder={isActive ? 'Enter list title...' : 'Add a list'}\n            required\n            name=\"listTitle\"\n            hideLabel\n            className=\"list-composer__input\"\n          />\n          {isActive && (\n            <div className=\"list-composer__footer\">\n              <Button\n                className=\"list-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add List\n              </Button>\n              <Button\n                className=\"list-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListComposer)\n);\n","import React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { ListComposer } from '../ListComposer';\n\nconst Board = props => {\n  const { boardId, children } = props;\n  return (\n    <Droppable\n      droppableId={boardId}\n      type={droppableTypes.LIST}\n      direction=\"horizontal\"\n    >\n      {provided => (\n        <div\n          className=\"board\"\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n        >\n          {children}\n          {provided.placeholder}\n          <ListComposer boardId={boardId} />\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nexport default Board;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadListsById = listsById => {\n  return {\n    type: types.LOAD_LISTS_BY_ID,\n    listsById\n  };\n};\n\nexport const fetchListsById = boardId => {\n  return async dispatch => {\n    try {\n      const listsById = await firebase.db\n        .collection('lists')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const listsById = {};\n          snapshot.forEach(doc => {\n            listsById[doc.id] = doc.data();\n          });\n          return listsById;\n        });\n      dispatch(loadListsById(listsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateListsById = list => {\n  return {\n    type: types.UPDATE_LISTS_BY_ID,\n    list\n  };\n};\n","export const LOAD_LISTS_BY_ID = 'LOAD_LISTS_BY_ID';\nexport const FETCH_LISTS_BY_ID = 'FETCH_LISTS_BY_ID';\nexport const UPDATE_LISTS_BY_ID = 'UPDATE_LISTS_BY_ID';\nexport const DELETE_CARD = 'DELETE_CARD';\n","export const getListsById = state => {\n  return state.listsById;\n};\n\nexport const getListsArray = state => {\n  const { listsById, boardsById, current } = state;\n  const { boardId } = current;\n  const board = boardsById[boardId];\n  if (!board) return null;\n  const { listIds } = board;\n\n  return listIds.map(listId => {\n    return {\n      listId,\n      ...listsById[listId]\n    };\n  });\n};\n","import * as types from './types';\n\nconst listsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_LISTS_BY_ID: {\n      const { listsById } = action;\n      return {\n        ...state,\n        ...listsById\n      };\n    }\n    case types.UPDATE_LISTS_BY_ID: {\n      const { list } = action;\n      return {\n        ...state,\n        ...list\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default listsById;\n","export const getCardsById = state => {\n  return state.cardsById;\n};\n\nexport const getCardsArray = (state, ownProps) => {\n  const { cardsById } = state;\n  const { cardIds } = ownProps;\n  return cardIds.map(cardId => cardsById[cardId]);\n};\n\nexport const getCardTags = (state, ownProps) => {\n  const { boardsById } = state;\n  const { boardId, tags: cardTags } = ownProps;\n  const { tags: boardTags } = boardsById[boardId];\n\n  if (!cardTags || !boardTags) return [];\n  return cardTags.map(cardTag => boardTags[cardTag]);\n};\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadCardsById = cardsById => {\n  return {\n    type: types.LOAD_CARDS_BY_ID,\n    cardsById\n  };\n};\n\nexport const fetchCardsById = boardId => {\n  return async dispatch => {\n    try {\n      const cardsById = await firebase.db\n        .collection('cards')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const cards = {};\n          snapshot.forEach(doc => {\n            cards[doc.id] = {\n              cardId: doc.id,\n              ...doc.data()\n            };\n          });\n          return cards;\n        });\n      dispatch(loadCardsById(cardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addCard = ({ cardId, cardData }) => {\n  return {\n    type: types.ADD_CARD,\n    cardId,\n    cardData\n  };\n};\n\nexport const deleteCard = cardId => {\n  return {\n    type: types.DELETE_CARD,\n    cardId\n  };\n};\n\nexport const updateCard = ({ cardId, cardData }) => {\n  return {\n    type: types.UPDATE_CARD,\n    cardId,\n    cardData\n  };\n};\n\nexport const updateCardsById = card => {\n  return {\n    type: types.UPDATE_CARDS_BY_ID,\n    card\n  };\n};\n\nexport const addTag = (cardId, tag) => {\n  return {\n    type: types.ADD_TAG,\n    cardId,\n    tag\n  };\n};\n","export const ADD_CARD = 'ADD_CARD';\nexport const DELETE_CARD = 'DELETE_CARD';\nexport const UPDATE_CARD = 'UPDATE_CARD';\nexport const SET_CARD_DUE_DATE = 'SET_CARD_DUE_DATE';\nexport const ADD_CARD_SUBTASK = 'ADD_CARD_SUBTASK';\nexport const REMOVE_CARD_SUBTASK = 'REMOVE_CARD_SUBTASK';\nexport const CHANGE_CARD_DESCRIPTION = 'CHANGE_CARD_DESCRIPTION';\nexport const SET_CARD_COLOR = 'SET_CARD_COLOR';\nexport const MOVE_CARD = 'MOVE_CARD';\nexport const LOAD_CARDS_BY_ID = 'LOAD_CARDS_BY_ID';\nexport const UPDATE_CARDS_BY_ID = 'UPDATE_CARDS_BY_ID';\nexport const ADD_TAG = 'ADD_TAG';\n","import * as types from './types';\n\nconst cardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_CARDS_BY_ID: {\n      const { cardsById } = action;\n      return {\n        ...state,\n        ...cardsById\n      };\n    }\n    case types.UPDATE_CARDS_BY_ID: {\n      const { card } = action;\n      console.log('cards updated');\n      return {\n        ...state,\n        ...card\n      };\n    }\n    case types.ADD_CARD: {\n      const { cardId, cardData } = action;\n      return {\n        ...state,\n        [cardId]: {\n          cardId,\n          ...cardData\n        }\n      };\n    }\n    case types.DELETE_CARD: {\n      const { cardId } = action;\n      const { [cardId]: deletedCard, ...restOfCards } = state;\n      return restOfCards;\n    }\n    case types.UPDATE_CARD: {\n      const { cardId, cardData } = action;\n      return {\n        ...state,\n        [cardId]: {\n          ...state[cardId],\n          ...cardData\n        }\n      };\n    }\n    case types.ADD_TAG: {\n      const { cardId, tag } = action;\n      return {\n        ...state,\n        [cardId]: {\n          ...state[cardId],\n          tags: [...state[cardId].tags, tag]\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default cardsById;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadSubtasksById = subtasksById => {\n  return {\n    type: types.LOAD_SUBTASKS_BY_ID,\n    subtasksById\n  };\n};\n\nexport const fetchSubtasksById = () => {\n  return async dispatch => {\n    try {\n      const subtasksById = await firebase.db\n        .collection('subtasks')\n        .get()\n        .then(snapshot => {\n          const subtasks = {};\n          snapshot.forEach(doc => {\n            subtasks[doc.id] = {\n              subtaskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return subtasks;\n        });\n      dispatch(loadSubtasksById(subtasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateSubtasksById = subtask => {\n  return {\n    type: types.UPDATE_SUBTASKS_BY_ID,\n    subtask\n  };\n};\n\nexport const fetchCardSubtasks = boardId => {\n  return async dispatch => {\n    try {\n      const subtasksById = await firebase.db\n        .collection('subtasks')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const subtasks = {};\n          snapshot.forEach(doc => {\n            subtasks[doc.id] = {\n              subtaskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return subtasks;\n        });\n      dispatch(loadSubtasksById(subtasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserSubtasks = userId => {\n  return async dispatch => {\n    try {\n      const subtasksById = await firebase.db\n        .collection('subtasks')\n        .where('assignedTo', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const subtasks = {};\n          snapshot.forEach(doc => {\n            subtasks[doc.id] = {\n              subtaskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return subtasks;\n        });\n      dispatch(loadSubtasksById(subtasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addSubtask = ({ subtaskId, subtaskData }) => {\n  return {\n    type: types.ADD_SUBTASK,\n    subtaskId,\n    subtaskData\n  };\n};\n\nexport const deleteSubtask = subtaskId => {\n  return {\n    type: types.DELETE_SUBTASK,\n    subtaskId\n  };\n};\n\nexport const updateSubtask = ({ subtaskId, subtaskData }) => {\n  return {\n    type: types.UPDATE_SUBTASK,\n    subtaskId,\n    subtaskData\n  };\n};\n","export const LOAD_SUBTASKS_BY_ID = 'LOAD_SUBTASKS_BY_ID';\nexport const FETCH_SUBTASKS_BY_ID = 'FETCH_SUBTASKS_BY_ID';\nexport const UPDATE_SUBTASKS_BY_ID = 'UPDATE_SUBTASKS_BY_ID';\nexport const ADD_SUBTASK = 'ADD_SUBTASK';\nexport const UPDATE_SUBTASK = 'UPDATE_SUBTASK';\nexport const DELETE_SUBTASK = 'DELETE_SUBTASK';\n","export const getSubtasksById = state => {\n  const { subtasksById } = state;\n  return subtasksById;\n};\n\nexport const getSubtasksArray = (state, subtaskIds) => {\n  const { subtasksById } = state;\n  if (!subtaskIds) return [];\n\n  return subtaskIds.map(subtaskId => {\n    return subtasksById[subtaskId];\n  });\n};\n","import * as types from './types';\n\nconst subtasksById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_SUBTASKS_BY_ID: {\n      const { subtasksById } = action;\n      return {\n        ...state,\n        ...subtasksById\n      };\n    }\n    case types.ADD_SUBTASK: {\n      const { subtaskId, subtaskData } = action;\n      return {\n        ...state,\n        [subtaskId]: {\n          subtaskId,\n          ...subtaskData\n        }\n      };\n    }\n    case types.DELETE_SUBTASK: {\n      const { subtaskId } = action;\n      const { [subtaskId]: deletedSubtask, ...restOfSubtasks } = state;\n      return restOfSubtasks;\n    }\n    case types.UPDATE_SUBTASK: {\n      const { subtaskId, subtaskData } = action;\n      return {\n        ...state,\n        [subtaskId]: {\n          ...state[subtaskId],\n          ...subtaskData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default subtasksById;\n","import React, { Component, createRef } from 'react';\nimport './Textarea.scss';\n\nexport default class Textarea extends Component {\n  static defaultProps = {\n    isAutoHeightResizeEnabled: true\n  };\n\n  constructor(props) {\n    super(props);\n    this.textareaEl = createRef();\n  }\n\n  componentDidMount() {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n    this.autoHeightResize();\n  }\n\n  autoHeightResize = () => {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n\n    this.textareaEl.current.style.height = '0px'; // resets scroll height\n    this.textareaEl.current.style.height = `${\n      this.textareaEl.current.scrollHeight\n    }px`;\n  };\n\n  render() {\n    const {\n      className,\n      name,\n      value,\n      onChange,\n      placeholder,\n      isRequired,\n      onBlur,\n      onFocus,\n      onKeyDown,\n      onDragStart,\n      isReadOnly\n    } = this.props;\n    return (\n      <textarea\n        className={`textarea ${className}`}\n        id={name}\n        name={name}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={isRequired}\n        onBlur={onBlur}\n        onInput={this.autoHeightResize}\n        ref={this.textareaEl}\n        onFocus={onFocus}\n        onKeyDown={onKeyDown}\n        onDragStart={onDragStart}\n        readOnly={isReadOnly}\n      />\n    );\n  }\n}\n","export const BACKSPACE = 'Backspace';\nexport const ENTER = 'Enter';\nexport const TAB = 'Tab';\nexport const ARROW_DOWN = 'ArrowDown';\nexport const ARROW_UP = 'ArrowUp';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon } from '../Icon';\nimport { withFirebase } from '../Firebase';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport * as keys from '../../constants/keys';\nimport './CardComposer.scss';\n\nconst INITIAL_STATE = {\n  cardTitle: '',\n  isActive: false\n};\n\nclass CardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ cardTitle: '' });\n  };\n\n  onSubmit = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { cardTitle } = this.state;\n    const { boardId } = this.props.current;\n    const { listId } = this.props;\n    this.props.firebase.addCard({ boardId, listId, cardTitle });\n    this.resetForm();\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onBlur = e => {\n    if (e.target.value !== '') return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const { cardTitle, isActive } = this.state;\n\n    return (\n      <div\n        className={`card-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"card-composer__form\" onSubmit={this.onSubmit}>\n          <Textarea\n            onChange={this.onChange}\n            value={cardTitle}\n            placeholder={isActive ? 'Enter card title...' : 'Add a card'}\n            isRequired\n            name=\"cardTitle\"\n            className=\"card-composer__textarea\"\n            isAutoHeightResizeEnabled={false}\n            onKeyDown={this.onSubmit}\n          />\n          {isActive && (\n            <div className=\"card-composer__footer\">\n              <Button\n                className=\"card-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add Card\n              </Button>\n              <Button\n                className=\"card-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardComposer)\n);\n","import React from 'react';\nimport './Menu.scss';\n\nconst Menu = ({ children, onClick, className = '', menuRef }) => {\n  return (\n    <ul className={`menu ${className}`} onClick={onClick} ref={menuRef}>\n      {children}\n    </ul>\n  );\n};\n\nexport default Menu;\n","import React from 'react';\nimport './Menu.scss';\n\nconst MenuItem = ({ children, className = '' }) => {\n  return <li className={`menu__item ${className}`}>{children}</li>;\n};\n\nexport default MenuItem;\n","import React, { Component } from 'react';\n\nexport default class Popover extends Component {\n  state = {\n    isTouchEnabled: false\n  };\n\n  componentDidMount() {\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick, false);\n  }\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  handleOutsideClick = e => {\n    const { onOutsideClick } = this.props;\n    onOutsideClick(e.target);\n  };\n\n  handleTouch = () => {\n    this.setState({\n      isTouchEnabled: true\n    });\n    // remove touch handler to prevent unnecessary refires\n    document.removeEventListener('touchstart', this.handleTouch);\n    // remove outside click handler from click events\n    document.removeEventListener('click', this.handleOutsideClick);\n    // reattach outside click handler to touchstart events\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  render() {\n    const { className, onClick, style, children } = this.props;\n    return (\n      <div className={`popover ${className}`} onClick={onClick} style={style}>\n        {children}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from '../Button';\nimport Popover from './Popover';\nimport './Popover.scss';\n\nexport default class PopoverWrapper extends Component {\n  state = {\n    isOpen: false\n  };\n\n  static defaultProps = {\n    wrapperClass: '',\n    popoverClass: '',\n    buttonProps: {},\n    align: 'left',\n    anchorEl: null\n  };\n\n  handleOutsideClick = target => {\n    if (this.componentEl && !this.componentEl.contains(target)) {\n      this.setState({\n        isOpen: false\n      });\n    }\n  };\n\n  toggleOpen = () => {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  };\n\n  handleClose = e => {\n    if (e.target.matches('input')) return;\n    this.setState(prevState => ({\n      isOpen: false\n    }));\n  };\n\n  render() {\n    const {\n      children,\n      alignInner,\n      alignOuter,\n      buttonProps,\n      wrapperClass,\n      popoverClass,\n      anchorEl\n    } = this.props;\n    const { isOpen } = this.state;\n\n    let popoverWrapperStyle = null;\n\n    if (anchorEl) {\n      const { offsetTop, offsetLeft } = anchorEl;\n      popoverWrapperStyle = {\n        position: 'absolute',\n        top: offsetTop,\n        [alignOuter]: offsetLeft\n      };\n    }\n\n    return (\n      <div\n        className={`popover-wrapper ${\n          isOpen ? 'is-active' : ''\n        } ${wrapperClass}`}\n        ref={el => (this.componentEl = el)}\n        style={popoverWrapperStyle}\n      >\n        <Button\n          type=\"button\"\n          onClick={this.toggleOpen}\n          buttonRef={this.props.buttonRef}\n          {...buttonProps}\n        />\n        {isOpen && (\n          <Popover\n            className={`align-${alignInner} ${popoverClass}`}\n            onClick={this.handleClose}\n            onOutsideClick={this.handleOutsideClick}\n          >\n            {children}\n          </Popover>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport './Card.scss';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { PopoverWrapper } from '../Popover';\nimport { Menu, MenuItem } from '../Menu';\n\nexport default class Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleCardClick = e => {\n    if (e.target.matches('button') || e.target.matches('a')) return;\n    const { cardId, onCardClick } = this.props;\n    onCardClick(cardId);\n  };\n\n  render() {\n    const { cardTitle, cardId, cardIndex } = this.props;\n    return (\n      <Draggable draggableId={cardId} index={cardIndex}>\n        {provided => (\n            <div\n              className=\"card\"\n              onClick={this.handleCardClick}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              ref={provided.innerRef}\n            >\n              <div className=\"card__header\" ref={el => (this.headerEl = el)}>\n                <div className=\"card__tags\" />\n                <h3 className=\"card__title\">{cardTitle}</h3>\n              </div>\n              <div className=\"card__footer\">\n                <div className=\"card__labels\" />\n              </div>\n            </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { Card } from '../Card';\n\nexport default class Cards extends Component {\n  static propTypes = {\n    listId: PropTypes.string.isRequired\n  };\n\n  /*\n\n  shouldComponentUpdate(nextProps) {\n    if (this.props.cards === nextProps.cards) {\n      return false;\n    }\n    return true;\n  }\n*/\n  componentDidUpdate(prevProps) {\n    if (this.props.cards.length > prevProps.cards.length) {\n      this.scrollToBottom();\n    }\n  }\n\n  scrollToBottom = () => {\n    this.listEnd.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  render() {\n    const { listId, cards, style, onCardClick, onCardDelete } = this.props;\n\n    return (\n      <Droppable droppableId={listId} type={droppableTypes.CARD}>\n        {(provided, snapshot) => (\n          <div\n            className=\"list__content\"\n            ref={provided.innerRef}\n            style={{\n              ...style,\n              minHeight: snapshot.isDraggingOver ? 80 : 16\n            }}\n            {...provided.droppableProps}\n          >\n            {cards.map((card, cardIndex) => {\n              const { cardId, cardTitle } = card;\n              return (\n                <Card\n                  key={cardId}\n                  cardTitle={cardTitle}\n                  cardId={cardId}\n                  cardIndex={cardIndex}\n                  listId={listId}\n                  onCardClick={onCardClick}\n                  onCardDelete={onCardDelete}\n                />\n              );\n            })}\n            {provided.placeholder}\n            <div\n              style={{ float: 'left', clear: 'both' }}\n              ref={el => (this.listEnd = el)}\n            />\n          </div>\n        )}\n      </Droppable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { CardComposer } from '../CardComposer';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\nimport { Input } from '../Input';\nimport Cards from './Cards';\nimport './List.scss';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listTitle: this.props.listTitle\n    };\n  }\n\n  handleListDelete = e => {\n    e.preventDefault();\n    const { listId, boardId, firebase } = this.props;\n    firebase.deleteList({ listId, boardId });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onBlur = e => {\n    const { listTitle, listId, firebase } = this.props;\n    const { listTitle: newListTitle } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newListTitle !== listTitle) {\n      firebase.updateList(listId, {\n        listTitle: newListTitle\n      });\n      console.log('updated!');\n    }\n  };\n\n  render() {\n    const {\n      cards,\n      onCardClick,\n      listId,\n      listIndex,\n      isFetchingCards\n    } = this.props;\n    if (isFetchingCards) return null;\n\n    const { listTitle, viewportHeight } = this.state;\n\n    return (\n      <Draggable draggableId={listId} index={listIndex}>\n        {provided => (\n          <>\n            <section\n              className=\"list\"\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <header\n                className=\"list__header\"\n                ref={el => (this.listHeaderEl = el)}\n              >\n                <Input\n                  className=\"list__input--title\"\n                  name=\"listTitle\"\n                  type=\"text\"\n                  value={listTitle}\n                  onChange={this.onChange}\n                  required\n                  hideLabel\n                  onBlur={this.onBlur}\n                />\n                <PopoverWrapper\n                  wrapperClass=\"list__popover-wrapper\"\n                  popoverClass=\"list__popover\"\n                  alignInner=\"left\"\n                  buttonProps={{\n                    size: 'medium',\n                    iconOnly: true,\n                    className: 'list__btn--more-actions',\n                    children: <Icon name=\"more-vertical\" />\n                  }}\n                >\n                  <Menu>\n                    <MenuItem>\n                      <a href=\"\" onClick={this.handleListDelete}>\n                        Delete\n                      </a>\n                    </MenuItem>\n                  </Menu>\n                </PopoverWrapper>\n              </header>\n              <Cards\n                cards={cards}\n                listId={listId}\n                onCardClick={onCardClick}\n                onCardDelete={this.handleCardDelete}\n              />\n              {provided.placeholder}\n              <CardComposer listId={listId} />\n            </section>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    cards: cardSelectors.getCardsArray(state, ownProps)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(List)\n);\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadCommentsById = commentsById => {\n  return {\n    type: types.LOAD_COMMENTS_BY_ID,\n    commentsById\n  };\n};\n\nexport const fetchCommentsById = () => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateCommentsById = comment => {\n  return {\n    type: types.UPDATE_COMMENTS_BY_ID,\n    comment\n  };\n};\n\nexport const fetchCardComments = cardId => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .where('cardId', '==', cardId)\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserComments = userId => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .where('to', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addComment = ({ commentId, commentData }) => {\n  return {\n    type: types.ADD_COMMENT,\n    commentId,\n    commentData\n  };\n};\n\nexport const deleteComment = commentId => {\n  return {\n    type: types.DELETE_COMMENT,\n    commentId\n  };\n};\n\nexport const updateComment = ({ commentId, commentData }) => {\n  return {\n    type: types.UPDATE_COMMENT,\n    commentId,\n    commentData\n  };\n};\n","export const LOAD_COMMENTS_BY_ID = 'LOAD_COMMENTS_BY_ID';\nexport const FETCH_COMMENTS_BY_ID = 'FETCH_COMMENTS_BY_ID';\nexport const UPDATE_COMMENTS_BY_ID = 'UPDATE_COMMENTS_BY_ID';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const UPDATE_COMMENT = 'UPDATE_COMMENT';\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\n","export const getCommentsById = state => {\n  const { commentsById } = state;\n  return commentsById;\n};\n\nexport const getCommentsArray = (state, commentIds) => {\n  const { commentsById } = state;\n  if (!commentIds) return [];\n\n  return commentIds.map(commentId => {\n    return commentsById[commentId];\n  });\n};\n","import * as types from './types';\n\nconst commentsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_COMMENTS_BY_ID: {\n      const { commentsById } = action;\n      return {\n        ...state,\n        ...commentsById\n      };\n    }\n    case types.ADD_COMMENT: {\n      const { commentId, commentData } = action;\n      return {\n        ...state,\n        [commentId]: {\n          commentId,\n          ...commentData\n        }\n      };\n    }\n    case types.DELETE_COMMENT: {\n      const { commentId } = action;\n      const { [commentId]: deletedComment, ...restOfComments } = state;\n      return restOfComments;\n    }\n    case types.UPDATE_COMMENT: {\n      const { commentId, commentData } = action;\n      return {\n        ...state,\n        [commentId]: {\n          ...state[commentId],\n          ...commentData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default commentsById;\n","import React from 'react';\nimport './Toolbar.scss';\n\nconst Toolbar = ({ className, children, ...props }) => (\n  <div className={`toolbar ${className}`} {...props}>\n    {children}\n  </div>\n);\n\nToolbar.defaultProps = {\n  className: ''\n};\n\nexport default Toolbar;\n","import React, { Component } from 'react';\nimport './Avatar.scss';\n\nexport default class Avatar extends Component {\n  static defaultProps = {\n    imgSrc: null,\n    classes: {\n      avatar: '',\n      img: '',\n      placeholder: ''\n    },\n    size: 'md',\n    variant: 'circle'\n  };\n\n  getUserInitials = fullName => {\n    return fullName\n      .split(' ')\n      .map(name => name.charAt(0))\n      .join('')\n      .toUpperCase();\n  };\n\n  render() {\n    const {\n      imgSrc,\n      imgProps,\n      classes,\n      fullName,\n      variant,\n      color,\n      size\n    } = this.props;\n    return (\n      <div\n        className={`avatar avatar--${size} avatar--${variant} ${\n          classes.avatar\n        }`}\n      >\n        {imgSrc !== null ? (\n          <img\n            src={imgSrc}\n            alt={fullName}\n            className={`avatar__img ${classes.img}`}\n            {...imgProps}\n          />\n        ) : (\n          <div\n            className={`avatar__placeholder ${classes.placeholder}`}\n            style={{ backgroundColor: color }}\n          >\n            {this.getUserInitials(fullName)}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Icon } from '../Icon';\nimport { PopoverWrapper } from '../Popover';\n\nexport default class CardEditorAssignMember extends Component {\n  render() {\n    const { children } = this.props;\n\n    return (\n      <PopoverWrapper\n        wrapperClass=\"card-editor__popover-wrapper card-editor__member-search-popover-wrapper\"\n        popoverClass=\"card-editor__popover card-editor__member-search-popover\"\n        alignOuter=\"left\"\n        alignInner=\"left\"\n        buttonProps={{\n          size: 'md',\n          iconOnly: true,\n          className: 'card-editor__toolbar-btn',\n          children: <Icon name=\"users\" />,\n          buttonRef: this.props.buttonRef\n        }}\n      >\n        {children}\n      </PopoverWrapper>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Input } from '../Input';\nimport { Avatar } from '../Avatar';\nimport { Icon } from '../Icon';\nimport * as keys from '../../constants/keys';\nimport './MemberSearch.scss';\n\nexport default class MemberSearch extends Component {\n  state = {\n    query: '',\n    isActive: false,\n    isTouchEnabled: false,\n    selectedMember: '',\n    selectedIndex: null,\n    filteredList: this.props.users\n  };\n\n  componentDidMount() {\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick, false);\n    this.inputEl.focus();\n  }\n\n  handleOutsideClick = e => {\n    if (this.state.query !== '') return;\n    if (!this.memberSearchEl.contains(e.target)) {\n      this.setState({\n        isActive: false\n      });\n    }\n  };\n\n  handleTouch = () => {\n    this.setState({\n      isTouchEnabled: true\n    });\n    // remove touch handler to prevent unnecessary refires\n    document.removeEventListener('touchstart', this.handleTouch);\n    // remove outside click handler from click events\n    document.removeEventListener('click', this.handleOutsideClick);\n    // reattach outside click handler to touchstart events\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  matchUser = (user, query) => {\n    const { name, email, username } = user;\n    const regExp = new RegExp(query, 'i');\n    return regExp.test(name) || regExp.test(email) || regExp.test(username);\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({\n      query: '',\n      isActive: false,\n      isTouchEnabled: false,\n      selectedMember: '',\n      selectedIndex: null,\n      filteredList: this.props.users\n    });\n  };\n\n  onChange = e => {\n    const { users } = this.props;\n    const { selectedMember, selectedIndex } = this.state;\n    const query = e.target.value;\n    const filteredList = users.filter(user => this.matchUser(user, query));\n    const newIndex = filteredList.indexOf(selectedMember);\n    const persistSelectedMember = newIndex !== -1;\n\n    this.setState({\n      selectedMember: persistSelectedMember\n        ? selectedMember\n        : filteredList.length > 0\n        ? filteredList[0].userId\n        : '',\n      selectedIndex: persistSelectedMember ? newIndex : 0,\n      query,\n      filteredList\n    });\n  };\n\n  onKeyDown = e => {\n    if (\n      e.key !== keys.TAB &&\n      e.key !== keys.ARROW_DOWN &&\n      e.key !== keys.ARROW_UP &&\n      e.key !== keys.ENTER\n    )\n      return;\n\n    const { filteredList, selectedIndex, selectedMember } = this.state;\n    const { onMemberClick } = this.props;\n    const nextIndex =\n      selectedIndex === filteredList.length - 1 ? 0 : selectedIndex + 1;\n    const prevIndex =\n      selectedIndex === 0 ? filteredList.length - 1 : selectedIndex - 1;\n\n    // eslint-disable-next-line default-case\n    switch (e.key) {\n      case keys.ARROW_DOWN:\n      // eslint-disable-next-line no-fallthrough\n      case keys.TAB: {\n        this.setState({\n          selectedMember: filteredList[nextIndex].userId,\n          selectedIndex: nextIndex\n        });\n        break;\n      }\n      case keys.ARROW_UP: {\n        this.setState({\n          selectedMember: filteredList[prevIndex].userId,\n          selectedIndex: prevIndex\n        });\n        break;\n      }\n      case keys.ENTER: {\n        if (selectedMember === '') return;\n        onMemberClick(selectedMember);\n        break;\n      }\n    }\n\n    e.preventDefault();\n  };\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  render() {\n    const { users, onMemberClick, assignedMembers } = this.props;\n    const { query, isActive, filteredList, selectedMember } = this.state;\n\n    return (\n      <div\n        className=\"member-search__wrapper\"\n        ref={el => (this.memberSearchEl = el)}\n      >\n        <Input\n          name=\"query\"\n          className=\"member-search\"\n          onChange={this.onChange}\n          value={query}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          type=\"text\"\n          autoComplete=\"off\"\n          hideLabel\n          placeholder=\"Assign or remove member\"\n          onKeyDown={this.onKeyDown}\n          inputRef={el => (this.inputEl = el)}\n        />\n        {isActive && (\n          <ul className=\"member-search__list\">\n            {filteredList.length > 0 ? (\n              filteredList.map((user, i) => {\n                const { name, photoURL, email, username, userId } = user;\n                const isAssigned =\n                  assignedMembers && assignedMembers.indexOf(userId) !== -1;\n                return (\n                  <li\n                    className={`member-search__item ${\n                      selectedMember === userId ? 'is-selected' : ''\n                    }`}\n                    onClick={() => onMemberClick(userId)}\n                    key={userId}\n                    id={userId}\n                  >\n                    <Icon name={isAssigned ? 'user-minus' : 'user-plus'} />\n                    <Avatar\n                      classes={{\n                        avatar: 'member-search__avatar--sm',\n                        placeholder: 'member-search__avatar-placeholder--sm'\n                      }}\n                      fullName={name}\n                      size=\"sm\"\n                      variant=\"circle\"\n                      imgSrc={photoURL}\n                    />\n                    <span className=\"member-search__info member-search__name\">\n                      {name}\n                    </span>\n                    <span className=\"member-search__info member-search__username\">\n                      {username}\n                    </span>\n                    <span className=\"member-search__info member-search__email\">\n                      {email}\n                    </span>\n                  </li>\n                );\n              })\n            ) : (\n              <li className=\"member-search__item\">\n                <span className=\"member-search__no-match\">\n                  No matches found\n                </span>\n              </li>\n            )}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\n\nconst CardEditorMoreActions = ({ onMenuClick }) => (\n  <PopoverWrapper\n    wrapperClass=\"card-editor__popover-wrapper\"\n    popoverClass=\"card-editor__popover\"\n    alignOuter=\"right\"\n    alignInner=\"right\"\n    buttonProps={{\n      size: 'md',\n      iconOnly: true,\n      className: 'card-editor__toolbar-btn',\n      children: <Icon name=\"more-horizontal\" />\n    }}\n  >\n    <Menu onClick={onMenuClick}>\n      <MenuItem>\n        <a href=\"\" data-action=\"delete\">\n          Delete card\n        </a>\n      </MenuItem>\n    </Menu>\n  </PopoverWrapper>\n);\n\nexport default CardEditorMoreActions;\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport './Checkbox.scss';\n\nconst Checkbox = ({\n  value,\n  id,\n  name,\n  isChecked,\n  onClick,\n  onChange,\n  className,\n  labelClass,\n  ...props\n}) => {\n  return (\n    <label\n      htmlFor={id}\n      onClick={onClick}\n      className={`checkbox__label ${labelClass}`}\n    >\n      {isChecked && <Icon name=\"check\" />}\n      <input\n        type=\"checkbox\"\n        id={id}\n        value={value}\n        name={name}\n        checked={isChecked}\n        className={`checkbox ${className}`}\n        onChange={onChange}\n        {...props}\n      />\n    </label>\n  );\n};\n\nCheckbox.defaultProps = {\n  className: '',\n  labelClass: ''\n};\n\nexport default Checkbox;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Checkbox } from '../Checkbox';\nimport { Textarea } from '../Textarea';\n\nconst appRoot = document.getElementById('root');\n\nexport default class CardEditorSubtask extends Component {\n  constructor(props) {\n    super(props);\n    this.portal = document.createElement('div');\n  }\n\n  componentDidMount() {\n    appRoot.appendChild(this.portal);\n  }\n\n  onDragStart = e => {\n    console.log('dragstart');\n    this.setState({\n      isReadOnly: true\n    });\n  };\n\n  componentWillUnmount() {\n    appRoot.removeChild(this.portal);\n  }\n\n  render() {\n    const {\n      subtaskId,\n      index,\n      text,\n      isCompleted,\n      toggleCompleted,\n      onChange,\n      onBlur,\n      onKeyDown\n    } = this.props;\n\n    return (\n      <Draggable draggableId={subtaskId} index={index}>\n        {(provided, snapshot) => {\n          const inner = (\n            <li\n              className=\"card-editor__subtask\"\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <Checkbox\n                id={`cb-${subtaskId}`}\n                value={subtaskId}\n                name={subtaskId}\n                isChecked={isCompleted}\n                onChange={toggleCompleted}\n                className=\"card-editor__checkbox\"\n                labelClass=\"card-editor__checkbox-label\"\n              />\n              <Textarea\n                value={text}\n                onChange={onChange}\n                onBlur={onBlur}\n                name={subtaskId}\n                className=\"card-editor__textarea--subtask\"\n                onKeyDown={onKeyDown}\n                onDragStart={this.onDragStart}\n              />\n            </li>\n          );\n          return snapshot.isDragging\n            ? ReactDOM.createPortal(inner, this.portal)\n            : inner;\n        }}\n      </Draggable>\n    );\n  }\n}\n","/* eslint-disable no-nested-ternary */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/users';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { commentActions, commentSelectors } from '../../ducks/comments';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { Avatar } from '../Avatar';\nimport './CardEditorComment.scss';\n\nclass CardEditorComment extends Component {\n  state = {\n    secondsElapsed: 0\n  };\n\n  componentDidMount() {\n    const { createdAt } = this.props.comment;\n    const secondsSinceCreation =\n      Math.floor(Date.now() / 1000) -\n      Math.floor(createdAt.toDate().getTime() / 1000);\n\n    this.setState({\n      secondsElapsed: secondsSinceCreation\n    });\n\n    this.interval = setInterval(this.tick, 1000);\n  }\n\n  tick = () => {\n    this.setState(prevState => ({\n      secondsElapsed: prevState.secondsElapsed + 1\n    }));\n  };\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  handleLikeClick = () => {\n    const { handleLike, comment } = this.props;\n    const { commentId } = comment;\n    handleLike(commentId);\n  };\n\n  render() {\n    const { user, comment } = this.props;\n    const { secondsElapsed } = this.state;\n    const { name, photoURL } = user;\n    const {\n      text,\n      createdAt,\n      lastModifiedAt,\n      likes,\n      to,\n      from,\n      isPinned\n    } = comment;\n    if (!createdAt) return null;\n    const date = new Date();\n    const dateCreatedFull = createdAt.toDate();\n    const timeCreated = dateCreatedFull.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true\n    });\n    const dateCreated = dateCreatedFull.toDateString();\n    const isToday = date.toDateString() === dateCreated;\n    const isYesterday = date.setDate(date.getDate() - 1);\n\n    return (\n      <div\n        className={`card-editor__comment-wrapper ${\n          isPinned ? 'is-pinned' : ''\n        }`}\n      >\n        <Avatar\n          classes={{\n            avatar: 'card-editor__comment-avatar',\n            placeholder: 'card-editor__comment-avatar-placeholder'\n          }}\n          fullName={name}\n          size=\"sm\"\n          variant=\"circle\"\n          imgSrc={photoURL}\n        />\n        <div className=\"card-editor__comment\">\n          <div className=\"card-editor__comment-header\">\n            <div className=\"card-editor__comment-details\">\n              <span className=\"card-editor__name\">{name}</span>\n              <span className=\"card-editor__timestamp\">\n                {secondsElapsed < 60 // less than one minute\n                  ? 'Just now'\n                  : secondsElapsed < 120 // less than 2 minutes\n                  ? '1 minute ago'\n                  : secondsElapsed < 3600 // less than 1 hour\n                  ? `${Math.floor(secondsElapsed / 60)} minutes ago`\n                  : secondsElapsed < 7200 // less than 2 hours\n                  ? '1 hour ago'\n                  : secondsElapsed < 21600 // less than 6 hours\n                  ? `${Math.floor(secondsElapsed / 3600)} hours ago`\n                  : isToday\n                  ? `Today at ${timeCreated}`\n                  : isYesterday\n                  ? `Yesterday at ${timeCreated}`\n                  : `${dateCreated} ${timeCreated}`}\n              </span>\n            </div>\n            <Button\n              className=\"card-editor__likes\"\n              onClick={this.handleLikeClick}\n              size=\"sm\"\n            >\n              <Icon name=\"thumbs-up\" />\n              <span className=\"card-editor__likes-counter\">\n                {likes.length > 0 ? likes.length : ''}\n              </span>\n            </Button>\n          </div>\n          <div className=\"card-editor__comment-body\">{text}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state, ownProps.comment.from),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateCardsById: card => dispatch(cardActions.updateCardsById(card)),\n    fetchCardComments: cardId =>\n      dispatch(commentActions.fetchCardComments(cardId)),\n    addComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.addComment({ commentId, commentData })),\n    deleteComment: commentId =>\n      dispatch(commentActions.deleteComment(commentId)),\n    updateComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.updateComment({ commentId, commentData }))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardEditorComment)\n);\n","import React from 'react';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport './Tag.scss';\n\nconst Tag = ({ text, color, size, onDelete, className, tagRef }) => (\n  <span className={`tag tag--${size} bg--${color} ${className}`} ref={tagRef}>\n    {text}\n    {size === 'md' && (\n      <Button\n        type=\"button\"\n        size=\"sm\"\n        className=\"tag__btn--delete\"\n        onClick={onDelete}\n        iconOnly\n      >\n        <Icon name=\"x\" />\n      </Button>\n    )}\n  </span>\n);\n\nTag.defaultProps = {\n  className: ''\n};\n\nexport default Tag;\n","import React from 'react';\n\nconst Radio = ({\n  classes = { radio: '', label: '' },\n  name,\n  id,\n  value,\n  onFocus,\n  onChange,\n  onInput,\n  isRequired,\n  onBlur,\n  inputRef,\n  hideLabel,\n  label,\n  onKeyDown,\n  isChecked\n}) => {\n  return (\n    <>\n      <input\n        className={`radio ${classes.radio}`}\n        id={id}\n        name={name}\n        type=\"radio\"\n        value={value}\n        onFocus={onFocus}\n        onChange={onChange}\n        onBlur={onBlur}\n        ref={inputRef}\n        onInput={onInput}\n        onKeyDown={onKeyDown}\n        required={isRequired}\n        checked={isChecked}\n      />\n      {!hideLabel && (\n        <label htmlFor={id} className={`radio__label ${classes.label}`}>\n          {label}\n        </label>\n      )}\n    </>\n  );\n};\n\nexport default Radio;\n","import React, { Component } from 'react';\nimport { Radio } from '../Radio';\nimport './ColorPicker.scss';\n\nexport default class ColorPicker extends Component {\n  state = {\n    selectedColor: 'default'\n  };\n\n  handleColorChange = e => {\n    const { selectColor } = this.props;\n    this.setState({\n      selectedColor: e.target.value\n    });\n    selectColor(e.target.value);\n  };\n\n  render() {\n    const { style } = this.props;\n    const { selectedColor } = this.state;\n    return (\n      <div className=\"color-picker\" style={style}>\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--default'\n          }}\n          name=\"tagColor\"\n          id=\"colorDefault\"\n          value=\"default\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'default'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--red'\n          }}\n          name=\"tagColor\"\n          id=\"colorRed\"\n          value=\"red\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'red'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--pink'\n          }}\n          name=\"tagColor\"\n          id=\"colorPink\"\n          value=\"pink\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'pink'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--grape'\n          }}\n          name=\"tagColor\"\n          id=\"colorGrape\"\n          value=\"grape\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'grape'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--violet'\n          }}\n          name=\"tagColor\"\n          id=\"colorViolet\"\n          value=\"violet\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'violet'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--indigo'\n          }}\n          name=\"tagColor\"\n          id=\"colorIndigo\"\n          value=\"indigo\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'indigo'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--blue'\n          }}\n          name=\"tagColor\"\n          id=\"colorBlue\"\n          value=\"blue\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'blue'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--cyan'\n          }}\n          name=\"tagColor\"\n          id=\"colorCyan\"\n          value=\"cyan\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'cyan'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--teal'\n          }}\n          name=\"tagColor\"\n          id=\"colorTeal\"\n          value=\"teal\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'teal'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--green'\n          }}\n          name=\"tagColor\"\n          id=\"colorGreen\"\n          value=\"green\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'green'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--yellow'\n          }}\n          name=\"tagColor\"\n          id=\"colorYellow\"\n          value=\"yellow\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'yellow'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--orange'\n          }}\n          name=\"tagColor\"\n          id=\"colorOrange\"\n          value=\"orange\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'orange'}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Tag } from '../Tag';\nimport { Input } from '../Input';\nimport { ColorPicker } from '../ColorPicker';\nimport * as keys from '../../constants/keys';\nimport './TagsInput.scss';\n\nexport default class TagsInput extends Component {\n  state = {\n    value: '',\n    isActive: false,\n    isTouchEnabled: false,\n    selectedTag: '',\n    focusedTag: '',\n    selectedIndex: null,\n    hasExactMatch: null,\n    filteredList: []\n  };\n\n  componentDidMount() {\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick, false);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.assignedTags.indexOf(undefined) !== -1) {\n      return false;\n    }\n    return true;\n  }\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  onFocus = () => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = () => {\n    this.setState({\n      selectedTag: '',\n      selectedIndex: null\n    });\n  };\n\n  resetForm = () => {\n    this.setState({\n      value: '',\n      selectedTag: '',\n      selectedIndex: null,\n      hasExactMatch: null,\n      focusedTag: '',\n      filteredList: []\n    });\n  };\n\n  matchTag = (tag, value) => {\n    const { text } = tag;\n    const regExp = new RegExp(value, 'i');\n    return regExp.test(text);\n  };\n\n  onChange = e => {\n    const { tagSuggestions } = this.props;\n    const { selectedTag, selectedIndex } = this.state;\n    const { value } = e.target;\n    const filteredList = tagSuggestions.filter(tag =>\n      this.matchTag(tag, value)\n    );\n    const hasExactMatch =\n      filteredList.findIndex(item => item.text === value) !== -1;\n    const newIndex = filteredList.indexOf(selectedTag);\n    const persistSelectedTag = newIndex !== -1;\n\n    this.setState({\n      selectedTag: persistSelectedTag\n        ? selectedTag\n        : filteredList.length > 0\n        ? filteredList[0].text\n        : '',\n      selectedIndex: persistSelectedTag ? newIndex : 0,\n      value,\n      filteredList: hasExactMatch\n        ? filteredList\n        : [...filteredList, { text: value, color: 'default' }],\n      hasExactMatch\n    });\n  };\n\n  onKeyDown = e => {\n    if (\n      e.key !== keys.TAB &&\n      e.key !== keys.ARROW_DOWN &&\n      e.key !== keys.ARROW_UP &&\n      e.key !== keys.ENTER &&\n      e.key !== keys.BACKSPACE\n    )\n      return;\n\n    const { filteredList, selectedIndex, selectedTag, value, focusedTag } = this.state;\n    const { addTag, removeTag, assignedTags } = this.props;\n    const nextIndex =\n      selectedIndex === filteredList.length - 1 || selectedIndex === null\n        ? 0\n        : selectedIndex + 1;\n    const prevIndex =\n      selectedIndex === 0 ? filteredList.length - 1 : selectedIndex - 1;\n\n    // eslint-disable-next-line default-case\n    switch (e.key) {\n      case keys.ARROW_DOWN:\n      // eslint-disable-next-line no-fallthrough\n      case keys.TAB: {\n        this.setState({\n          selectedTag: filteredList[nextIndex].text,\n          selectedIndex: nextIndex\n        });\n        break;\n      }\n      case keys.ARROW_UP: {\n        this.setState({\n          selectedTag: filteredList[prevIndex].text,\n          selectedIndex: prevIndex\n        });\n        break;\n      }\n      case keys.ENTER: {\n        this.resetForm();\n        addTag(selectedTag === '' ? value : selectedTag);\n        break;\n      }\n      case keys.BACKSPACE: {\n        if (value !== '') return;\n        if (focusedTag === '') {\n        this.setState({\n          focusedTag: assignedTags[assignedTags.length - 1].text\n        });\n      } else {\n        this.resetForm();\n        removeTag(focusedTag);\n      }\n      }\n    }\n    e.preventDefault();\n  };\n\n  handleOutsideClick = e => {\n    if (this.el.contains(e.target)) return;\n\n    this.setState({\n      isActive: false\n    });\n  };\n\n  handleTouch = () => {\n    this.setState({\n      isTouchEnabled: true\n    });\n    // remove touch handler to prevent unnecessary refires\n    document.removeEventListener('touchstart', this.handleTouch);\n    // remove outside click handler from click events\n    document.removeEventListener('click', this.handleOutsideClick);\n    // reattach outside click handler to touchstart events\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  handleTagDelete = tag => {\n    const { removeTag } = this.props;\n    this.resetForm();\n    removeTag(tag);\n  };\n\n  render() {\n    const {\n      isColorPickerActive,\n      assignedTags,\n      setTagColor,\n      currentTag,\n      removeTag\n    } = this.props;\n    const {\n      value,\n      isActive,\n      filteredList,\n      selectedTag,\n      hasExactMatch,\n      focusedTag\n    } = this.state;\n    console.log(assignedTags);\n    console.log({ focusedTag });\n\n    const colorPickerStyle = {};\n    if (this.currentTagEl) {\n      const {\n        offsetLeft,\n        offsetWidth,\n        offsetTop,\n        offsetHeight\n      } = this.currentTagEl;\n      colorPickerStyle.left = offsetLeft + offsetWidth / 2 - 74; // 74 = 1/2 colorPicker width\n      colorPickerStyle.top = offsetTop + offsetHeight + 9; // 9 = colorPicker arrow height\n    }\n\n    return (\n      <div className={`tags__container ${isActive ? 'is-active' : ''}`} ref={el => (this.el = el)}>\n        {assignedTags.map(tag => (\n          <Tag\n            key={tag.text}\n            color={tag.color}\n            size=\"md\"\n            text={tag.text}\n            onDelete={() => this.handleTagDelete(tag.text)}\n            className={focusedTag === tag.text ? 'is-focused' : ''}\n            tagRef={\n              currentTag === tag.text ? el => (this.currentTagEl = el) : null\n            }\n          />\n        ))}\n        <div className=\"tags-input__wrapper\">\n          <Input\n            className=\"tags-input\"\n            onChange={this.onChange}\n            onBlur={this.onBlur}\n            value={value}\n            onFocus={this.onFocus}\n            type=\"text\"\n            autoComplete=\"off\"\n            onKeyDown={this.onKeyDown}\n            hideLabel\n          />\n          {isActive && (\n            <ul className=\"tags-input__list\">\n              {filteredList.map((item, i) => {\n                return (\n                  <li\n                    key={item.text}\n                    className={`tags-input__item ${\n                      selectedTag === item.text ? 'is-selected' : ''\n                    } ${\n                      !hasExactMatch && i === filteredList.length - 1\n                        ? 'tags-input__item--new'\n                        : ''\n                    }`}\n                  >\n                    {!hasExactMatch && i === filteredList.length - 1 ? (\n                      <>\n                        <h4 className=\"tags-input__item--heading\">New Tag</h4>\n                        <span className=\"tags-input__item--text\">\n                          {item.text}\n                        </span>\n                      </>\n                    ) : (\n                      <Tag text={item.text} color={item.color} size=\"sm\" />\n                    )}\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n        </div>\n        {isActive && isColorPickerActive && (\n          <ColorPicker\n            isActive={isColorPickerActive}\n            selectColor={setTagColor}\n            style={colorPickerStyle}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/* eslint-disable no-nested-ternary */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { withFirebase } from '../Firebase';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { subtaskActions, subtaskSelectors } from '../../ducks/subtasks';\nimport { userSelectors } from '../../ducks/users';\nimport { commentActions, commentSelectors } from '../../ducks/comments';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { Modal } from '../Modal';\nimport { Toolbar } from '../Toolbar';\nimport { Avatar } from '../Avatar';\nimport CardEditorAssignMember from './CardEditorAssignMember';\nimport { MemberSearch } from '../MemberSearch';\nimport CardEditorMoreActions from './CardEditorMoreActions';\nimport * as keys from '../../constants/keys';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport CardEditorSubtask from './CardEditorSubtask';\nimport CardEditorComment from './CardEditorComment';\nimport { TagsInput } from '../TagsInput';\nimport './CardEditor.scss';\nimport { boardSelectors } from '../../ducks/boards';\n\nclass CardEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching:\n        this.props.commentIds !== undefined && this.props.commentIds.length > 0,\n      cardTitle: this.props.cardTitle,\n      cardDescription: this.props.cardDescription || '',\n      newSubtask: '',\n      cardSubtasks: this.props.subtasksArray.reduce((subtasks, subtask) => {\n        const { subtaskId, text, isCompleted } = subtask;\n        subtasks[subtaskId] = {\n          text,\n          isCompleted\n        };\n        return subtasks;\n      }, {}),\n      newComment: '',\n      currentFocus: null,\n      subtaskIds: this.props.subtaskIds || [],\n      isColorPickerActive: false,\n      currentTag: null\n    };\n    this.membersListButton = React.createRef();\n  }\n\n  componentDidMount() {\n    const {\n      cardId,\n      commentIds,\n      firebase,\n      fetchCardComments,\n      addComment,\n      deleteComment,\n      updateComment\n    } = this.props;\n\n    if (commentIds && commentIds.length > 0) {\n      fetchCardComments(cardId).then(() => {\n        this.setState({\n          isFetching: false\n        });\n      });\n    }\n\n    this.commentObserver = firebase.db\n      .collection('comments')\n      .where('cardId', '==', cardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const commentId = change.doc.id;\n          const commentData = change.doc.data();\n          if (change.type === 'added') {\n            addComment({ commentId, commentData });\n          }\n          if (change.type === 'modified') {\n            updateComment({ commentId, commentData });\n          }\n          if (change.type === 'removed') {\n            deleteComment(commentId);\n          }\n        });\n      });\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if ('subtaskIds' in props === false) return null;\n    if (props.subtaskIds.length !== state.subtaskIds.length) {\n      return {\n        cardSubtasks: props.subtasksArray.reduce((subtasks, subtask) => {\n          const { subtaskId, text, isCompleted } = subtask;\n          subtasks[subtaskId] = {\n            text,\n            isCompleted\n          };\n          return subtasks;\n        }, {}),\n        subtaskIds: props.subtaskIds\n      };\n    }\n    return null;\n  }\n\n  updateCardSubtasks = () => {\n    const { subtasksArray } = this.props;\n    this.setState({\n      cardSubtasks: subtasksArray.reduce((subtasks, subtask) => {\n        const { subtaskId, text, isCompleted } = subtask;\n        subtasks[subtaskId] = {\n          text,\n          isCompleted\n        };\n        return subtasks;\n      }, {})\n    });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  deleteCard = () => {\n    const { cardId, listId, firebase, handleCardEditorClose } = this.props;\n    firebase.deleteCard({ cardId, listId });\n    handleCardEditorClose();\n  };\n\n  onBlur = e => {\n    const { [cardKey]: currentValue, cardId, firebase } = this.props;\n    const cardKey = e.target.name;\n    const { [cardKey]: updatedValue } = this.state;\n\n    // When field loses focus, update card if change is detected\n\n    if (updatedValue !== currentValue) {\n      firebase.updateCard(cardId, {\n        [cardKey]: updatedValue\n      });\n      console.log('updated!');\n    }\n\n    this.setState({\n      currentFocus: null\n    });\n  };\n\n  addComment = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { userId, firebase, cardId, boardId } = this.props;\n    const { newComment: text } = this.state;\n    firebase.addComment({ userId, text, cardId, boardId });\n    this.resetForm('newComment');\n    e.preventDefault();\n  };\n\n  resetForm = key => {\n    this.setState({\n      [key]: ''\n    });\n  };\n\n  addSubtask = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { userId, firebase, cardId, boardId } = this.props;\n    const { newSubtask: text } = this.state;\n    firebase.addSubtask({ userId, text, cardId, boardId });\n    this.resetForm('newSubtask');\n    e.preventDefault();\n  };\n\n  onFocus = e => {\n    this.setState({\n      currentFocus: e.target.name\n    });\n  };\n\n  handleModalClick = e => {\n    const { currentFocus } = this.state;\n    if (\n      (currentFocus === 'newComment' &&\n        !this.commentFormEl.contains(e.target)) ||\n      (currentFocus === 'newSubtask' &&\n        !this.newSubtaskFormEl.contains(e.target))\n    ) {\n      this.setState({\n        currentFocus: null\n      });\n    }\n  };\n\n  handleMoreActions = e => {\n    if (!e.target.matches('a')) return;\n    const { action } = e.target.dataset;\n    switch (action) {\n      case 'delete':\n        this.deleteCard();\n        break;\n    }\n    e.preventDefault(); // prevents page reload\n  };\n\n  onSubtaskChange = e => {\n    const { cardSubtasks } = this.state;\n    this.setState({\n      cardSubtasks: {\n        ...cardSubtasks,\n        [e.target.name]: {\n          ...cardSubtasks[e.target.name],\n          text: e.target.value\n        }\n      }\n    });\n  };\n\n  handleCheckboxChange = e => {\n    const subtaskId = e.target.name;\n    this.toggleSubtaskCompleted(subtaskId);\n  };\n\n  toggleSubtaskCompleted = subtaskId => {\n    const { isCompleted } = this.state.cardSubtasks[subtaskId];\n    this.setState(prevState => ({\n      cardSubtasks: {\n        ...prevState.cardSubtasks,\n        [subtaskId]: {\n          ...prevState.cardSubtasks[subtaskId],\n          isCompleted: !prevState.cardSubtasks[subtaskId].isCompleted\n        }\n      }\n    }));\n    const { firebase } = this.props;\n    firebase.updateSubtask(subtaskId, { isCompleted: !isCompleted });\n  };\n\n  updateSubtaskText = e => {\n    const subtaskId = e.target.name;\n    const { cardSubtasks } = this.state;\n    const { text } = cardSubtasks[subtaskId];\n    const { firebase } = this.props;\n    firebase.updateSubtask(subtaskId, { text });\n  };\n\n  deleteSubtask = e => {\n    if (e.target.value !== '' || e.key !== keys.BACKSPACE) return;\n    const { cardId, firebase } = this.props;\n    const subtaskId = e.target.name;\n    firebase.deleteSubtask({ subtaskId, cardId });\n  };\n\n  moveSubtask = ({ destination, draggableId, source }) => {\n    if (!destination) return;\n    if (destination.index === source.index) return;\n    const { firebase } = this.props;\n    const { subtaskIds } = this.state;\n    const updatedSubtaskIds = [...subtaskIds];\n    updatedSubtaskIds.splice(source.index, 1);\n    updatedSubtaskIds.splice(destination.index, 0, draggableId);\n    this.setState({\n      subtaskIds: updatedSubtaskIds\n    });\n    firebase.updateCard(source.droppableId, {\n      subtaskIds: updatedSubtaskIds\n    });\n  };\n\n  handleCommentLike = commentId => {\n    const { firebase, userId, commentsById } = this.props;\n    const { likes } = commentsById[commentId];\n\n    if (likes.indexOf(userId) === -1) {\n      firebase.updateComment(commentId, {\n        likes: firebase.addToArray(userId)\n      });\n    } else {\n      firebase.updateComment(commentId, {\n        likes: firebase.removeFromArray(userId)\n      });\n    }\n  };\n\n  assignMember = userId => {\n    const { cardId, boardId, assignedTo, firebase } = this.props;\n\n    if (assignedTo.indexOf(userId) !== -1) {\n      firebase.updateCard(cardId, {\n        assignedTo: firebase.removeFromArray(userId),\n        lastModifiedAt: firebase.getTimestamp()\n      });\n    } else {\n      firebase.assignCard({ cardId, boardId, userId });\n    }\n  };\n\n  toggleColorPicker = value => {\n    this.setState({\n      isColorPickerActive: value\n    });\n  };\n\n  addTag = text => {\n    console.log(text);\n    const {\n      firebase,\n      currentUser,\n      boardTags,\n      cardId,\n      boardId,\n      addTag\n    } = this.props;\n    const { userId, tags: userTags } = currentUser;\n    const isBoardTag = boardTags && text in boardTags;\n    const isUserTag = userTags && text in userTags;\n    const tagData =\n      isBoardTag\n        ? boardTags[text]\n        : isUserTag\n        ? userTags[text]\n        : { boardId, text };\n\n    firebase\n      .addTag({\n        userId,\n        cardId,\n        boardId,\n        ...tagData\n      })\n      .then(() => {\n        if (!isUserTag && !isBoardTag) {\n          this.setState({\n            currentTag: text\n          });\n          this.toggleColorPicker(true);\n        }\n      });\n  };\n\n  setTagColor = color => {\n    const { userId, boardId, firebase } = this.props;\n    const { currentTag: tag } = this.state;\n    firebase.setTagColor({ userId, boardId, tag, color });\n  };\n\n  removeTag = tag => {\n    const { cardId, firebase } = this.props;\n    firebase.removeTag({ cardId, tag });\n    this.toggleColorPicker(false);\n  };\n\n  componentWillUnmount() {\n    this.commentObserver();\n  }\n\n  render() {\n    const {\n      handleCardEditorClose,\n      cardId,\n      commentIds,\n      assignedTo,\n      commentsArray,\n      usersArray,\n      membersArray,\n      currentUser,\n      cardTags,\n      mergedTags\n    } = this.props;\n    const {\n      cardTitle,\n      cardDescription,\n      newComment,\n      currentFocus,\n      newSubtask,\n      cardSubtasks,\n      subtaskIds,\n      isFetching,\n      isColorPickerActive,\n      currentTag\n    } = this.state;\n    const hasSubtasks = subtaskIds !== undefined && subtaskIds.length > 0;\n    const hasComments = commentIds !== undefined && commentIds.length > 0;\n    const isAssigned = !!assignedTo && assignedTo.length > 0;\n    const isNewCommentInvalid = newComment === '';\n    const isNewSubtaskInvalid = newSubtask === '';\n    const commentFormIsFocused = currentFocus === 'newComment';\n    const newSubtaskFormIsFocused = currentFocus === 'newSubtask';\n\n    if (isFetching) return null;\n\n    return (\n      <Modal\n        onModalClose={handleCardEditorClose}\n        className=\"card-editor\"\n        onModalClick={this.handleModalClick}\n        size=\"lg\"\n        id=\"cardEditor\"\n      >\n        <Toolbar className=\"card-editor__toolbar\">\n          <CardEditorAssignMember buttonRef={this.membersListButton}>\n            <MemberSearch\n              users={usersArray}\n              assignedMembers={assignedTo}\n              onMemberClick={this.assignMember}\n            />\n          </CardEditorAssignMember>\n          <CardEditorMoreActions onMenuClick={this.handleMoreActions} />\n        </Toolbar>\n        <form\n          name=\"editCardForm\"\n          onFocus={this.onFocus}\n          className=\"card-editor__edit-card-form\"\n        >\n          <Textarea\n            className=\"card-editor__textarea--title\"\n            name=\"cardTitle\"\n            value={cardTitle}\n            onChange={this.onChange}\n            required\n            onBlur={this.onBlur}\n            onFocus={this.onFocus}\n          />\n          <div className=\"card-editor__section\">\n            <div className=\"card-editor__section-icon\">\n              <Icon name=\"tag\" />\n            </div>\n            <TagsInput\n              addTag={this.addTag}\n              tagSuggestions={mergedTags}\n              assignedTags={cardTags}\n              isColorPickerActive={isColorPickerActive}\n              setTagColor={this.setTagColor}\n              removeTag={this.removeTag}\n              currentTag={currentTag}\n            />\n          </div>\n          <div className=\"card-editor__section\">\n            <div className=\"card-editor__section-icon\">\n              <Icon name=\"user\" />\n            </div>\n            {isAssigned && (\n              <div className=\"card-editor__members\">\n                {membersArray.map(member => {\n                  const { name, photoURL, userId } = member;\n                  return (\n                    <Avatar\n                      classes={{\n                        avatar: 'card-editor__avatar',\n                        placeholder: 'card-editor__avatar-placeholder'\n                      }}\n                      fullName={name}\n                      size=\"sm\"\n                      variant=\"circle\"\n                      imgSrc={photoURL}\n                      key={userId}\n                    />\n                  );\n                })}\n              </div>\n            )}\n            <Button\n              type=\"button\"\n              className=\"card-editor__btn--add-member\"\n              onClick={() => this.membersListButton.current.click()}\n            >\n              <Icon name=\"plus\" />\n            </Button>\n          </div>\n          <div\n            className={`card-editor__section ${\n              currentFocus === 'cardDescription' ? 'is-focused' : ''\n            }`}\n          >\n            <div className=\"card-editor__section-icon\">\n              <Icon name=\"edit-3\" />\n            </div>\n            <Textarea\n              className=\"card-editor__textarea card-editor__textarea--description\"\n              name=\"cardDescription\"\n              value={cardDescription}\n              onChange={this.onChange}\n              placeholder=\"Add a description\"\n              onBlur={this.onBlur}\n              onFocus={this.onFocus}\n            />\n          </div>\n        </form>\n        <div\n          className={`card-editor__section ${\n            newSubtaskFormIsFocused ? 'is-focused' : ''\n          }`}\n        >\n          <div className=\"card-editor__section-header\">\n            <div className=\"card-editor__section-icon\">\n              <Icon name=\"check-square\" />\n            </div>\n            <h3 className=\"card-editor__section-title\">Subtasks</h3>\n            <hr className=\"card-editor__hr\" />\n          </div>\n          {hasSubtasks && (\n            <DragDropContext onDragEnd={this.moveSubtask}>\n              <Droppable droppableId={cardId} type={droppableTypes.TASK}>\n                {provided => (\n                  <ul\n                    className=\"card-editor__subtasks\"\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                  >\n                    {subtaskIds.map((subtaskId, index) => {\n                      return (\n                        <CardEditorSubtask\n                          subtaskId={subtaskId}\n                          index={index}\n                          text={cardSubtasks[subtaskId].text}\n                          isCompleted={cardSubtasks[subtaskId].isCompleted}\n                          toggleCompleted={this.handleCheckboxChange}\n                          onChange={this.onSubtaskChange}\n                          onBlur={this.updateSubtaskText}\n                          onKeyDown={this.deleteSubtask}\n                          key={subtaskId}\n                        />\n                      );\n                    })}\n                    {provided.placeholder}\n                  </ul>\n                )}\n              </Droppable>\n            </DragDropContext>\n          )}\n          <div className=\"card-editor__section-icon\">\n            {newSubtaskFormIsFocused ? (\n              <div className=\"card-editor__checkbox\" />\n            ) : (\n              <Icon name=\"plus-circle\" />\n            )}\n          </div>\n          <form\n            name=\"newSubtaskForm\"\n            className={`card-editor__new-subtask-form ${\n              currentFocus === 'newSubtask' ? 'is-focused' : ''\n            }`}\n            ref={el => (this.newSubtaskFormEl = el)}\n            onSubmit={this.addSubtask}\n          >\n            <Textarea\n              className=\"card-editor__textarea card-editor__textarea--new-subtask\"\n              name=\"newSubtask\"\n              value={newSubtask}\n              onChange={this.onChange}\n              placeholder=\"Add a subtask\"\n              onFocus={this.onFocus}\n              onKeyDown={this.addSubtask}\n            />\n            {currentFocus === 'newSubtask' && (\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isNewSubtaskInvalid}\n                onClick={this.addSubtask}\n                className=\"card-editor__btn--add-subtask\"\n              >\n                Add subtask\n              </Button>\n            )}\n          </form>\n        </div>\n        <div\n          className={`card-editor__section ${\n            commentFormIsFocused ? 'is-focused' : ''\n          }`}\n        >\n          <div className=\"card-editor__section-header\">\n            <div className=\"card-editor__section-icon\">\n              <Icon name=\"message-circle\" />\n            </div>\n            <h3 className=\"card-editor__section-title\">Comments</h3>\n            <hr className=\"card-editor__hr\" />\n          </div>\n\n          {hasComments && (\n            <div className=\"card-editor__comments\">\n              {commentsArray.map(comment => {\n                const { commentId } = comment;\n                return (\n                  <CardEditorComment\n                    key={commentId}\n                    comment={comment}\n                    handleLike={this.handleCommentLike}\n                  />\n                );\n              })}\n            </div>\n          )}\n          <Avatar\n            classes={{\n              avatar: 'card-editor__avatar',\n              placeholder: 'card-editor__avatar-placeholder'\n            }}\n            fullName={currentUser.name}\n            size=\"sm\"\n            variant=\"circle\"\n            imgSrc={currentUser.photoURL}\n          />\n          <form\n            name=\"commentForm\"\n            className={`card-editor__comment-form ${\n              commentFormIsFocused ? 'is-focused' : ''\n            }`}\n            ref={el => (this.commentFormEl = el)}\n            onSubmit={this.addComment}\n          >\n            <Textarea\n              className=\"card-editor__textarea card-editor__textarea--comment\"\n              name=\"newComment\"\n              value={newComment}\n              onChange={this.onChange}\n              placeholder=\"Write a comment...\"\n              onFocus={this.onFocus}\n              onKeyDown={this.addComment}\n            />\n            {commentFormIsFocused && (\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isNewCommentInvalid}\n                onClick={this.addComment}\n                name=\"newCommentSubmit\"\n                className=\"card-editor__btn--submit-comment\"\n              >\n                Send\n              </Button>\n            )}\n          </form>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentUser: userSelectors.getCurrentUserData(state),\n    subtasksArray: subtaskSelectors.getSubtasksArray(\n      state,\n      ownProps.subtaskIds\n    ),\n    commentsArray: commentSelectors.getCommentsArray(\n      state,\n      ownProps.commentIds\n    ),\n    commentsById: commentSelectors.getCommentsById(state),\n    usersArray: userSelectors.getUsersArray(state),\n    membersArray: userSelectors.getMembersArray(state, ownProps.assignedTo),\n    cardTags: cardSelectors.getCardTags(state, ownProps),\n    mergedTags: currentSelectors.getMergedTags(state),\n    boardTags: boardSelectors.getBoardTags(state, ownProps.boardId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCardComments: cardId =>\n      dispatch(commentActions.fetchCardComments(cardId)),\n    addComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.addComment({ commentId, commentData })),\n    deleteComment: commentId =>\n      dispatch(commentActions.deleteComment(commentId)),\n    updateComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.updateComment({ commentId, commentData })),\n    addTag: (cardId, tag) => dispatch(cardActions.addTag(cardId, tag))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardEditor)\n);\n","\n/**\n * Checks if two arrays or objects are equal\n * @param {Array|Object} value\n * @param {Array|Object} other\n */\n\n// eslint-disable-next-line import/prefer-default-export\nexport const isEqual = (value, other) => {\n  const type = Object.prototype.toString.call(value);\n\n  // If both objects are not the same type, return false\n  if (type !== Object.prototype.toString.call(other)) return false;\n\n  const typeObj = '[object Object]';\n  const typeArr = '[object Array]';\n  // If items are neither objects nor arrays, return false\n  if (type !== typeObj && type !== typeArr) return false;\n\n  // Compare length of two items\n  const valueLen = type === typeArr ? value.length : Object.keys(value).length;\n  const otherLen = type === typeArr ? other.length : Object.keys(other).length;\n  if (valueLen !== otherLen) return false;\n\n  const compare = (item1, item2) => {\n    const typeFunc = '[object Function]';\n    const itemType = Object.prototype.toString.call(item1);\n    if (itemType !== Object.prototype.toString.call(item2)) return false;\n    if (itemType === typeObj || itemType === typeArr) {\n      return isEqual(item1, item2);\n    }\n    if (itemType === typeFunc) {\n      return item1.toString() === item2.toString();\n    }\n    return item1 === item2;\n  };\n\n  if (type === typeArr) {\n    for (let i = 0; i < valueLen; i++) {\n      if (!compare(value[i], other[i])) return false;\n    }\n  } else {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (compare(value[key], other[key]) === false) return false;\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * Delays callback execution until next browser repaint\n * Best used for `scroll` and `resize` window events\n * @param {Function} callback - The function to debounce\n */\n\nexport const windowDebouncer = callback => {\n  let request;\n\n  return (...args) => {\n    const context = this;\n\n    if (request) {\n      window.cancelAnimationFrame(request);\n    }\n\n    request = window.requestAnimationFrame(() => {\n      callback.apply(context, args);\n    });\n  };\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { withFirebase } from '../Firebase';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { subtaskActions, subtaskSelectors } from '../../ducks/subtasks';\nimport * as ROUTES from '../../constants/routes';\nimport Board from './Board';\nimport { Input } from '../Input';\nimport { List } from '../List';\nimport { CardEditor } from '../CardEditor';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { utils } from '../../utils';\nimport './Board.scss';\n\nclass BoardContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: true,\n      isDragging: false,\n      isCardEditorOpen: false,\n      boardTitle: this.props.boardTitle\n    };\n  }\n\n  componentDidMount() {\n    const {\n      current,\n      fetchListsById,\n      fetchCardsById,\n      fetchCardSubtasks,\n      firebase,\n      updateBoardsById,\n      updateListsById,\n      addCard,\n      deleteCard,\n      updateCard,\n      updateBoardTags,\n      boardId,\n      board,\n      updateListIds,\n      addSubtask,\n      updateSubtask,\n      deleteSubtask,\n      selectBoard\n    } = this.props;\n\n    if (current.boardId !== boardId) {\n      selectBoard(boardId);\n    }\n\n    fetchListsById(boardId);\n    fetchCardsById(boardId);\n    fetchCardSubtasks(boardId).then(() => {\n      this.setState({\n        isFetching: false\n      });\n    });\n    this.boardObserver = firebase.getBoardDoc(boardId).onSnapshot(snapshot => {\n      const updatedBoard = snapshot.data();\n      if (!utils.isEqual(updatedBoard.listIds, board.listIds)) {\n        updateListIds(boardId, updatedBoard.listIds);\n      } else if (!utils.isEqual(updatedBoard.tags, board.tags)) {\n        updateBoardTags(boardId, updatedBoard.tags);\n      } else {\n        updateBoardsById(boardId, updatedBoard);\n      }\n    });\n    this.listObserver = firebase.db\n      .collection('lists')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const list = {\n            [change.doc.id]: change.doc.data()\n          };\n          updateListsById(list);\n        });\n      });\n    this.subtaskObserver = firebase.db\n      .collection('subtasks')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const subtaskId = change.doc.id;\n          const subtaskData = change.doc.data();\n          if (change.type === 'added') {\n            addSubtask({ subtaskId, subtaskData });\n          }\n          if (change.type === 'modified') {\n            updateSubtask({ subtaskId, subtaskData });\n          }\n          if (change.type === 'removed') {\n            deleteSubtask(subtaskId);\n          }\n        });\n      });\n    this.cardObserver = firebase.db\n      .collection('cards')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const cardId = change.doc.id;\n          const cardData = change.doc.data();\n          if (change.type === 'added') {\n            addCard({ cardId, cardData });\n          } else if (change.type === 'removed') {\n            deleteCard(cardId);\n          } else {\n            updateCard({ cardId, cardData });\n          }\n        });\n      });\n    console.log('mounted');\n  }\n\n  componentWillUnmount() {\n    this.boardObserver();\n    this.listObserver();\n    this.cardObserver();\n    this.subtaskObserver();\n  }\n\n  onDragStart = () => {\n    this.setState({\n      isDragging: true\n    });\n  };\n\n  onDragEnd = ({ destination, draggableId, source, type }) => {\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    const { firebase } = this.props;\n    if (type === droppableTypes.CARD) {\n      const { listsById } = this.props;\n      const isMovedWithinList = source.droppableId === destination.droppableId;\n      const updatedCardIds = [...listsById[destination.droppableId].cardIds];\n      if (isMovedWithinList) {\n        updatedCardIds.splice(source.index, 1);\n        updatedCardIds.splice(destination.index, 0, draggableId);\n        firebase.updateList(source.droppableId, {\n          cardIds: updatedCardIds\n        });\n      } else {\n        updatedCardIds.splice(destination.index, 0, draggableId);\n        firebase.moveCardToList({\n          cardId: draggableId,\n          origListId: source.droppableId,\n          newListId: destination.droppableId,\n          updatedCardIds\n        });\n      }\n    }\n\n    if (type === droppableTypes.LIST) {\n      const { boardsById, current, reorderLists } = this.props;\n      const { boardId } = current;\n      const updatedListIds = [...boardsById[boardId].listIds];\n      updatedListIds.splice(source.index, 1);\n      updatedListIds.splice(destination.index, 0, draggableId);\n      firebase.updateBoard(boardId, {\n        listIds: updatedListIds\n      });\n      reorderLists(boardId, updatedListIds);\n    }\n\n    this.setState({\n      isDragging: false\n    });\n  };\n\n  toggleCardEditor = () => {\n    this.setState(prevState => ({\n      isCardEditorOpen: !prevState.isCardEditorOpen\n    }));\n  };\n\n  handleCardClick = cardId => {\n    this.props.selectCard(cardId);\n    this.toggleCardEditor();\n  };\n\n  onTitleChange = e => {\n    this.setState({\n      boardTitle: e.target.value\n    });\n  };\n\n  onTitleBlur = e => {\n    const { boardTitle, boardId, firebase } = this.props;\n    const { boardTitle: newBoardTitle } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newBoardTitle !== boardTitle) {\n      firebase.updateBoard(boardId, {\n        boardTitle: newBoardTitle\n      });\n      console.log('updated!');\n    }\n  };\n\n  render() {\n    const { isFetching, isCardEditorOpen } = this.state;\n    const { current, listsArray, cardsById, boardId, board, userId } = this.props;\n    if (isFetching) return null;\n    const { cardId } = current;\n    const { boardTitle } = board;\n    const lists = listsArray.map((list, listIndex) => {\n      const { listId, listTitle, cardIds } = list;\n      return (\n        <List\n          listId={listId}\n          key={listId}\n          listIndex={listIndex}\n          listTitle={listTitle}\n          cardIds={cardIds}\n          isFetchingCards={isFetching}\n          isDragging={this.state.isDragging}\n          onCardClick={this.handleCardClick}\n          boardId={boardId}\n        />\n      );\n    });\n\n    return (\n      <main className=\"board-container\">\n        <Input\n          className=\"board__input--title\"\n          name=\"boardTitle\"\n          type=\"text\"\n          value={boardTitle}\n          onChange={this.onTitleChange}\n          required\n          hideLabel\n          onBlur={this.onTitleBlur}\n        />\n        <DragDropContext\n          onDragEnd={this.onDragEnd}\n          onDragStart={this.onDragStart}\n        >\n          <Board boardId={boardId}>{lists}</Board>\n        </DragDropContext>\n        {isCardEditorOpen && (\n          <CardEditor\n            {...cardsById[cardId]}\n            handleCardEditorClose={this.toggleCardEditor}\n            userId={userId}\n          />\n        )}\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    boardsById: boardSelectors.getBoardsById(state),\n    current: currentSelectors.getCurrent(state),\n    listsById: listSelectors.getListsById(state),\n    listsArray: listSelectors.getListsArray(state),\n    cardsById: cardSelectors.getCardsById(state),\n    board: boardSelectors.getBoard(state, ownProps.boardId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId)),\n    selectCard: cardId => dispatch(currentActions.selectCard(cardId)),\n    fetchListsById: boardId => dispatch(listActions.fetchListsById(boardId)),\n    updateListsById: list => dispatch(listActions.updateListsById(list)),\n    fetchCardsById: boardId => dispatch(cardActions.fetchCardsById(boardId)),\n    fetchCardSubtasks: boardId =>\n      dispatch(subtaskActions.fetchCardSubtasks(boardId)),\n    reorderLists: (boardId, listIds) =>\n      dispatch(boardActions.reorderLists(boardId, listIds)),\n    updateListIds: (boardId, listIds) =>\n      dispatch(boardActions.updateListIds(boardId, listIds)),\n    updateBoardTags: (boardId, tags) => dispatch(boardActions.updateBoardTags(boardId, tags)),\n    addCard: ({ cardId, cardData }) => dispatch(cardActions.addCard({ cardId, cardData })),\n    updateCard: ({ cardId, cardData }) =>\n      dispatch(cardActions.updateCard({ cardId, cardData })),\n    deleteCard: cardId => dispatch(cardActions.deleteCard(cardId)),\n    addSubtask: ({ subtaskId, subtaskData }) =>\n      dispatch(subtaskActions.addSubtask({ subtaskId, subtaskData })),\n    deleteSubtask: subtaskId =>\n      dispatch(subtaskActions.deleteSubtask(subtaskId)),\n    updateSubtask: ({ subtaskId, subtaskData }) =>\n      dispatch(subtaskActions.updateSubtask({ subtaskId, subtaskData }))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardContainer)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { withAuthorization } from '../Session';\nimport * as ROUTES from '../../constants/routes';\nimport { userActions, userSelectors } from '../../ducks/users';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { BoardGridContainer } from '../BoardGrid';\nimport { BoardComposer } from '../BoardComposer';\nimport { BoardContainer } from '../Board';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport './Home.scss';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isBoardComposerOpen: false,\n      isFetching: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      firebase,\n      selectUser,\n      fetchUsersById,\n      fetchBoardsById\n    } = this.props;\n    const userId = firebase.auth.currentUser.uid;\n    selectUser(userId);\n    console.log('mounted home');\n    fetchUsersById()\n      .then(() => fetchBoardsById(userId))\n      .then(() =>\n        this.setState({\n          isFetching: false\n        })\n      );\n  }\n\n  toggleBoardComposer = () => {\n    this.setState(prevState => ({\n      isBoardComposerOpen: !prevState.isBoardComposerOpen\n    }));\n  };\n\n  createBoard = boardTitle => {\n    const { userId, firebase } = this.props;\n    firebase.addBoard({ userId, boardTitle });\n  };\n\n  render() {\n    const { isBoardComposerOpen, isFetching } = this.state;\n    if (isFetching) return null;\n    const { userId } = this.props;\n    return (\n      <>\n        {isBoardComposerOpen && (\n          <BoardComposer\n            onClose={this.toggleBoardComposer}\n            handleSubmit={this.createBoard}\n          />\n        )}\n        <Switch>\n          <Route\n            exact\n            path={ROUTES.HOME}\n            render={() => (\n              <main className=\"main\">\n                <h1>Home</h1>\n                {userId && (\n                  <BoardGridContainer\n                    userId={userId}\n                    openBoardComposer={this.toggleBoardComposer}\n                  />\n                )}\n              </main>\n            )}\n          />\n          <Route\n            path={ROUTES.BOARD}\n            render={props => (\n              <BoardContainer\n                userId={userId}\n                boardId={props.match.params.id}\n                {...props}\n              />\n            )}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentBoardId: currentSelectors.getCurrentBoardId(state),\n    userId: currentSelectors.getCurrentUserId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsersById: () => dispatch(userActions.fetchUsersById()),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    selectUser: userId => dispatch(currentActions.selectUser(userId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(HomePage)\n);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .passwordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n    const isInvalid = passwordOne === '' || passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"passwordOne\"\n          label=\"New Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          label=\"Confirm New Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Change My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React from 'react';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport { PasswordChangeForm } from '../PasswordChange';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport './Account.scss';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <main className=\"account\">\n        <h1>Account: {authUser.email}</h1>\n        <section className=\"account__section\">\n        <h2>Forgot your password?</h2>\n          <PasswordForgetForm />\n        </section>\n        <section className=\"account__section\">\n        <h2>Change your password.</h2>\n          <PasswordChangeForm />\n        </section>\n      </main>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(AccountPage);\n","import React, { Component } from 'react';\nimport { Navbar } from '../Navbar';\nimport './Header.scss';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <Navbar />\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport { Navbar } from '../Navbar';\nimport * as ROUTES from '../../constants/routes';\nimport { LandingPage } from '../Landing';\nimport { SignUpPage } from '../SignUp';\nimport { SignInPage } from '../SignIn';\nimport { PasswordForgetPage } from '../PasswordForget';\nimport { HomePage } from '../Home';\nimport { AccountPage } from '../Account';\nimport { AdminPage } from '../Admin';\nimport { withAuthentication } from '../Session';\nimport { Header } from '../Header';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Header />\n        <Switch>\n          <Route exact path={ROUTES.LANDING} component={LandingPage} />\n          <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n          <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n          <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n          <Route path={ROUTES.HOME} render={props => <HomePage {...props} />} />\n          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n          <Route path={ROUTES.ADMIN} component={AdminPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { boardsById } from '../ducks/boards';\nimport { cardsById } from '../ducks/cards';\nimport { listsById } from '../ducks/lists';\nimport { usersById } from '../ducks/users';\nimport { current } from '../ducks/current';\nimport { subtasksById } from '../ducks/subtasks';\nimport { commentsById } from '../ducks/comments';\n\nexport default combineReducers({\n  boardsById,\n  cardsById,\n  listsById,\n  usersById,\n  current,\n  subtasksById,\n  commentsById\n});\n","import * as types from './types';\n\nconst current = (state = {}, action) => {\n  switch (action.type) {\n    case types.SELECT_USER: {\n      const { userId } = action;\n      return {\n        ...state,\n        userId\n      };\n    }\n    case types.SELECT_BOARD: {\n      const { boardId } = action;\n      return {\n        ...state,\n        boardId\n      };\n    }\n    case types.SELECT_LIST: {\n      const { listId } = action;\n      return {\n        ...state,\n        listId\n      };\n    }\n    case types.SELECT_CARD: {\n      const { cardId } = action;\n      return {\n        ...state,\n        cardId\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport { current };\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\n\nexport default history;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport 'normalize.css';\nimport './index.scss';\nimport { App } from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { FirebaseContext } from './components/Firebase';\nimport reducers from './store/reducers';\nimport firebase from './store/firebase';\nimport history from './store/history';\n\nconst store = createStore(reducers, {}, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <FirebaseContext.Provider value={firebase}>\n      <Router basename={process.env.PUBLIC_URL} history={history}>\n        <App />\n      </Router>\n    </FirebaseContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}