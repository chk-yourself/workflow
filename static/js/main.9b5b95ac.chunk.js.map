{"version":3,"sources":["assets/feather/feather-sprite.svg","components/Firebase/context.js","components/Firebase/Firebase.js","constants/routes.js","components/Button/Button.js","components/SignOut/SignOutButton.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Icon/Icon.js","components/Navbar/Navbar.js","components/Input/Input.js","components/SignUp/SignUpForm.js","components/UserFormPage/UserFormPage.js","components/SignUp/SignUp.js","components/SignUp/index.js","components/SignIn/SignInForm.js","components/PasswordForget/PasswordForgetForm.js","components/PasswordForget/PasswordForget.js","components/PasswordForget/index.js","components/SignIn/SignIn.js","store/firebase.js","ducks/user/actions.js","ducks/user/types.js","ducks/user/selectors.js","ducks/user/reducers.js","ducks/current/actions.js","ducks/current/types.js","ducks/current/selectors.js","components/BoardGrid/BoardGrid.js","components/BoardGrid/BoardTile.js","ducks/boards/actions.js","ducks/boards/types.js","ducks/boards/selectors.js","ducks/boards/reducers.js","components/BoardGrid/BoardGridContainer.js","components/Modal/Modal.js","components/BoardComposer/BoardComposer.js","constants/droppableTypes.js","components/ListComposer/ListComposer.js","components/Board/Board.js","ducks/lists/actions.js","ducks/lists/types.js","ducks/lists/selectors.js","ducks/lists/reducers.js","ducks/cards/selectors.js","ducks/cards/actions.js","ducks/cards/types.js","ducks/cards/reducers.js","ducks/tasks/actions.js","ducks/tasks/types.js","ducks/tasks/selectors.js","ducks/tasks/reducer.js","components/Textarea/Textarea.js","components/CardComposer/CardComposer.js","components/Menu/Menu.js","components/Menu/MenuItem.js","components/Popover/Popover.js","components/Popover/PopoverWrapper.js","components/Card/Card.js","components/List/Cards.js","components/List/List.js","components/Toolbar/Toolbar.jsx","components/Checkbox/Checkbox.js","components/CardEditor/CardEditorMoreActions.js","components/CardEditor/CardEditor.js","utils/utils.js","components/Board/BoardContainer.js","components/Home/Home.js","components/PasswordChange/PasswordChangeForm.js","components/Account/Account.js","components/Header/Header.jsx","components/App/App.js","serviceWorker.js","store/reducers.js","ducks/current/reducers.js","store/history.js","index.js"],"names":["module","exports","__webpack_require__","p","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","createUserWithEmailAndPassword","email","password","auth","signInWithEmailAndPassword","signOut","passwordReset","sendPasswordResetEmail","passwordUpdate","newPassword","currentUser","updatePassword","getTimestamp","firestore","FieldValue","serverTimestamp","addToArray","value","arrayUnion","removeFromArray","arrayRemove","getUserDoc","userId","db","collection","doc","addUser","_ref","name","username","_ref$boardIds","boardIds","set","updateUser","newValue","arguments","length","undefined","update","getBoardDoc","boardId","updateBoard","objectSpread","lastModifiedAt","addBoard","_ref2","boardTitle","add","createdAt","listIds","authorId","memberIds","then","ref","id","getListDoc","listId","updateList","addList","_ref3","listTitle","cardIds","deleteList","_ref4","batch","listRef","boardRef","delete","where","get","snapshot","docs","forEach","commit","console","log","catch","error","getCardDoc","cardId","addCard","_ref5","cardTitle","updateCard","deleteCard","_ref6","cardRef","moveCardToList","_ref7","origListId","newListId","updatedCardIds","origListRef","newListRef","getTaskDoc","taskId","addTask","_ref8","_ref8$memberIds","_ref8$boardId","_ref8$cardId","_ref8$dueDate","dueDate","text","isCompleted","createdBy","assignedTo","concat","toConsumableArray","taskIds","updateTask","initializeApp","HOME","Button","children","_ref$type","type","onClick","_ref$className","className","_ref$color","color","_ref$size","size","_ref$variant","variant","disabled","_ref$iconOnly","iconOnly","buttonRef","objectWithoutProperties","defaultProps","components_Button_Button","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","authUser","inherits","createClass","key","_this2","listener","onAuthStateChanged","setState","Session_context","Provider","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","Icon","addClass","trim","xmlns","xmlnsXlink","viewBox","width","height","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","xlinkHref","featherIcons","NavLinksAuth","Link","to","ROUTES","components_SignOut_SignOutButton","NavLinksNonAuth","_ref2$className","Navbar","viewportWidth","window","innerWidth","isMobileNavVisible","handleResize","toggleMobileNavVisibility","prevState","handleClick","e","minWidth","target","matches","handleOutsideClick","preventDefault","navEl","contains","addEventListener","document","removeEventListener","_this$state","_this$props","isMobileView","navRef","el","Icon_Icon","Navbar_NavLinksAuth","Navbar_NavLinksNonAuth","Input","Fragment","hideLabel","htmlFor","title","onChange","placeholder","required","isRequired","onBlur","INITIAL_STATE","passwordOne","passwordTwo","SignUpForm","onSubmit","user","uid","defineProperty","_this$state2","isInvalid","components_Input_Input","message","UserFormPage","SignUpPage","components_UserFormPage_UserFormPage","SignUp_SignUpForm","SignUpLink","SignInForm","PasswordForgetForm","PasswordForgetPage","PasswordForget_PasswordForgetForm","PasswordForgetLink","SignInPage","SignIn_SignInForm","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","updateUserBoards","loadUserData","fetchUserData","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","data","sent","t0","stop","_x","apply","getUserData","action","selectBoard","selectList","selectCard","getCurrentBoardId","current","getCurrentListId","getCurrentCardId","getCurrent","BoardGrid","BoardTile","loadBoardsById","boardsById","fetchBoardsById","updateBoardsById","board","reorderLists","updateListIds","getBoardsById","getBoardsArray","keys","map","getBoard","BoardGridContainer","onSnapshot","querySnapshot","docChanges","change","_this$props$user","boardsArray","boardTiles","BoardGrid_BoardTile","BoardGrid_BoardGrid","openBoardComposer","connect","userSelectors","boardSelectors","userActions","boardActions","currentActions","Modal","onModalClose","onModalClick","BoardComposer","handleSubmit","onClose","components_Modal_Modal","CARD","LIST","isActive","ListComposer","resetForm","onReset","onFocus","currentSelectors","Board","react_beautiful_dnd_esm","droppableId","droppableTypes","direction","provided","innerRef","droppableProps","components_ListComposer_ListComposer","loadListsById","listsById","fetchListsById","updateListsById","list","getListsById","getListsArray","getCardsById","cardsById","getCardsArray","ownProps","loadCardsById","fetchCardsById","cards","updateCardsById","card","loadTasksById","tasksById","fetchTasksById","tasks","updateTasksById","task","fetchCardTasks","_callee2","_context2","_x2","fetchUserTasks","_callee3","_context3","_x3","taskData","deleteTask","getTasksById","getTasksArray","_toPropertyKey","Textarea","autoHeightResize","isAutoHeightResizeEnabled","textareaEl","style","scrollHeight","createRef","onInput","CardComposer","Textarea_Textarea_Textarea","Menu","MenuItem","Popover","onOutsideClick","PopoverWrapper","isOpen","componentEl","toggleOpen","alignInner","alignOuter","buttonProps","wrapperClass","popoverClass","anchorEl","popoverWrapperStyle","offsetTop","offsetLeft","position","top","Popover_Popover","align","Card","handleCardClick","onCardClick","_this$props2","cardIndex","draggableId","index","draggableProps","dragHandleProps","headerEl","Cards","scrollToBottom","listEnd","scrollIntoView","prevProps","onCardDelete","minHeight","isDraggingOver","Card_Card_Card","float","clear","List","handleListDelete","newListTitle","isDragging","_this$props3","listIndex","isFetchingCards","viewportHeight","listHeaderEl","PopoverWrapper_PopoverWrapper","components_Menu_Menu","Menu_MenuItem","href","Cards_Cards","handleCardDelete","components_CardComposer_CardComposer","cardSelectors","Toolbar","Checkbox","isChecked","labelClass","checked","CardEditorMoreActions","onMenuClick","data-action","CardEditor","updateCardTasks","tasksArray","cardTasks","reduce","onCardEditorClose","cardKey","cardDescription","currentFocus","onSubmitComment","resetNewTaskForm","newTask","handleModalClick","commentFormRef","newTaskFormEl","handleMoreActions","dataset","onTaskChange","handleCheckboxChange","toggleTaskCompletion","cardComment","isCommentFormFocused","setCommentFormRef","element","_this$props4","hasTasks","isCommentInvalid","isNewTaskInvalid","commentFormIsFocused","components_Toolbar_Toolbar","CardEditor_CardEditorMoreActions","components_Checkbox_Checkbox","listSelectors","listsArray","taskSelectors","listActions","cardActions","isEqual","other","prototype","toString","typeArr","valueLen","compare","item1","item2","itemType","i","hasOwnProperty","windowDebouncer","callback","request","_len","args","Array","_key","cancelAnimationFrame","requestAnimationFrame","BoardContainer","onDragStart","onDragEnd","destination","source","isMovedWithinList","splice","updatedListIds","toggleCardEditor","isCardEditorOpen","onTitleChange","onTitleBlur","newBoardTitle","isFetching","boardObserver","updatedBoard","utils","listObserver","taskObserver","cardObserver","_this3","lists","components_List_List","components_Board_Board","components_CardEditor_CardEditor","taskActions","HomePage","toggleBoardComposer","isBoardComposerOpen","createBoard","BoardComposer_BoardComposer_BoardComposer","Switch","Route","exact","path","render","BoardGrid_BoardGridContainer","Board_BoardContainer","match","params","currentBoardId","PasswordChangeForm","PasswordChange_PasswordChangeForm","Header","Navbar_Navbar_Navbar","Header_Header_Header","component","LandingPage","AccountPage","AdminPage","Boolean","location","hostname","combineReducers","createBrowserHistory","basename","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","es","context","Router","components_App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9b5b95ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/feather-sprite.0ed672ce.svg\";","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import firebase from 'firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\nclass Firebase {\n  constructor() {\n    firebase.initializeApp(config);\n    this.auth = firebase.auth();\n    this.db = firebase.firestore();\n  }\n\n  // Auth API\n  createUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  signInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  signOut = () => this.auth.signOut();\n\n  passwordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  passwordUpdate = newPassword =>\n    this.auth.currentUser.updatePassword(newPassword);\n\n  // Utility API\n\n  getTimestamp = () => firebase.firestore.FieldValue.serverTimestamp();\n  addToArray = value => firebase.firestore.FieldValue.arrayUnion(value);\n  removeFromArray = value => firebase.firestore.FieldValue.arrayRemove(value);\n\n  // User API\n\n  getUserDoc = userId => this.db.collection('users').doc(userId);\n\n  addUser = ({ userId, name, username, email, boardIds = [] }) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .set({ userId, name, username, email, boardIds });\n\n  updateUser = (userId, newValue = {}) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .update(newValue);\n\n  // Board API\n\n  getBoardDoc = boardId => this.db.collection('boards').doc(boardId);\n\n  updateBoard = (boardId, newValue = {}) =>\n    this.getBoardDoc(boardId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  addBoard = ({ userId, boardTitle }) => {\n    this.db\n      .collection('boards')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        listIds: [],\n        authorId: userId,\n        memberIds: [userId],\n        boardTitle\n      })\n      .then(ref => {\n        this.updateUser(userId, {\n          boardIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  // List API\n\n  getListDoc = listId => this.db.collection('lists').doc(listId);\n\n  updateList = (listId, newValue = {}) =>\n    this.getListDoc(listId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  addList = ({ boardId, listTitle }) => {\n    this.db\n      .collection('lists')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        cardIds: [],\n        boardId,\n        listTitle\n      })\n      .then(ref => {\n        this.updateBoard(boardId, {\n          listIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  deleteList = ({ listId, boardId }) => {\n    const batch = this.db.batch();\n    const listRef = this.getListDoc(listId);\n    const boardRef = this.getBoardDoc(boardId);\n\n    // Delete list\n    batch.delete(listRef);\n\n    // Remove list id from board\n    batch.update(boardRef, {\n      listIds: this.removeFromArray(listId),\n      lastModifiedAt: this.getTimestamp()\n    });\n\n    // Delete cards assigned to list\n    this.db\n      .collection('cards')\n      .where('listId', '==', listId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('list deleted');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  // Card API\n\n  getCardDoc = cardId => this.db.collection('cards').doc(cardId);\n\n  addCard = ({ boardId, listId, cardTitle }) => {\n    this.db\n      .collection('cards')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        listId,\n        boardId,\n        cardTitle\n      })\n      .then(ref => {\n        this.updateList(listId, {\n          cardIds: this.addToArray(ref.id),\n          lastModifiedAt: this.getTimestamp()\n        });\n      });\n  };\n\n  updateCard = (cardId, newValue = {}) => {\n    this.getCardDoc(cardId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  deleteCard = ({ cardId, listId }) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const listRef = this.getListDoc(listId);\n    batch.delete(cardRef);\n    batch.update(listRef, {\n      cardIds: this.removeFromArray(cardId),\n      lastModifiedAt: this.getTimestamp()\n    });\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log('card deleted');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  moveCardToList = ({ cardId, origListId, newListId, updatedCardIds }) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const origListRef = this.getListDoc(origListId);\n    const newListRef = this.getListDoc(newListId);\n    batch.update(cardRef, {\n      listId: newListId,\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(origListRef, {\n      cardIds: this.removeFromArray(cardId),\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(newListRef, {\n      cardIds: updatedCardIds,\n      lastModifiedAt: this.getTimestamp()\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('card moved');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  // Task API\n\n  getTaskDoc = taskId => this.db.collection('tasks').doc(taskId);\n\n  addTask = ({ userId, memberIds = [], boardId = null, cardId = null, dueDate = null, text }) => {\n    this.db\n      .collection('tasks')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        isCompleted: false,\n        createdBy: userId,\n        assignedTo: [userId, ...memberIds],\n        dueDate,\n        boardId,\n        cardId,\n        text\n      })\n      .then(ref => {\n        if (cardId === null) return;\n        this.updateCard(cardId, {\n          taskIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  updateTask = (taskId, newValue = {}) => {\n    this.getTaskDoc(taskId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n}\n\nexport default Firebase;\n","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const BOARD = '/home/board/:id';\n","import React from 'react';\nimport './Button.scss';\n\nconst Button = ({\n  children,\n  type = 'button',\n  onClick,\n  className = '',\n  color = 'neutral',\n  size = 'md',\n  variant = 'text',\n  disabled,\n  name,\n  iconOnly = false,\n  buttonRef,\n  ...props\n}) => (\n  // eslint-disable-next-line react/button-has-type\n  <button\n    className={`${className} ${color} ${size} ${variant} ${\n      iconOnly ? 'icon-only' : ''\n    }`}\n    type={type}\n    onClick={onClick}\n    disabled={disabled}\n    name={name}\n    ref={buttonRef}\n    {...props}\n  >\n    {children}\n  </button>\n);\n\nButton.defaultProps = {\n  type: 'button',\n  className: '',\n  color: 'neutral',\n  size: 'md',\n  variant: 'text',\n  iconOnly: false\n};\n\nexport default Button;\n","import React from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Button } from '../Button';\nimport './SignOutButton.scss';\n\nconst SignOutButton = ({ firebase }) => (\n  <Button\n    type=\"button\"\n    onClick={firebase.signOut}\n    className=\"btn--sign-out\"\n    color=\"primary\"\n  >\n    Sign Out\n  </Button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        authUser: null\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        authUser\n          ? this.setState({ authUser })\n          : this.setState({ authUser: null });\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport AuthUserContext from './context';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          this.props.history.push(ROUTES.SIGN_IN);\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n  return compose(\n    withRouter,\n    withFirebase\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from 'react';\nimport featherIcons from '../../assets/feather/feather-sprite.svg';\n\nfunction Icon(props) {\n  return (\n    <svg\n      className={`feather feather-${props.name} ${props.addClass || ''}`.trim()}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n      height=\"24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <use xlinkHref={`${featherIcons}#${props.name}`} />\n    </svg>\n  );\n}\n\nexport default Icon;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { SignOutButton } from '../SignOut';\nimport './Navbar.scss';\nimport { AuthUserContext } from '../Session';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\n\nconst NavLinksAuth = ({ className = '', onClick }) => (\n  <ul className={`navbar__links ${className}`} onClick={onClick}>\n    <li>\n      <Link to={ROUTES.HOME}>Home</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ADMIN}>Admin</Link>\n    </li>\n    <li>\n      <SignOutButton />\n    </li>\n  </ul>\n);\n\nconst NavLinksNonAuth = ({ className = '', onClick }) => (\n  <ul className={`navbar__links ${className}`} onClick={onClick}>\n    <li>\n      <Link to={ROUTES.SIGN_IN}>Log In</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.SIGN_UP}>Get Started</Link>\n    </li>\n  </ul>\n);\n\nexport default class Navbar extends Component {\n  static defaultProps = {\n    minWidth: 768\n  };\n\n  state = {\n    viewportWidth: window.innerWidth,\n    isMobileNavVisible: false\n  };\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    document.addEventListener('click', this.handleOutsideClick);\n  }\n\n  handleResize = () => {\n    this.setState({\n      viewportWidth: window.innerWidth\n    });\n  };\n\n  toggleMobileNavVisibility = () => {\n    this.setState(prevState => ({\n      isMobileNavVisible: !prevState.isMobileNavVisible\n    }));\n  };\n\n  handleClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    if (!isMobileView) return;\n    if (e.target.matches('button') || e.target.matches('a')) {\n      this.toggleMobileNavVisibility();\n    }\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    document.removeEventListener('click', this.handleOutsideClick);\n  }\n\n  handleOutsideClick = e => {\n    e.preventDefault(); // prevents double triggering if `touch` event is fired\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    if (!isMobileView || this.navEl.contains(e.target)) return;\n\n    this.setState({\n      isMobileNavVisible: false\n    });\n  };\n\n  render() {\n    const { viewportWidth, isMobileNavVisible } = this.state;\n    const { minWidth, navRef } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    return (\n      <nav\n        className={`navbar ${isMobileView ? 'is-collapsed' : ''} ${\n          isMobileView && isMobileNavVisible ? 'show-links' : ''\n        }`}\n        ref={el => (this.navEl = el)}\n      >\n        <span className=\"navbar__logo\">\n          <Link to={ROUTES.LANDING}>workflow</Link>\n        </span>\n        {isMobileView && (\n          <Button\n            type=\"button\"\n            color=\"primary\"\n            onClick={this.toggleMobileNavVisibility}\n            iconOnly\n          >\n            <Icon name=\"menu\" />\n          </Button>\n        )}\n        <AuthUserContext.Consumer>\n          {authUser =>\n            authUser ? (\n              <NavLinksAuth onClick={this.handleClick} />\n            ) : (\n              <NavLinksNonAuth onClick={this.handleClick} />\n            )\n          }\n        </AuthUserContext.Consumer>\n      </nav>\n    );\n  }\n}\n","import React from 'react';\nimport './Input.scss';\n\nconst Input = props => {\n  return (\n    <>\n      {!props.hideLabel && (\n        <label htmlFor={props.name} className=\"input__label\">\n          {props.title}\n        </label>\n      )}\n      <input\n        className={props.className}\n        id={props.name}\n        name={props.name}\n        type={props.type}\n        value={props.value}\n        onChange={props.onChange}\n        placeholder={props.placeholder}\n        required={props.isRequired}\n        onBlur={props.onBlur}\n      />\n    </>\n  );\n};\n\nexport default Input;\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  username: '',\n  name: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { username, email, name, passwordOne } = this.state;\n    this.props.firebase\n      .createUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        const userId = authUser.user.uid;\n        return this.props.firebase.addUser({\n          userId,\n          name,\n          username,\n          email\n        });\n      })\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const {\n      username,\n      name,\n      email,\n      passwordOne,\n      passwordTwo,\n      error\n    } = this.state;\n    const isInvalid =\n      passwordOne === '' ||\n      passwordTwo === '' ||\n      email === '' ||\n      username === '' ||\n      passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"name\"\n          title=\"Full Name\"\n          value={name}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"username\"\n          title=\"Username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordOne\"\n          title=\"Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          title=\"Confirm Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Create Account\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignUpForm);\n","import React from 'react';\nimport './UserFormPage.scss';\n\nconst UserFormPage = ({ title, children }) => (\n  <main className=\"user-form__container\">\n    <h1 className=\"user-form__title\">{title}</h1>\n    {children}\n  </main>\n);\n\nexport default UserFormPage;\n","import React from 'react';\nimport SignUpForm from './SignUpForm';\nimport { UserFormPage } from '../UserFormPage';\n\nconst SignUpPage = () => (\n  <UserFormPage title=\"Create an account\">\n    <SignUpForm />\n  </UserFormPage>\n);\n\nexport default SignUpPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nexport { default as SignUpPage } from './SignUp';\nexport { default as SignUpForm } from './SignUpForm';\nexport { SignUpLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email, password } = this.state;\n    this.props.firebase\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n    const isInvalid = password === '' || email === '';\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"password\"\n          title=\"Password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Log In\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignInForm);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null\n};\n\nclass PasswordForgetForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .passwordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, error } = this.state;\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Reset My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordForgetForm);\n","import React from 'react';\nimport PasswordForgetForm from './PasswordForgetForm';\nimport { UserFormPage } from '../UserFormPage';\n\nconst PasswordForgetPage = () => (\n  <UserFormPage title=\"Forgot your password?\">\n    <PasswordForgetForm />\n  </UserFormPage>\n);\n\nexport default PasswordForgetPage;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport {default as PasswordForgetForm} from './PasswordForgetForm';\nexport {default as PasswordForgetPage} from './PasswordForget';\nexport {PasswordForgetLink};","import React from 'react';\nimport SignInForm from './SignInForm';\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { UserFormPage } from '../UserFormPage';\n\nconst SignInPage = () => (\n  <UserFormPage title=\"Log In\">\n    <SignInForm />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </UserFormPage>\n);\n\nexport default SignInPage;\n","import { Firebase } from '../components/Firebase';\n\nconst firebase = new Firebase();\n\nexport default firebase;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const updateUserBoards = boardIds => {\n  return {\n    type: types.UPDATE_USER_BOARDS,\n    boardIds\n  };\n};\n\nexport const loadUserData = user => {\n  return {\n    type: types.LOAD_USER_DATA,\n    user\n  };\n};\n\nexport const fetchUserData = userId => {\n  return async dispatch => {\n    try {\n      const user = await firebase\n        .getUserDoc(userId)\n        .get()\n        .then(doc => doc.data());\n      dispatch(loadUserData(user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","export const UPDATE_USER_BOARDS = 'ADD_USER_BOARD';\nexport const LOAD_USER_DATA = 'LOAD_USER_DATA';\nexport const LOAD_USER_BOARDS = 'LOAD_USER_BOARDS';\n","export const getUserData = state => {\n  return state.user;\n};\n","import * as types from './types';\n\nconst user = (state = {}, action) => {\n  switch (action.type) {\n    case types.UPDATE_USER_BOARDS:\n      return {\n        ...state,\n        boardIds: [...action.boardIds]\n      };\n    case types.LOAD_USER_DATA: {\n      const { user } = action;\n      return {\n        ...state,\n        ...user\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default user;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const selectBoard = boardId => {\n  return {\n    type: types.SELECT_BOARD,\n    boardId\n  };\n};\n\nexport const selectList = listId => {\n  return {\n    type: types.SELECT_LIST,\n    listId\n  };\n};\n\nexport const selectCard = cardId => {\n  return {\n    type: types.SELECT_CARD,\n    cardId\n  };\n};\n","export const SELECT_BOARD = 'SELECT_BOARD';\nexport const SELECT_LIST = 'SELECT_LIST';\nexport const SELECT_CARD = 'SELECT_CARD';\n","export const getCurrentBoardId = state => {\n  return state.current.boardId;\n};\n\nexport const getCurrentListId = state => {\n  return state.current.listId;\n};\n\nexport const getCurrentCardId = state => {\n  return state.current.cardId;\n};\n\nexport const getCurrent = state => {\n  return state.current;\n};\n","import React, { Component } from 'react';\n\nexport default class BoardGrid extends Component {\n  render() {\n    return <ul className=\"board-grid\">{this.props.children}</ul>;\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BoardTile = props => {\n  const { boardId, boardTitle, onClick } = props;\n  return (\n    <li className=\"board-grid__tile\">\n      <Link\n        className=\"board-grid__link\"\n        to={`/home/board/${boardId}`}\n        onClick={onClick}\n      >\n        <span className=\"board-grid__title\">{boardTitle}</span>\n      </Link>\n    </li>\n  );\n};\n\nexport default BoardTile;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadBoardsById = boardsById => {\n  return {\n    type: types.LOAD_BOARDS_BY_ID,\n    boardsById\n  };\n};\n\nexport const fetchBoardsById = userId => {\n  return async dispatch => {\n    try {\n      const boardsById = await firebase.db\n        .collection('boards')\n        .where('memberIds', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const boardsById = {};\n          snapshot.forEach(doc => {\n            boardsById[doc.id] = doc.data();\n          });\n          return boardsById;\n        });\n      dispatch(loadBoardsById(boardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateBoardsById = board => {\n  return {\n    type: types.UPDATE_BOARDS_BY_ID,\n    board\n  };\n};\n\nexport const reorderLists = (boardId, listIds) => {\n  return {\n    type: types.REORDER_LISTS,\n    boardId,\n    listIds\n  };\n};\n\nexport const updateListIds = (boardId, listIds) => {\n  return {\n    type: types.UPDATE_LIST_IDS,\n    boardId,\n    listIds\n  };\n};\n","export const LOAD_BOARDS_BY_ID = 'LOAD_BOARDS_BY_ID';\nexport const UPDATE_BOARDS_BY_ID = 'UPDATE_BOARDS_BY_ID';\nexport const REORDER_LISTS = 'REORDER_LISTS';\nexport const UPDATE_LIST_IDS = 'UPDATE_LIST_IDS';","export const getBoardsById = state => {\n  return state.boardsById;\n};\n\nexport const getBoardsArray = state => {\n  const { boardsById } = state;\n  return Object.keys(boardsById).map(boardId => {\n    return {\n      boardId,\n      ...boardsById[boardId]\n    };\n  });\n};\n\nexport const getBoard = (state, boardId) => {\n  const { boardsById } = state;\n  return boardsById[boardId];\n};\n","import * as types from './types';\n\nconst boardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_BOARDS_BY_ID: {\n      const { boardsById } = action;\n      return {\n        ...state,\n        ...boardsById\n      };\n    }\n    case types.UPDATE_BOARDS_BY_ID: {\n      const { board } = action;\n      return {\n        ...state,\n        ...board\n      };\n    }\n    case types.UPDATE_LIST_IDS:\n    case types.REORDER_LISTS: {\n      const { boardId, listIds } = action;\n      return {\n        ...state,\n        [boardId]: {\n          ...state[boardId],\n          listIds\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default boardsById;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport BoardGrid from './BoardGrid';\nimport BoardTile from './BoardTile';\nimport './BoardGrid.scss';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Icon } from '../Icon';\n\nclass BoardGridContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const { userId } = this.props.user;\n    this.listener = this.props.firebase.db\n      .collection('boards')\n      .where('memberIds', 'array-contains', userId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const board = {\n            [change.doc.id]: change.doc.data()\n          };\n          this.props.updateBoardsById(board);\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  }\n\n  render() {\n    const { boardIds, userId } = this.props.user;\n    const { boardsArray, selectBoard } = this.props;\n    const boardTiles = boardsArray.map(board => {\n      const { boardTitle, boardId } = board;\n      return (\n        <BoardTile\n          key={boardId}\n          boardTitle={boardTitle}\n          boardId={boardId}\n          onClick={() => selectBoard(boardId)}\n        />\n      );\n    });\n    return (\n      <section>\n        <BoardGrid>\n          {boardTiles}\n          <button\n            type=\"button\"\n            className=\"board-grid__tile board-grid__btn--add\"\n            onClick={this.props.openBoardComposer}\n          >\n            <Icon name=\"plus-circle\" />\n            Create new board\n          </button>\n        </BoardGrid>\n      </section>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUserBoards: boardIds =>\n      dispatch(userActions.updateUserBoards(boardIds)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardGridContainer)\n);\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport './Modal.scss';\n\nconst Modal = ({\n  onModalClose,\n  children,\n  className = '',\n  onModalClick,\n  size = 'md'\n}) => {\n  return (\n    <div className=\"modal\" onClick={onModalClick}>\n      <div className={`modal__content ${className} modal__content--${size}`}>\n        <Button\n          type=\"button\"\n          className=\"modal__btn--close\"\n          onClick={onModalClose}\n          iconOnly\n        >\n          <Icon name=\"x\" />\n        </Button>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport { Modal } from '../Modal';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\nimport './BoardComposer.scss';\n\nconst INITIAL_STATE = {\n  boardTitle: ''\n};\n\nexport default class BoardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { boardTitle } = this.state;\n    const { handleSubmit, onClose } = this.props;\n    this.props.handleSubmit(boardTitle);\n    this.props.onClose();\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { boardTitle } = this.state;\n    return (\n      <Modal onModalClose={this.props.onClose} size=\"sm\">\n        <form onSubmit={this.onSubmit}>\n          <Input\n            name=\"boardTitle\"\n            title=\"Board Title\"\n            value={boardTitle}\n            onChange={this.onChange}\n            type=\"text\"\n          />\n          <Button\n            className=\"board-composer__btn--add\"\n            type=\"submit\"\n            onClick={this.onSubmit}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Create Board\n          </Button>\n        </form>\n      </Modal>\n    );\n  }\n}\n","export const CARD = 'CARD';\nexport const LIST = 'LIST';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input } from '../Input';\nimport { Icon } from '../Icon';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Button } from '../Button';\nimport './ListComposer.scss';\n\nconst INITIAL_STATE = {\n  listTitle: '',\n  isActive: false\n};\n\nclass ListComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ listTitle: '' });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { listTitle } = this.state;\n    const { boardId } = this.props;\n    this.props.firebase.addList({ boardId, listTitle });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = e => {\n    if (e.target.value === '') {\n      this.setState({\n        isActive: false\n      });\n    }\n  };\n\n  render() {\n    const { listTitle, isActive } = this.state;\n    return (\n      <div\n        className={`list-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"list-composer__form\" onSubmit={this.onSubmit}>\n          <Input\n            onChange={this.onChange}\n            value={listTitle}\n            placeholder={isActive ? 'Enter list title...' : 'Add a list'}\n            required={true}\n            name=\"listTitle\"\n            hideLabel={true}\n            className=\"list-composer__input\"\n          />\n          {isActive && (\n            <div className=\"list-composer__footer\">\n              <Button\n                className=\"list-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add List\n              </Button>\n              <Button\n                className=\"list-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => dispatch(userActions.getUserData(userId)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListComposer)\n);\n","import React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { ListComposer } from '../ListComposer';\n\nconst Board = props => {\n  const { boardId, children } = props;\n  return (\n    <Droppable\n      droppableId={boardId}\n      type={droppableTypes.LIST}\n      direction=\"horizontal\"\n    >\n      {provided => (\n        <div\n          className=\"board\"\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n        >\n          {children}\n          {provided.placeholder}\n          <ListComposer boardId={boardId} />\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nexport default Board;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadListsById = listsById => {\n  return {\n    type: types.LOAD_LISTS_BY_ID,\n    listsById\n  };\n};\n\nexport const fetchListsById = boardId => {\n  return async dispatch => {\n    try {\n      const listsById = await firebase.db\n        .collection('lists')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const listsById = {};\n          snapshot.forEach(doc => {\n            listsById[doc.id] = doc.data();\n          });\n          return listsById;\n        });\n      dispatch(loadListsById(listsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateListsById = list => {\n  return {\n    type: types.UPDATE_LISTS_BY_ID,\n    list\n  };\n};\n","export const LOAD_LISTS_BY_ID = 'LOAD_LISTS_BY_ID';\nexport const FETCH_LISTS_BY_ID = 'FETCH_LISTS_BY_ID';\nexport const UPDATE_LISTS_BY_ID = 'UPDATE_LISTS_BY_ID';\nexport const DELETE_CARD = 'DELETE_CARD';\n","export const getListsById = state => {\n  return state.listsById;\n};\n\nexport const getListsArray = state => {\n  const { listsById, boardsById, current } = state;\n  const { boardId } = current;\n  const board = boardsById[boardId];\n  if (!board) return null;\n  const { listIds } = board;\n\n  return listIds.map(listId => {\n    return {\n      listId,\n      ...listsById[listId]\n    };\n  });\n};\n","import * as types from './types';\n\nconst listsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_LISTS_BY_ID: {\n      const { listsById } = action;\n      return {\n        ...state,\n        ...listsById\n      };\n    }\n    case types.UPDATE_LISTS_BY_ID: {\n      const { list } = action;\n      return {\n        ...state,\n        ...list\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default listsById;\n","export const getCardsById = state => {\n  return state.cardsById;\n};\n\nexport const getCardsArray = (state, ownProps) => {\n  const { cardsById } = state;\n  const { cardIds } = ownProps;\n  return cardIds.map(cardId => cardsById[cardId]);\n};\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadCardsById = cardsById => {\n  return {\n    type: types.LOAD_CARDS_BY_ID,\n    cardsById\n  };\n};\n\nexport const fetchCardsById = boardId => {\n  return async dispatch => {\n    try {\n      const cardsById = await firebase.db\n        .collection('cards')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const cards = {};\n          snapshot.forEach(doc => {\n            cards[doc.id] = {\n              cardId: doc.id,\n              ...doc.data()\n            };\n          });\n          return cards;\n        });\n      dispatch(loadCardsById(cardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateCardsById = card => {\n  return {\n    type: types.UPDATE_CARDS_BY_ID,\n    card\n  };\n};\n\n","export const ADD_CARD = 'ADD_CARD';\nexport const SET_CARD_DUE_DATE = 'SET_CARD_DUE_DATE';\nexport const ADD_CARD_SUBTASK = 'ADD_CARD_SUBTASK';\nexport const REMOVE_CARD_SUBTASK = 'REMOVE_CARD_SUBTASK';\nexport const CHANGE_CARD_DESCRIPTION = 'CHANGE_CARD_DESCRIPTION';\nexport const SET_CARD_COLOR = 'SET_CARD_COLOR';\nexport const DELETE_CARD = 'DELETE_CARD';\nexport const MOVE_CARD = 'MOVE_CARD';\nexport const LOAD_CARDS_BY_ID = 'LOAD_CARDS_BY_ID';\nexport const UPDATE_CARDS_BY_ID = 'UPDATE_CARDS_BY_ID';\n\n","import * as types from './types';\n\nconst cardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_CARDS_BY_ID: {\n      const { cardsById } = action;\n      return {\n        ...state,\n        ...cardsById\n      };\n    }\n    case types.UPDATE_CARDS_BY_ID: {\n      const { card } = action;\n      return {\n        ...state,\n        ...card\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default cardsById;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadTasksById = tasksById => {\n  return {\n    type: types.LOAD_TASKS_BY_ID,\n    tasksById\n  };\n};\n\nexport const fetchTasksById = () => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateTasksById = task => {\n  return {\n    type: types.UPDATE_TASKS_BY_ID,\n    task\n  };\n};\n\nexport const fetchCardTasks = boardId => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserTasks = userId => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .where('assignedTo', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addTask = ({ taskId, taskData }) => {\n  return {\n    type: types.ADD_TASK,\n    taskId,\n    taskData\n  };\n};\n\nexport const deleteTask = taskId => {\n  return {\n    type: types.DELETE_TASK,\n    taskId\n  };\n};\n\nexport const updateTask = ({ taskId, taskData }) => {\n  return {\n    type: types.UPDATE_TASK,\n    taskId,\n    taskData\n  };\n};\n","export const LOAD_TASKS_BY_ID = 'LOAD_TASKS_BY_ID';\nexport const FETCH_TASKS_BY_ID = 'FETCH_TASKS_BY_ID';\nexport const UPDATE_TASKS_BY_ID = 'UPDATE_TASKS_BY_ID';\nexport const ADD_TASK = 'ADD_TASK';\nexport const UPDATE_TASK = 'UPDATE_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\n","export const getTasksById = state => {\n  const { tasksById } = state;\n  return tasksById;\n};\n\nexport const getTasksArray = (state, taskIds) => {\n  const { tasksById } = state;\n  if (!taskIds) return [];\n\n  return taskIds.map(taskId => {\n    return tasksById[taskId];\n  });\n};\n","import * as types from './types';\n\nconst tasksById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_TASKS_BY_ID: {\n      const { tasksById } = action;\n      return {\n        ...state,\n        ...tasksById\n      };\n    }\n    case types.ADD_TASK: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        [taskId]: {\n          taskId,\n          ...taskData\n        }\n      };\n    }\n    case types.DELETE_TASK: {\n      const { taskId } = action;\n      const { [taskId]: deletedTask, ...restOfTasks } = state;\n      return restOfTasks;\n    }\n    case types.UPDATE_TASK: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        [taskId]: {\n          ...state[taskId],\n          ...taskData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default tasksById;\n","import React, { Component, createRef } from 'react';\nimport './Textarea.scss';\n\nexport default class Textarea extends Component {\n  static defaultProps = {\n    isAutoHeightResizeEnabled: true\n  };\n\n  constructor(props) {\n    super(props);\n    this.textareaEl = createRef();\n  }\n\n  componentDidMount() {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n    this.autoHeightResize();\n  }\n\n  autoHeightResize = () => {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n\n    this.textareaEl.current.style.height = '0px'; // resets scroll height\n    this.textareaEl.current.style.height = `${\n      this.textareaEl.current.scrollHeight\n    }px`;\n  };\n\n  render() {\n    const {\n      className,\n      name,\n      value,\n      onChange,\n      placeholder,\n      isRequired,\n      onBlur,\n      onFocus\n    } = this.props;\n    return (\n      <textarea\n        className={`textarea ${className}`}\n        id={name}\n        name={name}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={isRequired}\n        onBlur={onBlur}\n        onInput={this.autoHeightResize}\n        ref={this.textareaEl}\n        onFocus={onFocus}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon } from '../Icon';\nimport { withAuthorization } from '../Session';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport './CardComposer.scss';\n\nconst INITIAL_STATE = {\n  cardTitle: '',\n  isActive: false\n};\n\nclass CardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ cardTitle: '' });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { cardTitle } = this.state;\n    const { boardId } = this.props.current;\n    const { listId } = this.props;\n    this.props.firebase.addCard({ boardId, listId, cardTitle });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onBlur = e => {\n    if (e.target.value !== '') return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const { cardTitle, isActive } = this.state;\n\n    return (\n      <div\n        className={`card-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"card-composer__form\" onSubmit={this.onSubmit}>\n          <Textarea\n            onChange={this.onChange}\n            value={cardTitle}\n            placeholder={isActive ? 'Enter card title...' : 'Add a card'}\n            isRequired\n            name=\"cardTitle\"\n            className=\"card-composer__textarea\"\n            isAutoHeightResizeEnabled={false}\n          />\n          {isActive && (\n            <div className=\"card-composer__footer\">\n              <Button\n                className=\"card-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add Card\n              </Button>\n              <Button\n                className=\"card-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardComposer)\n);\n","import React from 'react';\nimport './Menu.scss';\n\nconst Menu = ({ children, onClick, className = '' }) => {\n  return <ul className={`menu ${className}`} onClick={onClick}>{children}</ul>;\n};\n\nexport default Menu;\n","import React from 'react';\nimport './Menu.scss';\n\nconst MenuItem = ({ children, className = '' }) => {\n  return <li className={`menu__item ${className}`}>{children}</li>;\n};\n\nexport default MenuItem;\n","import React, { Component } from 'react';\n\nexport default class Popover extends Component {\n  componentDidMount() {\n    document.addEventListener('click', this.handleOutsideClick, false);\n  }\n\n  handleOutsideClick = e => {\n    const { onOutsideClick } = this.props;\n    onOutsideClick(e.target);\n    e.preventDefault();\n    document.removeEventListener('click', this.handleOutsideClick);\n  };\n\n  render() {\n    const { className, onClick, style, children } = this.props;\n    return (\n      <div className={`popover ${className}`} onClick={onClick} style={style}>\n        {children}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from '../Button';\nimport Popover from './Popover';\nimport './Popover.scss';\n\nexport default class PopoverWrapper extends Component {\n  state = {\n    isOpen: false\n  };\n\n  static defaultProps = {\n    wrapperClass: '',\n    popoverClass: '',\n    buttonProps: {},\n    align: 'left',\n    anchorEl: null\n  };\n\n  handleOutsideClick = target => {\n    if (this.componentEl && !this.componentEl.contains(target)) {\n      this.setState({\n        isOpen: false\n      });\n    }\n  };\n\n  toggleOpen = () => {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  };\n\n  render() {\n    const {\n      children,\n      alignInner,\n      alignOuter,\n      buttonProps,\n      wrapperClass,\n      popoverClass,\n      anchorEl\n    } = this.props;\n    const { isOpen } = this.state;\n\n    let popoverWrapperStyle = null;\n    \n    if (anchorEl) {\n      const { offsetTop, offsetLeft } = anchorEl;\n      popoverWrapperStyle = {\n        position: 'absolute',\n        top: offsetTop,\n        [alignOuter]: offsetLeft\n      };\n    }\n\n    return (\n      <div\n        className={`popover-wrapper ${isOpen ? 'is-active' : ''} ${wrapperClass}`}\n        ref={el => (this.componentEl = el)}\n        style={popoverWrapperStyle}\n      >\n        <Button type=\"button\" onClick={this.toggleOpen} {...buttonProps} />\n        {isOpen && (\n          <Popover\n            className={`align-${alignInner} ${popoverClass}`}\n            onClick={this.toggleOpen}\n            onOutsideClick={this.handleOutsideClick}\n          >\n            {children}\n          </Popover>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport './Card.scss';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { PopoverWrapper } from '../Popover';\nimport { Menu, MenuItem } from '../Menu';\n\nexport default class Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleCardClick = e => {\n    if (e.target.matches('button') || e.target.matches('a')) return;\n    const { cardId, onCardClick } = this.props;\n    onCardClick(cardId);\n  };\n\n  render() {\n    const { cardTitle, cardId, cardIndex } = this.props;\n    return (\n      <Draggable draggableId={cardId} index={cardIndex}>\n        {provided => (\n          <>\n            <div\n              className=\"card\"\n              onClick={this.handleCardClick}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              ref={provided.innerRef}\n            >\n              <div className=\"card__header\" ref={el => (this.headerEl = el)}>\n                <div className=\"card__tags\" />\n                <h3 className=\"card__title\">{cardTitle}</h3>\n              </div>\n              <div className=\"card__footer\">\n                <div className=\"card__labels\" />\n              </div>\n            </div>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { Card } from '../Card';\n\nexport default class Cards extends Component {\n  static propTypes = {\n    listId: PropTypes.string.isRequired\n  };\n\n  /*\n\n  shouldComponentUpdate(nextProps) {\n    if (this.props.cards === nextProps.cards) {\n      return false;\n    }\n    return true;\n  }\n*/\n  componentDidUpdate(prevProps) {\n    if (this.props.cards.length > prevProps.cards.length) {\n      this.scrollToBottom();\n    }\n  }\n\n  scrollToBottom = () => {\n    this.listEnd.scrollIntoView();\n  };\n\n  render() {\n    const { listId, cards, style, onCardClick, onCardDelete } = this.props;\n\n    return (\n      <Droppable droppableId={listId} type={droppableTypes.CARD}>\n        {(provided, snapshot) => (\n          <div\n            className=\"list__content\"\n            ref={provided.innerRef}\n            style={{\n              ...style,\n              minHeight: snapshot.isDraggingOver ? 80 : 16\n            }}\n            {...provided.droppableProps}\n          >\n            {cards.map((card, cardIndex) => {\n              const { cardId, cardTitle } = card;\n              return (\n                <Card\n                  key={cardId}\n                  cardTitle={cardTitle}\n                  cardId={cardId}\n                  cardIndex={cardIndex}\n                  listId={listId}\n                  onCardClick={onCardClick}\n                  onCardDelete={onCardDelete}\n                />\n              );\n            })}\n            {provided.placeholder}\n            <div\n              style={{ float: 'left', clear: 'both' }}\n              ref={el => (this.listEnd = el)}\n            />\n          </div>\n        )}\n      </Droppable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { CardComposer } from '../CardComposer';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\nimport { Input } from '../Input';\nimport Cards from './Cards';\nimport './List.scss';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDragging: this.props.isDragging,\n      listTitle: this.props.listTitle\n    };\n  }\n\n  handleListDelete = e => {\n    e.preventDefault();\n    const { listId, boardId, firebase } = this.props;\n    firebase.deleteList({ listId, boardId });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onBlur = e => {\n    const { listTitle, listId, firebase } = this.props;\n    const { listTitle: newListTitle } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newListTitle !== listTitle) {\n      firebase.updateList(listId, {\n        listTitle: newListTitle\n      });\n      console.log('updated!');\n    }\n  };\n\n  render() {\n    const {\n      cards,\n      onCardClick,\n      listId,\n      listIndex,\n      isFetchingCards\n    } = this.props;\n    if (isFetchingCards) return null;\n\n    const { listTitle, viewportHeight } = this.state;\n\n    return (\n      <Draggable draggableId={listId} index={listIndex}>\n        {provided => (\n          <>\n            <section\n              className=\"list\"\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <header\n                className=\"list__header\"\n                ref={el => (this.listHeaderEl = el)}\n              >\n                <Input\n                  className=\"list__input--title\"\n                  name=\"listTitle\"\n                  type=\"text\"\n                  value={listTitle}\n                  onChange={this.onChange}\n                  required\n                  hideLabel\n                  onBlur={this.onBlur}\n                />\n                <PopoverWrapper\n                  wrapperClass=\"list__popover-wrapper\"\n                  popoverClass=\"list__popover\"\n                  alignInner=\"left\"\n                  buttonProps={{\n                    size: 'medium',\n                    iconOnly: true,\n                    className: 'list__btn--more-actions',\n                    children: <Icon name=\"more-vertical\" />\n                  }}\n                >\n                  <Menu>\n                    <MenuItem>\n                      <a href=\"\" onClick={this.handleListDelete}>\n                        Delete\n                      </a>\n                    </MenuItem>\n                  </Menu>\n                </PopoverWrapper>\n              </header>\n              <Cards\n                cards={cards}\n                listId={listId}\n                onCardClick={onCardClick}\n                onCardDelete={this.handleCardDelete}\n              />\n              {provided.placeholder}\n              <CardComposer listId={listId} />\n            </section>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state),\n    cards: cardSelectors.getCardsArray(state, ownProps)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => dispatch(userActions.getUserData(userId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(List)\n);\n","import React from 'react';\nimport './Toolbar.scss';\n\nconst Toolbar = ({ className, children, ...props }) => (\n  <div className={`toolbar ${className}`} {...props}>\n    {children}\n  </div>\n);\n\nToolbar.defaultProps = {\n  className: ''\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport './Checkbox.scss';\n\nconst Checkbox = ({\n  value,\n  id,\n  name,\n  isChecked,\n  onClick,\n  onChange,\n  className,\n  labelClass,\n  ...props\n}) => {\n  return (\n    <label\n      htmlFor={id}\n      onClick={onClick}\n      className={`checkbox__label ${labelClass}`}\n    >\n      {isChecked && <Icon name=\"check\" />}\n      <input\n        type=\"checkbox\"\n        id={id}\n        value={value}\n        name={name}\n        checked={isChecked}\n        className={`checkbox ${className}`}\n        onChange={onChange}\n        {...props}\n      />\n    </label>\n  );\n};\n\nexport default Checkbox;\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\n\nconst CardEditorMoreActions = ({ onMenuClick }) => (\n  <PopoverWrapper\n    wrapperClass=\"card-editor__popover-wrapper\"\n    popoverClass=\"card-editor__popover\"\n    alignOuter=\"right\"\n    alignInner=\"right\"\n    buttonProps={{\n      size: 'medium',\n      iconOnly: true,\n      className: 'card-editor__toolbar-btn',\n      children: <Icon name=\"more-horizontal\" />\n    }}\n  >\n    <Menu onClick={onMenuClick}>\n      <MenuItem>\n        <a href=\"\" data-action=\"delete\">\n          Delete card\n        </a>\n      </MenuItem>\n    </Menu>\n  </PopoverWrapper>\n);\n\nexport default CardEditorMoreActions;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { Input } from '../Input';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { Modal } from '../Modal';\nimport { Toolbar } from '../Toolbar';\nimport { Checkbox } from '../Checkbox';\nimport CardEditorMoreActions from './CardEditorMoreActions';\nimport './CardEditor.scss';\n\nclass CardEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cardId: this.props.card.cardId,\n      cardTitle: this.props.card.cardTitle,\n      cardDescription: this.props.card.cardDescription,\n      newTask: '',\n      cardTasks: this.props.tasksArray.reduce((tasks, task) => {\n        const { taskId, text, isCompleted } = task;\n        tasks[taskId] = {\n          text,\n          isCompleted\n        };\n        return tasks;\n      }, {}),\n      cardComment: '',\n      currentFocus: null,\n      isCommentFormFocused: false\n    };\n    this.commentFormRef = null;\n    this.setCommentFormRef = element => {\n      this.commentFormRef = element;\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.tasksArray.length !== Object.keys(state.cardTasks).length) {\n      return {\n        cardTasks: props.tasksArray.reduce((tasks, task) => {\n          const { taskId, text, isCompleted } = task;\n          tasks[taskId] = {\n            text,\n            isCompleted\n          };\n          return tasks;\n        }, {})\n      };\n    }\n    return null;\n  }\n\n  updateCardTasks = () => {\n    const { tasksArray } = this.props;\n    this.setState({\n      cardTasks: tasksArray.reduce((tasks, task) => {\n        const { taskId, text, isCompleted } = task;\n        tasks[taskId] = {\n          text,\n          isCompleted\n        };\n        return tasks;\n      }, {})\n    });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleCardDelete = () => {\n    const { card, firebase, onCardEditorClose } = this.props;\n    const { cardId, listId } = card;\n    firebase.deleteCard({ cardId, listId });\n    onCardEditorClose();\n  };\n\n  onBlur = e => {\n    const { card, firebase } = this.props;\n    const { cardTitle, cardDescription, currentFocus } = this.state;\n    const cardKey = e.target.name;\n\n    // When field loses focus, update card if change is detected\n\n    if (this.state[cardKey] !== card[cardKey]) {\n      const { cardId } = card;\n      firebase.updateCard(cardId, {\n        [cardKey]: this.state[cardKey]\n      });\n      console.log('updated!');\n    }\n\n    this.setState({\n      currentFocus: null\n    });\n  };\n\n  onSubmitComment = e => {\n    console.log(e.target.value);\n\n    e.preventDefault();\n  };\n\n  resetNewTaskForm = () => {\n    this.setState({\n      newTask: ''\n    });\n  };\n\n  addTask = e => {\n    const { user, firebase, card } = this.props;\n    const { userId } = user;\n    const { cardId, boardId } = card;\n    const { newTask: text } = this.state;\n    firebase.addTask({ userId, text, cardId, boardId });\n    this.resetNewTaskForm();\n    e.preventDefault();\n  };\n\n  onFocus = e => {\n    this.setState({\n      currentFocus: e.target.name\n    });\n  };\n\n  handleModalClick = e => {\n    const { currentFocus } = this.state;\n    if (\n      (currentFocus === 'cardComment' &&\n        !this.commentFormRef.contains(e.target)) ||\n      (currentFocus === 'newTask' && !this.newTaskFormEl.contains(e.target))\n    ) {\n      this.setState({\n        currentFocus: null\n      });\n    }\n  };\n\n  handleMoreActions = e => {\n    if (!e.target.matches('a')) return;\n    const { action } = e.target.dataset;\n    const { cardId } = this.props;\n    switch (action) {\n      case 'delete':\n        this.handleCardDelete(cardId);\n        break;\n    }\n    e.preventDefault(); // prevents page reload\n  };\n\n  onTaskChange = e => {\n    const { cardTasks } = this.state;\n    this.setState({\n      cardTasks: {\n        ...cardTasks,\n        [e.target.name]: {\n          ...cardTasks[e.target.name],\n          text: e.target.value\n        }\n      }\n    });\n  };\n\n  handleCheckboxChange = e => {\n    const taskId = e.target.name;\n    this.toggleTaskCompletion(taskId);\n  };\n\n  toggleTaskCompletion = taskId => {\n    const { isCompleted } = this.state.cardTasks[taskId];\n    this.setState(prevState => ({\n      cardTasks: {\n        ...prevState.cardTasks,\n        [taskId]: {\n          ...prevState.cardTasks[taskId],\n          isCompleted: !prevState.cardTasks[taskId].isCompleted\n        }\n      }\n    }));\n    const { firebase } = this.props;\n    firebase.updateTask(taskId, { isCompleted: !isCompleted });\n  };\n\n  updateTask = e => {\n    const taskId = e.target.name;\n    const { cardTasks } = this.state;\n    const { text } = cardTasks[taskId];\n    const { firebase } = this.props;\n    firebase.updateTask(taskId, { text });\n  };\n\n  render() {\n    const { onCardEditorClose, card, user, tasksById, tasksArray } = this.props;\n    const { taskIds } = card;\n    const hasTasks = taskIds !== undefined && taskIds.length > 0;\n\n    const {\n      cardTitle,\n      cardDescription,\n      cardComment,\n      currentFocus,\n      newTask,\n      cardTasks\n    } = this.state;\n    const isCommentInvalid = cardComment === '';\n    const isNewTaskInvalid = newTask === '';\n    const commentFormIsFocused = currentFocus === 'cardComment';\n\n    return (\n      <Modal\n        onModalClose={onCardEditorClose}\n        className=\"card-editor\"\n        onModalClick={this.handleModalClick}\n        size=\"lg\"\n      >\n        <Toolbar className=\"card-editor__toolbar\">\n          <CardEditorMoreActions onMenuClick={this.handleMoreActions} />\n        </Toolbar>\n        <form\n          name=\"editCardForm\"\n          onFocus={this.onFocus}\n          className=\"card-editor__edit-card-form\"\n        >\n          <Textarea\n            className=\"card-editor__textarea--title\"\n            name=\"cardTitle\"\n            value={cardTitle}\n            onChange={this.onChange}\n            required\n            onBlur={this.onBlur}\n            onFocus={this.onFocus}\n          />\n          <div\n            className={`card-editor__section ${\n              currentFocus === 'cardDescription' ? 'is-focused' : ''\n            }`}\n          >\n            <div className=\"card-editor__section-icon\">\n              <Icon name=\"edit-3\" />\n            </div>\n            <Textarea\n              className=\"card-editor__textarea--description\"\n              name=\"cardDescription\"\n              value={cardDescription}\n              onChange={this.onChange}\n              placeholder=\"Add a description\"\n              onBlur={this.onBlur}\n              onFocus={this.onFocus}\n            />\n          </div>\n        </form>\n        <div\n          className={`card-editor__section ${\n            currentFocus === 'newTask' ? 'is-focused' : ''\n          }`}\n        >\n          <hr className=\"card-editor__hr\" />\n          <div className=\"card-editor__section-icon\">\n            <Icon name=\"check-square\" />\n          </div>\n          {hasTasks && (\n            <ul className=\"card-editor__tasks\">\n              {tasksArray.map(task => {\n                const { taskId } = task;\n                return (\n                  <li className=\"card-editor__task\" key={taskId}>\n                    <Checkbox\n                      id={`cb-${taskId}`}\n                      value={taskId}\n                      name={taskId}\n                      isChecked={cardTasks[taskId].isCompleted}\n                      onChange={this.handleCheckboxChange}\n                      labelClass=\"card-editor__checkbox-label\"\n                    />\n                    <Textarea\n                      value={cardTasks[taskId].text}\n                      onChange={this.onTaskChange}\n                      onBlur={this.updateTask}\n                      name={taskId}\n                      className=\"card-editor__textarea--task\"\n                    />\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n          <form\n            name=\"newTaskForm\"\n            className={`card-editor__new-task-form ${\n              currentFocus === 'newTask' ? 'is-focused' : ''\n            }`}\n            ref={el => (this.newTaskFormEl = el)}\n            onSubmit={this.addTask}\n          >\n            <Textarea\n              className=\"card-editor__textarea--new-task\"\n              name=\"newTask\"\n              value={newTask}\n              onChange={this.onChange}\n              placeholder=\"Add a task\"\n              onFocus={this.onFocus}\n            />\n            {currentFocus === 'newTask' && (\n              <Button\n                type=\"submit\"\n                color=\"secondary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isNewTaskInvalid}\n                onClick={this.addTask}\n                className=\"card-editor__btn--add-task\"\n              >\n                Add task\n              </Button>\n            )}\n          </form>\n        </div>\n        <div\n          className={`card-editor__section ${\n            commentFormIsFocused ? 'is-focused' : ''\n          }`}\n        >\n          <hr className=\"card-editor__hr\" />\n          <div className=\"card-editor__section-icon\">\n            <Icon name=\"message-circle\" />\n          </div>\n          <form\n            name=\"commentForm\"\n            className={`card-editor__comment-form ${\n              commentFormIsFocused ? 'is-focused' : ''\n            }`}\n            ref={this.setCommentFormRef}\n          >\n            <Textarea\n              className=\"card-editor__textarea--comment\"\n              name=\"cardComment\"\n              value={cardComment}\n              onChange={this.onChange}\n              placeholder=\"Write a comment...\"\n              onFocus={this.onFocus}\n            />\n            {commentFormIsFocused && (\n              <Button\n                type=\"submit\"\n                color=\"secondary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isCommentInvalid}\n                onClick={this.onSubmitComment}\n                name=\"cardCommentSubmit\"\n                className=\"card-editor__btn--submit-comment\"\n              >\n                Comment\n              </Button>\n            )}\n          </form>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    current: currentSelectors.getCurrent(state),\n    listsById: listSelectors.getListsById(state),\n    listsArray: listSelectors.getListsArray(state),\n    tasksById: taskSelectors.getTasksById(state),\n    tasksArray: taskSelectors.getTasksArray(state, ownProps.card.taskIds)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId)),\n    updateListsById: list => dispatch(listActions.updateListsById(list)),\n    updateCardsById: card => dispatch(cardActions.updateCardsById(card)),\n    reorderLists: (boardId, listIds) =>\n      dispatch(boardActions.reorderLists(boardId, listIds))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardEditor)\n);\n","\n/**\n * Checks if two arrays or objects are equal\n * @param {Array|Object} value\n * @param {Array|Object} other\n */\n\n// eslint-disable-next-line import/prefer-default-export\nexport const isEqual = (value, other) => {\n  const type = Object.prototype.toString.call(value);\n\n  // If both objects are not the same type, return false\n  if (type !== Object.prototype.toString.call(other)) return false;\n\n  const typeObj = '[object Object]';\n  const typeArr = '[object Array]';\n  // If items are neither objects nor arrays, return false\n  if (type !== typeObj && type !== typeArr) return false;\n\n  // Compare length of two items\n  const valueLen = type === typeArr ? value.length : Object.keys(value).length;\n  const otherLen = type === typeArr ? other.length : Object.keys(other).length;\n  if (valueLen !== otherLen) return false;\n\n  const compare = (item1, item2) => {\n    const typeFunc = '[object Function]';\n    const itemType = Object.prototype.toString.call(item1);\n    if (itemType !== Object.prototype.toString.call(item2)) return false;\n    if (itemType === typeObj || itemType === typeArr) {\n      return isEqual(item1, item2);\n    }\n    if (itemType === typeFunc) {\n      return item1.toString() === item2.toString();\n    }\n    return item1 === item2;\n  };\n\n  if (type === typeArr) {\n    for (let i = 0; i < valueLen; i++) {\n      if (!compare(value[i], other[i])) return false;\n    }\n  } else {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (compare(value[key], other[key]) === false) return false;\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * Delays callback execution until next browser repaint\n * Best used for `scroll` and `resize` window events\n * @param {Function} callback - The function to debounce\n */\n\nexport const windowDebouncer = callback => {\n  let request;\n\n  return (...args) => {\n    const context = this;\n\n    if (request) {\n      window.cancelAnimationFrame(request);\n    }\n\n    request = window.requestAnimationFrame(() => {\n      callback.apply(context, args);\n    });\n  };\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport * as ROUTES from '../../constants/routes';\nimport Board from './Board';\nimport { Input } from '../Input';\nimport { List } from '../List';\nimport { CardEditor } from '../CardEditor';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { utils } from '../../utils';\nimport './Board.scss';\n\nclass BoardContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: true,\n      isDragging: false,\n      isCardEditorOpen: false,\n      boardTitle: this.props.boardTitle\n    };\n  }\n\n  componentDidMount() {\n    const {\n      current,\n      fetchListsById,\n      fetchCardsById,\n      fetchCardTasks,\n      firebase,\n      updateBoardsById,\n      updateListsById,\n      updateCardsById,\n      boardId,\n      board,\n      updateListIds,\n      addTask,\n      updateTask,\n      deleteTask\n    } = this.props;\n\n    if (current.boardId !== boardId) {\n      this.props.selectBoard(boardId);\n    }\n\n    fetchListsById(boardId);\n    fetchCardsById(boardId);\n    fetchCardTasks(boardId).then(() => {\n      this.setState({\n        isFetching: false\n      });\n    });\n    this.boardObserver = firebase.getBoardDoc(boardId).onSnapshot(snapshot => {\n      const updatedBoard = snapshot.data();\n      if (!utils.isEqual(updatedBoard.listIds, board.listIds)) {\n        updateListIds(boardId, updatedBoard.listIds);\n      }\n    });\n    this.listObserver = firebase.db\n      .collection('lists')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const list = {\n            [change.doc.id]: change.doc.data()\n          };\n          updateListsById(list);\n        });\n      });\n    this.taskObserver = firebase.db\n      .collection('tasks')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const taskId = change.doc.id;\n          const taskData = change.doc.data();\n          if (change.type === 'added') {\n            addTask({ taskId, taskData });\n          }\n          if (change.type === 'modified') {\n            updateTask({ taskId, taskData });\n          }\n          if (change.type === 'removed') {\n            deleteTask(taskId);\n          }\n        });\n      });\n    this.cardObserver = firebase.db\n      .collection('cards')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const card = {\n            [change.doc.id]: {\n              cardId: change.doc.id,\n              ...change.doc.data()\n            }\n          };\n          updateCardsById(card);\n        });\n      });\n    console.log('mounted');\n  }\n\n  componentWillUnmount() {\n    this.boardObserver();\n    this.listObserver();\n    this.cardObserver();\n    this.taskObserver();\n  }\n\n  onDragStart = () => {\n    this.setState({\n      isDragging: true\n    });\n  };\n\n  onDragEnd = ({ destination, draggableId, source, type }) => {\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    const { firebase } = this.props;\n    if (type === droppableTypes.CARD) {\n      const { listsById } = this.props;\n      const isMovedWithinList = source.droppableId === destination.droppableId;\n      const updatedCardIds = [...listsById[destination.droppableId].cardIds];\n      if (isMovedWithinList) {\n        updatedCardIds.splice(source.index, 1);\n        updatedCardIds.splice(destination.index, 0, draggableId);\n        firebase.updateList(source.droppableId, {\n          cardIds: updatedCardIds\n        });\n      } else {\n        updatedCardIds.splice(destination.index, 0, draggableId);\n        firebase.moveCardToList({\n          cardId: draggableId,\n          origListId: source.droppableId,\n          newListId: destination.droppableId,\n          updatedCardIds\n        });\n      }\n    }\n\n    if (type === droppableTypes.LIST) {\n      const { boardsById, current, reorderLists } = this.props;\n      const { boardId } = current;\n      const updatedListIds = [...boardsById[boardId].listIds];\n      updatedListIds.splice(source.index, 1);\n      updatedListIds.splice(destination.index, 0, draggableId);\n      firebase.updateBoard(boardId, {\n        listIds: updatedListIds\n      });\n      reorderLists(boardId, updatedListIds);\n    }\n\n    this.setState({\n      isDragging: false\n    });\n  };\n\n  toggleCardEditor = () => {\n    this.setState(prevState => ({\n      isCardEditorOpen: !prevState.isCardEditorOpen\n    }));\n  };\n\n  handleCardClick = cardId => {\n    this.props.selectCard(cardId);\n    this.toggleCardEditor();\n  };\n\n  onTitleChange = e => {\n    this.setState({\n      boardTitle: e.target.value\n    });\n  };\n\n  onTitleBlur = e => {\n    const { boardTitle, boardId, firebase } = this.props;\n    const { boardTitle: newBoardTitle } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newBoardTitle !== boardTitle) {\n      firebase.updateBoard(boardId, {\n        boardTitle: newBoardTitle\n      });\n      console.log('updated!');\n    }\n  };\n\n  render() {\n    const { isFetching, isCardEditorOpen } = this.state;\n    const {\n      current,\n      boardsById,\n      listsArray,\n      cardsById,\n      boardId,\n      board\n    } = this.props;\n    if (isFetching) return null;\n    const { cardId } = current;\n    const { boardTitle } = board;\n    const lists = listsArray.map((list, listIndex) => {\n      const { listId, listTitle, cardIds } = list;\n      return (\n        <List\n          listId={listId}\n          key={listId}\n          listIndex={listIndex}\n          listTitle={listTitle}\n          cardIds={cardIds}\n          isFetchingCards={this.state.isFetching}\n          isDragging={this.state.isDragging}\n          onCardClick={this.handleCardClick}\n          boardId={boardId}\n        />\n      );\n    });\n\n    return (\n      <main className=\"board-container\">\n        <Input\n          className=\"board__input--title\"\n          name=\"boardTitle\"\n          type=\"text\"\n          value={boardTitle}\n          onChange={this.onTitleChange}\n          required\n          hideLabel\n          onBlur={this.onTitleBlur}\n        />\n        <DragDropContext\n          onDragEnd={this.onDragEnd}\n          onDragStart={this.onDragStart}\n        >\n          <Board boardId={boardId}>{lists}</Board>\n        </DragDropContext>\n        {isCardEditorOpen && (\n          <CardEditor\n            card={cardsById[cardId]}\n            onCardEditorClose={this.toggleCardEditor}\n          />\n        )}\n      </main>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    current: currentSelectors.getCurrent(state),\n    listsById: listSelectors.getListsById(state),\n    listsArray: listSelectors.getListsArray(state),\n    cardsById: cardSelectors.getCardsById(state),\n    board: boardSelectors.getBoard(state, ownProps.boardId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId)),\n    selectCard: cardId => dispatch(currentActions.selectCard(cardId)),\n    fetchListsById: boardId => dispatch(listActions.fetchListsById(boardId)),\n    updateListsById: list => dispatch(listActions.updateListsById(list)),\n    fetchCardsById: boardId => dispatch(cardActions.fetchCardsById(boardId)),\n    fetchCardTasks: boardId => dispatch(taskActions.fetchCardTasks(boardId)),\n    updateCardsById: card => dispatch(cardActions.updateCardsById(card)),\n    reorderLists: (boardId, listIds) =>\n      dispatch(boardActions.reorderLists(boardId, listIds)),\n    updateListIds: (boardId, listIds) =>\n      dispatch(boardActions.updateListIds(boardId, listIds)),\n    addTask: ({ taskId, taskData }) => dispatch(taskActions.addTask({ taskId, taskData })),\n    deleteTask: taskId => dispatch(taskActions.deleteTask(taskId)),\n    updateTask: ({ taskId, taskData }) =>\n      dispatch(taskActions.updateTask({ taskId, taskData }))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardContainer)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { withAuthorization } from '../Session';\nimport * as ROUTES from '../../constants/routes';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { currentSelectors } from '../../ducks/current';\nimport { BoardGridContainer } from '../BoardGrid';\nimport { BoardComposer } from '../BoardComposer';\nimport { BoardContainer } from '../Board';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport './Home.scss';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isBoardComposerOpen: false,\n      isFetching: true\n    };\n  }\n\n  componentDidMount() {\n    const userId = this.props.firebase.auth.currentUser.uid;\n    console.log('mounted home');\n    this.props.fetchUserData(userId);\n    this.props.fetchBoardsById(userId).then(() =>\n      this.setState({\n        isFetching: false\n      })\n    );\n  }\n\n  toggleBoardComposer = () => {\n    this.setState(prevState => ({\n      isBoardComposerOpen: !prevState.isBoardComposerOpen\n    }));\n  };\n\n  createBoard = boardTitle => {\n    const userId = this.props.user.userId;\n    this.props.firebase.addBoard({ userId, boardTitle });\n  };\n\n  render() {\n    const { isBoardComposerOpen, isFetching } = this.state;\n    const userId = this.props.user.userId;\n    if (isFetching) return null;\n    return (\n      <>\n        {isBoardComposerOpen && (\n          <BoardComposer\n            onClose={this.toggleBoardComposer}\n            handleSubmit={this.createBoard}\n          />\n        )}\n        <Switch>\n          <Route\n            exact\n            path={ROUTES.HOME}\n            render={() => (\n              <main className=\"main\">\n                <h1>Home</h1>\n                {userId && (\n                  <BoardGridContainer\n                    openBoardComposer={this.toggleBoardComposer}\n                  />\n                )}\n              </main>\n            )}\n          />\n          <Route\n            path={ROUTES.BOARD}\n            render={props => (\n              <BoardContainer boardId={props.match.params.id} {...props} />\n            )}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    currentBoardId: currentSelectors.getCurrentBoardId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUserData: userId => dispatch(userActions.fetchUserData(userId)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(HomePage)\n);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .passwordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n    const isInvalid = passwordOne === '' || passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"passwordOne\"\n          title=\"New Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          title=\"Confirm New Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Change My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React from 'react';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport { PasswordChangeForm } from '../PasswordChange';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport './Account.scss';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <main className=\"account\">\n        <h1>Account: {authUser.email}</h1>\n        <section className=\"account__section\">\n        <h2>Forgot your password?</h2>\n          <PasswordForgetForm />\n        </section>\n        <section className=\"account__section\">\n        <h2>Change your password.</h2>\n          <PasswordChangeForm />\n        </section>\n      </main>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(AccountPage);\n","import React, { Component } from 'react';\nimport { Navbar } from '../Navbar';\nimport './Header.scss';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <Navbar />\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport { Navbar } from '../Navbar';\nimport * as ROUTES from '../../constants/routes';\nimport { LandingPage } from '../Landing';\nimport { SignUpPage } from '../SignUp';\nimport { SignInPage } from '../SignIn';\nimport { PasswordForgetPage } from '../PasswordForget';\nimport { HomePage } from '../Home';\nimport { AccountPage } from '../Account';\nimport { AdminPage } from '../Admin';\nimport { withAuthentication } from '../Session';\nimport { Header } from '../Header';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Header />\n        <Switch>\n          <Route exact path={ROUTES.LANDING} component={LandingPage} />\n          <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n          <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n          <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n          <Route path={ROUTES.HOME} component={HomePage} />\n          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n          <Route path={ROUTES.ADMIN} component={AdminPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { boardsById } from '../ducks/boards';\nimport { cardsById } from '../ducks/cards';\nimport { listsById } from '../ducks/lists';\nimport { user } from '../ducks/user';\nimport { current } from '../ducks/current';\nimport { tasksById } from '../ducks/tasks';\n\nexport default combineReducers({\n  boardsById,\n  cardsById,\n  listsById,\n  user,\n  current,\n  tasksById\n});\n","import * as types from './types';\n\nconst current = (state = {}, action) => {\n  switch (action.type) {\n    case types.SELECT_BOARD: {\n      const { boardId } = action;\n      return {\n        ...state,\n        boardId\n      };\n    }\n    case types.SELECT_LIST: {\n      const { listId } = action;\n      return {\n        ...state,\n        listId\n      };\n    }\n    case types.SELECT_CARD: {\n      const { cardId } = action;\n      return {\n        ...state,\n        cardId\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport { current };\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\n\nexport default history;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport 'normalize.css';\nimport './index.scss';\nimport { App } from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { FirebaseContext } from './components/Firebase';\nimport reducers from './store/reducers';\nimport firebase from './store/firebase';\nimport history from './store/history';\n\nconst store = createStore(reducers, {}, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <FirebaseContext.Provider value={firebase}>\n      <Router basename={process.env.PUBLIC_URL} history={history}>\n        <App />\n      </Router>\n    </FirebaseContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}