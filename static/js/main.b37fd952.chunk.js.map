{"version":3,"sources":["assets/feather/feather-sprite.svg","components/Firebase/context.js","components/Firebase/Firebase.js","constants/routes.js","components/Button/Button.js","components/SignOut/SignOutButton.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Icon/Icon.js","components/Navbar/Navbar.js","components/Input/Input.js","components/SignUp/SignUpForm.js","components/UserFormPage/UserFormPage.js","components/SignUp/SignUp.js","components/SignUp/index.js","components/SignIn/SignInForm.js","components/PasswordForget/PasswordForgetForm.js","components/PasswordForget/PasswordForget.js","components/PasswordForget/index.js","components/SignIn/SignIn.js","store/firebase.js","ducks/users/actions.js","ducks/users/types.js","ducks/users/selectors.js","ducks/users/reducer.js","ducks/current/actions.js","ducks/current/types.js","ducks/current/selectors.js","components/BoardGrid/BoardGrid.js","components/BoardGrid/BoardTile.js","ducks/boards/actions.js","ducks/boards/types.js","ducks/boards/selectors.js","ducks/boards/reducers.js","components/BoardGrid/BoardGridContainer.js","components/Modal/Modal.js","components/BoardComposer/BoardComposer.js","constants/droppableTypes.js","components/ListComposer/ListComposer.js","components/Board/Board.js","ducks/lists/actions.js","ducks/lists/types.js","ducks/lists/selectors.js","ducks/lists/reducers.js","ducks/cards/selectors.js","ducks/cards/actions.js","ducks/cards/types.js","ducks/cards/reducers.js","ducks/tasks/actions.js","ducks/tasks/types.js","ducks/tasks/selectors.js","ducks/tasks/reducer.js","components/Textarea/Textarea.js","constants/keys.js","components/CardComposer/CardComposer.js","components/Menu/Menu.js","components/Menu/MenuItem.js","components/Popover/Popover.js","components/Popover/PopoverWrapper.js","components/Card/Card.js","components/List/Cards.js","components/List/List.js","ducks/comments/actions.js","ducks/comments/types.js","ducks/comments/selectors.js","ducks/comments/reducer.js","components/Toolbar/Toolbar.jsx","components/Checkbox/Checkbox.js","components/CardEditor/CardEditorMoreActions.js","components/CardEditor/CardEditorTask.js","components/Avatar/Avatar.js","components/CardEditor/CardEditorComment.js","components/CardEditor/CardEditor.js","utils/utils.js","components/Board/BoardContainer.js","components/Home/Home.js","components/PasswordChange/PasswordChangeForm.js","components/Account/Account.js","components/Header/Header.jsx","components/App/App.js","serviceWorker.js","store/reducers.js","ducks/current/reducers.js","store/history.js","index.js"],"names":["module","exports","__webpack_require__","p","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","signInWithGoogle","provider","auth","GoogleAuthProvider","addScope","signInWithPopup","then","result","credential","token","accessToken","console","log","user","catch","error","errorCode","code","message","email","alert","signInWithGithub","GithubAuthProvider","signInWithRedirect","createUserWithEmailAndPassword","password","signInWithEmailAndPassword","signOut","passwordReset","sendPasswordResetEmail","passwordUpdate","newPassword","currentUser","updatePassword","getTimestamp","firestore","FieldValue","serverTimestamp","addToArray","value","arrayUnion","removeFromArray","arrayRemove","getUserDoc","userId","db","collection","doc","addUser","_ref","name","username","_ref$boardIds","boardIds","_ref$photoURL","photoURL","set","updateUser","newValue","arguments","length","undefined","update","getBoardDoc","boardId","updateBoard","objectSpread","lastModifiedAt","addBoard","_ref2","boardTitle","add","createdAt","listIds","authorId","memberIds","ref","id","getListDoc","listId","updateList","addList","_ref3","listTitle","cardIds","deleteList","_ref4","batch","listRef","boardRef","delete","where","get","snapshot","docs","forEach","commit","getCardDoc","cardId","addCard","_ref5","cardTitle","updateCard","deleteCard","_ref6","cardRef","moveCardToList","_ref7","origListId","newListId","updatedCardIds","origListRef","newListRef","getTaskDoc","taskId","addTask","_ref8","_ref8$memberIds","_ref8$boardId","_ref8$cardId","_ref8$dueDate","dueDate","text","isCompleted","createdBy","assignedTo","concat","toConsumableArray","taskIds","updateTask","deleteTask","_ref9","_ref9$cardId","taskRef","getCommentDoc","commentId","addComment","_ref10","_ref10$memberIds","isPinned","from","to","likes","commentIds","updateComment","initializeApp","HOME","Button","children","_ref$type","type","onClick","_ref$className","className","_ref$color","color","_ref$size","size","_ref$variant","variant","disabled","_ref$iconOnly","iconOnly","buttonRef","objectWithoutProperties","defaultProps","components_Button_Button","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","authUser","inherits","createClass","key","_this2","listener","onAuthStateChanged","setState","Session_context","Provider","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","Icon","addClass","trim","xmlns","xmlnsXlink","viewBox","width","height","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","xlinkHref","featherIcons","NavLinksAuth","Fragment","Link","ROUTES","components_SignOut_SignOutButton","NavLinksNonAuth","Navbar","viewportWidth","window","innerWidth","isMobileNavVisible","isTouchEnabled","handleResize","toggleMobileNavVisibility","prevState","handleClick","e","minWidth","target","matches","handleOutsideClick","navLinksEl","contains","handleTouch","document","removeEventListener","addEventListener","_this$state","_this$props","navLinksClass","navRef","isMobileView","el","navEl","Icon_Icon","Navbar_NavLinksAuth","Navbar_NavLinksNonAuth","Input","hideLabel","htmlFor","title","onChange","placeholder","required","isRequired","onBlur","INITIAL_STATE","passwordOne","passwordTwo","SignUpForm","onSubmit","uid","preventDefault","defineProperty","_this$state2","isInvalid","components_Input_Input","UserFormPage","SignUpPage","components_UserFormPage_UserFormPage","SignUp_SignUpForm","SignUpLink","SignInForm","enableGoogleLogin","PasswordForgetForm","PasswordForgetPage","PasswordForget_PasswordForgetForm","PasswordForgetLink","SignInPage","SignIn_SignInForm","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","loadUserData","loadUsersById","usersById","fetchUsersById","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","users","data","sent","t0","stop","_x","apply","fetchUserData","_callee2","_context2","_x2","userData","deleteUser","getUsersById","getUserData","action","map","_toPropertyKey","selectUser","selectBoard","selectList","selectCard","getCurrentUserId","current","getCurrentBoardId","getCurrentListId","getCurrentCardId","getCurrent","BoardGrid","BoardTile","loadBoardsById","boardsById","fetchBoardsById","updateBoardsById","board","reorderLists","updateListIds","getBoardsById","getBoardsArray","keys","getBoard","BoardGridContainer","boardObserver","onSnapshot","querySnapshot","docChanges","change","_this$props2","boardsArray","boardTiles","BoardGrid_BoardTile","BoardGrid_BoardGrid","openBoardComposer","connect","ownProps","currentSelectors","userSelectors","boardSelectors","boardActions","currentActions","Modal","onModalClose","onModalClick","BoardComposer","handleSubmit","onClose","components_Modal_Modal","CARD","LIST","isActive","ListComposer","resetForm","onReset","onFocus","Board","react_beautiful_dnd_esm","droppableId","droppableTypes","direction","provided","innerRef","droppableProps","components_ListComposer_ListComposer","loadListsById","listsById","fetchListsById","updateListsById","list","getListsById","getListsArray","getCardsById","cardsById","getCardsArray","loadCardsById","fetchCardsById","cards","updateCardsById","card","loadTasksById","tasksById","fetchTasksById","tasks","updateTasksById","task","fetchCardTasks","fetchUserTasks","_callee3","_context3","_x3","taskData","getTasksById","getTasksArray","reducer_toPropertyKey","Textarea","autoHeightResize","isAutoHeightResizeEnabled","textareaEl","style","scrollHeight","createRef","onKeyDown","onDragStart","isReadOnly","onInput","readOnly","BACKSPACE","ENTER","CardComposer","Textarea_Textarea_Textarea","Menu","MenuItem","Popover","onOutsideClick","PopoverWrapper","isOpen","componentEl","toggleOpen","alignInner","alignOuter","buttonProps","wrapperClass","popoverClass","anchorEl","popoverWrapperStyle","offsetTop","offsetLeft","position","top","Popover_Popover","align","Card","handleCardClick","onCardClick","cardIndex","draggableId","index","draggableProps","dragHandleProps","headerEl","Cards","scrollToBottom","listEnd","scrollIntoView","behavior","prevProps","onCardDelete","minHeight","isDraggingOver","Card_Card_Card","float","clear","List","handleListDelete","newListTitle","_this$props3","listIndex","isFetchingCards","viewportHeight","listHeaderEl","PopoverWrapper_PopoverWrapper","components_Menu_Menu","Menu_MenuItem","href","Cards_Cards","handleCardDelete","components_CardComposer_CardComposer","cardSelectors","loadCommentsById","commentsById","fetchCommentsById","comments","updateCommentsById","comment","fetchCardComments","fetchUserComments","commentData","deleteComment","getCommentsById","getCommentsArray","comments_reducer_toPropertyKey","Toolbar","Checkbox","isChecked","labelClass","checked","CardEditorMoreActions","onMenuClick","data-action","appRoot","getElementById","CardEditorTask","portal","appendChild","removeChild","toggleCompleted","inner","components_Checkbox_Checkbox","isDragging","ReactDOM","createPortal","Avatar","getUserInitials","fullName","split","charAt","join","toUpperCase","imgSrc","imgProps","classes","avatar","src","alt","img","backgroundColor","CardEditorComment","handleLikeClick","handleLike","dateCreatedFull","toDate","timeCreated","toLocaleTimeString","dateCreated","toDateString","Avatar_Avatar_Avatar","cardActions","commentActions","CardEditor","updateCardTasks","tasksArray","cardTasks","reduce","handleCardEditorClose","cardKey","updatedValue","currentFocus","newComment","_this$props4","newTask","handleModalClick","commentFormEl","newTaskFormEl","handleMoreActions","dataset","onTaskChange","handleCheckboxChange","toggleTaskCompleted","updateTaskText","_this$props5","moveTask","destination","source","updatedTaskIds","splice","handleCommentLike","_this$props6","indexOf","isFetching","cardDescription","_this$props7","commentObserver","_this3","_this$props8","commentsArray","hasTasks","hasComments","isNewCommentInvalid","isNewTaskInvalid","commentFormIsFocused","components_Toolbar_Toolbar","CardEditor_CardEditorMoreActions","onDragEnd","CardEditorTask_CardEditorTask","components_CardEditor_CardEditorComment","taskSelectors","commentSelectors","isEqual","other","prototype","toString","typeArr","valueLen","compare","item1","item2","itemType","i","hasOwnProperty","windowDebouncer","callback","request","_len","args","Array","_key","cancelAnimationFrame","requestAnimationFrame","BoardContainer","isMovedWithinList","updatedListIds","toggleCardEditor","isCardEditorOpen","onTitleChange","onTitleBlur","newBoardTitle","updatedBoard","utils","listObserver","taskObserver","cardObserver","listsArray","lists","components_List_List","components_Board_Board","components_CardEditor_CardEditor","listSelectors","listActions","taskActions","HomePage","toggleBoardComposer","isBoardComposerOpen","createBoard","BoardComposer_BoardComposer_BoardComposer","Switch","Route","exact","path","render","BoardGrid_BoardGridContainer","Board_BoardContainer","match","params","currentBoardId","userActions","PasswordChangeForm","PasswordChange_PasswordChangeForm","Header","Navbar_Navbar_Navbar","Header_Header_Header","component","LandingPage","Home_Home","AccountPage","AdminPage","Boolean","location","hostname","combineReducers","createBrowserHistory","basename","store","createStore","reducers","applyMiddleware","thunk","es","context","Router","components_App_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b37fd952.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/feather-sprite.0ed672ce.svg\";","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import firebase from 'firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\nclass Firebase {\n  constructor() {\n    firebase.initializeApp(config);\n    this.auth = firebase.auth();\n    this.db = firebase.firestore();\n  }\n\n  // Auth API\n\n  signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    provider.addScope('https://www.googleapis.com/auth/contacts.readonly');\n    this.auth.signInWithPopup(provider).then((result) => {\n      if (result.credential) {\n      const token = result.credential.accessToken;\n      console.log(token);\n      const user = result.user;\n      }\n    }).catch((error) => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      const email = error.email;\n      const credential = error.credential;\n\n      if (errorCode === 'auth/account-exists-with-different-credential') {\n        alert('You have already signed up with a different auth provider for that email.');\n      } else {\n        console.error(error);\n      }\n    });\n  };\n\n  signInWithGithub = () => {\n    const provider = new firebase.auth.GithubAuthProvider();\n    this.auth.signInWithRedirect(provider);\n  };\n\n\n  createUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  signInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  signOut = () => this.auth.signOut();\n\n  passwordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  passwordUpdate = newPassword =>\n    this.auth.currentUser.updatePassword(newPassword);\n\n  // Utility API\n\n  getTimestamp = () => firebase.firestore.FieldValue.serverTimestamp();\n  addToArray = value => firebase.firestore.FieldValue.arrayUnion(value);\n  removeFromArray = value => firebase.firestore.FieldValue.arrayRemove(value);\n\n  // User API\n\n  getUserDoc = userId => this.db.collection('users').doc(userId);\n\n  addUser = ({ userId, name, username, email, boardIds = [], photoURL = null }) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .set({ userId, name, username, email, boardIds, photoURL });\n\n  updateUser = (userId, newValue = {}) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .update(newValue);\n\n  // Board API\n\n  getBoardDoc = boardId => this.db.collection('boards').doc(boardId);\n\n  updateBoard = (boardId, newValue = {}) =>\n    this.getBoardDoc(boardId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  addBoard = ({ userId, boardTitle }) => {\n    this.db\n      .collection('boards')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        listIds: [],\n        authorId: userId,\n        memberIds: [userId],\n        boardTitle\n      })\n      .then(ref => {\n        this.updateUser(userId, {\n          boardIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  // List API\n\n  getListDoc = listId => this.db.collection('lists').doc(listId);\n\n  updateList = (listId, newValue = {}) =>\n    this.getListDoc(listId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  addList = ({ boardId, listTitle }) => {\n    this.db\n      .collection('lists')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        cardIds: [],\n        boardId,\n        listTitle\n      })\n      .then(ref => {\n        this.updateBoard(boardId, {\n          listIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  deleteList = ({ listId, boardId }) => {\n    const batch = this.db.batch();\n    const listRef = this.getListDoc(listId);\n    const boardRef = this.getBoardDoc(boardId);\n\n    // Delete list\n    batch.delete(listRef);\n\n    // Remove list id from board\n    batch.update(boardRef, {\n      listIds: this.removeFromArray(listId),\n      lastModifiedAt: this.getTimestamp()\n    });\n\n    // Delete cards assigned to list\n    this.db\n      .collection('cards')\n      .where('listId', '==', listId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('list deleted');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  // Card API\n\n  getCardDoc = cardId => this.db.collection('cards').doc(cardId);\n\n  addCard = ({ boardId, listId, cardTitle }) => {\n    this.db\n      .collection('cards')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        listId,\n        boardId,\n        cardTitle\n      })\n      .then(ref => {\n        this.updateList(listId, {\n          cardIds: this.addToArray(ref.id),\n          lastModifiedAt: this.getTimestamp()\n        });\n      });\n  };\n\n  updateCard = (cardId, newValue = {}) => {\n    this.getCardDoc(cardId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  deleteCard = ({ cardId, listId }) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const listRef = this.getListDoc(listId);\n    batch.delete(cardRef);\n    batch.update(listRef, {\n      cardIds: this.removeFromArray(cardId),\n      lastModifiedAt: this.getTimestamp()\n    });\n\n    // Delete tasks assigned to card\n    this.db\n      .collection('tasks')\n      .where('cardId', '==', cardId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('card deleted');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  moveCardToList = ({ cardId, origListId, newListId, updatedCardIds }) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const origListRef = this.getListDoc(origListId);\n    const newListRef = this.getListDoc(newListId);\n    batch.update(cardRef, {\n      listId: newListId,\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(origListRef, {\n      cardIds: this.removeFromArray(cardId),\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(newListRef, {\n      cardIds: updatedCardIds,\n      lastModifiedAt: this.getTimestamp()\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('card moved');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  // Task API\n\n  getTaskDoc = taskId => this.db.collection('tasks').doc(taskId);\n\n  addTask = ({ userId, memberIds = [], boardId = null, cardId = null, dueDate = null, text }) => {\n    this.db\n      .collection('tasks')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        isCompleted: false,\n        createdBy: userId,\n        assignedTo: [userId, ...memberIds],\n        dueDate,\n        boardId,\n        cardId,\n        text\n      })\n      .then(ref => {\n        if (cardId === null) return;\n        this.updateCard(cardId, {\n          taskIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  updateTask = (taskId, newValue = {}) => {\n    this.getTaskDoc(taskId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  deleteTask = ({ taskId, cardId = null }) => {\n    const batch = this.db.batch();\n    const taskRef = this.getTaskDoc(taskId);\n    batch.delete(taskRef);\n\n    if (cardId) {\n      const cardRef = this.getCardDoc(cardId);\n      batch.update(cardRef, {\n        taskIds: this.removeFromArray(taskId),\n        lastModifiedAt: this.getTimestamp()\n      });\n    }\n    return batch\n      .commit()\n      .then(() => {\n        console.log('task deleted');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  // Comment API\n  getCommentDoc = commentId => this.db.collection('comments').doc(commentId);\n\n  addComment = ({ userId, memberIds = [], boardId, cardId, text }) => {\n    this.db\n      .collection('comments')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        isPinned: false,\n        from: userId,\n        to: memberIds,\n        likes: [],\n        boardId,\n        cardId,\n        text\n      })\n      .then(ref => {\n        this.updateCard(cardId, {\n          commentIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  updateComment = (commentId, newValue = {}) => {\n    this.getCommentDoc(commentId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n}\n\nexport default Firebase;\n","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const BOARD = '/home/board/:id';\n","import React from 'react';\nimport './Button.scss';\n\nconst Button = ({\n  children,\n  type = 'button',\n  onClick,\n  className = '',\n  color = 'neutral',\n  size = 'md',\n  variant = 'text',\n  disabled,\n  name,\n  iconOnly = false,\n  buttonRef,\n  ...props\n}) => (\n  // eslint-disable-next-line react/button-has-type\n  <button\n    className={`${className} ${color} ${size} ${variant} ${\n      iconOnly ? 'icon-only' : ''\n    }`}\n    type={type}\n    onClick={onClick}\n    disabled={disabled}\n    name={name}\n    ref={buttonRef}\n    {...props}\n  >\n    {children}\n  </button>\n);\n\nButton.defaultProps = {\n  type: 'button',\n  className: '',\n  color: 'neutral',\n  size: 'md',\n  variant: 'text',\n  iconOnly: false\n};\n\nexport default Button;\n","import React from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Button } from '../Button';\nimport './SignOutButton.scss';\n\nconst SignOutButton = ({ firebase }) => (\n  <Button\n    type=\"button\"\n    onClick={firebase.signOut}\n    className=\"btn--sign-out\"\n    color=\"primary\"\n  >\n    Sign Out\n  </Button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        authUser: null\n      };\n    }\n\n    componentDidMount() {\n      const { firebase } = this.props;\n\n      this.listener = firebase.auth.onAuthStateChanged(authUser => {\n        authUser\n          ? this.setState({ authUser })\n          : this.setState({ authUser: null });\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport AuthUserContext from './context';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          this.props.history.push(ROUTES.SIGN_IN);\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n  return compose(\n    withRouter,\n    withFirebase\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from 'react';\nimport featherIcons from '../../assets/feather/feather-sprite.svg';\n\nfunction Icon(props) {\n  return (\n    <svg\n      className={`feather feather-${props.name} ${props.addClass || ''}`.trim()}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n      height=\"24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <use xlinkHref={`${featherIcons}#${props.name}`} />\n    </svg>\n  );\n}\n\nexport default Icon;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { SignOutButton } from '../SignOut';\nimport './Navbar.scss';\nimport { AuthUserContext } from '../Session';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\n\nconst NavLinksAuth = () => (\n  <>\n    <li>\n      <Link to={ROUTES.HOME}>Home</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ADMIN}>Admin</Link>\n    </li>\n    <li>\n      <SignOutButton />\n    </li>\n  </>\n);\n\nconst NavLinksNonAuth = () => (\n  <>\n    <li>\n      <Link to={ROUTES.SIGN_IN}>Log In</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.SIGN_UP}>Get Started</Link>\n    </li>\n  </>\n);\n\nexport default class Navbar extends Component {\n  static defaultProps = {\n    minWidth: 768\n  };\n\n  state = {\n    viewportWidth: window.innerWidth,\n    isMobileNavVisible: false,\n    isTouchEnabled: false\n  };\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick);\n  }\n\n  handleResize = () => {\n    this.setState({\n      viewportWidth: window.innerWidth\n    });\n  };\n\n  toggleMobileNavVisibility = () => {\n    this.setState(prevState => ({\n      isMobileNavVisible: !prevState.isMobileNavVisible\n    }));\n  };\n\n  handleClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    if (!isMobileView) return;\n    if (e.target.matches('button') || e.target.matches('a')) {\n      this.toggleMobileNavVisibility();\n    }\n  };\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n    window.removeEventListener('resize', this.handleResize);\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  handleOutsideClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n    if (\n      !isMobileView ||\n      this.navLinksEl.contains(e.target) ||\n      e.target.matches('button') ||\n      e.target.matches('a')\n    )\n      return;\n    this.setState({\n      isMobileNavVisible: false\n    });\n  };\n\n  handleTouch = () => {\n    const { isTouchEnabled } = this.state;\n    if (isTouchEnabled === true) return;\n    this.setState({\n      isTouchEnabled: true\n    });\n    document.removeEventListener('touchstart', this.handleTouch);\n    document.removeEventListener('click', this.handleOutsideClick);\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  render() {\n    const { viewportWidth, isMobileNavVisible } = this.state;\n    const { minWidth, navRef, navLinksClass } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    return (\n      <nav\n        className={`navbar ${isMobileView ? 'is-collapsed' : ''} ${\n          isMobileView && isMobileNavVisible ? 'show-links' : ''\n        }`}\n        ref={el => (this.navEl = el)}\n      >\n        <span className=\"navbar__logo\">\n          <Link to={ROUTES.LANDING} onClick={this.handleClick}>\n            workflow\n          </Link>\n        </span>\n        {isMobileView && (\n          <Button\n            type=\"button\"\n            color=\"primary\"\n            onClick={this.toggleMobileNavVisibility}\n            iconOnly\n          >\n            <Icon name=\"menu\" />\n          </Button>\n        )}\n        <ul\n          className={`navbar__links ${navLinksClass}`}\n          onClick={this.handleClick}\n          ref={el => (this.navLinksEl = el)}\n        >\n          <AuthUserContext.Consumer>\n            {authUser => (authUser ? <NavLinksAuth /> : <NavLinksNonAuth />)}\n          </AuthUserContext.Consumer>\n        </ul>\n      </nav>\n    );\n  }\n}\n","import React from 'react';\nimport './Input.scss';\n\nconst Input = props => {\n  return (\n    <>\n      {!props.hideLabel && (\n        <label htmlFor={props.name} className=\"input__label\">\n          {props.title}\n        </label>\n      )}\n      <input\n        className={props.className}\n        id={props.name}\n        name={props.name}\n        type={props.type}\n        value={props.value}\n        onChange={props.onChange}\n        placeholder={props.placeholder}\n        required={props.isRequired}\n        onBlur={props.onBlur}\n      />\n    </>\n  );\n};\n\nexport default Input;\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  username: '',\n  name: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { username, email, name, passwordOne } = this.state;\n    this.props.firebase\n      .createUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        const userId = authUser.user.uid;\n        const photoURL = authUser.user.photoURL || null;\n        return this.props.firebase.addUser({\n          userId,\n          name,\n          username,\n          email,\n          photoURL\n        });\n      })\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const {\n      username,\n      name,\n      email,\n      passwordOne,\n      passwordTwo,\n      error\n    } = this.state;\n    const isInvalid =\n      passwordOne === '' ||\n      passwordTwo === '' ||\n      email === '' ||\n      username === '' ||\n      passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"name\"\n          title=\"Full Name\"\n          value={name}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"username\"\n          title=\"Username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordOne\"\n          title=\"Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          title=\"Confirm Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Create Account\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignUpForm);\n","import React from 'react';\nimport './UserFormPage.scss';\n\nconst UserFormPage = ({ title, children }) => (\n  <main className=\"user-form__container\">\n    <h1 className=\"user-form__title\">{title}</h1>\n    {children}\n  </main>\n);\n\nexport default UserFormPage;\n","import React from 'react';\nimport SignUpForm from './SignUpForm';\nimport { UserFormPage } from '../UserFormPage';\n\nconst SignUpPage = () => (\n  <UserFormPage title=\"Create an account\">\n    <SignUpForm />\n  </UserFormPage>\n);\n\nexport default SignUpPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nexport { default as SignUpPage } from './SignUp';\nexport { default as SignUpForm } from './SignUpForm';\nexport { SignUpLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email, password } = this.state;\n    this.props.firebase\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  enableGoogleLogin = e => {\n    const { signInWithGoogle } = this.props.firebase;\n    signInWithGoogle();\n    e.preventDefault();\n  }\n\n  render() {\n    const { email, password, error } = this.state;\n    const isInvalid = password === '' || email === '';\n    return (\n      <form className=\"user-form\">\n      {/*\n        <Button\n          type=\"click\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.enableGoogleLogin}\n        >\n          Continue with Google\n        </Button>\n        <Button\n          type=\"click\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.enableGithubLogin}\n        >\n          Continue with Github\n        </Button>\n      */}\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"password\"\n          title=\"Password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Log In\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignInForm);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null\n};\n\nclass PasswordForgetForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .passwordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, error } = this.state;\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Reset My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordForgetForm);\n","import React from 'react';\nimport PasswordForgetForm from './PasswordForgetForm';\nimport { UserFormPage } from '../UserFormPage';\n\nconst PasswordForgetPage = () => (\n  <UserFormPage title=\"Forgot your password?\">\n    <PasswordForgetForm />\n  </UserFormPage>\n);\n\nexport default PasswordForgetPage;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport {default as PasswordForgetForm} from './PasswordForgetForm';\nexport {default as PasswordForgetPage} from './PasswordForget';\nexport {PasswordForgetLink};","import React from 'react';\nimport SignInForm from './SignInForm';\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { UserFormPage } from '../UserFormPage';\n\nconst SignInPage = () => (\n  <UserFormPage title=\"Log In\">\n    <SignInForm />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </UserFormPage>\n);\n\nexport default SignInPage;\n","import { Firebase } from '../components/Firebase';\n\nconst firebase = new Firebase();\n\nexport default firebase;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\n\nexport const loadUserData = user => {\n  return {\n    type: types.LOAD_USER_DATA,\n    user\n  };\n};\n\nexport const loadUsersById = usersById => {\n  return {\n    type: types.LOAD_USERS_BY_ID,\n    usersById\n  };\n};\n\nexport const fetchUsersById = () => {\n  return async dispatch => {\n    try {\n      const usersById = await firebase.db\n        .collection('users')\n        .get()\n        .then(snapshot => {\n          const users = {};\n          snapshot.forEach(doc => {\n            users[doc.id] = {\n              userId: doc.id,\n              ...doc.data()\n            };\n          });\n          return users;\n        });\n      dispatch(loadUsersById(usersById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserData = userId => {\n  return async dispatch => {\n    try {\n      const user = await firebase\n        .getUserDoc(userId)\n        .get()\n        .then(doc => doc.data());\n      dispatch(loadUserData(user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addUser = ({ userId, userData }) => {\n  return {\n    type: types.ADD_USER,\n    userId,\n    userData\n  };\n};\n\nexport const deleteUser = userId => {\n  return {\n    type: types.DELETE_USER,\n    userId\n  };\n};\n\nexport const updateUser = ({ userId, userData }) => {\n  return {\n    type: types.UPDATE_USER,\n    userId,\n    userData\n  };\n};\n","export const LOAD_USER_DATA = 'LOAD_USER_DATA';\nexport const LOAD_USERS_BY_ID = 'LOAD_USERS_BY_ID';\nexport const ADD_USER = 'ADD_USER';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const DELETE_USER = 'DELETE_USER';\n","export const getUsersById = state => {\n  return state.usersById;\n};\n\nexport const getUserData = (state, userId) => {\n  return state.usersById[userId];\n};\n","import * as types from './types';\n\nconst usersById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_USERS_BY_ID: {\n      const { usersById } = action;\n      return {\n        ...state,\n        ...usersById\n      };\n    }\n    case types.LOAD_USER_DATA: {\n      const { user } = action;\n      return {\n        ...state,\n        ...user\n      };\n    }\n    case types.ADD_USER: {\n      const { userId, userData } = action;\n      return {\n        ...state,\n        [userId]: {\n          userId,\n          ...userData\n        }\n      };\n    }\n    case types.DELETE_USER: {\n      const { userId } = action;\n      const { [userId]: deletedUser, ...restOfUsers } = state;\n      return restOfUsers;\n    }\n    case types.UPDATE_USER: {\n      const { userId, userData } = action;\n      return {\n        ...state,\n        [userId]: {\n          ...state[userId],\n          ...userData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default usersById;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const selectUser = userId => {\n  return {\n    type: types.SELECT_USER,\n    userId\n  };\n};\n\nexport const selectBoard = boardId => {\n  return {\n    type: types.SELECT_BOARD,\n    boardId\n  };\n};\n\nexport const selectList = listId => {\n  return {\n    type: types.SELECT_LIST,\n    listId\n  };\n};\n\nexport const selectCard = cardId => {\n  return {\n    type: types.SELECT_CARD,\n    cardId\n  };\n};\n","export const SELECT_BOARD = 'SELECT_BOARD';\nexport const SELECT_LIST = 'SELECT_LIST';\nexport const SELECT_CARD = 'SELECT_CARD';\nexport const SELECT_USER = 'SELECT_USER';\n","export const getCurrentUserId = state => {\n  return state.current.userId;\n};\n\nexport const getCurrentBoardId = state => {\n  return state.current.boardId;\n};\n\nexport const getCurrentListId = state => {\n  return state.current.listId;\n};\n\nexport const getCurrentCardId = state => {\n  return state.current.cardId;\n};\n\nexport const getCurrent = state => {\n  return state.current;\n};\n","import React, { Component } from 'react';\n\nexport default class BoardGrid extends Component {\n  render() {\n    return <ul className=\"board-grid\">{this.props.children}</ul>;\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BoardTile = props => {\n  const { boardId, boardTitle, onClick } = props;\n  return (\n    <li className=\"board-grid__tile\">\n      <Link\n        className=\"board-grid__link\"\n        to={`/home/board/${boardId}`}\n        onClick={onClick}\n      >\n        <span className=\"board-grid__title\">{boardTitle}</span>\n      </Link>\n    </li>\n  );\n};\n\nexport default BoardTile;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadBoardsById = boardsById => {\n  return {\n    type: types.LOAD_BOARDS_BY_ID,\n    boardsById\n  };\n};\n\nexport const fetchBoardsById = userId => {\n  return async dispatch => {\n    try {\n      const boardsById = await firebase.db\n        .collection('boards')\n        .where('memberIds', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const boardsById = {};\n          snapshot.forEach(doc => {\n            boardsById[doc.id] = doc.data();\n          });\n          return boardsById;\n        });\n      dispatch(loadBoardsById(boardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateBoardsById = board => {\n  return {\n    type: types.UPDATE_BOARDS_BY_ID,\n    board\n  };\n};\n\nexport const reorderLists = (boardId, listIds) => {\n  return {\n    type: types.REORDER_LISTS,\n    boardId,\n    listIds\n  };\n};\n\nexport const updateListIds = (boardId, listIds) => {\n  return {\n    type: types.UPDATE_LIST_IDS,\n    boardId,\n    listIds\n  };\n};\n","export const LOAD_BOARDS_BY_ID = 'LOAD_BOARDS_BY_ID';\nexport const UPDATE_BOARDS_BY_ID = 'UPDATE_BOARDS_BY_ID';\nexport const REORDER_LISTS = 'REORDER_LISTS';\nexport const UPDATE_LIST_IDS = 'UPDATE_LIST_IDS';","export const getBoardsById = state => {\n  return state.boardsById;\n};\n\nexport const getBoardsArray = state => {\n  const { boardsById } = state;\n  return Object.keys(boardsById).map(boardId => {\n    return {\n      boardId,\n      ...boardsById[boardId]\n    };\n  });\n};\n\nexport const getBoard = (state, boardId) => {\n  const { boardsById } = state;\n  return boardsById[boardId];\n};\n","import * as types from './types';\n\nconst boardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_BOARDS_BY_ID: {\n      const { boardsById } = action;\n      return {\n        ...state,\n        ...boardsById\n      };\n    }\n    case types.UPDATE_BOARDS_BY_ID: {\n      const { board } = action;\n      return {\n        ...state,\n        ...board\n      };\n    }\n    case types.UPDATE_LIST_IDS:\n    case types.REORDER_LISTS: {\n      const { boardId, listIds } = action;\n      return {\n        ...state,\n        [boardId]: {\n          ...state[boardId],\n          listIds\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default boardsById;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport BoardGrid from './BoardGrid';\nimport BoardTile from './BoardTile';\nimport './BoardGrid.scss';\nimport { withAuthorization } from '../Session';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Icon } from '../Icon';\nimport { userSelectors } from '../../ducks/users';\n\nclass BoardGridContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const { userId, firebase, updateBoardsById } = this.props;\n    this.boardObserver = firebase.db\n      .collection('boards')\n      .where('memberIds', 'array-contains', userId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const board = {\n            [change.doc.id]: change.doc.data()\n          };\n          updateBoardsById(board);\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.boardObserver();\n  }\n\n  render() {\n    const { boardsArray, selectBoard } = this.props;\n    const boardTiles = boardsArray.map(board => {\n      const { boardTitle, boardId } = board;\n      return (\n        <BoardTile\n          key={boardId}\n          boardTitle={boardTitle}\n          boardId={boardId}\n          onClick={() => selectBoard(boardId)}\n        />\n      );\n    });\n    return (\n      <section>\n        <BoardGrid>\n          {boardTiles}\n          <button\n            type=\"button\"\n            className=\"board-grid__tile board-grid__btn--add\"\n            onClick={this.props.openBoardComposer}\n          >\n            <Icon name=\"plus-circle\" />\n            Create board\n          </button>\n        </BoardGrid>\n      </section>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    userId: currentSelectors.getCurrentUserId(state),\n    user: userSelectors.getUserData(state, ownProps.userId),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardGridContainer)\n);\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport './Modal.scss';\n\nconst Modal = ({\n  onModalClose,\n  children,\n  className = '',\n  onModalClick,\n  size = 'md',\n  id\n}) => {\n  return (\n    <div className=\"modal\" onClick={onModalClick}>\n      <div\n        id={id}\n        className={`modal__content ${className} modal__content--${size}`}\n      >\n        <Button\n          type=\"button\"\n          className=\"modal__btn--close\"\n          onClick={onModalClose}\n          iconOnly\n        >\n          <Icon name=\"x\" />\n        </Button>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport { Modal } from '../Modal';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\nimport './BoardComposer.scss';\n\nconst INITIAL_STATE = {\n  boardTitle: ''\n};\n\nexport default class BoardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { boardTitle } = this.state;\n    const { handleSubmit, onClose } = this.props;\n    this.props.handleSubmit(boardTitle);\n    this.props.onClose();\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { boardTitle } = this.state;\n    return (\n      <Modal onModalClose={this.props.onClose} size=\"sm\">\n        <form onSubmit={this.onSubmit}>\n          <Input\n            name=\"boardTitle\"\n            title=\"Board Title\"\n            value={boardTitle}\n            onChange={this.onChange}\n            type=\"text\"\n          />\n          <Button\n            className=\"board-composer__btn--add\"\n            type=\"submit\"\n            onClick={this.onSubmit}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Create Board\n          </Button>\n        </form>\n      </Modal>\n    );\n  }\n}\n","export const CARD = 'CARD';\nexport const LIST = 'LIST';\nexport const TASK = 'TASK';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input } from '../Input';\nimport { Icon } from '../Icon';\nimport { withAuthorization } from '../Session';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Button } from '../Button';\nimport './ListComposer.scss';\n\nconst INITIAL_STATE = {\n  listTitle: '',\n  isActive: false\n};\n\nclass ListComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ listTitle: '' });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { listTitle } = this.state;\n    const { boardId } = this.props;\n    this.props.firebase.addList({ boardId, listTitle });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = e => {\n    if (e.target.value === '') {\n      this.setState({\n        isActive: false\n      });\n    }\n  };\n\n  render() {\n    const { listTitle, isActive } = this.state;\n    return (\n      <div\n        className={`list-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"list-composer__form\" onSubmit={this.onSubmit}>\n          <Input\n            onChange={this.onChange}\n            value={listTitle}\n            placeholder={isActive ? 'Enter list title...' : 'Add a list'}\n            required\n            name=\"listTitle\"\n            hideLabel\n            className=\"list-composer__input\"\n          />\n          {isActive && (\n            <div className=\"list-composer__footer\">\n              <Button\n                className=\"list-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add List\n              </Button>\n              <Button\n                className=\"list-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListComposer)\n);\n","import React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { ListComposer } from '../ListComposer';\n\nconst Board = props => {\n  const { boardId, children } = props;\n  return (\n    <Droppable\n      droppableId={boardId}\n      type={droppableTypes.LIST}\n      direction=\"horizontal\"\n    >\n      {provided => (\n        <div\n          className=\"board\"\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n        >\n          {children}\n          {provided.placeholder}\n          <ListComposer boardId={boardId} />\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nexport default Board;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadListsById = listsById => {\n  return {\n    type: types.LOAD_LISTS_BY_ID,\n    listsById\n  };\n};\n\nexport const fetchListsById = boardId => {\n  return async dispatch => {\n    try {\n      const listsById = await firebase.db\n        .collection('lists')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const listsById = {};\n          snapshot.forEach(doc => {\n            listsById[doc.id] = doc.data();\n          });\n          return listsById;\n        });\n      dispatch(loadListsById(listsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateListsById = list => {\n  return {\n    type: types.UPDATE_LISTS_BY_ID,\n    list\n  };\n};\n","export const LOAD_LISTS_BY_ID = 'LOAD_LISTS_BY_ID';\nexport const FETCH_LISTS_BY_ID = 'FETCH_LISTS_BY_ID';\nexport const UPDATE_LISTS_BY_ID = 'UPDATE_LISTS_BY_ID';\nexport const DELETE_CARD = 'DELETE_CARD';\n","export const getListsById = state => {\n  return state.listsById;\n};\n\nexport const getListsArray = state => {\n  const { listsById, boardsById, current } = state;\n  const { boardId } = current;\n  const board = boardsById[boardId];\n  if (!board) return null;\n  const { listIds } = board;\n\n  return listIds.map(listId => {\n    return {\n      listId,\n      ...listsById[listId]\n    };\n  });\n};\n","import * as types from './types';\n\nconst listsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_LISTS_BY_ID: {\n      const { listsById } = action;\n      return {\n        ...state,\n        ...listsById\n      };\n    }\n    case types.UPDATE_LISTS_BY_ID: {\n      const { list } = action;\n      return {\n        ...state,\n        ...list\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default listsById;\n","export const getCardsById = state => {\n  return state.cardsById;\n};\n\nexport const getCardsArray = (state, ownProps) => {\n  const { cardsById } = state;\n  const { cardIds } = ownProps;\n  return cardIds.map(cardId => cardsById[cardId]);\n};\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadCardsById = cardsById => {\n  return {\n    type: types.LOAD_CARDS_BY_ID,\n    cardsById\n  };\n};\n\nexport const fetchCardsById = boardId => {\n  return async dispatch => {\n    try {\n      const cardsById = await firebase.db\n        .collection('cards')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const cards = {};\n          snapshot.forEach(doc => {\n            cards[doc.id] = {\n              cardId: doc.id,\n              ...doc.data()\n            };\n          });\n          return cards;\n        });\n      dispatch(loadCardsById(cardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateCardsById = card => {\n  return {\n    type: types.UPDATE_CARDS_BY_ID,\n    card\n  };\n};\n\n","export const ADD_CARD = 'ADD_CARD';\nexport const SET_CARD_DUE_DATE = 'SET_CARD_DUE_DATE';\nexport const ADD_CARD_SUBTASK = 'ADD_CARD_SUBTASK';\nexport const REMOVE_CARD_SUBTASK = 'REMOVE_CARD_SUBTASK';\nexport const CHANGE_CARD_DESCRIPTION = 'CHANGE_CARD_DESCRIPTION';\nexport const SET_CARD_COLOR = 'SET_CARD_COLOR';\nexport const DELETE_CARD = 'DELETE_CARD';\nexport const MOVE_CARD = 'MOVE_CARD';\nexport const LOAD_CARDS_BY_ID = 'LOAD_CARDS_BY_ID';\nexport const UPDATE_CARDS_BY_ID = 'UPDATE_CARDS_BY_ID';\n\n","import * as types from './types';\n\nconst cardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_CARDS_BY_ID: {\n      const { cardsById } = action;\n      return {\n        ...state,\n        ...cardsById\n      };\n    }\n    case types.UPDATE_CARDS_BY_ID: {\n      const { card } = action;\n      return {\n        ...state,\n        ...card\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default cardsById;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadTasksById = tasksById => {\n  return {\n    type: types.LOAD_TASKS_BY_ID,\n    tasksById\n  };\n};\n\nexport const fetchTasksById = () => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateTasksById = task => {\n  return {\n    type: types.UPDATE_TASKS_BY_ID,\n    task\n  };\n};\n\nexport const fetchCardTasks = boardId => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserTasks = userId => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .where('assignedTo', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addTask = ({ taskId, taskData }) => {\n  return {\n    type: types.ADD_TASK,\n    taskId,\n    taskData\n  };\n};\n\nexport const deleteTask = taskId => {\n  return {\n    type: types.DELETE_TASK,\n    taskId\n  };\n};\n\nexport const updateTask = ({ taskId, taskData }) => {\n  return {\n    type: types.UPDATE_TASK,\n    taskId,\n    taskData\n  };\n};\n","export const LOAD_TASKS_BY_ID = 'LOAD_TASKS_BY_ID';\nexport const FETCH_TASKS_BY_ID = 'FETCH_TASKS_BY_ID';\nexport const UPDATE_TASKS_BY_ID = 'UPDATE_TASKS_BY_ID';\nexport const ADD_TASK = 'ADD_TASK';\nexport const UPDATE_TASK = 'UPDATE_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\n","export const getTasksById = state => {\n  const { tasksById } = state;\n  return tasksById;\n};\n\nexport const getTasksArray = (state, taskIds) => {\n  const { tasksById } = state;\n  if (!taskIds) return [];\n\n  return taskIds.map(taskId => {\n    return tasksById[taskId];\n  });\n};\n","import * as types from './types';\n\nconst tasksById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_TASKS_BY_ID: {\n      const { tasksById } = action;\n      return {\n        ...state,\n        ...tasksById\n      };\n    }\n    case types.ADD_TASK: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        [taskId]: {\n          taskId,\n          ...taskData\n        }\n      };\n    }\n    case types.DELETE_TASK: {\n      const { taskId } = action;\n      const { [taskId]: deletedTask, ...restOfTasks } = state;\n      return restOfTasks;\n    }\n    case types.UPDATE_TASK: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        [taskId]: {\n          ...state[taskId],\n          ...taskData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default tasksById;\n","import React, { Component, createRef } from 'react';\nimport './Textarea.scss';\n\nexport default class Textarea extends Component {\n  static defaultProps = {\n    isAutoHeightResizeEnabled: true\n  };\n\n  constructor(props) {\n    super(props);\n    this.textareaEl = createRef();\n  }\n\n  componentDidMount() {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n    this.autoHeightResize();\n  }\n\n  autoHeightResize = () => {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n\n    this.textareaEl.current.style.height = '0px'; // resets scroll height\n    this.textareaEl.current.style.height = `${\n      this.textareaEl.current.scrollHeight\n    }px`;\n  };\n\n  render() {\n    const {\n      className,\n      name,\n      value,\n      onChange,\n      placeholder,\n      isRequired,\n      onBlur,\n      onFocus,\n      onKeyDown,\n      onDragStart,\n      isReadOnly\n    } = this.props;\n    return (\n      <textarea\n        className={`textarea ${className}`}\n        id={name}\n        name={name}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={isRequired}\n        onBlur={onBlur}\n        onInput={this.autoHeightResize}\n        ref={this.textareaEl}\n        onFocus={onFocus}\n        onKeyDown={onKeyDown}\n        onDragStart={onDragStart}\n        readOnly={isReadOnly}\n      />\n    );\n  }\n}\n","export const BACKSPACE = 'Backspace';\nexport const ENTER = 'Enter';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon } from '../Icon';\nimport { withAuthorization } from '../Session';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport * as keys from '../../constants/keys';\nimport './CardComposer.scss';\n\nconst INITIAL_STATE = {\n  cardTitle: '',\n  isActive: false\n};\n\nclass CardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ cardTitle: '' });\n  };\n\n  onSubmit = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { cardTitle } = this.state;\n    const { boardId } = this.props.current;\n    const { listId } = this.props;\n    this.props.firebase.addCard({ boardId, listId, cardTitle });\n    this.resetForm();\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onBlur = e => {\n    if (e.target.value !== '') return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const { cardTitle, isActive } = this.state;\n\n    return (\n      <div\n        className={`card-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"card-composer__form\" onSubmit={this.onSubmit}>\n          <Textarea\n            onChange={this.onChange}\n            value={cardTitle}\n            placeholder={isActive ? 'Enter card title...' : 'Add a card'}\n            isRequired\n            name=\"cardTitle\"\n            className=\"card-composer__textarea\"\n            isAutoHeightResizeEnabled={false}\n            onKeyDown={this.onSubmit}\n          />\n          {isActive && (\n            <div className=\"card-composer__footer\">\n              <Button\n                className=\"card-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add Card\n              </Button>\n              <Button\n                className=\"card-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardComposer)\n);\n","import React from 'react';\nimport './Menu.scss';\n\nconst Menu = ({ children, onClick, className = '' }) => {\n  return <ul className={`menu ${className}`} onClick={onClick}>{children}</ul>;\n};\n\nexport default Menu;\n","import React from 'react';\nimport './Menu.scss';\n\nconst MenuItem = ({ children, className = '' }) => {\n  return <li className={`menu__item ${className}`}>{children}</li>;\n};\n\nexport default MenuItem;\n","import React, { Component } from 'react';\n\nexport default class Popover extends Component {\n  state = {\n    isTouchEnabled: false\n  };\n\n  componentDidMount() {\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick, false);\n  }\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  handleOutsideClick = e => {\n    const { onOutsideClick } = this.props;\n    onOutsideClick(e.target);\n  };\n\n  handleTouch = () => {\n    this.setState({\n      isTouchEnabled: true\n    });\n    // remove touch handler to prevent unnecessary refires\n    document.removeEventListener('touchstart', this.handleTouch);\n    // remove outside click handler from click events\n    document.removeEventListener('click', this.handleOutsideClick);\n    // reattach outside click handler to touchstart events\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  render() {\n    const { className, onClick, style, children } = this.props;\n    return (\n      <div className={`popover ${className}`} onClick={onClick} style={style}>\n        {children}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from '../Button';\nimport Popover from './Popover';\nimport './Popover.scss';\n\nexport default class PopoverWrapper extends Component {\n  state = {\n    isOpen: false\n  };\n\n  static defaultProps = {\n    wrapperClass: '',\n    popoverClass: '',\n    buttonProps: {},\n    align: 'left',\n    anchorEl: null\n  };\n\n  handleOutsideClick = target => {\n    if (this.componentEl && !this.componentEl.contains(target)) {\n      this.setState({\n        isOpen: false\n      });\n    }\n  };\n\n  toggleOpen = () => {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  };\n\n  render() {\n    const {\n      children,\n      alignInner,\n      alignOuter,\n      buttonProps,\n      wrapperClass,\n      popoverClass,\n      anchorEl\n    } = this.props;\n    const { isOpen } = this.state;\n\n    let popoverWrapperStyle = null;\n    \n    if (anchorEl) {\n      const { offsetTop, offsetLeft } = anchorEl;\n      popoverWrapperStyle = {\n        position: 'absolute',\n        top: offsetTop,\n        [alignOuter]: offsetLeft\n      };\n    }\n\n    return (\n      <div\n        className={`popover-wrapper ${isOpen ? 'is-active' : ''} ${wrapperClass}`}\n        ref={el => (this.componentEl = el)}\n        style={popoverWrapperStyle}\n      >\n        <Button type=\"button\" onClick={this.toggleOpen} {...buttonProps} />\n        {isOpen && (\n          <Popover\n            className={`align-${alignInner} ${popoverClass}`}\n            onClick={this.toggleOpen}\n            onOutsideClick={this.handleOutsideClick}\n          >\n            {children}\n          </Popover>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport './Card.scss';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { PopoverWrapper } from '../Popover';\nimport { Menu, MenuItem } from '../Menu';\n\nexport default class Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleCardClick = e => {\n    if (e.target.matches('button') || e.target.matches('a')) return;\n    const { cardId, onCardClick } = this.props;\n    onCardClick(cardId);\n  };\n\n  render() {\n    const { cardTitle, cardId, cardIndex } = this.props;\n    return (\n      <Draggable draggableId={cardId} index={cardIndex}>\n        {provided => (\n            <div\n              className=\"card\"\n              onClick={this.handleCardClick}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              ref={provided.innerRef}\n            >\n              <div className=\"card__header\" ref={el => (this.headerEl = el)}>\n                <div className=\"card__tags\" />\n                <h3 className=\"card__title\">{cardTitle}</h3>\n              </div>\n              <div className=\"card__footer\">\n                <div className=\"card__labels\" />\n              </div>\n            </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { Card } from '../Card';\n\nexport default class Cards extends Component {\n  static propTypes = {\n    listId: PropTypes.string.isRequired\n  };\n\n  /*\n\n  shouldComponentUpdate(nextProps) {\n    if (this.props.cards === nextProps.cards) {\n      return false;\n    }\n    return true;\n  }\n*/\n  componentDidUpdate(prevProps) {\n    if (this.props.cards.length > prevProps.cards.length) {\n      this.scrollToBottom();\n    }\n  }\n\n  scrollToBottom = () => {\n    this.listEnd.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  render() {\n    const { listId, cards, style, onCardClick, onCardDelete } = this.props;\n\n    return (\n      <Droppable droppableId={listId} type={droppableTypes.CARD}>\n        {(provided, snapshot) => (\n          <div\n            className=\"list__content\"\n            ref={provided.innerRef}\n            style={{\n              ...style,\n              minHeight: snapshot.isDraggingOver ? 80 : 16\n            }}\n            {...provided.droppableProps}\n          >\n            {cards.map((card, cardIndex) => {\n              const { cardId, cardTitle } = card;\n              return (\n                <Card\n                  key={cardId}\n                  cardTitle={cardTitle}\n                  cardId={cardId}\n                  cardIndex={cardIndex}\n                  listId={listId}\n                  onCardClick={onCardClick}\n                  onCardDelete={onCardDelete}\n                />\n              );\n            })}\n            {provided.placeholder}\n            <div\n              style={{ float: 'left', clear: 'both' }}\n              ref={el => (this.listEnd = el)}\n            />\n          </div>\n        )}\n      </Droppable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { CardComposer } from '../CardComposer';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\nimport { Input } from '../Input';\nimport Cards from './Cards';\nimport './List.scss';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listTitle: this.props.listTitle\n    };\n  }\n\n  handleListDelete = e => {\n    e.preventDefault();\n    const { listId, boardId, firebase } = this.props;\n    firebase.deleteList({ listId, boardId });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onBlur = e => {\n    const { listTitle, listId, firebase } = this.props;\n    const { listTitle: newListTitle } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newListTitle !== listTitle) {\n      firebase.updateList(listId, {\n        listTitle: newListTitle\n      });\n      console.log('updated!');\n    }\n  };\n\n  render() {\n    const {\n      cards,\n      onCardClick,\n      listId,\n      listIndex,\n      isFetchingCards\n    } = this.props;\n    if (isFetchingCards) return null;\n\n    const { listTitle, viewportHeight } = this.state;\n\n    return (\n      <Draggable draggableId={listId} index={listIndex}>\n        {provided => (\n          <>\n            <section\n              className=\"list\"\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <header\n                className=\"list__header\"\n                ref={el => (this.listHeaderEl = el)}\n              >\n                <Input\n                  className=\"list__input--title\"\n                  name=\"listTitle\"\n                  type=\"text\"\n                  value={listTitle}\n                  onChange={this.onChange}\n                  required\n                  hideLabel\n                  onBlur={this.onBlur}\n                />\n                <PopoverWrapper\n                  wrapperClass=\"list__popover-wrapper\"\n                  popoverClass=\"list__popover\"\n                  alignInner=\"left\"\n                  buttonProps={{\n                    size: 'medium',\n                    iconOnly: true,\n                    className: 'list__btn--more-actions',\n                    children: <Icon name=\"more-vertical\" />\n                  }}\n                >\n                  <Menu>\n                    <MenuItem>\n                      <a href=\"\" onClick={this.handleListDelete}>\n                        Delete\n                      </a>\n                    </MenuItem>\n                  </Menu>\n                </PopoverWrapper>\n              </header>\n              <Cards\n                cards={cards}\n                listId={listId}\n                onCardClick={onCardClick}\n                onCardDelete={this.handleCardDelete}\n              />\n              {provided.placeholder}\n              <CardComposer listId={listId} />\n            </section>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    cards: cardSelectors.getCardsArray(state, ownProps)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(List)\n);\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadCommentsById = commentsById => {\n  return {\n    type: types.LOAD_COMMENTS_BY_ID,\n    commentsById\n  };\n};\n\nexport const fetchCommentsById = () => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateCommentsById = comment => {\n  return {\n    type: types.UPDATE_COMMENTS_BY_ID,\n    comment\n  };\n};\n\nexport const fetchCardComments = cardId => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .where('cardId', '==', cardId)\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserComments = userId => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .where('to', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addComment = ({ commentId, commentData }) => {\n  return {\n    type: types.ADD_COMMENT,\n    commentId,\n    commentData\n  };\n};\n\nexport const deleteComment = commentId => {\n  return {\n    type: types.DELETE_COMMENT,\n    commentId\n  };\n};\n\nexport const updateComment = ({ commentId, commentData }) => {\n  return {\n    type: types.UPDATE_COMMENT,\n    commentId,\n    commentData\n  };\n};\n","export const LOAD_COMMENTS_BY_ID = 'LOAD_COMMENTS_BY_ID';\nexport const FETCH_COMMENTS_BY_ID = 'FETCH_COMMENTS_BY_ID';\nexport const UPDATE_COMMENTS_BY_ID = 'UPDATE_COMMENTS_BY_ID';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const UPDATE_COMMENT = 'UPDATE_COMMENT';\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\n","export const getCommentsById = state => {\n  const { commentsById } = state;\n  return commentsById;\n};\n\nexport const getCommentsArray = (state, commentIds) => {\n  const { commentsById } = state;\n  if (!commentIds) return [];\n\n  return commentIds.map(commentId => {\n    return commentsById[commentId];\n  });\n};\n","import * as types from './types';\n\nconst commentsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_COMMENTS_BY_ID: {\n      const { commentsById } = action;\n      return {\n        ...state,\n        ...commentsById\n      };\n    }\n    case types.ADD_COMMENT: {\n      const { commentId, commentData } = action;\n      return {\n        ...state,\n        [commentId]: {\n          commentId,\n          ...commentData\n        }\n      };\n    }\n    case types.DELETE_COMMENT: {\n      const { commentId } = action;\n      const { [commentId]: deletedComment, ...restOfComments } = state;\n      return restOfComments;\n    }\n    case types.UPDATE_COMMENT: {\n      const { commentId, commentData } = action;\n      return {\n        ...state,\n        [commentId]: {\n          ...state[commentId],\n          ...commentData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default commentsById;\n","import React from 'react';\nimport './Toolbar.scss';\n\nconst Toolbar = ({ className, children, ...props }) => (\n  <div className={`toolbar ${className}`} {...props}>\n    {children}\n  </div>\n);\n\nToolbar.defaultProps = {\n  className: ''\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport './Checkbox.scss';\n\nconst Checkbox = ({\n  value,\n  id,\n  name,\n  isChecked,\n  onClick,\n  onChange,\n  className,\n  labelClass,\n  ...props\n}) => {\n  return (\n    <label\n      htmlFor={id}\n      onClick={onClick}\n      className={`checkbox__label ${labelClass}`}\n    >\n      {isChecked && <Icon name=\"check\" />}\n      <input\n        type=\"checkbox\"\n        id={id}\n        value={value}\n        name={name}\n        checked={isChecked}\n        className={`checkbox ${className}`}\n        onChange={onChange}\n        {...props}\n      />\n    </label>\n  );\n};\n\nCheckbox.defaultProps = {\n  className: '',\n  labelClass: ''\n};\n\nexport default Checkbox;\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\n\nconst CardEditorMoreActions = ({ onMenuClick }) => (\n  <PopoverWrapper\n    wrapperClass=\"card-editor__popover-wrapper\"\n    popoverClass=\"card-editor__popover\"\n    alignOuter=\"right\"\n    alignInner=\"right\"\n    buttonProps={{\n      size: 'medium',\n      iconOnly: true,\n      className: 'card-editor__toolbar-btn',\n      children: <Icon name=\"more-horizontal\" />\n    }}\n  >\n    <Menu onClick={onMenuClick}>\n      <MenuItem>\n        <a href=\"\" data-action=\"delete\">\n          Delete card\n        </a>\n      </MenuItem>\n    </Menu>\n  </PopoverWrapper>\n);\n\nexport default CardEditorMoreActions;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Checkbox } from '../Checkbox';\nimport { Textarea } from '../Textarea';\n\nconst appRoot = document.getElementById('root');\n\nexport default class CardEditorTask extends Component {\n  constructor(props) {\n    super(props);\n    this.portal = document.createElement('div');\n  }\n\n  componentDidMount() {\n    appRoot.appendChild(this.portal);\n  }\n\n  onDragStart = e => {\n    console.log('dragstart');\n    this.setState({\n      isReadOnly: true\n    });\n  };\n\n  componentWillUnmount() {\n    appRoot.removeChild(this.portal);\n  }\n\n  render() {\n    const {\n      taskId,\n      index,\n      text,\n      isCompleted,\n      toggleCompleted,\n      onChange,\n      onBlur,\n      onKeyDown\n    } = this.props;\n\n    return (\n      <Draggable draggableId={taskId} index={index}>\n        {(provided, snapshot) => {\n          const inner = (\n            <li\n              className=\"card-editor__task\"\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <Checkbox\n                id={`cb-${taskId}`}\n                value={taskId}\n                name={taskId}\n                isChecked={isCompleted}\n                onChange={toggleCompleted}\n                className=\"card-editor__checkbox\"\n                labelClass=\"card-editor__checkbox-label\"\n              />\n              <Textarea\n                value={text}\n                onChange={onChange}\n                onBlur={onBlur}\n                name={taskId}\n                className=\"card-editor__textarea--task\"\n                onKeyDown={onKeyDown}\n                onDragStart={this.onDragStart}\n              />\n            </li>\n          );\n          return snapshot.isDragging\n            ? ReactDOM.createPortal(inner, this.portal)\n            : inner;\n        }}\n      </Draggable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './Avatar.scss';\n\nexport default class Avatar extends Component {\n  static defaultProps = {\n    imgSrc: null,\n    classes: {\n      avatar: '',\n      img: '',\n      placeholder: ''\n    },\n    size: 'md',\n    variant: 'circle'\n  };\n\n  getUserInitials = fullName => {\n    return fullName\n      .split(' ')\n      .map(name => name.charAt(0))\n      .join('')\n      .toUpperCase();\n  };\n\n  render() {\n    const {\n      imgSrc,\n      imgProps,\n      classes,\n      fullName,\n      variant,\n      color,\n      size\n    } = this.props;\n    return (\n      <div\n        className={`avatar avatar--${size} avatar--${variant} ${\n          classes.avatar\n        }`}\n      >\n        {imgSrc !== null ? (\n          <img\n            src={imgSrc}\n            alt={fullName}\n            className={`avatar__img ${classes.img}`}\n            {...imgProps}\n          />\n        ) : (\n          <div\n            className={`avatar__placeholder ${classes.placeholder}`}\n            style={{ backgroundColor: color }}\n          >\n            {this.getUserInitials(fullName)}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/users';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { commentActions, commentSelectors } from '../../ducks/comments';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { Avatar } from '../Avatar';\nimport './CardEditorComment.scss';\n\nclass CardEditorComment extends Component {\n  componentDidMount() {}\n\n  componentWillUnmount() {}\n\n  handleLikeClick = () => {\n    const { handleLike, comment } = this.props;\n    const { commentId } = comment;\n    handleLike(commentId);\n  };\n\n  render() {\n    const { user, comment } = this.props;\n    const { name, photoURL } = user;\n    const {\n      text,\n      createdAt,\n      lastModifiedAt,\n      likes,\n      to,\n      from,\n      isPinned\n    } = comment;\n    \n    const dateCreatedFull = createdAt.toDate();\n    const timeCreated  = dateCreatedFull.toLocaleTimeString('en-US');\n    const dateCreated = dateCreatedFull.toDateString();\n    return (\n      <div\n        className={`card-editor__comment-wrapper ${\n          isPinned ? 'is-pinned' : ''\n        }`}\n      >\n        <Avatar\n          classes={{\n            avatar: 'card-editor__avatar',\n            placeholder: 'card-editor__avatar-placeholder'\n          }}\n          fullName={name}\n          size=\"sm\"\n          variant=\"circle\"\n          imgSrc={photoURL}\n        />\n        <div className=\"card-editor__comment\">\n          <div className=\"card-editor__comment-header\">\n            <div className=\"card-editor__comment-details\">\n              <span className=\"card-editor__full-name\">{name}</span>\n              <span className=\"card-editor__time-elapsed\">{`${dateCreated} ${timeCreated}`}</span>\n            </div>\n            <Button className=\"card-editor__likes\" onClick={this.handleLikeClick} size=\"sm\">\n              <span className=\"card-editor__likes-counter\">\n                {likes.length > 0 ? likes.length : ''}\n              </span>\n              <Icon name=\"thumbs-up\" />\n            </Button>\n          </div>\n          <div className=\"card-editor__comment-body\">{text}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state, ownProps.comment.from),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateCardsById: card => dispatch(cardActions.updateCardsById(card)),\n    fetchCardComments: cardId =>\n      dispatch(commentActions.fetchCardComments(cardId)),\n    addComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.addComment({ commentId, commentData })),\n    deleteComment: commentId =>\n      dispatch(commentActions.deleteComment(commentId)),\n    updateComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.updateComment({ commentId, commentData }))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardEditorComment)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { commentActions, commentSelectors } from '../../ducks/comments';\nimport { Input } from '../Input';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { Modal } from '../Modal';\nimport { Toolbar } from '../Toolbar';\nimport { Checkbox } from '../Checkbox';\nimport CardEditorMoreActions from './CardEditorMoreActions';\nimport * as keys from '../../constants/keys';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport CardEditorTask from './CardEditorTask';\nimport CardEditorComment from './CardEditorComment';\nimport './CardEditor.scss';\n\nclass CardEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching:\n        this.props.card.commentIds !== undefined &&\n        this.props.card.commentIds.length > 0,\n      cardTitle: this.props.card.cardTitle,\n      cardDescription: this.props.card.cardDescription,\n      newTask: '',\n      cardTasks: this.props.tasksArray.reduce((tasks, task) => {\n        const { taskId, text, isCompleted } = task;\n        tasks[taskId] = {\n          text,\n          isCompleted\n        };\n        return tasks;\n      }, {}),\n      newComment: '',\n      currentFocus: null,\n      taskIds: this.props.card.taskIds\n    };\n  }\n\n  componentDidMount() {\n    const {\n      card,\n      firebase,\n      fetchCardComments,\n      addComment,\n      deleteComment,\n      updateComment\n    } = this.props;\n\n    const { cardId, commentIds } = card;\n\n    if (commentIds && commentIds.length > 0) {\n      fetchCardComments(cardId).then(() => {\n        this.setState({\n          isFetching: false\n        });\n      });\n    }\n\n    this.commentObserver = firebase.db\n      .collection('comments')\n      .where('cardId', '==', cardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const commentId = change.doc.id;\n          const commentData = change.doc.data();\n          if (change.type === 'added') {\n            addComment({ commentId, commentData });\n          }\n          if (change.type === 'modified') {\n            updateComment({ commentId, commentData });\n          }\n          if (change.type === 'removed') {\n            deleteComment(commentId);\n          }\n        });\n      });\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if ('taskIds' in props.card === false) return null;\n    if (props.card.taskIds.length !== state.taskIds.length) {\n      return {\n        cardTasks: props.tasksArray.reduce((tasks, task) => {\n          const { taskId, text, isCompleted } = task;\n          tasks[taskId] = {\n            text,\n            isCompleted\n          };\n          return tasks;\n        }, {}),\n        taskIds: props.card.taskIds\n      };\n    }\n    return null;\n  }\n\n  updateCardTasks = () => {\n    const { tasksArray } = this.props;\n    this.setState({\n      cardTasks: tasksArray.reduce((tasks, task) => {\n        const { taskId, text, isCompleted } = task;\n        tasks[taskId] = {\n          text,\n          isCompleted\n        };\n        return tasks;\n      }, {})\n    });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  deleteCard = () => {\n    const { card, firebase, handleCardEditorClose } = this.props;\n    const { cardId, listId } = card;\n    firebase.deleteCard({ cardId, listId });\n    handleCardEditorClose();\n  };\n\n  onBlur = e => {\n    const { card, firebase } = this.props;\n    const cardKey = e.target.name;\n    const { [cardKey]: updatedValue } = this.state;\n\n    // When field loses focus, update card if change is detected\n\n    if (updatedValue !== card[cardKey]) {\n      const { cardId } = card;\n      firebase.updateCard(cardId, {\n        [cardKey]: updatedValue\n      });\n      console.log('updated!');\n    }\n\n    this.setState({\n      currentFocus: null\n    });\n  };\n\n  addComment = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { userId, firebase, card } = this.props;\n    const { cardId, boardId } = card;\n    const { newComment: text } = this.state;\n    firebase.addComment({ userId, text, cardId, boardId });\n    this.resetForm('newComment');\n    e.preventDefault();\n  };\n\n  resetForm = key => {\n    this.setState({\n      [key]: ''\n    });\n  };\n\n  addTask = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { userId, firebase, card } = this.props;\n    const { cardId, boardId } = card;\n    const { newTask: text } = this.state;\n    firebase.addTask({ userId, text, cardId, boardId });\n    this.resetForm('newTask');\n    e.preventDefault();\n  };\n\n  onFocus = e => {\n    this.setState({\n      currentFocus: e.target.name\n    });\n  };\n\n  handleModalClick = e => {\n    const { currentFocus } = this.state;\n    if (\n      (currentFocus === 'newComment' &&\n        !this.commentFormEl.contains(e.target)) ||\n      (currentFocus === 'newTask' && !this.newTaskFormEl.contains(e.target))\n    ) {\n      this.setState({\n        currentFocus: null\n      });\n    }\n  };\n\n  handleMoreActions = e => {\n    if (!e.target.matches('a')) return;\n    const { action } = e.target.dataset;\n    switch (action) {\n      case 'delete':\n        this.deleteCard();\n        break;\n    }\n    e.preventDefault(); // prevents page reload\n  };\n\n  onTaskChange = e => {\n    const { cardTasks } = this.state;\n    this.setState({\n      cardTasks: {\n        ...cardTasks,\n        [e.target.name]: {\n          ...cardTasks[e.target.name],\n          text: e.target.value\n        }\n      }\n    });\n  };\n\n  handleCheckboxChange = e => {\n    const taskId = e.target.name;\n    this.toggleTaskCompleted(taskId);\n  };\n\n  toggleTaskCompleted = taskId => {\n    const { isCompleted } = this.state.cardTasks[taskId];\n    this.setState(prevState => ({\n      cardTasks: {\n        ...prevState.cardTasks,\n        [taskId]: {\n          ...prevState.cardTasks[taskId],\n          isCompleted: !prevState.cardTasks[taskId].isCompleted\n        }\n      }\n    }));\n    const { firebase } = this.props;\n    firebase.updateTask(taskId, { isCompleted: !isCompleted });\n  };\n\n  updateTaskText = e => {\n    const taskId = e.target.name;\n    const { cardTasks } = this.state;\n    const { text } = cardTasks[taskId];\n    const { firebase } = this.props;\n    firebase.updateTask(taskId, { text });\n  };\n\n  deleteTask = e => {\n    if (e.target.value !== '' || e.key !== keys.BACKSPACE) return;\n    const { card, firebase } = this.props;\n    const { cardId } = card;\n    const taskId = e.target.name;\n    firebase.deleteTask({ taskId, cardId });\n  };\n\n  moveTask = ({ destination, draggableId, source }) => {\n    if (!destination) return;\n    if (destination.index === source.index) return;\n    const { firebase } = this.props;\n    const { taskIds } = this.state;\n    const updatedTaskIds = [...taskIds];\n    updatedTaskIds.splice(source.index, 1);\n    updatedTaskIds.splice(destination.index, 0, draggableId);\n    this.setState({\n      taskIds: updatedTaskIds\n    });\n    firebase.updateCard(source.droppableId, {\n      taskIds: updatedTaskIds\n    });\n  };\n\n  handleCommentLike = commentId => {\n    const { firebase, userId, commentsById } = this.props;\n    const { likes } = commentsById[commentId];\n    \n    if (likes.indexOf(userId) === -1) {\n      firebase.updateComment(commentId, {\n        likes: firebase.addToArray(userId)\n      });\n    } else {\n      firebase.updateComment(commentId, {\n        likes: firebase.removeFromArray(userId)\n      });\n    }\n  };\n\n  componentWillUnmount() {\n    this.commentObserver();\n  }\n\n  render() {\n    const {\n      handleCardEditorClose,\n      card,\n      userId,\n      commentsArray\n    } = this.props;\n    const { cardId, commentIds } = card;\n    const {\n      cardTitle,\n      cardDescription,\n      newComment,\n      currentFocus,\n      newTask,\n      cardTasks,\n      taskIds,\n      isFetching\n    } = this.state;\n    const hasTasks = taskIds !== undefined && taskIds.length > 0;\n    const hasComments = commentIds !== undefined && commentIds.length > 0;\n    const isNewCommentInvalid = newComment === '';\n    const isNewTaskInvalid = newTask === '';\n    const commentFormIsFocused = currentFocus === 'newComment';\n\n    if (isFetching) return null;\n\n    return (\n      <Modal\n        onModalClose={handleCardEditorClose}\n        className=\"card-editor\"\n        onModalClick={this.handleModalClick}\n        size=\"lg\"\n        id=\"cardEditor\"\n      >\n        <Toolbar className=\"card-editor__toolbar\">\n          <CardEditorMoreActions onMenuClick={this.handleMoreActions} />\n        </Toolbar>\n        <form\n          name=\"editCardForm\"\n          onFocus={this.onFocus}\n          className=\"card-editor__edit-card-form\"\n        >\n          <Textarea\n            className=\"card-editor__textarea--title\"\n            name=\"cardTitle\"\n            value={cardTitle}\n            onChange={this.onChange}\n            required\n            onBlur={this.onBlur}\n            onFocus={this.onFocus}\n          />\n          <div\n            className={`card-editor__section ${\n              currentFocus === 'cardDescription' ? 'is-focused' : ''\n            }`}\n          >\n            <div className=\"card-editor__section-icon\">\n              <Icon name=\"edit-3\" />\n            </div>\n            <Textarea\n              className=\"card-editor__textarea card-editor__textarea--description\"\n              name=\"cardDescription\"\n              value={cardDescription}\n              onChange={this.onChange}\n              placeholder=\"Add a description\"\n              onBlur={this.onBlur}\n              onFocus={this.onFocus}\n            />\n          </div>\n        </form>\n        <div\n          className={`card-editor__section ${\n            currentFocus === 'newTask' ? 'is-focused' : ''\n          }`}\n        >\n          <hr className=\"card-editor__hr\" />\n          {hasTasks && (\n            <DragDropContext onDragEnd={this.moveTask}>\n              <Droppable droppableId={cardId} type={droppableTypes.TASK}>\n                {provided => (\n                  <ul\n                    className=\"card-editor__tasks\"\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                  >\n                    {taskIds.map((taskId, index) => {\n                      return (\n                        <CardEditorTask\n                          taskId={taskId}\n                          index={index}\n                          text={cardTasks[taskId].text}\n                          isCompleted={cardTasks[taskId].isCompleted}\n                          toggleCompleted={this.handleCheckboxChange}\n                          onChange={this.onTaskChange}\n                          onBlur={this.updateTaskText}\n                          onKeyDown={this.deleteTask}\n                          key={taskId}\n                        />\n                      );\n                    })}\n                    {provided.placeholder}\n                  </ul>\n                )}\n              </Droppable>\n            </DragDropContext>\n          )}\n          <div className=\"card-editor__section-icon\">\n            <Icon name=\"check-square\" />\n          </div>\n          <form\n            name=\"newTaskForm\"\n            className={`card-editor__new-task-form ${\n              currentFocus === 'newTask' ? 'is-focused' : ''\n            }`}\n            ref={el => (this.newTaskFormEl = el)}\n            onSubmit={this.addTask}\n          >\n            <Textarea\n              className=\"card-editor__textarea card-editor__textarea--new-task\"\n              name=\"newTask\"\n              value={newTask}\n              onChange={this.onChange}\n              placeholder=\"Add a task\"\n              onFocus={this.onFocus}\n              onKeyDown={this.addTask}\n            />\n            {currentFocus === 'newTask' && (\n              <Button\n                type=\"submit\"\n                color=\"secondary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isNewTaskInvalid}\n                onClick={this.addTask}\n                className=\"card-editor__btn--add-task\"\n              >\n                Add task\n              </Button>\n            )}\n          </form>\n        </div>\n        <div\n          className={`card-editor__section ${\n            commentFormIsFocused ? 'is-focused' : ''\n          }`}\n        >\n          {hasComments && (\n            <div className=\"card-editor__comments\">\n              {commentsArray.map(comment => {\n                const { commentId } = comment;\n                return <CardEditorComment key={commentId} comment={comment} handleLike={this.handleCommentLike} />;\n              })}\n            </div>\n          )}\n          <hr className=\"card-editor__hr\" />\n          <div className=\"card-editor__section-icon\">\n            <Icon name=\"message-circle\" />\n          </div>\n          <form\n            name=\"commentForm\"\n            className={`card-editor__comment-form ${\n              commentFormIsFocused ? 'is-focused' : ''\n            }`}\n            ref={el => (this.commentFormEl = el)}\n            onSubmit={this.addComment}\n          >\n            <Textarea\n              className=\"card-editor__textarea card-editor__textarea--comment\"\n              name=\"newComment\"\n              value={newComment}\n              onChange={this.onChange}\n              placeholder=\"Write a comment...\"\n              onFocus={this.onFocus}\n              onKeyDown={this.addComment}\n            />\n            {commentFormIsFocused && (\n              <Button\n                type=\"submit\"\n                color=\"secondary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isNewCommentInvalid}\n                onClick={this.addComment}\n                name=\"newCommentSubmit\"\n                className=\"card-editor__btn--submit-comment\"\n              >\n                Comment\n              </Button>\n            )}\n          </form>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    userId: currentSelectors.getCurrentUserId(state),\n    tasksArray: taskSelectors.getTasksArray(state, ownProps.card.taskIds),\n    commentsArray: commentSelectors.getCommentsArray(\n      state,\n      ownProps.card.commentIds\n    ),\n    commentsById: commentSelectors.getCommentsById(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCardComments: cardId =>\n      dispatch(commentActions.fetchCardComments(cardId)),\n    addComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.addComment({ commentId, commentData })),\n    deleteComment: commentId =>\n      dispatch(commentActions.deleteComment(commentId)),\n    updateComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.updateComment({ commentId, commentData }))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardEditor)\n);\n","\n/**\n * Checks if two arrays or objects are equal\n * @param {Array|Object} value\n * @param {Array|Object} other\n */\n\n// eslint-disable-next-line import/prefer-default-export\nexport const isEqual = (value, other) => {\n  const type = Object.prototype.toString.call(value);\n\n  // If both objects are not the same type, return false\n  if (type !== Object.prototype.toString.call(other)) return false;\n\n  const typeObj = '[object Object]';\n  const typeArr = '[object Array]';\n  // If items are neither objects nor arrays, return false\n  if (type !== typeObj && type !== typeArr) return false;\n\n  // Compare length of two items\n  const valueLen = type === typeArr ? value.length : Object.keys(value).length;\n  const otherLen = type === typeArr ? other.length : Object.keys(other).length;\n  if (valueLen !== otherLen) return false;\n\n  const compare = (item1, item2) => {\n    const typeFunc = '[object Function]';\n    const itemType = Object.prototype.toString.call(item1);\n    if (itemType !== Object.prototype.toString.call(item2)) return false;\n    if (itemType === typeObj || itemType === typeArr) {\n      return isEqual(item1, item2);\n    }\n    if (itemType === typeFunc) {\n      return item1.toString() === item2.toString();\n    }\n    return item1 === item2;\n  };\n\n  if (type === typeArr) {\n    for (let i = 0; i < valueLen; i++) {\n      if (!compare(value[i], other[i])) return false;\n    }\n  } else {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (compare(value[key], other[key]) === false) return false;\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * Delays callback execution until next browser repaint\n * Best used for `scroll` and `resize` window events\n * @param {Function} callback - The function to debounce\n */\n\nexport const windowDebouncer = callback => {\n  let request;\n\n  return (...args) => {\n    const context = this;\n\n    if (request) {\n      window.cancelAnimationFrame(request);\n    }\n\n    request = window.requestAnimationFrame(() => {\n      callback.apply(context, args);\n    });\n  };\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport * as ROUTES from '../../constants/routes';\nimport Board from './Board';\nimport { Input } from '../Input';\nimport { List } from '../List';\nimport { CardEditor } from '../CardEditor';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { utils } from '../../utils';\nimport './Board.scss';\n\nclass BoardContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: true,\n      isDragging: false,\n      isCardEditorOpen: false,\n      boardTitle: this.props.boardTitle\n    };\n  }\n\n  componentDidMount() {\n    const {\n      current,\n      fetchListsById,\n      fetchCardsById,\n      fetchCardTasks,\n      firebase,\n      updateListsById,\n      updateCardsById,\n      boardId,\n      board,\n      updateListIds,\n      addTask,\n      updateTask,\n      deleteTask,\n      selectBoard\n    } = this.props;\n\n    if (current.boardId !== boardId) {\n      selectBoard(boardId);\n    }\n\n    fetchListsById(boardId);\n    fetchCardsById(boardId);\n    fetchCardTasks(boardId).then(() => {\n      this.setState({\n        isFetching: false\n      });\n    });\n    this.boardObserver = firebase.getBoardDoc(boardId).onSnapshot(snapshot => {\n      const updatedBoard = snapshot.data();\n      if (!utils.isEqual(updatedBoard.listIds, board.listIds)) {\n        updateListIds(boardId, updatedBoard.listIds);\n      }\n    });\n    this.listObserver = firebase.db\n      .collection('lists')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const list = {\n            [change.doc.id]: change.doc.data()\n          };\n          updateListsById(list);\n        });\n      });\n    this.taskObserver = firebase.db\n      .collection('tasks')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const taskId = change.doc.id;\n          const taskData = change.doc.data();\n          if (change.type === 'added') {\n            addTask({ taskId, taskData });\n          }\n          if (change.type === 'modified') {\n            updateTask({ taskId, taskData });\n          }\n          if (change.type === 'removed') {\n            deleteTask(taskId);\n          }\n        });\n      });\n    this.cardObserver = firebase.db\n      .collection('cards')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const card = {\n            [change.doc.id]: {\n              cardId: change.doc.id,\n              ...change.doc.data()\n            }\n          };\n          updateCardsById(card);\n        });\n      });\n    console.log('mounted');\n  }\n\n  componentWillUnmount() {\n    this.boardObserver();\n    this.listObserver();\n    this.cardObserver();\n    this.taskObserver();\n  }\n\n  onDragStart = () => {\n    this.setState({\n      isDragging: true\n    });\n  };\n\n  onDragEnd = ({ destination, draggableId, source, type }) => {\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    const { firebase } = this.props;\n    if (type === droppableTypes.CARD) {\n      const { listsById } = this.props;\n      const isMovedWithinList = source.droppableId === destination.droppableId;\n      const updatedCardIds = [...listsById[destination.droppableId].cardIds];\n      if (isMovedWithinList) {\n        updatedCardIds.splice(source.index, 1);\n        updatedCardIds.splice(destination.index, 0, draggableId);\n        firebase.updateList(source.droppableId, {\n          cardIds: updatedCardIds\n        });\n      } else {\n        updatedCardIds.splice(destination.index, 0, draggableId);\n        firebase.moveCardToList({\n          cardId: draggableId,\n          origListId: source.droppableId,\n          newListId: destination.droppableId,\n          updatedCardIds\n        });\n      }\n    }\n\n    if (type === droppableTypes.LIST) {\n      const { boardsById, current, reorderLists } = this.props;\n      const { boardId } = current;\n      const updatedListIds = [...boardsById[boardId].listIds];\n      updatedListIds.splice(source.index, 1);\n      updatedListIds.splice(destination.index, 0, draggableId);\n      firebase.updateBoard(boardId, {\n        listIds: updatedListIds\n      });\n      reorderLists(boardId, updatedListIds);\n    }\n\n    this.setState({\n      isDragging: false\n    });\n  };\n\n  toggleCardEditor = () => {\n    this.setState(prevState => ({\n      isCardEditorOpen: !prevState.isCardEditorOpen\n    }));\n  };\n\n  handleCardClick = cardId => {\n    this.props.selectCard(cardId);\n    this.toggleCardEditor();\n  };\n\n  onTitleChange = e => {\n    this.setState({\n      boardTitle: e.target.value\n    });\n  };\n\n  onTitleBlur = e => {\n    const { boardTitle, boardId, firebase } = this.props;\n    const { boardTitle: newBoardTitle } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newBoardTitle !== boardTitle) {\n      firebase.updateBoard(boardId, {\n        boardTitle: newBoardTitle\n      });\n      console.log('updated!');\n    }\n  };\n\n  render() {\n    const { isFetching, isCardEditorOpen } = this.state;\n    const { current, listsArray, cardsById, boardId, board } = this.props;\n    if (isFetching) return null;\n    const { cardId } = current;\n    const { boardTitle } = board;\n    const lists = listsArray.map((list, listIndex) => {\n      const { listId, listTitle, cardIds } = list;\n      return (\n        <List\n          listId={listId}\n          key={listId}\n          listIndex={listIndex}\n          listTitle={listTitle}\n          cardIds={cardIds}\n          isFetchingCards={isFetching}\n          isDragging={this.state.isDragging}\n          onCardClick={this.handleCardClick}\n          boardId={boardId}\n        />\n      );\n    });\n\n    return (\n      <main className=\"board-container\">\n        <Input\n          className=\"board__input--title\"\n          name=\"boardTitle\"\n          type=\"text\"\n          value={boardTitle}\n          onChange={this.onTitleChange}\n          required\n          hideLabel\n          onBlur={this.onTitleBlur}\n        />\n        <DragDropContext\n          onDragEnd={this.onDragEnd}\n          onDragStart={this.onDragStart}\n        >\n          <Board boardId={boardId}>{lists}</Board>\n        </DragDropContext>\n        {isCardEditorOpen && (\n          <CardEditor\n            card={cardsById[cardId]}\n            handleCardEditorClose={this.toggleCardEditor}\n          />\n        )}\n      </main>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    boardsById: boardSelectors.getBoardsById(state),\n    current: currentSelectors.getCurrent(state),\n    listsById: listSelectors.getListsById(state),\n    listsArray: listSelectors.getListsArray(state),\n    cardsById: cardSelectors.getCardsById(state),\n    board: boardSelectors.getBoard(state, ownProps.boardId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId)),\n    selectCard: cardId => dispatch(currentActions.selectCard(cardId)),\n    fetchListsById: boardId => dispatch(listActions.fetchListsById(boardId)),\n    updateListsById: list => dispatch(listActions.updateListsById(list)),\n    fetchCardsById: boardId => dispatch(cardActions.fetchCardsById(boardId)),\n    fetchCardTasks: boardId => dispatch(taskActions.fetchCardTasks(boardId)),\n    updateCardsById: card => dispatch(cardActions.updateCardsById(card)),\n    reorderLists: (boardId, listIds) =>\n      dispatch(boardActions.reorderLists(boardId, listIds)),\n    updateListIds: (boardId, listIds) =>\n      dispatch(boardActions.updateListIds(boardId, listIds)),\n    addTask: ({ taskId, taskData }) =>\n      dispatch(taskActions.addTask({ taskId, taskData })),\n    deleteTask: taskId => dispatch(taskActions.deleteTask(taskId)),\n    updateTask: ({ taskId, taskData }) =>\n      dispatch(taskActions.updateTask({ taskId, taskData }))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardContainer)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { withAuthorization } from '../Session';\nimport * as ROUTES from '../../constants/routes';\nimport { userActions, userSelectors } from '../../ducks/users';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { BoardGridContainer } from '../BoardGrid';\nimport { BoardComposer } from '../BoardComposer';\nimport { BoardContainer } from '../Board';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport './Home.scss';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isBoardComposerOpen: false,\n      isFetching: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      firebase,\n      selectUser,\n      fetchUsersById,\n      fetchBoardsById\n    } = this.props;\n    const userId = firebase.auth.currentUser.uid;\n    selectUser(userId);\n    console.log('mounted home');\n    fetchUsersById()\n      .then(() => fetchBoardsById(userId))\n      .then(() =>\n        this.setState({\n          isFetching: false\n        })\n      );\n  }\n\n  toggleBoardComposer = () => {\n    this.setState(prevState => ({\n      isBoardComposerOpen: !prevState.isBoardComposerOpen\n    }));\n  };\n\n  createBoard = boardTitle => {\n    const { userId, firebase } = this.props;\n    firebase.addBoard({ userId, boardTitle });\n  };\n\n  render() {\n    const { isBoardComposerOpen, isFetching } = this.state;\n    if (isFetching) return null;\n    const { userId } = this.props;\n    return (\n      <>\n        {isBoardComposerOpen && (\n          <BoardComposer\n            onClose={this.toggleBoardComposer}\n            handleSubmit={this.createBoard}\n          />\n        )}\n        <Switch>\n          <Route\n            exact\n            path={ROUTES.HOME}\n            render={() => (\n              <main className=\"main\">\n                <h1>Home</h1>\n                {userId && (\n                  <BoardGridContainer\n                    userId={userId}\n                    openBoardComposer={this.toggleBoardComposer}\n                  />\n                )}\n              </main>\n            )}\n          />\n          <Route\n            path={ROUTES.BOARD}\n            render={props => (\n              <BoardContainer\n                userId={userId}\n                boardId={props.match.params.id}\n                {...props}\n              />\n            )}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentBoardId: currentSelectors.getCurrentBoardId(state),\n    userId: currentSelectors.getCurrentUserId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsersById: () => dispatch(userActions.fetchUsersById()),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    selectUser: userId => dispatch(currentActions.selectUser(userId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(HomePage)\n);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .passwordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n    const isInvalid = passwordOne === '' || passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"passwordOne\"\n          title=\"New Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          title=\"Confirm New Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Change My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React from 'react';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport { PasswordChangeForm } from '../PasswordChange';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport './Account.scss';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <main className=\"account\">\n        <h1>Account: {authUser.email}</h1>\n        <section className=\"account__section\">\n        <h2>Forgot your password?</h2>\n          <PasswordForgetForm />\n        </section>\n        <section className=\"account__section\">\n        <h2>Change your password.</h2>\n          <PasswordChangeForm />\n        </section>\n      </main>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(AccountPage);\n","import React, { Component } from 'react';\nimport { Navbar } from '../Navbar';\nimport './Header.scss';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <Navbar />\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport { Navbar } from '../Navbar';\nimport * as ROUTES from '../../constants/routes';\nimport { LandingPage } from '../Landing';\nimport { SignUpPage } from '../SignUp';\nimport { SignInPage } from '../SignIn';\nimport { PasswordForgetPage } from '../PasswordForget';\nimport { HomePage } from '../Home';\nimport { AccountPage } from '../Account';\nimport { AdminPage } from '../Admin';\nimport { withAuthentication } from '../Session';\nimport { Header } from '../Header';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Header />\n        <Switch>\n          <Route exact path={ROUTES.LANDING} component={LandingPage} />\n          <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n          <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n          <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n          <Route path={ROUTES.HOME} render={props => <HomePage {...props} />} />\n          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n          <Route path={ROUTES.ADMIN} component={AdminPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { boardsById } from '../ducks/boards';\nimport { cardsById } from '../ducks/cards';\nimport { listsById } from '../ducks/lists';\nimport { usersById } from '../ducks/users';\nimport { current } from '../ducks/current';\nimport { tasksById } from '../ducks/tasks';\nimport { commentsById } from '../ducks/comments';\n\nexport default combineReducers({\n  boardsById,\n  cardsById,\n  listsById,\n  usersById,\n  current,\n  tasksById,\n  commentsById\n});\n","import * as types from './types';\n\nconst current = (state = {}, action) => {\n  switch (action.type) {\n    case types.SELECT_USER: {\n      const { userId } = action;\n      return {\n        ...state,\n        userId\n      };\n    }\n    case types.SELECT_BOARD: {\n      const { boardId } = action;\n      return {\n        ...state,\n        boardId\n      };\n    }\n    case types.SELECT_LIST: {\n      const { listId } = action;\n      return {\n        ...state,\n        listId\n      };\n    }\n    case types.SELECT_CARD: {\n      const { cardId } = action;\n      return {\n        ...state,\n        cardId\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport { current };\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\n\nexport default history;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport 'normalize.css';\nimport './index.scss';\nimport { App } from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { FirebaseContext } from './components/Firebase';\nimport reducers from './store/reducers';\nimport firebase from './store/firebase';\nimport history from './store/history';\n\nconst store = createStore(reducers, {}, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <FirebaseContext.Provider value={firebase}>\n      <Router basename={process.env.PUBLIC_URL} history={history}>\n        <App />\n      </Router>\n    </FirebaseContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}