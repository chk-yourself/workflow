{"version":3,"sources":["components/Firebase/context.js","components/Firebase/Firebase.js","constants/routes.js","components/SignOut/SignOutButton.js","components/Navigation/Navigation.js","components/Input/Input.js","components/SignUp/SignUpForm.js","components/SignUp/SignUp.js","components/SignUp/index.js","components/SignIn/SignInForm.js","components/PasswordForget/PasswordForgetForm.js","components/PasswordForget/PasswordForget.js","components/PasswordForget/index.js","components/SignIn/SignIn.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","store/firebase.js","ducks/user/actions.js","ducks/user/types.js","ducks/user/selectors.js","ducks/current/actions.js","ducks/current/types.js","ducks/current/selectors.js","components/BoardGrid/BoardGrid.js","components/BoardGrid/BoardTile.js","ducks/boards/actions.js","ducks/boards/types.js","ducks/boards/selectors.js","ducks/boards/reducers.js","components/BoardGrid/BoardGridContainer.js","components/Board/Board.js","ducks/lists/actions.js","ducks/lists/types.js","ducks/lists/selectors.js","ducks/lists/reducers.js","components/FeatherIcon/FeatherIcon.js","components/Card/Card.js","ducks/cards/selectors.js","ducks/cards/actions.js","ducks/cards/types.js","ducks/cards/reducers.js","components/Textarea/Textarea.js","components/Card/CardComposer.js","components/List/List.js","components/List/ListComposer.js","components/List/ListContainer.js","components/Board/BoardContainer.js","components/Modal/Modal.js","components/Board/BoardComposer.js","components/Home/Home.js","components/PasswordChange/PasswordChangeForm.js","components/Account/Account.js","components/App/App.js","serviceWorker.js","store/reducers.js","ducks/user/reducers.js","ducks/current/reducers.js","store/history.js","index.js","assets/feather/feather-sprite.svg"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","newPassword","currentUser","updatePassword","addUser","_ref","userId","name","username","_ref$boardIds","boardIds","db","collection","doc","set","updateUser","newValue","arguments","length","undefined","update","updateBoard","boardId","updateList","listId","updateCard","cardId","getUserDoc","getBoardDoc","getTimestamp","firestore","FieldValue","serverTimestamp","addToArray","value","arrayUnion","addBoard","_ref2","boardTitle","add","title","createdAt","lastModifiedAt","listIds","authorId","memberIds","then","ref","id","addList","_ref3","listTitle","cardIds","addCard","_ref4","cardTitle","initializeApp","HOME","type","onClick","NavigationAuth","className","Link","to","ROUTES","SignOut_SignOutButton","NavigationNonAuth","Navigation","authUser","Navigation_NavigationAuth","Navigation_NavigationNonAuth","Input","hideLabel","htmlFor","onChange","placeholder","required","isRequired","INITIAL_STATE","passwordOne","passwordTwo","error","SignUpForm","possibleConstructorReturn","getPrototypeOf","call","onSubmit","e","_this$state","state","user","uid","setState","objectSpread","history","push","catch","preventDefault","defineProperty","target","_this$state2","isInvalid","components_Input_Input","disabled","message","compose","withRouter","SignUpPage","SignUp_SignUpForm","SignUpLink","SignInForm","PasswordForgetForm","PasswordForgetPage","PasswordForget_PasswordForgetForm","PasswordForgetLink","SignInPage","SignIn_SignInForm","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","inherits","createClass","key","_this2","listener","onAuthStateChanged","Session_context","Provider","withAuthorization","condition","WithAuthorization","updateUserBoards","getUserData","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","get","data","sent","loadUserData","t0","console","log","stop","_x","apply","selectBoard","selectList","selectCard","types","getCurrentBoardId","current","getCurrentListId","getCurrentCardId","getCurrent","BoardGrid","children","BoardTile","concat","loadBoardsById","boardsById","fetchBoardsById","where","snapshot","forEach","updateBoardsById","board","getBoardsById","getBoardsArray","keys","map","action","BoardGridContainer","onSnapshot","querySnapshot","docChanges","change","_this$props$user","_this$props","boardsArray","boardTiles","BoardGrid_BoardTile","BoardGrid_BoardGrid","openBoardComposer","connect","userSelectors","boardSelectors","userActions","boardActions","currentActions","Board","loadListsById","listsById","fetchListsById","updateListsById","list","getListsById","getListsArray","FeatherIcon","addClass","trim","xmlns","xmlnsXlink","viewBox","width","height","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","xlinkHref","featherIcons","Card","FeatherIcon_FeatherIcon","getCardsById","cardsById","getCardsArray","loadCardsById","fetchCardsById","updateCardsById","card","Textarea","CardComposer","resetForm","onFocus","isActive","onBlur","components_Textarea_Textarea","Fragment","currentSelectors","List","ListComposer","ListContainer","isFetching","_this$props$current","cards","Card_Card_Card","List_List_List","Card_CardComposer","listSelectors","listsArray","cardSelectors","listActions","cardActions","BoardContainer","lists","List_ListContainer","components_Board_Board","List_ListComposer","Modal","onModalClose","BoardComposer","handleSubmit","onClose","components_Modal_Modal","HomePage","toggleBoardComposer","prevState","showCreateBoardForm","createBoard","BoardComposer_BoardComposer","Switch","Route","exact","path","render","BoardGrid_BoardGridContainer","Board_BoardContainer","currentBoardId","PasswordChangeForm","PasswordChange_PasswordChangeForm","components_Navigation_Navigation","classes","component","LandingPage","AccountPage","AdminPage","Boolean","window","location","hostname","match","combineReducers","toConsumableArray","createBrowserHistory","basename","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","es","context","Router","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.9470335e.chunk.js","sourcesContent":["import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import firebase from 'firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\nclass Firebase {\n  constructor() {\n    firebase.initializeApp(config);\n    this.auth = firebase.auth();\n    this.db = firebase.firestore();\n  }\n\n  // Auth API\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doPasswordUpdate = newPassword =>\n    this.auth.currentUser.updatePassword(newPassword);\n\n  // User API\n\n  addUser = ({ userId, name, username, email, boardIds = [] }) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .set({ userId, name, username, email, boardIds });\n\n  updateUser = (userId, newValue = {}) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .update(newValue);\n\n  updateBoard = (boardId, newValue = {}) =>\n    this.db\n      .collection('boards')\n      .doc(boardId)\n      .update(newValue);\n\n  updateList = (listId, newValue = {}) =>\n    this.db\n      .collection('lists')\n      .doc(listId)\n      .update(newValue);\n\n  updateCard = (cardId, newValue = {}) =>\n    this.db\n      .collection('cards')\n      .doc(cardId)\n      .update(newValue);\n\n  getUserDoc = userId => this.db.collection('users').doc(userId);\n\n  getBoardDoc = boardId => this.db.collection('boards').doc(boardId);\n\n  getTimestamp = () => firebase.firestore.FieldValue.serverTimestamp();\n\n  addToArray = value => firebase.firestore.FieldValue.arrayUnion(value);\n\n  addBoard = ({ userId, boardTitle }) => {\n    this.db\n      .collection('boards')\n      .add({\n        title: boardTitle,\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        listIds: [],\n        authorId: userId,\n        memberIds: [userId]\n      })\n      .then(ref => {\n        this.updateUser(userId, {\n          boardIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  addList = ({ boardId, listTitle }) => {\n    this.db\n      .collection('lists')\n      .add({\n        title: listTitle,\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        cardIds: [],\n        boardId\n      })\n      .then(ref => {\n        this.updateBoard(boardId, {\n          listIds: this.addToArray(ref.id),\n          lastModifiedAt: this.getTimestamp()\n        });\n      });\n  };\n\n  addCard = ({ boardId, listId, cardTitle }) => {\n    this.db\n      .collection('cards')\n      .add({\n        title: cardTitle,\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        listId,\n        boardId\n      })\n      .then(ref => {\n        this.updateList(listId, {\n          cardIds: this.addToArray(ref.id),\n          lastModifiedAt: this.getTimestamp()\n        });\n      });\n  };\n}\n\nexport default Firebase;\n","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const BOARD = '/home/board/:id';\n","import React from 'react';\nimport {withFirebase} from '../Firebase';\n\nconst SignOutButton = ({firebase}) => (\n  <button type=\"button\" onClick={firebase.doSignOut}>Sign Out</button>\n);\n\nexport default withFirebase(SignOutButton);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { SignOutButton } from '../SignOut';\nimport './Navigation.scss';\n\nconst NavigationAuth = () => (\n  <ul className=\"navbar\">\n    <li>\n      <Link to={ROUTES.LANDING}>Landing</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.HOME}>Home</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ADMIN}>Admin</Link>\n    </li>\n    <li>\n      <SignOutButton />\n    </li>\n  </ul>\n);\n\nconst NavigationNonAuth = () => (\n  <ul className=\"navbar\">\n    <li>\n      <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.LANDING}>Landing</Link>\n    </li>\n  </ul>\n);\n\nconst Navigation = ({ authUser }) => (\n  <nav>{authUser ? <NavigationAuth /> : <NavigationNonAuth />}</nav>\n);\n\nexport default Navigation;\n","import React from 'react';\nimport './Input.scss';\n\nconst Input = props => {\n  return (\n    <div className=\"input__group\">\n      {!props.hideLabel && (\n        <label htmlFor={props.name} className=\"input__label\">\n          {props.title}\n        </label>\n      )}\n      <input\n        className=\"input\"\n        id={props.name}\n        name={props.name}\n        type={props.type}\n        value={props.value}\n        onChange={props.onChange}\n        placeholder={props.placeholder}\n        required={props.isRequired}\n      />\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\n\nconst INITIAL_STATE = {\n  username: '',\n  name: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { username, email, name, passwordOne } = this.state;\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        const userId = authUser.user.uid;\n        return this.props.firebase.addUser({\n          userId,\n          name,\n          username,\n          email\n        });\n      })\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const {\n      username,\n      name,\n      email,\n      passwordOne,\n      passwordTwo,\n      error\n    } = this.state;\n    const isInvalid =\n      passwordOne === '' ||\n      passwordTwo === '' ||\n      email === '' ||\n      username === '' ||\n      passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <Input\n          name=\"name\"\n          title=\"Full Name\"\n          value={name}\n          onChange={this.onChange}\n          type=\"text\"\n        />\n        <Input\n          name=\"username\"\n          title=\"Username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n        />\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n        />\n        <Input\n          name=\"passwordOne\"\n          title=\"Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          title=\"Confirm Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign Up\n        </button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignUpForm);\n","import React from 'react';\nimport SignUpForm from './SignUpForm';\n\nconst SignUpPage = () => (\n  <main className=\"app__main\">\n    <h1>Sign Up</h1>\n    <SignUpForm />\n  </main>\n);\n\nexport default SignUpPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nexport { default as SignUpPage } from './SignUp';\nexport { default as SignUpForm } from './SignUpForm';\nexport { SignUpLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose, renderComponent } from 'recompose';\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email, password } = this.state;\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n    const isInvalid = password === '' || email === '';\n    return (\n      <form onSubmit={this.onSubmit}>\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n        />\n        <Input\n          name=\"password\"\n          title=\"Password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign In\n        </button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignInForm);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null\n};\n\nclass PasswordForgetForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, error } = this.state;\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <Input\n          name=\"email\"\n          title=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordForgetForm);\n","import React from 'react';\nimport PasswordForgetForm from './PasswordForgetForm';\n\nconst PasswordForgetPage = () => (\n  <main className=\"app__main\">\n    <h1>Forgot your password?</h1>\n    <PasswordForgetForm />\n  </main>\n);\n\nexport default PasswordForgetPage;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport {default as PasswordForgetForm} from './PasswordForgetForm';\nexport {default as PasswordForgetPage} from './PasswordForget';\nexport {PasswordForgetLink};","import React from 'react';\nimport SignInForm from './SignInForm';\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\n\nconst SignInPage = () => (\n  <main className=\"app__main\">\n    <h1>Sign In</h1>\n    <SignInForm />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </main>\n);\n\nexport default SignInPage;\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        authUser: null\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        authUser\n          ? this.setState({ authUser })\n          : this.setState({ authUser: null });\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport AuthUserContext from './context';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          this.props.history.push(ROUTES.SIGN_IN);\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n  return compose(\n    withRouter,\n    withFirebase\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import { Firebase } from '../components/Firebase';\n\nconst firebase = new Firebase();\n\nexport default firebase;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const updateUserBoards = boardIds => {\n  return {\n    type: types.UPDATE_USER_BOARDS,\n    boardIds\n  };\n};\n\nexport const getUserData = userId => {\n  return async dispatch => {\n    try {\n      const user = await firebase\n        .getUserDoc(userId)\n        .get()\n        .then(doc => doc.data());\n      dispatch(loadUserData(user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const loadUserData = user => {\n  return {\n    type: types.LOAD_USER_DATA,\n    user\n  };\n};\n","export const UPDATE_USER_BOARDS = 'ADD_USER_BOARD';\nexport const LOAD_USER_DATA = 'LOAD_USER_DATA';\nexport const LOAD_USER_BOARDS = 'LOAD_USER_BOARDS';\n","export const getUserData = state => {\n  return state.user;\n};\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const selectBoard = boardId => {\n  return {\n    type: types.SELECT_BOARD,\n    boardId\n  };\n};\n\nexport const selectList = listId => {\n  return {\n    type: types.SELECT_LIST,\n    listId\n  };\n};\n\nexport const selectCard = cardId => {\n  return {\n    types: types.SELECT_CARD,\n    cardId\n  };\n};\n","export const SELECT_BOARD = 'SELECT_BOARD';\nexport const SELECT_LIST = 'SELECT_LIST';\nexport const SELECT_CARD = 'SELECT_CARD';\n","export const getCurrentBoardId = state => {\n  return state.current.boardId;\n};\n\nexport const getCurrentListId = state => {\n  return state.current.listId;\n};\n\nexport const getCurrentCardId = state => {\n  return state.current.cardId;\n};\n\nexport const getCurrent = state => {\n  return state.current;\n};\n","import React, { Component } from 'react';\n\nexport default class BoardGrid extends Component {\n  render() {\n    return <ul className=\"board-grid\">{this.props.children}</ul>;\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BoardTile = props => {\n  return (\n    <li className=\"board-tile\">\n      <Link\n        className=\"board-tile__link\"\n        to={`/home/board/${props.boardId}`}\n        onClick={props.onClick}\n      >\n        {props.title}\n      </Link>\n    </li>\n  );\n};\n\nexport default BoardTile;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadBoardsById = boardsById => {\n  return {\n    type: types.LOAD_BOARDS_BY_ID,\n    boardsById\n  };\n};\n\nexport const fetchBoardsById = userId => {\n  return async dispatch => {\n    try {\n      const boardsById = await firebase.db\n        .collection('boards')\n        .where('memberIds', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const boardsById = {};\n          snapshot.forEach(doc => {\n            boardsById[doc.id] = doc.data();\n          });\n          return boardsById;\n        });\n      dispatch(loadBoardsById(boardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateBoardsById = board => {\n  return {\n    type: types.UPDATE_BOARDS_BY_ID,\n    board\n  };\n};\n","export const LOAD_BOARDS_BY_ID = 'LOAD_BOARDS_BY_ID';\nexport const UPDATE_BOARDS_BY_ID = 'UPDATE_BOARDS_BY_ID';\n","export const getBoardsById = state => {\n  return state.boardsById;\n};\n\nexport const getBoardsArray = state => {\n  const { boardsById } = state;\n  return Object.keys(boardsById).map(boardId => {\n    return {\n      boardId,\n      ...boardsById[boardId]\n    };\n  });\n};\n","import * as types from './types';\n\nconst boardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_BOARDS_BY_ID:\n      const { boardsById } = action;\n      return {\n        ...state,\n        ...boardsById\n      };\n    case types.UPDATE_BOARDS_BY_ID:\n      const { board } = action;\n      return {\n        ...state,\n        ...board\n      };\n    default:\n      return state;\n  }\n};\n\nexport default boardsById;\n","import React, { Component } from 'react';\nimport BoardGrid from './BoardGrid';\nimport BoardTile from './BoardTile';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\n\nclass BoardGridContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const { userId } = this.props.user;\n    this.props.fetchBoardsById(userId);\n    this.listener = this.props.firebase.db\n      .collection('boards')\n      .where('memberIds', 'array-contains', userId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const board = {\n            [change.doc.id]: change.doc.data()\n          };\n          this.props.updateBoardsById(board);\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  }\n\n  render() {\n    const { boardIds, userId } = this.props.user;\n    const { boardsArray, selectBoard } = this.props;\n    const boardTiles = boardsArray.map(board => {\n      const { title, boardId } = board;\n      return (\n        <BoardTile\n          key={boardId}\n          title={title}\n          boardId={boardId}\n          onClick={() => selectBoard(boardId)}\n        />\n      );\n    });\n    return (\n      <section>\n        <BoardGrid>\n          {boardTiles}\n          <button type=\"button\" onClick={this.props.openBoardComposer}>\n            Add Board\n          </button>\n        </BoardGrid>\n      </section>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => dispatch(userActions.getUserData(userId)),\n    updateUserBoards: boardIds =>\n      dispatch(userActions.updateUserBoards(boardIds)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardGridContainer)\n);\n","import React from 'react';\n\nconst Board = props => {\n  return <div className=\"board\">{props.children}</div>;\n};\n\nexport default Board;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadListsById = listsById => {\n  return {\n    type: types.LOAD_LISTS_BY_ID,\n    listsById\n  };\n};\n\nexport const fetchListsById = boardId => {\n  return async dispatch => {\n    try {\n      const listsById = await firebase.db\n        .collection('lists')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const listsById = {};\n          snapshot.forEach(doc => {\n            listsById[doc.id] = doc.data();\n          });\n          return listsById;\n        });\n      dispatch(loadListsById(listsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateListsById = list => {\n  return {\n    type: types.UPDATE_LISTS_BY_ID,\n    list\n  };\n};\n","export const LOAD_LISTS_BY_ID = 'LOAD_LISTS_BY_ID';\nexport const FETCH_LISTS_BY_ID = 'FETCH_LISTS_BY_ID';\nexport const UPDATE_LISTS_BY_ID = 'UPDATE_LISTS_BY_ID';\n","export const getListsById = state => {\n  return state.listsById;\n};\n\nexport const getListsArray = state => {\n  const { listsById } = state;\n  return Object.keys(listsById).map(listId => {\n    return {\n      listId,\n      ...listsById[listId]\n    };\n  });\n};\n","import * as types from './types';\n\nconst listsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_LISTS_BY_ID:\n      return {\n        ...state,\n        ...action.listsById\n      };\n    case types.UPDATE_LISTS_BY_ID:\n      return {\n        ...state,\n        ...action.list\n      };\n    default:\n      return state;\n  }\n};\n\nexport default listsById;\n","import React from 'react';\nimport featherIcons from '../../assets/feather/feather-sprite.svg';\n\nfunction FeatherIcon(props) {\n  return (\n    <svg\n      className={`feather feather-${props.name} ${props.addClass || ''}`.trim()}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n      height=\"24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <use xlinkHref={`${featherIcons}#${props.name}`} />\n    </svg>\n  );\n}\n\nexport default FeatherIcon;\n","import React, { Component } from 'react';\nimport './Card.scss';\nimport {FeatherIcon} from '../FeatherIcon';\n\nexport default class Card extends Component {\n  render() {\n    return (\n      <div className=\"card\" onClick={this.props.onClick}>\n        <div className=\"card__header\">\n        <button className=\"card__btn--more-actions\" type=\"button\">\n          <FeatherIcon name=\"more-horizontal\" />\n          </button>\n          <div className=\"card__tags\" />\n          <h3 className=\"card__title\">{this.props.title}</h3>\n        </div>\n        <div className=\"card__footer\">\n          <div className=\"card__labels\" />\n        </div>\n      </div>\n    );\n  }\n}\n","export const getCardsById = state => {\n  return state.cardsById;\n};\n\nexport const getCardsArray = state => {\n  const { cardsById } = state;\n  return Object.keys(cardsById).map(cardId => {\n    return {\n      cardId,\n      ...cardsById[cardId]\n    };\n  });\n};\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadCardsById = cardsById => {\n  return {\n    type: types.LOAD_CARDS_BY_ID,\n    cardsById\n  };\n};\n\nexport const fetchCardsById = boardId => {\n  return async dispatch => {\n    try {\n      const cardsById = await firebase.db\n        .collection('cards')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const cardsById = {};\n          snapshot.forEach(doc => {\n            cardsById[doc.id] = doc.data();\n          });\n          return cardsById;\n        });\n      dispatch(loadCardsById(cardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateCardsById = card => {\n  return {\n    type: types.UPDATE_CARDS_BY_ID,\n    card\n  };\n};\n","export const ADD_CARD = 'ADD_CARD';\nexport const SET_CARD_DUE_DATE = 'SET_CARD_DUE_DATE';\nexport const ADD_CARD_SUBTASK = 'ADD_CARD_SUBTASK';\nexport const REMOVE_CARD_SUBTASK = 'REMOVE_CARD_SUBTASK';\nexport const CHANGE_CARD_DESCRIPTION = 'CHANGE_CARD_DESCRIPTION';\nexport const SET_CARD_COLOR = 'SET_CARD_COLOR';\nexport const DELETE_CARD = 'DELETE_CARD';\nexport const MOVE_CARD = 'MOVE_CARD';\nexport const LOAD_CARDS_BY_ID = 'LOAD_CARDS_BY_ID';\nexport const UPDATE_CARDS_BY_ID = 'UPDATE_CARDS_BY_ID';\n","import * as types from './types';\n\nconst cardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_CARDS_BY_ID:\n      const { cardsById } = action;\n      return {\n        ...state,\n        ...cardsById\n      };\n    case types.UPDATE_CARDS_BY_ID:\n      const { card } = action;\n      return {\n        ...state,\n        ...card\n      };\n    default:\n      return state;\n  }\n};\n\nexport default cardsById;\n","import React from 'react';\nimport './Textarea.scss';\n\nconst Textarea = props => {\n  return (\n    <textarea\n      className=\"textarea\"\n      id={props.name}\n      name={props.name}\n      value={props.value}\n      onChange={props.onChange}\n      placeholder={props.placeholder}\n      required={props.isRequired}\n    />\n  );\n};\n\nexport default Textarea;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FeatherIcon } from '../FeatherIcon';\nimport { withAuthorization } from '../Session';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Textarea } from '../Textarea';\n\nclass CardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cardTitle: '',\n      isActive: false\n    };\n  }\n\n  resetForm = () => {\n    this.setState({ cardTitle: '' });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { cardTitle } = this.state;\n    const { boardId } = this.props.current;\n    const { listId } = this.props;\n    this.props.firebase.addCard({ boardId, listId, cardTitle });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = e => {\n    if (e.target.value !== '') return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const { cardTitle, isActive } = this.state;\n    return (\n      <div\n        className={`card-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"card-composer__form\" onSubmit={this.onSubmit}>\n          <Textarea\n            onChange={this.onChange}\n            value={cardTitle}\n            placeholder={isActive ? 'Enter card title...' : 'Add a card'}\n            isRequired={true}\n            name=\"cardTitle\"\n          />\n          {isActive && (\n            <>\n              <button className=\"card-composer__btn--add\" type=\"submit\">\n                Add Card\n              </button>\n              <button className=\"card-composer__btn--close\" type=\"button\">\n                <FeatherIcon name=\"x\" />\n              </button>\n            </>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardComposer)\n);\n","import React, { Component } from 'react';\nimport './List.scss';\nimport { CardComposer } from '../Card';\n\nexport default class List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <section className=\"list\">\n        <header className=\"list__header\">\n          <h2 className=\"list__title\">{this.props.title}</h2>\n        </header>\n        <div className=\"list__content\">\n        {this.props.children}\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input } from '../Input';\nimport { FeatherIcon } from '../FeatherIcon';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport './List.scss';\n\nclass ListComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listTitle: '',\n      isActive: false\n    };\n  }\n\n  resetForm = () => {\n    this.setState({ listTitle: '' });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { listTitle } = this.state;\n    const { boardId } = this.props.current;\n    this.props.firebase.addList({ boardId, listTitle });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = e => {\n    if (e.target.value === '') {\n      this.setState({\n        isActive: false\n      });\n    }\n  };\n\n  render() {\n    const { listTitle, isActive } = this.state;\n    return (\n      <div\n        className={`list-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"list-composer__form\" onSubmit={this.onSubmit}>\n          <Input\n            onChange={this.onChange}\n            value={listTitle}\n            placeholder={isActive ? 'Enter list title...' : 'Add a list'}\n            required=\"true\"\n            name=\"listTitle\"\n            hideLabel=\"true\"\n          />\n          {isActive && (\n            <>\n              <button className=\"list-composer__btn--add\" type=\"submit\">\n                Add List\n              </button>\n              <button className=\"list-composer__btn--close\" type=\"button\">\n                <FeatherIcon name=\"x\" />\n              </button>\n            </>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => dispatch(userActions.getUserData(userId)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListComposer)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport List from './List';\nimport { Card, CardComposer } from '../Card';\n\nclass ListContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: true\n    };\n  }\n\n  componentDidMount() {\n    const { boardId, listId, cardId } = this.props.current;\n    this.props.fetchCardsById(boardId).then(() => {\n      this.setState({ isFetching: false });\n    });\n    this.listener = this.props.firebase.db\n      .collection('cards')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const card = {\n            [change.doc.id]: change.doc.data()\n          };\n          this.props.updateCardsById(card);\n        });\n      });\n    console.log('mounted');\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  }\n\n  render() {\n    if (this.state.isFetching) return null;\n    const { cardIds, cardsById, listId, title } = this.props;\n    const cards = cardIds.map(cardId => {\n      const card = cardsById[cardId];\n      const cardTitle = card.title;\n      return <Card key={cardId} title={cardTitle} />;\n    });\n\n    return (\n      <List title={title}>\n        {cards}\n        <CardComposer listId={listId} />\n      </List>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    current: currentSelectors.getCurrent(state),\n    listsById: listSelectors.getListsById(state),\n    listsArray: listSelectors.getListsArray(state),\n    cardsById: cardSelectors.getCardsById(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => dispatch(userActions.getUserData(userId)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId)),\n    fetchListsById: boardId => dispatch(listActions.fetchListsById(boardId)),\n    updateListsById: list => dispatch(listActions.updateListsById(list)),\n    fetchCardsById: boardId => dispatch(cardActions.fetchCardsById(boardId)),\n    updateCardsById: listId => dispatch(cardActions.updateCardsById(listId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListContainer)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport Board from './Board';\nimport { ListContainer, ListComposer } from '../List';\nimport './Board.scss';\n\nclass BoardContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const { boardId } = this.props.current;\n    this.props.fetchListsById(boardId);\n    this.listener = this.props.firebase.db\n      .collection('lists')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const list = {\n            [change.doc.id]: change.doc.data()\n          };\n          this.props.updateListsById(list);\n        });\n      });\n    console.log('mounted');\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  }\n\n  render() {\n    const { boardId } = this.props.current;\n    const { boardsById, listsArray } = this.props;\n    const board = boardsById[boardId];\n    const boardTitle = board.title;\n    const lists = listsArray.map(list => {\n      const { listId, title, cardIds } = list;\n      return (\n        <ListContainer\n          listId={listId}\n          key={listId}\n          title={title}\n          cardIds={cardIds}\n        />\n      );\n    });\n\n    return (\n      <main className=\"board-container\">\n        <h1>{boardTitle}</h1>\n        <Board>\n          {lists}\n          <ListComposer />\n        </Board>\n      </main>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    boardsById: boardSelectors.getBoardsById(state),\n    current: currentSelectors.getCurrent(state),\n    listsById: listSelectors.getListsById(state),\n    listsArray: listSelectors.getListsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => dispatch(userActions.getUserData(userId)),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId)),\n    fetchListsById: boardId => dispatch(listActions.fetchListsById(boardId)),\n    updateListsById: list => dispatch(listActions.updateListsById(list))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardContainer)\n);\n","import React from 'react';\nimport { FeatherIcon } from '../FeatherIcon';\nimport './Modal.scss';\n\nconst Modal = ({ onModalClose, children }) => {\n  return (\n    <div className=\"modal\">\n      <div className=\"modal__content\">\n        <button\n          type=\"button\"\n          className=\"modal__btn--close\"\n          onClick={onModalClose}\n        >\n          <FeatherIcon name=\"x\" />\n        </button>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport { Modal } from '../Modal';\nimport { Input } from '../Input';\n\nconst INITIAL_STATE = {\n  boardTitle: ''\n};\n\nexport default class BoardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { boardTitle } = this.state;\n    const { handleSubmit, onClose } = this.props;\n    this.props.handleSubmit(boardTitle);\n    this.props.onClose();\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { boardTitle } = this.state;\n    return (\n      <Modal onModalClose={this.props.onClose}>\n        <form onSubmit={this.onSubmit}>\n          <Input\n            name=\"boardTitle\"\n            title=\"Board Title\"\n            value={boardTitle}\n            onChange={this.onChange}\n            type=\"text\"\n          />\n          <button type=\"submit\">Create Board</button>\n        </form>\n      </Modal>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { withAuthorization } from '../Session';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { userActions, userSelectors } from '../../ducks/user';\nimport { currentSelectors } from '../../ducks/current';\nimport { BoardGridContainer } from '../BoardGrid';\nimport { BoardComposer } from '../Board';\nimport { BoardContainer } from '../Board';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showCreateBoardForm: false\n    };\n  }\n  componentDidMount() {\n    const userId = this.props.firebase.auth.currentUser.uid;\n    this.props.getUserData(userId);\n  }\n\n  toggleBoardComposer = () => {\n    this.setState(prevState => ({\n      showCreateBoardForm: !prevState.showCreateBoardForm\n    }));\n  };\n\n  createBoard = boardTitle => {\n    const userId = this.props.user.userId;\n    this.props.firebase.addBoard({ userId, boardTitle });\n  };\n\n  render() {\n    const { showCreateBoardForm } = this.state;\n    const userId = this.props.user.userId;\n    return (\n      <>\n        {showCreateBoardForm && (\n          <BoardComposer\n            onClose={this.toggleBoardComposer}\n            handleSubmit={this.createBoard}\n          />\n        )}\n        <Switch>\n          <Route\n            exact\n            path={ROUTES.HOME}\n            render={() => (\n              <main>\n                <h1>Home</h1>\n                {userId && (\n                  <BoardGridContainer\n                    openBoardComposer={this.toggleBoardComposer}\n                  />\n                )}\n              </main>\n            )}\n          />\n          <Route\n            path={ROUTES.BOARD}\n            render={props => <BoardContainer {...props} />}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: userSelectors.getUserData(state),\n    currentBoardId: currentSelectors.getCurrentBoardId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: userId => dispatch(userActions.getUserData(userId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(HomePage)\n);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n    const isInvalid = passwordOne === '' || passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <Input\n          name=\"passwordOne\"\n          title=\"New Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          title=\"Confirm New Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React from 'react';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport { PasswordChangeForm } from '../PasswordChange';\nimport { AuthUserContext, withAuthorization } from '../Session';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <div>\n        <h1>Account: {authUser.email}</h1>\n        <PasswordForgetForm />\n        <PasswordChangeForm />\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(AccountPage);\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport { Navigation } from '../Navigation';\nimport * as ROUTES from '../../constants/routes';\nimport { LandingPage } from '../Landing';\nimport { SignUpPage } from '../SignUp';\nimport { SignInPage } from '../SignIn';\nimport { PasswordForgetPage } from '../PasswordForget';\nimport { HomePage } from '../Home';\nimport { AccountPage } from '../Account';\nimport { AdminPage } from '../Admin';\nimport { withAuthentication } from '../Session';\nimport { Board } from '../Board';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <header className=\"app__header\">\n          <Navigation classes=\"navbar\" />\n        </header>\n        <Switch>\n          <Route exact path={ROUTES.LANDING} component={LandingPage} />\n          <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n          <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n          <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n          <Route path={ROUTES.HOME} component={HomePage} />\n          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n          <Route path={ROUTES.ADMIN} component={AdminPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { boardsById } from '../ducks/boards';\nimport { cardsById } from '../ducks/cards';\nimport { listsById } from '../ducks/lists';\nimport { user } from '../ducks/user';\nimport { current } from '../ducks/current';\n\nexport default combineReducers({\n  boardsById,\n  cardsById,\n  listsById,\n  user,\n  current\n});\n","import * as types from './types';\n\nconst user = (state = {}, action) => {\n  switch (action.type) {\n    case types.UPDATE_USER_BOARDS:\n      const { boardIds } = action;\n      return {\n        ...state,\n        boardIds: [...boardIds]\n      };\n    case types.LOAD_USER_DATA:\n      return {\n        ...state,\n        ...action.user\n      };\n    default:\n      return state;\n  }\n};\n\nexport { user };\n","import * as types from './types';\n\nconst current = (state = {}, action) => {\n  switch (action.type) {\n    case types.SELECT_BOARD:\n      const { boardId } = action;\n      return {\n        ...state,\n        boardId\n      };\n    case types.SELECT_LIST:\n      const { listId } = action;\n      return {\n        ...state,\n        listId\n      };\n    case types.SELECT_CARD:\n      const { cardId } = action;\n      return {\n        ...state,\n        cardId\n      };\n    default:\n      return state;\n  }\n};\n\nexport { current };\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\n\nexport default history;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport './index.scss';\nimport { App } from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { FirebaseContext } from './components/Firebase';\nimport reducers from './store/reducers';\nimport firebase from './store/firebase';\nimport history from './store/history';\n\nconst store = createStore(reducers, {}, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <FirebaseContext.Provider value={firebase}>\n      <Router basename={process.env.PUBLIC_URL} history={history}>\n        <App />\n      </Router>\n    </FirebaseContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/feather-sprite.0ed672ce.svg\";"],"sourceRoot":""}