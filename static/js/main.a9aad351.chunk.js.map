{"version":3,"sources":["assets/feather/feather-sprite.svg","components/Firebase/context.js","components/Firebase/Firebase.js","constants/routes.js","components/Button/Button.js","components/SignOut/SignOutButton.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Icon/Icon.js","components/Navbar/Navbar.js","components/Input/Input.js","components/SignUp/SignUpForm.js","components/UserFormPage/UserFormPage.js","components/SignUp/SignUp.js","components/SignUp/index.js","components/SignIn/SignInForm.js","components/PasswordForget/PasswordForgetForm.js","components/PasswordForget/PasswordForget.js","components/PasswordForget/index.js","components/SignIn/SignIn.js","store/firebase.js","ducks/users/actions.js","ducks/users/types.js","ducks/users/selectors.js","ducks/users/reducer.js","ducks/current/actions.js","ducks/current/types.js","ducks/current/selectors.js","components/BoardGrid/BoardGrid.js","components/BoardGrid/BoardTile.js","ducks/boards/actions.js","ducks/boards/types.js","ducks/boards/selectors.js","ducks/boards/reducers.js","components/BoardGrid/BoardGridContainer.js","components/Modal/Modal.js","components/BoardComposer/BoardComposer.js","constants/droppableTypes.js","components/ListComposer/ListComposer.js","components/Board/Board.js","ducks/lists/actions.js","ducks/lists/types.js","ducks/lists/selectors.js","ducks/lists/reducers.js","ducks/cards/selectors.js","ducks/cards/actions.js","ducks/cards/types.js","ducks/cards/reducers.js","ducks/subtasks/actions.js","ducks/subtasks/types.js","ducks/subtasks/selectors.js","ducks/subtasks/reducer.js","components/Textarea/Textarea.js","constants/keys.js","components/CardComposer/CardComposer.js","components/Menu/Menu.js","components/Menu/MenuItem.js","components/Popover/Popover.js","components/Popover/PopoverWrapper.js","components/Card/Card.js","components/List/Cards.js","components/List/List.js","ducks/comments/actions.js","ducks/comments/types.js","ducks/comments/selectors.js","ducks/comments/reducer.js","components/Toolbar/Toolbar.jsx","components/Avatar/Avatar.js","components/CardEditor/CardEditorAssignMember.js","components/MemberSearch/MemberSearch.js","components/CardEditor/CardEditorMoreActions.js","components/Checkbox/Checkbox.js","components/CardEditor/CardEditorSubtask.js","components/CardEditor/CardEditorComment.js","components/CardEditor/CardEditor.js","utils/utils.js","components/Board/BoardContainer.js","components/Home/Home.js","components/PasswordChange/PasswordChangeForm.js","components/Account/Account.js","components/Header/Header.jsx","components/App/App.js","serviceWorker.js","store/reducers.js","ducks/current/reducers.js","store/history.js","index.js"],"names":["module","exports","__webpack_require__","p","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","signInWithGoogle","provider","auth","GoogleAuthProvider","addScope","signInWithPopup","then","result","credential","token","accessToken","console","log","user","catch","error","errorCode","code","message","email","alert","signInWithGithub","GithubAuthProvider","signInWithRedirect","createUserWithEmailAndPassword","password","signInWithEmailAndPassword","signOut","passwordReset","sendPasswordResetEmail","passwordUpdate","newPassword","currentUser","updatePassword","getTimestamp","firestore","FieldValue","serverTimestamp","addToArray","value","arrayUnion","removeFromArray","arrayRemove","getUserDoc","userId","db","collection","doc","addUser","_ref","name","username","_ref$boardIds","boardIds","_ref$photoURL","photoURL","set","updateUser","newValue","arguments","length","undefined","update","getBoardDoc","boardId","updateBoard","objectSpread","lastModifiedAt","addBoard","_ref2","boardTitle","add","createdAt","listIds","createdBy","memberIds","ref","id","getListDoc","listId","updateList","addList","_ref3","listTitle","cardIds","deleteList","_ref4","batch","listRef","boardRef","delete","where","get","snapshot","docs","forEach","commit","getCardDoc","cardId","addCard","_ref5","cardTitle","assignedTo","updateCard","assignCard","_ref6","cardRef","deleteCard","_ref7","moveCardToList","_ref8","origListId","newListId","updatedCardIds","origListRef","newListRef","getSubtaskDoc","subtaskId","addSubtask","_ref9","_ref9$memberIds","_ref9$boardId","_ref9$cardId","_ref9$dueDate","dueDate","text","isCompleted","concat","toConsumableArray","subtaskIds","updateSubtask","deleteSubtask","_ref10","_ref10$cardId","subtaskRef","getCommentDoc","commentId","addComment","_ref11","_ref11$memberIds","isPinned","from","to","likes","commentIds","updateComment","initializeApp","HOME","Button","children","_ref$type","type","onClick","_ref$className","className","_ref$color","color","_ref$size","size","_ref$variant","variant","disabled","_ref$iconOnly","iconOnly","buttonRef","objectWithoutProperties","defaultProps","components_Button_Button","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","authUser","inherits","createClass","key","_this2","listener","onAuthStateChanged","setState","Session_context","Provider","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","Icon","addClass","trim","xmlns","xmlnsXlink","viewBox","width","height","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","xlinkHref","featherIcons","NavLinksAuth","Fragment","Link","ROUTES","components_SignOut_SignOutButton","NavLinksNonAuth","Navbar","viewportWidth","window","innerWidth","isMobileNavVisible","isTouchEnabled","handleResize","toggleMobileNavVisibility","prevState","handleClick","e","minWidth","target","matches","handleOutsideClick","navLinksEl","contains","handleTouch","document","removeEventListener","addEventListener","_this$state","_this$props","navLinksClass","navRef","isMobileView","el","navEl","Icon_Icon","Navbar_NavLinksAuth","Navbar_NavLinksNonAuth","Input","onFocus","onChange","onInput","placeholder","isRequired","onBlur","autoComplete","inputRef","hideLabel","label","onKeyDown","htmlFor","required","INITIAL_STATE","passwordOne","passwordTwo","SignUpForm","onSubmit","uid","preventDefault","defineProperty","_this$state2","isInvalid","components_Input_Input","UserFormPage","title","SignUpPage","components_UserFormPage_UserFormPage","SignUp_SignUpForm","SignUpLink","SignInForm","enableGoogleLogin","PasswordForgetForm","PasswordForgetPage","PasswordForget_PasswordForgetForm","PasswordForgetLink","SignInPage","SignIn_SignInForm","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","loadUserData","loadUsersById","usersById","fetchUsersById","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","users","data","sent","t0","stop","_x","apply","fetchUserData","_callee2","_context2","_x2","userData","deleteUser","getUsersById","getUserData","getCurrentUserData","currentUserId","current","getUsersArray","keys","map","getMembersArray","memberId","action","_toPropertyKey","selectUser","selectBoard","selectList","selectCard","getCurrentUserId","getCurrentBoardId","getCurrentListId","getCurrentCardId","getCurrent","BoardGrid","BoardTile","loadBoardsById","boardsById","fetchBoardsById","updateBoardsById","board","reorderLists","updateListIds","getBoardsById","getBoardsArray","getBoard","BoardGridContainer","boardObserver","onSnapshot","querySnapshot","docChanges","change","_this$props2","boardsArray","boardTiles","BoardGrid_BoardTile","BoardGrid_BoardGrid","openBoardComposer","connect","ownProps","currentSelectors","userSelectors","boardSelectors","boardActions","currentActions","Modal","onModalClose","onModalClick","BoardComposer","handleSubmit","onClose","components_Modal_Modal","CARD","LIST","isActive","ListComposer","resetForm","onReset","Board","react_beautiful_dnd_esm","droppableId","droppableTypes","direction","provided","innerRef","droppableProps","components_ListComposer_ListComposer","loadListsById","listsById","fetchListsById","updateListsById","list","getListsById","getListsArray","getCardsById","cardsById","getCardsArray","loadCardsById","fetchCardsById","cards","updateCardsById","card","loadSubtasksById","subtasksById","fetchSubtasksById","subtasks","updateSubtasksById","subtask","fetchCardSubtasks","fetchUserSubtasks","_callee3","_context3","_x3","subtaskData","getSubtasksById","getSubtasksArray","reducer_toPropertyKey","Textarea","autoHeightResize","isAutoHeightResizeEnabled","textareaEl","style","scrollHeight","createRef","onDragStart","isReadOnly","readOnly","BACKSPACE","ENTER","TAB","ARROW_DOWN","ARROW_UP","CardComposer","Textarea_Textarea_Textarea","Menu","menuRef","MenuItem","Popover","onOutsideClick","PopoverWrapper","isOpen","componentEl","toggleOpen","handleClose","alignInner","alignOuter","buttonProps","wrapperClass","popoverClass","anchorEl","popoverWrapperStyle","offsetTop","offsetLeft","position","top","Popover_Popover","align","Card","handleCardClick","onCardClick","cardIndex","draggableId","index","draggableProps","dragHandleProps","headerEl","Cards","scrollToBottom","listEnd","scrollIntoView","behavior","prevProps","onCardDelete","minHeight","isDraggingOver","Card_Card_Card","float","clear","List","handleListDelete","newListTitle","_this$props3","listIndex","isFetchingCards","viewportHeight","listHeaderEl","PopoverWrapper_PopoverWrapper","components_Menu_Menu","Menu_MenuItem","href","Cards_Cards","handleCardDelete","components_CardComposer_CardComposer","cardSelectors","loadCommentsById","commentsById","fetchCommentsById","comments","updateCommentsById","comment","fetchCardComments","fetchUserComments","commentData","deleteComment","getCommentsById","getCommentsArray","comments_reducer_toPropertyKey","Toolbar","Avatar","getUserInitials","fullName","split","charAt","join","toUpperCase","imgSrc","imgProps","classes","avatar","src","alt","img","backgroundColor","CardEditorAssignMember","MemberSearch","query","selectedMember","selectedIndex","filteredList","memberSearchEl","matchUser","regExp","RegExp","test","filter","newIndex","indexOf","persistSelectedMember","onMemberClick","nextIndex","prevIndex","inputEl","focus","assignedMembers","_this$state3","i","isAssigned","Avatar_Avatar_Avatar","CardEditorMoreActions","onMenuClick","data-action","Checkbox","isChecked","labelClass","checked","appRoot","getElementById","CardEditorSubtask","portal","appendChild","removeChild","toggleCompleted","inner","components_Checkbox_Checkbox","isDragging","ReactDOM","createPortal","CardEditorComment","secondsElapsed","tick","handleLikeClick","handleLike","secondsSinceCreation","Math","floor","Date","now","toDate","getTime","interval","setInterval","clearInterval","date","dateCreatedFull","timeCreated","toLocaleTimeString","hour","minute","hour12","dateCreated","toDateString","isToday","isYesterday","setDate","getDate","cardActions","commentActions","CardEditor","updateCardSubtasks","subtasksArray","cardSubtasks","reduce","handleCardEditorClose","currentValue","cardKey","updatedValue","currentFocus","newComment","_this$props4","newSubtask","handleModalClick","commentFormEl","newSubtaskFormEl","handleMoreActions","dataset","onSubtaskChange","handleCheckboxChange","toggleSubtaskCompleted","updateSubtaskText","_this$props5","moveSubtask","destination","source","updatedSubtaskIds","splice","handleCommentLike","_this$props6","assignMember","_this$props7","isFetching","cardDescription","membersListButton","_this$props8","commentObserver","_this3","_this$props9","commentsArray","usersArray","membersArray","hasSubtasks","hasComments","isNewCommentInvalid","isNewSubtaskInvalid","commentFormIsFocused","newSubtaskFormIsFocused","components_Toolbar_Toolbar","CardEditorAssignMember_CardEditorAssignMember","MemberSearch_MemberSearch_MemberSearch","CardEditor_CardEditorMoreActions","member","click","onDragEnd","CardEditorSubtask_CardEditorSubtask","components_CardEditor_CardEditorComment","subtaskSelectors","commentSelectors","isEqual","other","prototype","toString","typeArr","valueLen","compare","item1","item2","itemType","hasOwnProperty","windowDebouncer","callback","request","_len","args","Array","_key","cancelAnimationFrame","requestAnimationFrame","BoardContainer","isMovedWithinList","updatedListIds","toggleCardEditor","isCardEditorOpen","onTitleChange","onTitleBlur","newBoardTitle","updatedBoard","utils","listObserver","subtaskObserver","cardObserver","listsArray","lists","components_List_List","components_Board_Board","components_CardEditor_CardEditor","listSelectors","listActions","subtaskActions","HomePage","toggleBoardComposer","isBoardComposerOpen","createBoard","BoardComposer_BoardComposer_BoardComposer","Switch","Route","exact","path","render","BoardGrid_BoardGridContainer","Board_BoardContainer","match","params","currentBoardId","userActions","PasswordChangeForm","PasswordChange_PasswordChangeForm","Header","Navbar_Navbar_Navbar","Header_Header_Header","component","LandingPage","Home_Home","AccountPage","AdminPage","Boolean","location","hostname","combineReducers","createBrowserHistory","basename","store","createStore","reducers","applyMiddleware","thunk","es","context","Router","components_App_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a9aad351.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/feather-sprite.0ed672ce.svg\";","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import firebase from 'firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\nclass Firebase {\n  constructor() {\n    firebase.initializeApp(config);\n    this.auth = firebase.auth();\n    this.db = firebase.firestore();\n  }\n\n  // Auth API\n\n  signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    provider.addScope('https://www.googleapis.com/auth/contacts.readonly');\n    this.auth\n      .signInWithPopup(provider)\n      .then(result => {\n        if (result.credential) {\n          const token = result.credential.accessToken;\n          console.log(token);\n          const user = result.user;\n        }\n      })\n      .catch(error => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        const email = error.email;\n        const credential = error.credential;\n\n        if (errorCode === 'auth/account-exists-with-different-credential') {\n          alert(\n            'You have already signed up with a different auth provider for that email.'\n          );\n        } else {\n          console.error(error);\n        }\n      });\n  };\n\n  signInWithGithub = () => {\n    const provider = new firebase.auth.GithubAuthProvider();\n    this.auth.signInWithRedirect(provider);\n  };\n\n  createUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  signInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  signOut = () => this.auth.signOut();\n\n  passwordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  passwordUpdate = newPassword =>\n    this.auth.currentUser.updatePassword(newPassword);\n\n  // Utility API\n\n  getTimestamp = () => firebase.firestore.FieldValue.serverTimestamp();\n  addToArray = value => firebase.firestore.FieldValue.arrayUnion(value);\n  removeFromArray = value => firebase.firestore.FieldValue.arrayRemove(value);\n\n  // User API\n\n  getUserDoc = userId => this.db.collection('users').doc(userId);\n\n  addUser = ({\n    userId,\n    name,\n    username,\n    email,\n    boardIds = [],\n    photoURL = null\n  }) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .set({ userId, name, username, email, boardIds, photoURL });\n\n  updateUser = (userId, newValue = {}) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .update(newValue);\n\n  // Board API\n\n  getBoardDoc = boardId => this.db.collection('boards').doc(boardId);\n\n  updateBoard = (boardId, newValue = {}) =>\n    this.getBoardDoc(boardId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  addBoard = ({ userId, boardTitle }) => {\n    this.db\n      .collection('boards')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        listIds: [],\n        createdBy: userId,\n        memberIds: [userId],\n        boardTitle\n      })\n      .then(ref => {\n        this.updateUser(userId, {\n          boardIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  // List API\n\n  getListDoc = listId => this.db.collection('lists').doc(listId);\n\n  updateList = (listId, newValue = {}) =>\n    this.getListDoc(listId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  addList = ({ boardId, listTitle }) => {\n    this.db\n      .collection('lists')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        cardIds: [],\n        boardId,\n        listTitle\n      })\n      .then(ref => {\n        this.updateBoard(boardId, {\n          listIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  deleteList = ({ listId, boardId }) => {\n    const batch = this.db.batch();\n    const listRef = this.getListDoc(listId);\n    const boardRef = this.getBoardDoc(boardId);\n\n    // Delete list\n    batch.delete(listRef);\n\n    // Remove list id from board\n    batch.update(boardRef, {\n      listIds: this.removeFromArray(listId),\n      lastModifiedAt: this.getTimestamp()\n    });\n\n    // Delete cards assigned to list\n    this.db\n      .collection('cards')\n      .where('listId', '==', listId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('list deleted');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  // Card API\n\n  getCardDoc = cardId => this.db.collection('cards').doc(cardId);\n\n  addCard = ({ boardId, listId, cardTitle }) => {\n    this.db\n      .collection('cards')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        assignedTo: [],\n        listId,\n        boardId,\n        cardTitle\n      })\n      .then(ref => {\n        this.updateList(listId, {\n          cardIds: this.addToArray(ref.id),\n          lastModifiedAt: this.getTimestamp()\n        });\n      });\n  };\n\n  updateCard = (cardId, newValue = {}) => {\n    this.getCardDoc(cardId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  assignCard = ({ cardId, boardId, userId }) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const boardRef = this.getBoardDoc(boardId);\n    batch.update(cardRef, {\n      assignedTo: this.addToArray(userId),\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(boardRef, {\n      memberIds: this.addToArray(userId),\n      lastModifiedAt: this.getTimestamp()\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('assigned card to member');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  deleteCard = ({ cardId, listId }) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const listRef = this.getListDoc(listId);\n    batch.delete(cardRef);\n    batch.update(listRef, {\n      cardIds: this.removeFromArray(cardId),\n      lastModifiedAt: this.getTimestamp()\n    });\n\n    // Delete subtasks assigned to card\n    this.db\n      .collection('subtasks')\n      .where('cardId', '==', cardId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n      })\n      .then(() => {\n        this.db\n          .collection('comments')\n          .where('cardId', '==', cardId)\n          .get()\n          .then(snapshot => {\n            snapshot.docs.forEach(doc => {\n              batch.delete(doc.ref);\n            });\n            return batch\n              .commit()\n              .then(() => {\n                console.log('card deleted');\n              })\n              .catch(error => {\n                console.error(error);\n              });\n          });\n      });\n  };\n\n  moveCardToList = ({ cardId, origListId, newListId, updatedCardIds }) => {\n    const batch = this.db.batch();\n    const cardRef = this.getCardDoc(cardId);\n    const origListRef = this.getListDoc(origListId);\n    const newListRef = this.getListDoc(newListId);\n    batch.update(cardRef, {\n      listId: newListId,\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(origListRef, {\n      cardIds: this.removeFromArray(cardId),\n      lastModifiedAt: this.getTimestamp()\n    });\n    batch.update(newListRef, {\n      cardIds: updatedCardIds,\n      lastModifiedAt: this.getTimestamp()\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('card moved');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  // Subtask API\n\n  getSubtaskDoc = subtaskId => this.db.collection('subtasks').doc(subtaskId);\n\n  addSubtask = ({\n    userId,\n    memberIds = [],\n    boardId = null,\n    cardId = null,\n    dueDate = null,\n    text\n  }) => {\n    this.db\n      .collection('subtasks')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        isCompleted: false,\n        createdBy: userId,\n        assignedTo: [userId, ...memberIds],\n        dueDate,\n        boardId,\n        cardId,\n        text\n      })\n      .then(ref => {\n        if (cardId === null) return;\n        this.updateCard(cardId, {\n          subtaskIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  updateSubtask = (subtaskId, newValue = {}) => {\n    this.getSubtaskDoc(subtaskId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  deleteSubtask = ({ subtaskId, cardId = null }) => {\n    const batch = this.db.batch();\n    const subtaskRef = this.getSubtaskDoc(subtaskId);\n    batch.delete(subtaskRef);\n\n    if (cardId) {\n      const cardRef = this.getCardDoc(cardId);\n      batch.update(cardRef, {\n        subtaskIds: this.removeFromArray(subtaskId),\n        lastModifiedAt: this.getTimestamp()\n      });\n    }\n    return batch\n      .commit()\n      .then(() => {\n        console.log('subtask deleted');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  // Comment API\n  getCommentDoc = commentId => this.db.collection('comments').doc(commentId);\n\n  addComment = ({ userId, memberIds = [], boardId, cardId, text }) => {\n    this.db\n      .collection('comments')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastModifiedAt: this.getTimestamp(),\n        isPinned: false,\n        from: userId,\n        to: memberIds,\n        likes: [],\n        boardId,\n        cardId,\n        text\n      })\n      .then(ref => {\n        this.updateCard(cardId, {\n          commentIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  updateComment = (commentId, newValue = {}) => {\n    this.getCommentDoc(commentId).update({\n      lastModifiedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n}\n\nexport default Firebase;\n","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const BOARD = '/home/board/:id';\n","import React from 'react';\nimport './Button.scss';\n\nconst Button = ({\n  children,\n  type = 'button',\n  onClick,\n  className = '',\n  color = 'neutral',\n  size = 'md',\n  variant = 'text',\n  disabled,\n  name,\n  iconOnly = false,\n  buttonRef,\n  ...props\n}) => (\n  // eslint-disable-next-line react/button-has-type\n  <button\n    className={`${className} ${color} ${size} ${variant} ${\n      iconOnly ? 'icon-only' : ''\n    }`}\n    type={type}\n    onClick={onClick}\n    disabled={disabled}\n    name={name}\n    ref={buttonRef}\n    {...props}\n  >\n    {children}\n  </button>\n);\n\nButton.defaultProps = {\n  type: 'button',\n  className: '',\n  color: 'neutral',\n  size: 'md',\n  variant: 'text',\n  iconOnly: false\n};\n\nexport default Button;\n","import React from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Button } from '../Button';\nimport './SignOutButton.scss';\n\nconst SignOutButton = ({ firebase }) => (\n  <Button\n    type=\"button\"\n    onClick={firebase.signOut}\n    className=\"btn--sign-out\"\n    color=\"primary\"\n  >\n    Sign Out\n  </Button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        authUser: null\n      };\n    }\n\n    componentDidMount() {\n      const { firebase } = this.props;\n\n      this.listener = firebase.auth.onAuthStateChanged(authUser => {\n        authUser\n          ? this.setState({ authUser })\n          : this.setState({ authUser: null });\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport AuthUserContext from './context';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          this.props.history.push(ROUTES.SIGN_IN);\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n  return compose(\n    withRouter,\n    withFirebase\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from 'react';\nimport featherIcons from '../../assets/feather/feather-sprite.svg';\n\nfunction Icon(props) {\n  return (\n    <svg\n      className={`feather feather-${props.name} ${props.addClass || ''}`.trim()}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n      height=\"24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <use xlinkHref={`${featherIcons}#${props.name}`} />\n    </svg>\n  );\n}\n\nexport default Icon;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { SignOutButton } from '../SignOut';\nimport './Navbar.scss';\nimport { AuthUserContext } from '../Session';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\n\nconst NavLinksAuth = () => (\n  <>\n    <li>\n      <Link to={ROUTES.HOME}>Home</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ADMIN}>Admin</Link>\n    </li>\n    <li>\n      <SignOutButton />\n    </li>\n  </>\n);\n\nconst NavLinksNonAuth = () => (\n  <>\n    <li>\n      <Link to={ROUTES.SIGN_IN}>Log In</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.SIGN_UP}>Get Started</Link>\n    </li>\n  </>\n);\n\nexport default class Navbar extends Component {\n  static defaultProps = {\n    minWidth: 768\n  };\n\n  state = {\n    viewportWidth: window.innerWidth,\n    isMobileNavVisible: false,\n    isTouchEnabled: false\n  };\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick);\n  }\n\n  handleResize = () => {\n    this.setState({\n      viewportWidth: window.innerWidth\n    });\n  };\n\n  toggleMobileNavVisibility = () => {\n    this.setState(prevState => ({\n      isMobileNavVisible: !prevState.isMobileNavVisible\n    }));\n  };\n\n  handleClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    if (!isMobileView) return;\n    if (e.target.matches('button') || e.target.matches('a')) {\n      this.toggleMobileNavVisibility();\n    }\n  };\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n    window.removeEventListener('resize', this.handleResize);\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  handleOutsideClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n    if (\n      !isMobileView ||\n      this.navLinksEl.contains(e.target) ||\n      e.target.matches('button') ||\n      e.target.matches('a')\n    )\n      return;\n    this.setState({\n      isMobileNavVisible: false\n    });\n  };\n\n  handleTouch = () => {\n    const { isTouchEnabled } = this.state;\n    if (isTouchEnabled === true) return;\n    this.setState({\n      isTouchEnabled: true\n    });\n    document.removeEventListener('touchstart', this.handleTouch);\n    document.removeEventListener('click', this.handleOutsideClick);\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  render() {\n    const { viewportWidth, isMobileNavVisible } = this.state;\n    const { minWidth, navRef, navLinksClass } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    return (\n      <nav\n        className={`navbar ${isMobileView ? 'is-collapsed' : ''} ${\n          isMobileView && isMobileNavVisible ? 'show-links' : ''\n        }`}\n        ref={el => (this.navEl = el)}\n      >\n        <span className=\"navbar__logo\">\n          <Link to={ROUTES.LANDING} onClick={this.handleClick}>\n            workflow\n          </Link>\n        </span>\n        {isMobileView && (\n          <Button\n            type=\"button\"\n            color=\"primary\"\n            onClick={this.toggleMobileNavVisibility}\n            iconOnly\n          >\n            <Icon name=\"menu\" />\n          </Button>\n        )}\n        <ul\n          className={`navbar__links ${navLinksClass}`}\n          onClick={this.handleClick}\n          ref={el => (this.navLinksEl = el)}\n        >\n          <AuthUserContext.Consumer>\n            {authUser => (authUser ? <NavLinksAuth /> : <NavLinksNonAuth />)}\n          </AuthUserContext.Consumer>\n        </ul>\n      </nav>\n    );\n  }\n}\n","import React from 'react';\nimport './Input.scss';\n\nconst Input = ({\n  className = '',\n  name,\n  type,\n  value,\n  onFocus,\n  onChange,\n  onInput,\n  placeholder,\n  isRequired,\n  onBlur,\n  autoComplete,\n  inputRef,\n  hideLabel,\n  label,\n  onKeyDown\n}) => {\n  return (\n    <>\n      {!hideLabel && (\n        <label htmlFor={name} className=\"input__label\">\n          {label}\n        </label>\n      )}\n      <input\n        className={className}\n        id={name}\n        name={name}\n        type={type}\n        value={value}\n        onFocus={onFocus}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={isRequired}\n        onBlur={onBlur}\n        autoComplete={autoComplete}\n        ref={inputRef}\n        onInput={onInput}\n        onKeyDown={onKeyDown}\n      />\n    </>\n  );\n};\n\nexport default Input;\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  username: '',\n  name: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { username, email, name, passwordOne } = this.state;\n    this.props.firebase\n      .createUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        const userId = authUser.user.uid;\n        const photoURL = authUser.user.photoURL || null;\n        return this.props.firebase.addUser({\n          userId,\n          name,\n          username,\n          email,\n          photoURL\n        });\n      })\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const {\n      username,\n      name,\n      email,\n      passwordOne,\n      passwordTwo,\n      error\n    } = this.state;\n    const isInvalid =\n      passwordOne === '' ||\n      passwordTwo === '' ||\n      email === '' ||\n      username === '' ||\n      passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"name\"\n          label=\"Full Name\"\n          value={name}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"username\"\n          label=\"Username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordOne\"\n          label=\"Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          label=\"Confirm Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Create Account\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignUpForm);\n","import React from 'react';\nimport './UserFormPage.scss';\n\nconst UserFormPage = ({ title, children }) => (\n  <main className=\"user-form__container\">\n    <h1 className=\"user-form__title\">{title}</h1>\n    {children}\n  </main>\n);\n\nexport default UserFormPage;\n","import React from 'react';\nimport SignUpForm from './SignUpForm';\nimport { UserFormPage } from '../UserFormPage';\n\nconst SignUpPage = () => (\n  <UserFormPage title=\"Create an account\">\n    <SignUpForm />\n  </UserFormPage>\n);\n\nexport default SignUpPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nexport { default as SignUpPage } from './SignUp';\nexport { default as SignUpForm } from './SignUpForm';\nexport { SignUpLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email, password } = this.state;\n    this.props.firebase\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  enableGoogleLogin = e => {\n    const { signInWithGoogle } = this.props.firebase;\n    signInWithGoogle();\n    e.preventDefault();\n  }\n\n  render() {\n    const { email, password, error } = this.state;\n    const isInvalid = password === '' || email === '';\n    return (\n      <form className=\"user-form\">\n      {/*\n        <Button\n          type=\"click\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.enableGoogleLogin}\n        >\n          Continue with Google\n        </Button>\n        <Button\n          type=\"click\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.enableGithubLogin}\n        >\n          Continue with Github\n        </Button>\n      */}\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"password\"\n          label=\"Password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Log In\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignInForm);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null\n};\n\nclass PasswordForgetForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .passwordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, error } = this.state;\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Reset My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordForgetForm);\n","import React from 'react';\nimport PasswordForgetForm from './PasswordForgetForm';\nimport { UserFormPage } from '../UserFormPage';\n\nconst PasswordForgetPage = () => (\n  <UserFormPage title=\"Forgot your password?\">\n    <PasswordForgetForm />\n  </UserFormPage>\n);\n\nexport default PasswordForgetPage;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport {default as PasswordForgetForm} from './PasswordForgetForm';\nexport {default as PasswordForgetPage} from './PasswordForget';\nexport {PasswordForgetLink};","import React from 'react';\nimport SignInForm from './SignInForm';\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { UserFormPage } from '../UserFormPage';\n\nconst SignInPage = () => (\n  <UserFormPage title=\"Log In\">\n    <SignInForm />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </UserFormPage>\n);\n\nexport default SignInPage;\n","import { Firebase } from '../components/Firebase';\n\nconst firebase = new Firebase();\n\nexport default firebase;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\n\nexport const loadUserData = user => {\n  return {\n    type: types.LOAD_USER_DATA,\n    user\n  };\n};\n\nexport const loadUsersById = usersById => {\n  return {\n    type: types.LOAD_USERS_BY_ID,\n    usersById\n  };\n};\n\nexport const fetchUsersById = () => {\n  return async dispatch => {\n    try {\n      const usersById = await firebase.db\n        .collection('users')\n        .get()\n        .then(snapshot => {\n          const users = {};\n          snapshot.forEach(doc => {\n            users[doc.id] = {\n              userId: doc.id,\n              ...doc.data()\n            };\n          });\n          return users;\n        });\n      dispatch(loadUsersById(usersById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserData = userId => {\n  return async dispatch => {\n    try {\n      const user = await firebase\n        .getUserDoc(userId)\n        .get()\n        .then(doc => doc.data());\n      dispatch(loadUserData(user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addUser = ({ userId, userData }) => {\n  return {\n    type: types.ADD_USER,\n    userId,\n    userData\n  };\n};\n\nexport const deleteUser = userId => {\n  return {\n    type: types.DELETE_USER,\n    userId\n  };\n};\n\nexport const updateUser = ({ userId, userData }) => {\n  return {\n    type: types.UPDATE_USER,\n    userId,\n    userData\n  };\n};\n","export const LOAD_USER_DATA = 'LOAD_USER_DATA';\nexport const LOAD_USERS_BY_ID = 'LOAD_USERS_BY_ID';\nexport const ADD_USER = 'ADD_USER';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const DELETE_USER = 'DELETE_USER';\n","export const getUsersById = state => {\n  return state.usersById;\n};\n\nexport const getUserData = (state, userId) => {\n  return state.usersById[userId];\n};\n\nexport const getCurrentUserData = state => {\n  const currentUserId = state.current.userId;\n  return state.usersById[currentUserId];\n};\n\n// returns array of all users\nexport const getUsersArray = state => {\n  const { usersById } = state;\n  return Object.keys(usersById).map(userId => {\n    return {\n      userId,\n      ...usersById[userId]\n    };\n  });\n};\n\n// returns subset of users\nexport const getMembersArray = (state, memberIds) => {\n  const { usersById } = state;\n  if (!memberIds) return [];\n  return memberIds.map(memberId => usersById[memberId]);\n};\n","import * as types from './types';\n\nconst usersById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_USERS_BY_ID: {\n      const { usersById } = action;\n      return {\n        ...state,\n        ...usersById\n      };\n    }\n    case types.LOAD_USER_DATA: {\n      const { user } = action;\n      return {\n        ...state,\n        ...user\n      };\n    }\n    case types.ADD_USER: {\n      const { userId, userData } = action;\n      return {\n        ...state,\n        [userId]: {\n          userId,\n          ...userData\n        }\n      };\n    }\n    case types.DELETE_USER: {\n      const { userId } = action;\n      const { [userId]: deletedUser, ...restOfUsers } = state;\n      return restOfUsers;\n    }\n    case types.UPDATE_USER: {\n      const { userId, userData } = action;\n      return {\n        ...state,\n        [userId]: {\n          ...state[userId],\n          ...userData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default usersById;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const selectUser = userId => {\n  return {\n    type: types.SELECT_USER,\n    userId\n  };\n};\n\nexport const selectBoard = boardId => {\n  return {\n    type: types.SELECT_BOARD,\n    boardId\n  };\n};\n\nexport const selectList = listId => {\n  return {\n    type: types.SELECT_LIST,\n    listId\n  };\n};\n\nexport const selectCard = cardId => {\n  return {\n    type: types.SELECT_CARD,\n    cardId\n  };\n};\n","export const SELECT_BOARD = 'SELECT_BOARD';\nexport const SELECT_LIST = 'SELECT_LIST';\nexport const SELECT_CARD = 'SELECT_CARD';\nexport const SELECT_USER = 'SELECT_USER';\n","export const getCurrentUserId = state => {\n  return state.current.userId;\n};\n\nexport const getCurrentBoardId = state => {\n  return state.current.boardId;\n};\n\nexport const getCurrentListId = state => {\n  return state.current.listId;\n};\n\nexport const getCurrentCardId = state => {\n  return state.current.cardId;\n};\n\nexport const getCurrent = state => {\n  return state.current;\n};\n","import React, { Component } from 'react';\n\nexport default class BoardGrid extends Component {\n  render() {\n    return <ul className=\"board-grid\">{this.props.children}</ul>;\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BoardTile = props => {\n  const { boardId, boardTitle, onClick } = props;\n  return (\n    <li className=\"board-grid__tile\">\n      <Link\n        className=\"board-grid__link\"\n        to={`/home/board/${boardId}`}\n        onClick={onClick}\n      >\n        <span className=\"board-grid__title\">{boardTitle}</span>\n      </Link>\n    </li>\n  );\n};\n\nexport default BoardTile;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadBoardsById = boardsById => {\n  return {\n    type: types.LOAD_BOARDS_BY_ID,\n    boardsById\n  };\n};\n\nexport const fetchBoardsById = userId => {\n  return async dispatch => {\n    try {\n      const boardsById = await firebase.db\n        .collection('boards')\n        .where('memberIds', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const boardsById = {};\n          snapshot.forEach(doc => {\n            boardsById[doc.id] = doc.data();\n          });\n          return boardsById;\n        });\n      dispatch(loadBoardsById(boardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateBoardsById = board => {\n  return {\n    type: types.UPDATE_BOARDS_BY_ID,\n    board\n  };\n};\n\nexport const reorderLists = (boardId, listIds) => {\n  return {\n    type: types.REORDER_LISTS,\n    boardId,\n    listIds\n  };\n};\n\nexport const updateListIds = (boardId, listIds) => {\n  return {\n    type: types.UPDATE_LIST_IDS,\n    boardId,\n    listIds\n  };\n};\n","export const LOAD_BOARDS_BY_ID = 'LOAD_BOARDS_BY_ID';\nexport const UPDATE_BOARDS_BY_ID = 'UPDATE_BOARDS_BY_ID';\nexport const REORDER_LISTS = 'REORDER_LISTS';\nexport const UPDATE_LIST_IDS = 'UPDATE_LIST_IDS';","export const getBoardsById = state => {\n  return state.boardsById;\n};\n\nexport const getBoardsArray = state => {\n  const { boardsById } = state;\n  return Object.keys(boardsById).map(boardId => {\n    return {\n      boardId,\n      ...boardsById[boardId]\n    };\n  });\n};\n\nexport const getBoard = (state, boardId) => {\n  const { boardsById } = state;\n  return boardsById[boardId];\n};\n","import * as types from './types';\n\nconst boardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_BOARDS_BY_ID: {\n      const { boardsById } = action;\n      return {\n        ...state,\n        ...boardsById\n      };\n    }\n    case types.UPDATE_BOARDS_BY_ID: {\n      const { board } = action;\n      return {\n        ...state,\n        ...board\n      };\n    }\n    case types.UPDATE_LIST_IDS:\n    case types.REORDER_LISTS: {\n      const { boardId, listIds } = action;\n      return {\n        ...state,\n        [boardId]: {\n          ...state[boardId],\n          listIds\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default boardsById;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport BoardGrid from './BoardGrid';\nimport BoardTile from './BoardTile';\nimport './BoardGrid.scss';\nimport { withAuthorization } from '../Session';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Icon } from '../Icon';\nimport { userSelectors } from '../../ducks/users';\n\nclass BoardGridContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const { userId, firebase, updateBoardsById } = this.props;\n    this.boardObserver = firebase.db\n      .collection('boards')\n      .where('memberIds', 'array-contains', userId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const board = {\n            [change.doc.id]: change.doc.data()\n          };\n          updateBoardsById(board);\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.boardObserver();\n  }\n\n  render() {\n    const { boardsArray, selectBoard } = this.props;\n    const boardTiles = boardsArray.map(board => {\n      const { boardTitle, boardId } = board;\n      return (\n        <BoardTile\n          key={boardId}\n          boardTitle={boardTitle}\n          boardId={boardId}\n          onClick={() => selectBoard(boardId)}\n        />\n      );\n    });\n    return (\n      <section>\n        <BoardGrid>\n          {boardTiles}\n          <button\n            type=\"button\"\n            className=\"board-grid__tile board-grid__btn--add\"\n            onClick={this.props.openBoardComposer}\n          >\n            <Icon name=\"plus-circle\" />\n            Create board\n          </button>\n        </BoardGrid>\n      </section>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    userId: currentSelectors.getCurrentUserId(state),\n    user: userSelectors.getUserData(state, ownProps.userId),\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardGridContainer)\n);\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport './Modal.scss';\n\nconst Modal = ({\n  onModalClose,\n  children,\n  className = '',\n  onModalClick,\n  size = 'md',\n  id\n}) => {\n  return (\n    <div className=\"modal\" onClick={onModalClick}>\n      <div\n        id={id}\n        className={`modal__content ${className} modal__content--${size}`}\n      >\n        <Button\n          type=\"button\"\n          className=\"modal__btn--close\"\n          onClick={onModalClose}\n          iconOnly\n        >\n          <Icon name=\"x\" />\n        </Button>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport { Modal } from '../Modal';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\nimport './BoardComposer.scss';\n\nconst INITIAL_STATE = {\n  boardTitle: ''\n};\n\nexport default class BoardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { boardTitle } = this.state;\n    const { handleSubmit, onClose } = this.props;\n    this.props.handleSubmit(boardTitle);\n    this.props.onClose();\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { boardTitle } = this.state;\n    return (\n      <Modal onModalClose={this.props.onClose} size=\"sm\">\n        <form onSubmit={this.onSubmit}>\n          <Input\n            name=\"boardTitle\"\n            title=\"Board Title\"\n            value={boardTitle}\n            onChange={this.onChange}\n            type=\"text\"\n          />\n          <Button\n            className=\"board-composer__btn--add\"\n            type=\"submit\"\n            onClick={this.onSubmit}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Create Board\n          </Button>\n        </form>\n      </Modal>\n    );\n  }\n}\n","export const CARD = 'CARD';\nexport const LIST = 'LIST';\nexport const TASK = 'TASK';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input } from '../Input';\nimport { Icon } from '../Icon';\nimport { withAuthorization } from '../Session';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Button } from '../Button';\nimport './ListComposer.scss';\n\nconst INITIAL_STATE = {\n  listTitle: '',\n  isActive: false\n};\n\nclass ListComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ listTitle: '' });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { listTitle } = this.state;\n    const { boardId } = this.props;\n    this.props.firebase.addList({ boardId, listTitle });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = e => {\n    if (e.target.value === '') {\n      this.setState({\n        isActive: false\n      });\n    }\n  };\n\n  render() {\n    const { listTitle, isActive } = this.state;\n    return (\n      <div\n        className={`list-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"list-composer__form\" onSubmit={this.onSubmit}>\n          <Input\n            onChange={this.onChange}\n            value={listTitle}\n            placeholder={isActive ? 'Enter list title...' : 'Add a list'}\n            required\n            name=\"listTitle\"\n            hideLabel\n            className=\"list-composer__input\"\n          />\n          {isActive && (\n            <div className=\"list-composer__footer\">\n              <Button\n                className=\"list-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add List\n              </Button>\n              <Button\n                className=\"list-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    boardsById: boardSelectors.getBoardsById(state),\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListComposer)\n);\n","import React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { ListComposer } from '../ListComposer';\n\nconst Board = props => {\n  const { boardId, children } = props;\n  return (\n    <Droppable\n      droppableId={boardId}\n      type={droppableTypes.LIST}\n      direction=\"horizontal\"\n    >\n      {provided => (\n        <div\n          className=\"board\"\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n        >\n          {children}\n          {provided.placeholder}\n          <ListComposer boardId={boardId} />\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nexport default Board;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadListsById = listsById => {\n  return {\n    type: types.LOAD_LISTS_BY_ID,\n    listsById\n  };\n};\n\nexport const fetchListsById = boardId => {\n  return async dispatch => {\n    try {\n      const listsById = await firebase.db\n        .collection('lists')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const listsById = {};\n          snapshot.forEach(doc => {\n            listsById[doc.id] = doc.data();\n          });\n          return listsById;\n        });\n      dispatch(loadListsById(listsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateListsById = list => {\n  return {\n    type: types.UPDATE_LISTS_BY_ID,\n    list\n  };\n};\n","export const LOAD_LISTS_BY_ID = 'LOAD_LISTS_BY_ID';\nexport const FETCH_LISTS_BY_ID = 'FETCH_LISTS_BY_ID';\nexport const UPDATE_LISTS_BY_ID = 'UPDATE_LISTS_BY_ID';\nexport const DELETE_CARD = 'DELETE_CARD';\n","export const getListsById = state => {\n  return state.listsById;\n};\n\nexport const getListsArray = state => {\n  const { listsById, boardsById, current } = state;\n  const { boardId } = current;\n  const board = boardsById[boardId];\n  if (!board) return null;\n  const { listIds } = board;\n\n  return listIds.map(listId => {\n    return {\n      listId,\n      ...listsById[listId]\n    };\n  });\n};\n","import * as types from './types';\n\nconst listsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_LISTS_BY_ID: {\n      const { listsById } = action;\n      return {\n        ...state,\n        ...listsById\n      };\n    }\n    case types.UPDATE_LISTS_BY_ID: {\n      const { list } = action;\n      return {\n        ...state,\n        ...list\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default listsById;\n","export const getCardsById = state => {\n  return state.cardsById;\n};\n\nexport const getCardsArray = (state, ownProps) => {\n  const { cardsById } = state;\n  const { cardIds } = ownProps;\n  return cardIds.map(cardId => cardsById[cardId]);\n};\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadCardsById = cardsById => {\n  return {\n    type: types.LOAD_CARDS_BY_ID,\n    cardsById\n  };\n};\n\nexport const fetchCardsById = boardId => {\n  return async dispatch => {\n    try {\n      const cardsById = await firebase.db\n        .collection('cards')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const cards = {};\n          snapshot.forEach(doc => {\n            cards[doc.id] = {\n              cardId: doc.id,\n              ...doc.data()\n            };\n          });\n          return cards;\n        });\n      dispatch(loadCardsById(cardsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateCardsById = card => {\n  return {\n    type: types.UPDATE_CARDS_BY_ID,\n    card\n  };\n};\n\n","export const ADD_CARD = 'ADD_CARD';\nexport const SET_CARD_DUE_DATE = 'SET_CARD_DUE_DATE';\nexport const ADD_CARD_SUBTASK = 'ADD_CARD_SUBTASK';\nexport const REMOVE_CARD_SUBTASK = 'REMOVE_CARD_SUBTASK';\nexport const CHANGE_CARD_DESCRIPTION = 'CHANGE_CARD_DESCRIPTION';\nexport const SET_CARD_COLOR = 'SET_CARD_COLOR';\nexport const DELETE_CARD = 'DELETE_CARD';\nexport const MOVE_CARD = 'MOVE_CARD';\nexport const LOAD_CARDS_BY_ID = 'LOAD_CARDS_BY_ID';\nexport const UPDATE_CARDS_BY_ID = 'UPDATE_CARDS_BY_ID';\n\n","import * as types from './types';\n\nconst cardsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_CARDS_BY_ID: {\n      const { cardsById } = action;\n      return {\n        ...state,\n        ...cardsById\n      };\n    }\n    case types.UPDATE_CARDS_BY_ID: {\n      const { card } = action;\n      return {\n        ...state,\n        ...card\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default cardsById;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadSubtasksById = subtasksById => {\n  return {\n    type: types.LOAD_SUBTASKS_BY_ID,\n    subtasksById\n  };\n};\n\nexport const fetchSubtasksById = () => {\n  return async dispatch => {\n    try {\n      const subtasksById = await firebase.db\n        .collection('subtasks')\n        .get()\n        .then(snapshot => {\n          const subtasks = {};\n          snapshot.forEach(doc => {\n            subtasks[doc.id] = {\n              subtaskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return subtasks;\n        });\n      dispatch(loadSubtasksById(subtasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateSubtasksById = subtask => {\n  return {\n    type: types.UPDATE_SUBTASKS_BY_ID,\n    subtask\n  };\n};\n\nexport const fetchCardSubtasks = boardId => {\n  return async dispatch => {\n    try {\n      const subtasksById = await firebase.db\n        .collection('subtasks')\n        .where('boardId', '==', boardId)\n        .get()\n        .then(snapshot => {\n          const subtasks = {};\n          snapshot.forEach(doc => {\n            subtasks[doc.id] = {\n              subtaskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return subtasks;\n        });\n      dispatch(loadSubtasksById(subtasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserSubtasks = userId => {\n  return async dispatch => {\n    try {\n      const subtasksById = await firebase.db\n        .collection('subtasks')\n        .where('assignedTo', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const subtasks = {};\n          snapshot.forEach(doc => {\n            subtasks[doc.id] = {\n              subtaskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return subtasks;\n        });\n      dispatch(loadSubtasksById(subtasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addSubtask = ({ subtaskId, subtaskData }) => {\n  return {\n    type: types.ADD_SUBTASK,\n    subtaskId,\n    subtaskData\n  };\n};\n\nexport const deleteSubtask = subtaskId => {\n  return {\n    type: types.DELETE_SUBTASK,\n    subtaskId\n  };\n};\n\nexport const updateSubtask = ({ subtaskId, subtaskData }) => {\n  return {\n    type: types.UPDATE_SUBTASK,\n    subtaskId,\n    subtaskData\n  };\n};\n","export const LOAD_SUBTASKS_BY_ID = 'LOAD_SUBTASKS_BY_ID';\nexport const FETCH_SUBTASKS_BY_ID = 'FETCH_SUBTASKS_BY_ID';\nexport const UPDATE_SUBTASKS_BY_ID = 'UPDATE_SUBTASKS_BY_ID';\nexport const ADD_SUBTASK = 'ADD_SUBTASK';\nexport const UPDATE_SUBTASK = 'UPDATE_SUBTASK';\nexport const DELETE_SUBTASK = 'DELETE_SUBTASK';\n","export const getSubtasksById = state => {\n  const { subtasksById } = state;\n  return subtasksById;\n};\n\nexport const getSubtasksArray = (state, subtaskIds) => {\n  const { subtasksById } = state;\n  if (!subtaskIds) return [];\n\n  return subtaskIds.map(subtaskId => {\n    return subtasksById[subtaskId];\n  });\n};\n","import * as types from './types';\n\nconst subtasksById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_SUBTASKS_BY_ID: {\n      const { subtasksById } = action;\n      return {\n        ...state,\n        ...subtasksById\n      };\n    }\n    case types.ADD_SUBTASK: {\n      const { subtaskId, subtaskData } = action;\n      return {\n        ...state,\n        [subtaskId]: {\n          subtaskId,\n          ...subtaskData\n        }\n      };\n    }\n    case types.DELETE_SUBTASK: {\n      const { subtaskId } = action;\n      const { [subtaskId]: deletedSubtask, ...restOfSubtasks } = state;\n      return restOfSubtasks;\n    }\n    case types.UPDATE_SUBTASK: {\n      const { subtaskId, subtaskData } = action;\n      return {\n        ...state,\n        [subtaskId]: {\n          ...state[subtaskId],\n          ...subtaskData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default subtasksById;\n","import React, { Component, createRef } from 'react';\nimport './Textarea.scss';\n\nexport default class Textarea extends Component {\n  static defaultProps = {\n    isAutoHeightResizeEnabled: true\n  };\n\n  constructor(props) {\n    super(props);\n    this.textareaEl = createRef();\n  }\n\n  componentDidMount() {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n    this.autoHeightResize();\n  }\n\n  autoHeightResize = () => {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n\n    this.textareaEl.current.style.height = '0px'; // resets scroll height\n    this.textareaEl.current.style.height = `${\n      this.textareaEl.current.scrollHeight\n    }px`;\n  };\n\n  render() {\n    const {\n      className,\n      name,\n      value,\n      onChange,\n      placeholder,\n      isRequired,\n      onBlur,\n      onFocus,\n      onKeyDown,\n      onDragStart,\n      isReadOnly\n    } = this.props;\n    return (\n      <textarea\n        className={`textarea ${className}`}\n        id={name}\n        name={name}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={isRequired}\n        onBlur={onBlur}\n        onInput={this.autoHeightResize}\n        ref={this.textareaEl}\n        onFocus={onFocus}\n        onKeyDown={onKeyDown}\n        onDragStart={onDragStart}\n        readOnly={isReadOnly}\n      />\n    );\n  }\n}\n","export const BACKSPACE = 'Backspace';\nexport const ENTER = 'Enter';\nexport const TAB = 'Tab';\nexport const ARROW_DOWN = 'ArrowDown';\nexport const ARROW_UP = 'ArrowUp';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon } from '../Icon';\nimport { withFirebase } from '../Firebase';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport * as keys from '../../constants/keys';\nimport './CardComposer.scss';\n\nconst INITIAL_STATE = {\n  cardTitle: '',\n  isActive: false\n};\n\nclass CardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ cardTitle: '' });\n  };\n\n  onSubmit = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { cardTitle } = this.state;\n    const { boardId } = this.props.current;\n    const { listId } = this.props;\n    this.props.firebase.addCard({ boardId, listId, cardTitle });\n    this.resetForm();\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onBlur = e => {\n    if (e.target.value !== '') return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const { cardTitle, isActive } = this.state;\n\n    return (\n      <div\n        className={`card-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"card-composer__form\" onSubmit={this.onSubmit}>\n          <Textarea\n            onChange={this.onChange}\n            value={cardTitle}\n            placeholder={isActive ? 'Enter card title...' : 'Add a card'}\n            isRequired\n            name=\"cardTitle\"\n            className=\"card-composer__textarea\"\n            isAutoHeightResizeEnabled={false}\n            onKeyDown={this.onSubmit}\n          />\n          {isActive && (\n            <div className=\"card-composer__footer\">\n              <Button\n                className=\"card-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add Card\n              </Button>\n              <Button\n                className=\"card-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    boardsArray: boardSelectors.getBoardsArray(state),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardComposer)\n);\n","import React from 'react';\nimport './Menu.scss';\n\nconst Menu = ({ children, onClick, className = '', menuRef }) => {\n  return (\n    <ul className={`menu ${className}`} onClick={onClick} ref={menuRef}>\n      {children}\n    </ul>\n  );\n};\n\nexport default Menu;\n","import React from 'react';\nimport './Menu.scss';\n\nconst MenuItem = ({ children, className = '' }) => {\n  return <li className={`menu__item ${className}`}>{children}</li>;\n};\n\nexport default MenuItem;\n","import React, { Component } from 'react';\n\nexport default class Popover extends Component {\n  state = {\n    isTouchEnabled: false\n  };\n\n  componentDidMount() {\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick, false);\n  }\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  handleOutsideClick = e => {\n    const { onOutsideClick } = this.props;\n    onOutsideClick(e.target);\n  };\n\n  handleTouch = () => {\n    this.setState({\n      isTouchEnabled: true\n    });\n    // remove touch handler to prevent unnecessary refires\n    document.removeEventListener('touchstart', this.handleTouch);\n    // remove outside click handler from click events\n    document.removeEventListener('click', this.handleOutsideClick);\n    // reattach outside click handler to touchstart events\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  render() {\n    const { className, onClick, style, children } = this.props;\n    return (\n      <div className={`popover ${className}`} onClick={onClick} style={style}>\n        {children}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from '../Button';\nimport Popover from './Popover';\nimport './Popover.scss';\n\nexport default class PopoverWrapper extends Component {\n  state = {\n    isOpen: false\n  };\n\n  static defaultProps = {\n    wrapperClass: '',\n    popoverClass: '',\n    buttonProps: {},\n    align: 'left',\n    anchorEl: null\n  };\n\n  handleOutsideClick = target => {\n    if (this.componentEl && !this.componentEl.contains(target)) {\n      this.setState({\n        isOpen: false\n      });\n    }\n  };\n\n  toggleOpen = () => {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  };\n\n  handleClose = e => {\n    if (e.target.matches('input')) return;\n    this.setState(prevState => ({\n      isOpen: false\n    }));\n  };\n\n  render() {\n    const {\n      children,\n      alignInner,\n      alignOuter,\n      buttonProps,\n      wrapperClass,\n      popoverClass,\n      anchorEl\n    } = this.props;\n    const { isOpen } = this.state;\n\n    let popoverWrapperStyle = null;\n\n    if (anchorEl) {\n      const { offsetTop, offsetLeft } = anchorEl;\n      popoverWrapperStyle = {\n        position: 'absolute',\n        top: offsetTop,\n        [alignOuter]: offsetLeft\n      };\n    }\n\n    return (\n      <div\n        className={`popover-wrapper ${\n          isOpen ? 'is-active' : ''\n        } ${wrapperClass}`}\n        ref={el => (this.componentEl = el)}\n        style={popoverWrapperStyle}\n      >\n        <Button\n          type=\"button\"\n          onClick={this.toggleOpen}\n          buttonRef={this.props.buttonRef}\n          {...buttonProps}\n        />\n        {isOpen && (\n          <Popover\n            className={`align-${alignInner} ${popoverClass}`}\n            onClick={this.handleClose}\n            onOutsideClick={this.handleOutsideClick}\n          >\n            {children}\n          </Popover>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport './Card.scss';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { PopoverWrapper } from '../Popover';\nimport { Menu, MenuItem } from '../Menu';\n\nexport default class Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleCardClick = e => {\n    if (e.target.matches('button') || e.target.matches('a')) return;\n    const { cardId, onCardClick } = this.props;\n    onCardClick(cardId);\n  };\n\n  render() {\n    const { cardTitle, cardId, cardIndex } = this.props;\n    return (\n      <Draggable draggableId={cardId} index={cardIndex}>\n        {provided => (\n            <div\n              className=\"card\"\n              onClick={this.handleCardClick}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              ref={provided.innerRef}\n            >\n              <div className=\"card__header\" ref={el => (this.headerEl = el)}>\n                <div className=\"card__tags\" />\n                <h3 className=\"card__title\">{cardTitle}</h3>\n              </div>\n              <div className=\"card__footer\">\n                <div className=\"card__labels\" />\n              </div>\n            </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { Card } from '../Card';\n\nexport default class Cards extends Component {\n  static propTypes = {\n    listId: PropTypes.string.isRequired\n  };\n\n  /*\n\n  shouldComponentUpdate(nextProps) {\n    if (this.props.cards === nextProps.cards) {\n      return false;\n    }\n    return true;\n  }\n*/\n  componentDidUpdate(prevProps) {\n    if (this.props.cards.length > prevProps.cards.length) {\n      this.scrollToBottom();\n    }\n  }\n\n  scrollToBottom = () => {\n    this.listEnd.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  render() {\n    const { listId, cards, style, onCardClick, onCardDelete } = this.props;\n\n    return (\n      <Droppable droppableId={listId} type={droppableTypes.CARD}>\n        {(provided, snapshot) => (\n          <div\n            className=\"list__content\"\n            ref={provided.innerRef}\n            style={{\n              ...style,\n              minHeight: snapshot.isDraggingOver ? 80 : 16\n            }}\n            {...provided.droppableProps}\n          >\n            {cards.map((card, cardIndex) => {\n              const { cardId, cardTitle } = card;\n              return (\n                <Card\n                  key={cardId}\n                  cardTitle={cardTitle}\n                  cardId={cardId}\n                  cardIndex={cardIndex}\n                  listId={listId}\n                  onCardClick={onCardClick}\n                  onCardDelete={onCardDelete}\n                />\n              );\n            })}\n            {provided.placeholder}\n            <div\n              style={{ float: 'left', clear: 'both' }}\n              ref={el => (this.listEnd = el)}\n            />\n          </div>\n        )}\n      </Droppable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { CardComposer } from '../CardComposer';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\nimport { Input } from '../Input';\nimport Cards from './Cards';\nimport './List.scss';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listTitle: this.props.listTitle\n    };\n  }\n\n  handleListDelete = e => {\n    e.preventDefault();\n    const { listId, boardId, firebase } = this.props;\n    firebase.deleteList({ listId, boardId });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onBlur = e => {\n    const { listTitle, listId, firebase } = this.props;\n    const { listTitle: newListTitle } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newListTitle !== listTitle) {\n      firebase.updateList(listId, {\n        listTitle: newListTitle\n      });\n      console.log('updated!');\n    }\n  };\n\n  render() {\n    const {\n      cards,\n      onCardClick,\n      listId,\n      listIndex,\n      isFetchingCards\n    } = this.props;\n    if (isFetchingCards) return null;\n\n    const { listTitle, viewportHeight } = this.state;\n\n    return (\n      <Draggable draggableId={listId} index={listIndex}>\n        {provided => (\n          <>\n            <section\n              className=\"list\"\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <header\n                className=\"list__header\"\n                ref={el => (this.listHeaderEl = el)}\n              >\n                <Input\n                  className=\"list__input--title\"\n                  name=\"listTitle\"\n                  type=\"text\"\n                  value={listTitle}\n                  onChange={this.onChange}\n                  required\n                  hideLabel\n                  onBlur={this.onBlur}\n                />\n                <PopoverWrapper\n                  wrapperClass=\"list__popover-wrapper\"\n                  popoverClass=\"list__popover\"\n                  alignInner=\"left\"\n                  buttonProps={{\n                    size: 'medium',\n                    iconOnly: true,\n                    className: 'list__btn--more-actions',\n                    children: <Icon name=\"more-vertical\" />\n                  }}\n                >\n                  <Menu>\n                    <MenuItem>\n                      <a href=\"\" onClick={this.handleListDelete}>\n                        Delete\n                      </a>\n                    </MenuItem>\n                  </Menu>\n                </PopoverWrapper>\n              </header>\n              <Cards\n                cards={cards}\n                listId={listId}\n                onCardClick={onCardClick}\n                onCardDelete={this.handleCardDelete}\n              />\n              {provided.placeholder}\n              <CardComposer listId={listId} />\n            </section>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    cards: cardSelectors.getCardsArray(state, ownProps)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(List)\n);\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadCommentsById = commentsById => {\n  return {\n    type: types.LOAD_COMMENTS_BY_ID,\n    commentsById\n  };\n};\n\nexport const fetchCommentsById = () => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateCommentsById = comment => {\n  return {\n    type: types.UPDATE_COMMENTS_BY_ID,\n    comment\n  };\n};\n\nexport const fetchCardComments = cardId => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .where('cardId', '==', cardId)\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserComments = userId => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .where('to', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addComment = ({ commentId, commentData }) => {\n  return {\n    type: types.ADD_COMMENT,\n    commentId,\n    commentData\n  };\n};\n\nexport const deleteComment = commentId => {\n  return {\n    type: types.DELETE_COMMENT,\n    commentId\n  };\n};\n\nexport const updateComment = ({ commentId, commentData }) => {\n  return {\n    type: types.UPDATE_COMMENT,\n    commentId,\n    commentData\n  };\n};\n","export const LOAD_COMMENTS_BY_ID = 'LOAD_COMMENTS_BY_ID';\nexport const FETCH_COMMENTS_BY_ID = 'FETCH_COMMENTS_BY_ID';\nexport const UPDATE_COMMENTS_BY_ID = 'UPDATE_COMMENTS_BY_ID';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const UPDATE_COMMENT = 'UPDATE_COMMENT';\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\n","export const getCommentsById = state => {\n  const { commentsById } = state;\n  return commentsById;\n};\n\nexport const getCommentsArray = (state, commentIds) => {\n  const { commentsById } = state;\n  if (!commentIds) return [];\n\n  return commentIds.map(commentId => {\n    return commentsById[commentId];\n  });\n};\n","import * as types from './types';\n\nconst commentsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_COMMENTS_BY_ID: {\n      const { commentsById } = action;\n      return {\n        ...state,\n        ...commentsById\n      };\n    }\n    case types.ADD_COMMENT: {\n      const { commentId, commentData } = action;\n      return {\n        ...state,\n        [commentId]: {\n          commentId,\n          ...commentData\n        }\n      };\n    }\n    case types.DELETE_COMMENT: {\n      const { commentId } = action;\n      const { [commentId]: deletedComment, ...restOfComments } = state;\n      return restOfComments;\n    }\n    case types.UPDATE_COMMENT: {\n      const { commentId, commentData } = action;\n      return {\n        ...state,\n        [commentId]: {\n          ...state[commentId],\n          ...commentData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default commentsById;\n","import React from 'react';\nimport './Toolbar.scss';\n\nconst Toolbar = ({ className, children, ...props }) => (\n  <div className={`toolbar ${className}`} {...props}>\n    {children}\n  </div>\n);\n\nToolbar.defaultProps = {\n  className: ''\n};\n\nexport default Toolbar;\n","import React, { Component } from 'react';\nimport './Avatar.scss';\n\nexport default class Avatar extends Component {\n  static defaultProps = {\n    imgSrc: null,\n    classes: {\n      avatar: '',\n      img: '',\n      placeholder: ''\n    },\n    size: 'md',\n    variant: 'circle'\n  };\n\n  getUserInitials = fullName => {\n    return fullName\n      .split(' ')\n      .map(name => name.charAt(0))\n      .join('')\n      .toUpperCase();\n  };\n\n  render() {\n    const {\n      imgSrc,\n      imgProps,\n      classes,\n      fullName,\n      variant,\n      color,\n      size\n    } = this.props;\n    return (\n      <div\n        className={`avatar avatar--${size} avatar--${variant} ${\n          classes.avatar\n        }`}\n      >\n        {imgSrc !== null ? (\n          <img\n            src={imgSrc}\n            alt={fullName}\n            className={`avatar__img ${classes.img}`}\n            {...imgProps}\n          />\n        ) : (\n          <div\n            className={`avatar__placeholder ${classes.placeholder}`}\n            style={{ backgroundColor: color }}\n          >\n            {this.getUserInitials(fullName)}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Icon } from '../Icon';\nimport { PopoverWrapper } from '../Popover';\n\nexport default class CardEditorAssignMember extends Component {\n  render() {\n    const { children } = this.props;\n\n    return (\n      <PopoverWrapper\n        wrapperClass=\"card-editor__popover-wrapper card-editor__member-search-popover-wrapper\"\n        popoverClass=\"card-editor__popover card-editor__member-search-popover\"\n        alignOuter=\"left\"\n        alignInner=\"left\"\n        buttonProps={{\n          size: 'md',\n          iconOnly: true,\n          className: 'card-editor__toolbar-btn',\n          children: <Icon name=\"users\" />,\n          buttonRef: this.props.buttonRef\n        }}\n      >\n        {children}\n      </PopoverWrapper>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Input } from '../Input';\nimport { Avatar } from '../Avatar';\nimport { Icon } from '../Icon';\nimport * as keys from '../../constants/keys';\nimport './MemberSearch.scss';\n\nexport default class MemberSearch extends Component {\n  state = {\n    query: '',\n    isActive: false,\n    isTouchEnabled: false,\n    selectedMember: '',\n    selectedIndex: null,\n    filteredList: this.props.users\n  };\n\n  componentDidMount() {\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick, false);\n    this.inputEl.focus();\n  }\n\n  handleOutsideClick = e => {\n    if (this.state.query !== '') return;\n    if (!this.memberSearchEl.contains(e.target)) {\n      this.setState({\n        isActive: false\n      });\n    }\n  };\n\n  handleTouch = () => {\n    this.setState({\n      isTouchEnabled: true\n    });\n    // remove touch handler to prevent unnecessary refires\n    document.removeEventListener('touchstart', this.handleTouch);\n    // remove outside click handler from click events\n    document.removeEventListener('click', this.handleOutsideClick);\n    // reattach outside click handler to touchstart events\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  matchUser = (user, query) => {\n    const { name, email, username } = user;\n    const regExp = new RegExp(query, 'i');\n    return regExp.test(name) || regExp.test(email) || regExp.test(username);\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({\n      query: '',\n      isActive: false,\n      isTouchEnabled: false,\n      selectedMember: '',\n      selectedIndex: null,\n      filteredList: this.props.users\n    });\n  };\n\n  onChange = e => {\n    const { users } = this.props;\n    const { selectedMember, selectedIndex } = this.state;\n    const query = e.target.value;\n    const filteredList = users.filter(user => this.matchUser(user, query));\n    const newIndex = filteredList.indexOf(selectedMember);\n    const persistSelectedMember = newIndex !== -1;\n\n    this.setState({\n      selectedMember: persistSelectedMember\n        ? selectedMember\n        : filteredList.length > 0\n        ? filteredList[0].userId\n        : '',\n      selectedIndex: persistSelectedMember ? newIndex : 0,\n      query,\n      filteredList\n    });\n  };\n\n  onKeyDown = e => {\n    if (\n      e.key !== keys.TAB &&\n      e.key !== keys.ARROW_DOWN &&\n      e.key !== keys.ARROW_UP &&\n      e.key !== keys.ENTER\n    )\n      return;\n\n    const { filteredList, selectedIndex, selectedMember } = this.state;\n    const { onMemberClick } = this.props;\n    const nextIndex =\n      selectedIndex === filteredList.length - 1 ? 0 : selectedIndex + 1;\n    const prevIndex =\n      selectedIndex === 0 ? filteredList.length - 1 : selectedIndex - 1;\n\n    // eslint-disable-next-line default-case\n    switch (e.key) {\n      case keys.ARROW_DOWN:\n      // eslint-disable-next-line no-fallthrough\n      case keys.TAB: {\n        this.setState({\n          selectedMember: filteredList[nextIndex].userId,\n          selectedIndex: nextIndex\n        });\n        break;\n      }\n      case keys.ARROW_UP: {\n        this.setState({\n          selectedMember: filteredList[prevIndex].userId,\n          selectedIndex: prevIndex\n        });\n        break;\n      }\n      case keys.ENTER: {\n        if (selectedMember === '') return;\n        onMemberClick(selectedMember);\n        break;\n      }\n    }\n\n    e.preventDefault();\n  };\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  render() {\n    const { users, onMemberClick, assignedMembers } = this.props;\n    const { query, isActive, filteredList, selectedMember } = this.state;\n\n    return (\n      <div\n        className=\"member-search__wrapper\"\n        ref={el => (this.memberSearchEl = el)}\n      >\n        <Input\n          name=\"query\"\n          className=\"member-search\"\n          onChange={this.onChange}\n          value={query}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          type=\"text\"\n          autoComplete=\"off\"\n          hideLabel\n          placeholder=\"Assign or remove member\"\n          onKeyDown={this.onKeyDown}\n          inputRef={el => (this.inputEl = el)}\n        />\n        {isActive && (\n          <ul className=\"member-search__list\">\n            {filteredList.length > 0 ? (\n              filteredList.map((user, i) => {\n                const { name, photoURL, email, username, userId } = user;\n                const isAssigned =\n                  assignedMembers && assignedMembers.indexOf(userId) !== -1;\n                return (\n                  <li\n                    className={`member-search__item ${\n                      selectedMember === userId ? 'is-selected' : ''\n                    }`}\n                    onClick={() => onMemberClick(userId)}\n                    key={userId}\n                    id={userId}\n                  >\n                    <Icon name={isAssigned ? 'user-minus' : 'user-plus'} />\n                    <Avatar\n                      classes={{\n                        avatar: 'member-search__avatar--sm',\n                        placeholder: 'member-search__avatar-placeholder--sm'\n                      }}\n                      fullName={name}\n                      size=\"sm\"\n                      variant=\"circle\"\n                      imgSrc={photoURL}\n                    />\n                    <span className=\"member-search__info member-search__name\">\n                      {name}\n                    </span>\n                    <span className=\"member-search__info member-search__username\">\n                      {username}\n                    </span>\n                    <span className=\"member-search__info member-search__email\">\n                      {email}\n                    </span>\n                  </li>\n                );\n              })\n            ) : (\n              <li className=\"member-search__item\">\n                <span className=\"member-search__no-match\">\n                  No matches found\n                </span>\n              </li>\n            )}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\n\nconst CardEditorMoreActions = ({ onMenuClick }) => (\n  <PopoverWrapper\n    wrapperClass=\"card-editor__popover-wrapper\"\n    popoverClass=\"card-editor__popover\"\n    alignOuter=\"right\"\n    alignInner=\"right\"\n    buttonProps={{\n      size: 'md',\n      iconOnly: true,\n      className: 'card-editor__toolbar-btn',\n      children: <Icon name=\"more-horizontal\" />\n    }}\n  >\n    <Menu onClick={onMenuClick}>\n      <MenuItem>\n        <a href=\"\" data-action=\"delete\">\n          Delete card\n        </a>\n      </MenuItem>\n    </Menu>\n  </PopoverWrapper>\n);\n\nexport default CardEditorMoreActions;\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport './Checkbox.scss';\n\nconst Checkbox = ({\n  value,\n  id,\n  name,\n  isChecked,\n  onClick,\n  onChange,\n  className,\n  labelClass,\n  ...props\n}) => {\n  return (\n    <label\n      htmlFor={id}\n      onClick={onClick}\n      className={`checkbox__label ${labelClass}`}\n    >\n      {isChecked && <Icon name=\"check\" />}\n      <input\n        type=\"checkbox\"\n        id={id}\n        value={value}\n        name={name}\n        checked={isChecked}\n        className={`checkbox ${className}`}\n        onChange={onChange}\n        {...props}\n      />\n    </label>\n  );\n};\n\nCheckbox.defaultProps = {\n  className: '',\n  labelClass: ''\n};\n\nexport default Checkbox;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Checkbox } from '../Checkbox';\nimport { Textarea } from '../Textarea';\n\nconst appRoot = document.getElementById('root');\n\nexport default class CardEditorSubtask extends Component {\n  constructor(props) {\n    super(props);\n    this.portal = document.createElement('div');\n  }\n\n  componentDidMount() {\n    appRoot.appendChild(this.portal);\n  }\n\n  onDragStart = e => {\n    console.log('dragstart');\n    this.setState({\n      isReadOnly: true\n    });\n  };\n\n  componentWillUnmount() {\n    appRoot.removeChild(this.portal);\n  }\n\n  render() {\n    const {\n      subtaskId,\n      index,\n      text,\n      isCompleted,\n      toggleCompleted,\n      onChange,\n      onBlur,\n      onKeyDown\n    } = this.props;\n\n    return (\n      <Draggable draggableId={subtaskId} index={index}>\n        {(provided, snapshot) => {\n          const inner = (\n            <li\n              className=\"card-editor__subtask\"\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <Checkbox\n                id={`cb-${subtaskId}`}\n                value={subtaskId}\n                name={subtaskId}\n                isChecked={isCompleted}\n                onChange={toggleCompleted}\n                className=\"card-editor__checkbox\"\n                labelClass=\"card-editor__checkbox-label\"\n              />\n              <Textarea\n                value={text}\n                onChange={onChange}\n                onBlur={onBlur}\n                name={subtaskId}\n                className=\"card-editor__textarea--subtask\"\n                onKeyDown={onKeyDown}\n                onDragStart={this.onDragStart}\n              />\n            </li>\n          );\n          return snapshot.isDragging\n            ? ReactDOM.createPortal(inner, this.portal)\n            : inner;\n        }}\n      </Draggable>\n    );\n  }\n}\n","/* eslint-disable no-nested-ternary */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/users';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { commentActions, commentSelectors } from '../../ducks/comments';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { Avatar } from '../Avatar';\nimport './CardEditorComment.scss';\n\nclass CardEditorComment extends Component {\n  state = {\n    secondsElapsed: 0\n  };\n\n  componentDidMount() {\n    const { createdAt } = this.props.comment;\n    const secondsSinceCreation =\n      Math.floor(Date.now() / 1000) -\n      Math.floor(createdAt.toDate().getTime() / 1000);\n\n    this.setState({\n      secondsElapsed: secondsSinceCreation\n    });\n\n    this.interval = setInterval(this.tick, 1000);\n  }\n\n  tick = () => {\n    this.setState(prevState => ({\n      secondsElapsed: prevState.secondsElapsed + 1\n    }));\n  };\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  handleLikeClick = () => {\n    const { handleLike, comment } = this.props;\n    const { commentId } = comment;\n    handleLike(commentId);\n  };\n\n  render() {\n    const { user, comment } = this.props;\n    const { secondsElapsed } = this.state;\n    const { name, photoURL } = user;\n    const {\n      text,\n      createdAt,\n      lastModifiedAt,\n      likes,\n      to,\n      from,\n      isPinned\n    } = comment;\n    if (!createdAt) return null;\n    const date = new Date();\n    const dateCreatedFull = createdAt.toDate();\n    const timeCreated = dateCreatedFull.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true\n    });\n    const dateCreated = dateCreatedFull.toDateString();\n    const isToday = date.toDateString() === dateCreated;\n    const isYesterday = date.setDate(date.getDate() - 1);\n\n    return (\n      <div\n        className={`card-editor__comment-wrapper ${\n          isPinned ? 'is-pinned' : ''\n        }`}\n      >\n        <Avatar\n          classes={{\n            avatar: 'card-editor__comment-avatar',\n            placeholder: 'card-editor__comment-avatar-placeholder'\n          }}\n          fullName={name}\n          size=\"sm\"\n          variant=\"circle\"\n          imgSrc={photoURL}\n        />\n        <div className=\"card-editor__comment\">\n          <div className=\"card-editor__comment-header\">\n            <div className=\"card-editor__comment-details\">\n              <span className=\"card-editor__name\">{name}</span>\n              <span className=\"card-editor__timestamp\">\n                {secondsElapsed < 60 // less than one minute\n                  ? 'Just now'\n                  : secondsElapsed < 120 // less than 2 minutes\n                  ? '1 minute ago'\n                  : secondsElapsed < 3600 // less than 1 hour\n                  ? `${Math.floor(secondsElapsed / 60)} minutes ago`\n                  : secondsElapsed < 7200 // less than 2 hours\n                  ? '1 hour ago'\n                  : secondsElapsed < 21600 // less than 6 hours\n                  ? `${Math.floor(secondsElapsed / 3600)} hours ago`\n                  : isToday\n                  ? `Today at ${timeCreated}`\n                  : isYesterday\n                  ? `Yesterday at ${timeCreated}`\n                  : `${dateCreated} ${timeCreated}`}\n              </span>\n            </div>\n            <Button\n              className=\"card-editor__likes\"\n              onClick={this.handleLikeClick}\n              size=\"sm\"\n            >\n              <Icon name=\"thumbs-up\" />\n              <span className=\"card-editor__likes-counter\">\n                {likes.length > 0 ? likes.length : ''}\n              </span>\n            </Button>\n          </div>\n          <div className=\"card-editor__comment-body\">{text}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state, ownProps.comment.from),\n    current: currentSelectors.getCurrent(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateCardsById: card => dispatch(cardActions.updateCardsById(card)),\n    fetchCardComments: cardId =>\n      dispatch(commentActions.fetchCardComments(cardId)),\n    addComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.addComment({ commentId, commentData })),\n    deleteComment: commentId =>\n      dispatch(commentActions.deleteComment(commentId)),\n    updateComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.updateComment({ commentId, commentData }))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardEditorComment)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { withFirebase } from '../Firebase';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { subtaskActions, subtaskSelectors } from '../../ducks/subtasks';\nimport { userSelectors } from '../../ducks/users';\nimport { commentActions, commentSelectors } from '../../ducks/comments';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { Modal } from '../Modal';\nimport { Toolbar } from '../Toolbar';\nimport { Avatar } from '../Avatar';\nimport CardEditorAssignMember from './CardEditorAssignMember';\nimport { MemberSearch } from '../MemberSearch';\nimport CardEditorMoreActions from './CardEditorMoreActions';\nimport * as keys from '../../constants/keys';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport CardEditorSubtask from './CardEditorSubtask';\nimport CardEditorComment from './CardEditorComment';\nimport './CardEditor.scss';\n\nclass CardEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching:\n        this.props.commentIds !== undefined && this.props.commentIds.length > 0,\n      cardTitle: this.props.cardTitle,\n      cardDescription: this.props.cardDescription || '',\n      newSubtask: '',\n      cardSubtasks: this.props.subtasksArray.reduce((subtasks, subtask) => {\n        const { subtaskId, text, isCompleted } = subtask;\n        subtasks[subtaskId] = {\n          text,\n          isCompleted\n        };\n        return subtasks;\n      }, {}),\n      newComment: '',\n      currentFocus: null,\n      subtaskIds: this.props.subtaskIds || []\n    };\n    this.membersListButton = React.createRef();\n  }\n\n  componentDidMount() {\n    const {\n      cardId,\n      commentIds,\n      firebase,\n      fetchCardComments,\n      addComment,\n      deleteComment,\n      updateComment\n    } = this.props;\n\n    if (commentIds && commentIds.length > 0) {\n      fetchCardComments(cardId).then(() => {\n        this.setState({\n          isFetching: false\n        });\n      });\n    }\n\n    this.commentObserver = firebase.db\n      .collection('comments')\n      .where('cardId', '==', cardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const commentId = change.doc.id;\n          const commentData = change.doc.data();\n          if (change.type === 'added') {\n            addComment({ commentId, commentData });\n          }\n          if (change.type === 'modified') {\n            updateComment({ commentId, commentData });\n          }\n          if (change.type === 'removed') {\n            deleteComment(commentId);\n          }\n        });\n      });\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if ('subtaskIds' in props === false) return null;\n    if (props.subtaskIds.length !== state.subtaskIds.length) {\n      return {\n        cardSubtasks: props.subtasksArray.reduce((subtasks, subtask) => {\n          const { subtaskId, text, isCompleted } = subtask;\n          subtasks[subtaskId] = {\n            text,\n            isCompleted\n          };\n          return subtasks;\n        }, {}),\n        subtaskIds: props.subtaskIds\n      };\n    }\n    return null;\n  }\n\n  updateCardSubtasks = () => {\n    const { subtasksArray } = this.props;\n    this.setState({\n      cardSubtasks: subtasksArray.reduce((subtasks, subtask) => {\n        const { subtaskId, text, isCompleted } = subtask;\n        subtasks[subtaskId] = {\n          text,\n          isCompleted\n        };\n        return subtasks;\n      }, {})\n    });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  deleteCard = () => {\n    const { cardId, listId, firebase, handleCardEditorClose } = this.props;\n    firebase.deleteCard({ cardId, listId });\n    handleCardEditorClose();\n  };\n\n  onBlur = e => {\n    const { [cardKey]: currentValue, cardId, firebase } = this.props;\n    const cardKey = e.target.name;\n    const { [cardKey]: updatedValue } = this.state;\n\n    // When field loses focus, update card if change is detected\n\n    if (updatedValue !== currentValue) {\n      firebase.updateCard(cardId, {\n        [cardKey]: updatedValue\n      });\n      console.log('updated!');\n    }\n\n    this.setState({\n      currentFocus: null\n    });\n  };\n\n  addComment = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { userId, firebase, cardId, boardId } = this.props;\n    const { newComment: text } = this.state;\n    firebase.addComment({ userId, text, cardId, boardId });\n    this.resetForm('newComment');\n    e.preventDefault();\n  };\n\n  resetForm = key => {\n    this.setState({\n      [key]: ''\n    });\n  };\n\n  addSubtask = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { userId, firebase, cardId, boardId } = this.props;\n    const { newSubtask: text } = this.state;\n    firebase.addSubtask({ userId, text, cardId, boardId });\n    this.resetForm('newSubtask');\n    e.preventDefault();\n  };\n\n  onFocus = e => {\n    this.setState({\n      currentFocus: e.target.name\n    });\n  };\n\n  handleModalClick = e => {\n    const { currentFocus } = this.state;\n    if (\n      (currentFocus === 'newComment' &&\n        !this.commentFormEl.contains(e.target)) ||\n      (currentFocus === 'newSubtask' && !this.newSubtaskFormEl.contains(e.target))\n    ) {\n      this.setState({\n        currentFocus: null\n      });\n    }\n  };\n\n  handleMoreActions = e => {\n    if (!e.target.matches('a')) return;\n    const { action } = e.target.dataset;\n    switch (action) {\n      case 'delete':\n        this.deleteCard();\n        break;\n    }\n    e.preventDefault(); // prevents page reload\n  };\n\n  onSubtaskChange = e => {\n    const { cardSubtasks } = this.state;\n    this.setState({\n      cardSubtasks: {\n        ...cardSubtasks,\n        [e.target.name]: {\n          ...cardSubtasks[e.target.name],\n          text: e.target.value\n        }\n      }\n    });\n  };\n\n  handleCheckboxChange = e => {\n    const subtaskId = e.target.name;\n    this.toggleSubtaskCompleted(subtaskId);\n  };\n\n  toggleSubtaskCompleted = subtaskId => {\n    const { isCompleted } = this.state.cardSubtasks[subtaskId];\n    this.setState(prevState => ({\n      cardSubtasks: {\n        ...prevState.cardSubtasks,\n        [subtaskId]: {\n          ...prevState.cardSubtasks[subtaskId],\n          isCompleted: !prevState.cardSubtasks[subtaskId].isCompleted\n        }\n      }\n    }));\n    const { firebase } = this.props;\n    firebase.updateSubtask(subtaskId, { isCompleted: !isCompleted });\n  };\n\n  updateSubtaskText = e => {\n    const subtaskId = e.target.name;\n    const { cardSubtasks } = this.state;\n    const { text } = cardSubtasks[subtaskId];\n    const { firebase } = this.props;\n    firebase.updateSubtask(subtaskId, { text });\n  };\n\n  deleteSubtask = e => {\n    if (e.target.value !== '' || e.key !== keys.BACKSPACE) return;\n    const { cardId, firebase } = this.props;\n    const subtaskId = e.target.name;\n    firebase.deleteSubtask({ subtaskId, cardId });\n  };\n\n  moveSubtask = ({ destination, draggableId, source }) => {\n    if (!destination) return;\n    if (destination.index === source.index) return;\n    const { firebase } = this.props;\n    const { subtaskIds } = this.state;\n    const updatedSubtaskIds = [...subtaskIds];\n    updatedSubtaskIds.splice(source.index, 1);\n    updatedSubtaskIds.splice(destination.index, 0, draggableId);\n    this.setState({\n      subtaskIds: updatedSubtaskIds\n    });\n    firebase.updateCard(source.droppableId, {\n      subtaskIds: updatedSubtaskIds\n    });\n  };\n\n  handleCommentLike = commentId => {\n    const { firebase, userId, commentsById } = this.props;\n    const { likes } = commentsById[commentId];\n\n    if (likes.indexOf(userId) === -1) {\n      firebase.updateComment(commentId, {\n        likes: firebase.addToArray(userId)\n      });\n    } else {\n      firebase.updateComment(commentId, {\n        likes: firebase.removeFromArray(userId)\n      });\n    }\n  };\n\n  assignMember = userId => {\n    const { cardId, boardId, assignedTo, firebase } = this.props;\n\n    if (assignedTo.indexOf(userId) !== -1) {\n      firebase.updateCard(cardId, {\n        assignedTo: firebase.removeFromArray(userId),\n        lastModifiedAt: firebase.getTimestamp()\n      });\n    } else {\n      firebase.assignCard({ cardId, boardId, userId }); \n    }\n  };\n\n  componentWillUnmount() {\n    this.commentObserver();\n  }\n\n  render() {\n    const {\n      handleCardEditorClose,\n      cardId,\n      commentIds,\n      assignedTo,\n      commentsArray,\n      usersArray,\n      membersArray,\n      currentUser\n    } = this.props;\n    const {\n      cardTitle,\n      cardDescription,\n      newComment,\n      currentFocus,\n      newSubtask,\n      cardSubtasks,\n      subtaskIds,\n      isFetching\n    } = this.state;\n    const hasSubtasks = subtaskIds !== undefined && subtaskIds.length > 0;\n    const hasComments = commentIds !== undefined && commentIds.length > 0;\n    const isAssigned = !!assignedTo && assignedTo.length > 0;\n    const isNewCommentInvalid = newComment === '';\n    const isNewSubtaskInvalid = newSubtask === '';\n    const commentFormIsFocused = currentFocus === 'newComment';\n    const newSubtaskFormIsFocused = currentFocus === 'newSubtask';\n\n    console.log(this.membersListButton);\n\n    if (isFetching) return null;\n\n    return (\n      <Modal\n        onModalClose={handleCardEditorClose}\n        className=\"card-editor\"\n        onModalClick={this.handleModalClick}\n        size=\"lg\"\n        id=\"cardEditor\"\n      >\n        <Toolbar className=\"card-editor__toolbar\">\n          <CardEditorAssignMember buttonRef={this.membersListButton}>\n            <MemberSearch\n              users={usersArray}\n              assignedMembers={assignedTo}\n              onMemberClick={this.assignMember}\n            />\n          </CardEditorAssignMember>\n          <CardEditorMoreActions onMenuClick={this.handleMoreActions} />\n        </Toolbar>\n        <form\n          name=\"editCardForm\"\n          onFocus={this.onFocus}\n          className=\"card-editor__edit-card-form\"\n        >\n          <Textarea\n            className=\"card-editor__textarea--title\"\n            name=\"cardTitle\"\n            value={cardTitle}\n            onChange={this.onChange}\n            required\n            onBlur={this.onBlur}\n            onFocus={this.onFocus}\n          />\n          <div className=\"card-editor__section\">\n            <div className=\"card-editor__section-icon\">\n              <Icon name=\"user\" />\n            </div>\n            {isAssigned && (\n              <div className=\"card-editor__members\">\n                {membersArray.map(member => {\n                  const { name, photoURL, userId } = member;\n                  return (\n                    <Avatar\n                      classes={{\n                        avatar: 'card-editor__avatar',\n                        placeholder: 'card-editor__avatar-placeholder'\n                      }}\n                      fullName={name}\n                      size=\"sm\"\n                      variant=\"circle\"\n                      imgSrc={photoURL}\n                      key={userId}\n                    />\n                  );\n                })}\n              </div>\n            )}\n            <Button type=\"button\" className=\"card-editor__btn--add-member\" onClick={() => this.membersListButton.current.click()}>\n            <Icon name=\"plus-circle\" />{!isAssigned && <span className=\"card-editor__placeholder--unassigned\">Assign member</span>}\n          </Button>\n          </div>\n          <div\n            className={`card-editor__section ${\n              currentFocus === 'cardDescription' ? 'is-focused' : ''\n            }`}\n          >\n            <div className=\"card-editor__section-icon\">\n              <Icon name=\"edit-3\" />\n            </div>\n            <Textarea\n              className=\"card-editor__textarea card-editor__textarea--description\"\n              name=\"cardDescription\"\n              value={cardDescription}\n              onChange={this.onChange}\n              placeholder=\"Add a description\"\n              onBlur={this.onBlur}\n              onFocus={this.onFocus}\n            />\n          </div>\n        </form>\n        <div\n          className={`card-editor__section ${\n            newSubtaskFormIsFocused ? 'is-focused' : ''\n          }`}\n        >\n        <div className=\"card-editor__section-header\">\n        <div className=\"card-editor__section-icon\">\n            <Icon name=\"check-square\" />\n          </div>\n          <h3 className=\"card-editor__section-title\">Subtasks</h3>\n          <hr className=\"card-editor__hr\" />\n        </div>\n          {hasSubtasks && (\n            <DragDropContext onDragEnd={this.moveSubtask}>\n              <Droppable droppableId={cardId} type={droppableTypes.TASK}>\n                {provided => (\n                  <ul\n                    className=\"card-editor__subtasks\"\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                  >\n                    {subtaskIds.map((subtaskId, index) => {\n                      return (\n                        <CardEditorSubtask\n                          subtaskId={subtaskId}\n                          index={index}\n                          text={cardSubtasks[subtaskId].text}\n                          isCompleted={cardSubtasks[subtaskId].isCompleted}\n                          toggleCompleted={this.handleCheckboxChange}\n                          onChange={this.onSubtaskChange}\n                          onBlur={this.updateSubtaskText}\n                          onKeyDown={this.deleteSubtask}\n                          key={subtaskId}\n                        />\n                      );\n                    })}\n                    {provided.placeholder}\n                  </ul>\n                )}\n              </Droppable>\n            </DragDropContext>\n          )}\n          <div className=\"card-editor__section-icon\">\n          {\n            newSubtaskFormIsFocused ? <div className=\"card-editor__checkbox\"></div>\n            : <Icon name=\"plus-circle\" />\n          }\n          </div>\n          <form\n            name=\"newSubtaskForm\"\n            className={`card-editor__new-subtask-form ${\n              currentFocus === 'newSubtask' ? 'is-focused' : ''\n            }`}\n            ref={el => (this.newSubtaskFormEl = el)}\n            onSubmit={this.addSubtask}\n          >\n            <Textarea\n              className=\"card-editor__textarea card-editor__textarea--new-subtask\"\n              name=\"newSubtask\"\n              value={newSubtask}\n              onChange={this.onChange}\n              placeholder=\"Add a subtask\"\n              onFocus={this.onFocus}\n              onKeyDown={this.addSubtask}\n            />\n            {currentFocus === 'newSubtask' && (\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isNewSubtaskInvalid}\n                onClick={this.addSubtask}\n                className=\"card-editor__btn--add-subtask\"\n              >\n                Add subtask\n              </Button>\n            )}\n          </form>\n        </div>\n        <div\n          className={`card-editor__section ${\n            commentFormIsFocused ? 'is-focused' : ''\n          }`}\n        >\n        \n        <div className=\"card-editor__section-header\">\n        <div className=\"card-editor__section-icon\">\n            <Icon name=\"message-circle\" />\n          </div>\n          <h3 className=\"card-editor__section-title\">Comments</h3>\n          <hr className=\"card-editor__hr\" />\n        </div>\n        \n          {hasComments && (\n            <div className=\"card-editor__comments\">\n              {commentsArray.map(comment => {\n                const { commentId } = comment;\n                return (\n                  <CardEditorComment\n                    key={commentId}\n                    comment={comment}\n                    handleLike={this.handleCommentLike}\n                  />\n                );\n              })}\n            </div>\n          )}\n          <Avatar\n          classes={{\n            avatar: 'card-editor__avatar',\n            placeholder: 'card-editor__avatar-placeholder'\n          }}\n          fullName={currentUser.name}\n          size=\"sm\"\n          variant=\"circle\"\n          imgSrc={currentUser.photoURL}\n        />\n          <form\n            name=\"commentForm\"\n            className={`card-editor__comment-form ${\n              commentFormIsFocused ? 'is-focused' : ''\n            }`}\n            ref={el => (this.commentFormEl = el)}\n            onSubmit={this.addComment}\n          >\n            <Textarea\n              className=\"card-editor__textarea card-editor__textarea--comment\"\n              name=\"newComment\"\n              value={newComment}\n              onChange={this.onChange}\n              placeholder=\"Write a comment...\"\n              onFocus={this.onFocus}\n              onKeyDown={this.addComment}\n            />\n            {commentFormIsFocused && (\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isNewCommentInvalid}\n                onClick={this.addComment}\n                name=\"newCommentSubmit\"\n                className=\"card-editor__btn--submit-comment\"\n              >\n                Send\n              </Button>\n            )}\n          </form>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    userId: currentSelectors.getCurrentUserId(state),\n    currentUser: userSelectors.getCurrentUserData(state),\n    subtasksArray: subtaskSelectors.getSubtasksArray(state, ownProps.subtaskIds),\n    commentsArray: commentSelectors.getCommentsArray(\n      state,\n      ownProps.commentIds\n    ),\n    commentsById: commentSelectors.getCommentsById(state),\n    usersArray: userSelectors.getUsersArray(state),\n    membersArray: userSelectors.getMembersArray(state, ownProps.assignedTo)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCardComments: cardId =>\n      dispatch(commentActions.fetchCardComments(cardId)),\n    addComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.addComment({ commentId, commentData })),\n    deleteComment: commentId =>\n      dispatch(commentActions.deleteComment(commentId)),\n    updateComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.updateComment({ commentId, commentData }))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardEditor)\n);\n","\n/**\n * Checks if two arrays or objects are equal\n * @param {Array|Object} value\n * @param {Array|Object} other\n */\n\n// eslint-disable-next-line import/prefer-default-export\nexport const isEqual = (value, other) => {\n  const type = Object.prototype.toString.call(value);\n\n  // If both objects are not the same type, return false\n  if (type !== Object.prototype.toString.call(other)) return false;\n\n  const typeObj = '[object Object]';\n  const typeArr = '[object Array]';\n  // If items are neither objects nor arrays, return false\n  if (type !== typeObj && type !== typeArr) return false;\n\n  // Compare length of two items\n  const valueLen = type === typeArr ? value.length : Object.keys(value).length;\n  const otherLen = type === typeArr ? other.length : Object.keys(other).length;\n  if (valueLen !== otherLen) return false;\n\n  const compare = (item1, item2) => {\n    const typeFunc = '[object Function]';\n    const itemType = Object.prototype.toString.call(item1);\n    if (itemType !== Object.prototype.toString.call(item2)) return false;\n    if (itemType === typeObj || itemType === typeArr) {\n      return isEqual(item1, item2);\n    }\n    if (itemType === typeFunc) {\n      return item1.toString() === item2.toString();\n    }\n    return item1 === item2;\n  };\n\n  if (type === typeArr) {\n    for (let i = 0; i < valueLen; i++) {\n      if (!compare(value[i], other[i])) return false;\n    }\n  } else {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (compare(value[key], other[key]) === false) return false;\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * Delays callback execution until next browser repaint\n * Best used for `scroll` and `resize` window events\n * @param {Function} callback - The function to debounce\n */\n\nexport const windowDebouncer = callback => {\n  let request;\n\n  return (...args) => {\n    const context = this;\n\n    if (request) {\n      window.cancelAnimationFrame(request);\n    }\n\n    request = window.requestAnimationFrame(() => {\n      callback.apply(context, args);\n    });\n  };\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { withFirebase } from '../Firebase';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { cardActions, cardSelectors } from '../../ducks/cards';\nimport { subtaskActions, subtaskSelectors } from '../../ducks/subtasks';\nimport * as ROUTES from '../../constants/routes';\nimport Board from './Board';\nimport { Input } from '../Input';\nimport { List } from '../List';\nimport { CardEditor } from '../CardEditor';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { utils } from '../../utils';\nimport './Board.scss';\n\nclass BoardContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: true,\n      isDragging: false,\n      isCardEditorOpen: false,\n      boardTitle: this.props.boardTitle\n    };\n  }\n\n  componentDidMount() {\n    const {\n      current,\n      fetchListsById,\n      fetchCardsById,\n      fetchCardSubtasks,\n      firebase,\n      updateListsById,\n      updateCardsById,\n      boardId,\n      board,\n      updateListIds,\n      addSubtask,\n      updateSubtask,\n      deleteSubtask,\n      selectBoard\n    } = this.props;\n\n    if (current.boardId !== boardId) {\n      selectBoard(boardId);\n    }\n\n    fetchListsById(boardId);\n    fetchCardsById(boardId);\n    fetchCardSubtasks(boardId).then(() => {\n      this.setState({\n        isFetching: false\n      });\n    });\n    this.boardObserver = firebase.getBoardDoc(boardId).onSnapshot(snapshot => {\n      const updatedBoard = snapshot.data();\n      if (!utils.isEqual(updatedBoard.listIds, board.listIds)) {\n        updateListIds(boardId, updatedBoard.listIds);\n      }\n    });\n    this.listObserver = firebase.db\n      .collection('lists')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const list = {\n            [change.doc.id]: change.doc.data()\n          };\n          updateListsById(list);\n        });\n      });\n    this.subtaskObserver = firebase.db\n      .collection('subtasks')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const subtaskId = change.doc.id;\n          const subtaskData = change.doc.data();\n          if (change.type === 'added') {\n            addSubtask({ subtaskId, subtaskData });\n          }\n          if (change.type === 'modified') {\n            updateSubtask({ subtaskId, subtaskData });\n          }\n          if (change.type === 'removed') {\n            deleteSubtask(subtaskId);\n          }\n        });\n      });\n    this.cardObserver = firebase.db\n      .collection('cards')\n      .where('boardId', '==', boardId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const card = {\n            [change.doc.id]: {\n              cardId: change.doc.id,\n              ...change.doc.data()\n            }\n          };\n          updateCardsById(card);\n        });\n      });\n    console.log('mounted');\n  }\n\n  componentWillUnmount() {\n    this.boardObserver();\n    this.listObserver();\n    this.cardObserver();\n    this.subtaskObserver();\n  }\n\n  onDragStart = () => {\n    this.setState({\n      isDragging: true\n    });\n  };\n\n  onDragEnd = ({ destination, draggableId, source, type }) => {\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    const { firebase } = this.props;\n    if (type === droppableTypes.CARD) {\n      const { listsById } = this.props;\n      const isMovedWithinList = source.droppableId === destination.droppableId;\n      const updatedCardIds = [...listsById[destination.droppableId].cardIds];\n      if (isMovedWithinList) {\n        updatedCardIds.splice(source.index, 1);\n        updatedCardIds.splice(destination.index, 0, draggableId);\n        firebase.updateList(source.droppableId, {\n          cardIds: updatedCardIds\n        });\n      } else {\n        updatedCardIds.splice(destination.index, 0, draggableId);\n        firebase.moveCardToList({\n          cardId: draggableId,\n          origListId: source.droppableId,\n          newListId: destination.droppableId,\n          updatedCardIds\n        });\n      }\n    }\n\n    if (type === droppableTypes.LIST) {\n      const { boardsById, current, reorderLists } = this.props;\n      const { boardId } = current;\n      const updatedListIds = [...boardsById[boardId].listIds];\n      updatedListIds.splice(source.index, 1);\n      updatedListIds.splice(destination.index, 0, draggableId);\n      firebase.updateBoard(boardId, {\n        listIds: updatedListIds\n      });\n      reorderLists(boardId, updatedListIds);\n    }\n\n    this.setState({\n      isDragging: false\n    });\n  };\n\n  toggleCardEditor = () => {\n    this.setState(prevState => ({\n      isCardEditorOpen: !prevState.isCardEditorOpen\n    }));\n  };\n\n  handleCardClick = cardId => {\n    this.props.selectCard(cardId);\n    this.toggleCardEditor();\n  };\n\n  onTitleChange = e => {\n    this.setState({\n      boardTitle: e.target.value\n    });\n  };\n\n  onTitleBlur = e => {\n    const { boardTitle, boardId, firebase } = this.props;\n    const { boardTitle: newBoardTitle } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newBoardTitle !== boardTitle) {\n      firebase.updateBoard(boardId, {\n        boardTitle: newBoardTitle\n      });\n      console.log('updated!');\n    }\n  };\n\n  render() {\n    const { isFetching, isCardEditorOpen } = this.state;\n    const { current, listsArray, cardsById, boardId, board } = this.props;\n    if (isFetching) return null;\n    const { cardId } = current;\n    const { boardTitle } = board;\n    const lists = listsArray.map((list, listIndex) => {\n      const { listId, listTitle, cardIds } = list;\n      return (\n        <List\n          listId={listId}\n          key={listId}\n          listIndex={listIndex}\n          listTitle={listTitle}\n          cardIds={cardIds}\n          isFetchingCards={isFetching}\n          isDragging={this.state.isDragging}\n          onCardClick={this.handleCardClick}\n          boardId={boardId}\n        />\n      );\n    });\n\n    return (\n      <main className=\"board-container\">\n        <Input\n          className=\"board__input--title\"\n          name=\"boardTitle\"\n          type=\"text\"\n          value={boardTitle}\n          onChange={this.onTitleChange}\n          required\n          hideLabel\n          onBlur={this.onTitleBlur}\n        />\n        <DragDropContext\n          onDragEnd={this.onDragEnd}\n          onDragStart={this.onDragStart}\n        >\n          <Board boardId={boardId}>{lists}</Board>\n        </DragDropContext>\n        {isCardEditorOpen && (\n          <CardEditor\n            {...cardsById[cardId]}\n            handleCardEditorClose={this.toggleCardEditor}\n          />\n        )}\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    boardsById: boardSelectors.getBoardsById(state),\n    current: currentSelectors.getCurrent(state),\n    listsById: listSelectors.getListsById(state),\n    listsArray: listSelectors.getListsArray(state),\n    cardsById: cardSelectors.getCardsById(state),\n    board: boardSelectors.getBoard(state, ownProps.boardId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBoardsById: board => dispatch(boardActions.updateBoardsById(board)),\n    selectBoard: boardId => dispatch(currentActions.selectBoard(boardId)),\n    selectCard: cardId => dispatch(currentActions.selectCard(cardId)),\n    fetchListsById: boardId => dispatch(listActions.fetchListsById(boardId)),\n    updateListsById: list => dispatch(listActions.updateListsById(list)),\n    fetchCardsById: boardId => dispatch(cardActions.fetchCardsById(boardId)),\n    fetchCardSubtasks: boardId =>\n      dispatch(subtaskActions.fetchCardSubtasks(boardId)),\n    updateCardsById: card => dispatch(cardActions.updateCardsById(card)),\n    reorderLists: (boardId, listIds) =>\n      dispatch(boardActions.reorderLists(boardId, listIds)),\n    updateListIds: (boardId, listIds) =>\n      dispatch(boardActions.updateListIds(boardId, listIds)),\n    addSubtask: ({ subtaskId, subtaskData }) =>\n      dispatch(subtaskActions.addSubtask({ subtaskId, subtaskData })),\n    deleteSubtask: subtaskId =>\n      dispatch(subtaskActions.deleteSubtask(subtaskId)),\n    updateSubtask: ({ subtaskId, subtaskData }) =>\n      dispatch(subtaskActions.updateSubtask({ subtaskId, subtaskData }))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardContainer)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { withAuthorization } from '../Session';\nimport * as ROUTES from '../../constants/routes';\nimport { userActions, userSelectors } from '../../ducks/users';\nimport { currentActions, currentSelectors } from '../../ducks/current';\nimport { BoardGridContainer } from '../BoardGrid';\nimport { BoardComposer } from '../BoardComposer';\nimport { BoardContainer } from '../Board';\nimport { boardActions, boardSelectors } from '../../ducks/boards';\nimport './Home.scss';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isBoardComposerOpen: false,\n      isFetching: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      firebase,\n      selectUser,\n      fetchUsersById,\n      fetchBoardsById\n    } = this.props;\n    const userId = firebase.auth.currentUser.uid;\n    selectUser(userId);\n    console.log('mounted home');\n    fetchUsersById()\n      .then(() => fetchBoardsById(userId))\n      .then(() =>\n        this.setState({\n          isFetching: false\n        })\n      );\n  }\n\n  toggleBoardComposer = () => {\n    this.setState(prevState => ({\n      isBoardComposerOpen: !prevState.isBoardComposerOpen\n    }));\n  };\n\n  createBoard = boardTitle => {\n    const { userId, firebase } = this.props;\n    firebase.addBoard({ userId, boardTitle });\n  };\n\n  render() {\n    const { isBoardComposerOpen, isFetching } = this.state;\n    if (isFetching) return null;\n    const { userId } = this.props;\n    return (\n      <>\n        {isBoardComposerOpen && (\n          <BoardComposer\n            onClose={this.toggleBoardComposer}\n            handleSubmit={this.createBoard}\n          />\n        )}\n        <Switch>\n          <Route\n            exact\n            path={ROUTES.HOME}\n            render={() => (\n              <main className=\"main\">\n                <h1>Home</h1>\n                {userId && (\n                  <BoardGridContainer\n                    userId={userId}\n                    openBoardComposer={this.toggleBoardComposer}\n                  />\n                )}\n              </main>\n            )}\n          />\n          <Route\n            path={ROUTES.BOARD}\n            render={props => (\n              <BoardContainer\n                userId={userId}\n                boardId={props.match.params.id}\n                {...props}\n              />\n            )}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentBoardId: currentSelectors.getCurrentBoardId(state),\n    userId: currentSelectors.getCurrentUserId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsersById: () => dispatch(userActions.fetchUsersById()),\n    fetchBoardsById: userId => dispatch(boardActions.fetchBoardsById(userId)),\n    selectUser: userId => dispatch(currentActions.selectUser(userId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(HomePage)\n);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .passwordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n    const isInvalid = passwordOne === '' || passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"passwordOne\"\n          label=\"New Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          label=\"Confirm New Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Change My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React from 'react';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport { PasswordChangeForm } from '../PasswordChange';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport './Account.scss';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <main className=\"account\">\n        <h1>Account: {authUser.email}</h1>\n        <section className=\"account__section\">\n        <h2>Forgot your password?</h2>\n          <PasswordForgetForm />\n        </section>\n        <section className=\"account__section\">\n        <h2>Change your password.</h2>\n          <PasswordChangeForm />\n        </section>\n      </main>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(AccountPage);\n","import React, { Component } from 'react';\nimport { Navbar } from '../Navbar';\nimport './Header.scss';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <Navbar />\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport { Navbar } from '../Navbar';\nimport * as ROUTES from '../../constants/routes';\nimport { LandingPage } from '../Landing';\nimport { SignUpPage } from '../SignUp';\nimport { SignInPage } from '../SignIn';\nimport { PasswordForgetPage } from '../PasswordForget';\nimport { HomePage } from '../Home';\nimport { AccountPage } from '../Account';\nimport { AdminPage } from '../Admin';\nimport { withAuthentication } from '../Session';\nimport { Header } from '../Header';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Header />\n        <Switch>\n          <Route exact path={ROUTES.LANDING} component={LandingPage} />\n          <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n          <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n          <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n          <Route path={ROUTES.HOME} render={props => <HomePage {...props} />} />\n          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n          <Route path={ROUTES.ADMIN} component={AdminPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { boardsById } from '../ducks/boards';\nimport { cardsById } from '../ducks/cards';\nimport { listsById } from '../ducks/lists';\nimport { usersById } from '../ducks/users';\nimport { current } from '../ducks/current';\nimport { subtasksById } from '../ducks/subtasks';\nimport { commentsById } from '../ducks/comments';\n\nexport default combineReducers({\n  boardsById,\n  cardsById,\n  listsById,\n  usersById,\n  current,\n  subtasksById,\n  commentsById\n});\n","import * as types from './types';\n\nconst current = (state = {}, action) => {\n  switch (action.type) {\n    case types.SELECT_USER: {\n      const { userId } = action;\n      return {\n        ...state,\n        userId\n      };\n    }\n    case types.SELECT_BOARD: {\n      const { boardId } = action;\n      return {\n        ...state,\n        boardId\n      };\n    }\n    case types.SELECT_LIST: {\n      const { listId } = action;\n      return {\n        ...state,\n        listId\n      };\n    }\n    case types.SELECT_CARD: {\n      const { cardId } = action;\n      return {\n        ...state,\n        cardId\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport { current };\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\n\nexport default history;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport 'normalize.css';\nimport './index.scss';\nimport { App } from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { FirebaseContext } from './components/Firebase';\nimport reducers from './store/reducers';\nimport firebase from './store/firebase';\nimport history from './store/history';\n\nconst store = createStore(reducers, {}, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <FirebaseContext.Provider value={firebase}>\n      <Router basename={process.env.PUBLIC_URL} history={history}>\n        <App />\n      </Router>\n    </FirebaseContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}