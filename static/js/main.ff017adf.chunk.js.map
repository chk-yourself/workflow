{"version":3,"sources":["assets/feather/feather-sprite.svg","constants/routes.js","components/Firebase/context.js","components/Firebase/Firebase.js","components/Input/Input.js","components/Button/Button.js","pages/SignUp/SignUpForm.js","components/UserFormPage/UserFormPage.js","pages/SignUp/SignUp.js","pages/SignIn/SignInForm.js","pages/PasswordForget/PasswordForgetForm.js","pages/PasswordForget/PasswordForget.js","pages/SignIn/SignIn.js","components/Session/context.js","store/firebase.js","ducks/currentUser/actions.js","ducks/currentUser/types.js","ducks/currentUser/selectors.js","ducks/currentUser/reducer.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","ducks/users/actions.js","ducks/users/types.js","ducks/users/selectors.js","ducks/users/reducer.js","components/ProjectGrid/ProjectGrid.js","ducks/lists/actions.js","ducks/lists/types.js","utils/utils.js","ducks/tasks/actions.js","ducks/tasks/types.js","ducks/subtasks/actions.js","ducks/subtasks/types.js","ducks/projects/actions.js","ducks/projects/types.js","ducks/projects/selectors.js","ducks/projects/reducer.js","ducks/selectedProject/index.js","components/Icon/Icon.js","components/ProjectGrid/ProjectGridContainer.js","components/withOutsideClick/withOutsideClick.js","components/Modal/Modal.js","components/ProjectComposer/ProjectComposer.js","constants/droppableTypes.js","components/ListComposer/ListComposer.js","components/Board/Board.js","ducks/selectedTask/index.js","ducks/lists/selectors.js","ducks/lists/reducer.js","ducks/tasks/selectors.js","ducks/tasks/reducer.js","ducks/subtasks/selectors.js","ducks/subtasks/reducer.js","constants/keys.js","components/TaskComposer/TaskComposer.js","components/Textarea/Textarea.js","components/CardComposer/CardComposer.js","components/Menu/Menu.js","components/Menu/MenuItem.js","components/Popover/Popover.js","components/Popover/PopoverWrapper.js","components/Tag/Tag.jsx","components/Avatar/Avatar.js","components/Calendar/constants.js","components/Calendar/utils.js","components/Radio/Radio.js","components/Calendar/Calendar.js","components/Card/Card.js","components/Checkbox/Checkbox.js","components/Task/Task.js","components/Task/DraggableTask.js","components/Tasks/Tasks.js","components/List/List.js","ducks/comments/actions.js","ducks/comments/types.js","ducks/comments/selectors.js","ducks/comments/reducer.js","components/Toolbar/Toolbar.jsx","components/TaskEditor/TaskEditorAssignMember.js","components/TaskEditor/TaskEditorSection.js","components/MemberSearch/MemberSearch.js","components/TaskEditor/TaskEditorMoreActions.js","components/Subtask/Subtask.js","components/Subtasks/Subtasks.js","components/TaskEditor/TaskEditorComment.js","components/ColorPicker/ColorPicker.js","components/TagsInput/TagsInput.js","components/DatePicker/DatePicker.js","components/TaskEditor/TaskEditorPane.js","components/ProjectIcon/ProjectIcon.js","components/TaskEditor/TaskEditor.js","components/Board/BoardContainer.js","components/Main/Main.jsx","components/Dashboard/DashboardPanel.js","components/Dashboard/TasksDueSoon.js","components/Dashboard/Dashboard.js","components/ExpansionPanel/ExpansionPanelHeader.jsx","components/ExpansionPanel/ExpansionPanelContent.jsx","components/ExpansionPanel/ExpansionPanel.jsx","components/Folder/Folder.jsx","components/UserTasks/UserTasks.jsx","pages/Home/Home.js","pages/PasswordChange/PasswordChangeForm.js","pages/Account/Account.js","pages/Admin/Admin.js","components/Logo/Logo.js","components/Nav/Navbar.js","components/Nav/Sidebar.js","components/Nav/NavLinks.js","components/SignOutButton/SignOutButton.js","components/SearchBar/SearchBar.js","components/Topbar/Topbar.js","components/Header/Header.jsx","pages/App/App.jsx","serviceWorker.js","store/reducers.js","store/history.js","index.js"],"names":["module","exports","__webpack_require__","p","HOME","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","signInWithGoogle","provider","auth","GoogleAuthProvider","addScope","signInWithPopup","then","result","credential","token","accessToken","console","log","user","catch","error","errorCode","code","message","email","alert","signInWithGithub","GithubAuthProvider","signInWithRedirect","createUserWithEmailAndPassword","password","signInWithEmailAndPassword","signOut","passwordReset","sendPasswordResetEmail","passwordUpdate","newPassword","currentUser","updatePassword","getTimestamp","firestore","FieldValue","serverTimestamp","addToArray","value","arrayUnion","removeFromArray","arrayRemove","deleteField","delete","getDocRef","path","db","doc","updateDoc","newValue","arguments","length","undefined","update","objectSpread","lastUpdatedAt","getUserDoc","userId","collection","addUser","_ref","name","username","_ref$projectIds","projectIds","_ref$photoURL","photoURL","batch","userRef","concat","newFolderRef","todayFolderRef","upcomingFolderRef","laterFolderRef","set","folderIds","taskIds","commit","updateUser","addTag","_ref2","taskId","text","_ref2$projectId","_ref2$color","color","taskRef","getTaskDoc","tags","defineProperty","lastUsedAt","merge","projectRef","getProjectDoc","removeTag","_ref3","tag","updateTask","setTagColor","_ref4","updateProject","updateProjectName","_ref5","where","get","snapshot","docs","forEach","ref","projectName","addProject","_ref6","_ref6$color","_ref6$view","view","_ref6$isPrivate","isPrivate","add","createdAt","listIds","createdBy","memberIds","notes","isFavorited","id","getListDoc","listId","updateList","updateListName","_ref7","listRef","listName","addList","_ref8","_ref8$projectId","_ref8$userId","deleteList","_ref9","addTask","_ref10","_ref10$folderId","folderId","isFolderItem","commentIds","subtaskIds","isCompleted","completedAt","dueDate","assignedTo","folders","ownerId","removeAssignee","_ref12","_batch$update","folderRef","addAssignee","_ref13","_batch$update2","deleteTask","_ref14","_ref14$assignedTo","_ref14$folders","memberId","moveTaskToList","_ref15","origListId","newListId","updatedTaskIds","origListRef","newListRef","moveTaskToFolder","_ref16","_batch$update3","origFolderId","newFolderId","origFolderRef","getSubtaskDoc","subtaskId","addSubtask","_ref17","_ref17$memberIds","_ref17$projectId","_ref17$taskId","_ref17$dueDate","toConsumableArray","updateSubtask","deleteSubtask","_ref18","_ref18$taskId","subtaskRef","getCommentDoc","commentId","addComment","_ref19","_ref19$memberIds","content","isPinned","from","to","likes","updateComment","initializeApp","Input","_ref$className","className","type","onFocus","onChange","onInput","placeholder","isRequired","onBlur","autoComplete","inputRef","hideLabel","label","labelClass","onKeyDown","maxLength","minLength","isReadOnly","Fragment","htmlFor","required","readOnly","tabIndex","defaultProps","Button","children","_ref$type","onClick","_ref$color","_ref$size","size","_ref$variant","variant","disabled","_ref$iconOnly","iconOnly","buttonRef","objectWithoutProperties","INITIAL_STATE","passwordOne","passwordTwo","SignUpForm","possibleConstructorReturn","getPrototypeOf","call","onSubmit","e","_this$state","state","_this$props","history","authUser","uid","setState","push","ROUTES","preventDefault","target","_this$state2","isInvalid","components_Input_Input","components_Button_Button","compose","withRouter","UserFormPage","title","SignUpLink","Link","SignUpPage","components_UserFormPage_UserFormPage","SignUp_SignUpForm","SignInForm","enableGoogleLogin","PasswordForgetForm","PasswordForgetLink","PasswordForgetPage","PasswordForget_PasswordForgetForm","SignInPage","SignIn_SignInForm","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","AuthUserContext","setCurrentUser","fetchCurrentUserData","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","data","sent","t0","stop","_x","apply","loadFolders","fetchFolders","_callee2","_context2","foldersById","_x2","addFolder","folderData","updateFolder","deleteFolder","reorderFolders","loadTasksDueSoon","tasksDueSoon","fetchTasksDueWithinDays","days","startingDate","Date","endingDate","setHours","timeEnd","setDate","getDate","_callee3","_context3","orderBy","tasks","_x3","addTaskDueSoon","taskData","deleteTaskDueSoon","updateTaskDueSoon","getCurrentUser","getCurrentUserId","getFolders","getFolderIds","getFoldersArray","keys","map","isDefault","getFolder","getTasksDueSoonById","getTasksDueSoonArr","getMergedTags","selectedProject","projectsById","usersById","projectTags","userTags","mergedTags","action","_state$folders","restOfFolders","_toPropertyKey","_state$tasksDueSoon","restOfTasks","withAuthentication","WithAuthentication","_React$Component","inherits","createClass","key","_this2","listener","onAuthStateChanged","Session_context","Provider","connect","currentUserActions","withAuthorization","condition","WithAuthorization","loadUserData","loadUsersById","fetchUsersById","users","fetchUserData","userData","deleteUser","getUsersById","getUserData","getUserTaskIds","getUsersArray","getMembersArray","tasksById","reducer_toPropertyKey","ProjectTile","ProjectGrid","loadListsById","listsById","fetchListsById","lists","fetchUserLists","listData","handleListSubscription","_callee5","getState","_context5","onSnapshot","_callee4","querySnapshot","_context4","docChanges","change","changeType","Promise","all","slicedToArray","abrupt","_x6","_x5","_x4","isEqual","other","prototype","toString","typeArr","valueLen","compare","item1","item2","itemType","i","hasOwnProperty","windowDebouncer","callback","request","_len","args","Array","_key","window","cancelAnimationFrame","requestAnimationFrame","firstThen","first","after","count","_len2","_key2","fn","invokeBeforeExecution","loadTasksById","loadUserTasks","fetchProjectTasks","handleTaskSubscription","syncUserTasks","fetchUserTasks","updateTasksById","task","loadSubtasksById","subtasksById","fetchSubtasksById","subtasks","updateSubtasksById","subtask","fetchProjectSubtasks","fetchTaskSubtasks","fetchUserSubtasks","subtaskData","loadProjectsById","loadProject","projectData","fetchProjectsById","projects","fetchProjectDetails","project","fetchProjectLists","projectLists","projectTasks","projectSubtasks","fetchProjectContent","_callee6","_context6","reorderLists","updateListIds","updateProjectTags","getProjectsById","getProjectsArray","getProject","getProjectTags","getProjectName","getProjectColor","selectProject","getSelectedProjectId","Icon","width","height","xmlns","xmlnsXlink","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","xlinkHref","featherIcons","ProjectGridContainer","projectObserver","_this$props2","projectsArray","projectTiles","ProjectGrid_ProjectTile","ProjectGrid_ProjectGrid","openProjectComposer","components_Icon_Icon","ownProps","projectSelectors","projectActions","selectProjectAction","withOutsideClick","WrappedComponent","_Component","WithOutsideClick","handleTouch","isTouchEnabled","document","removeEventListener","handleOutsideClick","addEventListener","componentEl","Error","contains","componentInstance","current","onOutsideClick","createRef","innerRef","el","Modal","onModalClose","onModalClick","_this$props$size","classes","modal","button","projectTitle","ProjectComposer","handleSubmit","onClose","components_Modal_Modal","LIST","TASK","FOLDER","isActive","ListComposer","resetForm","onReset","Board","react_beautiful_dnd_esm","droppableId","droppableTypes","direction","provided","droppableProps","components_ListComposer_ListComposer","selectTask","getSelectedTaskId","selectedTask","getListsById","getListName","getSelectedProjectLists","getProjectLists","lists_reducer_toPropertyKey","getTasksById","getListTasks","getFolderTasks","getSimpleTasks","reduce","_tasksById$taskId","getTaskTags","taskTags","taskTag","tasks_reducer_toPropertyKey","getSubtasksById","getSubtasksArray","getSimpleSubtasks","_subtasksById$subtask","getActiveSubtasks","filter","getCompletedSubtasks","includes","subtasks_reducer_toPropertyKey","BACKSPACE","ENTER","TAB","ARROW_DOWN","ARROW_UP","TaskComposer","currentUserSelectors","Textarea","autoHeightResize","isAutoHeightResizeEnabled","textareaEl","style","scrollHeight","onDragStart","CardComposer","Textarea_Textarea_Textarea","updateProjectsById","Menu","menuRef","MenuItem","Popover","PopoverWrapper","onPopoverClose","toggleOpen","onButtonClick","prevState","handleClose","matches","alignInner","onWrapperClick","alignOuter","buttonProps","anchorEl","popoverWrapperStyle","offsetTop","offsetLeft","position","top","wrapper","Popover_Popover","popover","align","Tag","onDelete","tagRef","Avatar","getUserInitials","fullName","split","charAt","join","toUpperCase","imgSrc","imgProps","avatar","src","alt","img","backgroundColor","MONTHS","long","short","daysTotal","WEEK_DAYS","narrow","isLeapYear","year","getMonthFirstDay","monthIndex","getDay","isToday","date","isYesterday","today","isTomorrow","isThisYear","getFullYear","getMonthDays","getPrevMonth","month","getNextMonth","getMonthDates","monthDays","monthFirstDay","_getPrevMonth","prevMonth","prevMonthYear","prevMonthDays","daysFromPrevMonth","daysFromNextMonth","prevMonthDates","n","day","thisMonthDates","nextMonthDates","isDate","getSimpleDate","dateObj","getMonth","isSimpleDate","isSameDate","base","dateDay","dateMonth","dateYear","baseDay","baseMonth","baseYear","getNextYears","num","startingYear","item","zeroPad","padStart","toSimpleDateString","simpleDate","toSimpleDateObj","dateString","dateArr","isSDSFormat","test","isWithinDays","timeStart","isPriorDate","toDateString","options","useRelative","format","weekday","slice","trim","Radio","_ref$classes","radio","isChecked","checked","Calendar","isMonthsDropdownActive","isYearsDropdownActive","goToNextMonth","onMonthClick","dateUtils","goToPrevMonth","toggleMonthsDropdown","toggleYearsDropdown","selectMonth","_this$props3","selectYear","onYearClick","_this$props4","selectedDate","onDayClick","dates","years","calendar","PopoverWrapper_PopoverWrapper","yearOption","components_Radio_Radio","monthOption","weekDay","isSelectedDate","CardDetail","icon","Card","handleCardClick","onCardClick","nextProps","indexOf","taskIndex","completedSubtasks","taskMembers","dueDateStr","toDate","isDueToday","isDueTmrw","isPastDue","draggableId","index","draggableProps","dragHandleProps","headerEl","components_Tag_Tag","Card_CardDetail","member","Avatar_Avatar_Avatar","taskSelectors","subtaskSelectors","userSelectors","Checkbox","Task","isFocused","prevPropsName","newName","toggleCompleted","handleTaskClick","onTaskClick","_this$props5","listStyle","components_Checkbox_Checkbox","DraggableTask","components_Task_Task","Tasks","scrollToBottom","listEnd","scrollIntoView","behavior","prevProps","isBoardView","inner","components_Card_Card","Task_DraggableTask","minHeight","isDraggingOver","float","clear","List","handleListDelete","listIndex","isFetchingTasks","isRestricted","components_Menu_Menu","Menu_MenuItem","href","Tasks_Tasks","components_CardComposer_CardComposer","components_TaskComposer_TaskComposer","loadCommentsById","commentsById","fetchCommentsById","comments","updateCommentsById","comment","fetchTaskComments","fetchUserComments","commentData","deleteComment","getCommentsById","getCommentsArray","comments_reducer_toPropertyKey","Toolbar","TaskEditorAssignMember","TaskEditorSection","MemberSearch","query","selectedMember","selectedIndex","filteredList","memberSearchEl","matchUser","regExp","RegExp","newIndex","persistSelectedMember","onMemberClick","nextIndex","prevIndex","inputEl","focus","assignedMembers","_this$state3","isAssigned","TaskEditorMoreActions","onMenuClick","data-action","appRoot","getElementById","Subtask","portal","appendChild","removeChild","isDragging","ReactDOM","createPortal","Subtasks","isFetching","selectedProjectId","moveSubtask","destination","source","updatedSubtaskIds","splice","subtaskObserver","onDragEnd","components_Subtask_Subtask","subtaskActions","TaskEditorComment","secondsElapsed","tick","handleLikeClick","handleLike","secondsSinceCreation","Math","floor","now","getTime","interval","setInterval","clearInterval","dateCreated","timeCreated","toLocaleTimeString","hour","minute","hour12","dateCreatedString","taskActions","commentActions","ColorPicker","selectedColor","handleColorChange","selectColor","TagsInput","selectedTag","focusedTag","hasExactMatch","matchTag","tagSuggestions","findIndex","persistSelectedTag","assignedTags","handleTagDelete","isColorPickerActive","currentTag","hasTags","colorPickerStyle","currentTagEl","_this$currentTagEl","offsetWidth","offsetHeight","left","ColorPicker_ColorPicker_ColorPicker","DatePicker","currentMonth","currentYear","selectDate","newDate","setCurrentMonth","setCurrentYear","updateDateString","currentDueDate","clearDueDate","display","Calendar_Calendar_Calendar","TaskEditorPane","ProjectIcon","TaskEditorWrapper","handleTaskEditorClose","handleClick","components_TaskEditor_TaskEditorPane","TaskEditor","currentValue","taskKey","updatedValue","currentFocus","newComment","commentFormEl","newSubtaskFormEl","handleMoreActions","dataset","handleCommentLike","assignMember","toggleColorPicker","_this$props6","isProjectTag","isUserTag","tagData","_this$props7","_this$props8","setDueDate","_this$props9","toggleDatePicker","isDatePickerActive","_this$props10","newSubtask","membersListButton","_this$props11","commentObserver","_this3","_this$props12","commentsArray","usersArray","membersArray","projectColor","hasSubtasks","hasComments","isNewCommentInvalid","isNewSubtaskInvalid","commentFormIsFocused","newSubtaskFormIsFocused","taskDueDate","TaskEditor_TaskEditorWrapper","components_Toolbar_Toolbar","TaskEditorAssignMember_TaskEditorAssignMember","MemberSearch_MemberSearch_MemberSearch","TaskEditor_TaskEditorMoreActions","TaskEditor_TaskEditorSection","components_ProjectIcon_ProjectIcon","DatePicker_DatePicker_DatePicker","datePickerEl","click","TagsInput_TagsInput_TagsInput","components_Subtasks_Subtasks","components_TaskEditor_TaskEditorComment","commentSelectors","syncTaskComments","BoardContainer","isMovedWithinList","updatedListIds","toggleTaskEditor","isTaskEditorOpen","onNameChange","onNameBlur","newProjectName","_this2$props","listObserver","updatedProject","utils","taskObserver","selectedTaskId","components_Board_Board","list","components_List_List","components_TaskEditor_TaskEditor","listSelectors","selectTaskAction","listActions","Main","main","DashboardPanel","TasksDueSoon","currentUserId","Dashboard_DashboardPanel","Dashboard","toggleProjectComposer","Dashboard_TasksDueSoon","ProjectGrid_ProjectGridContainer","ExpansionPanelHeader","role","ExpansionPanelContent","isExpanded","toggleContent","header","propsIsExpanded","panel","aria-expanded","ExpansionPanel_ExpansionPanelHeader","ExpansionPanel_ExpansionPanelContent","Folder","isDragDisabled","UserTasks","origIndex","isMovedWithinFolder","updatedFolderIds","folderObserver","filters","components_Main_Main","folder","components_Folder_Folder","HomePage","isProjectComposerOpen","createProject","userObserver","ProjectComposer_ProjectComposer_ProjectComposer","Switch","Route","exact","render","components_Dashboard_Dashboard","Board_BoardContainer","match","params","components_UserTasks_UserTasks","userActions","PasswordChangeForm","PasswordChange_PasswordChangeForm","AdminPage","loading","getCurrentUserData","Logo","Navbar","viewportWidth","innerWidth","isMobileNavVisible","handleResize","toggleMobileNavVisibility","minWidth","navLinksEl","isMobileView","navbar","navEl","components_Logo_Logo","links","SidebarIcon","Sidebar","onToggle","NavLinksNonAuth","NavLink","NavLinksAuth","Sidebar_SidebarIcon","SearchBar","stopPropagation","Topbar","SearchBar_SearchBar_SearchBar","components_SignOutButton_SignOutButton","Header","isNavExpanded","toggleNav","Sidebar_Sidebar","NavLinks_NavLinksAuth","components_Topbar_Topbar","Navbar_Navbar","NavLinks_NavLinksNonAuth","Header_Header_Header","component","LandingPage","Home_Home","AccountPage","Boolean","location","hostname","combineReducers","createBrowserHistory","basename","store","createStore","reducers","applyMiddleware","thunk","es","context","Router","pages_App_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uHAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,stOCI3BC,EAAO,8DCFdC,EAAkBC,IAAMC,cAAc,MAE/BC,EAAe,SAAAC,GAAS,OAAI,SAAAC,GAAK,OAC5CC,EAAAC,EAAAC,cAACR,EAAgBS,SAAjB,KACG,SAAAC,GAAQ,OAAIJ,EAAAC,EAAAC,cAACJ,EAADO,OAAAC,OAAA,GAAeP,EAAf,CAAsBK,SAAUA,SAIlCV,6BCRTa,EAAS,CACbC,OAAQC,0CACRC,WAAYD,iCACZE,YAAaF,wCACbG,UAAWH,iBACXI,cAAeJ,6BACfK,kBAAmBL,gBAouBNM,aAhuBb,SAAAA,IAAc,IAAAC,EAAAC,KAAAZ,OAAAa,EAAA,EAAAb,CAAAY,KAAAF,GAAAE,KAYdE,iBAAmB,WACjB,IAAMC,EAAW,IAAIhB,IAASiB,KAAKC,mBACnCF,EAASG,SAAS,qDAClBP,EAAKK,KACFG,gBAAgBJ,GAChBK,KAAK,SAAAC,GACJ,GAAIA,EAAOC,WAAY,CACrB,IAAMC,EAAQF,EAAOC,WAAWE,YAChCC,QAAQC,IAAIH,GACCF,EAAOM,QAGvBC,MAAM,SAAAC,GACL,IAAMC,EAAYD,EAAME,KACHF,EAAMG,QACbH,EAAMI,MACDJ,EAAMP,WAEP,kDAAdQ,EACFI,MACE,6EAGFT,QAAQI,MAAMA,MAnCRjB,KAwCduB,iBAAmB,WACjB,IAAMpB,EAAW,IAAIhB,IAASiB,KAAKoB,mBACnCzB,EAAKK,KAAKqB,mBAAmBtB,IA1CjBH,KA6Cd0B,+BAAiC,SAACL,EAAOM,GAAR,OAC/B5B,EAAKK,KAAKsB,+BAA+BL,EAAOM,IA9CpC3B,KAgDd4B,2BAA6B,SAACP,EAAOM,GAAR,OAC3B5B,EAAKK,KAAKwB,2BAA2BP,EAAOM,IAjDhC3B,KAmDd6B,QAAU,kBAAM9B,EAAKK,KAAKyB,WAnDZ7B,KAqDd8B,cAAgB,SAAAT,GAAK,OAAItB,EAAKK,KAAK2B,uBAAuBV,IArD5CrB,KAuDdgC,eAAiB,SAAAC,GAAW,OAC1BlC,EAAKK,KAAK8B,YAAYC,eAAeF,IAxDzBjC,KA4DdoC,aAAe,kBAAMjD,IAASkD,UAAUC,WAAWC,mBA5DrCvC,KA8DdwC,WAAa,SAAAC,GAAK,OAAItD,IAASkD,UAAUC,WAAWI,WAAWD,IA9DjDzC,KAgEd2C,gBAAkB,SAAAF,GAAK,OAAItD,IAASkD,UAAUC,WAAWM,YAAYH,IAhEvDzC,KAkEd6C,YAAc,kBAAM1D,IAASkD,UAAUC,WAAWQ,UAlEpC9C,KAoEd+C,UAAY,SAAAC,GAAI,OAAIjD,EAAKkD,GAAGC,IAAIF,IApElBhD,KAsEdmD,UAAY,SAACH,GAAD,IAAOI,EAAPC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAkB,GAAlB,OACVtD,EAAKgD,UAAUC,GAAMQ,OAArBpE,OAAAqE,EAAA,EAAArE,CAAA,CACEsE,cAAe3D,EAAKqC,gBACjBgB,KAzEOpD,KA8Ed2D,WAAa,SAAAC,GAAM,OAAI7D,EAAKkD,GAAGY,WAAW,SAASX,IAAIU,IA9EzC5D,KAgFd8D,QAAU,SAAAC,GAOJ,IANJH,EAMIG,EANJH,OACAI,EAKID,EALJC,KACAC,EAIIF,EAJJE,SACA5C,EAGI0C,EAHJ1C,MAGI6C,EAAAH,EAFJI,kBAEI,IAAAD,EAFS,GAETA,EAAAE,EAAAL,EADJM,gBACI,IAAAD,EADO,KACPA,EACEE,EAAQvE,EAAKkD,GAAGqB,QAChBC,EAAUxE,EAAKgD,UAAL,SAAAyB,OAAwBZ,IAClCa,EAAe1E,EAAKgD,UAAL,SAAAyB,OAAwBZ,EAAxB,eACfc,EAAiB3E,EAAKgD,UAAL,SAAAyB,OAAwBZ,EAAxB,eACjBe,EAAoB5E,EAAKgD,UAAL,SAAAyB,OAAwBZ,EAAxB,eACpBgB,EAAiB7E,EAAKgD,UAAL,SAAAyB,OAAwBZ,EAAxB,eAgCvB,OA9BAU,EAAMO,IAAIN,EAAS,CACjBX,SACAI,OACAC,WACA5C,QACA8C,aACAE,WACAS,UAAW,CAAC,EAAG,EAAG,EAAG,KAGvBR,EAAMO,IAAIJ,EAAc,CACtBT,KAAM,YACNe,QAAS,KAGXT,EAAMO,IAAIH,EAAgB,CACxBV,KAAM,QACNe,QAAS,KAGXT,EAAMO,IAAIF,EAAmB,CAC3BX,KAAM,WACNe,QAAS,KAGXT,EAAMO,IAAID,EAAgB,CACxBZ,KAAM,QACNe,QAAS,KAGJT,EACJU,SACAxE,KAAK,WACJK,QAAQC,IAAI,gBAEbE,MAAM,SAAAC,GACLJ,QAAQI,MAAMA,MAnINjB,KAuIdiF,WAAa,SAACrB,GAAD,IAASR,EAATC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAoB,GAApB,OACXtD,EAAKkD,GACFY,WAAW,SACXX,IAAIU,GACJJ,OAAOJ,IA3IEpD,KA+IdkF,OAAS,SAAAC,GAAmE,IAAhEC,EAAgED,EAAhEC,OAAQxB,EAAwDuB,EAAxDvB,OAAQyB,EAAgDF,EAAhDE,KAAgDC,EAAAH,EAA1CxF,iBAA0C,IAAA2F,EAA9B,KAA8BA,EAAAC,EAAAJ,EAAxBK,aAAwB,IAAAD,EAAhB,UAAgBA,EACpEjB,EAAQvE,EAAKkD,GAAGqB,QAChBC,EAAUxE,EAAK4D,WAAWC,GAC1B6B,EAAU1F,EAAK2F,WAAWN,GAsBhC,GApBAd,EAAMd,OAAOiC,EAAS,CACpBE,KAAM5F,EAAKyC,WAAW6C,GACtB3B,cAAe3D,EAAKqC,iBAGtBkC,EAAMO,IACJN,EACA,CACEoB,KAAKvG,OAAAwG,EAAA,EAAAxG,CAAA,GACFiG,EAAO,CACNA,OACAG,QACAK,WAAY9F,EAAKqC,iBAGrBsB,cAAe3D,EAAKqC,gBAEtB,CAAE0D,OAAO,IAGPnG,EAAW,CACb,IAAMoG,EAAahG,EAAKiG,cAAcrG,GAEtC2E,EAAMO,IACJkB,EACA,CACEJ,KAAKvG,OAAAwG,EAAA,EAAAxG,CAAA,GACFiG,EAAO,CACNA,OACAG,QACAK,WAAY9F,EAAKqC,iBAGrBsB,cAAe3D,EAAKqC,gBAEtB,CAAE0D,OAAO,IAIb,OAAOxB,EACJU,SACAxE,KAAK,WACJK,QAAQC,IAAI,eAEbE,MAAM,SAAAC,GACLJ,QAAQI,MAAMA,MAjMNjB,KAqMdiG,UAAY,SAAAC,GAAqB,IAAlBd,EAAkBc,EAAlBd,OAAQe,EAAUD,EAAVC,IACrBpG,EAAKqG,WAAWhB,EAAQ,CACtBO,KAAM5F,EAAK4C,gBAAgBwD,MAvMjBnG,KA2MdqG,YAAc,SAAAC,GAAuC,IAApC1C,EAAoC0C,EAApC1C,OAAQjE,EAA4B2G,EAA5B3G,UAAWwG,EAAiBG,EAAjBH,IAAKX,EAAYc,EAAZd,MACjClB,EAAQvE,EAAKkD,GAAGqB,QAChBC,EAAUxE,EAAK4D,WAAWC,GAC1BmC,EAAahG,EAAKiG,cAAcrG,GA4BtC,OA1BA2E,EAAMO,IACJN,EACA,CACEoB,KAAKvG,OAAAwG,EAAA,EAAAxG,CAAA,GACF+G,EAAM,CACLX,UAGJ9B,cAAe3D,EAAKqC,gBAEtB,CAAE0D,OAAO,IAGXxB,EAAMO,IACJkB,EACA,CACEJ,KAAKvG,OAAAwG,EAAA,EAAAxG,CAAA,GACF+G,EAAM,CACLX,UAGJ9B,cAAe3D,EAAKqC,gBAEtB,CAAE0D,OAAO,IAGJxB,EACJU,SACAxE,KAAK,WACJK,QAAQC,IAAI,uBAEbE,MAAM,SAAAC,GACLJ,QAAQI,MAAMA,MAhPNjB,KAsPdgG,cAAgB,SAAArG,GAAS,OAAII,EAAKkD,GAAGY,WAAW,YAAYX,IAAIvD,IAtPlDK,KAwPduG,cAAgB,SAAC5G,GAAD,IAAYyD,EAAZC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAuB,GAAvB,OACdtD,EAAKiG,cAAcrG,GAAW6D,OAA9BpE,OAAAqE,EAAA,EAAArE,CAAA,CACEsE,cAAe3D,EAAKqC,gBACjBgB,KA3POpD,KA8PdwG,kBAAoB,SAAAC,GAAyB,IAAtB9G,EAAsB8G,EAAtB9G,UAAWqE,EAAWyC,EAAXzC,KAC1BM,EAAQvE,EAAKkD,GAAGqB,QAChByB,EAAahG,EAAKiG,cAAcrG,GAGtC2E,EAAMd,OAAOuC,EAAY,CACvB/B,OACAN,cAAe3D,EAAKqC,iBAItBrC,EAAKkD,GACFY,WAAW,SACX6C,MAAM,YAAa,KAAM/G,GACzBgH,MACAnG,KAAK,SAAAoG,GAMJ,OALAA,EAASC,KAAKC,QAAQ,SAAA5D,GACpBoB,EAAMd,OAAON,EAAI6D,IAAK,CACpBC,YAAahD,MAGVM,EACJU,SACAxE,KAAK,WACJK,QAAQC,IAAI,0BAEbE,MAAM,SAAAC,GACLJ,QAAQI,MAAMA,QAzRVjB,KA8RdiH,WAAa,SAAAC,GAMP,IALJtD,EAKIsD,EALJtD,OACAI,EAIIkD,EAJJlD,KAIImD,EAAAD,EAHJ1B,aAGI,IAAA2B,EAHI,UAGJA,EAAAC,EAAAF,EAFJG,YAEI,IAAAD,EAFG,QAEHA,EAAAE,EAAAJ,EADJK,iBACI,IAAAD,KACJvH,EAAKkD,GACFY,WAAW,YACX2D,IAAI,CACHC,UAAW1H,EAAKqC,eAChBsB,cAAe,KACfgE,QAAS,GACTC,UAAW/D,EACXgE,UAAW,CAAChE,GACZiE,MAAO,GACPC,aAAa,EACbtC,QACA6B,OACAE,YACAvD,SAEDxD,KAAK,SAAAuG,GACJhH,EAAKkF,WAAWrB,EAAQ,CACtBO,WAAYpE,EAAKyC,WAAWuE,EAAIgB,SAtT1B/H,KA6TdgI,WAAa,SAAAC,GAAM,OAAIlI,EAAKkD,GAAGY,WAAW,SAASX,IAAI+E,IA7TzCjI,KA+TdkI,WAAa,SAACD,GAAD,IAAS7E,EAATC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAoB,GAApB,OACXtD,EAAKiI,WAAWC,GAAQzE,OAAxBpE,OAAAqE,EAAA,EAAArE,CAAA,CACEsE,cAAe3D,EAAKqC,gBACjBgB,KAlUOpD,KAqUdmI,eAAiB,SAAAC,GAAsB,IAAnBH,EAAmBG,EAAnBH,OAAQjE,EAAWoE,EAAXpE,KACpBM,EAAQvE,EAAKkD,GAAGqB,QAChB+D,EAAUtI,EAAKiI,WAAWC,GAGhC3D,EAAMd,OAAO6E,EAAS,CACpBrE,OACAN,cAAe3D,EAAKqC,iBAItBrC,EAAKkD,GACFY,WAAW,SACX6C,MAAM,SAAU,KAAMuB,GACtBtB,MACAnG,KAAK,SAAAoG,GAMJ,OALAA,EAASC,KAAKC,QAAQ,SAAA5D,GACpBoB,EAAMd,OAAON,EAAI6D,IAAK,CACpBuB,SAAUtE,MAGPM,EACJU,SACAxE,KAAK,WACJK,QAAQC,IAAI,uBAEbE,MAAM,SAAAC,GACLJ,QAAQI,MAAMA,QAhWVjB,KAqWduI,QAAU,SAAAC,GAA+C,IAA5CxE,EAA4CwE,EAA5CxE,KAA4CyE,EAAAD,EAAtC7I,iBAAsC,IAAA8I,EAA1B,KAA0BA,EAAAC,EAAAF,EAApB5E,cAAoB,IAAA8E,EAAX,KAAWA,EACvD3I,EAAKkD,GACFY,WAAW,SACX2D,IAAI,CACHC,UAAW1H,EAAKqC,eAChBsB,cAAe,KACfqB,QAAS,GACTpF,YACAqE,SAEDxD,KAAK,SAAAuG,GACApH,GACFI,EAAKwG,cAAc5G,EAAW,CAC5B+H,QAAS3H,EAAKyC,WAAWuE,EAAIgB,MAG7BnE,GACF7D,EAAKkF,WAAWrB,EAAQ,CACtB8D,QAAS3H,EAAKyC,WAAWuE,EAAIgB,SAvXzB/H,KA6Xd2I,WAAa,SAAAC,GAA2B,IAAxBX,EAAwBW,EAAxBX,OAAQtI,EAAgBiJ,EAAhBjJ,UAChB2E,EAAQvE,EAAKkD,GAAGqB,QAChB+D,EAAUtI,EAAKiI,WAAWC,GAC1BlC,EAAahG,EAAKiG,cAAcrG,GAGtC2E,EAAMxB,OAAOuF,GAGb/D,EAAMd,OAAOuC,EAAY,CACvB2B,QAAS3H,EAAK4C,gBAAgBsF,GAC9BvE,cAAe3D,EAAKqC,iBAItBrC,EAAKkD,GACFY,WAAW,SACX6C,MAAM,SAAU,KAAMuB,GACtBtB,MACAnG,KAAK,SAAAoG,GAIJ,OAHAA,EAASC,KAAKC,QAAQ,SAAA5D,GACpBoB,EAAMxB,OAAOI,EAAI6D,OAEZzC,EACJU,SACAxE,KAAK,WACJK,QAAQC,IAAI,kBAEbE,MAAM,SAAAC,GACLJ,QAAQI,MAAMA,QA1ZVjB,KAiad0F,WAAa,SAAAN,GAAM,OAAIrF,EAAKkD,GAAGY,WAAW,SAASX,IAAIkC,IAjazCpF,KAmad6I,QAAU,SAAAC,GAQJ,IAPJ9E,EAOI8E,EAPJ9E,KACArE,EAMImJ,EANJnJ,UACAqH,EAKI8B,EALJ9B,YACAiB,EAIIa,EAJJb,OACAK,EAGIQ,EAHJR,SACA1E,EAEIkF,EAFJlF,OAEImF,EAAAD,EADJE,gBACI,IAAAD,EADO,KACPA,EACEE,EAAeD,GAAYpF,EAEjC7D,EAAKkD,GACFY,WAAW,SACX2D,IAAI,CACHG,UAAW/D,EACX6D,UAAW1H,EAAKqC,eAChBsB,cAAe,KACfwF,WAAY,GACZC,WAAY,GACZC,aAAa,EACbC,YAAa,KACbC,QAAS,KACTzB,MAAO,GACP0B,WAAYN,EAAe,CAACrF,GAAU,GACtC4F,QAASP,EAAY7J,OAAAwG,EAAA,EAAAxG,CAAA,GAEdwE,EAASoF,GAEZ,GACJS,QAASR,EAAerF,EAAS,KACjCqE,SACAK,WACA3I,YACAqH,cACAhD,SAEDxD,KAAK,SAAAuG,GACAkC,EACFlJ,EAAKoD,UAAL,SAAAqB,OAAwBZ,EAAxB,aAAAY,OAA0CwE,GAAY,CACpDjE,QAAShF,EAAKyC,WAAWuE,EAAIgB,MAG/BhI,EAAKoD,UAAL,SAAAqB,OAAwByD,GAAU,CAChClD,QAAShF,EAAKyC,WAAWuE,EAAIgB,SA9czB/H,KAoddoG,WAAa,SAAChB,GAA0B,IAAlBhC,EAAkBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAC/BtD,EAAK2F,WAAWN,GAAQ5B,OAAxBpE,OAAAqE,EAAA,EAAArE,CAAA,CACEsE,cAAe3D,EAAKqC,gBACjBgB,KAvdOpD,KA2dd0J,eAAiB,SAAAC,GAAkC,IAAAC,EAA/BxE,EAA+BuE,EAA/BvE,OAAQxB,EAAuB+F,EAAvB/F,OAAQoF,EAAeW,EAAfX,SAC5B1E,EAAQvE,EAAKkD,GAAGqB,QAChBmB,EAAU1F,EAAKgD,UAAL,SAAAyB,OAAwBY,IAClCyE,EAAY9J,EAAKgD,UAAL,SAAAyB,OAAwBZ,EAAxB,aAAAY,OAA0CwE,IAY5D,OAXA1E,EAAMd,OAAOqG,EAAW,CACtB9E,QAAShF,EAAK4C,gBAAgByC,GAC9B1B,cAAe3D,EAAKqC,iBAGtBkC,EAAMd,OAAOiC,GAAbmE,EAAA,CACEL,WAAYxJ,EAAK4C,gBAAgBiB,IADnCxE,OAAAwG,EAAA,EAAAxG,CAAAwK,EAAA,WAAApF,OAEcZ,GAAW7D,EAAK8C,eAF9BzD,OAAAwG,EAAA,EAAAxG,CAAAwK,EAAA,gBAGiB7J,EAAKqC,gBAHtBwH,IAMOtF,EACJU,SACAxE,KAAK,WACJK,QAAQC,IAAI,8BAEbE,MAAM,SAAAC,GACLJ,QAAQI,MAAMA,MAhfNjB,KAofd8J,YAAc,SAAAC,GAAmC,IAAAC,EAAhC5E,EAAgC2E,EAAhC3E,OAAQzF,EAAwBoK,EAAxBpK,UAAWiE,EAAamG,EAAbnG,OAC5BU,EAAQvE,EAAKkD,GAAGqB,QAChBmB,EAAU1F,EAAKgD,UAAL,SAAAyB,OAAwBY,IAClCW,EAAahG,EAAKgD,UAAL,YAAAyB,OAA2B7E,IACxC8E,EAAe1E,EAAKgD,UAAL,SAAAyB,OAAwBZ,EAAxB,eAcrB,OAbAU,EAAMd,OAAOiB,EAAc,CACzBM,QAAShF,EAAKyC,WAAW4C,GACzB1B,cAAe3D,EAAKqC,iBAEtBkC,EAAMd,OAAOiC,GAAbuE,EAAA,CACET,WAAYxJ,EAAKyC,WAAWoB,IAD9BxE,OAAAwG,EAAA,EAAAxG,CAAA4K,EAAA,WAAAxF,OAEcZ,GAAW,GAFzBxE,OAAAwG,EAAA,EAAAxG,CAAA4K,EAAA,gBAGiBjK,EAAKqC,gBAHtB4H,IAKA1F,EAAMd,OAAOuC,EAAY,CACvB6B,UAAW7H,EAAKyC,WAAWoB,GAC3BF,cAAe3D,EAAKqC,iBAEfkC,EACJU,SACAxE,KAAK,WACJK,QAAQC,IAAI,6BAEbE,MAAM,SAAAC,GACLJ,QAAQI,MAAMA,MA5gBNjB,KAghBdiK,WAAa,SAAAC,GAAyD,IAAtD9E,EAAsD8E,EAAtD9E,OAAQ6C,EAA8CiC,EAA9CjC,OAA8CkC,EAAAD,EAAtCX,kBAAsC,IAAAY,EAAzB,GAAyBA,EAAAC,EAAAF,EAArBV,eAAqB,IAAAY,EAAX,KAAWA,EAC9D9F,EAAQvE,EAAKkD,GAAGqB,QAChBmB,EAAU1F,EAAKgD,UAAL,SAAAyB,OAAwBY,IAGxC,GAFAd,EAAMxB,OAAO2C,GAETwC,EAAQ,CACV,IAAMI,EAAUtI,EAAKgD,UAAL,SAAAyB,OAAwByD,IACxC3D,EAAMd,OAAO6E,EAAS,CACpBtD,QAAShF,EAAK4C,gBAAgByC,GAC9B1B,cAAe3D,EAAKqC,iBAKxBrC,EAAKkD,GACFY,WAAW,YACX6C,MAAM,SAAU,KAAMtB,GACtBuB,MACAnG,KAAK,SAAAoG,GACJA,EAASC,KAAKC,QAAQ,SAAA5D,GACpBoB,EAAMxB,OAAOI,EAAI6D,OAEnBlG,QAAQC,IAAI,6BAEbN,KAAK,WACJ+I,EAAWzC,QAAQ,SAAAuD,GACjB,IAAMrB,EAAWQ,EAAQa,GACnBR,EAAY9J,EAAKgD,UAAL,SAAAyB,OACP6F,EADO,aAAA7F,OACawE,IAE/B1E,EAAMd,OAAOqG,EAAW,CACtB9E,QAAShF,EAAK4C,gBAAgByC,GAC9B1B,cAAe3D,EAAKqC,mBAGxBvB,QAAQC,IAAI,+BAEbN,KAAK,WACJT,EAAKkD,GACFY,WAAW,YACX6C,MAAM,SAAU,KAAMtB,GACtBuB,MACAnG,KAAK,SAAAoG,GAKJ,OAJAA,EAASC,KAAKC,QAAQ,SAAA5D,GACpBoB,EAAMxB,OAAOI,EAAI6D,OAEnBlG,QAAQC,IAAI,2BACLwD,EACJU,SACAxE,KAAK,WACJK,QAAQC,IAAI,kBAEbE,MAAM,SAAAC,GACLJ,QAAQI,MAAMA,UArkBdjB,KA2kBdsK,eAAiB,SAAAC,GAAuD,IAApDnF,EAAoDmF,EAApDnF,OAAQoF,EAA4CD,EAA5CC,WAAYC,EAAgCF,EAAhCE,UAAWC,EAAqBH,EAArBG,eAC3CpG,EAAQvE,EAAKkD,GAAGqB,QAChBmB,EAAU1F,EAAK2F,WAAWN,GAC1BuF,EAAc5K,EAAKiI,WAAWwC,GAC9BI,EAAa7K,EAAKiI,WAAWyC,GAanC,OAZAnG,EAAMd,OAAOiC,EAAS,CACpBwC,OAAQwC,EACR/G,cAAe3D,EAAKqC,iBAEtBkC,EAAMd,OAAOmH,EAAa,CACxB5F,QAAShF,EAAK4C,gBAAgByC,GAC9B1B,cAAe3D,EAAKqC,iBAEtBkC,EAAMd,OAAOoH,EAAY,CACvB7F,QAAS2F,EACThH,cAAe3D,EAAKqC,iBAEfkC,EACJU,SACAxE,KAAK,WACJK,QAAQC,IAAI,gBAEbE,MAAM,SAAAC,GACLJ,QAAQI,MAAMA,MAlmBNjB,KAsmBd6K,iBAAmB,SAAAC,GAAmE,IAAAC,EAAhEnH,EAAgEkH,EAAhElH,OAAQwB,EAAwD0F,EAAxD1F,OAAQ4F,EAAgDF,EAAhDE,aAAcC,EAAkCH,EAAlCG,YAAaP,EAAqBI,EAArBJ,eACzDpG,EAAQvE,EAAKkD,GAAGqB,QAChBmB,EAAU1F,EAAKgD,UAAL,SAAAyB,OAAwBY,IAClC8F,EAAgBnL,EAAKgD,UAAL,SAAAyB,OAAwBZ,EAAxB,aAAAY,OAA0CwG,IAC1DvG,EAAe1E,EAAKgD,UAAL,SAAAyB,OAAwBZ,EAAxB,aAAAY,OAA0CyG,IAa/D,OAZA3G,EAAMd,OAAOiC,GAAbsF,EAAA,GAAA3L,OAAAwG,EAAA,EAAAxG,CAAA2L,EAAA,WAAAvG,OACcZ,GAAWqH,GADzB7L,OAAAwG,EAAA,EAAAxG,CAAA2L,EAAA,gBAEiBhL,EAAKqC,gBAFtB2I,IAIAzG,EAAMd,OAAO0H,EAAe,CAC1BnG,QAAShF,EAAK4C,gBAAgByC,GAC9B1B,cAAe3D,EAAKqC,iBAEtBkC,EAAMd,OAAOiB,EAAc,CACzBM,QAAS2F,EACThH,cAAe3D,EAAKqC,iBAEfkC,EACJU,SACAxE,KAAK,WACJK,QAAQC,IAAI,8BAEbE,MAAM,SAAAC,GACLJ,QAAQI,MAAMA,MA7nBNjB,KAmoBdmL,cAAgB,SAAAC,GAAS,OAAIrL,EAAKkD,GAAGY,WAAW,YAAYX,IAAIkI,IAnoBlDpL,KAqoBdqL,WAAa,SAAAC,GAOP,IANJ1H,EAMI0H,EANJ1H,OACAI,EAKIsH,EALJtH,KAKIuH,EAAAD,EAJJ1D,iBAII,IAAA2D,EAJQ,GAIRA,EAAAC,EAAAF,EAHJ3L,iBAGI,IAAA6L,EAHQ,KAGRA,EAAAC,EAAAH,EAFJlG,cAEI,IAAAqG,EAFK,KAELA,EAAAC,EAAAJ,EADJhC,eACI,IAAAoC,EADM,KACNA,EACJ3L,EAAKkD,GACFY,WAAW,YACX2D,IAAI,CACHC,UAAW1H,EAAKqC,eAChBsB,cAAe3D,EAAKqC,eACpBgH,aAAa,EACbzB,UAAW/D,EACX2F,WAAU,CAAG3F,GAAHY,OAAApF,OAAAuM,EAAA,EAAAvM,CAAcwI,IACxByB,YAAa,KACbC,UACA3J,YACAyF,SACApB,SAEDxD,KAAK,SAAAuG,GACW,OAAX3B,GACJrF,EAAKqG,WAAWhB,EAAQ,CACtB+D,WAAYpJ,EAAKyC,WAAWuE,EAAIgB,SA9pB1B/H,KAmqBd4L,cAAgB,SAACR,GAA6B,IAAlBhI,EAAkBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GACrCtD,EAAKoL,cAAcC,GAAW5H,OAA9BpE,OAAAqE,EAAA,EAAArE,CAAA,CACEsE,cAAe3D,EAAKqC,gBACjBgB,KAtqBOpD,KA0qBd6L,cAAgB,SAAAC,GAAkC,IAA/BV,EAA+BU,EAA/BV,UAA+BW,EAAAD,EAApB1G,cAAoB,IAAA2G,EAAX,KAAWA,EAC1CzH,EAAQvE,EAAKkD,GAAGqB,QAChB0H,EAAajM,EAAKoL,cAAcC,GAGtC,GAFA9G,EAAMxB,OAAOkJ,GAET5G,EAAQ,CACV,IAAMK,EAAU1F,EAAK2F,WAAWN,GAChCd,EAAMd,OAAOiC,EAAS,CACpB0D,WAAYpJ,EAAK4C,gBAAgByI,GACjC1H,cAAe3D,EAAKqC,iBAGxB,OAAOkC,EACJU,SACAxE,KAAK,WACJK,QAAQC,IAAI,qBAEbE,MAAM,SAAAC,GACLJ,QAAQI,MAAMA,MA5rBNjB,KAisBdiM,cAAgB,SAAAC,GAAS,OAAInM,EAAKkD,GAAGY,WAAW,YAAYX,IAAIgJ,IAjsBlDlM,KAmsBdmM,WAAa,SAAAC,GAA4D,IAAzDxI,EAAyDwI,EAAzDxI,OAAyDyI,EAAAD,EAAjDxE,iBAAiD,IAAAyE,EAArC,GAAqCA,EAAjC1M,EAAiCyM,EAAjCzM,UAAWyF,EAAsBgH,EAAtBhH,OAAQkH,EAAcF,EAAdE,QACzDvM,EAAKkD,GACFY,WAAW,YACX2D,IAAI,CACHC,UAAW1H,EAAKqC,eAChBsB,cAAe3D,EAAKqC,eACpBmK,UAAU,EACVC,KAAM5I,EACN6I,GAAI7E,EACJ8E,MAAO,GACP/M,YACAyF,SACAkH,YAED9L,KAAK,SAAAuG,GACJhH,EAAKqG,WAAWhB,EAAQ,CACtB8D,WAAYnJ,EAAKyC,WAAWuE,EAAIgB,SAntB1B/H,KAwtBd2M,cAAgB,SAACT,GAA6B,IAAlB9I,EAAkBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GACrCtD,EAAKkM,cAAcC,GAAW1I,OAA9BpE,OAAAqE,EAAA,EAAArE,CAAA,CACEsE,cAAe3D,EAAKqC,gBACjBgB,KA1tBLjE,IAASyN,cAActN,GACvBU,KAAKI,KAAOjB,IAASiB,OACrBJ,KAAKiD,GAAK9D,IAASkD,oEAMnB,OAAOrC,KAAKI,KAAK8B,qBClBf2K,UAAQ,SAAA9I,GAoBR,IAAA+I,EAAA/I,EAnBJgJ,iBAmBI,IAAAD,EAnBQ,GAmBRA,EAlBJ9I,EAkBID,EAlBJC,KACAgJ,EAiBIjJ,EAjBJiJ,KACAvK,EAgBIsB,EAhBJtB,MACAwK,EAeIlJ,EAfJkJ,QACAC,EAcInJ,EAdJmJ,SACAC,EAaIpJ,EAbJoJ,QACAC,EAYIrJ,EAZJqJ,YACAC,EAWItJ,EAXJsJ,WACAC,EAUIvJ,EAVJuJ,OACAC,EASIxJ,EATJwJ,aACAC,EAQIzJ,EARJyJ,SACAC,EAOI1J,EAPJ0J,UACAC,EAMI3J,EANJ2J,MACAC,EAKI5J,EALJ4J,WACAC,EAII7J,EAJJ6J,UACAC,EAGI9J,EAHJ8J,UACAC,EAEI/J,EAFJ+J,UACAC,EACIhK,EADJgK,WAEA,OACEhP,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgP,SAAA,MACIP,GACA1O,EAAAC,EAAAC,cAAA,SAAOgP,QAASjK,EAAM+I,UAAS,gBAAAvI,OAAkBmJ,IAC9CD,GAGL3O,EAAAC,EAAAC,cAAA,SACE8N,UAAS,SAAAvI,OAAWuI,GACpBhF,GAAI/D,EACJA,KAAMA,EACNgJ,KAAMA,EACNvK,MAAOA,EACPwK,QAASA,EACTC,SAAUA,EACVE,YAAaA,EACbc,SAAUb,EACVC,OAAQA,EACRC,aAAcA,EACdxG,IAAKyG,EACLL,QAASA,EACTS,UAAWA,EACXC,UAAWA,EACXC,UAAWA,EACXK,SAAUJ,EACVK,SAAUL,GAAc,EAAI,OAMpClB,EAAMwB,aAAe,CACnBtB,UAAW,IAGEF,gBCxDTyB,UAAS,SAAAvK,GAAA,IACbwK,EADaxK,EACbwK,SADaC,EAAAzK,EAEbiJ,YAFa,IAAAwB,EAEN,SAFMA,EAGbC,EAHa1K,EAGb0K,QAHa3B,EAAA/I,EAIbgJ,iBAJa,IAAAD,EAID,GAJCA,EAAA4B,EAAA3K,EAKbyB,aALa,IAAAkJ,EAKL,UALKA,EAAAC,EAAA5K,EAMb6K,YANa,IAAAD,EAMN,KANMA,EAAAE,EAAA9K,EAOb+K,eAPa,IAAAD,EAOH,OAPGA,EAQbE,EARahL,EAQbgL,SACA/K,EATaD,EASbC,KATagL,EAAAjL,EAUbkL,gBAVa,IAAAD,KAWbE,EAXanL,EAWbmL,UACGpQ,EAZUM,OAAA+P,EAAA,EAAA/P,CAAA2E,EAAA,oHAebhF,EAAAC,EAAAC,cAAA,SAAAG,OAAAC,OAAA,CACE0N,UAAS,GAAAvI,OAAKuI,EAAL,KAAAvI,OAAkBgB,EAAlB,KAAAhB,OAA2BsK,EAA3B,KAAAtK,OAAuCyK,EAAkB,GAAPL,EAAlD,KAAApK,OACPyK,EAAQ,wBAAAzK,OAA2BoK,GAAS,IAE9C5B,KAAMA,EACNyB,QAASA,EACTM,SAAUA,EACV/K,KAAMA,EACN+C,IAAKmI,GACDpQ,GAEHyP,KAILD,EAAOD,aAAe,CACpBrB,KAAM,SACND,UAAW,GACXvH,MAAO,UACPoJ,KAAM,KACNE,QAAS,OACTG,UAAU,GAGGX,QClCTc,GAAgB,CACpBnL,SAAU,GACVD,KAAM,GACN3C,MAAO,GACPgO,YAAa,GACbC,YAAa,GACbrO,MAAO,MAGHsO,eACJ,SAAAA,EAAYzQ,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAuP,IACjBxP,EAAAX,OAAAoQ,EAAA,EAAApQ,CAAAY,KAAAZ,OAAAqQ,EAAA,EAAArQ,CAAAmQ,GAAAG,KAAA1P,KAAMlB,KAIR6Q,SAAW,SAAAC,GAAK,IAAAC,EACiC9P,EAAK+P,MAA5C7L,EADM4L,EACN5L,SAAU5C,EADJwO,EACIxO,MAAO2C,EADX6L,EACW7L,KAAMqL,EADjBQ,EACiBR,YADjBU,EAEgBhQ,EAAKjB,MAA3BK,EAFM4Q,EAEN5Q,SAAU6Q,EAFJD,EAEIC,QAClB7Q,EACGuC,+BAA+BL,EAAOgO,GACtC7O,KAAK,SAAAyP,GACJ,IAAMrM,EAASqM,EAASlP,KAAKmP,IACvB7L,EAAW4L,EAASlP,KAAKsD,UAAY,KAC3C,OAAOlF,EAAS2E,QAAQ,CACtBF,SACAI,OACAC,WACA5C,QACAgD,eAGH7D,KAAK,SAAAyP,GACJlQ,EAAKoQ,SAAL/Q,OAAAqE,EAAA,EAAArE,CAAA,GAAmBgQ,KACnBY,EAAQI,KAAKC,KAEdrP,MAAM,SAAAC,GACLlB,EAAKoQ,SAAS,CAAElP,YAEpB2O,EAAEU,kBA5BevQ,EA+BnBmN,SAAW,SAAA0C,GACT7P,EAAKoQ,SAAL/Q,OAAAwG,EAAA,EAAAxG,CAAA,GACGwQ,EAAEW,OAAOvM,KAAO4L,EAAEW,OAAO9N,SA/B5B1C,EAAK+P,MAAL1Q,OAAAqE,EAAA,EAAArE,CAAA,GAAkBgQ,IAFDrP,wEAqCV,IAAAyQ,EAQHxQ,KAAK8P,MANP7L,EAFKuM,EAELvM,SACAD,EAHKwM,EAGLxM,KACA3C,EAJKmP,EAILnP,MACAgO,EALKmB,EAKLnB,YACAC,EANKkB,EAMLlB,YACArO,EAPKuP,EAOLvP,MAEIwP,EACY,KAAhBpB,GACgB,KAAhBC,GACU,KAAVjO,GACa,KAAb4C,GACAoL,IAAgBC,EAElB,OACEvQ,EAAAC,EAAAC,cAAA,QAAM0Q,SAAU3P,KAAK2P,SAAU5C,UAAU,aACvChO,EAAAC,EAAAC,cAACyR,EAAD,CACE1M,KAAK,OACL0J,MAAM,YACNjL,MAAOuB,EACPkJ,SAAUlN,KAAKkN,SACfF,KAAK,OACLD,UAAU,qBAEZhO,EAAAC,EAAAC,cAACyR,EAAD,CACE1M,KAAK,WACL0J,MAAM,WACNjL,MAAOwB,EACPiJ,SAAUlN,KAAKkN,SACfF,KAAK,OACLD,UAAU,qBAEZhO,EAAAC,EAAAC,cAACyR,EAAD,CACE1M,KAAK,QACL0J,MAAM,QACNjL,MAAOpB,EACP6L,SAAUlN,KAAKkN,SACfF,KAAK,QACLD,UAAU,qBAEZhO,EAAAC,EAAAC,cAACyR,EAAD,CACE1M,KAAK,cACL0J,MAAM,WACNjL,MAAO4M,EACPnC,SAAUlN,KAAKkN,SACfF,KAAK,WACLD,UAAU,qBAEZhO,EAAAC,EAAAC,cAACyR,EAAD,CACE1M,KAAK,cACL0J,MAAM,mBACNjL,MAAO6M,EACPpC,SAAUlN,KAAKkN,SACfF,KAAK,WACLD,UAAU,qBAEZhO,EAAAC,EAAAC,cAAC0R,EAAD,CACE5B,SAAU0B,EACVzD,KAAK,SACL4B,KAAK,KACLE,QAAQ,YACRtJ,MAAM,UACNiJ,QAASzO,KAAK2P,UANhB,kBAUC1O,GAASlC,EAAAC,EAAAC,cAAA,SAAIgC,EAAMG,iBA1GHvC,aAgHV+R,eACbC,IACAjS,EAFagS,CAGbrB,IC1HauB,WAPM,SAAA/M,GAAA,IAAGgN,EAAHhN,EAAGgN,MAAOxC,EAAVxK,EAAUwK,SAAV,OACnBxP,EAAAC,EAAAC,cAAA,QAAM8N,UAAU,wBACdhO,EAAAC,EAAAC,cAAA,MAAI8N,UAAU,oBAAoBgE,GACjCxC,KCCCyC,WAAa,kBACjBjS,EAAAC,EAAAC,cAAA,kCAEEF,EAAAC,EAAAC,cAACgS,EAAA,EAAD,CAAMlE,UAAU,iBAAiBN,GPTd,WOSnB,cAYWyE,GANI,kBACjBnS,EAAAC,EAAAC,cAACkS,GAAD,CAAcJ,MAAM,qBAClBhS,EAAAC,EAAAC,cAACmS,GAAD,QCVEhC,GAAgB,CACpB/N,MAAO,GACPM,SAAU,GACVV,MAAO,MAGHoQ,eACJ,SAAAA,EAAYvS,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAqR,IACjBtR,EAAAX,OAAAoQ,EAAA,EAAApQ,CAAAY,KAAAZ,OAAAqQ,EAAA,EAAArQ,CAAAiS,GAAA3B,KAAA1P,KAAMlB,KAIR6Q,SAAW,SAAAC,GAAK,IAAAC,EACc9P,EAAK+P,MAAzBzO,EADMwO,EACNxO,MAAOM,EADDkO,EACClO,SACf5B,EAAKjB,MAAMK,SACRyC,2BAA2BP,EAAOM,GAClCnB,KAAK,WACJT,EAAKoQ,SAAL/Q,OAAAqE,EAAA,EAAArE,CAAA,GAAmBgQ,KACnBrP,EAAKjB,MAAMkR,QAAQI,KAAKC,KAEzBrP,MAAM,SAAAC,GACLlB,EAAKoQ,SAAS,CAAElP,YAEpB2O,EAAEU,kBAhBevQ,EAmBnBmN,SAAW,SAAA0C,GACT7P,EAAKoQ,SAAL/Q,OAAAwG,EAAA,EAAAxG,CAAA,GACGwQ,EAAEW,OAAOvM,KAAO4L,EAAEW,OAAO9N,SArBX1C,EAyBnBuR,kBAAoB,SAAA1B,IAElB1P,EAD6BH,EAAKjB,MAAMK,SAAhCe,oBAER0P,EAAEU,kBA1BFvQ,EAAK+P,MAAL1Q,OAAAqE,EAAA,EAAArE,CAAA,GAAkBgQ,IAFDrP,wEA+BV,IAAAyQ,EAC4BxQ,KAAK8P,MAAhCzO,EADDmP,EACCnP,MAAOM,EADR6O,EACQ7O,SAAUV,EADlBuP,EACkBvP,MACnBwP,EAAyB,KAAb9O,GAA6B,KAAVN,EACrC,OACEtC,EAAAC,EAAAC,cAAA,QAAM8N,UAAU,aAqBdhO,EAAAC,EAAAC,cAACyR,EAAD,CACE1M,KAAK,QACL0J,MAAM,QACNjL,MAAOpB,EACP6L,SAAUlN,KAAKkN,SACfF,KAAK,QACLD,UAAU,qBAEZhO,EAAAC,EAAAC,cAACyR,EAAD,CACE1M,KAAK,WACL0J,MAAM,WACNjL,MAAOd,EACPuL,SAAUlN,KAAKkN,SACfF,KAAK,WACLD,UAAU,qBAEZhO,EAAAC,EAAAC,cAAC0R,EAAD,CACE5B,SAAU0B,EACVzD,KAAK,SACL4B,KAAK,KACLE,QAAQ,YACRtJ,MAAM,UACNiJ,QAASzO,KAAK2P,UANhB,UAUC1O,GAASlC,EAAAC,EAAAC,cAAA,SAAIgC,EAAMG,iBAnFHvC,aAyFV+R,eACbC,IACAjS,EAFagS,CAGbS,ICrGIjC,GAAgB,CACpB/N,MAAO,GACPJ,MAAO,MAGHsQ,eACJ,SAAAA,EAAYzS,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAuR,IACjBxR,EAAAX,OAAAoQ,EAAA,EAAApQ,CAAAY,KAAAZ,OAAAqQ,EAAA,EAAArQ,CAAAmS,GAAA7B,KAAA1P,KAAMlB,KAIR6Q,SAAW,SAAAC,GAAK,IACNvO,EAAUtB,EAAK+P,MAAfzO,MAERtB,EAAKjB,MAAMK,SACR2C,cAAcT,GACdb,KAAK,WACJT,EAAKoQ,SAAL/Q,OAAAqE,EAAA,EAAArE,CAAA,GAAmBgQ,OAEpBpO,MAAM,SAAAC,GACLlB,EAAKoQ,SAAS,CAAElP,YAEpB2O,EAAEU,kBAhBevQ,EAmBnBmN,SAAW,SAAA0C,GACT7P,EAAKoQ,SAAL/Q,OAAAwG,EAAA,EAAAxG,CAAA,GACGwQ,EAAEW,OAAOvM,KAAO4L,EAAEW,OAAO9N,SAnB5B1C,EAAK+P,MAAL1Q,OAAAqE,EAAA,EAAArE,CAAA,GAAkBgQ,IAFDrP,wEAyBV,IAAA8P,EACkB7P,KAAK8P,MAAtBzO,EADDwO,EACCxO,MAAOJ,EADR4O,EACQ5O,MACTwP,EAAsB,KAAVpP,EAElB,OACEtC,EAAAC,EAAAC,cAAA,QAAM0Q,SAAU3P,KAAK2P,SAAU5C,UAAU,aACvChO,EAAAC,EAAAC,cAACyR,EAAD,CACE1M,KAAK,QACL0J,MAAM,QACNjL,MAAOpB,EACP6L,SAAUlN,KAAKkN,SACfF,KAAK,QACLD,UAAU,qBAEZhO,EAAAC,EAAAC,cAAC0R,EAAD,CACE5B,SAAU0B,EACVzD,KAAK,SACL4B,KAAK,KACLE,QAAQ,YACRtJ,MAAM,UACNiJ,QAASzO,KAAK2P,UANhB,qBAUC1O,GAASlC,EAAAC,EAAAC,cAAA,SAAIgC,EAAMG,iBAlDKvC,aAwDlBD,KAAa2S,IC3DtBC,WAAqB,kBACzBzS,EAAAC,EAAAC,cAAA,KAAG8N,UAAU,mBACXhO,EAAAC,EAAAC,cAACgS,EAAA,EAAD,CAAMxE,GVFqB,aUEOM,UAAU,YAA5C,uBAYW0E,GANY,kBACzB1S,EAAAC,EAAAC,cAACkS,GAAD,CAAcJ,MAAM,yBAClBhS,EAAAC,EAAAC,cAACyS,GAAD,QCHWC,GARI,kBACjB5S,EAAAC,EAAAC,cAACkS,GAAD,CAAcJ,MAAM,UAClBhS,EAAAC,EAAAC,cAAC2S,GAAD,MACA7S,EAAAC,EAAAC,cAAC4S,GAAD,MACA9S,EAAAC,EAAAC,cAAC6S,GAAD,QCNWC,GAFSrT,IAAMC,cAAc,mCCC7BQ,GADE,IAAIW,ECCRkS,GAAiB,SAAA9P,GAC5B,MAAO,CACL8K,KCL4B,mBDM5B9K,gBAIS+P,GAAuB,SAAArO,GAClC,sBAAAG,EAAA3E,OAAA8S,GAAA,EAAA9S,CAAA+S,GAAAnT,EAAAoT,KAAO,SAAAC,EAAMC,GAAN,IAAApQ,EAAA,OAAAiQ,GAAAnT,EAAAuT,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEuBvT,GACvB4D,UADuB,SAAAyB,OACJZ,IACnB+C,MACAnG,KAAK,SAAA0C,GAAG,OAAIA,EAAIyP,SALhB,OAEGzQ,EAFHsQ,EAAAI,KAMHN,EAASN,GAAe9P,IANrBsQ,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAQH3R,QAAQC,IAAR0R,EAAAK,IARG,yBAAAL,EAAAM,SAAAT,EAAArS,KAAA,YAAP,gBAAA+S,GAAA,OAAAhP,EAAAiP,MAAAhT,KAAAqD,YAAA,IAaW4P,GAAc,SAAAzJ,GACzB,MAAO,CACLwD,KCzBwB,eD0BxBxD,YAIS0J,GAAe,SAAAtP,GAC1B,sBAAAuB,EAAA/F,OAAA8S,GAAA,EAAA9S,CAAA+S,GAAAnT,EAAAoT,KAAO,SAAAe,EAAMb,GAAN,IAAA9I,EAAA,OAAA2I,GAAAnT,EAAAuT,KAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,cAAAU,EAAAX,KAAA,EAAAW,EAAAV,KAAA,EAEmBvT,GACnB4D,UADmB,SAAAyB,OACAZ,IACnBC,WAAW,WACX8C,MACAnG,KAAK,SAAAoG,GACJ,IAAMyM,EAAc,GAOpB,OANAzM,EAASE,QAAQ,SAAA5D,GACfmQ,EAAYnQ,EAAI6E,IAAhB3I,OAAAqE,EAAA,EAAArE,CAAA,CACE4J,SAAU9F,EAAI6E,IACX7E,EAAIyP,UAGJU,IAdR,OAEG7J,EAFH4J,EAAAR,KAgBHN,EAASW,GAAYzJ,IAhBlB4J,EAAAV,KAAA,gBAAAU,EAAAX,KAAA,EAAAW,EAAAP,GAAAO,EAAA,SAkBHvS,QAAQC,IAARsS,EAAAP,IAlBG,yBAAAO,EAAAN,SAAAK,EAAAnT,KAAA,YAAP,gBAAAsT,GAAA,OAAAnO,EAAA6N,MAAAhT,KAAAqD,YAAA,IAuBWkQ,GAAY,SAAArN,GACvB,MAAO,CACL8G,KCvDsB,aDwDtBhE,SAHmD9C,EAA3B8C,SAIxBwK,WAJmDtN,EAAjBsN,aAQzBC,GAAe,SAAAnN,GAC1B,MAAO,CACL0G,KC7DyB,gBD8DzBhE,SAHsD1C,EAA3B0C,SAI3BwK,WAJsDlN,EAAjBkN,aAQ5BE,GAAe,SAAA1K,GAC1B,MAAO,CACLgE,KCtEyB,gBDuEzBhE,aAIS2K,GAAiB,SAAC/P,EAAQkB,GACrC,MAAO,CACLkI,KC3E2B,kBD4E3BpJ,SACAkB,cAIS8O,GAAmB,SAAAC,GAC9B,MAAO,CACL7G,KCjF+B,sBDkF/B6G,iBAISC,GAA0B,SAAClQ,EAAQmQ,GAC9C,IAAMC,EAAe,IAAIC,KAEnBC,GADY,IAAID,KAAKD,EAAaG,SAAS,EAAG,EAAG,EAAG,IACvC,IAAIF,KAAKD,IACtBI,EAAU,IAAIH,KAAKC,EAAWG,QAAQH,EAAWI,UAAYP,IAEnE,sBAAAtN,EAAArH,OAAA8S,GAAA,EAAA9S,CAAA+S,GAAAnT,EAAAoT,KAAO,SAAAmC,EAAMjC,GAAN,IAAAuB,EAAA,OAAA1B,GAAAnT,EAAAuT,KAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,cAAA8B,EAAA/B,KAAA,EAAA+B,EAAA9B,KAAA,EAEwBvT,GAAS8D,GACjCY,WAAW,SACX6C,MAAM,aAAc,iBAAkB9C,GACtC8C,MAAM,UAAW,KAAM0N,GACvBK,QAAQ,UAAW,OACnB9N,MACAnG,KAAK,SAAAoG,GACJ,IAAM8N,EAAQ,GAOd,OANA9N,EAASE,QAAQ,SAAA5D,GACfwR,EAAMxR,EAAI6E,IAAV3I,OAAAqE,EAAA,EAAArE,CAAA,CACEgG,OAAQlC,EAAI6E,IACT7E,EAAIyP,UAGJ+B,IAhBR,OAEGb,EAFHW,EAAA5B,KAkBHN,EAASsB,GAAiBC,IAlBvBW,EAAA9B,KAAA,gBAAA8B,EAAA/B,KAAA,EAAA+B,EAAA3B,GAAA2B,EAAA,SAoBH3T,QAAQC,IAAR0T,EAAA3B,IApBG,yBAAA2B,EAAA1B,SAAAyB,EAAAvU,KAAA,YAAP,gBAAA2U,GAAA,OAAAlO,EAAAuM,MAAAhT,KAAAqD,YAAA,IAyBWuR,GAAiB,SAAA1N,GAC5B,MAAO,CACL8F,KCtH6B,oBDuH7B5H,OAHoD8B,EAAvB9B,OAI7ByP,SAJoD3N,EAAf2N,WAQ5BC,GAAoB,SAAA1P,GAC/B,MAAO,CACL4H,KC7HgC,uBD8HhC5H,WAIS2P,GAAoB,SAAA3M,GAC/B,MAAO,CACL4E,KCnIgC,uBDoIhC5H,OAHuDgD,EAAvBhD,OAIhCyP,SAJuDzM,EAAfyM,WE3I/BG,GAAiB,SAAAlF,GAC5B,OAAOA,EAAM5N,aAGF+S,GAAmB,SAAAnF,GAAS,IAC/B5N,EAAgB4N,EAAhB5N,YACR,OAAKA,EACEA,EAAY0B,OADM,MAIdsR,GAAa,SAAApF,GAAS,IACzB5N,EAAgB4N,EAAhB5N,YACR,OAAKA,EACEA,EAAYsH,QADM,MAId2L,GAAe,SAAArF,GAAS,IAC3B5N,EAAgB4N,EAAhB5N,YACR,OAAKA,EACEA,EAAY4C,UADM,IAIdsQ,GAAkB,SAAAtF,GAAS,IAC9B5N,EAAgB4N,EAAhB5N,YACR,IAAKA,EAAa,MAAO,GAFa,IAG9BsH,EAAYtH,EAAZsH,QACR,OAAKA,EACEpK,OAAOiW,KAAK7L,GAAS8L,IAAI,SAAAtM,GAC9B,OAAO5J,OAAAqE,EAAA,EAAArE,CAAA,GACFoK,EAAQR,GADb,CAEEuM,UACe,MAAbvM,GACa,MAAbA,GACa,MAAbA,GACa,MAAbA,MARe,IAaVwM,GAAY,SAAC1F,EAAO9G,GAAa,IACpC9G,EAAgB4N,EAAhB5N,YACR,OAAKA,EACEA,EAAYsH,QAAQR,GADF,MAIdyM,GAAsB,SAAA3F,GAAS,IAClC5N,EAAgB4N,EAAhB5N,YACR,OAAKA,EACEA,EAAY2R,aADM,IAId6B,GAAqB,SAAA5F,GAAS,IACjC+D,EAAiB/D,EAAM5N,YAAvB2R,aACR,OAAKA,EACEzU,OAAOiW,KAAKxB,GAAcyB,IAAI,SAAAlQ,GAAM,OAAIyO,EAAazO,KADlC,IAIfuQ,GAAgB,SAAA7F,GAAS,IAEjBnQ,EAIfmQ,EAJF8F,gBACAC,EAGE/F,EAHF+F,aACAC,EAEEhG,EAFFgG,UAGMlS,EADJkM,EADF5N,YAEM0B,OACR,IAAKjE,EAAW,MAAO,GARa,IAStBoW,EAAgBF,EAAalW,GAAnCgG,KACMqQ,EAAaF,EAAUlS,GAA7B+B,KACFsQ,EAAU7W,OAAAqE,EAAA,EAAArE,CAAA,GAAQ4W,EAAaD,GACrC,OAAO3W,OAAOiW,KAAKY,GAAYX,IAAI,SAAAnP,GAAG,OAAI8P,EAAW9P,wVCnEvD,IAqGejE,GArGK,WAA0B,IAAzB4N,EAAyBzM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,KAAM6S,EAAW7S,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5C,OAAQ2S,EAAOlJ,MACb,IFJ4B,mBEM1B,OADwBkJ,EAAhBhU,YAGV,IFPwB,eEOC,IACfsH,EAAY0M,EAAZ1M,QACR,OAAOpK,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EADL,CAEEtG,YAGJ,IFbsB,aEaC,IACbR,EAAyBkN,EAAzBlN,SAAUwK,EAAe0C,EAAf1C,WAClB,OAAOpU,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EADL,CAEEtG,QAAQpK,OAAAqE,EAAA,EAAArE,CAAA,GACH0Q,EAAMtG,QADJpK,OAAAwG,EAAA,EAAAxG,CAAA,GAEJ4J,EAFI5J,OAAAqE,EAAA,EAAArE,CAAA,CAGH4J,YACGwK,OAKX,IFzByB,gBEyBC,IAChBxK,EAAakN,EAAblN,SADgBmN,EAEgCrG,EAAMtG,QAAxB4M,GAFdD,EAEfnN,GAFe5J,OAAA+P,EAAA,EAAA/P,CAAA+W,EAAA,CAEfnN,GAFesM,IAAAe,MAGxB,OAAOjX,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EADL,CAEEtG,QAAS4M,IAGb,IFhCyB,gBEgCC,IAChBpN,EAAyBkN,EAAzBlN,SAAUwK,EAAe0C,EAAf1C,WAClB,OAAOpU,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EADL,CAEEtG,QAAQpK,OAAAqE,EAAA,EAAArE,CAAA,GACH0Q,EAAMtG,QADJpK,OAAAwG,EAAA,EAAAxG,CAAA,GAEJ4J,EAFI5J,OAAAqE,EAAA,EAAArE,CAAA,GAGA0Q,EAAMtG,QAAQR,GACdwK,OAKX,IF3C6B,oBE4C7B,IF7C2B,kBE6CC,IAClB1O,EAAcoR,EAAdpR,UACR,OAAO1F,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EADL,CAEEhL,cAGJ,IFlD+B,sBEkDC,IACtB+O,EAAiBqC,EAAjBrC,aACR,OAAOzU,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EADL,CAEE+D,iBAGJ,IFxD6B,oBEwDC,IACpBzO,EAAqB8Q,EAArB9Q,OAAQyP,EAAaqB,EAAbrB,SAChB,OAAOzV,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EADL,CAEE+D,aAAazU,OAAAqE,EAAA,EAAArE,CAAA,GACR0Q,EAAM+D,aADCzU,OAAAwG,EAAA,EAAAxG,CAAA,GAETgG,EAFShG,OAAAqE,EAAA,EAAArE,CAAA,CAGRgG,UACGyP,OAKX,IFpEgC,uBEoEC,IACvBzP,EAAW8Q,EAAX9Q,OADuBkR,EAEmBxG,EAAM+D,aAAtB0C,GAFHD,EAEtBlR,GAFsBhG,OAAA+P,EAAA,EAAA/P,CAAAkX,EAAA,CAEtBlR,GAFsBkQ,IAAAe,MAG/B,OAAOjX,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EADL,CAEE+D,aAAc0C,IAGlB,IF3EgC,uBE2EC,IACvBnR,EAAqB8Q,EAArB9Q,OAAQyP,EAAaqB,EAAbrB,SAChB,OAAOzV,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EADL,CAEE+D,aAAazU,OAAAqE,EAAA,EAAArE,CAAA,GACR0Q,EAAM+D,aADCzU,OAAAwG,EAAA,EAAAxG,CAAA,GAETgG,EAFShG,OAAAqE,EAAA,EAAArE,CAAA,GAGL0Q,EAAM1K,GACNyP,OAKX,QACE,OAAO/E,IC9BE0G,GA5DY,SAAA3X,GAAa,IAChC4X,EADgC,SAAAC,GAEpC,SAAAD,EAAY3X,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAyW,IACjB1W,EAAAX,OAAAoQ,EAAA,EAAApQ,CAAAY,KAAAZ,OAAAqQ,EAAA,EAAArQ,CAAAqX,GAAA/G,KAAA1P,KAAMlB,KACDgR,MAAQ,CACXG,SAAU,MAHKlQ,EAFiB,OAAAX,OAAAuX,EAAA,EAAAvX,CAAAqX,EAAAC,GAAAtX,OAAAwX,EAAA,EAAAxX,CAAAqX,EAAA,EAAAI,IAAA,oBAAApU,MAAA,WAShB,IAAAqU,EAAA9W,KAAA+P,EAMd/P,KAAKlB,MAJPK,EAFgB4Q,EAEhB5Q,SACA6Q,EAHgBD,EAGhBC,QACAiC,EAJgBlC,EAIhBkC,qBACAD,EALgBjC,EAKhBiC,eAGFhS,KAAK+W,SAAW5X,EAASiB,KAAK4W,mBAAmB,SAAA/G,GAC3CA,GACFgC,EAAqBhC,EAASC,KAC9B4G,EAAK3G,SAAS,CAAEF,aAChBD,EAAQI,KAAR,WAAA5L,OAAwByL,EAASC,QAEjCF,EAAQI,KlB9BK,WkB+Bb4B,EAAe,MACf8E,EAAK3G,SAAS,CAAEF,SAAU,YAzBI,CAAA4G,IAAA,uBAAApU,MAAA,WA+BlCzC,KAAK+W,aA/B6B,CAAAF,IAAA,SAAApU,MAAA,WAmClC,OACE1D,EAAAC,EAAAC,cAACgY,GAAgBC,SAAjB,CAA0BzU,MAAOzC,KAAK8P,MAAMG,UAC1ClR,EAAAC,EAAAC,cAACJ,EAAcmB,KAAKlB,YArCU2X,EAAA,CACL/X,IAAMG,WAiDvC,OAAO+R,YACLC,IACAjS,EACAuY,YACE,KAXuB,SAAA7E,GAAQ,MAAK,CACtCL,qBAAsB,SAAArO,GAAM,OAC1B0O,EAAS8E,EAAmBnF,qBAAqBrO,KACnDoO,eAAgB,SAAA9P,GAAW,OACzBoQ,EAAS8E,EAAmBpF,eAAe9P,QAGxC0O,CAOL6F,ICtBWY,GArCW,SAAAC,GAAS,OAAI,SAAAzY,GAAa,IAC5C0Y,EAD4C,SAAAb,GAEhD,SAAAa,EAAYzY,GAAQ,OAAAM,OAAAa,EAAA,EAAAb,CAAAY,KAAAuX,GAAAnY,OAAAoQ,EAAA,EAAApQ,CAAAY,KAAAZ,OAAAqQ,EAAA,EAAArQ,CAAAmY,GAAA7H,KAAA1P,KACZlB,IAHwC,OAAAM,OAAAuX,EAAA,EAAAvX,CAAAmY,EAAAb,GAAAtX,OAAAwX,EAAA,EAAAxX,CAAAmY,EAAA,EAAAV,IAAA,oBAAApU,MAAA,WAM5B,IAAAsN,EACY/P,KAAKlB,MAA3BK,EADU4Q,EACV5Q,SAAU6Q,EADAD,EACAC,QAClBhQ,KAAK+W,SAAW5X,EAASiB,KAAK4W,mBAAmB,SAAA/G,GAC1CqH,EAAUrH,IACbD,EAAQI,KnBfK,emBK6B,CAAAyG,IAAA,uBAAApU,MAAA,WAgB9CzC,KAAK+W,aAhByC,CAAAF,IAAA,SAAApU,MAAA,WAmBvC,IAAA1C,EAAAC,KACP,OACEjB,EAAAC,EAAAC,cAACgY,GAAgB/X,SAAjB,KACG,SAAA+Q,GAAQ,OACPqH,EAAUrH,GACRlR,EAAAC,EAAAC,cAACJ,EAADO,OAAAC,OAAA,CAAWuE,OAAQqM,EAASC,KAASnQ,EAAKjB,QACxC,WAzBoCyY,EAAA,CAClB7Y,IAAMG,WA8BtC,OAAO+R,YACLC,IACAjS,EAFKgS,CAGL2G,KCtCSC,GAAe,SAAAzW,GAC1B,MAAO,CACLiM,KCL0B,iBDM1BjM,SAIS0W,GAAgB,SAAA3B,GAC3B,MAAO,CACL9I,KCX4B,mBDY5B8I,cAIS4B,GAAiB,WAC5B,sBAAA3T,EAAA3E,OAAA8S,GAAA,EAAA9S,CAAA+S,GAAAnT,EAAAoT,KAAO,SAAAC,EAAMC,GAAN,IAAAwD,EAAA,OAAA3D,GAAAnT,EAAAuT,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEqBvT,GAAS8D,GAC9BY,WAAW,SACX8C,MACAnG,KAAK,SAAAoG,GACJ,IAAM+Q,EAAQ,GAOd,OANA/Q,EAASE,QAAQ,SAAA5D,GACfyU,EAAMzU,EAAI6E,IAAV3I,OAAAqE,EAAA,EAAArE,CAAA,CACEwE,OAAQV,EAAI6E,IACT7E,EAAIyP,UAGJgF,IAbR,OAEG7B,EAFHtD,EAAAI,KAeHN,EAASmF,GAAc3B,IAfpBtD,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAiBH3R,QAAQC,IAAR0R,EAAAK,IAjBG,yBAAAL,EAAAM,SAAAT,EAAArS,KAAA,YAAP,gBAAA+S,GAAA,OAAAhP,EAAAiP,MAAAhT,KAAAqD,YAAA,IAsBWuU,GAAgB,SAAAhU,GAC3B,sBAAAuB,EAAA/F,OAAA8S,GAAA,EAAA9S,CAAA+S,GAAAnT,EAAAoT,KAAO,SAAAe,EAAMb,GAAN,IAAAvR,EAAA,OAAAoR,GAAAnT,EAAAuT,KAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,cAAAU,EAAAX,KAAA,EAAAW,EAAAV,KAAA,EAEgBvT,GAChBwE,WAAWC,GACX+C,MACAnG,KAAK,SAAA0C,GAAG,OAAIA,EAAIyP,SALhB,OAEG5R,EAFHqS,EAAAR,KAMHN,EAASkF,GAAazW,IANnBqS,EAAAV,KAAA,gBAAAU,EAAAX,KAAA,EAAAW,EAAAP,GAAAO,EAAA,SAQHvS,QAAQC,IAARsS,EAAAP,IARG,yBAAAO,EAAAN,SAAAK,EAAAnT,KAAA,YAAP,gBAAAsT,GAAA,OAAAnO,EAAA6N,MAAAhT,KAAAqD,YAAA,IAaWS,GAAU,SAAAoC,GACrB,MAAO,CACL8G,KCtDoB,WDuDpBpJ,OAH6CsC,EAAvBtC,OAItBiU,SAJ6C3R,EAAf2R,WAQrBC,GAAa,SAAAlU,GACxB,MAAO,CACLoJ,KC5DuB,cD6DvBpJ,WAISqB,GAAa,SAAAqB,GACxB,MAAO,CACL0G,KCpEuB,cDqEvBpJ,OAHgD0C,EAAvB1C,OAIzBiU,SAJgDvR,EAAfuR,WErExBE,GAAe,SAAAjI,GAC1B,OAAOA,EAAMgG,WAGFkC,GAAc,SAAClI,EAAOlM,GACjC,OAAOkM,EAAMgG,UAAUlS,IAGZqU,GAAiB,SAACnI,EAAOlM,GAAW,IACvCmB,EAAY+K,EAAMgG,UAAUlS,GAA5BmB,QACR,OAAKA,GAAgB,IAKVmT,GAAgB,SAAApI,GAAS,IAC5BgG,EAAchG,EAAdgG,UACR,OAAO1W,OAAOiW,KAAKS,GAAWR,IAAI,SAAA1R,GAChC,OAAOxE,OAAAqE,EAAA,EAAArE,CAAA,CACLwE,UACGkS,EAAUlS,OAMNuU,GAAkB,SAACrI,EAAOlI,GAAc,IAC3CkO,EAAchG,EAAdgG,UACR,OAAKlO,EACEA,EAAU0N,IAAI,SAAAjL,GAAQ,OAAIyL,EAAUzL,KADpB,sVC1BzB,IAkEeyL,GAlEG,WAAwB,IAAvBhG,EAAuBzM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAI6S,EAAW7S,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACxC,OAAQ2S,EAAOlJ,MACb,IFH4B,mBEGC,IACnB8I,EAAcI,EAAdJ,UACR,OAAO1W,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EACAgG,GAGP,IFX0B,iBEWC,IACjB/U,EAASmV,EAATnV,KACR,OAAO3B,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EACA/O,GAGP,IFb2B,kBEaC,IAClB6C,EAAsBsS,EAAtBtS,OAAQwU,EAAclC,EAAdkC,UAChB,OAAOhZ,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EADL1Q,OAAAwG,EAAA,EAAAxG,CAAA,GAEGwE,EAFHxE,OAAAqE,EAAA,EAAArE,CAAA,GAGO0Q,EAAMlM,GAHb,CAIIwU,gBAIN,IF1BoB,WE0BC,IACXxU,EAAqBsS,EAArBtS,OAAQiU,EAAa3B,EAAb2B,SAChB,OAAOzY,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EADL1Q,OAAAwG,EAAA,EAAAxG,CAAA,GAEGwE,EAFHxE,OAAAqE,EAAA,EAAArE,CAAA,CAGIwE,UACGiU,KAIT,IFlCuB,cEkCC,IACdjU,EAAWsS,EAAXtS,OAER,OADkDkM,EAAzClM,GAFaxE,OAAA+P,EAAA,EAAA/P,CAE4B0Q,EAF5B,CAEblM,GAFa0R,IAAA+C,KAKxB,IFxCuB,cEwCC,IACdzU,EAAqBsS,EAArBtS,OAAQiU,EAAa3B,EAAb2B,SAChB,OAAOzY,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EADL1Q,OAAAwG,EAAA,EAAAxG,CAAA,GAEGwE,EAFHxE,OAAAqE,EAAA,EAAArE,CAAA,GAGO0Q,EAAMlM,GACNiU,KAIT,IF9C2B,kBE8CC,IAClBjU,EAAsBsS,EAAtBtS,OAAQkB,EAAcoR,EAAdpR,UAChB,OAAO1F,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EADL1Q,OAAAwG,EAAA,EAAAxG,CAAA,GAEGwE,EAFHxE,OAAAqE,EAAA,EAAArE,CAAA,GAGO0Q,EAAMlM,GAHb,CAIIkB,gBAIN,QACE,OAAOgL,IC7DPwI,GAAc,SAAAvU,GAAyC,IAAtCpE,EAAsCoE,EAAtCpE,UAAWqH,EAA2BjD,EAA3BiD,YAAayH,EAAc1K,EAAd0K,QAC7C,OACE1P,EAAAC,EAAAC,cAAA,MAAI8N,UAAU,sBACZhO,EAAAC,EAAAC,cAACgS,EAAA,EAAD,CACElE,UAAU,qBACVN,GAAE,cAAAjI,OAAgB7E,GAClB8O,QAASA,GAET1P,EAAAC,EAAAC,cAAA,QAAM8N,UAAU,uBAAuB/F,MAMzCuR,GAAc,SAAApT,GAAA,IAAGoJ,EAAHpJ,EAAGoJ,SAAH,OAAkBxP,EAAAC,EAAAC,cAAA,MAAI8N,UAAU,gBAAgBwB,uBCdvDiK,GAAgB,SAAAC,GAC3B,MAAO,CACLzL,KCL4B,mBDM5ByL,cAISC,GAAiB,SAAA/Y,GAC5B,sBAAAoE,EAAA3E,OAAA8S,GAAA,EAAA9S,CAAA+S,GAAAnT,EAAAoT,KAAO,SAAAC,EAAMC,GAAN,IAAAmG,EAAA,OAAAtG,GAAAnT,EAAAuT,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEqBvT,GAAS8D,GAC9BY,WAAW,SACX6C,MAAM,YAAa,KAAM/G,GACzBgH,MACAnG,KAAK,SAAAoG,GACJ,IAAM+R,EAAQ,GAOd,OANA/R,EAASE,QAAQ,SAAA5D,GACfyV,EAAMzV,EAAI6E,IAAV3I,OAAAqE,EAAA,EAAArE,CAAA,CACE6I,OAAQ/E,EAAI6E,IACT7E,EAAIyP,UAGJgG,IAdR,OAEGF,EAFHjG,EAAAI,KAgBHN,EAASkG,GAAcC,IAhBpBjG,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAkBH3R,QAAQC,IAAR0R,EAAAK,IAlBG,yBAAAL,EAAAM,SAAAT,EAAArS,KAAA,YAAP,gBAAA+S,GAAA,OAAAhP,EAAAiP,MAAAhT,KAAAqD,YAAA,IAuBWuV,GAAiB,SAAAhV,GAC5B,sBAAAuB,EAAA/F,OAAA8S,GAAA,EAAA9S,CAAA+S,GAAAnT,EAAAoT,KAAO,SAAAe,EAAMb,GAAN,IAAAmG,EAAA,OAAAtG,GAAAnT,EAAAuT,KAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,cAAAU,EAAAX,KAAA,EAAAW,EAAAV,KAAA,EAEqBvT,GAAS8D,GAC9BY,WAAW,SACX6C,MAAM,SAAU,KAAM9C,GACtB+C,MACAnG,KAAK,SAAAoG,GACJ,IAAM+R,EAAQ,GAOd,OANA/R,EAASE,QAAQ,SAAA5D,GACfyV,EAAMzV,EAAI6E,IAAV3I,OAAAqE,EAAA,EAAArE,CAAA,CACE6I,OAAQ/E,EAAI6E,IACT7E,EAAIyP,UAGJgG,IAdR,OAEGF,EAFHrF,EAAAR,KAgBHN,EAASkG,GAAcC,IAhBpBrF,EAAAV,KAAA,gBAAAU,EAAAX,KAAA,EAAAW,EAAAP,GAAAO,EAAA,SAkBHvS,QAAQC,IAARsS,EAAAP,IAlBG,yBAAAO,EAAAN,SAAAK,EAAAnT,KAAA,YAAP,gBAAAsT,GAAA,OAAAnO,EAAA6N,MAAAhT,KAAAqD,YAAA,IAuBW6E,GAAa,SAAAhC,GACxB,MAAO,CACL8G,KCzDuB,cD0DvB/E,OAHgD/B,EAAvB+B,OAIzB4Q,SAJgD3S,EAAf2S,WAQxBtQ,GAAU,SAAAjC,GACrB,MAAO,CACL0G,KChEoB,WDiEpB/E,OAH6C3B,EAAvB2B,OAItB4Q,SAJ6CvS,EAAfuS,WAQrBlQ,GAAa,SAAAV,GACxB,MAAO,CACL+E,KCvEuB,cDwEvB/E,WAIS6Q,GAAyB,SAAAnZ,GACpC,sBAAA8G,EAAArH,OAAA8S,GAAA,EAAA9S,CAAA+S,GAAAnT,EAAAoT,KAAO,SAAA2G,EAAOzG,EAAU0G,GAAjB,OAAA7G,GAAAnT,EAAAuT,KAAA,SAAA0G,GAAA,cAAAA,EAAAxG,KAAAwG,EAAAvG,MAAA,OACL,IACEvT,GAAS8D,GACNY,WAAW,SACX6C,MAAM,YAAa,KAAM/G,GACzBuZ,WAHH,eAAAhS,EAAA9H,OAAA8S,GAAA,EAAA9S,CAAA+S,GAAAnT,EAAAoT,KAGc,SAAA+G,EAAMC,GAAN,OAAAjH,GAAAnT,EAAAuT,KAAA,SAAA8G,GAAA,cAAAA,EAAA5G,KAAA4G,EAAA3G,MAAA,OACV0G,EAAcE,aAAaxS,QAA3B,eAAAsB,EAAAhJ,OAAA8S,GAAA,EAAA9S,CAAA+S,GAAAnT,EAAAoT,KAAmC,SAAAmC,EAAMgF,GAAN,IAAA/Q,EAAAI,EAAAX,EAAA4Q,EAAAW,EAAA,OAAArH,GAAAnT,EAAAuT,KAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,cAAA8B,EAAA9B,KAAA,EACY+G,QAAQC,IAAI,CACvDH,EAAOrW,IAAI6E,GACXwR,EAAOrW,IAAIyP,OACX4G,EAAOvM,OAJwB,UAAAxE,EAAAgM,EAAA5B,KAAAhK,EAAAxJ,OAAAua,GAAA,EAAAva,CAAAoJ,EAAA,GAC1BP,EAD0BW,EAAA,GAClBiQ,EADkBjQ,EAAA,GACR4Q,EADQ5Q,EAAA,GAMjC/H,QAAQC,IAAImH,EAAQ4Q,EAAUW,GACX,UAAfA,EAP6B,CAAAhF,EAAA9B,KAAA,cAQ3BzK,KAAU+Q,IAAWP,WARM,CAAAjE,EAAA9B,KAAA,gBAAA8B,EAAAoF,OAAA,kBAS/BtH,EAAS/J,GAAQ,CAAEN,SAAQ4Q,cAC3BhY,QAAQC,IAAI,cAVmB0T,EAAA9B,KAAA,iBAWP,YAAf8G,EACTlH,EAAS3J,GAAWV,KAEpBqK,EAASpK,GAAW,CAAED,SAAQ4Q,cAC9BhY,QAAQC,IAAR,iBAAA0D,OAA6BqU,EAAS7U,QAfP,yBAAAwQ,EAAA1B,SAAAyB,EAAAvU,SAAnC,gBAAA6Z,GAAA,OAAAzR,EAAA4K,MAAAhT,KAAAqD,YAAA,IADU,wBAAAgW,EAAAvG,SAAAqG,EAAAnZ,SAHd,gBAAA8Z,GAAA,OAAA5S,EAAA8L,MAAAhT,KAAAqD,YAAA,IAuBA,MAAOpC,GACPJ,QAAQC,IAAIG,GA1BT,wBAAAgY,EAAAnG,SAAAiG,EAAA/Y,SAAP,gBAAA2U,EAAAoF,GAAA,OAAAtT,EAAAuM,MAAAhT,KAAAqD,YAAA,IE1EW2W,GAAU,SAAVA,EAAWvX,EAAOwX,GAC7B,IAAMjN,EAAO5N,OAAO8a,UAAUC,SAASzK,KAAKjN,GAG5C,GAAIuK,IAAS5N,OAAO8a,UAAUC,SAASzK,KAAKuK,GAAQ,OAAO,EAE3D,IACMG,EAAU,iBAEhB,GAHgB,oBAGZpN,GAAoBA,IAASoN,EAAS,OAAO,EAGjD,IAAMC,EAAWrN,IAASoN,EAAU3X,EAAMa,OAASlE,OAAOiW,KAAK5S,GAAOa,OAEtE,GAAI+W,KADarN,IAASoN,EAAUH,EAAM3W,OAASlE,OAAOiW,KAAK4E,GAAO3W,QAC3C,OAAO,EAElC,IAAMgX,EAAU,SAACC,EAAOC,GACtB,IACMC,EAAWrb,OAAO8a,UAAUC,SAASzK,KAAK6K,GAChD,OAAIE,IAAarb,OAAO8a,UAAUC,SAASzK,KAAK8K,KAblC,oBAcVC,GAAwBA,IAAaL,EAChCJ,EAAQO,EAAOC,GAJP,sBAMbC,EACKF,EAAMJ,aAAeK,EAAML,WAE7BI,IAAUC,IAGnB,GAAIxN,IAASoN,GACX,IAAK,IAAIM,EAAI,EAAGA,EAAIL,EAAUK,IAC5B,IAAKJ,EAAQ7X,EAAMiY,GAAIT,EAAMS,IAAK,OAAO,OAI3C,IAAK,IAAM7D,KAAOpU,EAChB,GAAIA,EAAMkY,eAAe9D,KACiB,IAApCyD,EAAQ7X,EAAMoU,GAAMoD,EAAMpD,IAAiB,OAAO,EAI5D,OAAO,GASI+D,GAAkB,SAAAC,GAC7B,IAAIC,EAEJ,OAAO,WAAa,QAAAC,EAAA1X,UAAAC,OAAT0X,EAAS,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAATF,EAASE,GAAA7X,UAAA6X,GAGdJ,GACFK,OAAOC,qBAAqBN,GAG9BA,EAAUK,OAAOE,sBAAsB,WACrCR,EAAS7H,aAAegI,OAYjBM,GAAY,SAACC,EAAOC,GAC/B,IAAIC,EAAQ,EACZ,OAAO,WACLA,IADkB,QAAAC,EAAArY,UAAAC,OAAT0X,EAAS,IAAAC,MAAAS,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAATX,EAASW,GAAAtY,UAAAsY,GAElB,OAAc,IAAVF,EACKF,EAAMvI,aAAYgI,GAElBQ,EAAMxI,aAAYgI,KAKlBS,GAAQ,SAACG,EAAIC,GACxB,IAAIJ,EAAQ,EACZ,OAAO,SAACT,GAEN,OADAS,IACIA,GAASI,GAGJD,EAAGZ,EAAMS,KChGTK,GAAgB,SAAA1D,GAC3B,MAAO,CACLpL,KCG4B,mBDF5BoL,cAIS2D,GAAgB,SAACnY,EAAQwU,GACpC,MAAO,CACLpL,KCD2B,kBDE3BpJ,SACAwU,cAIS4D,GAAoB,SAAArc,GAC/B,sBAAAoE,EAAA3E,OAAA8S,GAAA,EAAA9S,CAAA+S,GAAAnT,EAAAoT,KAAO,SAAAC,EAAMC,GAAN,IAAA8F,EAAA,OAAAjG,GAAAnT,EAAAuT,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEqBvT,GAAS8D,GAC9BY,WAAW,SACX6C,MAAM,YAAa,KAAM/G,GACzBgH,MACAnG,KAAK,SAAAoG,GACJ,IAAM8N,EAAQ,GAOd,OANA9N,EAASE,QAAQ,SAAA5D,GACfwR,EAAMxR,EAAI6E,IAAV3I,OAAAqE,EAAA,EAAArE,CAAA,CACEgG,OAAQlC,EAAI6E,IACT7E,EAAIyP,UAGJ+B,IAdR,OAEG0D,EAFH5F,EAAAI,KAgBHN,EAASwJ,GAAc1D,IAhBpB5F,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAkBH3R,QAAQC,IAAR0R,EAAAK,IAlBG,yBAAAL,EAAAM,SAAAT,EAAArS,KAAA,YAAP,gBAAA+S,GAAA,OAAAhP,EAAAiP,MAAAhT,KAAAqD,YAAA,IAyDEoY,GAAQ,EACNQ,GAAyB,SAACrV,GAE9B,IACM8N,EAAQ,GACZ,GAF4B,MAD9B+G,GAaI,OATA5a,QAAQC,IAAI,mBAEZ8F,EAAS0S,aAAaxS,QAAQ,SAAAyS,GAC5B7E,EAAM6E,EAAOrW,IAAI6E,IAAjB3I,OAAAqE,EAAA,EAAArE,CAAA,CACEgG,OAAQmU,EAAOrW,IAAI6E,IAChBwR,EAAOrW,IAAIyP,UAGlB9R,QAAQC,IAAI4T,GACLA,EAEP9N,EAAS0S,aAAaxS,QAAQ,SAAAyS,GAC5B,IAAMnU,EAASmU,EAAOrW,IAAI6E,GACpB8M,EAAW0E,EAAOrW,IAAIyP,OAC5B,MAAoB,UAAhB4G,EAAOvM,MACTnM,QAAQC,IAAI,cACL,SAAAwR,GACLA,EAASzJ,GAAQ,CAAEzD,SAAQyP,gBAEJ,YAAhB0E,EAAOvM,KACT,SAAAsF,GACLA,EAASrI,GAAW7E,KAGf,SAAAkN,GACLA,EAASlM,GAAW,CAAEhB,SAAQyP,kBAS7BqH,GAAgB,SAAAtY,GAC3B,sBAAAsC,EAAA9G,OAAA8S,GAAA,EAAA9S,CAAA+S,GAAAnT,EAAAoT,KAAO,SAAAmC,EAAMjC,GAAN,IAAA8F,EAAA,OAAAjG,GAAAnT,EAAAuT,KAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,cAAA8B,EAAA/B,KAAA,EAAA+B,EAAA9B,KAAA,EAEqBvT,GAAS8D,GAC9BY,WAAW,SACX6C,MAAM,aAAc,iBAAkB9C,GACtCsV,WAAW+C,IALX,OAEG7D,EAFH5D,EAAA5B,KAMJN,EAASwJ,GAAc1D,IANnB5D,EAAA9B,KAAA,gBAAA8B,EAAA/B,KAAA,EAAA+B,EAAA3B,GAAA2B,EAAA,SAQH3T,QAAQC,IAAR0T,EAAA3B,IARG,yBAAA2B,EAAA1B,SAAAyB,EAAAvU,KAAA,YAAP,gBAAA2U,GAAA,OAAAzO,EAAA8M,MAAAhT,KAAAqD,YAAA,IAaW8Y,GAAiB,SAAAvY,GAC5B,sBAAA0C,EAAAlH,OAAA8S,GAAA,EAAA9S,CAAA+S,GAAAnT,EAAAoT,KAAO,SAAA+G,EAAM7G,GAAN,IAAA8F,EAAA,OAAAjG,GAAAnT,EAAAuT,KAAA,SAAA8G,GAAA,cAAAA,EAAA5G,KAAA4G,EAAA3G,MAAA,cAAA2G,EAAA5G,KAAA,EAAA4G,EAAA3G,KAAA,EAEqBvT,GAAS8D,GAC9BY,WAAW,SACX6C,MAAM,aAAc,iBAAkB9C,GACtC+C,MACAnG,KAAK,SAAAoG,GACJ,IAAM8N,EAAQ,GAOd,OANA9N,EAASE,QAAQ,SAAA5D,GACfwR,EAAMxR,EAAI6E,IAAV3I,OAAAqE,EAAA,EAAArE,CAAA,CACEgG,OAAQlC,EAAI6E,IACT7E,EAAIyP,UAGJ+B,IAdR,OAEG0D,EAFHiB,EAAAzG,KAgBHN,EAASwJ,GAAc1D,IAhBpBiB,EAAA3G,KAAA,gBAAA2G,EAAA5G,KAAA,EAAA4G,EAAAxG,GAAAwG,EAAA,SAkBHxY,QAAQC,IAARuY,EAAAxG,IAlBG,yBAAAwG,EAAAvG,SAAAqG,EAAAnZ,KAAA,YAAP,gBAAA+Z,GAAA,OAAAzT,EAAA0M,MAAAhT,KAAAqD,YAAA,IAuBWwF,GAAU,SAAApC,GACrB,MAAO,CACLuG,KC7JoB,WD8JpB5H,OAH6CqB,EAAvBrB,OAItByP,SAJ6CpO,EAAfoO,WAQrB5K,GAAa,SAAA7E,GACxB,MAAO,CACL4H,KCpKuB,cDqKvB5H,WAISgB,GAAa,SAAAc,GACxB,MAAO,CACL8F,KC1KuB,cD2KvB5H,OAHgD8B,EAAvB9B,OAIzByP,SAJgD3N,EAAf2N,WAQxBuH,GAAkB,SAAAC,GAC7B,MAAO,CACLrP,KC1K8B,qBD2K9BqP,SAISnX,GAAS,SAACE,EAAQe,GAC7B,MAAO,CACL6G,KChLmB,UDiLnB5H,SACAe,QE1LSmW,GAAmB,SAAAC,GAC9B,MAAO,CACLvP,KCL+B,sBDM/BuP,iBAISC,GAAoB,WAC/B,sBAAAzY,EAAA3E,OAAA8S,GAAA,EAAA9S,CAAA+S,GAAAnT,EAAAoT,KAAO,SAAAC,EAAMC,GAAN,IAAAiK,EAAA,OAAApK,GAAAnT,EAAAuT,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEwBvT,GAAS8D,GACjCY,WAAW,YACX8C,MACAnG,KAAK,SAAAoG,GACJ,IAAM6V,EAAW,GAOjB,OANA7V,EAASE,QAAQ,SAAA5D,GACfuZ,EAASvZ,EAAI6E,IAAb3I,OAAAqE,EAAA,EAAArE,CAAA,CACEgM,UAAWlI,EAAI6E,IACZ7E,EAAIyP,UAGJ8J,IAbR,OAEGF,EAFH/J,EAAAI,KAeHN,EAASgK,GAAiBC,IAfvB/J,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAiBH3R,QAAQC,IAAR0R,EAAAK,IAjBG,yBAAAL,EAAAM,SAAAT,EAAArS,KAAA,YAAP,gBAAA+S,GAAA,OAAAhP,EAAAiP,MAAAhT,KAAAqD,YAAA,IAsBWqZ,GAAqB,SAAAC,GAChC,MAAO,CACL3P,KCjCiC,wBDkCjC2P,YAISC,GAAuB,SAAAjd,GAClC,sBAAAwF,EAAA/F,OAAA8S,GAAA,EAAA9S,CAAA+S,GAAAnT,EAAAoT,KAAO,SAAAe,EAAMb,GAAN,IAAAiK,EAAA,OAAApK,GAAAnT,EAAAuT,KAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,cAAAU,EAAAX,KAAA,EAAAW,EAAAV,KAAA,EAEwBvT,GAAS8D,GACjCY,WAAW,YACX6C,MAAM,YAAa,KAAM/G,GACzBgH,MACAnG,KAAK,SAAAoG,GACJ,IAAM6V,EAAW,GAOjB,OANA7V,EAASE,QAAQ,SAAA5D,GACfuZ,EAASvZ,EAAI6E,IAAb3I,OAAAqE,EAAA,EAAArE,CAAA,CACEgM,UAAWlI,EAAI6E,IACZ7E,EAAIyP,UAGJ8J,IAdR,OAEGF,EAFHnJ,EAAAR,KAgBHN,EAASgK,GAAiBC,IAhBvBnJ,EAAAV,KAAA,gBAAAU,EAAAX,KAAA,EAAAW,EAAAP,GAAAO,EAAA,SAkBHvS,QAAQC,IAARsS,EAAAP,IAlBG,yBAAAO,EAAAN,SAAAK,EAAAnT,KAAA,YAAP,gBAAAsT,GAAA,OAAAnO,EAAA6N,MAAAhT,KAAAqD,YAAA,IAuBWwZ,GAAoB,SAAAzX,GAC/B,sBAAAc,EAAA9G,OAAA8S,GAAA,EAAA9S,CAAA+S,GAAAnT,EAAAoT,KAAO,SAAAmC,EAAMjC,GAAN,IAAAiK,EAAA,OAAApK,GAAAnT,EAAAuT,KAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,cAAA8B,EAAA/B,KAAA,EAAA+B,EAAA9B,KAAA,EAEwBvT,GAAS8D,GACjCY,WAAW,YACX6C,MAAM,SAAU,KAAMtB,GACtBuB,MACAnG,KAAK,SAAAoG,GACJ,IAAM6V,EAAW,GAOjB,OANA7V,EAASE,QAAQ,SAAA5D,GACfuZ,EAASvZ,EAAI6E,IAAb3I,OAAAqE,EAAA,EAAArE,CAAA,CACEgM,UAAWlI,EAAI6E,IACZ7E,EAAIyP,UAGJ8J,IAdR,OAEGF,EAFH/H,EAAA5B,KAgBHN,EAASgK,GAAiBC,IAhBvB/H,EAAA9B,KAAA,gBAAA8B,EAAA/B,KAAA,EAAA+B,EAAA3B,GAAA2B,EAAA,SAkBH3T,QAAQC,IAAR0T,EAAA3B,IAlBG,yBAAA2B,EAAA1B,SAAAyB,EAAAvU,KAAA,YAAP,gBAAA2U,GAAA,OAAAzO,EAAA8M,MAAAhT,KAAAqD,YAAA,IAuBWyZ,GAAoB,SAAAlZ,GAC/B,sBAAA0C,EAAAlH,OAAA8S,GAAA,EAAA9S,CAAA+S,GAAAnT,EAAAoT,KAAO,SAAA+G,EAAM7G,GAAN,IAAAiK,EAAA,OAAApK,GAAAnT,EAAAuT,KAAA,SAAA8G,GAAA,cAAAA,EAAA5G,KAAA4G,EAAA3G,MAAA,cAAA2G,EAAA5G,KAAA,EAAA4G,EAAA3G,KAAA,EAEwBvT,GAAS8D,GACjCY,WAAW,YACX6C,MAAM,aAAc,iBAAkB9C,GACtC+C,MACAnG,KAAK,SAAAoG,GACJ,IAAM6V,EAAW,GAOjB,OANA7V,EAASE,QAAQ,SAAA5D,GACfuZ,EAASvZ,EAAI6E,IAAb3I,OAAAqE,EAAA,EAAArE,CAAA,CACEgM,UAAWlI,EAAI6E,IACZ7E,EAAIyP,UAGJ8J,IAdR,OAEGF,EAFHlD,EAAAzG,KAgBHN,EAASgK,GAAiBC,IAhBvBlD,EAAA3G,KAAA,gBAAA2G,EAAA5G,KAAA,EAAA4G,EAAAxG,GAAAwG,EAAA,SAkBHxY,QAAQC,IAARuY,EAAAxG,IAlBG,yBAAAwG,EAAAvG,SAAAqG,EAAAnZ,KAAA,YAAP,gBAAA+Z,GAAA,OAAAzT,EAAA0M,MAAAhT,KAAAqD,YAAA,IAuBWgI,GAAa,SAAA5E,GACxB,MAAO,CACLuG,KC/GuB,cDgHvB5B,UAHsD3E,EAA7B2E,UAIzB2R,YAJsDtW,EAAlBsW,cAQ3BlR,GAAgB,SAAAT,GAC3B,MAAO,CACL4B,KCrH0B,iBDsH1B5B,cAISQ,GAAgB,SAAA1E,GAC3B,MAAO,CACL8F,KC7H0B,iBD8H1B5B,UAHyDlE,EAA7BkE,UAI5B2R,YAJyD7V,EAAlB6V,cEzH9BC,GAAmB,SAAAnH,GAC9B,MAAO,CACL7I,KCR+B,sBDS/B6I,iBAISoH,GAAc,SAACtd,EAAWud,GACrC,MAAO,CACLlQ,KCdwB,eDexBrN,YACAud,gBAISC,GAAoB,SAAAvZ,GAC/B,sBAAAG,EAAA3E,OAAA8S,GAAA,EAAA9S,CAAA+S,GAAAnT,EAAAoT,KAAO,SAAAC,EAAMC,GAAN,IAAAuD,EAAA,OAAA1D,GAAAnT,EAAAuT,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEwBvT,GAAS8D,GACjCY,WAAW,YACX6C,MAAM,YAAa,iBAAkB9C,GACrC+C,MACAnG,KAAK,SAAAoG,GACJ,IAAMwW,EAAW,GAOjB,OANAxW,EAASE,QAAQ,SAAA5D,GACfka,EAASla,EAAI6E,IAAb3I,OAAAqE,EAAA,EAAArE,CAAA,CACEO,UAAWuD,EAAI6E,IACZ7E,EAAIyP,UAGJyK,IAdR,OAEGvH,EAFHrD,EAAAI,KAgBHN,EAAS0K,GAAiBnH,IAhBvBrD,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAkBH3R,QAAQC,IAAR0R,EAAAK,IAlBG,yBAAAL,EAAAM,SAAAT,EAAArS,KAAA,YAAP,gBAAA+S,GAAA,OAAAhP,EAAAiP,MAAAhT,KAAAqD,YAAA,IAuBWga,GAAmB,eAAAlY,EAAA/F,OAAA8S,GAAA,EAAA9S,CAAA+S,GAAAnT,EAAAoT,KAAG,SAAAe,EAAMxT,GAAN,IAAA2d,EAAA,OAAAnL,GAAAnT,EAAAuT,KAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,cAAAU,EAAAX,KAAA,EAAAW,EAAAV,KAAA,EAETvT,GAAS4D,UAAT,YAAAyB,OAA+B7E,IAAagH,MAFnC,cAEzB2W,EAFyBlK,EAAAR,KAAAQ,EAAAwG,OAAA,SAAAxa,OAAAqE,EAAA,EAAArE,CAAA,CAI7BO,aACG2d,EAAQ3K,SALkB,OAAAS,EAAAX,KAAA,EAAAW,EAAAP,GAAAO,EAAA,SAQ/BvS,QAAQC,IAARsS,EAAAP,IAR+B,yBAAAO,EAAAN,SAAAK,EAAAnT,KAAA,YAAH,gBAAAsT,GAAA,OAAAnO,EAAA6N,MAAAhT,KAAAqD,YAAA,GAYnBka,GAAiB,eAAArX,EAAA9G,OAAA8S,GAAA,EAAA9S,CAAA+S,GAAAnT,EAAAoT,KAAG,SAAAmC,EAAM5U,GAAN,IAAA6d,EAAA,OAAArL,GAAAnT,EAAAuT,KAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,cAAA8B,EAAA/B,KAAA,EAAA+B,EAAA9B,KAAA,EAEFvT,GAAS8D,GACjCY,WAAW,SACX6C,MAAM,YAAa,KAAM/G,GACzBgH,MACAnG,KAAK,SAAAoG,GACJ,IAAM+R,EAAQ,GAOd,OANA/R,EAASE,QAAQ,SAAA5D,GACfyV,EAAMzV,EAAI6E,IAAV3I,OAAAqE,EAAA,EAAArE,CAAA,CACE6I,OAAQ/E,EAAI6E,IACT7E,EAAIyP,UAGJgG,IAdkB,cAEvB6E,EAFuBhJ,EAAA5B,KAAA4B,EAAAoF,OAAA,SAgBtB4D,GAhBsB,OAAAhJ,EAAA/B,KAAA,EAAA+B,EAAA3B,GAAA2B,EAAA,SAkB7B3T,QAAQC,IAAR0T,EAAA3B,IAlB6B,yBAAA2B,EAAA1B,SAAAyB,EAAAvU,KAAA,YAAH,gBAAA2U,GAAA,OAAAzO,EAAA8M,MAAAhT,KAAAqD,YAAA,GAsBjB2Y,GAAiB,eAAA1V,EAAAlH,OAAA8S,GAAA,EAAA9S,CAAA+S,GAAAnT,EAAAoT,KAAG,SAAA+G,EAAMxZ,GAAN,IAAA8d,EAAA,OAAAtL,GAAAnT,EAAAuT,KAAA,SAAA8G,GAAA,cAAAA,EAAA5G,KAAA4G,EAAA3G,MAAA,cAAA2G,EAAA5G,KAAA,EAAA4G,EAAA3G,KAAA,EAEFvT,GAAS8D,GACjCY,WAAW,SACX6C,MAAM,YAAa,KAAM/G,GACzBgH,MACAnG,KAAK,SAAAoG,GACJ,IAAM8N,EAAQ,GAOd,OANA9N,EAASE,QAAQ,SAAA5D,GACfwR,EAAMxR,EAAI6E,IAAV3I,OAAAqE,EAAA,EAAArE,CAAA,CACEgG,OAAQlC,EAAI6E,IACT7E,EAAIyP,UAGJ+B,IAdkB,cAEvB+I,EAFuBpE,EAAAzG,KAAAyG,EAAAO,OAAA,SAgBtB6D,GAhBsB,OAAApE,EAAA5G,KAAA,EAAA4G,EAAAxG,GAAAwG,EAAA,SAkB7BxY,QAAQC,IAARuY,EAAAxG,IAlB6B,yBAAAwG,EAAAvG,SAAAqG,EAAAnZ,KAAA,YAAH,gBAAA+Z,GAAA,OAAAzT,EAAA0M,MAAAhT,KAAAqD,YAAA,GAsBjBuZ,GAAoB,eAAAnW,EAAArH,OAAA8S,GAAA,EAAA9S,CAAA+S,GAAAnT,EAAAoT,KAAG,SAAA2G,EAAMpZ,GAAN,IAAA+d,EAAA,OAAAvL,GAAAnT,EAAAuT,KAAA,SAAA0G,GAAA,cAAAA,EAAAxG,KAAAwG,EAAAvG,MAAA,cAAAuG,EAAAxG,KAAA,EAAAwG,EAAAvG,KAAA,EAEFvT,GAAS8D,GACpCY,WAAW,YACX6C,MAAM,YAAa,KAAM/G,GACzBgH,MACAnG,KAAK,SAAAoG,GACJ,IAAM6V,EAAW,GAOjB,OANA7V,EAASE,QAAQ,SAAA5D,GACfuZ,EAASvZ,EAAI6E,IAAb3I,OAAAqE,EAAA,EAAArE,CAAA,CACEgM,UAAWlI,EAAI6E,IACZ7E,EAAIyP,UAGJ8J,IAdqB,cAE1BiB,EAF0BzE,EAAArG,KAAAqG,EAAAW,OAAA,SAgBzB8D,GAhByB,OAAAzE,EAAAxG,KAAA,EAAAwG,EAAApG,GAAAoG,EAAA,SAkBhCpY,QAAQC,IAARmY,EAAApG,IAlBgC,yBAAAoG,EAAAnG,SAAAiG,EAAA/Y,KAAA,YAAH,gBAAA8Z,GAAA,OAAArT,EAAAuM,MAAAhT,KAAAqD,YAAA,GAsBpBsa,GAAsB,SAAAhe,GACjC,sBAAAuH,EAAA9H,OAAA8S,GAAA,EAAA9S,CAAA+S,GAAAnT,EAAAoT,KAAO,SAAAwL,EAAMtL,GAAN,IAAAmK,EAAA/H,EAAAiE,EAAA2E,EAAA,OAAAnL,GAAAnT,EAAAuT,KAAA,SAAAsL,GAAA,cAAAA,EAAApL,KAAAoL,EAAAnL,MAAA,cAAAmL,EAAApL,KAAA,EAEGgK,EAAWG,GAAqBjd,GAChC+U,EAAQsH,GAAkBrc,GAC1BgZ,EAAQ4E,GAAkB5d,GAJ7Bke,EAAAnL,KAAA,EAKmB+G,QAAQC,IAAI,CAAC+C,EAAU/H,EAAOiE,IALjD,OAKG2E,EALHO,EAAAjL,KAMHN,EAASgK,GAAiBgB,EAAQ,KAClChL,EAASwJ,GAAcwB,EAAQ,KAC/BhL,EAASkG,GAAc8E,EAAQ,KAR5BO,EAAAnL,KAAA,iBAAAmL,EAAApL,KAAA,GAAAoL,EAAAhL,GAAAgL,EAAA,SAUHhd,QAAQC,IAAR+c,EAAAhL,IAVG,yBAAAgL,EAAA/K,SAAA8K,EAAA5d,KAAA,aAAP,gBAAA6Z,GAAA,OAAA3S,EAAA8L,MAAAhT,KAAAqD,YAAA,IAeWkD,GAAgB,SAAC5G,EAAWud,GACvC,MAAO,CACLlQ,KC3I0B,iBD4I1BrN,YACAud,gBAISY,GAAe,SAACne,EAAW+H,GACtC,MAAO,CACLsF,KClJyB,gBDmJzBrN,YACA+H,YAISqW,GAAgB,SAACpe,EAAW+H,GACvC,MAAO,CACLsF,KCzJ2B,kBD0J3BrN,YACA+H,YAISsW,GAAoB,SAACre,EAAWgG,GAC3C,MAAO,CACLqH,KChK+B,sBDiK/BrN,YACAgG,SEvKSsY,GAAkB,SAAAnO,GAC7B,OAAOA,EAAM+F,cAGFqI,GAAmB,SAAApO,GAAS,IAC/B+F,EAAiB/F,EAAjB+F,aACR,OAAOzW,OAAOiW,KAAKQ,GAAcP,IAAI,SAAA3V,GAAS,OAAIkW,EAAalW,MAGpDwe,GAAa,SAACrO,EAAOnQ,GAEhC,OADyBmQ,EAAjB+F,aACYlW,IAGTye,GAAiB,SAACtO,EAAOnQ,GACpC,OAAKA,EACoBmQ,EAAjB+F,aACYlW,GAAWgG,KAFR,IAKZ0Y,GAAiB,SAACvO,EAAOnQ,GACpC,OAAKA,EACoBmQ,EAAjB+F,aACYlW,GAAWqE,KAFR,IAKZsa,GAAkB,SAACxO,EAAOnQ,GACrC,OAAKA,EACoBmQ,EAAjB+F,aACYlW,GAAW6F,MAFR,ICgCVqQ,GAzDM,WAAwB,IAAvB/F,EAAuBzM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAI6S,EAAW7S,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,OAAQ2S,EAAOlJ,MACb,IFJ+B,sBEIC,IACtB6I,EAAiBK,EAAjBL,aACR,OAAOzW,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EACA+F,GAGP,IFVwB,eEUC,IACflW,EAA2BuW,EAA3BvW,UAAWud,EAAgBhH,EAAhBgH,YACnB,OAAO9d,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EADL1Q,OAAAwG,EAAA,EAAAxG,CAAA,GAEGO,EAFHP,OAAAqE,EAAA,EAAArE,CAAA,CAGIO,aACGud,KAIT,IFnB0B,iBEmBC,IACjBvd,EAA2BuW,EAA3BvW,UAAWud,EAAgBhH,EAAhBgH,YACnB,OAAO9d,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EADL1Q,OAAAwG,EAAA,EAAAxG,CAAA,GAEGO,EAFHP,OAAAqE,EAAA,EAAArE,CAAA,GAGO0Q,EAAMnQ,GACNud,KAIT,IF3B2B,kBE4B3B,IF7ByB,gBE6BC,IAChBvd,EAAuBuW,EAAvBvW,UAAW+H,EAAYwO,EAAZxO,QACnB,OAAOtI,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EADL1Q,OAAAwG,EAAA,EAAAxG,CAAA,GAEGO,EAFHP,OAAAqE,EAAA,EAAArE,CAAA,GAGO0Q,EAAMnQ,GAHb,CAII+H,cAIN,IFrC+B,sBEqCC,IACtB/H,EAAoBuW,EAApBvW,UAAWgG,EAASuQ,EAATvQ,KACnB,OAAOvG,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EADL1Q,OAAAwG,EAAA,EAAAxG,CAAA,GAEGO,EAFHP,OAAAqE,EAAA,EAAArE,CAAA,GAGO0Q,EAAMnQ,GAHb,CAIIgG,KAAKvG,OAAAqE,EAAA,EAAArE,CAAA,GACAuG,OAKX,QACE,OAAOmK,ICrDAyO,GAAgB,SAAA5e,GAC3B,MAAO,CACLqN,KAJ0B,iBAK1BrN,cAeS6e,GAAuB,SAAA1O,GAAK,OAAIA,EAAM8F,sCCjB7C6I,GAAO,SAAA1a,GAAA,IAAGC,EAAHD,EAAGC,KAAM+I,EAAThJ,EAASgJ,UAAW2R,EAApB3a,EAAoB2a,MAAOC,EAA3B5a,EAA2B4a,OAA3B,OACX5f,EAAAC,EAAAC,cAAA,OACE8N,UAAS,mBAAAvI,OAAqBR,EAArB,KAAAQ,OAA6BuI,GACtC6R,MAAM,6BACNC,WAAW,+BACXC,QAAQ,YACRJ,MAAOA,EACPC,OAAQA,EACRI,KAAK,OACLC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,SAEfpgB,EAAAC,EAAAC,cAAA,OAAKmgB,UAAS,GAAA5a,OAAK6a,KAAL,KAAA7a,OAAqBR,OAIvCya,GAAKpQ,aAAe,CAClBtB,UAAW,GACX2R,MAAO,GACPC,OAAQ,IAGKF,UClBTa,eACJ,SAAAA,EAAYxgB,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAsf,IACjBvf,EAAAX,OAAAoQ,EAAA,EAAApQ,CAAAY,KAAAZ,OAAAqQ,EAAA,EAAArQ,CAAAkgB,GAAA5P,KAAA1P,KAAMlB,KACDgR,MAAQ,GAFI/P,mFAKC,IAAAgQ,EAC0B/P,KAAKlB,MAAzC8E,EADUmM,EACVnM,OAAQzE,EADE4Q,EACF5Q,SAAUoH,EADRwJ,EACQxJ,cAC1BvG,KAAKuf,gBAAkBpgB,EAAS8D,GAC7BY,WAAW,YACX6C,MAAM,YAAa,iBAAkB9C,GACrCsV,WAAW,SAAAE,GACVA,EAAcE,aAAaxS,QAAQ,SAAAyS,GACjC,IAAM5Z,EAAY4Z,EAAOrW,IAAI6E,GACvBmV,EAAc3D,EAAOrW,IAAIyP,OAC/BpM,EAAc5G,EAAWud,sDAM/Bld,KAAKuf,mDAGE,IAAAC,EACkCxf,KAAKlB,MAAtC2gB,EADDD,EACCC,cAAelB,EADhBiB,EACgBjB,cACjBmB,EAAeD,EAAcnK,IAAI,SAAAgI,GAAW,IAClCtW,EAA2BsW,EAAjCtZ,KAAmBrE,EAAc2d,EAAd3d,UAC3B,OACEZ,EAAAC,EAAAC,cAAC0gB,GAAD,CACE9I,IAAKlX,EACLqH,YAAaA,EACbrH,UAAWA,EACX8O,QAAS,kBAAM8P,EAAc5e,QAInC,OACEZ,EAAAC,EAAAC,cAAC2gB,GAAD,KACGF,EACD3gB,EAAAC,EAAAC,cAAA,UACE+N,KAAK,SACLD,UAAU,4CACV0B,QAASzO,KAAKlB,MAAM+gB,qBAEpB9gB,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAK,gBALb,0BAxC2BnF,aAwEpBwY,MAnBG,SAAApH,GAAQ,QAAMA,GAmBjBoH,CACbF,YAlBsB,SAACrH,EAAOiQ,GAC9B,MAAO,CACLlK,aAAcmK,EAAiB/B,gBAAgBnO,GAC/C2P,cAAeO,EAAiB9B,iBAAiBpO,KAI1B,SAAAwC,GACzB,MAAO,CACL6K,kBAAmB,SAAAvZ,GAAM,OACvB0O,EAAS2N,EAAe9C,kBAAkBvZ,KAC5C2C,cAAe,SAAC5G,EAAWud,GAAZ,OACb5K,EAAS2N,EAAe1Z,cAAc5G,EAAWud,KACnDqB,cAAe,SAAA5e,GAAS,OAAI2S,EAAS4N,GAAoBvgB,OAK3DwX,CAGEmI,KCLWa,GA9EU,SAAAC,GA2EvB,OA3E2C,SAAAC,GAEzC,SAAAC,EAAYxhB,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAsgB,IACjBvgB,EAAAX,OAAAoQ,EAAA,EAAApQ,CAAAY,KAAAZ,OAAAqQ,EAAA,EAAArQ,CAAAkhB,GAAA5Q,KAAA1P,KAAMlB,KAsBRyhB,YAAc,WACZxgB,EAAKoQ,SAAS,CACZqQ,gBAAgB,IAKlBC,SAASC,oBAAoB,aAAc3gB,EAAKwgB,aAEhDE,SAASC,oBAAoB,QAAS3gB,EAAK4gB,oBAE3CF,SAASG,iBAAiB,aAAc7gB,EAAK4gB,qBAlC5B5gB,EAqCnB4gB,mBAAqB,SAAA/Q,GACnB,IAAK7P,EAAK8gB,YACR,MAAM,IAAIC,MAAM,4CAElB,IACE/gB,EAAK8gB,YAAYE,SAASnR,EAAEW,UAC1BxQ,EAAKihB,kBAAkBC,QAAQC,gBAC9BnhB,EAAKjB,MAAMoiB,gBAHhB,CAMMnhB,EAAKihB,kBAAkBC,QAAQC,gBACjCnhB,EAAKihB,kBAAkBC,QAAQC,eAAetR,GAX1B,IAchBsR,EAAmBnhB,EAAKjB,MAAxBoiB,eACJA,GACFA,EAAetR,KAnDjB7P,EAAK+P,MAAQ,CACX0Q,gBAAgB,GAElBzgB,EAAKihB,kBAAoBG,sBALRphB,EAFsB,OAAAX,OAAAuX,EAAA,EAAAvX,CAAAkhB,EAAAD,GAAAjhB,OAAAwX,EAAA,EAAAxX,CAAAkhB,EAAA,EAAAzJ,IAAA,oBAAApU,MAAA,WAWvCge,SAASG,iBAAiB,aAAc5gB,KAAKugB,aAC7CE,SAASG,iBAAiB,QAAS5gB,KAAK2gB,oBAAoB,KAZrB,CAAA9J,IAAA,uBAAApU,MAAA,WAgBZzC,KAAK8P,MAAxB0Q,eAENC,SAASC,oBAAoB,aAAc1gB,KAAK2gB,qBAEhDF,SAASC,oBAAoB,QAAS1gB,KAAK2gB,oBAC3CF,SAASC,oBAAoB,aAAc1gB,KAAKugB,gBArBX,CAAA1J,IAAA,SAAApU,MAAA,WA2DhC,IAAAqU,EAAA9W,KACP,OACEjB,EAAAC,EAAAC,cAACmhB,EAADhhB,OAAAC,OAAA,CACE0H,IAAK/G,KAAKghB,kBACVI,SAAU,SAAAC,GAAE,OAAKvK,EAAK+J,YAAcQ,IAChCrhB,KAAKlB,YAhE0BwhB,EAAA,CACZzhB,cCG3ByiB,sNAEJJ,eAAiB,SAAAtR,IAEf2R,EADyBxhB,EAAKjB,MAAtByiB,cACK3R,4EAGN,IAAAG,EASH/P,KAAKlB,MAPPyiB,EAFKxR,EAELwR,aACAhT,EAHKwB,EAGLxB,SACAiT,EAJKzR,EAILyR,aAJKC,EAAA1R,EAKLnB,YALK,IAAA6S,EAKE,KALFA,EAMLC,EANK3R,EAML2R,QACA3Z,EAPKgI,EAOLhI,GACAqZ,EARKrR,EAQLqR,SAEF,OACEriB,EAAAC,EAAAC,cAAA,OAAK8N,UAAS,SAAAvI,OAAWkd,EAAQC,OAAS,IAAMlT,QAAS+S,GACvDziB,EAAAC,EAAAC,cAAA,OACE8I,GAAIA,EACJhB,IAAKqa,EACLrU,UAAS,kBAAAvI,OACPkd,EAAQpV,SAAW,GADZ,qBAAA9H,OAEWoK,IAEpB7P,EAAAC,EAAAC,cAAC0R,EAAD,CACE3D,KAAK,SACLD,UAAS,qBAAAvI,OACTkd,EAAQE,QAAU,IAElBnT,QAAS8S,EACTtS,UAAQ,GAERlQ,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAK,OAEZuK,WApCS1P,cA2CpByiB,GAAMjT,aAAe,CACnBqT,QAAS,CACPC,MAAO,GACPrV,QAAS,GACTsV,OAAQ,KAIGzB,UAAiBmB,ICnD1BlS,WAAgB,CACpByS,aAAc,KAGKC,eACnB,SAAAA,EAAYhjB,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAA8hB,IACjB/hB,EAAAX,OAAAoQ,EAAA,EAAApQ,CAAAY,KAAAZ,OAAAqQ,EAAA,EAAArQ,CAAA0iB,GAAApS,KAAA1P,KAAMlB,KAIR6Q,SAAW,SAAAC,GACTA,EAAEU,iBADY,IAENuR,EAAiB9hB,EAAK+P,MAAtB+R,aAFM9R,EAGoBhQ,EAAKjB,MAHzBiR,EAGNgS,aAHMhS,EAGQiS,QACtBjiB,EAAKjB,MAAMijB,aAAaF,GACxB9hB,EAAKjB,MAAMkjB,UACXjiB,EAAKoQ,SAAL/Q,OAAAqE,EAAA,EAAArE,CAAA,GAAmBgQ,MAXFrP,EAcnBmN,SAAW,SAAA0C,GACT7P,EAAKoQ,SAAL/Q,OAAAwG,EAAA,EAAAxG,CAAA,GACGwQ,EAAEW,OAAOvM,KAAO4L,EAAEW,OAAO9N,SAd5B1C,EAAK+P,MAAL1Q,OAAAqE,EAAA,EAAArE,CAAA,GAAkBgQ,IAFDrP,wEAoBV,IACC8hB,EAAiB7hB,KAAK8P,MAAtB+R,aACR,OACE9iB,EAAAC,EAAAC,cAACgjB,GAAD,CAAOV,aAAcvhB,KAAKlB,MAAMkjB,QAASpT,KAAK,MAC9C7P,EAAAC,EAAAC,cAAA,MAAI8N,UAAU,2BAAd,sBACEhO,EAAAC,EAAAC,cAAA,QAAM0Q,SAAU3P,KAAK2P,UACnB5Q,EAAAC,EAAAC,cAACyR,EAAD,CACE1M,KAAK,eACL+M,MAAM,gBACNtO,MAAOof,EACP3U,SAAUlN,KAAKkN,SACfF,KAAK,SAEPjO,EAAAC,EAAAC,cAAC0R,EAAD,CACE5D,UAAU,6BACVC,KAAK,SACLyB,QAASzO,KAAK2P,SACdnK,MAAM,UACNsJ,QAAQ,aALV,2BAlCmCjQ,sBCVhCqjB,GAAO,OACPC,GAAO,OAEPC,GAAS,SCMhBhT,WAAgB,CACpBpL,KAAM,GACNqe,UAAU,IAGNC,eACJ,SAAAA,EAAYxjB,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAsiB,IACjBviB,EAAAX,OAAAoQ,EAAA,EAAApQ,CAAAY,KAAAZ,OAAAqQ,EAAA,EAAArQ,CAAAkjB,GAAA5S,KAAA1P,KAAMlB,KAIRyjB,UAAY,WACVxiB,EAAKoQ,SAAS,CAAEnM,KAAM,MANLjE,EASnByiB,QAAU,SAAA5S,GACR7P,EAAKoQ,SAAL/Q,OAAAqE,EAAA,EAAArE,CAAA,GAAmBgQ,MAVFrP,EAanB4P,SAAW,SAAAC,GACTA,EAAEU,iBADY,IAENtM,EAASjE,EAAK+P,MAAd9L,KACArE,EAAcI,EAAKjB,MAAnBa,UACRI,EAAKjB,MAAMK,SAASoJ,QAAQ,CAAE5I,YAAWqE,SACzCjE,EAAKwiB,aAlBYxiB,EAqBnBmN,SAAW,SAAA0C,GACT7P,EAAKoQ,SAAL/Q,OAAAwG,EAAA,EAAAxG,CAAA,GACGwQ,EAAEW,OAAOvM,KAAO4L,EAAEW,OAAO9N,SAvBX1C,EA2BnBkN,QAAU,SAAA2C,GACR7P,EAAKoQ,SAAS,CACZkS,UAAU,KA7BKtiB,EAiCnBuN,OAAS,SAAAsC,GACgB,KAAnBA,EAAEW,OAAO9N,OACX1C,EAAKoQ,SAAS,CACZkS,UAAU,KAlCdtiB,EAAK+P,MAAL1Q,OAAAqE,EAAA,EAAArE,CAAA,GAAkBgQ,IAFDrP,wEAyCV,IAAA8P,EACoB7P,KAAK8P,MAAxB9L,EADD6L,EACC7L,KAAMqe,EADPxS,EACOwS,SACd,OACEtjB,EAAAC,EAAAC,cAAA,OACE8N,UAAS,gBAAAvI,OAAkB6d,EAAW,aAAe,IACrDpV,QAASjN,KAAKiN,QACdK,OAAQtN,KAAKsN,QAEbvO,EAAAC,EAAAC,cAAA,QAAM8N,UAAU,sBAAsB4C,SAAU3P,KAAK2P,UACnD5Q,EAAAC,EAAAC,cAACyR,EAAD,CACExD,SAAUlN,KAAKkN,SACfzK,MAAOuB,EACPoJ,YAAaiV,EAAW,sBAAwB,aAChDnU,UAAQ,EACRlK,KAAK,OACLyJ,WAAS,EACTV,UAAU,yBAEXsV,GACCtjB,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,yBACbhO,EAAAC,EAAAC,cAAC0R,EAAD,CACE5D,UAAU,0BACVC,KAAK,SACLyB,QAASzO,KAAK2P,SACdnK,MAAM,UACNsJ,QAAQ,aALV,YASA/P,EAAAC,EAAAC,cAAC0R,EAAD,CACE5D,UAAU,4BACVC,KAAK,QACLyB,QAASzO,KAAKwiB,QACd5T,KAAK,KACLK,UAAQ,GAERlQ,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAK,iBA9EAnF,aAqGZwY,MAbG,SAAApH,GAAQ,QAAMA,GAajBoH,CACbF,YAZsB,SAAArH,GACtB,MAAO,CACL+F,aAAcmK,EAAiB/B,gBAAgBnO,GAC/C2P,cAAeO,EAAiB9B,iBAAiBpO,KAI1B,SAAAwC,GACzB,MAAO,IAIP6E,CAGEmL,KC3FWG,GAvBD,SAAA3jB,GAAS,IACba,EAAwBb,EAAxBa,UAAW4O,EAAazP,EAAbyP,SACnB,OACExP,EAAAC,EAAAC,cAACyjB,GAAA,EAAD,CACEC,YAAahjB,EACbqN,KAAM4V,GACNC,UAAU,cAET,SAAAC,GAAQ,OACP/jB,EAAAC,EAAAC,cAAA,MAAAG,OAAAC,OAAA,CACE0N,UAAU,QACVhG,IAAK+b,EAAS1B,UACV0B,EAASC,gBAEZxU,EACAuU,EAAS1V,YACVrO,EAAAC,EAAAC,cAAC+jB,GAAD,CAAcrjB,UAAWA,QCnBtBsjB,GAAa,SAAA7d,GACxB,MAAO,CACL4H,KAJuB,cAKvB5H,WAeS8d,GAAoB,SAAApT,GAAK,OAAIA,EAAMqT,cCpBnCC,GAAe,SAAAtT,GAC1B,OAAOA,EAAM2I,WAGF4K,GAAc,SAACvT,EAAO7H,GACjC,OAAKA,EACiB6H,EAAd2I,UACSxQ,GAAQjE,KAFL,IAKTsf,GAA0B,SAAAxT,GAAS,IACtC2I,EAA6C3I,EAA7C2I,UACF6E,EAD+CxN,EAAlC+F,aAAkC/F,EAApB8F,iBAEjC,IAAK0H,EAAS,MAAO,GAHyB,IAItC5V,EAAY4V,EAAZ5V,QACR,OAAKA,EAEEA,EAAQ4N,IAAI,SAAArN,GAAM,OAAIwQ,EAAUxQ,KAFlB,IAKVsb,GAAkB,SAACzT,EAAOpI,GAAY,IACzC+Q,EAAc3I,EAAd2I,UACR,OAAK/Q,EAEEA,EAAQ4N,IAAI,SAAArN,GAAM,OAAIwQ,EAAUxQ,KAFlB,sVCpBvB,IAuCewQ,GAvCG,WAAwB,IAAvB3I,EAAuBzM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAI6S,EAAW7S,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACxC,OAAQ2S,EAAOlJ,MACb,IrBJ4B,mBqBIC,IACnByL,EAAcvC,EAAduC,UACR,OAAOrZ,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EACA2I,GAGP,IrBRuB,cqBQC,IACdxQ,EAAqBiO,EAArBjO,OAAQ4Q,EAAa3C,EAAb2C,SAChB,OAAOzZ,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EADL1Q,OAAAwG,EAAA,EAAAxG,CAAA,GAEG6I,EAFH7I,OAAAqE,EAAA,EAAArE,CAAA,GAGO0Q,EAAM7H,GACN4Q,KAIT,IrBjBoB,WqBiBC,IACX5Q,EAAqBiO,EAArBjO,OAAQ4Q,EAAa3C,EAAb2C,SAChB,OAAOzZ,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EADL1Q,OAAAwG,EAAA,EAAAxG,CAAA,GAEG6I,EAFH7I,OAAAqE,EAAA,EAAArE,CAAA,CAGI6I,UACG4Q,KAIT,IrB1BuB,cqB0BC,IACd5Q,EAAWiO,EAAXjO,OAER,OADkD6H,EAAzC7H,GAFa7I,OAAA+P,EAAA,EAAA/P,CAE4B0Q,EAF5B,CAEb7H,GAFaqN,IAAAkO,KAKxB,QACE,OAAO1T,ICrCA2T,GAAe,SAAA3T,GAC1B,OAAOA,EAAMsI,WAGFsL,GAAe,SAAC5T,EAAO/K,GAAY,IACtCqT,EAActI,EAAdsI,UACR,OAAOrT,EAAQuQ,IAAI,SAAAlQ,GAAM,OAAIgT,EAAUhT,MAG5Bue,GAAiB,SAAC7T,EAAO/K,GAAY,IACxCqT,EAActI,EAAdsI,UACR,OAAOrT,EAAQuQ,IAAI,SAAAlQ,GAAM,OAAIgT,EAAUhT,MAG5Bwe,GAAiB,SAAC9T,EAAO/K,GAAY,IACxCqT,EAActI,EAAdsI,UACR,OAAKrT,EAEEA,EAAQ8e,OAAO,SAACnP,EAAOtP,GAAW,IAAA0e,EACT1L,EAAUhT,GAAhCpB,EAD+B8f,EAC/B9f,KAAMoF,EADyB0a,EACzB1a,YAKd,OAJAsL,EAAMtP,GAAU,CACdpB,OACAoF,eAEKsL,GACN,IATkB,IAYVqP,GAAc,SAACjU,EAAOiQ,GACjC,IAAKA,EAASpgB,UAAW,MAAO,GADc,IAEtCkW,EAAiB/F,EAAjB+F,aACAlW,EAA8BogB,EAA9BpgB,UAAiBqkB,EAAajE,EAAnBpa,KACLoQ,EAAgBF,EAAalW,GAAnCgG,KAER,OAAKqe,GAAajO,EACXiO,EAAS1O,IAAI,SAAA2O,GAAO,OAAIlO,EAAYkO,KADL,sVChCxC,IAyDe7L,GAzDG,WAAwB,IAAvBtI,EAAuBzM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAI6S,EAAW7S,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACxC,OAAQ2S,EAAOlJ,MACb,IpBK4B,mBoBLC,IACnBoL,EAAclC,EAAdkC,UACR,OAAOhZ,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EACAsI,GAGP,IpBD8B,qBoBCC,IACrBiE,EAASnG,EAATmG,KAER,OADAxb,QAAQC,IAAI,iBACL1B,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EACAuM,GAGP,IpBnBoB,WoBmBC,IACXjX,EAAqB8Q,EAArB9Q,OAAQyP,EAAaqB,EAAbrB,SAChB,OAAOzV,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EADL1Q,OAAAwG,EAAA,EAAAxG,CAAA,GAEGgG,EAFHhG,OAAAqE,EAAA,EAAArE,CAAA,CAGIgG,UACGyP,KAIT,IpB5BuB,coB4BC,IACdzP,EAAW8Q,EAAX9Q,OAER,OADkD0K,EAAzC1K,GAFahG,OAAA+P,EAAA,EAAA/P,CAE4B0Q,EAF5B,CAEb1K,GAFakQ,IAAA4O,KAKxB,IpBhCuB,coBgCC,IACd9e,EAAqB8Q,EAArB9Q,OAAQyP,EAAaqB,EAAbrB,SAChB,OAAOzV,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EADL1Q,OAAAwG,EAAA,EAAAxG,CAAA,GAEGgG,EAFHhG,OAAAqE,EAAA,EAAArE,CAAA,GAGO0Q,EAAM1K,GACNyP,KAIT,IpBjCmB,UoBiCC,IACVzP,EAAgB8Q,EAAhB9Q,OAAQe,EAAQ+P,EAAR/P,IAChB,OAAO/G,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EADL1Q,OAAAwG,EAAA,EAAAxG,CAAA,GAEGgG,EAFHhG,OAAAqE,EAAA,EAAArE,CAAA,GAGO0Q,EAAM1K,GAHb,CAIIO,KAAI,GAAAnB,OAAApF,OAAAuM,EAAA,EAAAvM,CAAM0Q,EAAM1K,GAAQO,MAApB,CAA0BQ,QAIpC,QACE,OAAO2J,ICvDAqU,GAAkB,SAAArU,GAE7B,OADyBA,EAAjByM,cAIG6H,GAAmB,SAACtU,EAAO3G,GAAe,IAC7CoT,EAAiBzM,EAAjByM,aACR,OAAKpT,EAEEA,EAAWmM,IAAI,SAAAlK,GACpB,OAAOmR,EAAanR,KAHE,IAObiZ,GAAoB,SAACvU,EAAO3G,GAAe,IAC9CoT,EAAiBzM,EAAjByM,aACR,OAAKpT,EAEEA,EAAW0a,OAAO,SAACpH,EAAUrR,GAAc,IAAAkZ,EAClB/H,EAAanR,GAAnCpH,EADwCsgB,EACxCtgB,KAAMoF,EADkCkb,EAClClb,YAKV,OAJAqT,EAASrR,GAAa,CACpBpH,OACAoF,eAEKqT,GACN,IATiB,IAYb8H,GAAoB,SAACzU,EAAO3G,GAEvC,OADiBib,GAAiBtU,EAAO3G,GACzBqb,OAAO,SAAA7H,GAAO,OAAKA,EAAQvT,eAGhCqb,GAAuB,SAAC3U,EAAO3G,GAC1C,IAAMsT,EAAW2H,GAAiBtU,EAAO3G,GACzC,OAAIsT,EAASiI,cAASnhB,GAAmB,GAClCkZ,EAAS+H,OAAO,SAAA7H,GAAO,OAAIA,EAAQvT,iWClC5C,IAuCemT,GAvCM,WAAwB,IAAvBzM,EAAuBzM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAI6S,EAAW7S,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,OAAQ2S,EAAOlJ,MACb,IpBJ+B,sBoBIC,IACtBuP,EAAiBrG,EAAjBqG,aACR,OAAOnd,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EACAyM,GAGP,IpBRuB,coBQC,IACdnR,EAA2B8K,EAA3B9K,UAAW2R,EAAgB7G,EAAhB6G,YACnB,OAAO3d,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EADL1Q,OAAAwG,EAAA,EAAAxG,CAAA,GAEGgM,EAFHhM,OAAAqE,EAAA,EAAArE,CAAA,CAGIgM,aACG2R,KAIT,IpBhB0B,iBoBgBC,IACjB3R,EAAc8K,EAAd9K,UAER,OAD2D0E,EAAlD1E,GAFgBhM,OAAA+P,EAAA,EAAA/P,CAEkC0Q,EAFlC,CAEhB1E,GAFgBkK,IAAAqP,KAK3B,IpBtB0B,iBoBsBC,IACjBvZ,EAA2B8K,EAA3B9K,UAAW2R,EAAgB7G,EAAhB6G,YACnB,OAAO3d,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EADL1Q,OAAAwG,EAAA,EAAAxG,CAAA,GAEGgM,EAFHhM,OAAAqE,EAAA,EAAArE,CAAA,GAGO0Q,EAAM1E,GACN2R,KAIT,QACE,OAAOjN,ICrCA8U,GAAY,YACZC,GAAQ,QACRC,GAAM,MACNC,GAAa,YACbC,GAAW,UCMlB5V,WAAgB,CACpBpL,KAAM,GACNqe,UAAU,IAGN4C,eACJ,SAAAA,EAAYnmB,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAilB,IACjBllB,EAAAX,OAAAoQ,EAAA,EAAApQ,CAAAY,KAAAZ,OAAAqQ,EAAA,EAAArQ,CAAA6lB,GAAAvV,KAAA1P,KAAMlB,KAIRyjB,UAAY,WACVxiB,EAAKoQ,SAAS,CAAEnM,KAAM,MANLjE,EASnB4P,SAAW,SAAAC,GACT,GAAe,YAAXA,EAAE5C,MAAsB4C,EAAEiH,MAAQxB,GAAtC,CADc,IAENrR,EAASjE,EAAK+P,MAAd9L,KAFM+L,EAWVhQ,EAAKjB,MAPP8E,EAJYmM,EAIZnM,OACAoF,EALY+G,EAKZ/G,SACA7J,EANY4Q,EAMZ5Q,SACAQ,EAPYoQ,EAOZpQ,UACAqH,EARY+I,EAQZ/I,YACAiB,EATY8H,EASZ9H,OACAK,EAVYyH,EAUZzH,SAEFnJ,EAAS0J,QAAQ,CACf7E,OACAJ,SACAoF,WACArJ,YACAqH,cACAiB,SACAK,aAEFvI,EAAKwiB,YACL3S,EAAEU,mBA/BevQ,EAkCnBmN,SAAW,SAAA0C,GACT7P,EAAKoQ,SAAL/Q,OAAAwG,EAAA,EAAAxG,CAAA,GACGwQ,EAAEW,OAAOvM,KAAO4L,EAAEW,OAAO9N,SApCX1C,EAwCnBkN,QAAU,SAAA2C,GACR7P,EAAKoQ,SAAS,CACZkS,UAAU,KA1CKtiB,EA8CnByiB,QAAU,SAAA5S,GACR7P,EAAKoQ,SAAL/Q,OAAAqE,EAAA,EAAArE,CAAA,GAAmBgQ,MA/CFrP,EAkDnBuN,OAAS,SAAAsC,GACgB,KAAnBA,EAAEW,OAAO9N,OACb1C,EAAKoQ,SAAS,CACZkS,UAAU,KAnDZtiB,EAAK+P,MAAL1Q,OAAAqE,EAAA,EAAArE,CAAA,GAAkBgQ,IAFDrP,wEAyDV,IAAA8P,EACoB7P,KAAK8P,MAAxB9L,EADD6L,EACC7L,KAAMqe,EADPxS,EACOwS,SAEd,OACEtjB,EAAAC,EAAAC,cAAA,OACE8N,UAAS,gBAAAvI,OAAkB6d,EAAW,aAAe,IACrDpV,QAASjN,KAAKiN,QACdK,OAAQtN,KAAKsN,QAEbvO,EAAAC,EAAAC,cAAA,QAAM8N,UAAU,sBAAsB4C,SAAU3P,KAAK2P,UACnD5Q,EAAAC,EAAAC,cAAC0R,EAAD,CACE5D,UAAU,6BACVC,KAAK,SACLyB,QAASzO,KAAK2P,SACdV,UAAQ,GAERlQ,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAK,iBAEbjF,EAAAC,EAAAC,cAACyR,EAAD,CACExD,SAAUlN,KAAKkN,SACfzK,MAAOuB,EACPoJ,YAAY,aACZC,YAAU,EACVrJ,KAAK,OACL+I,UAAU,uBACVa,UAAW5N,KAAK2P,SAChBlC,WAAS,aApFM5O,aAsGZD,KACbuY,YAXsB,SAAArH,GACtB,MAAO,CACLlM,OAAQshB,EAAqBjQ,iBAAiBnF,KAIvB,SAAAwC,GACzB,MAAO,IAIP6E,CAGE8N,KCtHiBE,uBAKnB,SAAAA,EAAYrmB,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAmlB,IACjBplB,EAAAX,OAAAoQ,EAAA,EAAApQ,CAAAY,KAAAZ,OAAAqQ,EAAA,EAAArQ,CAAA+lB,GAAAzV,KAAA1P,KAAMlB,KAURsmB,iBAAmB,WACqBrlB,EAAKjB,MAAnCumB,4BAGRtlB,EAAKulB,WAAWrE,QAAQsE,MAAM5G,OAAS,MACvC5e,EAAKulB,WAAWrE,QAAQsE,MAAM5G,OAA9B,GAAAna,OACEzE,EAAKulB,WAAWrE,QAAQuE,aAD1B,QAdAzlB,EAAKulB,WAAanE,sBAFDphB,mFAMqBC,KAAKlB,MAAnCumB,2BAERrlB,KAAKolB,oDAaE,IAAArV,EAaH/P,KAAKlB,MAXPiO,EAFKgD,EAELhD,UACA/I,EAHK+L,EAGL/L,KACAvB,EAJKsN,EAILtN,MACAyK,EALK6C,EAKL7C,SACAE,EANK2C,EAML3C,YACAC,EAPK0C,EAOL1C,WACAC,EARKyC,EAQLzC,OACAL,EATK8C,EASL9C,QACAW,EAVKmC,EAULnC,UACA6X,EAXK1V,EAWL0V,YACA1X,EAZKgC,EAYLhC,WAEF,OACEhP,EAAAC,EAAAC,cAAA,YACE8N,UAAS,YAAAvI,OAAcuI,GACvBhF,GAAI/D,EACJA,KAAMA,EACNvB,MAAOA,EACPyK,SAAUA,EACVE,YAAaA,EACbc,SAAUb,EACVC,OAAQA,EACRH,QAASnN,KAAKolB,iBACdre,IAAK/G,KAAKslB,WACVrY,QAASA,EACTW,UAAWA,EACX6X,YAAaA,EACbtX,SAAUJ,WAvDoBlP,cAAjBsmB,GACZ9W,aAAe,CACpBgX,2BAA2B,cCMzBjW,GAAgB,CACpBpL,KAAM,GACNqe,UAAU,GAGNqD,eACJ,SAAAA,EAAY5mB,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAA0lB,IACjB3lB,EAAAX,OAAAoQ,EAAA,EAAApQ,CAAAY,KAAAZ,OAAAqQ,EAAA,EAAArQ,CAAAsmB,GAAAhW,KAAA1P,KAAMlB,KAIRyjB,UAAY,WACVxiB,EAAKoQ,SAAS,CAAEnM,KAAM,MANLjE,EASnB4P,SAAW,SAAAC,GACT,GAAe,YAAXA,EAAE5C,MAAsB4C,EAAEiH,MAAQxB,GAAtC,CADc,IAENrR,EAASjE,EAAK+P,MAAd9L,KAFM+L,EAUVhQ,EAAKjB,MANPK,EAJY4Q,EAIZ5Q,SACAQ,EALYoQ,EAKZpQ,UACAqH,EANY+I,EAMZ/I,YACAiB,EAPY8H,EAOZ9H,OACAK,EARYyH,EAQZzH,SACA1E,EATYmM,EASZnM,OAEFzE,EAAS0J,QAAQ,CACflJ,YACAsI,SACAjE,OACAgD,cACAsB,WACA1E,WAEF7D,EAAKwiB,YACL3S,EAAEU,mBA7BevQ,EAgCnBmN,SAAW,SAAA0C,GACT7P,EAAKoQ,SAAL/Q,OAAAwG,EAAA,EAAAxG,CAAA,GACGwQ,EAAEW,OAAOvM,KAAO4L,EAAEW,OAAO9N,SAlCX1C,EAsCnBkN,QAAU,SAAA2C,GACR7P,EAAKoQ,SAAS,CACZkS,UAAU,KAxCKtiB,EA4CnByiB,QAAU,SAAA5S,GACR7P,EAAKoQ,SAAL/Q,OAAAqE,EAAA,EAAArE,CAAA,GAAmBgQ,MA7CFrP,EAgDnBuN,OAAS,SAAAsC,GACgB,KAAnBA,EAAEW,OAAO9N,OACb1C,EAAKoQ,SAAS,CACZkS,UAAU,KAjDZtiB,EAAK+P,MAAL1Q,OAAAqE,EAAA,EAAArE,CAAA,GAAkBgQ,IAFDrP,wEAuDV,IAAA8P,EACoB7P,KAAK8P,MAAxB9L,EADD6L,EACC7L,KAAMqe,EADPxS,EACOwS,SAEd,OACEtjB,EAAAC,EAAAC,cAAA,OACE8N,UAAS,gBAAAvI,OAAkB6d,EAAW,aAAe,IACrDpV,QAASjN,KAAKiN,QACdK,OAAQtN,KAAKsN,QAEbvO,EAAAC,EAAAC,cAAA,QAAM8N,UAAU,sBAAsB4C,SAAU3P,KAAK2P,UACnD5Q,EAAAC,EAAAC,cAAC0mB,GAAD,CACEzY,SAAUlN,KAAKkN,SACfzK,MAAOuB,EACPoJ,YAAaiV,EAAW,sBAAwB,aAChDhV,YAAU,EACVrJ,KAAK,OACL+I,UAAU,0BACVsY,2BAA2B,EAC3BzX,UAAW5N,KAAK2P,WAEjB0S,GACCtjB,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,yBACbhO,EAAAC,EAAAC,cAAC0R,EAAD,CACE5D,UAAU,0BACVC,KAAK,SACLyB,QAASzO,KAAK2P,SACdnK,MAAM,UACNsJ,QAAQ,aALV,YASA/P,EAAAC,EAAAC,cAAC0R,EAAD,CACE5D,UAAU,4BACVC,KAAK,QACLyB,QAASzO,KAAKwiB,QACd5T,KAAK,KACLK,UAAQ,GAERlQ,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAK,iBA9FAnF,aAqHZD,KACbuY,YAdsB,SAAArH,GACtB,MAAO,CACLlM,OAAQshB,EAAqBjQ,iBAAiBnF,KAIvB,SAAAwC,GACzB,MAAO,CACLsT,mBAAoB,SAAAtI,GAAO,OACzBhL,EAAS2N,EAAe2F,mBAAmBtI,OAK/CnG,CAGEuO,KC9HWG,WARF,SAAA9hB,GAAoD,IAAjDwK,EAAiDxK,EAAjDwK,SAAUE,EAAuC1K,EAAvC0K,QAAuC3B,EAAA/I,EAA9BgJ,iBAA8B,IAAAD,EAAlB,GAAkBA,EAAdgZ,EAAc/hB,EAAd+hB,QACjD,OACE/mB,EAAAC,EAAAC,cAAA,MAAI8N,UAAS,QAAAvI,OAAUuI,GAAa0B,QAASA,EAAS1H,IAAK+e,GACxDvX,KCCQwX,GAJE,SAAAhiB,GAAkC,IAA/BwK,EAA+BxK,EAA/BwK,SAA+BzB,EAAA/I,EAArBgJ,iBAAqB,IAAAD,EAAT,GAASA,EACjD,OAAO/N,EAAAC,EAAAC,cAAA,MAAI8N,UAAS,cAAAvI,OAAgBuI,IAAcwB,ICF/ByX,8MACnBlW,MAAQ,CACN0Q,gBAAgB,KAmBlBG,mBAAqB,SAAA/Q,IAEnBsR,EAD2BnhB,EAAKjB,MAAxBoiB,gBACOtR,EAAEW,WAGnBgQ,YAAc,WACZxgB,EAAKoQ,SAAS,CACZqQ,gBAAgB,IAGlBC,SAASC,oBAAoB,aAAc3gB,EAAKwgB,aAEhDE,SAASC,oBAAoB,QAAS3gB,EAAK4gB,oBAE3CF,SAASG,iBAAiB,aAAc7gB,EAAK4gB,wGA7B7CF,SAASG,iBAAiB,aAAc5gB,KAAKugB,aAC7CE,SAASG,iBAAiB,QAAS5gB,KAAK2gB,oBAAoB,kDAIjC3gB,KAAK8P,MAAxB0Q,eAGNC,SAASC,oBAAoB,aAAc1gB,KAAK2gB,qBAEhDF,SAASC,oBAAoB,QAAS1gB,KAAK2gB,oBAC3CF,SAASC,oBAAoB,aAAc1gB,KAAKugB,+CAqB3C,IAAAxQ,EACyC/P,KAAKlB,MAA7CiO,EADDgD,EACChD,UAAW0B,EADZsB,EACYtB,QAAS8W,EADrBxV,EACqBwV,MAAOhX,EAD5BwB,EAC4BxB,SACnC,OACExP,EAAAC,EAAAC,cAAA,OAAK8N,UAAS,WAAAvI,OAAauI,GAAa0B,QAASA,EAAS8W,MAAOA,GAC9DhX,UA1C4B1P,aCGhBonB,sNACnBnW,MAAQ,CACNuS,SAAU,aAActiB,EAAKjB,OAAQ,QAavC6hB,mBAAqB,SAAApQ,GACnB,IAAIxQ,EAAK8gB,cAAe9gB,EAAK8gB,YAAYE,SAASxQ,GAAlD,CAD6B,IAAAR,EAEchQ,EAAKjB,MAAxCoiB,EAFqBnR,EAErBmR,eAAgBgF,EAFKnW,EAELmW,eAEpBhF,EACFA,KAEAnhB,EAAKoQ,SAAS,CACZkS,UAAU,IAGR6D,GACFA,SAKNC,WAAa,WAAM,IACTC,EAAkBrmB,EAAKjB,MAAvBsnB,cAEJA,EACFA,IAEArmB,EAAKoQ,SAAS,SAAAkW,GAAS,MAAK,CAC1BhE,UAAWgE,EAAUhE,eAK3BiE,YAAc,SAAA1W,GACR,aAAc7P,EAAKjB,OACnB8Q,EAAEW,OAAOgW,QAAQ,UACrBxmB,EAAKoQ,SAAS,CACZkS,UAAU,6EAIL,IAAAvL,EAAA9W,KAAAwf,EASHxf,KAAKlB,MAPPyP,EAFKiR,EAELjR,SACAiY,EAHKhH,EAGLgH,WACAC,EAJKjH,EAILiH,eACAC,EALKlH,EAKLkH,WACAC,EANKnH,EAMLmH,YACAjF,EAPKlC,EAOLkC,QACAkF,EARKpH,EAQLoH,SAEIvE,EAAW,aAAcriB,KAAKlB,MAAQkB,KAAKlB,MAAMujB,SAAWriB,KAAK8P,MAAMuS,SAEzEwE,EAAsB,KAE1B,GAAID,EAAU,KACJE,EAA0BF,EAA1BE,UAAWC,EAAeH,EAAfG,WACnBF,EAAmBznB,OAAAwG,EAAA,EAAAxG,CAAA,CACjB4nB,SAAU,WACVC,IAAKH,GACJJ,EAAaK,GAIlB,OACEhoB,EAAAC,EAAAC,cAAA,OACE8N,UAAS,mBAAAvI,OAAqB6d,EAAW,YAAc,GAA9C,KAAA7d,OACPkd,EAAQwF,SAEVngB,IAAK,SAAAsa,GAAE,OAAKvK,EAAK+J,YAAcQ,GAC/BkE,MAAOsB,EACPpY,QAASgY,GAET1nB,EAAAC,EAAAC,cAAC0R,EAADvR,OAAAC,OAAA,CACE2N,KAAK,SACLyB,QAASzO,KAAKmmB,WACdjX,UAAWlP,KAAKlB,MAAMoQ,WAClByX,IAELtE,GACCtjB,EAAAC,EAAAC,cAACkoB,GAAD,CACEpa,UAAS,SAAAvI,OAAWgiB,EAAX,KAAAhiB,OAAyBkd,EAAQ0F,SAC1C3Y,QAASzO,KAAKsmB,YACdpF,eAAgBlhB,KAAK2gB,oBAEpBpS,WAhG+B1P,cAAvBonB,GAKZ5X,aAAe,CACpBqT,QAAS,CACPwF,QAAS,GACTE,QAAS,IAEXT,YAAa,GACbU,MAAO,OACPT,SAAU,wBCZRU,GAAM,SAAAvjB,GAAA,IAAGsB,EAAHtB,EAAGsB,KAAMG,EAATzB,EAASyB,MAAOoJ,EAAhB7K,EAAgB6K,KAAM2Y,EAAtBxjB,EAAsBwjB,SAAUxa,EAAhChJ,EAAgCgJ,UAAWya,EAA3CzjB,EAA2CyjB,OAAQ1Y,EAAnD/K,EAAmD+K,QAAnD,OACV/P,EAAAC,EAAAC,cAAA,QACE8N,UAAS,YAAAvI,OAAcoK,EAAd,SAAApK,OAA0BgB,EAA1B,KAAAhB,OACK,YAAZsK,EAAA,QAAAtK,OAAgCsK,GAAY,GADrC,KAAAtK,OAELuI,GACJhG,IAAKygB,GAEJniB,EACS,OAATuJ,GACC7P,EAAAC,EAAAC,cAAC0R,EAAD,CACE3D,KAAK,SACL4B,KAAK,KACL7B,UAAU,mBACV0B,QAAS8Y,EACTtY,UAAQ,GAERlQ,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAK,SAMnBsjB,GAAIjZ,aAAe,CACjBtB,UAAW,GACXwa,SAAU,kBAAM,MAChB/hB,MAAO,UACPoJ,KAAM,KACNE,QAAS,WAGIwY,UChCMG,sNAYnBC,gBAAkB,SAAAC,GAChB,OAAOA,EACJC,MAAM,KACNtS,IAAI,SAAAtR,GAAI,OAAIA,EAAK6jB,OAAO,KACxBC,KAAK,IACLC,uFAGI,IAAAhY,EASH/P,KAAKlB,MAPPkpB,EAFKjY,EAELiY,OACAC,EAHKlY,EAGLkY,SACAvG,EAJK3R,EAIL2R,QACAiG,EALK5X,EAKL4X,SACA7Y,EANKiB,EAMLjB,QACAtJ,EAPKuK,EAOLvK,MACAoJ,EARKmB,EAQLnB,KAEF,OACE7P,EAAAC,EAAAC,cAAA,OACE8N,UAAS,kBAAAvI,OAAoBoK,EAApB,aAAApK,OAAoCsK,EAApC,KAAAtK,OACPkd,EAAQwG,SAGE,OAAXF,EACCjpB,EAAAC,EAAAC,cAAA,MAAAG,OAAAC,OAAA,CACE8oB,IAAKH,EACLI,IAAKT,EACL5a,UAAS,eAAAvI,OAAiBkd,EAAQ2G,MAC9BJ,IAGNlpB,EAAAC,EAAAC,cAAA,OACE8N,UAAS,uBAAAvI,OAAyBkd,EAAQtU,aAC1CmY,MAAO,CAAE+C,gBAAiB9iB,IAEzBxF,KAAK0nB,gBAAgBC,YAhDE9oB,cAAf4oB,GACZpZ,aAAe,CACpB2Z,OAAQ,KACRtG,QAAS,CACPwG,OAAQ,GACRG,IAAK,GACLjb,YAAa,IAEfwB,KAAM,KACNE,QAAS,UCVN,IAAMyZ,GAAS,CACpB,CACEC,KAAM,UACNC,MAAO,MACPC,UAAW,IAEb,CACEF,KAAM,WACNC,MAAO,MACPC,UAAW,MAEb,CACEF,KAAM,QACNC,MAAO,MACPC,UAAW,IAEb,CACEF,KAAM,QACNC,MAAO,MACPC,UAAW,IAEb,CACEF,KAAM,MACNC,MAAO,MACPC,UAAW,IAEb,CACEF,KAAM,OACNC,MAAO,MACPC,UAAW,IAEb,CACEF,KAAM,OACNC,MAAO,MACPC,UAAW,IAEb,CACEF,KAAM,SACNC,MAAO,MACPC,UAAW,IAEb,CACEF,KAAM,YACNC,MAAO,MACPC,UAAW,IAEb,CACEF,KAAM,UACNC,MAAO,MACPC,UAAW,IAEb,CACEF,KAAM,WACNC,MAAO,MACPC,UAAW,IAEb,CACEF,KAAM,WACNC,MAAO,MACPC,UAAW,KAKFC,GAAY,CACvB,CAAEH,KAAM,SAAUC,MAAO,MAAOG,OAAQ,KACxC,CAAEJ,KAAM,SAAUC,MAAO,MAAOG,OAAQ,KACxC,CAAEJ,KAAM,UAAWC,MAAO,MAAOG,OAAQ,KACzC,CAAEJ,KAAM,YAAaC,MAAO,MAAOG,OAAQ,KAC3C,CAAEJ,KAAM,WAAYC,MAAO,MAAOG,OAAQ,KAC1C,CAAEJ,KAAM,SAAUC,MAAO,MAAOG,OAAQ,KACxC,CAAEJ,KAAM,WAAYC,MAAO,MAAOG,OAAQ,MCrE/BC,GAAa,SAAAC,GAAI,OAC3BA,EAAO,IAAM,GAAKA,EAAO,MAAQ,GAAMA,EAAO,MAAQ,GAE5CC,GAAmB,SAACC,EAAYF,GAAb,OAC9B,IAAI7U,KAAK6U,EAAME,EAAY,GAAGC,UAEnBC,GAAU,SAAAC,GAAI,OACzB,IAAIlV,MAAOE,SAAS,EAAG,EAAG,EAAG,KAAOgV,EAAKhV,SAAS,EAAG,EAAG,EAAG,IAEhDiV,GAAc,SAAAD,GACzB,IAAME,EAAQ,IAAIpV,KAElB,OADAoV,EAAMlV,SAAS,EAAG,EAAG,EAAG,GACjBkV,EAAMhV,QAAQgV,EAAM/U,UAAY,KAAO6U,EAAKhV,SAAS,EAAG,EAAG,EAAG,IAG1DmV,GAAa,SAAAH,GACxB,IAAME,EAAQ,IAAIpV,KAElB,OADAoV,EAAMlV,SAAS,EAAG,EAAG,EAAG,GACjBkV,EAAMhV,QAAQgV,EAAM/U,UAAY,KAAO6U,EAAKhV,SAAS,EAAG,EAAG,EAAG,IAG1DoV,GAAa,SAAAJ,GACxB,OAAOA,EAAKK,iBAAkB,IAAIvV,MAAOuV,eAG9BC,GAAe,SAACT,EAAYF,GACvC,OAAmB,IAAfE,EACKH,GAAWC,GAAQ,GAAK,GAE1BP,GAAOS,GAAYN,WAGfgB,GAAe,SAACV,EAAYF,GACvC,MAAO,CACLa,MAAOX,EAAa,EAAIA,EAAa,EAAI,GACzCF,KAAME,EAAa,EAAIF,EAAOA,EAAO,IAI5Bc,GAAe,SAACZ,EAAYF,GACvC,MAAO,CACLa,MAAOX,EAAa,GAAKA,EAAa,EAAI,EAC1CF,KAAME,EAAa,GAAKF,EAAOA,EAAO,IAI7Be,GAAgB,SAACF,EAAOb,GACnC,IAAMgB,EAAYL,GAAaE,EAAOb,GAChCiB,EAAgBhB,GAAiBY,EAAOb,GAFFkB,EAGMN,GAAaC,EAAOb,GAAvDmB,EAH6BD,EAGpCL,MAAwBO,EAHYF,EAGlBlB,KACpBqB,EAAgBV,GAAaQ,EAAWC,GACxCE,EAAoBL,EACpBM,EAAoB,GAAMN,EAAgBD,GAAa,EACvDQ,EAAiBlrB,OAAAuM,EAAA,EAAAvM,CAAI,IAAI6b,MAAMmP,IAAoB9U,IAAI,SAACiV,EAAG7P,GAC/D,MAAO,CACL8P,IAAKL,EAAgBC,EAAoB1P,EAAI,EAC7CiP,MAAOM,EACPnB,KAAMoB,KAIJO,EAAiBrrB,OAAAuM,EAAA,EAAAvM,CAAI,IAAI6b,MAAM6O,IAAYxU,IAAI,SAACiV,EAAG7P,GACvD,MAAO,CACL8P,IAAK9P,EAAI,EACTiP,QACAb,UAIE4B,EAAiBtrB,OAAAuM,EAAA,EAAAvM,CAAI,IAAI6b,MAAMoP,IAAoB/U,IAAI,SAACiV,EAAG7P,GAC/D,OAAOtb,OAAAqE,EAAA,EAAArE,CAAA,CACLorB,IAAK9P,EAAI,GACNkP,GAAaD,EAAOb,MAI3B,SAAAtkB,OAAApF,OAAAuM,EAAA,EAAAvM,CAAWkrB,GAAXlrB,OAAAuM,EAAA,EAAAvM,CAA8BqrB,GAA9BrrB,OAAAuM,EAAA,EAAAvM,CAAiDsrB,KAGtCC,GAAS,SAAAxB,GAAI,MACiB,kBAAzC/pB,OAAO8a,UAAUC,SAASzK,KAAKyZ,IAEpByB,GAAgB,SAAAzB,GAC3B,IAAM0B,EACHF,GAAOxB,IAAyB,kBAATA,EAAqCA,EAAjB,IAAIlV,KAAKkV,GACvD,MAAO,CACLqB,IAAKK,EAAQvW,UACbqV,MAAOkB,EAAQC,WACfhC,KAAM+B,EAAQrB,gBAILuB,GAAe,SAAA5B,GAC1B,OAAOA,GAAQ,QAASA,GAAQ,UAAWA,GAAQ,SAAUA,GAGlD6B,GAAa,SAAC7B,GAA4B,IAAtB8B,EAAsB5nB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,IAAI4Q,KAC1C,IACI0W,GAAOxB,KAAU4B,GAAa5B,KAC9BwB,GAAOM,KAAUF,GAAaE,GAEhC,OAAO,EACT,IAAMC,EAAU/B,EAAKqB,KAAOrB,EAAK7U,UAC3B6W,EAAYhC,EAAKQ,OAASR,EAAK2B,WAC/BM,EAAWjC,EAAKL,MAAQK,EAAKK,cAC7B6B,EAAUJ,EAAKT,KAAOS,EAAK3W,UAC3BgX,EAAYL,EAAKtB,OAASsB,EAAKH,WAC/BS,EAAWpC,EAAKL,MAAQmC,EAAKzB,cACnC,OACE0B,IAAYG,GAAWF,IAAcG,GAAaF,IAAaG,GAItDC,GAAe,SAACC,GAAiD,IAA5CC,EAA4CroB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,IAA7B,IAAI4Q,MAAOuV,cAC1D,OAAOpqB,OAAAuM,EAAA,EAAAvM,CAAI,IAAI6b,MAAMwQ,IAAMnW,IAAI,SAACqW,EAAMjR,GACpC,OAAOgR,EAAehR,KAIbkR,GAAU,SAACnpB,EAAOa,GAC7B,MAAO,GAAAkB,OAAG/B,GAAQopB,SAASvoB,EAAQ,MAOxBwoB,GAAqB,SAAA3C,GAChC,IAAM4C,EAAahB,GAAa5B,GAC5BA,EACAwB,GAAOxB,GACPyB,GAAczB,QACd5lB,EACJ,IAAKwoB,EAAY,MAAO,GANgB,IAOhCvB,EAAqBuB,EAArBvB,IAAKb,EAAgBoC,EAAhBpC,MAAOb,EAASiD,EAATjD,KACpB,SAAAtkB,OAAUonB,GAAQjC,EAAQ,EAAG,GAA7B,KAAAnlB,OAAmConB,GAAQpB,EAAK,GAAhD,KAAAhmB,OAAsDskB,EAAO,MAOlDkD,GAAkB,SAAAC,GAC7B,IAAMC,EAAUD,EAAWrE,MAAM,KAC3B+B,EAAQuC,EAAQ,GAAK,EACrB1B,GAAO0B,EAAQ,GACfpD,GAAQoD,EAAQ,GAAK,IAC3B,OAAI1B,EAAMf,GAAaE,EAAOb,GACrB8B,GAAc,IAAI3W,KAAK6U,EAAMa,EAAOa,IAEtC,CACLb,QACAa,MACA1B,SAISqD,GAAc,SAAAF,GACzB,MAAO,sBAAsBG,KAAKH,IASvBI,GAAe,SAAClD,EAAMsC,GAAmC,IAA9BzX,EAA8B3Q,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,IAAI4Q,KACnDqY,EAAYtY,EAAaG,SAAS,EAAG,EAAG,EAAG,GAC3CD,EAAa,IAAID,KAAKD,GACtBI,EAAUF,EAAWG,QAAQH,EAAWI,UAAYmX,GAC1D,OAAQtC,GAAQmD,IAAcnD,EAAO/U,GAG1BmY,GAAc,SAACpD,GAC1B,OAAQA,GADkD9lB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,IAAI4Q,MACvBE,SAAS,EAAG,EAAG,EAAG,IAG/BqY,GAAe,SAC1BrD,GAUG,IATHsD,EASGppB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GATO,CACRqpB,aAAa,EACbC,OAAQ,CACNC,QAAS,QACTjD,MAAO,QACPa,IAAK,UACL1B,KAAM,YAIF4D,EAAwBD,EAAxBC,YAAaC,EAAWF,EAAXE,OACrB,GAAID,EAAa,CACf,GAAIxD,GAAQC,GACV,MAAO,QAET,GAAIC,GAAYD,GACd,MAAO,YAET,GAAIG,GAAWH,GACb,MAAO,WAET,GAAIkD,GAAalD,EAAM,GACrB,OAAOR,GAAUQ,EAAKF,UAAUT,KAGpC,OAAOppB,OAAOiW,KAAKsX,GAChBrX,IAAI,SAAAuB,GACH,OAAQA,GACN,IAAK,UACH,IAAMpU,EAAQkqB,EAAO9V,GACf+V,EAAUzD,EAAKF,SACrB,OAAON,GAAUiE,GAASnqB,GAE5B,IAAK,QACH,IAAMA,EAAQkqB,EAAO9V,GACf8S,EAAQR,EAAK2B,WACnB,MAAc,YAAVroB,EACKknB,EAAQ,EACD,YAAVlnB,EACGmpB,GAAQjC,EAAQ,EAAG,GAEnBpB,GAAOoB,GAAOlnB,GAGzB,IAAK,MACH,IAAMA,EAAQkqB,EAAO9V,GACf2T,EAAMrB,EAAK7U,UACjB,MAAc,YAAV7R,EACKmpB,GAAQpB,EAAK,GAEbA,EAGX,IAAK,OACH,IAAM/nB,EAAQkqB,EAAO9V,GACfiS,EAAOK,EAAKK,cAClB,OAAIkD,GAAenD,GAAWJ,GACrB,KAEK,YAAV1mB,EACF,IAAA+B,QAAYskB,EAAK+D,MAAM,IAEhB/D,KAKdhB,KAAK,KACLgF,QChNUC,GA1CD,SAAAhpB,GAeR,IAAAipB,EAAAjpB,EAdJ2d,eAcI,IAAAsL,EAdM,CAAEC,MAAO,GAAIvf,MAAO,IAc1Bsf,EAbJhpB,EAaID,EAbJC,KACA+D,EAYIhE,EAZJgE,GACAtF,EAWIsB,EAXJtB,MACAwK,EAUIlJ,EAVJkJ,QACAC,EASInJ,EATJmJ,SACAC,EAQIpJ,EARJoJ,QACAE,EAOItJ,EAPJsJ,WACAC,EAMIvJ,EANJuJ,OACAE,EAKIzJ,EALJyJ,SACAC,EAII1J,EAJJ0J,UACAC,EAGI3J,EAHJ2J,MACAE,EAEI7J,EAFJ6J,UACAsf,EACInpB,EADJmpB,UAEA,OACEnuB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgP,SAAA,KACEjP,EAAAC,EAAAC,cAAA,SACE8N,UAAS,SAAAvI,OAAWkd,EAAQuL,OAC5BllB,GAAIA,EACJ/D,KAAMA,EACNgJ,KAAK,QACLvK,MAAOA,EACPwK,QAASA,EACTC,SAAUA,EACVI,OAAQA,EACRvG,IAAKyG,EACLL,QAASA,EACTS,UAAWA,EACXM,SAAUb,EACV8f,QAASD,KAETzf,GACA1O,EAAAC,EAAAC,cAAA,SAAOgP,QAASlG,EAAIgF,UAAS,gBAAAvI,OAAkBkd,EAAQhU,QACpDA,KC5BU0f,sNACnBtd,MAAQ,CACNud,wBAAwB,EACxBC,uBAAuB,KAGzBC,cAAgB,WAAM,IAAAxd,EACkBhQ,EAAKjB,MAAnC6qB,EADY5Z,EACZ4Z,MAAOb,EADK/Y,EACL+Y,MACf0E,EAFoBzd,EACCyd,cACRC,GAAuB9D,EAAOb,OAG7C4E,cAAgB,WAAM,IAAAlO,EACkBzf,EAAKjB,MAAnC6qB,EADYnK,EACZmK,MAAOb,EADKtJ,EACLsJ,MACf0E,EAFoBhO,EACCgO,cACRC,GAAuB9D,EAAOb,OAG7C6E,qBAAuB,WACrB5tB,EAAKoQ,SAAS,SAAAkW,GAAS,MAAK,CAC1BgH,wBAAyBhH,EAAUgH,6BAIvCO,oBAAsB,WACpB7tB,EAAKoQ,SAAS,SAAAkW,GAAS,MAAK,CAC1BiH,uBAAwBjH,EAAUiH,4BAItCO,YAAc,SAAAje,GACZ,IAAM+Z,GAAS/Z,EAAEW,OAAO9N,MADPqrB,EAEc/tB,EAAKjB,OACpC0uB,EAHiBM,EAETN,cACK,CAAE7D,QAAOb,KAHLgF,EAEKhF,OAEtB/oB,EAAK4tB,0BAGPI,WAAa,SAAAne,GACX,IAAMkZ,GAAQlZ,EAAEW,OAAO9N,OAEvBurB,EADwBjuB,EAAKjB,MAArBkvB,aACIlF,GACZ/oB,EAAK6tB,+FAGE,IAAA9W,EAAA9W,KAAAiuB,EAC2DjuB,KAAKlB,MAA/D6qB,EADDsE,EACCtE,MAAOb,EADRmF,EACQnF,KAAMoF,EADdD,EACcC,aAAc7E,EAD5B4E,EAC4B5E,MAAO8E,EADnCF,EACmCE,WAAYzM,EAD/CuM,EAC+CvM,QAD/C7R,EAEmD7P,KAAK8P,MAAvDud,EAFDxd,EAECwd,uBAAwBC,EAFzBzd,EAEyByd,sBAC1Bc,EAAQX,GAAwB9D,EAAOb,GACvCuF,EAAQZ,GAAuB,GAErC,OACE1uB,EAAAC,EAAAC,cAAA,OAAK8N,UAAS,YAAAvI,OAAckd,EAAQ4M,WAClCvvB,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,kBACbhO,EAAAC,EAAAC,cAACsvB,GAAD,CACElM,SAAUiL,EACVlH,cAAepmB,KAAK4tB,oBACpB1M,eAAgBlhB,KAAK4tB,oBACrBpH,WAAW,OACX9E,QAAS,CACPwF,QAAS,mCACTE,QAAS,4BAEXT,YAAa,CACX5Z,UAAS,iCAAAvI,OACP8oB,EAAwB,YAAc,IAExC/e,SACExP,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgP,SAAA,KACG8a,EACD/pB,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAK,oBAKjBjF,EAAAC,EAAAC,cAAA,MAAI8N,UAAU,wBACXshB,EAAM/Y,IAAI,SAAAkZ,GAAU,OACnBzvB,EAAAC,EAAAC,cAAA,MAAI8N,UAAU,uBAAuB8J,IAAK2X,GACxCzvB,EAAAC,EAAAC,cAACwvB,GAAD,CACEzqB,KAAK,OACL+D,GAAIymB,EACJ/rB,MAAO+rB,EACPtB,UAAWsB,IAAe1F,EAC1Bpb,MACE8gB,IAAe1F,EACb/pB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgP,SAAA,KACEjP,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAK,UACVwqB,GAGHA,EAGJthB,SAAU4J,EAAKiX,WACfrM,QAAS,CACPuL,MAAO,kBACPvf,MAAO,iCAQrB3O,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,mBACbhO,EAAAC,EAAAC,cAACsvB,GAAD,CACElM,SAAUgL,EACVjH,cAAepmB,KAAK2tB,qBACpBzM,eAAgBlhB,KAAK2tB,qBACrBnH,WAAW,OACX9E,QAAS,CACPwF,QAAS,oCACTE,QAAS,6BAEXT,YAAa,CACX5Z,UAAS,kCAAAvI,OACP6oB,EAAyB,YAAc,IAEzC9e,SACExP,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgP,SAAA,KACGua,GAAOoB,GAAOnB,KACfzpB,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAK,oBAKjBjF,EAAAC,EAAAC,cAAA,MAAI8N,UAAU,yBACXwb,GAAOjT,IAAI,SAACoZ,EAAahU,GAAd,OACV3b,EAAAC,EAAAC,cAAA,MAAI8N,UAAU,wBAAwB8J,IAAK6X,EAAYlG,MACrDzpB,EAAAC,EAAAC,cAACwvB,GAAD,CACEzqB,KAAK,QACL+D,GAAI2mB,EAAYlG,KAChB/lB,MAAOiY,EACPwS,UAAWxS,IAAMiP,EACjBjc,MACEgN,IAAMiP,EACJ5qB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgP,SAAA,KACEjP,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAK,UACV0qB,EAAYlG,MAGfkG,EAAYlG,KAGhBtb,SAAU4J,EAAK+W,YACfnM,QAAS,CACPuL,MAAO,kBACPvf,MAAO,gCAOnB3O,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,8BACbhO,EAAAC,EAAAC,cAAC0R,EAAD,CACE3D,KAAK,SACLD,UAAU,iDACV6B,KAAK,KACLK,UAAQ,EACRR,QAASzO,KAAK0tB,eAEd3uB,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAK,kBAEbjF,EAAAC,EAAAC,cAAC0R,EAAD,CACE3D,KAAK,SACLD,UAAU,iDACV6B,KAAK,KACLK,UAAQ,EACRR,QAASzO,KAAKutB,eAEdxuB,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAK,qBAIjBjF,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,uBACZ4b,GAAUrT,IAAI,SAAAkV,GAAG,OAChBzrB,EAAAC,EAAAC,cAAA,OACE4X,IAAK2T,EAAIhC,KACTzb,UAAS,sBAAAvI,OAAwBkd,EAAQiN,UAExCnE,EAAI5B,WAIX7pB,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,kBACZqhB,EAAM9Y,IAAI,SAAA6T,GACT,IAAMD,EACJC,EAAKqB,MAAQnB,EAAMmB,KACnBrB,EAAKQ,QAAUN,EAAMM,OACrBR,EAAKL,OAASO,EAAMP,KAChB8F,EACJV,GACA/E,EAAKqB,MAAQ0D,EAAa1D,KAC1BrB,EAAKQ,QAAUuE,EAAavE,OAC5BR,EAAKL,OAASoF,EAAapF,KAC7B,OACE/pB,EAAAC,EAAAC,cAAA,OACE4X,IAAG,GAAArS,OAAK2kB,EAAKQ,MAAV,MAAAnlB,OAAoB2kB,EAAKqB,KAC5Bzd,UAAS,iBAAAvI,OACP2kB,EAAKQ,QAAUA,EAAQ,2BAA6B,GAD7C,KAAAnlB,OAEL0kB,EAAU,WAAa,GAFlB,KAAA1kB,OAGPoqB,EAAiB,cAAgB,GAH1B,KAAApqB,OAILkd,EAAQ8I,MAEZzrB,EAAAC,EAAAC,cAAC0R,EAAD,CACE3D,KAAK,SACLD,UAAU,qBACV6B,KAAK,KACLH,QAAS,kBAAM0f,EAAWhF,KAEzBA,EAAKqB,iBAhNc3rB,cCIhCgwB,GAAa,SAAA9qB,GAAA,IAAG+qB,EAAH/qB,EAAG+qB,KAAMvgB,EAATxK,EAASwK,SAATzB,EAAA/I,EAAmBgJ,iBAAnB,IAAAD,EAA+B,GAA/BA,EAAA,OACjB/N,EAAAC,EAAAC,cAAA,OAAK8N,UAAS,gBAAAvI,OAAkBuI,IAC9BhO,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAM8qB,IACXvgB,IAICwgB,eACJ,SAAAA,EAAYjwB,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAA+uB,IACjBhvB,EAAAX,OAAAoQ,EAAA,EAAApQ,CAAAY,KAAAZ,OAAAqQ,EAAA,EAAArQ,CAAA2vB,GAAArf,KAAA1P,KAAMlB,KAWRkwB,gBAAkB,SAAApf,GAChB,IAAIA,EAAEW,OAAOgW,QAAQ,YAAa3W,EAAEW,OAAOgW,QAAQ,KAAnD,CADqB,IAAAxW,EAEWhQ,EAAKjB,MAA7BsG,EAFa2K,EAEb3K,QACR6pB,EAHqBlf,EAELkf,aACJ7pB,KAbZrF,EAAK+P,MAAQ,GAFI/P,qFAKGmvB,GACpB,OAA+C,IAA3CA,EAAUlL,SAASmL,aAAQ5rB,oCAYxB,IAAAuT,EAAA9W,KAAAwf,EAWHxf,KAAKlB,MATPkF,EAFKwb,EAELxb,KACAoB,EAHKoa,EAGLpa,OACAgqB,EAJK5P,EAIL4P,UACApL,EALKxE,EAKLwE,SACA9a,EANKsW,EAMLtW,WACAI,EAPKkW,EAOLlW,QACAH,EARKqW,EAQLrW,WACAkmB,EATK7P,EASL6P,kBACAC,EAVK9P,EAUL8P,YAGIC,EAAajmB,EACfmkB,EAAUjB,aAAaljB,EAAQkmB,SAAU,CACvC9C,aAAa,EACbC,OAAQ,CAAEhD,MAAO,QAASa,IAAK,aAEjC,KACEiF,EAA4B,UAAfF,EACbG,EAA2B,aAAfH,EACZI,EAAYrmB,GAAWmkB,EAAUlB,YAAYjjB,EAAQkmB,UAC3D,OACEzwB,EAAAC,EAAAC,cAACyjB,GAAA,EAAD,CAAWkN,YAAaxqB,EAAQyqB,MAAOT,GACpC,SAAAtM,GAAQ,OACP/jB,EAAAC,EAAAC,cAAA,MAAAG,OAAAC,OAAA,CACE0N,UAAU,OACV0B,QAASqI,EAAKkY,iBACVlM,EAASgN,eACThN,EAASiN,gBAJf,CAKEhpB,IAAK+b,EAAS1B,SACdmE,MAAKnmB,OAAAqE,EAAA,EAAArE,CAAA,GACA0jB,EAASgN,eAAevK,MADxB,CAEH+C,gBAAiB,WAGnBvpB,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,eAAehG,IAAK,SAAAsa,GAAE,OAAKvK,EAAKkZ,SAAW3O,IACxDtiB,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,cACZiX,EAAS1O,IAAI,SAAA2O,GAAO,OACnBllB,EAAAC,EAAAC,cAACgxB,GAAD,CACEpZ,IAAKoN,EAAQ5e,KACbuJ,KAAK,KACLpJ,MAAOye,EAAQze,MACfsJ,QAAQ,OACR/B,UAAU,iBAIhBhO,EAAAC,EAAAC,cAAA,MAAI8N,UAAU,eAAe/I,IAE/BjF,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,cACZzD,GACCvK,EAAAC,EAAAC,cAACixB,GAAD,CACEpB,KAAK,WACL/hB,UAAS,kBAAAvI,OACPirB,EACI,eACAC,EACA,cACAC,EACA,cACA,GAPG,yBAWRJ,GAGJpmB,GAAcA,EAAW7F,OAAS,GACjCvE,EAAAC,EAAAC,cAACixB,GAAD,CAAYpB,KAAK,gBACdO,EAAkB/rB,OADrB,IAC8B6F,EAAW7F,QAG1C4F,GAAcA,EAAW5F,OAAS,GACjCvE,EAAAC,EAAAC,cAACixB,GAAD,CAAYpB,KAAK,kBACd5lB,EAAW5F,SAIlBvE,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,gBACZuiB,GAAeA,EAAYhsB,OAAS,GACnCvE,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,yBACbhO,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,iBACZuiB,EAAYha,IAAI,SAAA6a,GAAU,IACjBnsB,EAA2BmsB,EAA3BnsB,KAAMK,EAAqB8rB,EAArB9rB,SAAUT,EAAWusB,EAAXvsB,OACxB,OACE7E,EAAAC,EAAAC,cAACmxB,GAAD,CACE1O,QAAS,CACPwG,OAAQ,eACR9a,YAAa,4BAEfua,SAAU3jB,EACV4K,KAAK,KACLE,QAAQ,SACRkZ,OAAQ3jB,EACRwS,IAAKjT,mBAlHZ/E,aAgJJsY,eAfS,SAACrH,EAAOiQ,GAC9B,MAAO,CACLiE,SAAUqM,EAActM,YAAYjU,EAAOiQ,GAC3CsP,kBAAmBiB,EAAiB7L,qBAClC3U,EACAiQ,EAAS5W,YAEXmmB,YAAaiB,EAAcpY,gBAAgBrI,EAAOiQ,EAASxW,cAIpC,SAAA+I,GACzB,MAAO,IAGM6E,CAGb4X,ICnKIyB,WAAW,SAAAzsB,GAUX,IATJtB,EASIsB,EATJtB,MACAsF,EAQIhE,EARJgE,GACA/D,EAOID,EAPJC,KACAkpB,EAMInpB,EANJmpB,UACAze,EAKI1K,EALJ0K,QACAvB,EAIInJ,EAJJmJ,SACAH,EAGIhJ,EAHJgJ,UACAY,EAEI5J,EAFJ4J,WACG7O,EACCM,OAAA+P,EAAA,EAAA/P,CAAA2E,EAAA,iFACJ,OACEhF,EAAAC,EAAAC,cAAA,SACEgP,QAASlG,EACT0G,QAASA,EACT1B,UAAS,mBAAAvI,OAAqBmJ,IAE7Buf,GAAanuB,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAK,UACzBjF,EAAAC,EAAAC,cAAA,QAAAG,OAAAC,OAAA,CACE2N,KAAK,WACLjF,GAAIA,EACJtF,MAAOA,EACPuB,KAAMA,EACNmpB,QAASD,EACTngB,UAAS,YAAAvI,OAAcuI,GACvBG,SAAUA,GACNpO,OAMZ0xB,GAASniB,aAAe,CACtBtB,UAAW,GACXY,WAAY,IAGC6iB,UChCTC,sNACJ3gB,MAAQ,CACN4gB,WAAW,EACX1sB,KAAMjE,EAAKjB,MAAMkF,KACjB2sB,cAAe5wB,EAAKjB,MAAMkF,QAa5BiJ,QAAU,WACRlN,EAAKoQ,SAAS,CACZugB,WAAW,OAIfxjB,SAAW,SAAA0C,GACT7P,EAAKoQ,SAAS,CACZnM,KAAM4L,EAAEW,OAAO9N,WAInB6K,OAAS,WAAM,IAAAyC,EACsBhQ,EAAKjB,MAAhCkF,EADK+L,EACL/L,KAAM7E,EADD4Q,EACC5Q,SAAUiG,EADX2K,EACW3K,OACVwrB,EAAY7wB,EAAK+P,MAAvB9L,KACJA,IAAS4sB,GACXzxB,EAASiH,WAAWhB,EAAQ,CAC1BpB,KAAM4sB,IAGV7wB,EAAKoQ,SAAS,CACZugB,WAAW,OAIfzmB,WAAa,SAAA2F,GACX,GAAuB,KAAnBA,EAAEW,OAAO9N,OAAgBmN,EAAEiH,MAAQxB,GAAvC,CADgB,IAAAmK,EAE0Czf,EAAKjB,MAAvDsG,EAFQoa,EAERpa,OAAQjG,EAFAqgB,EAEArgB,SAAU8I,EAFVuX,EAEUvX,OAAQsB,EAFlBiW,EAEkBjW,WAAYC,EAF9BgW,EAE8BhW,QAC9CrK,EAAS8K,WAAW,CAAE7E,SAAQ6C,SAAQsB,aAAYC,gBAGpDqnB,gBAAkB,WAAM,IAAA/C,EACoB/tB,EAAKjB,MAAvCsG,EADc0oB,EACd1oB,OAAQgE,EADM0kB,EACN1kB,YAAajK,EADP2uB,EACO3uB,SAC7BA,EAASiH,WAAWhB,EAAQ,CAC1BgE,aAAcA,EACdC,YAAcD,EAAwC,KAA1BjK,EAASiD,oBAIzC0uB,gBAAkB,SAAAlhB,GAChB,KACEA,EAAEW,OAAOgW,QAAQ,WACjB3W,EAAEW,OAAOgW,QAAQ,MACjB3W,EAAEW,OAAOgW,QAAQ,UACjB3W,EAAEW,OAAOgW,QAAQ,2BAJnB,CADqB,IAAA0H,EAQWluB,EAAKjB,MAA7BsG,EARa6oB,EAQb7oB,QACR2rB,EATqB9C,EAQL8C,aACJ3rB,6EAGL,IAAA4rB,EAC6ChxB,KAAKlB,MAAjDsG,EADD4rB,EACC5rB,OAAQgE,EADT4nB,EACS5nB,YAAagY,EADtB4P,EACsB5P,SAAU0B,EADhCkO,EACgClO,SADhCjT,EAEqB7P,KAAK8P,MAAzB4gB,EAFD7gB,EAEC6gB,UAAW1sB,EAFZ6L,EAEY7L,KACb8rB,EAAiBhN,EACnBA,EAASgN,eACT,CAAEvK,MAAO,CAAE0L,UAAW,SACpBlB,EAAkBjN,EACpBA,EAASiN,gBACT,CAAExK,MAAO,CAAE0L,UAAW,SAE1B,OACElyB,EAAAC,EAAAC,cAAA,KAAAG,OAAAC,OAAA,CACE0N,UAAS,QAAAvI,OAAUksB,EAAY,aAAe,IAC9CjiB,QAASzO,KAAK8wB,gBACd/pB,IAAKqa,GACD0O,EACAC,GAEJhxB,EAAAC,EAAAC,cAACiyB,GAAD,CACEnpB,GAAE,MAAAvD,OAAQY,GACV3C,MAAO2C,EACPpB,KAAMoB,EACN8nB,UAAW9jB,EACX8D,SAAUlN,KAAK6wB,gBACf9jB,UAAU,iBACVY,WAAW,yBAEb5O,EAAAC,EAAAC,cAAC0mB,GAAD,CACEljB,MAAOuB,EACPiJ,QAASjN,KAAKiN,QACdC,SAAUlN,KAAKkN,SACfI,OAAQtN,KAAKsN,OACbtJ,KAAMoB,EACN2H,UAAU,iBACVa,UAAW5N,KAAKiK,iEA/FQnL,EAAOgR,GACrC,OAAIhR,EAAMkF,OAAS8L,EAAM6gB,cAChB,CACL3sB,KAAMlF,EAAMkF,KACZ2sB,cAAe7xB,EAAMkF,MAGlB,YAdQnF,cAuHJD,KACbuY,YAXsB,SAAArH,GACtB,MAAO,CACLlM,OAAQshB,EAAqBjQ,iBAAiBnF,KAIvB,SAAAwC,GACzB,MAAO,IAIP6E,CAGEsZ,KC1GWU,GAtBO,SAAAptB,GAAA,IACpBqB,EADoBrB,EACpBqB,OACAyqB,EAFoB9rB,EAEpB8rB,MACAkB,EAHoBhtB,EAGpBgtB,YACA9oB,EAJoBlE,EAIpBkE,OACAe,EALoBjF,EAKpBiF,SACAqT,EANoBtY,EAMpBsY,KANoB,OAQpBtd,EAAAC,EAAAC,cAACyjB,GAAA,EAAD,CAAWkN,YAAaxqB,EAAQyqB,MAAOA,GACpC,SAAC/M,EAAUlc,GAAX,OACC7H,EAAAC,EAAAC,cAACmyB,GAADhyB,OAAAC,OAAA,CACE+hB,SAAU0B,EAAS1B,SACnB0B,SAAUA,EACViO,YAAaA,EACb9oB,OAAQA,EACRe,SAAUA,GACNqT,OCbSgV,8MAgBnBC,eAAiB,WACVvxB,EAAKwxB,SACVxxB,EAAKwxB,QAAQC,eAAe,CAAEC,SAAU,8FARvBC,GACb1xB,KAAKlB,MAAM4V,MAAMpR,OAASouB,EAAUhd,MAAMpR,QAC5CtD,KAAKsxB,kDASA,IAAAxa,EAAA9W,KAAA+P,EACgD/P,KAAKlB,MAApDmJ,EADD8H,EACC9H,OAAQyM,EADT3E,EACS2E,MAAOqc,EADhBhhB,EACgBghB,YAAa/nB,EAD7B+G,EAC6B/G,SAC9B2oB,EAAuB,UAFtB5hB,EACuC1I,KAGxCuqB,EAAQld,EAAMY,IAAI,SAAC+G,EAAM+S,GAC7B,OAAOuC,EACL5yB,EAAAC,EAAAC,cAAC4yB,GAADzyB,OAAAC,OAAA,CACEwX,IAAKwF,EAAKjX,OACVgqB,UAAWA,EACXH,YAAa8B,GACT1U,IAGNtd,EAAAC,EAAAC,cAAC6yB,GAAD,CACEjb,IAAKwF,EAAKjX,OACVyqB,MAAOT,EACP2B,YAAaA,EACb9oB,OAAQA,EACRe,SAAUA,EACV5D,OAAQiX,EAAKjX,OACbiX,KAAMA,MAKZ,OACEtd,EAAAC,EAAAC,cAACyjB,GAAA,EAAD,CAAWC,YAAa1a,GAAUe,EAAUgE,KAAM4V,IAC/C,SAACE,EAAUlc,GAAX,OACC+qB,EACE5yB,EAAAC,EAAAC,cAAA,MAAAG,OAAAC,OAAA,CACE0N,UAAU,cACVhG,IAAK+b,EAAS1B,SACdmE,MAAO,CAAEwM,UAAWnrB,EAASorB,eAAiB,GAAK,KAC/ClP,EAASC,gBAEZ6O,EACA9O,EAAS1V,YACVrO,EAAAC,EAAAC,cAAA,OACEsmB,MAAO,CAAE0M,MAAO,OAAQC,MAAO,QAC/BnrB,IAAK,SAAAsa,GAAE,OAAKvK,EAAKya,QAAUlQ,MAI/BtiB,EAAAC,EAAAC,cAAA,KAAAG,OAAAC,OAAA,CACE0N,UAAU,cACVhG,IAAK+b,EAAS1B,UACV0B,EAASC,gBAEZ6O,EACA9O,EAAS1V,sBAtEWvO,aCQ7BszB,uBAKJ,SAAAA,EAAYrzB,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAmyB,IACjBpyB,EAAAX,OAAAoQ,EAAA,EAAApQ,CAAAY,KAAAZ,OAAAqQ,EAAA,EAAArQ,CAAA+yB,GAAAziB,KAAA1P,KAAMlB,KAMRszB,iBAAmB,SAAAxiB,GACjBA,EAAEU,iBADoB,IAAAP,EAEkBhQ,EAAKjB,MAArCmJ,EAFc8H,EAEd9H,OAAQtI,EAFMoQ,EAENpQ,UAFMoQ,EAEK5Q,SAClBwJ,WAAW,CAAEV,SAAQtI,eAVbI,EAanBmN,SAAW,SAAA0C,GACT7P,EAAKoQ,SAAL/Q,OAAAwG,EAAA,EAAAxG,CAAA,GACGwQ,EAAEW,OAAOvM,KAAO4L,EAAEW,OAAO9N,SAfX1C,EAmBnBuN,OAAS,SAAAsC,GAAK,IAAA4P,EACuBzf,EAAKjB,MAAhCkF,EADIwb,EACJxb,KAAMiE,EADFuX,EACEvX,OAAQ9I,EADVqgB,EACUrgB,SACRyxB,EAAY7wB,EAAK+P,MAAvB9L,KAIJ4sB,IAAY5sB,IACd7E,EAASgJ,eAAe,CAAEF,SAAQjE,KAAM4sB,IACxC/vB,QAAQC,IAAI,wBAzBdf,EAAK+P,MAAQ,CACX9L,KAAMjE,EAAKjB,MAAMkF,MAHFjE,wEA+BV,IAAA+W,EAAA9W,KAAA8tB,EAYH9tB,KAAKlB,MAVP4V,EAFKoZ,EAELpZ,MACMpM,EAHDwlB,EAGL9pB,KACA+sB,EAJKjD,EAILiD,YACA9oB,EALK6lB,EAKL7lB,OACAoqB,EANKvE,EAMLuE,UACAC,EAPKxE,EAOLwE,gBACAC,EARKzE,EAQLyE,aACA5yB,EATKmuB,EASLnuB,UACAqH,EAVK8mB,EAUL9mB,YACAK,EAXKymB,EAWLzmB,KAEF,GAAIirB,EAAiB,OAAO,KAE5B,IAAMX,EAAuB,UAATtqB,EAEZrD,EAAShE,KAAK8P,MAAd9L,KAER,OACEjF,EAAAC,EAAAC,cAACyjB,GAAA,EAAD,CAAWkN,YAAa3nB,EAAQ4nB,MAAOwC,GACpC,SAAAvP,GAAQ,OACP/jB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgP,SAAA,KACEjP,EAAAC,EAAAC,cAAA,UAAAG,OAAAC,OAAA,CACE0N,UAAS,WAAAvI,OAAa6C,EAAb,SACTN,IAAK+b,EAAS1B,UACV0B,EAASgN,eACThN,EAASiN,iBAEbhxB,EAAAC,EAAAC,cAAA,UAAQ8N,UAAU,gBAChBhO,EAAAC,EAAAC,cAACyR,EAAD,CACE3D,UAAU,qBACV/I,KAAK,OACLgJ,KAAK,OACLvK,MAAOuB,EACPkJ,SAAU4J,EAAK5J,SACfgB,UAAWqkB,EACX9kB,WAAS,EACTM,WAAYwkB,EACZjlB,OAAQwJ,EAAKxJ,SAEfvO,EAAAC,EAAAC,cAACsvB,GAAD,CACE7M,QAAS,CACPwF,QAAS,wBACTE,QAAS,iBAEXZ,WAAYmL,EAAc,OAAS,QACnChL,YAAa,CACX/X,KAAM,SACNK,UAAU,EACVlC,UAAW,0BACXwB,SAAUxP,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAK,oBAGvBjF,EAAAC,EAAAC,cAACuzB,GAAD,KACEzzB,EAAAC,EAAAC,cAACwzB,GAAD,MACIF,GACAxzB,EAAAC,EAAAC,cAAA,KAAGyzB,KAAK,GAAGjkB,QAASqI,EAAKsb,kBAAzB,cAQVrzB,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,iBACbhO,EAAAC,EAAAC,cAAC0zB,GAAD,CACEje,MAAOA,EACPzM,OAAQA,EACR8oB,YAAaA,EACb1pB,KAAMA,KAGTyb,EAAS1V,YACTukB,EACC5yB,EAAAC,EAAAC,cAAC2zB,GAAD,CACE3qB,OAAQA,EACRK,SAAUA,EACV3I,UAAWA,EACXqH,YAAaA,IAGfjI,EAAAC,EAAAC,cAAC4zB,GAAD,CACE5qB,OAAQA,EACRK,SAAUA,EACV3I,UAAWA,EACXqH,YAAaA,KAIlB8b,EAAS1V,sBA9HHvO,cAAbszB,GACG9jB,aAAe,CACpBkkB,cAAc,GAoIlB,IAaelb,MAbG,SAAApH,GAAQ,QAAMA,GAajBoH,CACbF,YAZsB,SAACrH,EAAOiQ,GAC9B,MAAO,CACLrL,MAAO2b,EAAc3M,aAAa5T,EAAOiQ,EAAShb,SAClDiC,YAAagZ,EAAiB3B,eAAevO,EAAOiQ,EAASpgB,aAItC,SAAA2S,GACzB,MAAO,IAIP6E,CAGEgb,KCnKSW,GAAmB,SAAAC,GAC9B,MAAO,CACL/lB,KCL+B,sBDM/B+lB,iBAISC,GAAoB,WAC/B,sBAAAjvB,EAAA3E,OAAA8S,GAAA,EAAA9S,CAAA+S,GAAAnT,EAAAoT,KAAO,SAAAC,EAAMC,GAAN,IAAAygB,EAAA,OAAA5gB,GAAAnT,EAAAuT,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEwBvT,GAAS8D,GACjCY,WAAW,YACX8C,MACAnG,KAAK,SAAAoG,GACJ,IAAMqsB,EAAW,GAOjB,OANArsB,EAASE,QAAQ,SAAA5D,GACf+vB,EAAS/vB,EAAI6E,IAAb3I,OAAAqE,EAAA,EAAArE,CAAA,CACE8M,UAAWhJ,EAAI6E,IACZ7E,EAAIyP,UAGJsgB,IAbR,OAEGF,EAFHvgB,EAAAI,KAeHN,EAASwgB,GAAiBC,IAfvBvgB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAiBH3R,QAAQC,IAAR0R,EAAAK,IAjBG,yBAAAL,EAAAM,SAAAT,EAAArS,KAAA,YAAP,gBAAA+S,GAAA,OAAAhP,EAAAiP,MAAAhT,KAAAqD,YAAA,IAsBW6vB,GAAqB,SAAAC,GAChC,MAAO,CACLnmB,KCjCiC,wBDkCjCmmB,YAISC,GAAoB,SAAAhuB,GAC/B,sBAAAD,EAAA/F,OAAA8S,GAAA,EAAA9S,CAAA+S,GAAAnT,EAAAoT,KAAO,SAAAe,EAAMb,GAAN,IAAAygB,EAAA,OAAA5gB,GAAAnT,EAAAuT,KAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,cAAAU,EAAAX,KAAA,EAAAW,EAAAV,KAAA,EAEwBvT,GAAS8D,GACjCY,WAAW,YACX6C,MAAM,SAAU,KAAMtB,GACtBuB,MACAnG,KAAK,SAAAoG,GACJ,IAAMqsB,EAAW,GAOjB,OANArsB,EAASE,QAAQ,SAAA5D,GACf+vB,EAAS/vB,EAAI6E,IAAb3I,OAAAqE,EAAA,EAAArE,CAAA,CACE8M,UAAWhJ,EAAI6E,IACZ7E,EAAIyP,UAGJsgB,IAdR,OAEGF,EAFH3f,EAAAR,KAgBHN,EAASwgB,GAAiBC,IAhBvB3f,EAAAV,KAAA,gBAAAU,EAAAX,KAAA,EAAAW,EAAAP,GAAAO,EAAA,SAkBHvS,QAAQC,IAARsS,EAAAP,IAlBG,yBAAAO,EAAAN,SAAAK,EAAAnT,KAAA,YAAP,gBAAAsT,GAAA,OAAAnO,EAAA6N,MAAAhT,KAAAqD,YAAA,IAuBWgwB,GAAoB,SAAAzvB,GAC/B,sBAAAsC,EAAA9G,OAAA8S,GAAA,EAAA9S,CAAA+S,GAAAnT,EAAAoT,KAAO,SAAAmC,EAAMjC,GAAN,IAAAygB,EAAA,OAAA5gB,GAAAnT,EAAAuT,KAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,cAAA8B,EAAA/B,KAAA,EAAA+B,EAAA9B,KAAA,EAEwBvT,GAAS8D,GACjCY,WAAW,YACX6C,MAAM,KAAM,iBAAkB9C,GAC9B+C,MACAnG,KAAK,SAAAoG,GACJ,IAAMqsB,EAAW,GAOjB,OANArsB,EAASE,QAAQ,SAAA5D,GACf+vB,EAAS/vB,EAAI6E,IAAb3I,OAAAqE,EAAA,EAAArE,CAAA,CACE8M,UAAWhJ,EAAI6E,IACZ7E,EAAIyP,UAGJsgB,IAdR,OAEGF,EAFHve,EAAA5B,KAgBHN,EAASwgB,GAAiBC,IAhBvBve,EAAA9B,KAAA,gBAAA8B,EAAA/B,KAAA,EAAA+B,EAAA3B,GAAA2B,EAAA,SAkBH3T,QAAQC,IAAR0T,EAAA3B,IAlBG,yBAAA2B,EAAA1B,SAAAyB,EAAAvU,KAAA,YAAP,gBAAA2U,GAAA,OAAAzO,EAAA8M,MAAAhT,KAAAqD,YAAA,IAuBW8I,GAAa,SAAA7F,GACxB,MAAO,CACL0G,KCvFuB,cDwFvBd,UAHsD5F,EAA7B4F,UAIzBonB,YAJsDhtB,EAAlBgtB,cAQ3BC,GAAgB,SAAArnB,GAC3B,MAAO,CACLc,KC7F0B,iBD8F1Bd,cAISS,GAAgB,SAAAlG,GAC3B,MAAO,CACLuG,KCrG0B,iBDsG1Bd,UAHyDzF,EAA7ByF,UAI5BonB,YAJyD7sB,EAAlB6sB,cEvG9BE,GAAkB,SAAA1jB,GAE7B,OADyBA,EAAjBijB,cAIGU,GAAmB,SAAC3jB,EAAO5G,GAAe,IAC7C6pB,EAAiBjjB,EAAjBijB,aACR,OAAK7pB,EACEA,EAAWoM,IAAI,SAAApJ,GACpB,OAAO6mB,EAAa7mB,KAFE,sVCL1B,IAuCe6mB,GAvCM,WAAwB,IAAvBjjB,EAAuBzM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAI6S,EAAW7S,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,OAAQ2S,EAAOlJ,MACb,IFJ+B,sBEIC,IACtB+lB,EAAiB7c,EAAjB6c,aACR,OAAO3zB,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EACAijB,GAGP,IFRuB,cEQC,IACd7mB,EAA2BgK,EAA3BhK,UAAWonB,EAAgBpd,EAAhBod,YACnB,OAAOl0B,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EADL1Q,OAAAwG,EAAA,EAAAxG,CAAA,GAEG8M,EAFH9M,OAAAqE,EAAA,EAAArE,CAAA,CAGI8M,aACGonB,KAIT,IFhB0B,iBEgBC,IACjBpnB,EAAcgK,EAAdhK,UAER,OAD2D4D,EAAlD5D,GAFgB9M,OAAA+P,EAAA,EAAA/P,CAEkC0Q,EAFlC,CAEhB5D,GAFgBoJ,IAAAoe,KAK3B,IFtB0B,iBEsBC,IACjBxnB,EAA2BgK,EAA3BhK,UAAWonB,EAAgBpd,EAAhBod,YACnB,OAAOl0B,OAAAqE,EAAA,EAAArE,CAAA,GACF0Q,EADL1Q,OAAAwG,EAAA,EAAAxG,CAAA,GAEG8M,EAFH9M,OAAAqE,EAAA,EAAArE,CAAA,GAGO0Q,EAAM5D,GACNonB,KAIT,QACE,OAAOxjB,IClCP6jB,WAAU,SAAA5vB,GAAA,IAAGgJ,EAAHhJ,EAAGgJ,UAAWwB,EAAdxK,EAAcwK,SAAazP,EAA3BM,OAAA+P,EAAA,EAAA/P,CAAA2E,EAAA,iCACdhF,EAAAC,EAAAC,cAAA,MAAAG,OAAAC,OAAA,CAAK0N,UAAS,WAAAvI,OAAauI,IAAiBjO,GACzCyP,KAILolB,GAAQtlB,aAAe,CACrBtB,UAAW,IAGE4mB,UCTMC,oLACV,IACCrlB,EAAavO,KAAKlB,MAAlByP,SAER,OACExP,EAAAC,EAAAC,cAACsvB,GAAD,CACE7M,QAAS,CACPwF,QAAS,0EACTE,QAAS,2DAEXV,WAAW,OACXF,WAAW,OACXG,YAAa,CACX/X,KAAM,KACNK,UAAU,EACVlC,UAAW,2BACXwB,SAAUxP,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAK,UACrBkL,UAAWlP,KAAKlB,MAAMoQ,YAGvBX,UApB2C1P,aCF9Cg1B,GAAoB,SAAA9vB,GAAA,IAAG6K,EAAH7K,EAAG6K,KAAML,EAATxK,EAASwK,SAAT,OACxBxP,EAAAC,EAAAC,cAAA,OAAK8N,UAAS,uBAAAvI,OAAkC,OAAToK,EAAgB,OAAS,KAAOL,IAGzEslB,GAAkBxlB,aAAe,CAC/BO,KAAM,WAGOilB,UCFMC,sNACnBhkB,MAAQ,CACNikB,MAAO,GACP1R,UAAU,EACV7B,gBAAgB,EAChBwT,eAAgB,GAChBC,cAAe,KACfC,aAAcn0B,EAAKjB,MAAM6Y,SAS3BgJ,mBAAqB,SAAA/Q,GACM,KAArB7P,EAAK+P,MAAMikB,QACVh0B,EAAKo0B,eAAepT,SAASnR,EAAEW,SAClCxQ,EAAKoQ,SAAS,CACZkS,UAAU,QAKhB9B,YAAc,WACZxgB,EAAKoQ,SAAS,CACZqQ,gBAAgB,IAGlBC,SAASC,oBAAoB,aAAc3gB,EAAKwgB,aAEhDE,SAASC,oBAAoB,QAAS3gB,EAAK4gB,oBAE3CF,SAASG,iBAAiB,aAAc7gB,EAAK4gB,uBAG/CyT,UAAY,SAACrzB,EAAMgzB,GAAU,IACnB/vB,EAA0BjD,EAA1BiD,KAAM3C,EAAoBN,EAApBM,MAAO4C,EAAalD,EAAbkD,SACfowB,EAAS,IAAIC,OAAOP,EAAO,KACjC,OAAOM,EAAOjI,KAAKpoB,IAASqwB,EAAOjI,KAAK/qB,IAAUgzB,EAAOjI,KAAKnoB,MAGhEgJ,QAAU,SAAA2C,GACR7P,EAAKoQ,SAAS,CACZkS,UAAU,OAIdG,QAAU,SAAA5S,GACR7P,EAAKoQ,SAAS,CACZ4jB,MAAO,GACP1R,UAAU,EACV7B,gBAAgB,EAChBwT,eAAgB,GAChBC,cAAe,KACfC,aAAcn0B,EAAKjB,MAAM6Y,WAI7BzK,SAAW,SAAA0C,GAAK,IACN+H,EAAU5X,EAAKjB,MAAf6Y,MADM9H,EAE4B9P,EAAK+P,MAAvCkkB,EAFMnkB,EAENmkB,eACFD,GAHQlkB,EAEUokB,cACVrkB,EAAEW,OAAO9N,OACjByxB,EAAevc,EAAM6M,OAAO,SAAAzjB,GAAI,OAAIhB,EAAKq0B,UAAUrzB,EAAMgzB,KACzDQ,EAAWL,EAAa/E,QAAQ6E,GAChCQ,GAAsC,IAAdD,EAE9Bx0B,EAAKoQ,SAAS,CACZ6jB,eAAgBQ,EACZR,EACAE,EAAa5wB,OAAS,EACtB4wB,EAAa,GAAGtwB,OAChB,GACJqwB,cAAeO,EAAwBD,EAAW,EAClDR,QACAG,oBAIJtmB,UAAY,SAAAgC,GACV,GACEA,EAAEiH,MAAQxB,IACVzF,EAAEiH,MAAQxB,IACVzF,EAAEiH,MAAQxB,IACVzF,EAAEiH,MAAQxB,GAJZ,CADe,IAAA7E,EASyCzQ,EAAK+P,MAArDokB,EATO1jB,EASP0jB,aAAcD,EATPzjB,EASOyjB,cAAeD,EATtBxjB,EASsBwjB,eAC7BS,EAAkB10B,EAAKjB,MAAvB21B,cACFC,EACJT,IAAkBC,EAAa5wB,OAAS,EAAI,EAAI2wB,EAAgB,EAC5DU,EACc,IAAlBV,EAAsBC,EAAa5wB,OAAS,EAAI2wB,EAAgB,EAGlE,OAAQrkB,EAAEiH,KACR,KAAKxB,GAEL,KAAKA,GACHtV,EAAKoQ,SAAS,CACZ6jB,eAAgBE,EAAaQ,GAAW9wB,OACxCqwB,cAAeS,IAEjB,MAEF,KAAKrf,GACHtV,EAAKoQ,SAAS,CACZ6jB,eAAgBE,EAAaS,GAAW/wB,OACxCqwB,cAAeU,IAEjB,MAEF,KAAKtf,GACH,GAAuB,KAAnB2e,EAAuB,OAC3BS,EAAcT,GAKlBpkB,EAAEU,sGA9GFmQ,SAASG,iBAAiB,aAAc5gB,KAAKugB,aAC7CE,SAASG,iBAAiB,QAAS5gB,KAAK2gB,oBAAoB,GAC5D3gB,KAAK40B,QAAQC,uDAgHc70B,KAAK8P,MAAxB0Q,eAGNC,SAASC,oBAAoB,aAAc1gB,KAAK2gB,qBAEhDF,SAASC,oBAAoB,QAAS1gB,KAAK2gB,oBAC3CF,SAASC,oBAAoB,aAAc1gB,KAAKugB,+CAI3C,IAAAzJ,EAAA9W,KAAA+P,EAC2C/P,KAAKlB,MAAxC21B,GADR1kB,EACC4H,MADD5H,EACQ0kB,eAAeK,EADvB/kB,EACuB+kB,gBADvBC,EAEmD/0B,KAAK8P,MAAvDikB,EAFDgB,EAEChB,MAAO1R,EAFR0S,EAEQ1S,SAAU6R,EAFlBa,EAEkBb,aAAcF,EAFhCe,EAEgCf,eAEvC,OACEj1B,EAAAC,EAAAC,cAAA,OACE8N,UAAU,yBACVhG,IAAK,SAAAsa,GAAE,OAAKvK,EAAKqd,eAAiB9S,IAElCtiB,EAAAC,EAAAC,cAACyR,EAAD,CACE1M,KAAK,QACL+I,UAAU,gBACVG,SAAUlN,KAAKkN,SACfzK,MAAOsxB,EACP9mB,QAASjN,KAAKiN,QACdK,OAAQtN,KAAKsN,OACbN,KAAK,OACLO,aAAa,MACbE,WAAS,EACTL,YAAY,0BACZQ,UAAW5N,KAAK4N,UAChBJ,SAAU,SAAA6T,GAAE,OAAKvK,EAAK8d,QAAUvT,KAEjCgB,GACCtjB,EAAAC,EAAAC,cAAA,MAAI8N,UAAU,uBACXmnB,EAAa5wB,OAAS,EACrB4wB,EAAa5e,IAAI,SAACvU,EAAM2Z,GAAM,IACpB1W,EAA4CjD,EAA5CiD,KAAMK,EAAsCtD,EAAtCsD,SAAUhD,EAA4BN,EAA5BM,MAAO4C,EAAqBlD,EAArBkD,SAAUL,EAAW7C,EAAX6C,OACnCoxB,EACJF,IAAwD,IAArCA,EAAgB3F,QAAQvrB,GAC7C,OACE7E,EAAAC,EAAAC,cAAA,MACE8N,UAAS,uBAAAvI,OACPwvB,IAAmBpwB,EAAS,cAAgB,IAE9C6K,QAAS,kBAAMgmB,EAAc7wB,IAC7BiT,IAAKjT,EACLmE,GAAInE,GAEJ7E,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAMgxB,EAAa,aAAe,cACxCj2B,EAAAC,EAAAC,cAACmxB,GAAD,CACE1O,QAAS,CACPwG,OAAQ,4BACR9a,YAAa,yCAEfua,SAAU3jB,EACV4K,KAAK,KACLE,QAAQ,SACRkZ,OAAQ3jB,IAEVtF,EAAAC,EAAAC,cAAA,QAAM8N,UAAU,2CACb/I,GAEHjF,EAAAC,EAAAC,cAAA,QAAM8N,UAAU,+CACb9I,GAEHlF,EAAAC,EAAAC,cAAA,QAAM8N,UAAU,4CACb1L,MAMTtC,EAAAC,EAAAC,cAAA,MAAI8N,UAAU,uBACZhO,EAAAC,EAAAC,cAAA,QAAM8N,UAAU,2BAAhB,8BAvM0BlO,cCsB3Bo2B,GAzBe,SAAAlxB,GAAA,IAAGmxB,EAAHnxB,EAAGmxB,YAAH,OAC5Bn2B,EAAAC,EAAAC,cAACsvB,GAAD,CACE7M,QAAS,CACPwF,QAAS,+BACTE,QAAS,wBAEXV,WAAW,QACXF,WAAW,QACXG,YAAa,CACX/X,KAAM,KACNK,UAAU,EACVlC,UAAW,2BACXwB,SAAUxP,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAK,sBAGvBjF,EAAAC,EAAAC,cAACuzB,GAAD,CAAM/jB,QAASymB,GACbn2B,EAAAC,EAAAC,cAACwzB,GAAD,KACE1zB,EAAAC,EAAAC,cAAA,KAAGyzB,KAAK,GAAGyC,cAAY,UAAvB,mBCbFC,WAAU3U,SAAS4U,eAAe,SAElCC,eACJ,SAAAA,EAAYx2B,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAs1B,IACjBv1B,EAAAX,OAAAoQ,EAAA,EAAApQ,CAAAY,KAAAZ,OAAAqQ,EAAA,EAAArQ,CAAAk2B,GAAA5lB,KAAA1P,KAAMlB,KAWR2mB,YAAc,SAAA7V,GACZ/O,QAAQC,IAAI,aACZf,EAAKoQ,SAAS,CACZpC,YAAY,KAfGhO,EAmBnBmN,SAAW,SAAA0C,GACT7P,EAAKoQ,SAAS,CACZnM,KAAM4L,EAAEW,OAAO9N,SArBA1C,EAyBnBuN,OAAS,WAAM,IAAAyC,EACyBhQ,EAAKjB,MAAnCkF,EADK+L,EACL/L,KAAM7E,EADD4Q,EACC5Q,SAAUiM,EADX2E,EACW3E,UACVwlB,EAAY7wB,EAAK+P,MAAvB9L,KACJA,IAAS4sB,GACXzxB,EAASyM,cAAcR,EAAW,CAChCpH,KAAM4sB,KA9BO7wB,EAmCnB8L,cAAgB,SAAA+D,GACd,GAAuB,KAAnBA,EAAEW,OAAO9N,OAAgBmN,EAAEiH,MAAQxB,GAAvC,CADmB,IAAAmK,EAEqBzf,EAAKjB,MAArCsM,EAFWoU,EAEXpU,UAAWhG,EAFAoa,EAEApa,OAFAoa,EAEQrgB,SAClB0M,cAAc,CAAET,YAAWhG,aAtCnBrF,EAyCnB8wB,gBAAkB,WAAM,IAAA/C,EACuB/tB,EAAKjB,MAA1CsM,EADc0iB,EACd1iB,UAAWhC,EADG0kB,EACH1kB,YAAajK,EADV2uB,EACU3uB,SAChCA,EAASyM,cAAcR,EAAW,CAChChC,aAAcA,EACdC,YAAcD,EAAwC,KAA1BjK,EAASiD,kBA3CvCrC,EAAKw1B,OAAS9U,SAASxhB,cAAc,OACrCc,EAAK+P,MAAQ,CACX9L,KAAMjE,EAAKjB,MAAMkF,MAJFjE,mFASjBq1B,GAAQI,YAAYx1B,KAAKu1B,uDAyCzBH,GAAQK,YAAYz1B,KAAKu1B,yCAGlB,IAAAze,EAAA9W,KAAAiuB,EAKHjuB,KAAKlB,MAHPsM,EAFK6iB,EAEL7iB,UACAykB,EAHK5B,EAGL4B,MACAzmB,EAJK6kB,EAIL7kB,YAGMpF,EAAShE,KAAK8P,MAAd9L,KAER,OACEjF,EAAAC,EAAAC,cAACyjB,GAAA,EAAD,CAAWkN,YAAaxkB,EAAWykB,MAAOA,GACvC,SAAC/M,EAAUlc,GACV,IAAMgrB,EACJ7yB,EAAAC,EAAAC,cAAA,KAAAG,OAAAC,OAAA,CACE0N,UAAU,UACVhG,IAAK+b,EAAS1B,UACV0B,EAASgN,eACThN,EAASiN,iBAEbhxB,EAAAC,EAAAC,cAACiyB,GAAD,CACEnpB,GAAE,MAAAvD,OAAQ4G,GACV3I,MAAO2I,EACPpH,KAAMoH,EACN8hB,UAAW9jB,EACX8D,SAAU4J,EAAK+Z,gBACf9jB,UAAU,oBACVY,WAAW,4BAEb5O,EAAAC,EAAAC,cAAC0mB,GAAD,CACEljB,MAAOuB,EACPkJ,SAAU4J,EAAK5J,SACfI,OAAQwJ,EAAKxJ,OACbtJ,KAAMoH,EACN2B,UAAU,oBACVa,UAAWkJ,EAAKjL,cAChB4Z,YAAa3O,EAAK2O,eAIxB,OAAO7e,EAAS8uB,WACZC,IAASC,aAAahE,EAAO9a,EAAKye,QAClC3D,WA/FQ/yB,aAsGPD,KAAa02B,ICvGtBO,sNACJ/lB,MAAQ,CACNgmB,YAAa/1B,EAAKjB,MAAMi3B,oBAAsBh2B,EAAKjB,MAAMa,aAgD3Dq2B,YAAc,SAAAjyB,GAA0C,IAAvCkyB,EAAuClyB,EAAvCkyB,YAAarG,EAA0B7rB,EAA1B6rB,YAAasG,EAAanyB,EAAbmyB,OACzC,GAAKD,GACDA,EAAYpG,QAAUqG,EAAOrG,MAAjC,CAFsD,IAAA9f,EAGrBhQ,EAAKjB,MAA9BK,EAH8C4Q,EAG9C5Q,SAAUgK,EAHoC4G,EAGpC5G,WACZgtB,EAAiB/2B,OAAAuM,EAAA,EAAAvM,CAAO+J,GAC9BgtB,EAAkBC,OAAOF,EAAOrG,MAAO,GACvCsG,EAAkBC,OAAOH,EAAYpG,MAAO,EAAGD,GAC/CzwB,EAASiH,WAAW8vB,EAAOvT,YAAa,CACtCxZ,WAAYgtB,yFArDI,IAAArf,EAAA9W,KAAAwf,EAUdxf,KAAKlB,MARPK,EAFgBqgB,EAEhBrgB,SACA0d,EAHgB2C,EAGhB3C,kBACAxR,EAJgBmU,EAIhBnU,WACAO,EALgB4T,EAKhB5T,cACAC,EANgB2T,EAMhB3T,cACAzG,EAPgBoa,EAOhBpa,OACAzF,EARgB6f,EAQhB7f,UARgB6f,EAShBuW,mBAEyBp2B,GACzBkd,EAAkBzX,GAAQ5E,KAAK,WAC7BsW,EAAK3G,SAAS,CACZ2lB,YAAY,MAIlB91B,KAAKq2B,gBAAkBl3B,EAAS8D,GAC7BY,WAAW,YACX6C,MAAM,SAAU,KAAMtB,GACtB8T,WAAW,SAAAE,GACVA,EAAcE,aAAaxS,QAAQ,SAAAyS,GACjC,IAAMnO,EAAYmO,EAAOrW,IAAI6E,GACvBgV,EAAcxD,EAAOrW,IAAIyP,OACX,UAAhB4G,EAAOvM,MACT3B,EAAW,CAAED,YAAW2R,gBAEN,aAAhBxD,EAAOvM,MACTpB,EAAc,CAAER,YAAW2R,gBAET,YAAhBxD,EAAOvM,MACTnB,EAAcT,qDAMF8jB,GACpB,OAAIA,EAAUzS,SAASiI,cAASnhB,kDAmBhCvD,KAAKq2B,mDAGE,IAAAvI,EACsB9tB,KAAKlB,MAA1BsG,EADD0oB,EACC1oB,OAAQqX,EADTqR,EACSrR,SACRqZ,EAAe91B,KAAK8P,MAApBgmB,WACR,OACE/2B,EAAAC,EAAAC,cAACyjB,GAAA,EAAD,CAAiB4T,UAAWt2B,KAAKg2B,aAC/Bj3B,EAAAC,EAAAC,cAACyjB,GAAA,EAAD,CAAWC,YAAavd,EAAQ4H,KxC/EjB,WwCgFZ,SAAA8V,GAAQ,OACP/jB,EAAAC,EAAAC,cAAA,KAAAG,OAAAC,OAAA,CACE0N,UAAU,WACVhG,IAAK+b,EAAS1B,UACV0B,EAASC,iBAEX+S,GACArZ,EAASnH,IAAI,SAACqH,EAASkT,GACrB,OACE9wB,EAAAC,EAAAC,cAACs3B,GAAD,CACEnrB,UAAWuR,EAAQvR,UACnBhG,OAAQA,EACRyqB,MAAOA,EACP7rB,KAAM2Y,EAAQ3Y,KACdoF,YAAauT,EAAQvT,YACrByN,IAAK8F,EAAQvR,cAIpB0X,EAAS1V,uBA3FDvO,cAwHRD,KACbuY,YArBsB,SAACrH,EAAOiQ,GAC9B,MAAO,CACLtD,SAAU6T,EAAiBlM,iBAAiBtU,EAAOiQ,EAAS5W,YAC5D4sB,kBAAmBvX,GAAqB1O,KAIjB,SAAAwC,GACzB,MAAO,CACLuK,kBAAmB,SAAAzX,GAAM,OACvBkN,EAASkkB,EAAe3Z,kBAAkBzX,KAC5CiG,WAAY,SAAAlG,GAAA,IAAGiG,EAAHjG,EAAGiG,UAAW2R,EAAd5X,EAAc4X,YAAd,OACVzK,EAASkkB,EAAenrB,WAAW,CAAED,YAAW2R,kBAClDlR,cAAe,SAAAT,GAAS,OACtBkH,EAASkkB,EAAe3qB,cAAcT,KACxCQ,cAAe,SAAA1F,GAAA,IAAGkF,EAAHlF,EAAGkF,UAAW2R,EAAd7W,EAAc6W,YAAd,OACbzK,EAASkkB,EAAe5qB,cAAc,CAAER,YAAW2R,oBAKvD5F,CAGE0e,KCzHEY,sNACJ3mB,MAAQ,CACN4mB,eAAgB,KAgBlBC,KAAO,WACL52B,EAAKoQ,SAAS,SAAAkW,GAAS,MAAK,CAC1BqQ,eAAgBrQ,EAAUqQ,eAAiB,QAQ/CE,gBAAkB,WAAM,IAAA7mB,EACUhQ,EAAKjB,OAErC+3B,EAHsB9mB,EACd8mB,YADc9mB,EACFojB,QACZjnB,+FAzBU,IACVzE,EAAczH,KAAKlB,MAAMq0B,QAAzB1rB,UACFqvB,EACJC,KAAKC,MAAM/iB,KAAKgjB,MAAQ,KACxBF,KAAKC,MAAMvvB,EAAU+nB,SAAS0H,UAAY,KAE5Cl3B,KAAKmQ,SAAS,CACZumB,eAAgBI,IAGlB92B,KAAKm3B,SAAWC,YAAYp3B,KAAK22B,KAAM,oDAUvCU,cAAcr3B,KAAKm3B,2CASZ,IAAA3X,EACmBxf,KAAKlB,MAAvBiC,EADDye,EACCze,KAAMoyB,EADP3T,EACO2T,QACNuD,EAAmB12B,KAAK8P,MAAxB4mB,eACA1yB,EAAmBjD,EAAnBiD,KAAMK,EAAatD,EAAbsD,SAEZiI,EAOE6mB,EAPF7mB,QACA7E,EAME0rB,EANF1rB,UAEAiF,GAIEymB,EALFzvB,cAKEyvB,EAJFzmB,OAGAH,GACE4mB,EAHF1mB,GAGE0mB,EAFF3mB,KAEE2mB,EADF5mB,UAEF,IAAK9E,EAAW,OAAO,KACvB,IAAM6vB,EAAc7vB,EAAU+nB,SACxB+H,EAAcD,EAAYE,mBAAmB,GAAI,CACrDC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAEJC,EAAoBnK,EAAUjB,aAAa8K,EAAa,CAC5D5K,aAAa,EACbC,OAAQ,CACNC,QAAS,QACTjD,MAAO,QACPa,IAAK,UACL1B,KAAM,aAGV,OACE/pB,EAAAC,EAAAC,cAAA,OACE8N,UAAS,gCAAAvI,OACP+H,EAAW,YAAc,KAG3BxN,EAAAC,EAAAC,cAACmxB,GAAD,CACE1O,QAAS,CACPwG,OAAQ,8BACR9a,YAAa,2CAEfua,SAAU3jB,EACV4K,KAAK,KACLE,QAAQ,SACRkZ,OAAQ3jB,IAEVtF,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,wBACbhO,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,+BACbhO,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,gCACbhO,EAAAC,EAAAC,cAAA,QAAM8N,UAAU,qBAAqB/I,GACrCjF,EAAAC,EAAAC,cAAA,QAAM8N,UAAU,0BACb2pB,EAAiB,GACd,WACAA,EAAiB,IACjB,eACAA,EAAiB,KAAjB,GAAAlyB,OACGuyB,KAAKC,MAAMN,EAAiB,IAD/B,gBAEAA,EAAiB,KACjB,aACAA,EAAiB,MAAjB,GAAAlyB,OACGuyB,KAAKC,MAAMN,EAAiB,MAD/B,iBAAAlyB,OAEGozB,EAFH,QAAApzB,OAE2B+yB,KAGnCx4B,EAAAC,EAAAC,cAAC0R,EAAD,CACE5D,UAAU,qBACV0B,QAASzO,KAAK42B,gBACdhoB,KAAK,MAEL7P,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAK,cACXjF,EAAAC,EAAAC,cAAA,QAAM8N,UAAU,8BACbL,EAAMpJ,OAAS,EAAIoJ,EAAMpJ,OAAS,MAIzCvE,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,6BAA6BT,YA5GtBzN,cAyIjBwY,MAtBG,SAAApH,GAAQ,QAAMA,GAsBjBoH,CACbF,YArBsB,SAACrH,EAAOiQ,GAC9B,MAAO,CACLhf,KAAMwvB,EAAcvY,YAAYlI,EAAOiQ,EAASoT,QAAQ3mB,QAIjC,SAAA8F,GACzB,MAAO,CACL8J,gBAAiB,SAAAC,GAAI,OAAI/J,EAASulB,EAAYzb,gBAAgBC,KAC9D+W,kBAAmB,SAAAhuB,GAAM,OACvBkN,EAASwlB,EAAe1E,kBAAkBhuB,KAC5C+G,WAAY,SAAApI,GAAA,IAAGmI,EAAHnI,EAAGmI,UAAWonB,EAAdvvB,EAAcuvB,YAAd,OACVhhB,EAASwlB,EAAe3rB,WAAW,CAAED,YAAWonB,kBAClDC,cAAe,SAAArnB,GAAS,OACtBoG,EAASwlB,EAAevE,cAAcrnB,KACxCS,cAAe,SAAAxH,GAAA,IAAG+G,EAAH/G,EAAG+G,UAAWonB,EAAdnuB,EAAcmuB,YAAd,OACbhhB,EAASwlB,EAAenrB,cAAc,CAAET,YAAWonB,oBAKvDnc,CAGEsf,KCtJiBsB,sNACnBjoB,MAAQ,CACNkoB,cAAe,aAGjBC,kBAAoB,SAAAroB,GAAK,IACfsoB,EAAgBn4B,EAAKjB,MAArBo5B,YACRn4B,EAAKoQ,SAAS,CACZ6nB,cAAepoB,EAAEW,OAAO9N,QAE1By1B,EAAYtoB,EAAEW,OAAO9N,gFAGd,IACC8iB,EAAUvlB,KAAKlB,MAAfymB,MACAyS,EAAkBh4B,KAAK8P,MAAvBkoB,cACR,OACEj5B,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,eAAewY,MAAOA,GACnCxmB,EAAAC,EAAAC,cAACwvB,GAAD,CACE/M,QAAS,CACPuL,MAAO,sBACPvf,MAAO,oCAET1J,KAAK,WACL+D,GAAG,eACHtF,MAAM,UACNyK,SAAUlN,KAAKi4B,kBACf/K,UAA6B,YAAlB8K,IAEbj5B,EAAAC,EAAAC,cAACwvB,GAAD,CACE/M,QAAS,CACPuL,MAAO,sBACPvf,MAAO,gCAET1J,KAAK,WACL+D,GAAG,WACHtF,MAAM,MACNyK,SAAUlN,KAAKi4B,kBACf/K,UAA6B,QAAlB8K,IAEbj5B,EAAAC,EAAAC,cAACwvB,GAAD,CACE/M,QAAS,CACPuL,MAAO,sBACPvf,MAAO,iCAET1J,KAAK,WACL+D,GAAG,YACHtF,MAAM,OACNyK,SAAUlN,KAAKi4B,kBACf/K,UAA6B,SAAlB8K,IAEbj5B,EAAAC,EAAAC,cAACwvB,GAAD,CACE/M,QAAS,CACPuL,MAAO,sBACPvf,MAAO,kCAET1J,KAAK,WACL+D,GAAG,aACHtF,MAAM,QACNyK,SAAUlN,KAAKi4B,kBACf/K,UAA6B,UAAlB8K,IAEbj5B,EAAAC,EAAAC,cAACwvB,GAAD,CACE/M,QAAS,CACPuL,MAAO,sBACPvf,MAAO,mCAET1J,KAAK,WACL+D,GAAG,cACHtF,MAAM,SACNyK,SAAUlN,KAAKi4B,kBACf/K,UAA6B,WAAlB8K,IAEbj5B,EAAAC,EAAAC,cAACwvB,GAAD,CACE/M,QAAS,CACPuL,MAAO,sBACPvf,MAAO,mCAET1J,KAAK,WACL+D,GAAG,cACHtF,MAAM,SACNyK,SAAUlN,KAAKi4B,kBACf/K,UAA6B,WAAlB8K,IAEbj5B,EAAAC,EAAAC,cAACwvB,GAAD,CACE/M,QAAS,CACPuL,MAAO,sBACPvf,MAAO,iCAET1J,KAAK,WACL+D,GAAG,YACHtF,MAAM,OACNyK,SAAUlN,KAAKi4B,kBACf/K,UAA6B,SAAlB8K,IAEbj5B,EAAAC,EAAAC,cAACwvB,GAAD,CACE/M,QAAS,CACPuL,MAAO,sBACPvf,MAAO,iCAET1J,KAAK,WACL+D,GAAG,YACHtF,MAAM,OACNyK,SAAUlN,KAAKi4B,kBACf/K,UAA6B,SAAlB8K,IAEbj5B,EAAAC,EAAAC,cAACwvB,GAAD,CACE/M,QAAS,CACPuL,MAAO,sBACPvf,MAAO,iCAET1J,KAAK,WACL+D,GAAG,YACHtF,MAAM,OACNyK,SAAUlN,KAAKi4B,kBACf/K,UAA6B,SAAlB8K,IAEbj5B,EAAAC,EAAAC,cAACwvB,GAAD,CACE/M,QAAS,CACPuL,MAAO,sBACPvf,MAAO,kCAET1J,KAAK,WACL+D,GAAG,aACHtF,MAAM,QACNyK,SAAUlN,KAAKi4B,kBACf/K,UAA6B,UAAlB8K,IAEbj5B,EAAAC,EAAAC,cAACwvB,GAAD,CACE/M,QAAS,CACPuL,MAAO,sBACPvf,MAAO,mCAET1J,KAAK,WACL+D,GAAG,cACHtF,MAAM,SACNyK,SAAUlN,KAAKi4B,kBACf/K,UAA6B,WAAlB8K,IAEbj5B,EAAAC,EAAAC,cAACwvB,GAAD,CACE/M,QAAS,CACPuL,MAAO,sBACPvf,MAAO,mCAET1J,KAAK,WACL+D,GAAG,cACHtF,MAAM,SACNyK,SAAUlN,KAAKi4B,kBACf/K,UAA6B,WAAlB8K,YApJoBn5B,cCGpBs5B,sNACnBroB,MAAQ,CACNrN,MAAO,GACP4f,UAAU,EACV7B,gBAAgB,EAChB4X,YAAa,GACbC,WAAY,GACZpE,cAAe,KACfqE,cAAe,KACfpE,aAAc,MA0BhBjnB,QAAU,WACRlN,EAAKoQ,SAAS,CACZkS,UAAU,OAId/U,OAAS,WACPvN,EAAKoQ,SAAS,CACZioB,YAAa,GACbnE,cAAe,UAInB1R,UAAY,WACVxiB,EAAKoQ,SAAS,CACZ1N,MAAO,GACP21B,YAAa,GACbnE,cAAe,KACfqE,cAAe,KACfD,WAAY,GACZnE,aAAc,QAIlBqE,SAAW,SAACpyB,EAAK1D,GAAU,IACjB4C,EAASc,EAATd,KAER,OADe,IAAIivB,OAAO7xB,EAAO,KACnB2pB,KAAK/mB,MAGrB6H,SAAW,SAAA0C,GAAK,IACN4oB,EAAmBz4B,EAAKjB,MAAxB05B,eADM3oB,EAEyB9P,EAAK+P,MAApCsoB,EAFMvoB,EAENuoB,YACA31B,GAHMoN,EAEOokB,cACHrkB,EAAEW,OAAZ9N,OACFyxB,EAAesE,EAAehU,OAAO,SAAAre,GAAG,OAC5CpG,EAAKw4B,SAASpyB,EAAK1D,KAEf61B,GACqD,IAAzDpE,EAAauE,UAAU,SAAA9M,GAAI,OAAIA,EAAKtmB,OAAS5C,IACzC8xB,EAAWL,EAAa/E,QAAQiJ,GAChCM,GAAmC,IAAdnE,EAE3Bx0B,EAAKoQ,SAAS,CACZioB,YAAaM,EACTN,EACAlE,EAAa5wB,OAAS,EACtB4wB,EAAa,GAAG7uB,KAChB,GACJ4uB,cAAeyE,EAAqBnE,EAAW,EAC/C9xB,QACAyxB,aAAcoE,EACVpE,EADuB,GAAA1vB,OAAApF,OAAAuM,EAAA,EAAAvM,CAEnB80B,GAFmB,CAEL,CAAE7uB,KAAM5C,EAAO+C,MAAO,aAC5C8yB,qBAIJ1qB,UAAY,SAAAgC,GACV,GACEA,EAAEiH,MAAQxB,IACVzF,EAAEiH,MAAQxB,IACVzF,EAAEiH,MAAQxB,IACVzF,EAAEiH,MAAQxB,IACVzF,EAAEiH,MAAQxB,GALZ,CADe,IAAA7E,EAUyDzQ,EAAK+P,MAArEokB,EAVO1jB,EAUP0jB,aAAcD,EAVPzjB,EAUOyjB,cAAemE,EAVtB5nB,EAUsB4nB,YAAa31B,EAVnC+N,EAUmC/N,MAAO41B,EAV1C7nB,EAU0C6nB,WAV1CtoB,EAW6BhQ,EAAKjB,MAAzCoG,EAXO6K,EAWP7K,OAAQe,EAXD8J,EAWC9J,UAAW0yB,EAXZ5oB,EAWY4oB,aACrBjE,EACJT,IAAkBC,EAAa5wB,OAAS,GAAuB,OAAlB2wB,EACzC,EACAA,EAAgB,EAChBU,EACc,IAAlBV,EAAsBC,EAAa5wB,OAAS,EAAI2wB,EAAgB,EAGlE,OAAQrkB,EAAEiH,KACR,KAAKxB,GAEL,KAAKA,GACHtV,EAAKoQ,SAAS,CACZioB,YAAalE,EAAaQ,GAAWrvB,KACrC4uB,cAAeS,IAEjB,MAEF,KAAKrf,GACHtV,EAAKoQ,SAAS,CACZioB,YAAalE,EAAaS,GAAWtvB,KACrC4uB,cAAeU,IAEjB,MAEF,KAAKtf,GACH,GAAoB,KAAhB+iB,GAAgC,KAAV31B,EAAc,OACxC1C,EAAKwiB,YACLrd,EAAuB,KAAhBkzB,EAAqB31B,EAAQ21B,GACpC,MAEF,KAAK/iB,GACH,GAAc,KAAV5S,EAAc,OACC,KAAf41B,EACJt4B,EAAKoQ,SAAS,CACZkoB,WAAYM,EAAaA,EAAar1B,OAAS,GAAG+B,QAGpDtF,EAAKwiB,YACLtc,EAAUoyB,IAIdzoB,EAAEU,qBAGJqQ,mBAAqB,SAAA/Q,GACf7P,EAAKshB,GAAGN,SAASnR,EAAEW,SAEvBxQ,EAAKoQ,SAAS,CACZkS,UAAU,OAId9B,YAAc,WACZxgB,EAAKoQ,SAAS,CACZqQ,gBAAgB,IAGlBC,SAASC,oBAAoB,aAAc3gB,EAAKwgB,aAEhDE,SAASC,oBAAoB,QAAS3gB,EAAK4gB,oBAE3CF,SAASG,iBAAiB,aAAc7gB,EAAK4gB,uBAG/CiY,gBAAkB,SAAAzyB,GAAO,IACfF,EAAclG,EAAKjB,MAAnBmH,UACRlG,EAAKwiB,YACLtc,EAAUE,uFAhKVsa,SAASG,iBAAiB,aAAc5gB,KAAKugB,aAC7CE,SAASG,iBAAiB,QAAS5gB,KAAK2gB,oBAAoB,iDAGxCuO,GACpB,OAAmD,IAA/CA,EAAUyJ,aAAaxJ,aAAQ5rB,kDAORvD,KAAK8P,MAAxB0Q,eAGNC,SAASC,oBAAoB,aAAc1gB,KAAK2gB,qBAEhDF,SAASC,oBAAoB,QAAS1gB,KAAK2gB,oBAC3CF,SAASC,oBAAoB,aAAc1gB,KAAKugB,+CAiJ3C,IAAAzJ,EAAA9W,KAAAwf,EAOHxf,KAAKlB,MALP+5B,EAFKrZ,EAELqZ,oBACAF,EAHKnZ,EAGLmZ,aACAtyB,EAJKmZ,EAILnZ,YACAyyB,EALKtZ,EAKLsZ,WALK/D,GAAAvV,EAMLvZ,UASEjG,KAAK8P,OANPrN,EATKsyB,EASLtyB,MACA4f,EAVK0S,EAUL1S,SACA6R,EAXKa,EAWLb,aACAkE,EAZKrD,EAYLqD,YACAE,EAbKvD,EAaLuD,cACAD,EAdKtD,EAcLsD,WAGIU,EAAUJ,GAAgBA,EAAar1B,OAAS,EAEhD01B,EAAmB,GACzB,GAAIh5B,KAAKi5B,aAAc,KAAAC,EAMjBl5B,KAAKi5B,aAJPlS,EAFmBmS,EAEnBnS,WACAoS,EAHmBD,EAGnBC,YACArS,EAJmBoS,EAInBpS,UACAsS,EALmBF,EAKnBE,aAEFJ,EAAiBK,KAAOtS,EAAaoS,EAAc,EAAI,GACvDH,EAAiB/R,IAAMH,EAAYsS,EAAe,EAGpD,OACEr6B,EAAAC,EAAAC,cAAA,OAAK8N,UAAS,mBAAAvI,OAAqB6d,EAAW,YAAc,GAA9C,KAAA7d,OAAqDu0B,EAAsB,GAAZ,WAAkBhyB,IAAK,SAAAsa,GAAE,OAAKvK,EAAKuK,GAAKA,IAClHsX,EAAarjB,IAAI,SAAAnP,GAAG,OACnBpH,EAAAC,EAAAC,cAACgxB,GAAD,CACEpZ,IAAK1Q,EAAId,KACTG,MAAOW,EAAIX,MACXoJ,KAAK,KACLvJ,KAAMc,EAAId,KACVkiB,SAAU,kBAAMzQ,EAAK8hB,gBAAgBzyB,EAAId,OACzC0H,UAAWsrB,IAAelyB,EAAId,KAAO,aAAe,GACpDmiB,OACEsR,IAAe3yB,EAAId,KAAO,SAAAgc,GAAE,OAAKvK,EAAKmiB,aAAe5X,GAAM,SAIjEtiB,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,uBACbhO,EAAAC,EAAAC,cAACyR,EAAD,CACE3D,UAAU,aACVG,SAAUlN,KAAKkN,SACfI,OAAQtN,KAAKsN,OACb7K,MAAOA,EACPwK,QAASjN,KAAKiN,QACdD,KAAK,OACLO,aAAa,MACbK,UAAW5N,KAAK4N,UAChBH,WAAS,IAEV4U,GACCtjB,EAAAC,EAAAC,cAAA,MAAI8N,UAAU,oBACXmnB,EAAa5e,IAAI,SAACqW,EAAMjR,GACvB,OACE3b,EAAAC,EAAAC,cAAA,MACE4X,IAAK8U,EAAKtmB,KACV0H,UAAS,oBAAAvI,OACP4zB,IAAgBzM,EAAKtmB,KAAO,cAAgB,GADrC,KAAAb,OAGN8zB,GAAiB5d,IAAMwZ,EAAa5wB,OAAS,EAE1C,GADA,0BAIJg1B,GAAiB5d,IAAMwZ,EAAa5wB,OAAS,EAQ7CvE,EAAAC,EAAAC,cAACgxB,GAAD,CAAK5qB,KAAMsmB,EAAKtmB,KAAMG,MAAOmmB,EAAKnmB,MAAOoJ,KAAK,OAP9C7P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgP,SAAA,KACEjP,EAAAC,EAAAC,cAAA,MAAI8N,UAAU,6BAAd,WACAhO,EAAAC,EAAAC,cAAA,QAAM8N,UAAU,0BACb4e,EAAKtmB,YAYvBgd,GAAYwW,GACX95B,EAAAC,EAAAC,cAACq6B,GAAD,CACEjX,SAAUwW,EACVX,YAAa7xB,EACbkf,MAAOyT,YA5QoBn6B,cCDlB06B,6NACnBzpB,MAAQ,CACNuZ,MAAO,CACLmB,KAAK,IAAIvW,MAAOK,UAChBqV,OAAO,IAAI1V,MAAO6W,WAClBhC,MAAM,IAAI7U,MAAOuV,eAEnB0E,aAAcnuB,EAAKjB,MAAMovB,aACzBsL,aAAcz5B,EAAKjB,MAAM06B,aACzBC,YAAa15B,EAAKjB,MAAM26B,YACxBxN,WAAYwB,EAAU3B,mBAAmB/rB,EAAKjB,MAAMovB,eAAiB,MAKvEwL,WAAa,SAAAvQ,GACX,GAAoB,kBAATA,EAAmB,CAC5B,IAAMwQ,EAAUlM,EAAUzB,gBAAgB7C,GAClCQ,EAAgBgQ,EAAhBhQ,MAAOb,EAAS6Q,EAAT7Q,KAFajZ,EAGU9P,EAAK+P,MAAnC0pB,EAHoB3pB,EAGpB2pB,aAAcC,EAHM5pB,EAGN4pB,YACtB15B,EAAKoQ,SAAS,CACZ+d,aAAcyL,IAEZhQ,IAAU6P,GAAgB1Q,IAAS2Q,GACrC15B,EAAK65B,gBAAgB,CAAEjQ,QAAOb,cAGhC/oB,EAAKoQ,SAAS,CACZ+d,aAAc/E,EACd8C,WAAYwB,EAAU3B,mBAAmB3C,QAK/CyQ,gBAAkB,SAAA71B,GAAqB,IAAlB4lB,EAAkB5lB,EAAlB4lB,MAAOb,EAAW/kB,EAAX+kB,KAC1B/oB,EAAKoQ,SAAS,CACZqpB,aAAc7P,EACd8P,YAAa3Q,OAIjB+Q,eAAiB,SAAA/Q,GACf/oB,EAAKoQ,SAAS,CACZspB,YAAa3Q,OAIjBgR,iBAAmB,SAAAlqB,GAAK,IACdnN,EAAUmN,EAAEW,OAAZ9N,MACR1C,EAAKoQ,SAAS,CACZ8b,WAAYxpB,IAEVgrB,EAAUtB,YAAY1pB,IACxB1C,EAAK25B,WAAWj3B,MAIpB4R,QAAU,WAAM,IAAAtE,EACgDhQ,EAAKjB,MAA7Ci7B,EADRhqB,EACNme,aAA8BwL,EADxB3pB,EACwB2pB,WAAY1X,EADpCjS,EACoCiS,QAC1CkM,EAAiBnuB,EAAK+P,MAAtBoe,aACR,IACuB,OAAnB6L,GAA4C,OAAjB7L,KAC5BT,EAAUzC,WAAW+O,EAAgB7L,GACtC,KACQ1D,EAAqB0D,EAArB1D,IAAKb,EAAgBuE,EAAhBvE,MAAOb,EAASoF,EAATpF,KAEpB4Q,EADa,IAAIzlB,KAAK6U,EAAMa,EAAOa,IAGrCxI,OAGFgY,aAAe,WAAM,IAAAxa,EACkBzf,EAAKjB,MAAlCovB,EADW1O,EACX0O,aAAcwL,EADHla,EACGka,WACtB35B,EAAK25B,WAAW,MACK,OAAjBxL,GACFwL,EAAW,4HAIN,IAAA5L,EACiC9tB,KAAKlB,MAArCkjB,EADD8L,EACC9L,QAASK,EADVyL,EACUzL,SAAUjB,EADpB0M,EACoB1M,SADpB5Q,EAQHxQ,KAAK8P,MALPuZ,EAHK7Y,EAGL6Y,MACA6E,EAJK1d,EAIL0d,aACAsL,EALKhpB,EAKLgpB,aACAC,EANKjpB,EAMLipB,YACAxN,EAPKzb,EAOLyb,WAEF,OACEltB,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,cAAchG,IAAKqa,EAAUmE,MAAO,CAAC0U,QAAU5X,EAAoB,QAAT,SACvEtjB,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,uBACbhO,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,iCACbhO,EAAAC,EAAAC,cAACyR,EAAD,CACE1M,KAAK,UACLgJ,KAAK,OACLU,MAAM,WACNjL,MAAOwpB,EACP/e,SAAUlN,KAAK85B,iBACf/sB,UAAU,+BACVY,WAAW,+BACXP,YAAY,WACZS,UAAW,MAIjB9O,EAAAC,EAAAC,cAACi7B,GAAD,CACExY,QAAS,CACP4M,SAAU,wBACVK,QAAS,yBAEXhF,MAAO6P,EACP1Q,KAAM2Q,EACNvL,aAAcA,EACd7E,MAAOA,EACP8E,WAAYnuB,KAAK05B,WACjBlM,aAAcxtB,KAAK45B,gBACnB5L,YAAahuB,KAAK65B,iBAEpB96B,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,uBACbhO,EAAAC,EAAAC,cAAC0R,EAAD,CACE/B,KAAK,KACLE,QAAQ,OACRtJ,MAAM,UACNuH,UAAU,0BACV0B,QAASzO,KAAKg6B,cALhB,SASAj7B,EAAAC,EAAAC,cAAC0R,EAAD,CACE/B,KAAK,KACLE,QAAQ,YACRtJ,MAAM,UACNuH,UAAU,iCACV0B,QAASzO,KAAKqU,SALhB,QASAtV,EAAAC,EAAAC,cAAC0R,EAAD,CACE/B,KAAK,KACLE,QAAQ,OACRtJ,MAAM,UACNuH,UAAU,2BACV0B,QAASuT,GALX,mBAzI8BnjB,cCazBs7B,WAdQ,SAAAp2B,GAAA,IAAGie,EAAHje,EAAGie,QAASvT,EAAZ1K,EAAY0K,QAASF,EAArBxK,EAAqBwK,SAArB,OACrBxP,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,mBAAmB0B,QAASA,GACzC1P,EAAAC,EAAAC,cAAC0R,EAAD,CACE3D,KAAK,SACLD,UAAU,+BACV0B,QAASuT,EACT/S,UAAQ,GAERlQ,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAK,OAEbuK,KCZE6rB,WAAc,SAAAr2B,GAAA,IAAEgJ,EAAFhJ,EAAEgJ,UAAWvH,EAAbzB,EAAayB,MAAb,OAClBzG,EAAAC,EAAAC,cAAA,QAAM8N,UAAS,oBAAAvI,OAAsBgB,EAAtB,KAAAhB,OAA+BuI,OAGhDqtB,GAAY/rB,aAAe,CACzBtB,UAAW,GACXvH,MAAO,WAGM40B,UCqBTC,GAAoB,SAAAt2B,GAKpB,IAJJsD,EAIItD,EAJJsD,KACAizB,EAGIv2B,EAHJu2B,sBACAC,EAEIx2B,EAFJw2B,YACAhsB,EACIxK,EADJwK,SAEA,MAAgB,UAATlH,EACLtI,EAAAC,EAAAC,cAACgjB,GAAD,CACEV,aAAc+Y,EACd5Y,QAAS,CAAEpV,QAAS,cAAesV,OAAQ,2BAC3CJ,aAAc+Y,EACd3rB,KAAK,KACL7G,GAAG,cAEFwG,GAGHxP,EAAAC,EAAAC,cAACu7B,GAAD,CAAgBxY,QAASsY,EAAuB7rB,QAAS8rB,GACtDhsB,IASDksB,eACJ,SAAAA,EAAY37B,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAy6B,IACjB16B,EAAAX,OAAAoQ,EAAA,EAAApQ,CAAAY,KAAAZ,OAAAqQ,EAAA,EAAArQ,CAAAq7B,GAAA/qB,KAAA1P,KAAMlB,KA8ERoO,SAAW,SAAA0C,GACT7P,EAAKoQ,SAAL/Q,OAAAwG,EAAA,EAAAxG,CAAA,GACGwQ,EAAEW,OAAOvM,KAAO4L,EAAEW,OAAO9N,SAjFX1C,EAqFnBkK,WAAa,WAAM,IAAA8F,EAQbhQ,EAAKjB,MANPsG,EAFe2K,EAEf3K,OACA6C,EAHe8H,EAGf9H,OACAsB,EAJewG,EAIfxG,WACAC,EALeuG,EAKfvG,QACArK,EANe4Q,EAMf5Q,SACAm7B,EAPevqB,EAOfuqB,sBAEFn7B,EAAS8K,WAAW,CAAE7E,SAAQ6C,SAAQsB,aAAYC,YAClD8wB,KA/FiBv6B,EAkGnBuN,OAAS,SAAAsC,GAAK,IAAA4P,EAC0Czf,EAAKjB,MAAxC47B,EADPlb,EACHmb,GAAwBv1B,EADrBoa,EACqBpa,OAAQjG,EAD7BqgB,EAC6BrgB,SACnCw7B,EAAU/qB,EAAEW,OAAOvM,KACN42B,EAAiB76B,EAAK+P,MAAhC6qB,GAILC,IAAiBF,IACnBv7B,EAASiH,WAAWhB,EAApBhG,OAAAwG,EAAA,EAAAxG,CAAA,GACGu7B,EAAUC,IAEb/5B,QAAQC,IAAI,kBAGdf,EAAKoQ,SAAS,CACZ0qB,aAAc,QAjHC96B,EAqHnBoM,WAAa,SAAAyD,GACX,GAAe,YAAXA,EAAE5C,MAAsB4C,EAAEiH,MAAQxB,GAAtC,CADgB,IAAAyY,EAEgC/tB,EAAKjB,MAA7C8E,EAFQkqB,EAERlqB,OAAQzE,EAFA2uB,EAEA3uB,SAAUiG,EAFV0oB,EAEU1oB,OAAQzF,EAFlBmuB,EAEkBnuB,UACd2M,EAAYvM,EAAK+P,MAA7BgrB,WACR37B,EAASgN,WAAW,CAAEvI,SAAQ0I,UAASlH,SAAQzF,cAC/CI,EAAKwiB,UAAU,cACf3S,EAAEU,mBA3HevQ,EA8HnBwiB,UAAY,SAAA1L,GACV9W,EAAKoQ,SAAL/Q,OAAAwG,EAAA,EAAAxG,CAAA,GACGyX,EAAM,MAhIQ9W,EAoInBkN,QAAU,SAAA2C,GACR7P,EAAKoQ,SAAS,CACZ0qB,aAAcjrB,EAAEW,OAAOvM,QAtIRjE,EA0InBw6B,YAAc,SAAA3qB,GAAK,IACTirB,EAAiB96B,EAAK+P,MAAtB+qB,cAEY,eAAjBA,IACE96B,EAAKg7B,cAAcha,SAASnR,EAAEW,SACf,eAAjBsqB,IACE96B,EAAKi7B,iBAAiBja,SAASnR,EAAEW,UAEpCxQ,EAAKoQ,SAAS,CACZ0qB,aAAc,QAnJD96B,EAwJnBk7B,kBAAoB,SAAArrB,GAClB,GAAKA,EAAEW,OAAOgW,QAAQ,KAAtB,CAEA,OADmB3W,EAAEW,OAAO2qB,QAApBhlB,QAEN,IAAK,SACHnW,EAAKkK,aAGT2F,EAAEU,mBAhKevQ,EAmKnBo7B,kBAAoB,SAAAjvB,GAAa,IAAA+hB,EACYluB,EAAKjB,MAAxCK,EADuB8uB,EACvB9uB,SAAUyE,EADaqqB,EACbrqB,QAGa,IAJAqqB,EACL8E,aACK7mB,GAAvBQ,MAEEyiB,QAAQvrB,GAChBzE,EAASwN,cAAcT,EAAW,CAChCQ,MAAOvN,EAASqD,WAAWoB,KAG7BzE,EAASwN,cAAcT,EAAW,CAChCQ,MAAOvN,EAASwD,gBAAgBiB,MA7KnB7D,EAkLnBq7B,aAAe,SAAAx3B,GAAU,IAAAotB,EAC6BjxB,EAAKjB,MAAjDsG,EADe4rB,EACf5rB,OAAQzF,EADOqxB,EACPrxB,UAAW4J,EADJynB,EACIznB,WAAYpK,EADhB6xB,EACgB7xB,SAEvC,GAAIoK,EAAWmb,SAAS9gB,GAAS,CAC/B,IAAKjE,EAAW,OAChB,IAAMqJ,EAAWjJ,EAAKjB,MAAM0K,QAAQ5F,GACpCzE,EAASuK,eAAe,CAAEtE,SAAQxB,SAAQoF,kBAE1C7J,EAAS2K,YAAY,CAAE1E,SAAQzF,YAAWiE,YA1L3B7D,EA8LnBs7B,kBAAoB,SAAA54B,GAClB1C,EAAKoQ,SAAS,CACZ0oB,oBAAqBp2B,KAhMN1C,EAoMnBmF,OAAS,SAAAG,GACPxE,QAAQC,IAAIuE,GADG,IAAAi2B,EASXv7B,EAAKjB,MANPK,EAHam8B,EAGbn8B,SACA+C,EAJao5B,EAIbp5B,YACA6T,EALaulB,EAKbvlB,YACA3Q,EANak2B,EAMbl2B,OACAzF,EAPa27B,EAOb37B,UAGMiE,GAVO03B,EAQbp2B,OAEiChD,EAA3B0B,QAAcoS,EAAa9T,EAAnByD,KACV41B,EAAexlB,GAAe1Q,KAAQ0Q,EACtCylB,EAAYxlB,GAAY3Q,KAAQ2Q,EAChCylB,EAAUF,EACZxlB,EAAY1Q,GACZm2B,EACAxlB,EAAS3Q,GACT,CAAE1F,YAAW0F,QAEjBlG,EACG+F,OADH9F,OAAAqE,EAAA,EAAArE,CAAA,CAEIwE,SACAwB,SACAzF,aACG87B,IAEJj7B,KAAK,WACCg7B,GAAcD,IACjBx7B,EAAKoQ,SAAS,CACZ2oB,WAAYzzB,IAEdtF,EAAKs7B,mBAAkB,OAnOZt7B,EAwOnBsG,YAAc,SAAAb,GAAS,IAAAk2B,EACmB37B,EAAKjB,MAArC8E,EADa83B,EACb93B,OAAQjE,EADK+7B,EACL/7B,UAAWR,EADNu8B,EACMv8B,SACPgH,EAAQpG,EAAK+P,MAAzBgpB,WACR35B,EAASkH,YAAY,CAAEzC,SAAQjE,YAAWwG,MAAKX,WA3O9BzF,EA8OnBkG,UAAY,SAAAE,GAAO,IAAAw1B,EACY57B,EAAKjB,MAA1BsG,EADSu2B,EACTv2B,OADSu2B,EACDx8B,SACP8G,UAAU,CAAEb,SAAQe,QAC7BpG,EAAKs7B,mBAAkB,IAjPNt7B,EAoPnB67B,WAAa,SAAAzS,GAAQ,IAAA0S,EACU97B,EAAKjB,MAA1BK,EADW08B,EACX18B,SAAUiG,EADCy2B,EACDz2B,OAElBjG,EAASiH,WAAWhB,EAAQ,CAC1BkE,QAAS6f,KAxPMppB,EA4PnB+7B,iBAAmB,WACjB/7B,EAAKoQ,SAAS,SAAAkW,GAAS,MAAK,CAC1B0V,oBAAqB1V,EAAU0V,uBA9PhBh8B,EAkQnBsL,WAAa,SAAAuE,GACX,GAAe,YAAXA,EAAE5C,MAAsB4C,EAAEiH,MAAQxB,GAAtC,CADgB,IAAA2mB,EAEgCj8B,EAAKjB,MAA7C8E,EAFQo4B,EAERp4B,OAAQzE,EAFA68B,EAEA78B,SAAUiG,EAFV42B,EAEU52B,OAAQzF,EAFlBq8B,EAEkBr8B,UAClCkB,QAAQC,IAAI,CAAE8C,SAAQjE,cAHN,IAIIqE,EAASjE,EAAK+P,MAA1BmsB,WACR98B,EAASkM,WAAW,CAAEzH,SAAQI,OAAMoB,SAAQzF,cAC5CI,EAAKwiB,UAAU,cACf3S,EAAEU,mBAvQFvQ,EAAK+P,MAAQ,CACXgmB,WAAY/1B,EAAKjB,MAAMoK,YAAcnJ,EAAKjB,MAAMoK,WAAW5F,OAAS,EACpEU,KAAMjE,EAAKjB,MAAMkF,KACjB6D,MAAO9H,EAAKjB,MAAM+I,MAClBo0B,WAAY,GACZnB,WAAY,GACZD,aAAc,KACdhC,qBAAqB,EACrBC,WAAY,KACZiD,oBAAoB,EACpBrK,UAAW,CACT1tB,KAAMjE,EAAKjB,MAAMkF,KACjB6D,MAAO9H,EAAKjB,MAAM+I,QAGtB9H,EAAKm8B,kBAAoBx9B,IAAMyiB,YAjBdphB,mFAoBC,IAAA+W,EAAA9W,KAAAm8B,EAQdn8B,KAAKlB,MANPsG,EAFgB+2B,EAEhB/2B,OACAjG,EAHgBg9B,EAGhBh9B,SACAi0B,EAJgB+I,EAIhB/I,kBACAjnB,EALgBgwB,EAKhBhwB,WACAonB,EANgB4I,EAMhB5I,cACA5mB,EAPgBwvB,EAOhBxvB,cAGF9L,QAAQC,IAAIsE,GACZguB,EAAkBhuB,GAAQ5E,KAAK,WAC7BsW,EAAK3G,SAAS,CACZ2lB,YAAY,MAIhB91B,KAAKo8B,gBAAkBj9B,EAAS8D,GAC7BY,WAAW,YACX6C,MAAM,SAAU,KAAMtB,GACtB8T,WAAW,SAAAtS,GACVA,EAAS0S,aAAaxS,QAAQ,SAAAyS,GAC5B,IAAMrN,EAAYqN,EAAOrW,IAAI6E,GACvBurB,EAAc/Z,EAAOrW,IAAIyP,OACX,UAAhB4G,EAAOvM,MACTb,EAAW,CAAED,YAAWonB,gBAEN,aAAhB/Z,EAAOvM,MACTL,EAAc,CAAET,YAAWonB,gBAET,YAAhB/Z,EAAOvM,MACTumB,EAAcrnB,sDA0NtBlM,KAAKo8B,mDAGE,IAAAC,EAAAr8B,KAAAs8B,EAoBHt8B,KAAKlB,MAlBPw7B,EAFKgC,EAELhC,sBACAl1B,EAHKk3B,EAGLl3B,OACA8D,EAJKozB,EAILpzB,WACAK,EALK+yB,EAKL/yB,WACAgzB,EANKD,EAMLC,cACAC,EAPKF,EAOLE,WACAC,EARKH,EAQLG,aACAv6B,EATKo6B,EASLp6B,YACA8hB,EAVKsY,EAULtY,SACA/N,EAXKqmB,EAWLrmB,WACA3M,EAZKgzB,EAYLhzB,QACAH,EAbKmzB,EAaLnzB,WACAxJ,EAdK28B,EAcL38B,UACA0vB,EAfKiN,EAeLjN,kBACAhoB,EAhBKi1B,EAgBLj1B,KACAL,EAjBKs1B,EAiBLt1B,YACAsB,EAlBKg0B,EAkBLh0B,SACAo0B,EAnBKJ,EAmBLI,aAnBK7sB,EAgCH7P,KAAK8P,MAVP9L,EAtBK6L,EAsBL7L,KACA6D,EAvBKgI,EAuBLhI,MACAizB,EAxBKjrB,EAwBLirB,WACAD,EAzBKhrB,EAyBLgrB,aACAoB,EA1BKpsB,EA0BLosB,WAEAnG,GA5BKjmB,EA2BL4M,SA3BK5M,EA4BLimB,YACA+C,EA7BKhpB,EA6BLgpB,oBACAkD,EA9BKlsB,EA8BLksB,mBACAjD,EA/BKjpB,EA+BLipB,WAEI6D,EAAcxzB,GAAcA,EAAW7F,OAAS,EAChDs5B,EAAc1zB,GAAcA,EAAW5F,OAAS,EAChD0xB,IAAezrB,GAAcA,EAAWjG,OAAS,EACjDu5B,EAAqC,KAAf/B,EACtBgC,EAAqC,KAAfb,EACtBc,EAAwC,eAAjBlC,EACvBmC,EAA2C,eAAjBnC,EAC1BoC,EAAc3zB,EAChBmkB,EAAU7C,cAActhB,EAAQkmB,UAChC/B,EAAU7C,cAAc,IAAI3W,MAC1Bsb,EAAajmB,EACfmkB,EAAUjB,aAAaljB,EAAQkmB,SAAU,CACvC9C,aAAa,EACbC,OAAQ,CAAEhD,MAAO,QAASa,IAAK,aAEjC,KACEiF,EAA4B,UAAfF,EACbG,EAA2B,aAAfH,EACZI,EAAYrmB,GAAWmkB,EAAUlB,YAAYjjB,EAAQkmB,UAE3D,OACEzwB,EAAAC,EAAAC,cAACi+B,GAAD,CACE5C,sBAAuBA,EACvBC,YAAav6B,KAAKu6B,YAClBlzB,KAAMA,GAENtI,EAAAC,EAAAC,cAACk+B,GAAD,CAASpwB,UAAS,wBACfpN,GACCZ,EAAAC,EAAAC,cAACm+B,GAAD,CAAwBluB,UAAWlP,KAAKk8B,mBACtCn9B,EAAAC,EAAAC,cAACo+B,GAAD,CACE1lB,MAAO6kB,EACP1H,gBAAiBvrB,EACjBkrB,cAAez0B,KAAKo7B,gBAI1Br8B,EAAAC,EAAAC,cAACq+B,GAAD,CAAuBpI,YAAal1B,KAAKi7B,qBAE3Cl8B,EAAAC,EAAAC,cAAA,QACE+E,KAAK,eACLiJ,QAASjN,KAAKiN,QACdF,UAAU,+BAEVhO,EAAAC,EAAAC,cAAC0mB,GAAD,CACE5Y,UAAU,+BACV/I,KAAK,OACLvB,MAAOuB,EACPkJ,SAAUlN,KAAKkN,SACfgB,UAAQ,EACRZ,OAAQtN,KAAKsN,OACbL,QAASjN,KAAKiN,UAEftN,GACCZ,EAAAC,EAAAC,cAACs+B,GAAD,KACEx+B,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,6BACbhO,EAAAC,EAAAC,cAACu+B,GAAD,CACEh4B,MAAOk3B,EACP3vB,UAAU,8BAEX/F,GAEHjI,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,0BACbhO,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAK,kBACVsE,IAIPvJ,EAAAC,EAAAC,cAACs+B,GAAD,KACEx+B,EAAAC,EAAAC,cAAC0R,EAAD,CACElC,QAASzO,KAAK87B,iBACd9uB,KAAK,SACLD,UAAS,8BAAAvI,OACPu3B,EAAqB,YAAc,KAGrCh9B,EAAAC,EAAAC,cAAA,QAAM8N,UAAU,8BACdhO,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAK,cAEbjF,EAAAC,EAAAC,cAAA,QAAM8N,UAAU,iCACZzD,EAGAvK,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgP,SAAA,KACEjP,EAAAC,EAAAC,cAAA,QAAM8N,UAAU,kCAAhB,YAGAhO,EAAAC,EAAAC,cAAA,QACE8N,UAAS,yBAAAvI,OACPirB,EACI,eACAC,EACA,cACAC,EACA,cACA,KAGLJ,IAjBLxwB,EAAAC,EAAAC,cAAA,QAAM8N,UAAU,4BAAhB,kBAuBNhO,EAAAC,EAAAC,cAACw+B,GAAD,CACErc,SAAU,SAAAC,GAAE,OAAKgb,EAAKqB,aAAerc,GACrCW,QAAShiB,KAAK87B,iBACd5N,aAAc5kB,EAAU2zB,EAAc,KACtCzD,aAAcyD,EAAYtT,MAC1B8P,YAAawD,EAAYnU,KACzB4Q,WAAY15B,KAAK47B,WACjBvZ,SAAU0Z,KAGdh9B,EAAAC,EAAAC,cAACs+B,GAAD,KACEx+B,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,6BACbhO,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAK,UAEZgxB,GACCj2B,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,wBACZ0vB,EAAannB,IAAI,SAAA6a,GAAU,IAClBnsB,EAA2BmsB,EAA3BnsB,KAAMK,EAAqB8rB,EAArB9rB,SAAUT,EAAWusB,EAAXvsB,OACxB,OACE7E,EAAAC,EAAAC,cAACmxB,GAAD,CACE1O,QAAS,CACPwG,OAAQ,sBACR9a,YAAa,mCAEfua,SAAU3jB,EACV4K,KAAK,KACLE,QAAQ,SACRkZ,OAAQ3jB,EACRwS,IAAKjT,OAMdjE,GACCZ,EAAAC,EAAAC,cAAC0R,EAAD,CACE3D,KAAK,SACLD,UAAU,+BACV0B,QAAS,kBAAM4tB,EAAKH,kBAAkBjb,QAAQ0c,UAE9C5+B,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAK,WAIjBjF,EAAAC,EAAAC,cAACs+B,GAAD,KACEx+B,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,6BACbhO,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAK,SAEbjF,EAAAC,EAAAC,cAAC2+B,GAAD,CACE14B,OAAQlF,KAAKkF,OACbszB,eAAgBviB,EAChB0iB,aAAc3U,EACd6U,oBAAqBA,EACrBxyB,YAAarG,KAAKqG,YAClBJ,UAAWjG,KAAKiG,UAChB6yB,WAAYA,KAGhB/5B,EAAAC,EAAAC,cAACs+B,GAAD,KACEx+B,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,6BACbhO,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAK,YAEbjF,EAAAC,EAAAC,cAAC0mB,GAAD,CACE5Y,UAAU,2DACV/I,KAAK,QACLvB,MAAOoF,EACPqF,SAAUlN,KAAKkN,SACfE,YAAY,oBACZE,OAAQtN,KAAKsN,OACbL,QAASjN,KAAKiN,YAIpBlO,EAAAC,EAAAC,cAACs+B,GAAD,KACEx+B,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,+BACbhO,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,6BACbhO,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAK,kBAEbjF,EAAAC,EAAAC,cAAA,MAAI8N,UAAU,8BACX4vB,GACC59B,EAAAC,EAAAC,cAAA,QAAM8N,UAAU,+BACbsiB,EAAkB/rB,OADrB,IAC8B6F,EAAW7F,QAH7C,YAQAvE,EAAAC,EAAAC,cAAA,MAAI8N,UAAU,qBAEf4vB,GACC59B,EAAAC,EAAAC,cAAC4+B,GAAD,CACEz4B,OAAQA,EACR+D,WAAYA,EACZxJ,UAAWA,IAGfZ,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,6BACZiwB,EACCj+B,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,0BAEfhO,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAK,iBAGfjF,EAAAC,EAAAC,cAAA,QACE+E,KAAK,iBACL+I,UAAS,iCAAAvI,OACU,eAAjBq2B,EAAgC,aAAe,IAEjD9zB,IAAK,SAAAsa,GAAE,OAAKgb,EAAKrB,iBAAmB3Z,GACpC1R,SAAU3P,KAAKqL,YAEftM,EAAAC,EAAAC,cAAC0mB,GAAD,CACE5Y,UAAU,2DACV/I,KAAK,aACLvB,MAAOw5B,EACP/uB,SAAUlN,KAAKkN,SACfE,YAAY,gBACZH,QAASjN,KAAKiN,QACdW,UAAW5N,KAAKqL,aAEA,eAAjBwvB,GACC97B,EAAAC,EAAAC,cAAC0R,EAAD,CACE3D,KAAK,SACLxH,MAAM,UACNoJ,KAAK,QACLE,QAAQ,YACRC,SAAU+tB,EACVruB,QAASzO,KAAKqL,WACd0B,UAAU,iCAPZ,iBAcNhO,EAAAC,EAAAC,cAACs+B,GAAD,KACEx+B,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,+BACbhO,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,6BACbhO,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAK,oBAEbjF,EAAAC,EAAAC,cAAA,MAAI8N,UAAU,8BACX6vB,GACC79B,EAAAC,EAAAC,cAAA,QAAM8N,UAAU,+BACb7D,EAAW5F,QAGfs5B,GAAqC,IAAtB1zB,EAAW5F,OAAe,UAAY,YAExDvE,EAAAC,EAAAC,cAAA,MAAI8N,UAAU,sBAGd+oB,GAAc8G,GACd79B,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,yBACZwvB,EAAcjnB,IAAI,SAAA6d,GAAW,IACpBjnB,EAAcinB,EAAdjnB,UACR,OACEnN,EAAAC,EAAAC,cAAC6+B,GAAD,CACEjnB,IAAK3K,EACLinB,QAASA,EACT0D,WAAYwF,EAAKlB,uBAM3Bp8B,EAAAC,EAAAC,cAACmxB,GAAD,CACE1O,QAAS,CACPwG,OAAQ,sBACR9a,YAAa,mCAEfua,SAAUzlB,EAAY8B,KACtB4K,KAAK,KACLE,QAAQ,SACRkZ,OAAQ9lB,EAAYmC,WAEtBtF,EAAAC,EAAAC,cAAA,QACE+E,KAAK,cACL+I,UAAS,6BAAAvI,OACPu4B,EAAuB,aAAe,IAExCh2B,IAAK,SAAAsa,GAAE,OAAKgb,EAAKtB,cAAgB1Z,GACjC1R,SAAU3P,KAAKmM,YAEfpN,EAAAC,EAAAC,cAAC0mB,GAAD,CACE5Y,UAAU,uDACV/I,KAAK,aACLvB,MAAOq4B,EACP5tB,SAAUlN,KAAKkN,SACfE,YAAY,qBACZH,QAASjN,KAAKiN,QACdW,UAAW5N,KAAKmM,aAEjB4wB,GACCh+B,EAAAC,EAAAC,cAAC0R,EAAD,CACE3D,KAAK,SACLxH,MAAM,UACNoJ,KAAK,QACLE,QAAQ,YACRC,SAAU8tB,EACVpuB,QAASzO,KAAKmM,WACdnI,KAAK,mBACL+I,UAAU,oCARZ,8DA/hBoBjO,EAAOgR,GACrC,OAAIhR,EAAMkF,OAAS8L,EAAM4hB,UAAU1tB,KAC1B,CACLA,KAAMlF,EAAMkF,KACZ0tB,UAAUtyB,OAAAqE,EAAA,EAAArE,CAAA,GACL0Q,EAAM4hB,UADF,CAEP1tB,KAAMlF,EAAMkF,QAIdlF,EAAM+I,QAAUiI,EAAM4hB,UAAU7pB,MAC3B,CACLA,MAAO/I,EAAM+I,MACb6pB,UAAUtyB,OAAAqE,EAAA,EAAArE,CAAA,GACL0Q,EAAM4hB,UADF,CAEP7pB,MAAO/I,EAAM+I,SAIZ,YA7EchJ,aAkpBVD,KACbuY,YAtCsB,SAACrH,EAAOiQ,GAC9B,MAAO,CACL7d,YAAagjB,EAAqBlQ,eAAelF,GACjDysB,cAAewB,EAAiBtK,iBAC9B3jB,EACAiQ,EAAS7W,YAEX6pB,aAAcgL,EAAiBvK,gBAAgB1jB,GAC/C0sB,WAAYjM,EAAcrY,cAAcpI,GACxC2sB,aAAclM,EAAcpY,gBAAgBrI,EAAOiQ,EAASxW,YAC5Dya,SAAUqM,EAActM,YAAYjU,EAAOiQ,GAC3C9J,WAAYiP,EAAqBvP,cAAc7F,GAC/CiG,YAAaiK,EAAiB5B,eAAetO,EAAOiQ,EAASpgB,WAC7D0vB,kBAAmBiB,EAAiB7L,qBAClC3U,EACAiQ,EAAS5W,YAEXuzB,aAAc1c,EAAiB1B,gBAAgBxO,EAAOiQ,EAASpgB,aAIxC,SAAA2S,GACzB,MAAO,CACL8gB,kBAAmB,SAAAhuB,GAAM,OACvBkN,EAASwlB,EAAe1E,kBAAkBhuB,KAC5C44B,iBAAkB,SAAA54B,GAAM,OACtBkN,EAASwlB,EAAekG,iBAAiB54B,KAC3C+G,WAAY,SAAAhH,GAAA,IAAG+G,EAAH/G,EAAG+G,UAAWonB,EAAdnuB,EAAcmuB,YAAd,OACVhhB,EAASwlB,EAAe3rB,WAAW,CAAED,YAAWonB,kBAClDC,cAAe,SAAArnB,GAAS,OACtBoG,EAASwlB,EAAevE,cAAcrnB,KACxCS,cAAe,SAAAzG,GAAA,IAAGgG,EAAHhG,EAAGgG,UAAWonB,EAAdptB,EAAcotB,YAAd,OACbhhB,EAASwlB,EAAenrB,cAAc,CAAET,YAAWonB,kBACrDpuB,OAAQ,SAACE,EAAQe,GAAT,OAAiBmM,EAASulB,EAAY3yB,OAAOE,EAAQe,OAK/DgR,CAGEsjB,KC1rBEwD,uBACJ,SAAAA,EAAYn/B,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAi+B,IACjBl+B,EAAAX,OAAAoQ,EAAA,EAAApQ,CAAAY,KAAAZ,OAAAqQ,EAAA,EAAArQ,CAAA6+B,GAAAvuB,KAAA1P,KAAMlB,KA+GR2mB,YAAc,WACZ1lB,EAAKoQ,SAAS,CACZulB,YAAY,KAlHG31B,EAsHnBu2B,UAAY,SAAAvyB,GAAgD,IAA7CkyB,EAA6ClyB,EAA7CkyB,YAAarG,EAAgC7rB,EAAhC6rB,YAAasG,EAAmBnyB,EAAnBmyB,OAAQlpB,EAAWjJ,EAAXiJ,KAC/C,GAAKipB,IAGHA,EAAYtT,cAAgBuT,EAAOvT,aACnCsT,EAAYpG,QAAUqG,EAAOrG,OAF/B,CAH0D,IAQlD1wB,EAAaY,EAAKjB,MAAlBK,SACR,GAAI6N,IAAS4V,GAAqB,KACxBnK,EAAc1Y,EAAKjB,MAAnB2Z,UACFylB,EAAoBhI,EAAOvT,cAAgBsT,EAAYtT,YACvDjY,EAActL,OAAAuM,EAAA,EAAAvM,CAAOqZ,EAAUwd,EAAYtT,aAAa5d,SAC1Dm5B,GACFxzB,EAAe0rB,OAAOF,EAAOrG,MAAO,GACpCnlB,EAAe0rB,OAAOH,EAAYpG,MAAO,EAAGD,GAC5CzwB,EAAS+I,WAAWguB,EAAOvT,YAAa,CACtC5d,QAAS2F,MAGXA,EAAe0rB,OAAOH,EAAYpG,MAAO,EAAGD,GAC5CzwB,EAASmL,eAAe,CACtBlF,OAAQwqB,EACRplB,WAAY0rB,EAAOvT,YACnBlY,UAAWwrB,EAAYtT,YACvBjY,oBAKN,GAAIsC,IAAS4V,GAAqB,KAAA7S,EACkBhQ,EAAKjB,MAA/C+W,EADwB9F,EACxB8F,aAAclW,EADUoQ,EACVpQ,UAAWme,EADD/N,EACC+N,aAC3BqgB,EAAc/+B,OAAAuM,EAAA,EAAAvM,CAAOyW,EAAalW,GAAW+H,SACnDy2B,EAAe/H,OAAOF,EAAOrG,MAAO,GACpCsO,EAAe/H,OAAOH,EAAYpG,MAAO,EAAGD,GAC5CzwB,EAASoH,cAAc5G,EAAW,CAChC+H,QAASy2B,IAEXrgB,EAAane,EAAWw+B,MA5JTp+B,EAgKnBq+B,iBAAmB,WACYr+B,EAAK+P,MAA1BuuB,mBAGNpb,EADuBljB,EAAKjB,MAApBmkB,YACG,MAEbljB,EAAKoQ,SAAS,SAAAkW,GAAS,MAAK,CAC1BgY,kBAAmBhY,EAAUgY,qBAvKdt+B,EA2KnB+wB,gBAAkB,SAAA1rB,IAEhB6d,EADuBljB,EAAKjB,MAApBmkB,YACG7d,GACXrF,EAAKq+B,oBA9KYr+B,EAiLnBu+B,aAAe,SAAA1uB,GACb7P,EAAKoQ,SAAS,CACZnJ,YAAa4I,EAAEW,OAAO9N,SAnLP1C,EAuLnBw+B,WAAa,SAAA3uB,GAAK,IAAA4P,EAC6Bzf,EAAKjB,MAA1CkI,EADQwY,EACRxY,YAAarH,EADL6f,EACK7f,UAAWR,EADhBqgB,EACgBrgB,SACXq/B,EAAmBz+B,EAAK+P,MAArC9I,YAIJw3B,IAAmBx3B,IACrB7H,EAASqH,kBAAkB,CAAE7G,YAAWqE,KAAMw6B,IAC9C39B,QAAQC,IAAI,2BA7Ldf,EAAK+P,MAAQ,CACXgmB,YAAY,EACZuI,kBAAkB,EAClBr3B,YAAajH,EAAKjB,MAAMkI,aALTjH,mFASC,IAAA+W,EAAA9W,KAAA8tB,EAoBd9tB,KAAKlB,MAfPK,GALgB2uB,EAEhBpV,eAFgBoV,EAGhB9R,kBAHgB8R,EAIhBlR,qBAJgBkR,EAKhB3uB,UACAoH,EANgBunB,EAMhBvnB,cACAsC,EAPgBilB,EAOhBjlB,QACAoB,EARgB6jB,EAQhB7jB,WACA7D,EATgB0nB,EAShB1nB,WACA4X,EAVgB8P,EAUhB9P,kBACAre,EAXgBmuB,EAWhBnuB,UACA2d,EAZgBwQ,EAYhBxQ,QACAS,EAbgB+P,EAahB/P,cACA1S,EAdgByiB,EAchBziB,WACAO,EAfgBkiB,EAehBliB,cACAC,EAhBgBiiB,EAgBhBjiB,cACA0S,EAjBgBuP,EAiBhBvP,cACAwX,EAlBgBjI,EAkBhBiI,kBACApY,EAnBgBmQ,EAmBhBnQ,oBAGEoY,IAAsBp2B,GACxB4e,EAAc5e,GAOhBge,EAAoBhe,GAAWa,KAAK,WAClCsW,EAAK3G,SAAS,CACZ2lB,YAAY,IAF0B,IAAA2I,EAKJ3nB,EAAKhY,MAAjCsZ,EALgCqmB,EAKhCrmB,UAAWmE,EALqBkiB,EAKrBliB,aAEnBzF,EAAK4nB,aAAe5nB,EAAKhY,MAAMga,uBAAuBnZ,GAEtDmX,EAAKyI,gBAAkBpgB,EACpB6G,cAAcrG,GACduZ,WAAW,SAAAtS,GACV,IAAM+3B,EAAiB/3B,EAAS+L,OAC3BisB,EAAM5kB,QAAQ2kB,EAAej3B,QAAS4V,EAAQ5V,SAEvCk3B,EAAM5kB,QAAQ2kB,EAAeh5B,KAAM2X,EAAQ3X,MAGrDY,EAAc5G,EAAWg/B,GAFzB3gB,EAAkBre,EAAWg/B,EAAeh5B,MAF5CoY,EAAcpe,EAAWg/B,EAAej3B,WAQ9CoP,EAAKuf,gBAAkBl3B,EAAS8D,GAC7BY,WAAW,YACX6C,MAAM,YAAa,KAAM/G,GACzBuZ,WAAW,SAAAE,GACVA,EAAcE,aAAaxS,QAAQ,SAAAyS,GACjC,IAAMnO,EAAYmO,EAAOrW,IAAI6E,GACvBgV,EAAcxD,EAAOrW,IAAIyP,OAC/B,GAAoB,UAAhB4G,EAAOvM,KAAkB,CAC3B,GAAI5B,KAAamR,EAAc,OAC/BlR,EAAW,CAAED,YAAW2R,gBAEN,aAAhBxD,EAAOvM,MACTpB,EAAc,CAAER,YAAW2R,gBAET,YAAhBxD,EAAOvM,MACTnB,EAAcT,OAKtB0L,EAAK+nB,aAAe1/B,EAAS8D,GAC1BY,WAAW,SACX6C,MAAM,YAAa,KAAM/G,GACzBuZ,WAAW,SAAAE,GACVA,EAAcE,aAAaxS,QAAQ,SAAAyS,GACjC,IAAMnU,EAASmU,EAAOrW,IAAI6E,GACpB8M,EAAW0E,EAAOrW,IAAIyP,OAC5B,GAAoB,UAAhB4G,EAAOvM,KAAkB,CAC3B,GAAIoL,GAAahT,KAAUgT,EAAW,OACtCvX,QAAQC,IAAR,eAAA0D,OAA2BY,IAC3ByD,EAAQ,CAAEzD,SAAQyP,iBACO,YAAhB0E,EAAOvM,KAChB/C,EAAW7E,GAEXgB,EAAW,CAAEhB,SAAQyP,mBAK/BhU,QAAQC,IAAI,2DAKZyd,EAD0Bve,KAAKlB,MAAvByf,eACM,MACdve,KAAKuf,kBACLvf,KAAK0+B,eACL1+B,KAAK6+B,eACL7+B,KAAKq2B,mDAsFE,IAAAgG,EAAAr8B,KAAA6P,EAC+C7P,KAAK8P,MAAnDgmB,EADDjmB,EACCimB,WAAYuI,EADbxuB,EACawuB,iBAAkBr3B,EAD/B6I,EAC+B7I,YAD/BinB,EAEyDjuB,KAAKlB,MAA7D6Z,EAFDsV,EAECtV,MAAOP,EAFR6V,EAEQ7V,UAAWzY,EAFnBsuB,EAEmBtuB,UAAWiE,EAF9BqqB,EAE8BrqB,OAAQk7B,EAFtC7Q,EAEsC6Q,eAC7C,OAAIhJ,EAAmB,KAErB/2B,EAAAC,EAAAC,cAAA,QAAM8N,UAAU,mBACdhO,EAAAC,EAAAC,cAACyR,EAAD,CACE3D,UAAU,sBACV/I,KAAK,cACLgJ,KAAK,OACLvK,MAAOuE,EACPkG,SAAUlN,KAAKs+B,aACfpwB,UAAQ,EACRT,WAAS,EACTH,OAAQtN,KAAKu+B,aAEfx/B,EAAAC,EAAAC,cAACyjB,GAAA,EAAD,CACE4T,UAAWt2B,KAAKs2B,UAChB7Q,YAAazlB,KAAKylB,aAElB1mB,EAAAC,EAAAC,cAAC8/B,GAAD,CAAOp/B,UAAWA,GACfgZ,EAAMrD,IAAI,SAAC0pB,EAAM3M,GAAc,IACtBpqB,EAAoC+2B,EAApC/2B,OAAcK,EAAsB02B,EAA5Bh7B,KAAgBe,EAAYi6B,EAAZj6B,QAChC,OACEhG,EAAAC,EAAAC,cAACggC,GAAD,CACEh3B,OAAQA,EACR4O,IAAK5O,EACLoqB,UAAWA,EACXruB,KAAMsE,EACNvD,QAASA,EACTutB,gBAAiBwD,EACjB/E,YAAasL,EAAKvL,gBAClBnxB,UAAWA,EACX0H,KAAK,QACLkrB,cAAc,QAMvB8L,GACCt/B,EAAAC,EAAAC,cAACigC,GAAD9/B,OAAAC,OAAA,GACM+Y,EAAU0mB,GADhB,CAEExE,sBAAuBt6B,KAAKo+B,iBAC5Bx6B,OAAQA,EACRyD,KAAK,mBAjPYxI,cA+SdD,KACbuY,YAvDsB,SAACrH,EAAOiQ,GAC9B,MAAO,CACLlK,aAAcmK,EAAiB/B,gBAAgBnO,GAC/CimB,kBAAmBvX,GAAqB1O,GACxCgvB,eAAgB5b,GAAkBpT,GAClC2I,UAAW0mB,EAAc/b,aAAatT,GACtC6I,MAAOwmB,EAAc7b,wBAAwBxT,GAC7CyM,aAAc+T,EAAiBnM,gBAAgBrU,GAC/CsI,UAAWiY,EAAc5M,aAAa3T,GACtCwN,QAAS0C,EAAiB7B,WAAWrO,EAAOiQ,EAASpgB,aAI9B,SAAA2S,GACzB,MAAO,CACLqL,oBAAqB,SAAAhe,GAAS,OAC5B2S,EAAS2N,EAAetC,oBAAoBhe,KAC9C4G,cAAe,SAAC5G,EAAWud,GAAZ,OACb5K,EAAS2N,EAAe1Z,cAAc5G,EAAWud,KACnDqB,cAAe,SAAA5e,GAAS,OAAI2S,EAAS4N,GAAoBvgB,KACzDsjB,WAAY,SAAA7d,GAAM,OAAIkN,EAAS8sB,GAAiBh6B,KAChDsT,eAAgB,SAAA/Y,GAAS,OACvB2S,EAAS+sB,EAAY3mB,eAAe/Y,KACtCuI,WAAY,SAAA/C,GAAA,IAAG8C,EAAH9C,EAAG8C,OAAQ4Q,EAAX1T,EAAW0T,SAAX,OACVvG,EAAS+sB,EAAYn3B,WAAWD,EAAQ4Q,KAC1CtQ,QAAS,SAAArC,GAAA,IAAG+B,EAAH/B,EAAG+B,OAAQ4Q,EAAX3S,EAAW2S,SAAX,OACPvG,EAAS+sB,EAAY92B,QAAQ,CAAEN,SAAQ4Q,eACzClQ,WAAY,SAAAV,GAAM,OAAIqK,EAAS+sB,EAAY12B,WAAWV,KACtD+T,kBAAmB,SAAArc,GAAS,OAC1B2S,EAASulB,EAAY7b,kBAAkBrc,KACzCid,qBAAsB,SAAAjd,GAAS,OAC7B2S,EAASkkB,EAAe5Z,qBAAqBjd,KAC/Cme,aAAc,SAACne,EAAW+H,GAAZ,OACZ4K,EAAS2N,EAAenC,aAAane,EAAW+H,KAClDqW,cAAe,SAACpe,EAAW+H,GAAZ,OACb4K,EAAS2N,EAAelC,cAAcpe,EAAW+H,KACnDsW,kBAAmB,SAACre,EAAWgG,GAAZ,OACjB2M,EAAS2N,EAAejC,kBAAkBre,EAAWgG,KACvDkD,QAAS,SAAAvC,GAAA,IAAGlB,EAAHkB,EAAGlB,OAAQyP,EAAXvO,EAAWuO,SAAX,OACPvC,EAASulB,EAAYhvB,QAAQ,CAAEzD,SAAQyP,eACzCzO,WAAY,SAAAK,GAAA,IAAGrB,EAAHqB,EAAGrB,OAAQyP,EAAXpO,EAAWoO,SAAX,OACVvC,EAASulB,EAAYzxB,WAAW,CAAEhB,SAAQyP,eAC5C5K,WAAY,SAAA7E,GAAM,OAAIkN,EAASulB,EAAY5tB,WAAW7E,KACtDiG,WAAY,SAAAnE,GAAA,IAAGkE,EAAHlE,EAAGkE,UAAW2R,EAAd7V,EAAc6V,YAAd,OACVzK,EAASkkB,EAAenrB,WAAW,CAAED,YAAW2R,kBAClDlR,cAAe,SAAAT,GAAS,OACtBkH,EAASkkB,EAAe3qB,cAAcT,KACxCQ,cAAe,SAAAxD,GAAA,IAAGgD,EAAHhD,EAAGgD,UAAW2R,EAAd3U,EAAc2U,YAAd,OACbzK,EAASkkB,EAAe5qB,cAAc,CAAER,YAAW2R,kBACrDjE,uBAAwB,SAAAnZ,GAAS,OAC/B2S,EAAS+sB,EAAYvmB,uBAAuBnZ,OAKhDwX,CAGE8mB,KCxUEqB,WAAO,SAAAv7B,GAAA,IAAG2d,EAAH3d,EAAG2d,QAASnT,EAAZxK,EAAYwK,SAAUwC,EAAtBhN,EAAsBgN,MAAtB,OACXhS,EAAAC,EAAAC,cAAA,QAAM8N,UAAS,QAAAvI,OAAUkd,EAAQ6d,MAAQ,KACvCxgC,EAAAC,EAAAC,cAAA,MAAI8N,UAAS,eAAAvI,OAAiBkd,EAAQ3Q,OAAS,KAAOA,GACrDxC,KAIL+wB,GAAKjxB,aAAe,CAClBqT,QAAS,CACP6d,KAAM,GACNxuB,MAAO,KAIIuuB,UCdTE,GAAiB,SAAAz7B,GAAA,IAAGC,EAAHD,EAAGC,KAAM8qB,EAAT/qB,EAAS+qB,KAAMvgB,EAAfxK,EAAewK,SAAUK,EAAzB7K,EAAyB6K,KAAzB,OACrB7P,EAAAC,EAAAC,cAAA,WAAS8N,UAAS,0CAAAvI,OAA4CoK,IAC5D7P,EAAAC,EAAAC,cAAA,MAAI8N,UAAU,6BACZhO,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAM8qB,EAAM/hB,UAAU,4BAC3B/I,GAEFuK,IAILixB,GAAenxB,aAAe,CAC5BO,KAAM,MAGO4wB,UCPTC,8MACJ3vB,MAAQ,CACNgmB,YAAY,sFAGM,IAAAhf,EAAA9W,KAAA+P,EAQd/P,KAAKlB,MANP4gC,EAFgB3vB,EAEhB2vB,cACA5rB,EAHgB/D,EAGhB+D,wBACAc,EAJgB7E,EAIhB6E,eACAE,EALgB/E,EAKhB+E,kBACAC,EANgBhF,EAMhBgF,kBACA5V,EAPgB4Q,EAOhB5Q,SAEF2U,EAAwB4rB,EAAe,GAAGl/B,KAAK,WAC7CsW,EAAK3G,SAAS,CACZ2lB,YAAY,MAIhB,IAAM9hB,EAAe,IAAIC,KAEnBC,GADYF,EAAaG,SAAS,EAAG,EAAG,EAAG,GAC9B,IAAIF,KAAKD,IACtBI,EAAUF,EAAWG,QAAQH,EAAWI,UAAY,GAE1DtU,KAAK6+B,aAAe1/B,EAAS8D,GAC1BY,WAAW,SACX6C,MAAM,aAAc,iBAAkBg5B,GACtCh5B,MAAM,UAAW,KAAM0N,GACvBK,QAAQ,UAAW,OACnByE,WAAW,SAAAE,GACVA,EAAcE,aAAaxS,QAAQ,SAAAyS,GACjC,IAAMnU,EAASmU,EAAOrW,IAAI6E,GACpB8M,EAAW0E,EAAOrW,IAAIyP,OACR,UAAhB4G,EAAOvM,MACTnM,QAAQC,IAAI,cACZ8T,EAAe,CAAExP,SAAQyP,cACA,YAAhB0E,EAAOvM,KAChB8H,EAAkB1P,GAElB2P,EAAkB,CAAE3P,SAAQyP,gEAOpC7U,KAAK6+B,gDAGE,IACC/I,EAAe91B,KAAK8P,MAApBgmB,WADDtW,EAE+Bxf,KAAKlB,MAAnC+U,EAFD2L,EAEC3L,aAAckd,EAFfvR,EAEeuR,YACtB,OAAI+E,EAAmB,KAErB/2B,EAAAC,EAAAC,cAAC0gC,GAAD,CAAgB7Q,KAAK,eAAelgB,KAAK,KAAK5K,KAAK,kBAChD6P,EAAayB,IAAI,SAAC+G,EAAM3B,GAAP,OAChB3b,EAAAC,EAAAC,cAACmyB,GAADhyB,OAAAC,OAAA,CACEwwB,MAAOnV,EACP7D,IAAKwF,EAAKjX,OACV2rB,YAAaA,GACT1U,cA7DWxd,aAyFZD,KACbuY,YArBsB,SAACrH,EAAOiQ,GAC9B,MAAO,CACL2f,cAAexa,EAAqBjQ,iBAAiBnF,GACrD+D,aAAcqR,EAAqBxP,mBAAmB5F,KAI/B,SAAAwC,GACzB,MAAO,CACLwB,wBAAyB,SAAClQ,EAAQmQ,GAAT,OACvBzB,EAAS8E,EAAmBtD,wBAAwBlQ,EAAQmQ,KAC9Da,eAAgB,SAAA7Q,GAAA,IAAGqB,EAAHrB,EAAGqB,OAAQyP,EAAX9Q,EAAW8Q,SAAX,OACdvC,EAAS8E,EAAmBxC,eAAe,CAAExP,SAAQyP,eACvDE,kBAAmB,SAAA5P,GAAA,IAAGC,EAAHD,EAAGC,OAAQyP,EAAX1P,EAAW0P,SAAX,OACjBvC,EAAS8E,EAAmBrC,kBAAkB,CAAE3P,SAAQyP,eAC1DC,kBAAmB,SAAA1P,GAAM,OACvBkN,EAAS8E,EAAmBtC,kBAAkB1P,OAKlD+R,CAGEsoB,KCzFEG,sNACJ9vB,MAAQ,CACNuuB,kBAAkB,KAGpBD,iBAAmB,WACYr+B,EAAK+P,MAA1BuuB,mBAGNpb,EADuBljB,EAAKjB,MAApBmkB,YACG,MAEbljB,EAAKoQ,SAAS,SAAAkW,GAAS,MAAK,CAC1BgY,kBAAmBhY,EAAUgY,uBAIjCvN,gBAAkB,SAAA1rB,IAEhB6d,EADuBljB,EAAKjB,MAApBmkB,YACG7d,GACXrF,EAAKq+B,4FAGE,IAAAruB,EAMH/P,KAAKlB,MAJP+U,EAFK9D,EAEL8D,aACAgsB,EAHK9vB,EAGL8vB,sBACAj8B,EAJKmM,EAILnM,OACAk7B,EALK/uB,EAKL+uB,eAEMT,EAAqBr+B,KAAK8P,MAA1BuuB,iBACR,OACEt/B,EAAAC,EAAAC,cAAA,QAAM8N,UAAU,aACdhO,EAAAC,EAAAC,cAAA,MAAI8N,UAAU,qBAAd,QACAhO,EAAAC,EAAAC,cAAC6gC,GAAD,CAAc/O,YAAa/wB,KAAK8wB,kBAChC/xB,EAAAC,EAAAC,cAAC0gC,GAAD,CAAgB37B,KAAK,gBAAgB8qB,KAAK,OAAOlgB,KAAK,OACtD7P,EAAAC,EAAAC,cAAC0gC,GAAD,CAAgB37B,KAAK,WAAW8qB,KAAK,QACnC/vB,EAAAC,EAAAC,cAAC8gC,GAAD,CAAsBlgB,oBAAqBggB,KAE5CxB,GACCt/B,EAAAC,EAAAC,cAACigC,GAAD9/B,OAAAC,OAAA,GACMwU,EAAairB,GADnB,CAEExE,sBAAuBt6B,KAAKo+B,iBAC5Bx6B,OAAQA,EACRyD,KAAK,mBA3COxI,cAkETwY,MAFG,SAAApH,GAAQ,QAAMA,GAEjBoH,CACbF,YAhBsB,SAACrH,EAAOiQ,GAC9B,MAAO,CACL+e,eAAgB5b,GAAkBpT,GAClC+D,aAAcqR,EAAqBzP,oBAAoB3F,KAIhC,SAAAwC,GACzB,MAAO,CACL2Q,WAAY,SAAA7d,GAAM,OAAIkN,EAAS8sB,GAAiBh6B,OAOlD+R,CAGEyoB,KClFEI,GAAuB,SAAAj8B,GAAsC,IAAnCwK,EAAmCxK,EAAnCwK,SAAUxB,EAAyBhJ,EAAzBgJ,UAAW0B,EAAc1K,EAAd0K,QACnD,OACE1P,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OACE8N,UAAS,2BAAAvI,OAA6BuI,GACtCkzB,KAAK,SACLxxB,QAASA,EACTL,SAAU,GAETG,KAMTyxB,GAAqB3xB,aAAe,CAClCtB,UAAW,IAGEizB,UCnBTE,GAAwB,SAAAn8B,GAA6B,IAA1BgJ,EAA0BhJ,EAA1BgJ,UAAWwB,EAAexK,EAAfwK,SAC1C,OAAOxP,EAAAC,EAAAC,cAAA,OAAK8N,UAAWA,GAAYwB,IAGrC2xB,GAAsB7xB,aAAe,CACnCtB,UAAW,IAGEmzB,sNCMbpwB,MAAQ,CACNqwB,YAAY,KAGdC,cAAgB,WAAM,IAAArwB,EACKhQ,EAAKjB,MAAtBoO,EADY6C,EACZ7C,SAAUnF,EADEgI,EACFhI,GAEbmF,EAKHA,EAASnF,GAJThI,EAAKoQ,SAAS,SAAAuhB,GAAS,MAAK,CAC1ByO,YAAazO,EAAUyO,uFAOpB,IAAA3gB,EAC2Dxf,KAAKlB,MAA/D4iB,EADDlC,EACCkC,QAAS2e,EADV7gB,EACU6gB,OAAQ/zB,EADlBkT,EACkBlT,QAAqBg0B,EADvC9gB,EAC2B2gB,WAC5BA,EAAiC,OAApBG,EAA2BA,EAAkBtgC,KAAK8P,MAAMqwB,WAE3E,OACEphC,EAAAC,EAAAC,cAAA,OACE8N,UAAS,mBAAAvI,OAAqBkd,EAAQ6e,OAAS,IAC/CC,gBAAeL,GAEfphC,EAAAC,EAAAC,cAACwhC,GAAD,CAAsBhyB,QAASzO,KAAKogC,cAAerzB,UAAW2U,EAAQ2e,QAAU,IAC7EA,GAEFF,GACCphC,EAAAC,EAAAC,cAACyhC,GAAD,CAAuB3zB,UAAW2U,EAAQpV,SAAW,IAClDA,WA1C+BzN,cACnCwP,aAAe,CACpBqT,QAAS,CACP6e,MAAO,GACPF,OAAQ,GACR/zB,QAAS,IAEX6zB,WAAY,KACZjzB,SAAU,KACVnF,GAAI,iBCAF44B,8MACJ7wB,MAAQ,CACN9L,KAAMjE,EAAKjB,MAAMkF,8EAGV,IAAA8S,EAAA9W,KAAA+P,EACuD/P,KAAKlB,MAA3D4V,EADD3E,EACC2E,MAAOqc,EADRhhB,EACQghB,YAAa/nB,EADrB+G,EACqB/G,SAAU6mB,EAD/B9f,EAC+B8f,MAAO0C,EADtCxiB,EACsCwiB,aACrCvuB,EAAShE,KAAK8P,MAAd9L,KACR,OACEjF,EAAAC,EAAAC,cAACyjB,GAAA,EAAD,CACEkN,YAAa5mB,EACb6mB,MAAOA,EACP+Q,eAAgBrO,GAEf,SAAAzP,GAAQ,OACP/jB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgP,SAAA,KACEjP,EAAAC,EAAAC,cAAA,UAAAG,OAAAC,OAAA,CACE0N,UAAU,SACVhG,IAAK+b,EAAS1B,UACV0B,EAASgN,eACThN,EAASiN,iBAEbhxB,EAAAC,EAAAC,cAAA,UAAQ8N,UAAU,kBAChBhO,EAAAC,EAAAC,cAACyR,EAAD,CACE3D,UAAU,uBACV/I,KAAK,OACLgJ,KAAK,OACLvK,MAAOuB,EACPkJ,SAAU4J,EAAK5J,SACfgB,UAAWqkB,EACX9kB,WAAS,EACTM,WAAYwkB,EACZjlB,OAAQwJ,EAAKxJ,SAEfvO,EAAAC,EAAAC,cAACsvB,GAAD,CACE7M,QAAS,CACPwF,QAAS,0BACTE,QAAS,mBAEXZ,WAAW,QACXG,YAAa,CACX/X,KAAM,SACNK,UAAU,EACVlC,UAAW,4BACXwB,SAAUxP,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAK,oBAGvBjF,EAAAC,EAAAC,cAACuzB,GAAD,KACEzzB,EAAAC,EAAAC,cAACwzB,GAAD,SAIN1zB,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,mBACbhO,EAAAC,EAAAC,cAAC0zB,GAAD,CACEje,MAAOA,EACPzM,OAAQ,KACRe,SAAUA,EACV+nB,YAAaA,EACb1pB,KAAK,UAGRyb,EAAS1V,YACVrO,EAAAC,EAAAC,cAAC4zB,GAAD,CACE5qB,OAAQ,KACRK,SAAU,KACV3I,UAAW,KACXqH,YAAa,KACbgC,SAAUA,KAGb8Z,EAAS1V,sBAtEDvO,aAwFNsY,eAVS,SAACrH,EAAOiQ,GAC9B,MAAO,CACLrL,MAAO2b,EAAc1M,eAAe7T,EAAOiQ,EAAShb,WAI7B,SAAAuN,GACzB,MAAO,IAGM6E,CAGbwpB,ICxFIE,sNACJ/wB,MAAQ,CACNgmB,YAAY,EACZuI,kBAAkB,KAgEpBD,iBAAmB,WAAM,IACfC,EAAqBt+B,EAAK+P,MAA1BuuB,iBACApb,EAAeljB,EAAKjB,MAApBmkB,WAEJob,GACFpb,EAAW,MAGbljB,EAAKoQ,SAAS,SAAAkW,GAAS,MAAK,CAC1BgY,kBAAmBhY,EAAUgY,uBAIjCvN,gBAAkB,SAAA1rB,GAAU,IAClB6d,EAAeljB,EAAKjB,MAApBmkB,WACAob,EAAqBt+B,EAAK+P,MAA1BuuB,iBACRpb,EAAW7d,GACNi5B,GACHt+B,EAAKq+B,sBAIT9H,UAAY,SAAAvyB,GAAgD,IAA7CkyB,EAA6ClyB,EAA7CkyB,YAAarG,EAAgC7rB,EAAhC6rB,YAAasG,EAAmBnyB,EAAnBmyB,OAAQlpB,EAAWjJ,EAAXiJ,KAC/C,GAAKipB,IAGHA,EAAYtT,cAAgBuT,EAAOvT,aACnCsT,EAAYpG,QAAUqG,EAAOrG,OAF/B,CAH0D,IAAA9f,EAQtBhQ,EAAKjB,MAAjCK,EARkD4Q,EAQlD5Q,SAAUugC,EARwC3vB,EAQxC2vB,cAClB,GAAI1yB,IAAS4V,GAAqB,KACxBvP,EAAgBtT,EAAKjB,MAArBuU,YACarI,EAAmCkrB,EAAhDvT,YAAkCme,EAAc5K,EAArBrG,MACd5kB,EAAiCgrB,EAA9CtT,YAAiC4R,EAAa0B,EAApBpG,MAC5BkR,EAAsB/1B,IAAiBC,EACvCP,EAActL,OAAAuM,EAAA,EAAAvM,CAAOiU,EAAYpI,GAAalG,SAChDg8B,GACFr2B,EAAe0rB,OAAO0K,EAAW,GACjCp2B,EAAe0rB,OAAO7B,EAAU,EAAG3E,GACnCzwB,EAASgE,UAAT,SAAAqB,OAA4Bk7B,EAA5B,aAAAl7B,OAAqDyG,GAAe,CAClElG,QAAS2F,MAGXA,EAAe0rB,OAAO7B,EAAU,EAAG3E,GACnCzwB,EAAS0L,iBAAiB,CACxBjH,OAAQ87B,EACRt6B,OAAQwqB,EACR5kB,eACAC,cACAP,oBAKN,GAAIsC,IAAS4V,GAAuB,KAAApD,EACIzf,EAAKjB,MAAnCgG,EAD0B0a,EAC1B1a,UAAW6O,EADe6L,EACf7L,eACbqtB,EAAgB5hC,OAAAuM,EAAA,EAAAvM,CAAO0F,GAC7Bk8B,EAAiB5K,OAAOF,EAAOrG,MAAO,GACtCmR,EAAiB5K,OAAOH,EAAYpG,MAAO,EAAGD,GAC9CzwB,EAASgE,UAAT,SAAAqB,OAA4Bk7B,GAAiB,CAC3C56B,UAAWk8B,IAEbrtB,EAAe+rB,EAAesB,QAIlCvb,YAAc,WACZ1lB,EAAKoQ,SAAS,CACZulB,YAAY,wFAlII,IAAA5e,EAAA9W,KAAA8tB,EAYd9tB,KAAKlB,MAVP8E,EAFgBkqB,EAEhBlqB,OACAsP,EAHgB4a,EAGhB5a,aACAiJ,EAJgB2R,EAIhB3R,eACAtT,EALgBilB,EAKhBjlB,QACAzC,EANgB0nB,EAMhB1nB,WACA6D,EAPgB6jB,EAOhB7jB,WACAsJ,EARgBua,EAQhBva,UACAE,EATgBqa,EAShBra,aACAC,EAVgBoa,EAUhBpa,aACAvU,EAXgB2uB,EAWhB3uB,SAEF+T,EAAatP,GACbuY,EAAevY,GAAQpD,KAAK,WAC1BsW,EAAK3G,SAAS,CACZ2lB,YAAY,MAIhB91B,KAAK6+B,aAAe1/B,EAAS8D,GAC1BY,WAAW,SACX6C,MAAM,aAAc,iBAAkB9C,GACtCsV,WAAW,SAAAE,GACVA,EAAcE,aAAaxS,QAAQ,SAAAyS,GACjC,IAAMnU,EAASmU,EAAOrW,IAAI6E,GACpB8M,EAAW0E,EAAOrW,IAAIyP,OACR,UAAhB4G,EAAOvM,MACTnM,QAAQC,IAAI,cACZ+H,EAAQ,CAAEzD,SAAQyP,cACO,YAAhB0E,EAAOvM,KAChB/C,EAAW7E,GAEXgB,EAAW,CAAEhB,SAAQyP,iBAK7B7U,KAAKihC,eAAiB9hC,EACnB4D,UADmB,SAAAyB,OACAZ,IACnBC,WAAW,WACXqV,WAAW,SAAAE,GACVA,EAAcE,aAAaxS,QAAQ,SAAAyS,GACjC,IAAMvQ,EAAWuQ,EAAOrW,IAAI6E,GACtByL,EAAa+F,EAAOrW,IAAIyP,OACV,UAAhB4G,EAAOvM,KACTuG,EAAU,CAAEvK,WAAUwK,eACG,YAAhB+F,EAAOvM,KAChB0G,EAAa1K,GAEbyK,EAAa,CAAEzK,WAAUwK,kEAOjCxT,KAAK6+B,eACL7+B,KAAKihC,kDA4EE,IAAA5E,EAAAr8B,KAAAiuB,EACyDjuB,KAAKlB,MAApD8E,GADVqqB,EACCiT,QADDjT,EACUrqB,QAAQk7B,EADlB7Q,EACkB6Q,eAAgB1mB,EADlC6V,EACkC7V,UAAW5O,EAD7CykB,EAC6CzkB,QAD7CqG,EAEkC7P,KAAK8P,MAAtCgmB,EAFDjmB,EAECimB,WAAYuI,EAFbxuB,EAEawuB,iBACpB,OAAIvI,EAAmB,KAErB/2B,EAAAC,EAAAC,cAACkiC,GAAD,CAAMpwB,MAAM,aACVhS,EAAAC,EAAAC,cAAA,OACE8N,UAAS,uBAAAvI,OACP65B,EAAmB,mBAAqB,KAG1Ct/B,EAAAC,EAAAC,cAACyjB,GAAA,EAAD,CACE4T,UAAWt2B,KAAKs2B,UAChB7Q,YAAazlB,KAAKylB,aAElB1mB,EAAAC,EAAAC,cAACyjB,GAAA,EAAD,CAAWC,YAAa/e,EAAQoJ,KAAM4V,IACnC,SAAAE,GAAQ,OACP/jB,EAAAC,EAAAC,cAAA,MAAAG,OAAAC,OAAA,CACE0N,UAAU,aACVhG,IAAK+b,EAAS1B,UACV0B,EAASC,gBAEZvZ,EAAQ8L,IAAI,SAAC8rB,EAAQ1mB,GAAT,OACX3b,EAAAC,EAAAC,cAACoiC,GAAD,CACExqB,IAAKuqB,EAAOp4B,SACZpF,OAAQA,EACRoF,SAAUo4B,EAAOp4B,SACjB6mB,MAAOnV,EACP1W,KAAMo9B,EAAOp9B,KACbe,QAASq8B,EAAOr8B,QAChBgsB,YAAasL,EAAKvL,gBAClByB,aAAc6O,EAAO7rB,cAGxBuN,EAAS1V,gBAKjBixB,GACCt/B,EAAAC,EAAAC,cAACigC,GAAD9/B,OAAAC,OAAA,GACM+Y,EAAU0mB,GADhB,CAEExE,sBAAuBt6B,KAAKo+B,iBAC5Bx6B,OAAQA,EACRyD,KAAK,OACLwP,IAAKioB,cAzLKjgC,cAqOTwY,MAFG,SAAApH,GAAQ,QAAMA,GAEjBoH,CACbF,YApCsB,SAAArH,GACtB,MAAO,CACL4vB,cAAexa,EAAqBjQ,iBAAiBnF,GACrDuD,YAAa6R,EAAqBhQ,WAAWpF,GAC7CtG,QAAS0b,EAAqB9P,gBAAgBtF,GAC9ChL,UAAWogB,EAAqB/P,aAAarF,GAC7CsI,UAAWiY,EAAc5M,aAAa3T,GACtCgvB,eAAgB5b,GAAkBpT,KAIX,SAAAwC,GACzB,MAAO,CACL2Q,WAAY,SAAA7d,GAAM,OAAIkN,EAAS8sB,GAAiBh6B,KAChD8W,cAAe,SAAAtY,GAAM,OAAI0O,EAASulB,EAAY3b,cAActY,KAC5DsP,aAAc,SAAAtP,GAAM,OAAI0O,EAAS8E,EAAmBlE,aAAatP,KACjEuY,eAAgB,SAAAvY,GAAM,OAAI0O,EAASulB,EAAY1b,eAAevY,KAC9DiF,QAAS,SAAA1D,GAAA,IAAGC,EAAHD,EAAGC,OAAQyP,EAAX1P,EAAW0P,SAAX,OACPvC,EAASulB,EAAYhvB,QAAQ,CAAEzD,SAAQyP,eACzCzO,WAAY,SAAAF,GAAA,IAAGd,EAAHc,EAAGd,OAAQyP,EAAX3O,EAAW2O,SAAX,OACVvC,EAASulB,EAAYzxB,WAAW,CAAEhB,SAAQyP,eAC5C5K,WAAY,SAAA7E,GAAM,OAAIkN,EAASulB,EAAY5tB,WAAW7E,KACtDmO,UAAW,SAAAjN,GAAA,IAAG0C,EAAH1C,EAAG0C,SAAUwK,EAAblN,EAAakN,WAAb,OACTlB,EAAS8E,EAAmB7D,UAAU,CAAEvK,WAAUwK,iBACpDC,aAAc,SAAAhN,GAAA,IAAGuC,EAAHvC,EAAGuC,SAAUwK,EAAb/M,EAAa+M,WAAb,OACZlB,EAAS8E,EAAmB3D,aAAa,CAAEzK,WAAUwK,iBACvDE,aAAc,SAAA1K,GAAQ,OACpBsJ,EAAS8E,EAAmB1D,aAAa1K,KAC3C2K,eAAgB,SAAC/P,EAAQkB,GAAT,OACdwN,EAAS8E,EAAmBzD,eAAe/P,EAAQkB,OAOvDqS,CAGE0pB,KC1OES,uBACJ,SAAAA,EAAYxiC,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAshC,IACjBvhC,EAAAX,OAAAoQ,EAAA,EAAApQ,CAAAY,KAAAZ,OAAAqQ,EAAA,EAAArQ,CAAAkiC,GAAA5xB,KAAA1P,KAAMlB,KA6BR+gC,sBAAwB,WACtB9/B,EAAKoQ,SAAS,SAAAkW,GAAS,MAAK,CAC1Bkb,uBAAwBlb,EAAUkb,0BAhCnBxhC,EAoCnByhC,cAAgB,SAAAx9B,GAAQ,IAAA+L,EACOhQ,EAAKjB,MAA1B8E,EADcmM,EACdnM,OADcmM,EACN5Q,SACP8H,WAAW,CAAErD,SAAQI,UApC9BjE,EAAK+P,MAAQ,CACXyxB,uBAAuB,EACvBzL,YAAY,GAJG/1B,mFAQC,IAAA+W,EAAA9W,KAAAwf,EAOdxf,KAAKlB,MALP4Y,EAFgB8H,EAEhB9H,eACAyF,EAHgBqC,EAGhBrC,kBACAlY,EAJgBua,EAIhBva,WACArB,EALgB4b,EAKhB5b,OACAzE,EANgBqgB,EAMhBrgB,SAEF0B,QAAQC,IAAI,gBACZ4W,IACGlX,KAAK,kBAAM2c,EAAkBvZ,KAC7BpD,KAAK,kBACJsW,EAAK3G,SAAS,CACZ2lB,YAAY,MAGlB91B,KAAKyhC,aAAetiC,EAASwE,WAAWC,GAAQsV,WAAW,SAAAtS,GACzD,IAAMiR,EAAWjR,EAAS+L,OAC1B1N,EAAW,CAAErB,SAAQiU,gDAehB,IAAAwkB,EAAAr8B,KAAA6P,EACuC7P,KAAK8P,MAA3CyxB,EADD1xB,EACC0xB,sBACR,GAFO1xB,EACwBimB,WACf,OAAO,KAFhB,IAAAhI,EAG0B9tB,KAAKlB,MAA9B8E,EAHDkqB,EAGClqB,OAAQiS,EAHTiY,EAGSjY,aAChB,OACE9W,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgP,SAAA,KACGuzB,GACCxiC,EAAAC,EAAAC,cAACyiC,GAAD,CACE1f,QAAShiB,KAAK6/B,sBACd9d,aAAc/hB,KAAKwhC,gBAGvBziC,EAAAC,EAAAC,cAAC0iC,EAAA,EAAD,KACE5iC,EAAAC,EAAAC,cAAC2iC,EAAA,EAAD,CACEC,OAAK,EACL7+B,KAAMqN,EACNyxB,OAAQ,SAAAhjC,GAAK,OACXC,EAAAC,EAAAC,cAAC8iC,GAAD3iC,OAAAC,OAAA,CACEwgC,sBAAuBxD,EAAKwD,uBACxB/gC,OAIVC,EAAAC,EAAAC,cAAC2iC,EAAA,EAAD,CACE5+B,KpGzEW,iBoG0EX8+B,OAAQ,SAAAhjC,GAAK,OACXC,EAAAC,EAAAC,cAAC+iC,GAAD5iC,OAAAC,OAAA,CACEuE,OAAQA,EACRjE,UAAWb,EAAMmjC,MAAMC,OAAOn6B,GAC9Bf,YAAa6O,EAAa/W,EAAMmjC,MAAMC,OAAOn6B,IAAI/D,MAC7ClF,OAIVC,EAAAC,EAAAC,cAAC2iC,EAAA,EAAD,CACE5+B,KpGnFiB,kBoGoFjB8+B,OAAQ,SAAAhjC,GAAK,OACXC,EAAAC,EAAAC,cAACkiC,GAAD,CAAMpwB,MAAM,YACVhS,EAAAC,EAAAC,cAAC8gC,GAAD3gC,OAAAC,OAAA,CACEuE,OAAQA,EACRic,oBAAqBwc,EAAKwD,uBACtB/gC,QAKZC,EAAAC,EAAAC,cAAC2iC,EAAA,EAAD,CACE5+B,KpG9Fc,eoG+Fd8+B,OAAQ,SAAAhjC,GAAK,OAAIC,EAAAC,EAAAC,cAACkjC,GAAD/iC,OAAAC,OAAA,CAAWuE,OAAQA,GAAY9E,gBA1FrCD,cAoHRwY,MAFG,SAAApH,GAAQ,QAAMA,GAEjBoH,CACbF,YAnBsB,SAACrH,EAAOiQ,GAC9B,MAAO,CACLlK,aAAcmK,EAAiB/B,gBAAgBnO,KAIxB,SAAAwC,GACzB,MAAO,CACLrN,WAAY,SAAAlB,GAAA,IAAGH,EAAHG,EAAGH,OAAQiU,EAAX9T,EAAW8T,SAAX,OACVvF,EAAS8vB,EAAYn9B,WAAW,CAAErB,SAAQiU,eAC5CH,eAAgB,kBAAMpF,EAAS8vB,EAAY1qB,mBAC3CyF,kBAAmB,SAAAvZ,GAAM,OACvB0O,EAAS2N,EAAe9C,kBAAkBvZ,OAO9CuT,CAGEmqB,KClIElyB,GAAgB,CACpBC,YAAa,GACbC,YAAa,GACbrO,MAAO,MAGHohC,eACJ,SAAAA,EAAYvjC,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAqiC,IACjBtiC,EAAAX,OAAAoQ,EAAA,EAAApQ,CAAAY,KAAAZ,OAAAqQ,EAAA,EAAArQ,CAAAijC,GAAA3yB,KAAA1P,KAAMlB,KAIR6Q,SAAW,SAAAC,GAAK,IACNP,EAAgBtP,EAAK+P,MAArBT,YAERtP,EAAKjB,MAAMK,SACR6C,eAAeqN,GACf7O,KAAK,WACJT,EAAKoQ,SAAL/Q,OAAAqE,EAAA,EAAArE,CAAA,GAAmBgQ,OAEpBpO,MAAM,SAAAC,GACLlB,EAAKoQ,SAAS,CAAElP,YAEpB2O,EAAEU,kBAhBevQ,EAmBnBmN,SAAW,SAAA0C,GACT7P,EAAKoQ,SAAL/Q,OAAAwG,EAAA,EAAAxG,CAAA,GACGwQ,EAAEW,OAAOvM,KAAO4L,EAAEW,OAAO9N,SAnB5B1C,EAAK+P,MAAL1Q,OAAAqE,EAAA,EAAArE,CAAA,GAAkBgQ,IAFDrP,wEAyBV,IAAA8P,EACqC7P,KAAK8P,MAAzCT,EADDQ,EACCR,YAAaC,EADdO,EACcP,YAAarO,EAD3B4O,EAC2B5O,MAC5BwP,EAA4B,KAAhBpB,GAAsBA,IAAgBC,EAExD,OACEvQ,EAAAC,EAAAC,cAAA,QAAM0Q,SAAU3P,KAAK2P,SAAU5C,UAAU,aACvChO,EAAAC,EAAAC,cAACyR,EAAD,CACE1M,KAAK,cACL0J,MAAM,eACNjL,MAAO4M,EACPnC,SAAUlN,KAAKkN,SACfF,KAAK,WACLD,UAAU,qBAEZhO,EAAAC,EAAAC,cAACyR,EAAD,CACE1M,KAAK,cACL0J,MAAM,uBACNjL,MAAO6M,EACPpC,SAAUlN,KAAKkN,SACfF,KAAK,WACLD,UAAU,qBAEZhO,EAAAC,EAAAC,cAAC0R,EAAD,CACE5B,SAAU0B,EACVzD,KAAK,SACL4B,KAAK,KACLE,QAAQ,YACRtJ,MAAM,UACNiJ,QAASzO,KAAK2P,UANhB,sBAUC1O,GAASlC,EAAAC,EAAAC,cAAA,SAAIgC,EAAMG,iBA1DKvC,aAgElBD,KAAayjC,IClDbhrB,cADG,SAAApH,GAAQ,QAAMA,GACjBoH,CAnBK,kBAClBtY,EAAAC,EAAAC,cAACgY,GAAgB/X,SAAjB,KACG,SAAA+Q,GAAQ,OACPlR,EAAAC,EAAAC,cAAA,QAAM8N,UAAU,WACdhO,EAAAC,EAAAC,cAAA,sBAAcgR,EAAS5O,OACvBtC,EAAAC,EAAAC,cAAA,WAAS8N,UAAU,oBACnBhO,EAAAC,EAAAC,cAAA,mCACEF,EAAAC,EAAAC,cAACyS,GAAD,OAEF3S,EAAAC,EAAAC,cAAA,WAAS8N,UAAU,oBACnBhO,EAAAC,EAAAC,cAAA,mCACEF,EAAAC,EAAAC,cAACqjC,GAAD,aCXJC,uBACJ,SAAAA,EAAYzjC,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAuiC,IACjBxiC,EAAAX,OAAAoQ,EAAA,EAAApQ,CAAAY,KAAAZ,OAAAqQ,EAAA,EAAArQ,CAAAmjC,GAAA7yB,KAAA1P,KAAMlB,KACDgR,MAAQ,CACX0yB,SAAS,EACT7qB,MAAO,IAJQ5X,mFASjBC,KAAKmQ,SAAS,CAAEqyB,SAAS,qFAmBzB,OACEzjC,EAAAC,EAAAC,cAAA,QAAM8N,UAAU,SACdhO,EAAAC,EAAAC,cAAA,2BA/BgBJ,cAmDTwY,MAFG,SAAApH,GAAQ,QAAMA,GAEjBoH,CACbF,YAfsB,SAACrH,EAAOiQ,GAC9B,MAAO,CACL7d,YAAaquB,EAAckS,mBAAmB3yB,KAIvB,SAAAwC,GACzB,MAAO,CACLoF,eAAgB,kBAAMpF,EAAS8vB,EAAY1qB,qBAO7CP,CAGEorB,KC7CWG,kBAVF,SAAA3+B,GAAkC,IAA/B6K,EAA+B7K,EAA/B6K,KAAM7B,EAAyBhJ,EAAzBgJ,UAAW0B,EAAc1K,EAAd0K,QAC/B,OACE1P,EAAAC,EAAAC,cAAA,OAAK8N,UAAS,cAAAvI,OAAgBoK,EAAhB,KAAApK,OAAwBuI,IACpChO,EAAAC,EAAAC,cAACgS,EAAA,EAAD,CAAMlE,UAAU,aAAaN,GxGTZ,IwGSgCgC,QAASA,GACxD1P,EAAAC,EAAAC,cAAA,QAAM8N,UAAU,cAAhB,gBCJa41B,8MASnB7yB,MAAQ,CACN8yB,cAAeznB,OAAO0nB,WACtBC,oBAAoB,EACpBtiB,gBAAgB,KASlBuiB,aAAe,WACbhjC,EAAKoQ,SAAS,CACZyyB,cAAeznB,OAAO0nB,gBAI1BG,0BAA4B,WAC1BjjC,EAAKoQ,SAAS,SAAAkW,GAAS,MAAK,CAC1Byc,oBAAqBzc,EAAUyc,yBAInCvI,YAAc,SAAA3qB,GACc7P,EAAK+P,MAAvB8yB,cACa7iC,EAAKjB,MAAlBmkC,WAIJrzB,EAAEW,OAAOgW,QAAQ,WAAa3W,EAAEW,OAAOgW,QAAQ,OACjDxmB,EAAKijC,+BAgBTriB,mBAAqB,SAAA/Q,KACO7P,EAAK+P,MAAvB8yB,cACa7iC,EAAKjB,MAAlBmkC,WAINljC,EAAKmjC,WAAWniB,SAASnR,EAAEW,SAC3BX,EAAEW,OAAOgW,QAAQ,WACjB3W,EAAEW,OAAOgW,QAAQ,MAGnBxmB,EAAKoQ,SAAS,CACZ2yB,oBAAoB,OAIxBviB,YAAc,YAEW,IADIxgB,EAAK+P,MAAxB0Q,iBAERzgB,EAAKoQ,SAAS,CACZqQ,gBAAgB,IAElBC,SAASC,oBAAoB,aAAc3gB,EAAKwgB,aAChDE,SAASC,oBAAoB,QAAS3gB,EAAK4gB,oBAC3CF,SAASG,iBAAiB,aAAc7gB,EAAK4gB,yGAhE7CxF,OAAOyF,iBAAiB,SAAU5gB,KAAK+iC,cACvCtiB,SAASG,iBAAiB,aAAc5gB,KAAKugB,aAC7CE,SAASG,iBAAiB,QAAS5gB,KAAK2gB,mEA0BnB,IACbH,EAAmBxgB,KAAK8P,MAAxB0Q,eACRrF,OAAOuF,oBAAoB,SAAU1gB,KAAK+iC,cAEtCviB,EACFC,SAASC,oBAAoB,aAAc1gB,KAAK2gB,qBAEhDF,SAASC,oBAAoB,QAAS1gB,KAAK2gB,oBAC3CF,SAASC,oBAAoB,aAAc1gB,KAAKugB,+CA+B3C,IAAAzJ,EAAA9W,KAAA6P,EACuC7P,KAAK8P,MAA3C8yB,EADD/yB,EACC+yB,cAAeE,EADhBjzB,EACgBizB,mBADhB/yB,EAEiC/P,KAAKlB,MAArCmkC,EAFDlzB,EAECkzB,SAAUvhB,EAFX3R,EAEW2R,QAASnT,EAFpBwB,EAEoBxB,SACrB40B,EAAeP,EAAgBK,EAErC,OACElkC,EAAAC,EAAAC,cAAA,OACE8N,UAAS,UAAAvI,OAAY2+B,EAAe,eAAiB,GAA5C,KAAA3+B,OACP2+B,GAAgBL,EAAqB,aAAe,GAD7C,KAAAt+B,OAELkd,EAAQ0hB,QACZr8B,IAAK,SAAAsa,GAAE,OAAKvK,EAAKusB,MAAQhiB,IAEzBtiB,EAAAC,EAAAC,cAACqkC,GAAD,CAAMv2B,UAAU,eAAe0B,QAASzO,KAAKu6B,cAC5C4I,GACCpkC,EAAAC,EAAAC,cAAC0R,EAAD,CACE3D,KAAK,SACLxH,MAAM,UACNiJ,QAASzO,KAAKgjC,0BACd/zB,UAAQ,GAERlQ,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAK,UAGfjF,EAAAC,EAAAC,cAAA,MACE8N,UAAS,iBAAAvI,OAAmBkd,EAAQ6hB,OACpC90B,QAASzO,KAAKu6B,YACdxzB,IAAK,SAAAsa,GAAE,OAAKvK,EAAKosB,WAAa7hB,IAE7B9S,WA/GyB1P,aAAf8jC,GACZt0B,aAAe,CACpB40B,SAAU,IACVvhB,QAAS,CACP0hB,OAAQ,GACRG,MAAO,gBCLAC,GAAc,SAAAz/B,GAAc,IAAXC,EAAWD,EAAXC,KAC5B,OAAOjF,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAMA,EAAM+I,UAAU,mBAGhB02B,eACnB,SAAAA,EAAY3kC,GAAQ,OAAAM,OAAAa,EAAA,EAAAb,CAAAY,KAAAyjC,GAAArkC,OAAAoQ,EAAA,EAAApQ,CAAAY,KAAAZ,OAAAqQ,EAAA,EAAArQ,CAAAqkC,GAAA/zB,KAAA1P,KACZlB,0EAGC,IAAAiR,EACwB/P,KAAKlB,MAA5B4kC,EADD3zB,EACC2zB,SAAUn1B,EADXwB,EACWxB,SAClB,OACExP,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,mBACbhO,EAAAC,EAAAC,cAAC0R,EAAD,CACE3D,KAAK,SACLyB,QAASi1B,EACT32B,UAAU,uBACV6B,KAAK,KACLK,UAAQ,GAERlQ,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAK,iBAEbjF,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,WACbhO,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,gBACbhO,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,iBACbhO,EAAAC,EAAAC,cAACqkC,GAAD,CAAM10B,KAAK,QAEb7P,EAAAC,EAAAC,cAAA,MAAI8N,UAAU,iBAAiBwB,aAvBN1P,uBCLxB8kC,GAAkB,SAAA5/B,GAAA,IAAE0K,EAAF1K,EAAE0K,QAAF,OAC7B1P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgP,SAAA,KACEjP,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC2kC,GAAA,EAAD,CAASn1B,QAASA,EAAShC,G3GNV,W2GMjB,WAEF1N,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC2kC,GAAA,EAAD,CAASn1B,QAASA,EAAShC,G3GVV,W2GUjB,kBAKOo3B,GAAe,SAAA1+B,GAAA,IAAGvB,EAAHuB,EAAGvB,OAAQ6K,EAAXtJ,EAAWsJ,QAAX,OAC1B1P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgP,SAAA,KACEjP,EAAAC,EAAAC,cAAA,MAAI8N,UAAU,iBACZhO,EAAAC,EAAAC,cAAC2kC,GAAA,EAAD,CAASn1B,QAASA,EAAS1B,UAAU,gBAAgBN,GAAE,WAAAjI,OAAaZ,IAClE7E,EAAAC,EAAAC,cAAC6kC,GAAD,CAAa9/B,KAAK,SAClBjF,EAAAC,EAAAC,cAAA,QAAM8N,UAAU,yBAAhB,UAGJhO,EAAAC,EAAAC,cAAA,MAAI8N,UAAU,iBACZhO,EAAAC,EAAAC,cAAC2kC,GAAA,EAAD,CAASn1B,QAASA,EAAS1B,UAAU,gBAAgBN,GAAE,MAAAjI,OAAQZ,EAAR,cACrD7E,EAAAC,EAAAC,cAAC6kC,GAAD,CAAa9/B,KAAK,SAClBjF,EAAAC,EAAAC,cAAA,QAAM8N,UAAU,yBAAhB,cAGJhO,EAAAC,EAAAC,cAAA,MAAI8N,UAAU,iBACZhO,EAAAC,EAAAC,cAAC2kC,GAAA,EAAD,CAASn1B,QAASA,EAAS1B,UAAU,gBAAgBN,GAAE,MAAAjI,OAAQZ,EAAR,WACrD7E,EAAAC,EAAAC,cAAC6kC,GAAD,CAAa9/B,KAAK,iBAClBjF,EAAAC,EAAAC,cAAA,QAAM8N,UAAU,yBAAhB,WAGJhO,EAAAC,EAAAC,cAAA,MAAI8N,UAAU,iBACZhO,EAAAC,EAAAC,cAAC2kC,GAAA,EAAD,CAASn1B,QAASA,EAAS1B,UAAU,gBAAgBN,G3G/BtC,U2GgCb1N,EAAAC,EAAAC,cAAC6kC,GAAD,CAAa9/B,KAAK,aAClBjF,EAAAC,EAAAC,cAAA,QAAM8N,UAAU,yBAAhB,aCxBOnO,KAXO,SAAAmF,GAAA,IAAG5E,EAAH4E,EAAG5E,SAAU4N,EAAbhJ,EAAagJ,UAAb,OACpBhO,EAAAC,EAAAC,cAAC0R,EAAD,CACE3D,KAAK,SACLyB,QAAStP,EAAS0C,QAClBkL,UAAWA,EACXvH,MAAM,WAJR,aCCmBu+B,uBACnB,SAAAA,EAAYjlC,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAA+jC,IACjBhkC,EAAAX,OAAAoQ,EAAA,EAAApQ,CAAAY,KAAAZ,OAAAqQ,EAAA,EAAArQ,CAAA2kC,GAAAr0B,KAAA1P,KAAMlB,KAQRy7B,YAAc,SAAA3qB,GAAK,IACTmkB,EAAUh0B,EAAK+P,MAAfikB,MACA/vB,EAAS4L,EAAEW,OAAXvM,KACR4L,EAAEo0B,kBACW,WAAThgC,GAA+B,KAAV+vB,IACZ,WAAT/vB,GACFjE,EAAK60B,QAAQ3T,QAAQ4T,QAEvB90B,EAAKoQ,SAAS,SAAAL,GAAK,MAAK,CACtBqwB,YAAarwB,EAAMqwB,gBAlBJpgC,EAsBnBgiB,aAAe,SAAAnS,GACbA,EAAEU,kBArBFvQ,EAAK+P,MAAQ,CACXqwB,YAAY,EACZpM,MAAO,IAETh0B,EAAK60B,QAAUzT,sBANEphB,wEA2BjB,OACEhB,EAAAC,EAAAC,cAAA,OACEwP,QAASzO,KAAKu6B,YACdxtB,UAAS,aAAAvI,OAAexE,KAAK8P,MAAMqwB,WAAa,eAAiB,KAEjEphC,EAAAC,EAAAC,cAAA,QAAM8N,UAAU,cAAc4C,SAAU3P,KAAK+hB,cAC3ChjB,EAAAC,EAAAC,cAACyR,EAAD,CACE1M,KAAK,SACL+I,UAAU,qBACVC,KAAK,OACLQ,SAAUxN,KAAK40B,QACfnnB,WAAS,IAEX1O,EAAAC,EAAAC,cAACyR,EAAD,CACE1M,KAAK,SACL+I,UAAU,sBACVC,KAAK,SACLS,WAAS,IAEX1O,EAAAC,EAAAC,cAAC0R,EAAD,CACE3D,KAAK,SACLyB,QAASzO,KAAKu6B,YACdxtB,UAAU,mBACV/I,KAAK,SACLiL,UAAQ,GAERlQ,EAAAC,EAAAC,cAAC6gB,GAAD,CAAM9b,KAAK,qBAtDgBnF,cCMjColC,4LACK,IACC/hC,EAAgBlC,KAAKlB,MAArBoD,YACR,OACEnD,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,UACbhO,EAAAC,EAAAC,cAACilC,GAAD,MACChiC,GACCnD,EAAAC,EAAAC,cAACsvB,GAAD,CACE7M,QAAS,CACPwF,QAAS,+BACTE,QAAS,wBAEXV,WAAW,QACXF,WAAW,QACXG,YAAa,CACX/X,KAAM,KACNK,UAAU,EACVlC,UAAW,4BACXwB,SACExP,EAAAC,EAAAC,cAACmxB,GAAD,CACE1O,QAAS,CACPwG,OAAQ,iBACR9a,YAAa,8BAEfua,SAAUzlB,EAAY8B,KACtB4K,KAAK,KACLE,QAAQ,SACRkZ,OAAQ9lB,EAAYmC,aAK1BtF,EAAAC,EAAAC,cAACuzB,GAAD,KACEzzB,EAAAC,EAAAC,cAACwzB,GAAD,KACE1zB,EAAAC,EAAAC,cAAC2kC,GAAA,EAAD,CAAS72B,UAAU,eAAeN,G9GzC3B,Y8GyCP,eAIF1N,EAAAC,EAAAC,cAACwzB,GAAD,KACE1zB,EAAAC,EAAAC,cAACklC,GAAD,CAAep3B,UAAU,4BAvCpBlO,cA2DNsY,eAVS,SAACrH,EAAOiQ,GAC9B,MAAO,CACL7d,YAAagjB,EAAqBlQ,eAAelF,KAI1B,SAAAwC,GACzB,MAAO,IAGM6E,CAGb8sB,ICnEmBG,sNACnBt0B,MAAQ,CACNu0B,eAAe,KAGjBC,UAAY,WACVvkC,EAAKoQ,SAAS,SAAAkW,GAAS,MAAK,CAC1Bge,eAAgBhe,EAAUge,oBAI9B9J,YAAc,SAAA3qB,GACZ7P,EAAKoQ,SAAS,SAAAL,GAAK,MAAK,CACtBu0B,eAAe,8EAIV,IAAAvtB,EAAA9W,KACCqkC,EAAkBrkC,KAAK8P,MAAvBu0B,cACR,OACEtlC,EAAAC,EAAAC,cAAA,UAAQ8N,UAAS,UAAAvI,OAAY6/B,EAAgB,aAAe,KAC1DtlC,EAAAC,EAAAC,cAACgY,GAAgB/X,SAAjB,KACG,SAAA+Q,GAAQ,OACPA,EACElR,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgP,SAAA,KACEjP,EAAAC,EAAAC,cAACslC,GAAD,CAASb,SAAU5sB,EAAKwtB,WACtBvlC,EAAAC,EAAAC,cAACulC,GAAD,CAAc/1B,QAASqI,EAAKwtB,UAAW1gC,OAAQqM,EAASC,OAE1DnR,EAAAC,EAAAC,cAACwlC,GAAD,OAGF1lC,EAAAC,EAAAC,cAACylC,GAAD,KACE3lC,EAAAC,EAAAC,cAAC0lC,GAAD,iBAhCoB9lC,cC0BrB2X,+LAjBX,OACEzX,EAAAC,EAAAC,cAAA,OAAK8N,UAAU,OACbhO,EAAAC,EAAAC,cAAC2lC,GAAD,MACA7lC,EAAAC,EAAAC,cAAC0iC,EAAA,EAAD,KACE5iC,EAAAC,EAAAC,cAAC2iC,EAAA,EAAD,CAAOC,OAAK,EAAC7+B,KhHpBA,IgHoBsB6hC,UAAWC,gBAC9C/lC,EAAAC,EAAAC,cAAC2iC,EAAA,EAAD,CAAO5+B,KhHpBM,UgHoBgB6hC,UAAW3zB,KACxCnS,EAAAC,EAAAC,cAAC2iC,EAAA,EAAD,CAAO5+B,KhHpBM,UgHoBgB6hC,UAAWlzB,KACxC5S,EAAAC,EAAAC,cAAC2iC,EAAA,EAAD,CAAO5+B,KhHhBc,agHgBgB6hC,UAAWpzB,KAChD1S,EAAAC,EAAAC,cAAC2iC,EAAA,EAAD,CAAO5+B,KhHrBE,MgHqBgB8+B,OAAQ,SAAAhjC,GAAK,OAAIC,EAAAC,EAAAC,cAAC8lC,GAAajmC,MACxDC,EAAAC,EAAAC,cAAC2iC,EAAA,EAAD,CAAO5+B,KhHpBM,WgHoBgB6hC,UAAWG,KACxCjmC,EAAAC,EAAAC,cAAC2iC,EAAA,EAAD,CAAO5+B,KhHpBI,SgHoBgB6hC,UAAWtC,cAZ9B1jC,eCFEomC,QACW,cAA7B9pB,OAAO+pB,SAASC,UAEe,UAA7BhqB,OAAO+pB,SAASC,UAEhBhqB,OAAO+pB,SAASC,SAASlD,MACvB,2DCPSmD,mBAAgB,CAC7BljC,eACA2T,gBACAuC,aACAK,aACA3C,aACAyG,gBACAwW,gBACA5P,arER0B,WAAmC,IAAlCrT,EAAkCzM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFzC,KAE8B6S,EAAW7S,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7D,OAAQ2S,EAAOlJ,MACb,IAbuB,cAcrB,OAAOkJ,EAAO9Q,OAChB,QACE,OAAO0K,IqEIX8F,gB9ET6B,WAAmC,IAAlC9F,EAAkCzM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAF5C,KAEiC6S,EAAW7S,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChE,OAAQ2S,EAAOlJ,MACb,IAb0B,iBAcxB,OAAOkJ,EAAOvW,UAChB,QACE,OAAOmQ,e+EZEE,GAFCq1B,aAAqB,CAAEC,SAAU9lC,cCa3C+lC,GAAQC,YAAYC,GAAU,GAAIC,YAAgBC,MAExDhQ,IAASmM,OACP/iC,EAAAC,EAAAC,cAAC2mC,EAAA,EAAD,CAAUL,MAAOA,IACfxmC,EAAAC,EAAAC,cAAC4mC,EAAgB3uB,SAAjB,CAA0BzU,MAAOtD,IAC/BJ,EAAAC,EAAAC,cAAC6mC,EAAA,EAAD,CAAQR,SAAU9lC,YAAwBwQ,QAASA,IACjDjR,EAAAC,EAAAC,cAAC8mC,GAAD,SAINtlB,SAAS4U,eAAe,SHwGpB,kBAAmB2Q,WACrBA,UAAUC,cAAcC,MAAM1lC,KAAK,SAAA2lC,GACjCA,EAAaC","file":"static/js/main.ff017adf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/feather-sprite.0ed672ce.svg\";","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const APP = '/0/';\nexport const HOME = '/0/home/:id';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const PROJECT = '/0/project/:id';\nexport const USER_PROJECTS = '/0/:id/projects';\nexport const USER_TASKS = '/0/:id/tasks';\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import firebase from 'firebase';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\nclass Firebase {\n  constructor() {\n    firebase.initializeApp(config);\n    this.auth = firebase.auth();\n    this.db = firebase.firestore();\n  }\n\n  // Auth API\n\n  get currentUser() {\n    return this.auth.currentUser;\n  }\n\n  signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    provider.addScope('https://www.googleapis.com/auth/contacts.readonly');\n    this.auth\n      .signInWithPopup(provider)\n      .then(result => {\n        if (result.credential) {\n          const token = result.credential.accessToken;\n          console.log(token);\n          const user = result.user;\n        }\n      })\n      .catch(error => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        const email = error.email;\n        const credential = error.credential;\n\n        if (errorCode === 'auth/account-exists-with-different-credential') {\n          alert(\n            'You have already signed up with a different auth provider for that email.'\n          );\n        } else {\n          console.error(error);\n        }\n      });\n  };\n\n  signInWithGithub = () => {\n    const provider = new firebase.auth.GithubAuthProvider();\n    this.auth.signInWithRedirect(provider);\n  };\n\n  createUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  signInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  signOut = () => this.auth.signOut();\n\n  passwordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  passwordUpdate = newPassword =>\n    this.auth.currentUser.updatePassword(newPassword);\n\n  // Utility API\n\n  getTimestamp = () => firebase.firestore.FieldValue.serverTimestamp();\n\n  addToArray = value => firebase.firestore.FieldValue.arrayUnion(value);\n\n  removeFromArray = value => firebase.firestore.FieldValue.arrayRemove(value);\n\n  deleteField = () => firebase.firestore.FieldValue.delete();\n\n  getDocRef = path => this.db.doc(path);\n\n  updateDoc = (path, newValue = {}) =>\n    this.getDocRef(path).update({\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  // User API\n\n  getUserDoc = userId => this.db.collection('users').doc(userId);\n\n  addUser = ({\n    userId,\n    name,\n    username,\n    email,\n    projectIds = [],\n    photoURL = null\n  }) => {\n    const batch = this.db.batch();\n    const userRef = this.getDocRef(`users/${userId}`);\n    const newFolderRef = this.getDocRef(`users/${userId}/folders/0`);\n    const todayFolderRef = this.getDocRef(`users/${userId}/folders/1`);\n    const upcomingFolderRef = this.getDocRef(`users/${userId}/folders/2`);\n    const laterFolderRef = this.getDocRef(`users/${userId}/folders/3`);\n\n    batch.set(userRef, {\n      userId,\n      name,\n      username,\n      email,\n      projectIds,\n      photoURL,\n      folderIds: [0, 1, 2, 3]\n    });\n\n    batch.set(newFolderRef, {\n      name: 'New Tasks',\n      taskIds: []\n    });\n\n    batch.set(todayFolderRef, {\n      name: 'Today',\n      taskIds: []\n    });\n\n    batch.set(upcomingFolderRef, {\n      name: 'Upcoming',\n      taskIds: []\n    });\n\n    batch.set(laterFolderRef, {\n      name: 'Later',\n      taskIds: []\n    });\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log('User added');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  updateUser = (userId, newValue = {}) =>\n    this.db\n      .collection('users')\n      .doc(userId)\n      .update(newValue);\n\n  // Tags API\n\n  addTag = ({ taskId, userId, text, projectId = null, color = 'default' }) => {\n    const batch = this.db.batch();\n    const userRef = this.getUserDoc(userId);\n    const taskRef = this.getTaskDoc(taskId);\n\n    batch.update(taskRef, {\n      tags: this.addToArray(text),\n      lastUpdatedAt: this.getTimestamp()\n    });\n\n    batch.set(\n      userRef,\n      {\n        tags: {\n          [text]: {\n            text,\n            color,\n            lastUsedAt: this.getTimestamp()\n          }\n        },\n        lastUpdatedAt: this.getTimestamp()\n      },\n      { merge: true }\n    );\n\n    if (projectId) {\n      const projectRef = this.getProjectDoc(projectId);\n\n      batch.set(\n        projectRef,\n        {\n          tags: {\n            [text]: {\n              text,\n              color,\n              lastUsedAt: this.getTimestamp()\n            }\n          },\n          lastUpdatedAt: this.getTimestamp()\n        },\n        { merge: true }\n      );\n    }\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log('tag added');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  removeTag = ({ taskId, tag }) => {\n    this.updateTask(taskId, {\n      tags: this.removeFromArray(tag)\n    });\n  };\n\n  setTagColor = ({ userId, projectId, tag, color }) => {\n    const batch = this.db.batch();\n    const userRef = this.getUserDoc(userId);\n    const projectRef = this.getProjectDoc(projectId);\n\n    batch.set(\n      userRef,\n      {\n        tags: {\n          [tag]: {\n            color\n          }\n        },\n        lastUpdatedAt: this.getTimestamp()\n      },\n      { merge: true }\n    );\n\n    batch.set(\n      projectRef,\n      {\n        tags: {\n          [tag]: {\n            color\n          }\n        },\n        lastUpdatedAt: this.getTimestamp()\n      },\n      { merge: true }\n    );\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log('tag color updated');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  // Project API\n\n  getProjectDoc = projectId => this.db.collection('projects').doc(projectId);\n\n  updateProject = (projectId, newValue = {}) =>\n    this.getProjectDoc(projectId).update({\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  updateProjectName = ({ projectId, name }) => {\n    const batch = this.db.batch();\n    const projectRef = this.getProjectDoc(projectId);\n\n    // Delete list\n    batch.update(projectRef, {\n      name,\n      lastUpdatedAt: this.getTimestamp()\n    });\n\n    // Update tasks assigned to list\n    this.db\n      .collection('tasks')\n      .where('projectId', '==', projectId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.update(doc.ref, {\n            projectName: name\n          });\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('project name updated');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  addProject = ({\n    userId,\n    name,\n    color = 'default',\n    view = 'board',\n    isPrivate = false\n  }) => {\n    this.db\n      .collection('projects')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastUpdatedAt: null,\n        listIds: [],\n        createdBy: userId,\n        memberIds: [userId],\n        notes: '',\n        isFavorited: false,\n        color,\n        view,\n        isPrivate,\n        name\n      })\n      .then(ref => {\n        this.updateUser(userId, {\n          projectIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  // List API\n\n  getListDoc = listId => this.db.collection('lists').doc(listId);\n\n  updateList = (listId, newValue = {}) =>\n    this.getListDoc(listId).update({\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n\n  updateListName = ({ listId, name }) => {\n    const batch = this.db.batch();\n    const listRef = this.getListDoc(listId);\n\n    // Delete list\n    batch.update(listRef, {\n      name,\n      lastUpdatedAt: this.getTimestamp()\n    });\n\n    // Update tasks assigned to list\n    this.db\n      .collection('tasks')\n      .where('listId', '==', listId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.update(doc.ref, {\n            listName: name\n          });\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('list name updated');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  addList = ({ name, projectId = null, userId = null }) => {\n    this.db\n      .collection('lists')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastUpdatedAt: null,\n        taskIds: [],\n        projectId,\n        name\n      })\n      .then(ref => {\n        if (projectId) {\n          this.updateProject(projectId, {\n            listIds: this.addToArray(ref.id)\n          });\n        }\n        if (userId) {\n          this.updateUser(userId, {\n            listIds: this.addToArray(ref.id)\n          });\n        }\n      });\n  };\n\n  deleteList = ({ listId, projectId }) => {\n    const batch = this.db.batch();\n    const listRef = this.getListDoc(listId);\n    const projectRef = this.getProjectDoc(projectId);\n\n    // Delete list\n    batch.delete(listRef);\n\n    // Remove list id from project\n    batch.update(projectRef, {\n      listIds: this.removeFromArray(listId),\n      lastUpdatedAt: this.getTimestamp()\n    });\n\n    // Delete tasks assigned to list\n    this.db\n      .collection('tasks')\n      .where('listId', '==', listId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n        return batch\n          .commit()\n          .then(() => {\n            console.log('list deleted');\n          })\n          .catch(error => {\n            console.error(error);\n          });\n      });\n  };\n\n  // Task API\n\n  getTaskDoc = taskId => this.db.collection('tasks').doc(taskId);\n\n  addTask = ({\n    name,\n    projectId,\n    projectName,\n    listId,\n    listName,\n    userId,\n    folderId = null\n  }) => {\n    const isFolderItem = folderId && userId;\n\n    this.db\n      .collection('tasks')\n      .add({\n        createdBy: userId,\n        createdAt: this.getTimestamp(),\n        lastUpdatedAt: null,\n        commentIds: [],\n        subtaskIds: [],\n        isCompleted: false,\n        completedAt: null,\n        dueDate: null,\n        notes: '',\n        assignedTo: isFolderItem ? [userId] : [],\n        folders: isFolderItem\n          ? {\n              [userId]: folderId\n            }\n          : {},\n        ownerId: isFolderItem ? userId : null,\n        listId,\n        listName,\n        projectId,\n        projectName,\n        name\n      })\n      .then(ref => {\n        if (isFolderItem) {\n          this.updateDoc(`users/${userId}/folders/${folderId}`, {\n            taskIds: this.addToArray(ref.id)\n          });\n        } else {\n          this.updateDoc(`lists/${listId}`, {\n            taskIds: this.addToArray(ref.id)\n          });\n        }\n      });\n  };\n\n  updateTask = (taskId, newValue = {}) => {\n    this.getTaskDoc(taskId).update({\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  removeAssignee = ({ taskId, userId, folderId }) => {\n    const batch = this.db.batch();\n    const taskRef = this.getDocRef(`tasks/${taskId}`);\n    const folderRef = this.getDocRef(`users/${userId}/folders/${folderId}`);\n    batch.update(folderRef, {\n      taskIds: this.removeFromArray(taskId),\n      lastUpdatedAt: this.getTimestamp()\n    });\n\n    batch.update(taskRef, {\n      assignedTo: this.removeFromArray(userId),\n      [`folders.${userId}`]: this.deleteField(),\n      lastUpdatedAt: this.getTimestamp()\n    });\n\n    return batch\n      .commit()\n      .then(() => {\n        console.log('Removed member from task');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  addAssignee = ({ taskId, projectId, userId }) => {\n    const batch = this.db.batch();\n    const taskRef = this.getDocRef(`tasks/${taskId}`);\n    const projectRef = this.getDocRef(`projects/${projectId}`);\n    const newFolderRef = this.getDocRef(`users/${userId}/folders/0`);\n    batch.update(newFolderRef, {\n      taskIds: this.addToArray(taskId),\n      lastUpdatedAt: this.getTimestamp()\n    });\n    batch.update(taskRef, {\n      assignedTo: this.addToArray(userId),\n      [`folders.${userId}`]: 0,\n      lastUpdatedAt: this.getTimestamp()\n    });\n    batch.update(projectRef, {\n      memberIds: this.addToArray(userId),\n      lastUpdatedAt: this.getTimestamp()\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('Assigned task to member');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  deleteTask = ({ taskId, listId, assignedTo = [], folders = null }) => {\n    const batch = this.db.batch();\n    const taskRef = this.getDocRef(`tasks/${taskId}`);\n    batch.delete(taskRef);\n\n    if (listId) {\n      const listRef = this.getDocRef(`lists/${listId}`);\n      batch.update(listRef, {\n        taskIds: this.removeFromArray(taskId),\n        lastUpdatedAt: this.getTimestamp()\n      });\n    }\n\n    // Delete subtasks assigned to task\n    this.db\n      .collection('subtasks')\n      .where('taskId', '==', taskId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          batch.delete(doc.ref);\n        });\n        console.log('1. delete task subtasks');\n      })\n      .then(() => {\n        assignedTo.forEach(memberId => {\n          const folderId = folders[memberId];\n          const folderRef = this.getDocRef(\n            `users/${memberId}/folders/${folderId}`\n          );\n          batch.update(folderRef, {\n            taskIds: this.removeFromArray(taskId),\n            lastUpdatedAt: this.getTimestamp()\n          });\n        });\n        console.log('2. remove task assignment');\n      })\n      .then(() => {\n        this.db\n          .collection('comments')\n          .where('taskId', '==', taskId)\n          .get()\n          .then(snapshot => {\n            snapshot.docs.forEach(doc => {\n              batch.delete(doc.ref);\n            });\n            console.log('3. delete task comments');\n            return batch\n              .commit()\n              .then(() => {\n                console.log('task deleted');\n              })\n              .catch(error => {\n                console.error(error);\n              });\n          });\n      });\n  };\n\n  moveTaskToList = ({ taskId, origListId, newListId, updatedTaskIds }) => {\n    const batch = this.db.batch();\n    const taskRef = this.getTaskDoc(taskId);\n    const origListRef = this.getListDoc(origListId);\n    const newListRef = this.getListDoc(newListId);\n    batch.update(taskRef, {\n      listId: newListId,\n      lastUpdatedAt: this.getTimestamp()\n    });\n    batch.update(origListRef, {\n      taskIds: this.removeFromArray(taskId),\n      lastUpdatedAt: this.getTimestamp()\n    });\n    batch.update(newListRef, {\n      taskIds: updatedTaskIds,\n      lastUpdatedAt: this.getTimestamp()\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('task moved');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  moveTaskToFolder = ({ userId, taskId, origFolderId, newFolderId, updatedTaskIds }) => {\n    const batch = this.db.batch();\n    const taskRef = this.getDocRef(`tasks/${taskId}`);\n    const origFolderRef = this.getDocRef(`users/${userId}/folders/${origFolderId}`);\n    const newFolderRef = this.getDocRef(`users/${userId}/folders/${newFolderId}`);\n    batch.update(taskRef, {\n      [`folders.${userId}`]: newFolderId,\n      lastUpdatedAt: this.getTimestamp()\n    });\n    batch.update(origFolderRef, {\n      taskIds: this.removeFromArray(taskId),\n      lastUpdatedAt: this.getTimestamp()\n    });\n    batch.update(newFolderRef, {\n      taskIds: updatedTaskIds,\n      lastUpdatedAt: this.getTimestamp()\n    });\n    return batch\n      .commit()\n      .then(() => {\n        console.log('Task moved to new folder');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  // Subtask API\n\n  getSubtaskDoc = subtaskId => this.db.collection('subtasks').doc(subtaskId);\n\n  addSubtask = ({\n    userId,\n    name,\n    memberIds = [],\n    projectId = null,\n    taskId = null,\n    dueDate = null\n  }) => {\n    this.db\n      .collection('subtasks')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastUpdatedAt: this.getTimestamp(),\n        isCompleted: false,\n        createdBy: userId,\n        assignedTo: [userId, ...memberIds],\n        completedAt: null,\n        dueDate,\n        projectId,\n        taskId,\n        name\n      })\n      .then(ref => {\n        if (taskId === null) return;\n        this.updateTask(taskId, {\n          subtaskIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  updateSubtask = (subtaskId, newValue = {}) => {\n    this.getSubtaskDoc(subtaskId).update({\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n\n  deleteSubtask = ({ subtaskId, taskId = null }) => {\n    const batch = this.db.batch();\n    const subtaskRef = this.getSubtaskDoc(subtaskId);\n    batch.delete(subtaskRef);\n\n    if (taskId) {\n      const taskRef = this.getTaskDoc(taskId);\n      batch.update(taskRef, {\n        subtaskIds: this.removeFromArray(subtaskId),\n        lastUpdatedAt: this.getTimestamp()\n      });\n    }\n    return batch\n      .commit()\n      .then(() => {\n        console.log('subtask deleted');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  // Comment API\n  getCommentDoc = commentId => this.db.collection('comments').doc(commentId);\n\n  addComment = ({ userId, memberIds = [], projectId, taskId, content }) => {\n    this.db\n      .collection('comments')\n      .add({\n        createdAt: this.getTimestamp(),\n        lastUpdatedAt: this.getTimestamp(),\n        isPinned: false,\n        from: userId,\n        to: memberIds,\n        likes: [],\n        projectId,\n        taskId,\n        content\n      })\n      .then(ref => {\n        this.updateTask(taskId, {\n          commentIds: this.addToArray(ref.id)\n        });\n      });\n  };\n\n  updateComment = (commentId, newValue = {}) => {\n    this.getCommentDoc(commentId).update({\n      lastUpdatedAt: this.getTimestamp(),\n      ...newValue\n    });\n  };\n}\n\nexport default Firebase;\n","import React from 'react';\nimport './Input.scss';\n\nconst Input = ({\n  className = '',\n  name,\n  type,\n  value,\n  onFocus,\n  onChange,\n  onInput,\n  placeholder,\n  isRequired,\n  onBlur,\n  autoComplete,\n  inputRef,\n  hideLabel,\n  label,\n  labelClass,\n  onKeyDown,\n  maxLength,\n  minLength,\n  isReadOnly\n}) => {\n  return (\n    <>\n      {!hideLabel && (\n        <label htmlFor={name} className={`input__label ${labelClass}`}>\n          {label}\n        </label>\n      )}\n      <input\n        className={`input ${className}`}\n        id={name}\n        name={name}\n        type={type}\n        value={value}\n        onFocus={onFocus}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={isRequired}\n        onBlur={onBlur}\n        autoComplete={autoComplete}\n        ref={inputRef}\n        onInput={onInput}\n        onKeyDown={onKeyDown}\n        maxLength={maxLength}\n        minLength={minLength}\n        readOnly={isReadOnly}\n        tabIndex={isReadOnly ? -1 : 0}\n      />\n    </>\n  );\n};\n\nInput.defaultProps = {\n  className: ''\n};\n\nexport default Input;\n","import React from 'react';\nimport './Button.scss';\n\nconst Button = ({\n  children,\n  type = 'button',\n  onClick,\n  className = '',\n  color = 'neutral',\n  size = 'md',\n  variant = 'text',\n  disabled,\n  name,\n  iconOnly = false,\n  buttonRef,\n  ...props\n}) => (\n  // eslint-disable-next-line react/button-has-type\n  <button\n    className={`${className} ${color} ${variant} ${!iconOnly ? size : ''} ${\n      iconOnly ? `icon-only icon-only--${size}` : ''\n    }`}\n    type={type}\n    onClick={onClick}\n    disabled={disabled}\n    name={name}\n    ref={buttonRef}\n    {...props}\n  >\n    {children}\n  </button>\n);\n\nButton.defaultProps = {\n  type: 'button',\n  className: '',\n  color: 'neutral',\n  size: 'md',\n  variant: 'text',\n  iconOnly: false\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport { withFirebase } from '../../components/Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../../components/Input';\nimport { Button } from '../../components/Button';\n\nconst INITIAL_STATE = {\n  username: '',\n  name: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { username, email, name, passwordOne } = this.state;\n    const { firebase, history } = this.props;\n    firebase\n      .createUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        const userId = authUser.user.uid;\n        const photoURL = authUser.user.photoURL || null;\n        return firebase.addUser({\n          userId,\n          name,\n          username,\n          email,\n          photoURL\n        });\n      })\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const {\n      username,\n      name,\n      email,\n      passwordOne,\n      passwordTwo,\n      error\n    } = this.state;\n    const isInvalid =\n      passwordOne === '' ||\n      passwordTwo === '' ||\n      email === '' ||\n      username === '' ||\n      passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"name\"\n          label=\"Full Name\"\n          value={name}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"username\"\n          label=\"Username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordOne\"\n          label=\"Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          label=\"Confirm Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Create Account\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignUpForm);\n","import React from 'react';\nimport './UserFormPage.scss';\n\nconst UserFormPage = ({ title, children }) => (\n  <main className=\"user-form__container\">\n    <h1 className=\"user-form__title\">{title}</h1>\n    {children}\n  </main>\n);\n\nexport default UserFormPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignUpForm from './SignUpForm';\nimport { UserFormPage } from '../../components/UserFormPage';\nimport * as ROUTES from '../../constants/routes';\nimport './SignUp.scss';\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account?\n    <Link className=\"link--outlined\" to={ROUTES.SIGN_UP}>\n      Sign Up\n    </Link>\n  </p>\n);\n\nconst SignUpPage = () => (\n  <UserFormPage title=\"Create an account\">\n    <SignUpForm />\n  </UserFormPage>\n);\n\nexport default SignUpPage;\nexport { SignUpLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../../components/Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Input } from '../../components/Input';\nimport { Button } from '../../components/Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email, password } = this.state;\n    this.props.firebase\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  enableGoogleLogin = e => {\n    const { signInWithGoogle } = this.props.firebase;\n    signInWithGoogle();\n    e.preventDefault();\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n    const isInvalid = password === '' || email === '';\n    return (\n      <form className=\"user-form\">\n        {/*\n        <Button\n          type=\"click\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.enableGoogleLogin}\n        >\n          Continue with Google\n        </Button>\n        <Button\n          type=\"click\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.enableGithubLogin}\n        >\n          Continue with Github\n        </Button>\n      */}\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"password\"\n          label=\"Password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Log In\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  withFirebase\n)(SignInForm);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../../components/Firebase';\nimport { Input } from '../../components/Input';\nimport { Button } from '../../components/Button';\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null\n};\n\nclass PasswordForgetForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .passwordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { email, error } = this.state;\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"email\"\n          label=\"Email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"email\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Reset My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordForgetForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PasswordForgetForm from './PasswordForgetForm';\nimport { UserFormPage } from '../../components/UserFormPage';\nimport * as ROUTES from '../../constants/routes';\nimport './PasswordForget.scss';\n\nconst PasswordForgetLink = () => (\n  <p className=\"user-form__info\">\n    <Link to={ROUTES.PASSWORD_FORGET} className=\"link--sm\">\n      Forgot Password?\n    </Link>\n  </p>\n);\n\nconst PasswordForgetPage = () => (\n  <UserFormPage title=\"Forgot your password?\">\n    <PasswordForgetForm />\n  </UserFormPage>\n);\n\nexport default PasswordForgetPage;\nexport { PasswordForgetLink };\n","import React from 'react';\nimport SignInForm from './SignInForm';\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { UserFormPage } from '../../components/UserFormPage';\n\nconst SignInPage = () => (\n  <UserFormPage title=\"Log In\">\n    <SignInForm />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </UserFormPage>\n);\n\nexport default SignInPage;\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n","import { Firebase } from '../components/Firebase';\n\nconst firebase = new Firebase();\nexport default firebase;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const setCurrentUser = currentUser => {\n  return {\n    type: types.SET_CURRENT_USER,\n    currentUser\n  };\n};\n\nexport const fetchCurrentUserData = userId => {\n  return async dispatch => {\n    try {\n      const currentUser = await firebase\n        .getDocRef(`users/${userId}`)\n        .get()\n        .then(doc => doc.data());\n      dispatch(setCurrentUser(currentUser));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const loadFolders = folders => {\n  return {\n    type: types.LOAD_FOLDERS,\n    folders\n  };\n};\n\nexport const fetchFolders = userId => {\n  return async dispatch => {\n    try {\n      const folders = await firebase\n        .getDocRef(`users/${userId}`)\n        .collection('folders')\n        .get()\n        .then(snapshot => {\n          const foldersById = {};\n          snapshot.forEach(doc => {\n            foldersById[doc.id] = {\n              folderId: doc.id,\n              ...doc.data()\n            };\n          });\n          return foldersById;\n        });\n      dispatch(loadFolders(folders));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addFolder = ({ folderId, folderData }) => {\n  return {\n    type: types.ADD_FOLDER,\n    folderId,\n    folderData\n  };\n};\n\nexport const updateFolder = ({ folderId, folderData }) => {\n  return {\n    type: types.UPDATE_FOLDER,\n    folderId,\n    folderData\n  };\n};\n\nexport const deleteFolder = folderId => {\n  return {\n    type: types.DELETE_FOLDER,\n    folderId\n  };\n};\n\nexport const reorderFolders = (userId, folderIds) => {\n  return {\n    type: types.REORDER_FOLDERS,\n    userId,\n    folderIds\n  };\n};\n\nexport const loadTasksDueSoon = tasksDueSoon => {\n  return {\n    type: types.LOAD_TASKS_DUE_SOON,\n    tasksDueSoon\n  };\n};\n\nexport const fetchTasksDueWithinDays = (userId, days) => {\n  const startingDate = new Date();\n  const timeStart = new Date(startingDate.setHours(0, 0, 0, 0));\n  const endingDate = new Date(startingDate);\n  const timeEnd = new Date(endingDate.setDate(endingDate.getDate() + days));\n\n  return async dispatch => {\n    try {\n      const tasksDueSoon = await firebase.db\n        .collection('tasks')\n        .where('assignedTo', 'array-contains', userId)\n        .where('dueDate', '<=', timeEnd)\n        .orderBy('dueDate', 'asc')\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksDueSoon(tasksDueSoon));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addTaskDueSoon = ({ taskId, taskData }) => {\n  return {\n    type: types.ADD_TASK_DUE_SOON,\n    taskId,\n    taskData\n  };\n};\n\nexport const deleteTaskDueSoon = taskId => {\n  return {\n    type: types.DELETE_TASK_DUE_SOON,\n    taskId\n  };\n};\n\nexport const updateTaskDueSoon = ({ taskId, taskData }) => {\n  return {\n    type: types.UPDATE_TASK_DUE_SOON,\n    taskId,\n    taskData\n  };\n};\n","export const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const LOAD_FOLDERS = 'LOAD_FOLDERS';\nexport const ADD_FOLDER = 'ADD_FOLDER';\nexport const DELETE_FOLDER = 'DELETE_FOLDER';\nexport const UPDATE_FOLDER = 'UPDATE_FOLDER';\nexport const REORDER_FOLDERS = 'REORDER_FOLDERS';\nexport const UPDATE_FOLDER_IDS = 'UPDATE_FOLDER_IDS';\nexport const LOAD_TASKS_DUE_SOON = 'LOAD_TASKS_DUE_SOON';\nexport const ADD_TASK_DUE_SOON = 'ADD_TASK_DUE_SOON';\nexport const DELETE_TASK_DUE_SOON = 'DELETE_TASK_DUE_SOON';\nexport const UPDATE_TASK_DUE_SOON = 'UPDATE_TASK_DUE_SOON';\n","export const getCurrentUser = state => {\n  return state.currentUser;\n};\n\nexport const getCurrentUserId = state => {\n  const { currentUser } = state;\n  if (!currentUser) return null;\n  return currentUser.userId;\n};\n\nexport const getFolders = state => {\n  const { currentUser } = state;\n  if (!currentUser) return null;\n  return currentUser.folders;\n};\n\nexport const getFolderIds = state => {\n  const { currentUser } = state;\n  if (!currentUser) return [];\n  return currentUser.folderIds;\n};\n\nexport const getFoldersArray = state => {\n  const { currentUser } = state;\n  if (!currentUser) return [];\n  const { folders } = currentUser;\n  if (!folders) return [];\n  return Object.keys(folders).map(folderId => {\n    return {\n      ...folders[folderId],\n      isDefault:\n        folderId === '0' ||\n        folderId === '1' ||\n        folderId === '2' ||\n        folderId === '3'\n    };\n  });\n};\n\nexport const getFolder = (state, folderId) => {\n  const { currentUser } = state;\n  if (!currentUser) return null;\n  return currentUser.folders[folderId];\n};\n\nexport const getTasksDueSoonById = state => {\n  const { currentUser } = state;\n  if (!currentUser) return {};\n  return currentUser.tasksDueSoon;\n};\n\nexport const getTasksDueSoonArr = state => {\n  const { tasksDueSoon } = state.currentUser;\n  if (!tasksDueSoon) return [];\n  return Object.keys(tasksDueSoon).map(taskId => tasksDueSoon[taskId]);\n};\n\nexport const getMergedTags = state => {\n  const {\n    selectedProject: projectId,\n    projectsById,\n    usersById,\n    currentUser\n  } = state;\n  const { userId } = currentUser;\n  if (!projectId) return [];\n  const { tags: projectTags } = projectsById[projectId];\n  const { tags: userTags } = usersById[userId];\n  const mergedTags = { ...userTags, ...projectTags };\n  return Object.keys(mergedTags).map(tag => mergedTags[tag]);\n};\n","import * as types from './types';\n\nconst currentUser = (state = null, action) => {\n  switch (action.type) {\n    case types.SET_CURRENT_USER: {\n      const { currentUser } = action;\n      return currentUser;\n    }\n    case types.LOAD_FOLDERS: {\n      const { folders } = action;\n      return {\n        ...state,\n        folders\n      };\n    }\n    case types.ADD_FOLDER: {\n      const { folderId, folderData } = action;\n      return {\n        ...state,\n        folders: {\n          ...state.folders,\n          [folderId]: {\n            folderId,\n            ...folderData\n          }\n        }\n      };\n    }\n    case types.DELETE_FOLDER: {\n      const { folderId } = action;\n      const { [folderId]: deletedFolder, ...restOfFolders } = state.folders;\n      return {\n        ...state,\n        folders: restOfFolders\n      };\n    }\n    case types.UPDATE_FOLDER: {\n      const { folderId, folderData } = action;\n      return {\n        ...state,\n        folders: {\n          ...state.folders,\n          [folderId]: {\n            ...state.folders[folderId],\n            ...folderData\n          }\n        }\n      };\n    }\n    case types.UPDATE_FOLDER_IDS:\n    case types.REORDER_FOLDERS: {\n      const { folderIds } = action;\n      return {\n        ...state,\n        folderIds\n      };\n    }\n    case types.LOAD_TASKS_DUE_SOON: {\n      const { tasksDueSoon } = action;\n      return {\n        ...state,\n        tasksDueSoon\n      };\n    }\n    case types.ADD_TASK_DUE_SOON: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        tasksDueSoon: {\n          ...state.tasksDueSoon,\n          [taskId]: {\n            taskId,\n            ...taskData\n          }\n        }\n      };\n    }\n    case types.DELETE_TASK_DUE_SOON: {\n      const { taskId } = action;\n      const { [taskId]: deletedTask, ...restOfTasks } = state.tasksDueSoon;\n      return {\n        ...state,\n        tasksDueSoon: restOfTasks\n      };\n    }\n    case types.UPDATE_TASK_DUE_SOON: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        tasksDueSoon: {\n          ...state.tasksDueSoon,\n          [taskId]: {\n            ...state[taskId],\n            ...taskData\n          }\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default currentUser;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { currentUserActions } from '../../ducks/currentUser';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        authUser: null\n      };\n    }\n\n    componentDidMount() {\n      const {\n        firebase,\n        history,\n        fetchCurrentUserData,\n        setCurrentUser\n      } = this.props;\n\n      this.listener = firebase.auth.onAuthStateChanged(authUser => {\n        if (authUser) {\n          fetchCurrentUserData(authUser.uid);\n          this.setState({ authUser });\n          history.push(`/0/home/${authUser.uid}`);\n        } else {\n          history.push(ROUTES.SIGN_IN);\n          setCurrentUser(null);\n          this.setState({ authUser: null });\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  const mapDispatchToProps = dispatch => ({\n    fetchCurrentUserData: userId =>\n      dispatch(currentUserActions.fetchCurrentUserData(userId)),\n    setCurrentUser: currentUser =>\n      dispatch(currentUserActions.setCurrentUser(currentUser))\n  });\n\n  return compose(\n    withRouter,\n    withFirebase,\n    connect(\n      null,\n      mapDispatchToProps\n    )\n  )(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport AuthUserContext from './context';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n\n    componentDidMount() {\n      const { firebase, history } = this.props;\n      this.listener = firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          history.push(ROUTES.SIGN_IN);\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? (\n              <Component userId={authUser.uid} {...this.props} />\n            ) : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n  return compose(\n    withRouter,\n    withFirebase\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadUserData = user => {\n  return {\n    type: types.LOAD_USER_DATA,\n    user\n  };\n};\n\nexport const loadUsersById = usersById => {\n  return {\n    type: types.LOAD_USERS_BY_ID,\n    usersById\n  };\n};\n\nexport const fetchUsersById = () => {\n  return async dispatch => {\n    try {\n      const usersById = await firebase.db\n        .collection('users')\n        .get()\n        .then(snapshot => {\n          const users = {};\n          snapshot.forEach(doc => {\n            users[doc.id] = {\n              userId: doc.id,\n              ...doc.data()\n            };\n          });\n          return users;\n        });\n      dispatch(loadUsersById(usersById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserData = userId => {\n  return async dispatch => {\n    try {\n      const user = await firebase\n        .getUserDoc(userId)\n        .get()\n        .then(doc => doc.data());\n      dispatch(loadUserData(user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addUser = ({ userId, userData }) => {\n  return {\n    type: types.ADD_USER,\n    userId,\n    userData\n  };\n};\n\nexport const deleteUser = userId => {\n  return {\n    type: types.DELETE_USER,\n    userId\n  };\n};\n\nexport const updateUser = ({ userId, userData }) => {\n  return {\n    type: types.UPDATE_USER,\n    userId,\n    userData\n  };\n};\n","export const LOAD_USER_DATA = 'LOAD_USER_DATA';\nexport const LOAD_USERS_BY_ID = 'LOAD_USERS_BY_ID';\nexport const ADD_USER = 'ADD_USER';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const DELETE_USER = 'DELETE_USER';\nexport const LOAD_USER_TASKS = 'LOAD_USER_TASKS';\nexport const ADD_TASK = 'ADD_TASK';\nexport const REORDER_FOLDERS = 'REORDER_FOLDERS';\n","export const getUsersById = state => {\n  return state.usersById;\n};\n\nexport const getUserData = (state, userId) => {\n  return state.usersById[userId];\n};\n\nexport const getUserTaskIds = (state, userId) => {\n  const { taskIds } = state.usersById[userId];\n  if (!taskIds) return [];\n  return taskIds;\n};\n\n// returns array of all users\nexport const getUsersArray = state => {\n  const { usersById } = state;\n  return Object.keys(usersById).map(userId => {\n    return {\n      userId,\n      ...usersById[userId]\n    };\n  });\n};\n\n// returns subset of users\nexport const getMembersArray = (state, memberIds) => {\n  const { usersById } = state;\n  if (!memberIds) return [];\n  return memberIds.map(memberId => usersById[memberId]);\n};\n","import * as types from './types';\n\nconst usersById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_USERS_BY_ID: {\n      const { usersById } = action;\n      return {\n        ...state,\n        ...usersById\n      };\n    }\n    case types.LOAD_USER_DATA: {\n      const { user } = action;\n      return {\n        ...state,\n        ...user\n      };\n    }\n    case types.LOAD_USER_TASKS: {\n      const { userId, tasksById } = action;\n      return {\n        ...state,\n        [userId]: {\n          ...state[userId],\n          tasksById\n        }\n      };\n    }\n    case types.ADD_USER: {\n      const { userId, userData } = action;\n      return {\n        ...state,\n        [userId]: {\n          userId,\n          ...userData\n        }\n      };\n    }\n    case types.DELETE_USER: {\n      const { userId } = action;\n      const { [userId]: deletedUser, ...restOfUsers } = state;\n      return restOfUsers;\n    }\n    case types.UPDATE_USER: {\n      const { userId, userData } = action;\n      return {\n        ...state,\n        [userId]: {\n          ...state[userId],\n          ...userData\n        }\n      };\n    }\n    case types.REORDER_FOLDERS: {\n      const { userId, folderIds } = action;\n      return {\n        ...state,\n        [userId]: {\n          ...state[userId],\n          folderIds\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default usersById;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ProjectTile = ({ projectId, projectName, onClick }) => {\n  return (\n    <li className=\"project-grid__tile\">\n      <Link\n        className=\"project-grid__link\"\n        to={`/0/project/${projectId}`}\n        onClick={onClick}\n      >\n        <span className=\"project-grid__title\">{projectName}</span>\n      </Link>\n    </li>\n  );\n};\n\nconst ProjectGrid = ({ children }) => <ul className=\"project-grid\">{children}</ul>;\n\nexport { ProjectTile, ProjectGrid };\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadListsById = listsById => {\n  return {\n    type: types.LOAD_LISTS_BY_ID,\n    listsById\n  };\n};\n\nexport const fetchListsById = projectId => {\n  return async dispatch => {\n    try {\n      const listsById = await firebase.db\n        .collection('lists')\n        .where('projectId', '==', projectId)\n        .get()\n        .then(snapshot => {\n          const lists = {};\n          snapshot.forEach(doc => {\n            lists[doc.id] = {\n              listId: doc.id,\n              ...doc.data()\n            };\n          });\n          return lists;\n        });\n      dispatch(loadListsById(listsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserLists = userId => {\n  return async dispatch => {\n    try {\n      const listsById = await firebase.db\n        .collection('lists')\n        .where('userId', '==', userId)\n        .get()\n        .then(snapshot => {\n          const lists = {};\n          snapshot.forEach(doc => {\n            lists[doc.id] = {\n              listId: doc.id,\n              ...doc.data()\n            };\n          });\n          return lists;\n        });\n      dispatch(loadListsById(listsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateList = ({ listId, listData }) => {\n  return {\n    type: types.UPDATE_LIST,\n    listId,\n    listData\n  };\n};\n\nexport const addList = ({ listId, listData }) => {\n  return {\n    type: types.ADD_LIST,\n    listId,\n    listData\n  };\n};\n\nexport const deleteList = listId => {\n  return {\n    type: types.DELETE_LIST,\n    listId\n  };\n};\n\nexport const handleListSubscription = projectId => {\n  return async (dispatch, getState) => {\n    try {\n      firebase.db\n        .collection('lists')\n        .where('projectId', '==', projectId)\n        .onSnapshot(async querySnapshot => {\n          querySnapshot.docChanges().forEach(async change => {\n            const [listId, listData, changeType] = await Promise.all([\n              change.doc.id,\n              change.doc.data(),\n              change.type\n            ]);\n            console.log(listId, listData, changeType);\n            if (changeType === 'added') {\n              if (listId in getState().listsById) return;\n              dispatch(addList({ listId, listData }));\n              console.log('list added');\n            } else if (changeType === 'removed') {\n              dispatch(deleteList(listId));\n            } else {\n              dispatch(updateList({ listId, listData }));\n              console.log(`Updated List: ${listData.name}`);\n            }\n          });\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","export const LOAD_LISTS_BY_ID = 'LOAD_LISTS_BY_ID';\nexport const FETCH_LISTS_BY_ID = 'FETCH_LISTS_BY_ID';\nexport const DELETE_CARD = 'DELETE_CARD';\nexport const UPDATE_LIST = 'UPDATE_LIST';\nexport const ADD_LIST = 'ADD_LIST';\nexport const DELETE_LIST = 'DELETE_LIST';\n","\n/**\n * Checks if two arrays or objects are equal\n * @param {Array|Object} value\n * @param {Array|Object} other\n */\n\n// eslint-disable-next-line import/prefer-default-export\nexport const isEqual = (value, other) => {\n  const type = Object.prototype.toString.call(value);\n\n  // If both objects are not the same type, return false\n  if (type !== Object.prototype.toString.call(other)) return false;\n\n  const typeObj = '[object Object]';\n  const typeArr = '[object Array]';\n  // If items are neither objects nor arrays, return false\n  if (type !== typeObj && type !== typeArr) return false;\n\n  // Compare length of two items\n  const valueLen = type === typeArr ? value.length : Object.keys(value).length;\n  const otherLen = type === typeArr ? other.length : Object.keys(other).length;\n  if (valueLen !== otherLen) return false;\n\n  const compare = (item1, item2) => {\n    const typeFunc = '[object Function]';\n    const itemType = Object.prototype.toString.call(item1);\n    if (itemType !== Object.prototype.toString.call(item2)) return false;\n    if (itemType === typeObj || itemType === typeArr) {\n      return isEqual(item1, item2);\n    }\n    if (itemType === typeFunc) {\n      return item1.toString() === item2.toString();\n    }\n    return item1 === item2;\n  };\n\n  if (type === typeArr) {\n    for (let i = 0; i < valueLen; i++) {\n      if (!compare(value[i], other[i])) return false;\n    }\n  } else {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (compare(value[key], other[key]) === false) return false;\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * Delays callback execution until next browser repaint\n * Best used for `scroll` and `resize` window events\n * @param {Function} callback - The function to debounce\n */\n\nexport const windowDebouncer = callback => {\n  let request;\n\n  return (...args) => {\n    const context = this;\n\n    if (request) {\n      window.cancelAnimationFrame(request);\n    }\n\n    request = window.requestAnimationFrame(() => {\n      callback.apply(context, args);\n    });\n  };\n};\n\n\n/**\n * Returns a function that executes the first callback on its initial call\n * then the second callback on subsequent calls\n * @param {Function} first - The function executed only on its initial call\n * @param {Function} after - The function executed on subsequent calls\n */\nexport const firstThen = (first, after) => {\n  let count = 0;\n  return (...args) => {\n    count++;\n    if (count === 1) {\n      return first.apply(this, args);\n    } else {\n      return after.apply(this, args);\n    }\n  }\n};\n\nexport const count = (fn, invokeBeforeExecution) => {\n  let count = 0;\n  return (args) => {\n    count++;\n    if (count <= invokeBeforeExecution) {\n      return true;\n    } else {\n      return fn(args, count);\n    }\n  };\n}","import * as types from './types';\nimport firebase from '../../store/firebase';\nimport { utils } from '../../utils';\n\nexport const loadTasksById = tasksById => {\n  return {\n    type: types.LOAD_TASKS_BY_ID,\n    tasksById\n  };\n};\n\nexport const loadUserTasks = (userId, tasksById) => {\n  return {\n    type: types.LOAD_USER_TASKS,\n    userId,\n    tasksById\n  };\n};\n\nexport const fetchProjectTasks = projectId => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .where('projectId', '==', projectId)\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst handleInitialPayload = async (snapshot) => {\n          const tasks = await snapshot.docChanges().map(change => {\n            tasks[change.doc.id] = {\n              taskId: change.doc.id,\n              ...change.doc.data()\n            };\n          });\n          console.log(tasks);\n          return tasks;\n}\n\n\n\nconst syncTasks = (snapshot) => {\n  snapshot.docChanges().forEach(change => {\n    const taskId = change.doc.id;\n    const taskData = change.doc.data();\n    if (change.type === 'added') {\n      console.log('added task');\n      return dispatch => {\n        dispatch(addTask({ taskId, taskData }));\n      }\n    } else if (change.type === 'removed') {\n      return dispatch => {\n        dispatch(deleteTask(taskId));\n      }\n    } else {\n      return dispatch => {\n        dispatch(updateTask({ taskId, taskData }));\n      }\n    }\n  });\n};\n\nlet count = 0;\nconst handleTaskSubscription = (snapshot) => {\n  count++;\n  const initialLoad = count === 1;\n  const tasks = {};\n    if (initialLoad) {\n      console.log('is initial load');\n\n      snapshot.docChanges().forEach(change => {\n        tasks[change.doc.id] = {\n          taskId: change.doc.id,\n          ...change.doc.data()\n        };\n      });\n      console.log(tasks);\n      return tasks;\n    } else {\n      snapshot.docChanges().forEach(change => {\n        const taskId = change.doc.id;\n        const taskData = change.doc.data();\n        if (change.type === 'added') {\n          console.log('added task');\n          return dispatch => {\n            dispatch(addTask({ taskId, taskData }));\n          }\n        } else if (change.type === 'removed') {\n          return dispatch => {\n            dispatch(deleteTask(taskId));\n          }\n        } else {\n          return dispatch => {\n            dispatch(updateTask({ taskId, taskData }));\n          }\n        }\n      });\n    }\n}\n\n/*const handleTaskSubscription = utils.firstThen(handleInitialPayload, syncTasks);*/\n\nexport const syncUserTasks = userId => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .where('assignedTo', 'array-contains', userId)\n        .onSnapshot(handleTaskSubscription);\n     dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserTasks = userId => {\n  return async dispatch => {\n    try {\n      const tasksById = await firebase.db\n        .collection('tasks')\n        .where('assignedTo', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const tasks = {};\n          snapshot.forEach(doc => {\n            tasks[doc.id] = {\n              taskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return tasks;\n        });\n      dispatch(loadTasksById(tasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addTask = ({ taskId, taskData }) => {\n  return {\n    type: types.ADD_TASK,\n    taskId,\n    taskData\n  };\n};\n\nexport const deleteTask = taskId => {\n  return {\n    type: types.DELETE_TASK,\n    taskId\n  };\n};\n\nexport const updateTask = ({ taskId, taskData }) => {\n  return {\n    type: types.UPDATE_TASK,\n    taskId,\n    taskData\n  };\n};\n\nexport const updateTasksById = task => {\n  return {\n    type: types.UPDATE_TASKS_BY_ID,\n    task\n  };\n};\n\nexport const addTag = (taskId, tag) => {\n  return {\n    type: types.ADD_TAG,\n    taskId,\n    tag\n  };\n};\n","export const ADD_TASK = 'ADD_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\nexport const UPDATE_TASK = 'UPDATE_TASK';\nexport const SET_TASK_DUE_DATE = 'SET_TASK_DUE_DATE';\nexport const ADD_TASK_SUBTASK = 'ADD_TASK_SUBTASK';\nexport const REMOVE_TASK_SUBTASK = 'REMOVE_TASK_SUBTASK';\nexport const CHANGE_TASK_DESCRIPTION = 'CHANGE_TASK_DESCRIPTION';\nexport const SET_TASK_COLOR = 'SET_TASK_COLOR';\nexport const MOVE_TASK = 'MOVE_TASK';\nexport const LOAD_TASKS_BY_ID = 'LOAD_TASKS_BY_ID';\nexport const UPDATE_TASKS_BY_ID = 'UPDATE_TASKS_BY_ID';\nexport const ADD_TAG = 'ADD_TAG';\nexport const LOAD_USER_TASKS = 'LOAD_USER_TASKS';\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadSubtasksById = subtasksById => {\n  return {\n    type: types.LOAD_SUBTASKS_BY_ID,\n    subtasksById\n  };\n};\n\nexport const fetchSubtasksById = () => {\n  return async dispatch => {\n    try {\n      const subtasksById = await firebase.db\n        .collection('subtasks')\n        .get()\n        .then(snapshot => {\n          const subtasks = {};\n          snapshot.forEach(doc => {\n            subtasks[doc.id] = {\n              subtaskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return subtasks;\n        });\n      dispatch(loadSubtasksById(subtasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateSubtasksById = subtask => {\n  return {\n    type: types.UPDATE_SUBTASKS_BY_ID,\n    subtask\n  };\n};\n\nexport const fetchProjectSubtasks = projectId => {\n  return async dispatch => {\n    try {\n      const subtasksById = await firebase.db\n        .collection('subtasks')\n        .where('projectId', '==', projectId)\n        .get()\n        .then(snapshot => {\n          const subtasks = {};\n          snapshot.forEach(doc => {\n            subtasks[doc.id] = {\n              subtaskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return subtasks;\n        });\n      dispatch(loadSubtasksById(subtasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchTaskSubtasks = taskId => {\n  return async dispatch => {\n    try {\n      const subtasksById = await firebase.db\n        .collection('subtasks')\n        .where('taskId', '==', taskId)\n        .get()\n        .then(snapshot => {\n          const subtasks = {};\n          snapshot.forEach(doc => {\n            subtasks[doc.id] = {\n              subtaskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return subtasks;\n        });\n      dispatch(loadSubtasksById(subtasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserSubtasks = userId => {\n  return async dispatch => {\n    try {\n      const subtasksById = await firebase.db\n        .collection('subtasks')\n        .where('assignedTo', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const subtasks = {};\n          snapshot.forEach(doc => {\n            subtasks[doc.id] = {\n              subtaskId: doc.id,\n              ...doc.data()\n            };\n          });\n          return subtasks;\n        });\n      dispatch(loadSubtasksById(subtasksById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addSubtask = ({ subtaskId, subtaskData }) => {\n  return {\n    type: types.ADD_SUBTASK,\n    subtaskId,\n    subtaskData\n  };\n};\n\nexport const deleteSubtask = subtaskId => {\n  return {\n    type: types.DELETE_SUBTASK,\n    subtaskId\n  };\n};\n\nexport const updateSubtask = ({ subtaskId, subtaskData }) => {\n  return {\n    type: types.UPDATE_SUBTASK,\n    subtaskId,\n    subtaskData\n  };\n};\n","export const LOAD_SUBTASKS_BY_ID = 'LOAD_SUBTASKS_BY_ID';\nexport const FETCH_SUBTASKS_BY_ID = 'FETCH_SUBTASKS_BY_ID';\nexport const UPDATE_SUBTASKS_BY_ID = 'UPDATE_SUBTASKS_BY_ID';\nexport const ADD_SUBTASK = 'ADD_SUBTASK';\nexport const UPDATE_SUBTASK = 'UPDATE_SUBTASK';\nexport const DELETE_SUBTASK = 'DELETE_SUBTASK';\n","import * as types from './types';\nimport firebase from '../../store/firebase';\nimport { loadListsById } from '../lists/actions';\nimport { loadTasksById } from '../tasks/actions';\nimport { loadSubtasksById } from '../subtasks/actions';\n\nexport const loadProjectsById = projectsById => {\n  return {\n    type: types.LOAD_PROJECTS_BY_ID,\n    projectsById\n  };\n};\n\nexport const loadProject = (projectId, projectData) => {\n  return {\n    type: types.LOAD_PROJECT,\n    projectId,\n    projectData\n  };\n};\n\nexport const fetchProjectsById = userId => {\n  return async dispatch => {\n    try {\n      const projectsById = await firebase.db\n        .collection('projects')\n        .where('memberIds', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const projects = {};\n          snapshot.forEach(doc => {\n            projects[doc.id] = {\n              projectId: doc.id,\n              ...doc.data()\n            };\n          });\n          return projects;\n        });\n      dispatch(loadProjectsById(projectsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchProjectDetails = async projectId => {\n  try {\n    const project = await firebase.getDocRef(`projects/${projectId}`).get();\n    return {\n      projectId,\n      ...project.data()\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchProjectLists = async projectId => {\n  try {\n    const projectLists = await firebase.db\n      .collection('lists')\n      .where('projectId', '==', projectId)\n      .get()\n      .then(snapshot => {\n        const lists = {};\n        snapshot.forEach(doc => {\n          lists[doc.id] = {\n            listId: doc.id,\n            ...doc.data()\n          };\n        });\n        return lists;\n      });\n    return projectLists;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchProjectTasks = async projectId => {\n  try {\n    const projectTasks = await firebase.db\n      .collection('tasks')\n      .where('projectId', '==', projectId)\n      .get()\n      .then(snapshot => {\n        const tasks = {};\n        snapshot.forEach(doc => {\n          tasks[doc.id] = {\n            taskId: doc.id,\n            ...doc.data()\n          };\n        });\n        return tasks;\n      });\n    return projectTasks;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchProjectSubtasks = async projectId => {\n  try {\n    const projectSubtasks = await firebase.db\n      .collection('subtasks')\n      .where('projectId', '==', projectId)\n      .get()\n      .then(snapshot => {\n        const subtasks = {};\n        snapshot.forEach(doc => {\n          subtasks[doc.id] = {\n            subtaskId: doc.id,\n            ...doc.data()\n          };\n        });\n        return subtasks;\n      });\n    return projectSubtasks;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchProjectContent = projectId => {\n  return async dispatch => {\n    try {\n      const subtasks = fetchProjectSubtasks(projectId);\n      const tasks = fetchProjectTasks(projectId);\n      const lists = fetchProjectLists(projectId);\n      const project = await Promise.all([subtasks, tasks, lists]);\n      dispatch(loadSubtasksById(project[0]));\n      dispatch(loadTasksById(project[1]));\n      dispatch(loadListsById(project[2]));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateProject = (projectId, projectData) => {\n  return {\n    type: types.UPDATE_PROJECT,\n    projectId,\n    projectData\n  };\n};\n\nexport const reorderLists = (projectId, listIds) => {\n  return {\n    type: types.REORDER_LISTS,\n    projectId,\n    listIds\n  };\n};\n\nexport const updateListIds = (projectId, listIds) => {\n  return {\n    type: types.UPDATE_LIST_IDS,\n    projectId,\n    listIds\n  };\n};\n\nexport const updateProjectTags = (projectId, tags) => {\n  return {\n    type: types.UPDATE_PROJECT_TAGS,\n    projectId,\n    tags\n  };\n};\n","export const LOAD_PROJECTS_BY_ID = 'LOAD_PROJECTS_BY_ID';\nexport const LOAD_PROJECT = 'LOAD_PROJECT';\nexport const UPDATE_PROJECT = 'UPDATE_PROJECT';\nexport const REORDER_LISTS = 'REORDER_LISTS';\nexport const UPDATE_LIST_IDS = 'UPDATE_LIST_IDS';\nexport const UPDATE_PROJECT_TAGS = 'UPDATE_PROJECT_TAGS';\nexport const ADD_TAG = 'ADD_TAG';\n","export const getProjectsById = state => {\n  return state.projectsById;\n};\n\nexport const getProjectsArray = state => {\n  const { projectsById } = state;\n  return Object.keys(projectsById).map(projectId => projectsById[projectId]);\n};\n\nexport const getProject = (state, projectId) => {\n  const { projectsById } = state;\n  return projectsById[projectId];\n};\n\nexport const getProjectTags = (state, projectId) => {\n  if (!projectId) return {};\n  const { projectsById } = state;\n  return projectsById[projectId].tags;\n};\n\nexport const getProjectName = (state, projectId) => {\n  if (!projectId) return '';\n  const { projectsById } = state;\n  return projectsById[projectId].name;\n};\n\nexport const getProjectColor = (state, projectId) => {\n  if (!projectId) return '';\n  const { projectsById } = state;\n  return projectsById[projectId].color;\n};\n","import * as types from './types';\n\nconst projectsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_PROJECTS_BY_ID: {\n      const { projectsById } = action;\n      return {\n        ...state,\n        ...projectsById\n      };\n    }\n    case types.LOAD_PROJECT: {\n      const { projectId, projectData } = action;\n      return {\n        ...state,\n        [projectId]: {\n          projectId,\n          ...projectData\n        }\n      };\n    }\n    case types.UPDATE_PROJECT: {\n      const { projectId, projectData } = action;\n      return {\n        ...state,\n        [projectId]: {\n          ...state[projectId],\n          ...projectData\n        }\n      };\n    }\n    case types.UPDATE_LIST_IDS:\n    case types.REORDER_LISTS: {\n      const { projectId, listIds } = action;\n      return {\n        ...state,\n        [projectId]: {\n          ...state[projectId],\n          listIds\n        }\n      };\n    }\n    case types.UPDATE_PROJECT_TAGS: {\n      const { projectId, tags } = action;\n      return {\n        ...state,\n        [projectId]: {\n          ...state[projectId],\n          tags: {\n            ...tags\n          }\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default projectsById;\n","export const SELECT_PROJECT = 'SELECT_PROJECT';\n\nexport const selectProject = projectId => {\n  return {\n    type: SELECT_PROJECT,\n    projectId\n  };\n};\n\nconst INITIAL_STATE = null;\n\nexport const selectedProject = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SELECT_PROJECT:\n      return action.projectId;\n    default:\n      return state;\n  }\n};\n\nexport const getSelectedProjectId = state => state.selectedProject;\n\nexport const getSelectedProject = state => {\n  const { selectedProject: projectId, projectsById } = state;\n  return projectsById[projectId];\n};\n","import React from 'react';\nimport featherIcons from '../../assets/feather/feather-sprite.svg';\n\nconst Icon = ({ name, className, width, height }) => (\n  <svg\n    className={`feather feather-${name} ${className}`}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    viewBox=\"0 0 24 24\"\n    width={width}\n    height={height}\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <use xlinkHref={`${featherIcons}#${name}`} />\n  </svg>\n);\n\nIcon.defaultProps = {\n  className: '',\n  width: 24,\n  height: 24\n};\n\nexport default Icon;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ProjectGrid, ProjectTile } from './ProjectGrid';\nimport './ProjectGrid.scss';\nimport { withAuthorization } from '../Session';\nimport { projectActions, projectSelectors } from '../../ducks/projects';\nimport { selectProject as selectProjectAction } from '../../ducks/selectedProject';\nimport { Icon } from '../Icon';\n\nclass ProjectGridContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const { userId, firebase, updateProject } = this.props;\n    this.projectObserver = firebase.db\n      .collection('projects')\n      .where('memberIds', 'array-contains', userId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const projectId = change.doc.id;\n          const projectData = change.doc.data();\n          updateProject(projectId, projectData);\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.projectObserver();\n  }\n\n  render() {\n    const { projectsArray, selectProject } = this.props;\n    const projectTiles = projectsArray.map(project => {\n      const { name: projectName, projectId } = project;\n      return (\n        <ProjectTile\n          key={projectId}\n          projectName={projectName}\n          projectId={projectId}\n          onClick={() => selectProject(projectId)}\n        />\n      );\n    });\n    return (\n      <ProjectGrid>\n        {projectTiles}\n        <button\n          type=\"button\"\n          className=\"project-grid__tile project-grid__btn--add\"\n          onClick={this.props.openProjectComposer}\n        >\n          <Icon name=\"plus-circle\" />\n          Create project\n        </button>\n      </ProjectGrid>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    projectsById: projectSelectors.getProjectsById(state),\n    projectsArray: projectSelectors.getProjectsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchProjectsById: userId =>\n      dispatch(projectActions.fetchProjectsById(userId)),\n    updateProject: (projectId, projectData) =>\n      dispatch(projectActions.updateProject(projectId, projectData)),\n    selectProject: projectId => dispatch(selectProjectAction(projectId))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ProjectGridContainer)\n);\n","import React, { Component, createRef } from 'react';\n\nconst withOutsideClick = WrappedComponent => {\n  class WithOutsideClick extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        isTouchEnabled: false\n      };\n      this.componentInstance = createRef();\n    }\n\n    componentDidMount() {\n      document.addEventListener('touchstart', this.handleTouch);\n      document.addEventListener('click', this.handleOutsideClick, false);\n    }\n\n    componentWillUnmount() {\n      const { isTouchEnabled } = this.state;\n      if (isTouchEnabled) {\n        document.removeEventListener('touchstart', this.handleOutsideClick);\n      } else {\n        document.removeEventListener('click', this.handleOutsideClick);\n        document.removeEventListener('touchstart', this.handleTouch);\n      }\n    }\n\n    handleTouch = () => {\n      this.setState({\n        isTouchEnabled: true\n      });\n      // if touch is detected, listen for touch events instead of click events\n      // to improve detection on touch devices\n      // remove touch handler to prevent unnecessary refires\n      document.removeEventListener('touchstart', this.handleTouch);\n      // remove outside click handler from click events\n      document.removeEventListener('click', this.handleOutsideClick);\n      // reattach outside click handler to touchstart events\n      document.addEventListener('touchstart', this.handleOutsideClick);\n    };\n\n    handleOutsideClick = e => {\n      if (!this.componentEl) {\n        throw new Error('Must set component ref to prop innerRef!');\n      }\n      if (\n        this.componentEl.contains(e.target) ||\n        (!this.componentInstance.current.onOutsideClick &&\n          !this.props.onOutsideClick)\n      )\n        return;\n        if (this.componentInstance.current.onOutsideClick) {\n          this.componentInstance.current.onOutsideClick(e);\n        }\n\n      const { onOutsideClick } = this.props;\n      if (onOutsideClick) {\n        onOutsideClick(e);\n      }\n    };\n\n    render() {\n      return (\n        <WrappedComponent\n          ref={this.componentInstance}\n          innerRef={el => (this.componentEl = el)}\n          {...this.props}\n        />\n      );\n    }\n  }\n\n  /*\n  return forwardRef((props, ref) => {\n    return <WithOutsideClick {...props} forwardedRef={ref} />;\n  });\n  */\n  return WithOutsideClick;\n};\n\nexport default withOutsideClick;\n","import React, { Component } from 'react';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { withOutsideClick } from '../withOutsideClick';\nimport './Modal.scss';\n\nclass Modal extends Component {\n  \n  onOutsideClick = e => {\n    const { onModalClose } = this.props;\n    onModalClose(e);\n  };\n\n  render() {\n    const {\n      onModalClose,\n      children,\n      onModalClick,\n      size = 'md',\n      classes,\n      id,\n      innerRef\n    } = this.props;\n    return (\n      <div className={`modal ${classes.modal || ''}`} onClick={onModalClick}>\n        <div\n          id={id}\n          ref={innerRef}\n          className={`modal__content ${\n            classes.content || ''\n          } modal__content--${size}`}\n        >\n          <Button\n            type=\"button\"\n            className={`modal__btn--close ${\n            classes.button || ''\n          }`}\n            onClick={onModalClose}\n            iconOnly\n          >\n            <Icon name=\"x\" />\n          </Button>\n          {children}\n        </div>\n      </div>\n    );\n  }\n}\n\nModal.defaultProps = {\n  classes: {\n    modal: '',\n    content: '',\n    button: ''\n  }\n};\n\nexport default withOutsideClick(Modal);\n","import React, { Component } from 'react';\nimport { Modal } from '../Modal';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\nimport './ProjectComposer.scss';\n\nconst INITIAL_STATE = {\n  projectTitle: ''\n};\n\nexport default class ProjectComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { projectTitle } = this.state;\n    const { handleSubmit, onClose } = this.props;\n    this.props.handleSubmit(projectTitle);\n    this.props.onClose();\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { projectTitle } = this.state;\n    return (\n      <Modal onModalClose={this.props.onClose} size=\"sm\">\n      <h3 className=\"project-composer__title\">Create new project</h3>\n        <form onSubmit={this.onSubmit}>\n          <Input\n            name=\"projectTitle\"\n            title=\"Project Title\"\n            value={projectTitle}\n            onChange={this.onChange}\n            type=\"text\"\n          />\n          <Button\n            className=\"project-composer__btn--add\"\n            type=\"submit\"\n            onClick={this.onSubmit}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Create Project\n          </Button>\n        </form>\n      </Modal>\n    );\n  }\n}\n","export const LIST = 'LIST';\nexport const TASK = 'TASK';\nexport const SUBTASK = 'SUBTASK';\nexport const FOLDER = 'FOLDER';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input } from '../Input';\nimport { Icon } from '../Icon';\nimport { withAuthorization } from '../Session';\nimport { projectSelectors } from '../../ducks/projects';\nimport { Button } from '../Button';\nimport './ListComposer.scss';\n\nconst INITIAL_STATE = {\n  name: '',\n  isActive: false\n};\n\nclass ListComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ name: '' });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { name } = this.state;\n    const { projectId } = this.props;\n    this.props.firebase.addList({ projectId, name });\n    this.resetForm();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = e => {\n    if (e.target.value === '') {\n      this.setState({\n        isActive: false\n      });\n    }\n  };\n\n  render() {\n    const { name, isActive } = this.state;\n    return (\n      <div\n        className={`list-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"list-composer__form\" onSubmit={this.onSubmit}>\n          <Input\n            onChange={this.onChange}\n            value={name}\n            placeholder={isActive ? 'Enter list title...' : 'Add a list'}\n            required\n            name=\"name\"\n            hideLabel\n            className=\"list-composer__input\"\n          />\n          {isActive && (\n            <div className=\"list-composer__footer\">\n              <Button\n                className=\"list-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add List\n              </Button>\n              <Button\n                className=\"list-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = state => {\n  return {\n    projectsById: projectSelectors.getProjectsById(state),\n    projectsArray: projectSelectors.getProjectsArray(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ListComposer)\n);\n","import React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { ListComposer } from '../ListComposer';\n\nconst Board = props => {\n  const { projectId, children } = props;\n  return (\n    <Droppable\n      droppableId={projectId}\n      type={droppableTypes.LIST}\n      direction=\"horizontal\"\n    >\n      {provided => (\n        <div\n          className=\"board\"\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n        >\n          {children}\n          {provided.placeholder}\n          <ListComposer projectId={projectId} />\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nexport default Board;\n","export const SELECT_TASK = 'SELECT_TASK';\n\nexport const selectTask = taskId => {\n  return {\n    type: SELECT_TASK,\n    taskId\n  };\n};\n\nconst INITIAL_STATE = null;\n\nexport const selectedTask = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SELECT_TASK:\n      return action.taskId;\n    default:\n      return state;\n  }\n};\n\nexport const getSelectedTaskId = state => state.selectedTask;\n\nexport const getSelectedTask = state => {\n  const { selectedTask: taskId, tasksById } = state;\n  return tasksById[taskId];\n};\n","export const getListsById = state => {\n  return state.listsById;\n};\n\nexport const getListName = (state, listId) => {\n  if (!listId) return '';\n  const { listsById } = state;\n  return listsById[listId].name;\n};\n\nexport const getSelectedProjectLists = state => {\n  const { listsById, projectsById, selectedProject } = state;\n  const project = projectsById[selectedProject];\n  if (!project) return [];\n  const { listIds } = project;\n  if (!listIds) return [];\n\n  return listIds.map(listId => listsById[listId]);\n};\n\nexport const getProjectLists = (state, listIds) => {\n  const { listsById } = state;\n  if (!listIds) return [];\n\n  return listIds.map(listId => listsById[listId]);\n};\n","import * as types from './types';\n\nconst listsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_LISTS_BY_ID: {\n      const { listsById } = action;\n      return {\n        ...state,\n        ...listsById\n      };\n    }\n    case types.UPDATE_LIST: {\n      const { listId, listData } = action;\n      return {\n        ...state,\n        [listId]: {\n          ...state[listId],\n          ...listData\n        }\n      };\n    }\n    case types.ADD_LIST: {\n      const { listId, listData } = action;\n      return {\n        ...state,\n        [listId]: {\n          listId,\n          ...listData\n        }\n      };\n    }\n    case types.DELETE_LIST: {\n      const { listId } = action;\n      const { [listId]: deletedList, ...restOfLists } = state;\n      return restOfLists;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default listsById;\n","export const getTasksById = state => {\n  return state.tasksById;\n};\n\nexport const getListTasks = (state, taskIds) => {\n  const { tasksById } = state;\n  return taskIds.map(taskId => tasksById[taskId]);\n};\n\nexport const getFolderTasks = (state, taskIds) => {\n  const { tasksById } = state;\n  return taskIds.map(taskId => tasksById[taskId]);\n};\n\nexport const getSimpleTasks = (state, taskIds) => {\n  const { tasksById } = state;\n  if (!taskIds) return {};\n\n  return taskIds.reduce((tasks, taskId) => {\n    const { name, isCompleted } = tasksById[taskId];\n    tasks[taskId] = {\n      name,\n      isCompleted\n    };\n    return tasks;\n  }, {});\n};\n\nexport const getTaskTags = (state, ownProps) => {\n  if (!ownProps.projectId) return [];\n  const { projectsById } = state;\n  const { projectId, tags: taskTags } = ownProps;\n  const { tags: projectTags } = projectsById[projectId];\n\n  if (!taskTags || !projectTags) return [];\n  return taskTags.map(taskTag => projectTags[taskTag]);\n};\n","import * as types from './types';\n\nconst tasksById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_TASKS_BY_ID: {\n      const { tasksById } = action;\n      return {\n        ...state,\n        ...tasksById\n      };\n    }\n    case types.UPDATE_TASKS_BY_ID: {\n      const { task } = action;\n      console.log('tasks updated');\n      return {\n        ...state,\n        ...task\n      };\n    }\n    case types.ADD_TASK: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        [taskId]: {\n          taskId,\n          ...taskData\n        }\n      };\n    }\n    case types.DELETE_TASK: {\n      const { taskId } = action;\n      const { [taskId]: deletedTask, ...restOfTasks } = state;\n      return restOfTasks;\n    }\n    case types.UPDATE_TASK: {\n      const { taskId, taskData } = action;\n      return {\n        ...state,\n        [taskId]: {\n          ...state[taskId],\n          ...taskData\n        }\n      };\n    }\n    case types.ADD_TAG: {\n      const { taskId, tag } = action;\n      return {\n        ...state,\n        [taskId]: {\n          ...state[taskId],\n          tags: [...state[taskId].tags, tag]\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default tasksById;\n","export const getSubtasksById = state => {\n  const { subtasksById } = state;\n  return subtasksById;\n};\n\nexport const getSubtasksArray = (state, subtaskIds) => {\n  const { subtasksById } = state;\n  if (!subtaskIds) return [];\n\n  return subtaskIds.map(subtaskId => {\n    return subtasksById[subtaskId];\n  });\n};\n\nexport const getSimpleSubtasks = (state, subtaskIds) => {\n  const { subtasksById } = state;\n  if (!subtaskIds) return {};\n\n  return subtaskIds.reduce((subtasks, subtaskId) => {\n    const { name, isCompleted } = subtasksById[subtaskId];\n        subtasks[subtaskId] = {\n          name,\n          isCompleted\n        };\n        return subtasks;\n      }, {});\n  };\n\nexport const getActiveSubtasks = (state, subtaskIds) => {\n  const subtasks = getSubtasksArray(state, subtaskIds);\n  return subtasks.filter(subtask => !subtask.isCompleted);\n};\n\nexport const getCompletedSubtasks = (state, subtaskIds) => {\n  const subtasks = getSubtasksArray(state, subtaskIds);\n  if (subtasks.includes(undefined)) return [];\n  return subtasks.filter(subtask => subtask.isCompleted);\n};\n","import * as types from './types';\n\nconst subtasksById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_SUBTASKS_BY_ID: {\n      const { subtasksById } = action;\n      return {\n        ...state,\n        ...subtasksById\n      };\n    }\n    case types.ADD_SUBTASK: {\n      const { subtaskId, subtaskData } = action;\n      return {\n        ...state,\n        [subtaskId]: {\n          subtaskId,\n          ...subtaskData\n        }\n      };\n    }\n    case types.DELETE_SUBTASK: {\n      const { subtaskId } = action;\n      const { [subtaskId]: deletedSubtask, ...restOfSubtasks } = state;\n      return restOfSubtasks;\n    }\n    case types.UPDATE_SUBTASK: {\n      const { subtaskId, subtaskData } = action;\n      return {\n        ...state,\n        [subtaskId]: {\n          ...state[subtaskId],\n          ...subtaskData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default subtasksById;\n","export const BACKSPACE = 'Backspace';\nexport const ENTER = 'Enter';\nexport const TAB = 'Tab';\nexport const ARROW_DOWN = 'ArrowDown';\nexport const ARROW_UP = 'ArrowUp';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon } from '../Icon';\nimport { withFirebase } from '../Firebase';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport { Input } from '../Input';\nimport { Button } from '../Button';\nimport * as keys from '../../constants/keys';\nimport './TaskComposer.scss';\n\nconst INITIAL_STATE = {\n  name: '',\n  isActive: false\n};\n\nclass TaskComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ name: '' });\n  };\n\n  onSubmit = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { name } = this.state;\n    const {\n      userId,\n      folderId,\n      firebase,\n      projectId,\n      projectName,\n      listId,\n      listName\n    } = this.props;\n    firebase.addTask({\n      name,\n      userId,\n      folderId,\n      projectId,\n      projectName,\n      listId,\n      listName\n    });\n    this.resetForm();\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onBlur = e => {\n    if (e.target.value !== '') return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const { name, isActive } = this.state;\n\n    return (\n      <div\n        className={`task-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"task-composer__form\" onSubmit={this.onSubmit}>\n          <Button\n            className=\"task-composer__btn--submit\"\n            type=\"submit\"\n            onClick={this.onSubmit}\n            iconOnly\n          >\n            <Icon name=\"plus-circle\" />\n          </Button>\n          <Input\n            onChange={this.onChange}\n            value={name}\n            placeholder=\"Add a task\"\n            isRequired\n            name=\"name\"\n            className=\"task-composer__input\"\n            onKeyDown={this.onSubmit}\n            hideLabel\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userId: currentUserSelectors.getCurrentUserId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TaskComposer)\n);\n","import React, { Component, createRef } from 'react';\nimport './Textarea.scss';\n\nexport default class Textarea extends Component {\n  static defaultProps = {\n    isAutoHeightResizeEnabled: true\n  };\n\n  constructor(props) {\n    super(props);\n    this.textareaEl = createRef();\n  }\n\n  componentDidMount() {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n    this.autoHeightResize();\n  }\n\n  autoHeightResize = () => {\n    const { isAutoHeightResizeEnabled } = this.props;\n    if (!isAutoHeightResizeEnabled) return;\n\n    this.textareaEl.current.style.height = '0px'; // resets scroll height\n    this.textareaEl.current.style.height = `${\n      this.textareaEl.current.scrollHeight\n    }px`;\n  };\n\n  render() {\n    const {\n      className,\n      name,\n      value,\n      onChange,\n      placeholder,\n      isRequired,\n      onBlur,\n      onFocus,\n      onKeyDown,\n      onDragStart,\n      isReadOnly\n    } = this.props;\n    return (\n      <textarea\n        className={`textarea ${className}`}\n        id={name}\n        name={name}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={isRequired}\n        onBlur={onBlur}\n        onInput={this.autoHeightResize}\n        ref={this.textareaEl}\n        onFocus={onFocus}\n        onKeyDown={onKeyDown}\n        onDragStart={onDragStart}\n        readOnly={isReadOnly}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon } from '../Icon';\nimport { withFirebase } from '../Firebase';\nimport { projectActions, projectSelectors } from '../../ducks/projects';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport * as keys from '../../constants/keys';\nimport './CardComposer.scss';\n\nconst INITIAL_STATE = {\n  name: '',\n  isActive: false\n};\n\nclass CardComposer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  resetForm = () => {\n    this.setState({ name: '' });\n  };\n\n  onSubmit = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { name } = this.state;\n    const {\n      firebase,\n      projectId,\n      projectName,\n      listId,\n      listName,\n      userId\n    } = this.props;\n    firebase.addTask({\n      projectId,\n      listId,\n      name,\n      projectName,\n      listName,\n      userId\n    });\n    this.resetForm();\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  onBlur = e => {\n    if (e.target.value !== '') return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const { name, isActive } = this.state;\n\n    return (\n      <div\n        className={`card-composer${isActive ? ' is-active' : ''}`}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n      >\n        <form className=\"card-composer__form\" onSubmit={this.onSubmit}>\n          <Textarea\n            onChange={this.onChange}\n            value={name}\n            placeholder={isActive ? 'Enter card title...' : 'Add a card'}\n            isRequired\n            name=\"name\"\n            className=\"card-composer__textarea\"\n            isAutoHeightResizeEnabled={false}\n            onKeyDown={this.onSubmit}\n          />\n          {isActive && (\n            <div className=\"card-composer__footer\">\n              <Button\n                className=\"card-composer__btn--add\"\n                type=\"submit\"\n                onClick={this.onSubmit}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Add Card\n              </Button>\n              <Button\n                className=\"card-composer__btn--close\"\n                type=\"reset\"\n                onClick={this.onReset}\n                size=\"sm\"\n                iconOnly\n              >\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userId: currentUserSelectors.getCurrentUserId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateProjectsById: project =>\n      dispatch(projectActions.updateProjectsById(project))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CardComposer)\n);\n","import React from 'react';\nimport './Menu.scss';\n\nconst Menu = ({ children, onClick, className = '', menuRef }) => {\n  return (\n    <ul className={`menu ${className}`} onClick={onClick} ref={menuRef}>\n      {children}\n    </ul>\n  );\n};\n\nexport default Menu;\n","import React from 'react';\nimport './Menu.scss';\n\nconst MenuItem = ({ children, className = '' }) => {\n  return <li className={`menu__item ${className}`}>{children}</li>;\n};\n\nexport default MenuItem;\n","import React, { Component } from 'react';\n\nexport default class Popover extends Component {\n  state = {\n    isTouchEnabled: false\n  };\n\n  componentDidMount() {\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick, false);\n  }\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  handleOutsideClick = e => {\n    const { onOutsideClick } = this.props;\n    onOutsideClick(e.target);\n  };\n\n  handleTouch = () => {\n    this.setState({\n      isTouchEnabled: true\n    });\n    // remove touch handler to prevent unnecessary refires\n    document.removeEventListener('touchstart', this.handleTouch);\n    // remove outside click handler from click events\n    document.removeEventListener('click', this.handleOutsideClick);\n    // reattach outside click handler to touchstart events\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  render() {\n    const { className, onClick, style, children } = this.props;\n    return (\n      <div className={`popover ${className}`} onClick={onClick} style={style}>\n        {children}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from '../Button';\nimport Popover from './Popover';\nimport './Popover.scss';\n\nexport default class PopoverWrapper extends Component {\n  state = {\n    isActive: 'isActive' in this.props ? null : false\n  };\n\n  static defaultProps = {\n    classes: {\n      wrapper: '',\n      popover: ''\n    },\n    buttonProps: {},\n    align: 'left',\n    anchorEl: null\n  };\n\n  handleOutsideClick = target => {\n    if (this.componentEl && this.componentEl.contains(target)) return;\n    const { onOutsideClick, onPopoverClose } = this.props;\n\n    if (onOutsideClick) {\n      onOutsideClick();\n    } else {\n      this.setState({\n        isActive: false\n      });\n  \n      if (onPopoverClose) {\n        onPopoverClose();\n      }\n    }\n  };\n\n  toggleOpen = () => {\n    const { onButtonClick } = this.props;\n\n    if (onButtonClick) {\n      onButtonClick();\n    } else {\n      this.setState(prevState => ({\n        isActive: !prevState.isActive\n      }));\n    }\n  };\n\n  handleClose = e => {\n    if ('isActive' in this.props) return;\n    if (e.target.matches('input')) return;\n    this.setState({\n      isActive: false\n    });\n  };\n\n  render() {\n    const {\n      children,\n      alignInner,\n      onWrapperClick,\n      alignOuter,\n      buttonProps,\n      classes,\n      anchorEl\n    } = this.props;\n    const isActive = 'isActive' in this.props ? this.props.isActive : this.state.isActive;\n\n    let popoverWrapperStyle = null;\n\n    if (anchorEl) {\n      const { offsetTop, offsetLeft } = anchorEl;\n      popoverWrapperStyle = {\n        position: 'absolute',\n        top: offsetTop,\n        [alignOuter]: offsetLeft\n      };\n    }\n\n    return (\n      <div\n        className={`popover-wrapper ${isActive ? 'is-active' : ''} ${\n          classes.wrapper\n        }`}\n        ref={el => (this.componentEl = el)}\n        style={popoverWrapperStyle}\n        onClick={onWrapperClick}\n      >\n        <Button\n          type=\"button\"\n          onClick={this.toggleOpen}\n          buttonRef={this.props.buttonRef}\n          {...buttonProps}\n        />\n        {isActive && (\n          <Popover\n            className={`align-${alignInner} ${classes.popover}`}\n            onClick={this.handleClose}\n            onOutsideClick={this.handleOutsideClick}\n          >\n            {children}\n          </Popover>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport './Tag.scss';\n\nconst Tag = ({ text, color, size, onDelete, className, tagRef, variant }) => (\n  <span\n    className={`tag tag--${size} bg--${color} ${\n      variant !== 'default' ? `tag--${variant}` : ''\n    } ${className}`}\n    ref={tagRef}\n  >\n    {text}\n    {size === 'md' && (\n      <Button\n        type=\"button\"\n        size=\"sm\"\n        className=\"tag__btn--delete\"\n        onClick={onDelete}\n        iconOnly\n      >\n        <Icon name=\"x\" />\n      </Button>\n    )}\n  </span>\n);\n\nTag.defaultProps = {\n  className: '',\n  onDelete: () => null,\n  color: 'default',\n  size: 'md',\n  variant: 'default'\n};\n\nexport default Tag;\n","import React, { Component } from 'react';\nimport './Avatar.scss';\n\nexport default class Avatar extends Component {\n  static defaultProps = {\n    imgSrc: null,\n    classes: {\n      avatar: '',\n      img: '',\n      placeholder: ''\n    },\n    size: 'md',\n    variant: 'circle'\n  };\n\n  getUserInitials = fullName => {\n    return fullName\n      .split(' ')\n      .map(name => name.charAt(0))\n      .join('')\n      .toUpperCase();\n  };\n\n  render() {\n    const {\n      imgSrc,\n      imgProps,\n      classes,\n      fullName,\n      variant,\n      color,\n      size\n    } = this.props;\n    return (\n      <div\n        className={`avatar avatar--${size} avatar--${variant} ${\n          classes.avatar\n        }`}\n      >\n        {imgSrc !== null ? (\n          <img\n            src={imgSrc}\n            alt={fullName}\n            className={`avatar__img ${classes.img}`}\n            {...imgProps}\n          />\n        ) : (\n          <div\n            className={`avatar__placeholder ${classes.placeholder}`}\n            style={{ backgroundColor: color }}\n          >\n            {this.getUserInitials(fullName)}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","// Full names, shortnames, and total days of months,\n// excluding February (depends on leap year)\nexport const MONTHS = [\n  {\n    long: 'January',\n    short: 'Jan',\n    daysTotal: 31\n  },\n  {\n    long: 'February',\n    short: 'Feb',\n    daysTotal: null\n  },\n  {\n    long: 'March',\n    short: 'Mar',\n    daysTotal: 31\n  },\n  {\n    long: 'April',\n    short: 'Apr',\n    daysTotal: 30\n  },\n  {\n    long: 'May',\n    short: 'May',\n    daysTotal: 31\n  },\n  {\n    long: 'June',\n    short: 'Jun',\n    daysTotal: 30\n  },\n  {\n    long: 'July',\n    short: 'Jul',\n    daysTotal: 31\n  },\n  {\n    long: 'August',\n    short: 'Aug',\n    daysTotal: 31\n  },\n  {\n    long: 'September',\n    short: 'Sep',\n    daysTotal: 30\n  },\n  {\n    long: 'October',\n    short: 'Oct',\n    daysTotal: 31\n  },\n  {\n    long: 'November',\n    short: 'Nov',\n    daysTotal: 30\n  },\n  {\n    long: 'December',\n    short: 'Dec',\n    daysTotal: 31\n  }\n];\n\n// Full names and shortnames of days of week\nexport const WEEK_DAYS = [\n  { long: 'Sunday', short: 'Sun', narrow: 'S' },\n  { long: 'Monday', short: 'Mon', narrow: 'M' },\n  { long: 'Tuesday', short: 'Tue', narrow: 'T' },\n  { long: 'Wednesday', short: 'Wed', narrow: 'W' },\n  { long: 'Thursday', short: 'Thu', narrow: 'T' },\n  { long: 'Friday', short: 'Fri', narrow: 'F' },\n  { long: 'Saturday', short: 'Sat', narrow: 'S' }\n];\n","/* eslint-disable default-case */\n/* eslint-disable no-nested-ternary */\nimport { MONTHS, WEEK_DAYS } from './constants';\n\nexport const isLeapYear = year =>\n  (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n\nexport const getMonthFirstDay = (monthIndex, year) =>\n  new Date(year, monthIndex, 1).getDay();\n\nexport const isToday = date =>\n  new Date().setHours(0, 0, 0, 0) === date.setHours(0, 0, 0, 0);\n\nexport const isYesterday = date => {\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  return today.setDate(today.getDate() - 1) === date.setHours(0, 0, 0, 0);\n};\n\nexport const isTomorrow = date => {\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  return today.setDate(today.getDate() + 1) === date.setHours(0, 0, 0, 0);\n};\n\nexport const isThisYear = date => {\n  return date.getFullYear() === new Date().getFullYear();\n};\n\nexport const getMonthDays = (monthIndex, year) => {\n  if (monthIndex === 1) {\n    return isLeapYear(year) ? 29 : 28;\n  }\n  return MONTHS[monthIndex].daysTotal;\n};\n\nexport const getPrevMonth = (monthIndex, year) => {\n  return {\n    month: monthIndex > 0 ? monthIndex - 1 : 11,\n    year: monthIndex > 0 ? year : year - 1\n  };\n};\n\nexport const getNextMonth = (monthIndex, year) => {\n  return {\n    month: monthIndex < 11 ? monthIndex + 1 : 0,\n    year: monthIndex < 11 ? year : year + 1\n  };\n};\n\nexport const getMonthDates = (month, year) => {\n  const monthDays = getMonthDays(month, year);\n  const monthFirstDay = getMonthFirstDay(month, year);\n  const { month: prevMonth, year: prevMonthYear } = getPrevMonth(month, year);\n  const prevMonthDays = getMonthDays(prevMonth, prevMonthYear);\n  const daysFromPrevMonth = monthFirstDay;\n  const daysFromNextMonth = 7 - ((monthFirstDay + monthDays) % 7);\n  const prevMonthDates = [...new Array(daysFromPrevMonth)].map((n, i) => {\n    return {\n      day: prevMonthDays - daysFromPrevMonth + i + 1,\n      month: prevMonth,\n      year: prevMonthYear\n    };\n  });\n\n  const thisMonthDates = [...new Array(monthDays)].map((n, i) => {\n    return {\n      day: i + 1,\n      month,\n      year\n    };\n  });\n\n  const nextMonthDates = [...new Array(daysFromNextMonth)].map((n, i) => {\n    return {\n      day: i + 1,\n      ...getNextMonth(month, year)\n    };\n  });\n\n  return [...prevMonthDates, ...thisMonthDates, ...nextMonthDates];\n};\n\nexport const isDate = date =>\n  Object.prototype.toString.call(date) === '[object Date]';\n\nexport const getSimpleDate = date => {\n  const dateObj =\n    !isDate(date) && typeof date === 'string' ? new Date(date) : date;\n  return {\n    day: dateObj.getDate(),\n    month: dateObj.getMonth(),\n    year: dateObj.getFullYear()\n  };\n};\n\nexport const isSimpleDate = date => {\n  return date && 'day' in date && 'month' in date && 'year' in date;\n};\n\nexport const isSameDate = (date, base = new Date()) => {\n  if (\n    (!isDate(date) && !isSimpleDate(date)) ||\n    (!isDate(base) && !isSimpleDate(base))\n  )\n    return false;\n  const dateDay = date.day || date.getDate();\n  const dateMonth = date.month || date.getMonth();\n  const dateYear = date.year || date.getFullYear();\n  const baseDay = base.day || base.getDate();\n  const baseMonth = base.month || base.getMonth();\n  const baseYear = date.year || base.getFullYear();\n  return (\n    dateDay === baseDay && dateMonth === baseMonth && dateYear === baseYear\n  );\n};\n\nexport const getNextYears = (num, startingYear = new Date().getFullYear()) => {\n  return [...new Array(num)].map((item, i) => {\n    return startingYear + i;\n  });\n};\n\nexport const zeroPad = (value, length) => {\n  return `${value}`.padStart(length, '0');\n};\n\n/**\n * Returns string representation of simple date object with format `mm-dd-yy`\n * @param {Object} date - simple date object\n */\nexport const toSimpleDateString = date => {\n  const simpleDate = isSimpleDate(date)\n    ? date\n    : isDate(date)\n    ? getSimpleDate(date)\n    : undefined;\n  if (!simpleDate) return '';\n  const { day, month, year } = simpleDate;\n  return `${zeroPad(month + 1, 2)}-${zeroPad(day, 2)}-${year - 2000}`;\n};\n\n/**\n * Converts simple date string back to simple date object\n * @param {String} dateString\n */\nexport const toSimpleDateObj = dateString => {\n  const dateArr = dateString.split('-');\n  const month = dateArr[0] - 1;\n  const day = +dateArr[1];\n  const year = +dateArr[2] + 2000;\n  if (day > getMonthDays(month, year)) {\n    return getSimpleDate(new Date(year, month, day));\n  }\n  return {\n    month,\n    day,\n    year\n  };\n};\n\nexport const isSDSFormat = dateString => {\n  return /^\\d{2}-\\d{2}-\\d{2}$/.test(dateString);\n};\n\n/**\n * Checks if date falls within specified time frame\n * @param {Date Object} date - Javascript date object\n * @param {Number} num - The number of days comprising the time frame to check the date against\n * @param {Date Object} startingDate - The first day of the time frame\n */\nexport const isWithinDays = (date, num, startingDate = new Date()) => {\n  const timeStart = startingDate.setHours(0, 0, 0, 0);\n  const endingDate = new Date(startingDate);\n  const timeEnd = endingDate.setDate(endingDate.getDate() + num);\n  return +date >= timeStart && +date < timeEnd;\n};\n\nexport const isPriorDate = (date, baseDate = new Date()) => {\n  return +date < baseDate.setHours(0, 0, 0, 0);\n};\n\nexport const toDateString = (\n  date,\n  options = {\n    useRelative: false,\n    format: {\n      weekday: 'short',\n      month: 'short',\n      day: 'numeric',\n      year: '2-digit'\n    }\n  }\n) => {\n  const { useRelative, format } = options;\n  if (useRelative) {\n    if (isToday(date)) {\n      return 'Today';\n    }\n    if (isYesterday(date)) {\n      return 'Yesterday';\n    }\n    if (isTomorrow(date)) {\n      return 'Tomorrow';\n    }\n    if (isWithinDays(date, 7)) {\n      return WEEK_DAYS[date.getDay()].long;\n    }\n  }\n  return Object.keys(format)\n    .map(key => {\n      switch (key) {\n        case 'weekday': {\n          const value = format[key];\n          const weekday = date.getDay();\n          return WEEK_DAYS[weekday][value];\n        }\n        case 'month': {\n          const value = format[key];\n          const month = date.getMonth();\n          if (value === 'numeric') {\n            return month + 1;\n          } if (value === '2-digit') {\n            return zeroPad(month + 1, 2);\n          } else {\n            return MONTHS[month][value];\n          }\n        }\n        case 'day': {\n          const value = format[key];\n          const day = date.getDate();\n          if (value === '2-digit') {\n            return zeroPad(day, 2);\n          } else {\n            return day;\n          }\n        }\n        case 'year': {\n          const value = format[key];\n          const year = date.getFullYear();\n          if (useRelative && isThisYear(date)) {\n            return null;\n          }\n          if (value === '2-digit') {\n            return `'${+year.slice(2)}`;\n          } else {\n            return year;\n          }\n        }\n      }\n    })\n    .join(' ')\n    .trim();\n};\n","import React from 'react';\n\nconst Radio = ({\n  classes = { radio: '', label: '' },\n  name,\n  id,\n  value,\n  onFocus,\n  onChange,\n  onInput,\n  isRequired,\n  onBlur,\n  inputRef,\n  hideLabel,\n  label,\n  onKeyDown,\n  isChecked\n}) => {\n  return (\n    <>\n      <input\n        className={`radio ${classes.radio}`}\n        id={id}\n        name={name}\n        type=\"radio\"\n        value={value}\n        onFocus={onFocus}\n        onChange={onChange}\n        onBlur={onBlur}\n        ref={inputRef}\n        onInput={onInput}\n        onKeyDown={onKeyDown}\n        required={isRequired}\n        checked={isChecked}\n      />\n      {!hideLabel && (\n        <label htmlFor={id} className={`radio__label ${classes.label}`}>\n          {label}\n        </label>\n      )}\n    </>\n  );\n};\n\nexport default Radio;\n","import React, { Component } from 'react';\nimport * as dateUtils from './utils';\nimport { MONTHS, WEEK_DAYS } from './constants';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { PopoverWrapper } from '../Popover';\nimport { Radio } from '../Radio';\nimport './Calendar.scss';\n\nexport default class Calendar extends Component {\n  state = {\n    isMonthsDropdownActive: false,\n    isYearsDropdownActive: false\n  };\n\n  goToNextMonth = () => {\n    const { month, year, onMonthClick } = this.props;\n    onMonthClick(dateUtils.getNextMonth(month, year));\n  };\n\n  goToPrevMonth = () => {\n    const { month, year, onMonthClick } = this.props;\n    onMonthClick(dateUtils.getPrevMonth(month, year));\n  };\n\n  toggleMonthsDropdown = () => {\n    this.setState(prevState => ({\n      isMonthsDropdownActive: !prevState.isMonthsDropdownActive\n    }));\n  };\n\n  toggleYearsDropdown = () => {\n    this.setState(prevState => ({\n      isYearsDropdownActive: !prevState.isYearsDropdownActive\n    }));\n  };\n\n  selectMonth = e => {\n    const month = +e.target.value;\n    const { onMonthClick, year } = this.props;\n    onMonthClick({ month, year });\n    this.toggleMonthsDropdown();\n  };\n\n  selectYear = e => {\n    const year = +e.target.value;\n    const { onYearClick } = this.props;\n    onYearClick(year);\n    this.toggleYearsDropdown();\n  };\n\n  render() {\n    const { month, year, selectedDate, today, onDayClick, classes } = this.props;\n    const { isMonthsDropdownActive, isYearsDropdownActive } = this.state;\n    const dates = dateUtils.getMonthDates(month, year);\n    const years = dateUtils.getNextYears(4);\n\n    return (\n      <div className={`calendar ${classes.calendar}`}>\n        <div className=\"calendar__year\">\n          <PopoverWrapper\n            isActive={isYearsDropdownActive}\n            onButtonClick={this.toggleYearsDropdown}\n            onOutsideClick={this.toggleYearsDropdown}\n            alignInner=\"left\"\n            classes={{\n              wrapper: 'calendar__years-dropdown-wrapper',\n              popover: 'calendar__years-dropdown'\n            }}\n            buttonProps={{\n              className: `calendar__btn--years-dropdown ${\n                isYearsDropdownActive ? 'is-active' : ''\n              }`,\n              children: (\n                <>\n                  {year}\n                  <Icon name=\"chevron-down\" />\n                </>\n              )\n            }}\n          >\n            <ul className=\"calendar__years-list\">\n              {years.map(yearOption => (\n                <li className=\"calendar__years-item\" key={yearOption}>\n                  <Radio\n                    name=\"year\"\n                    id={yearOption}\n                    value={yearOption}\n                    isChecked={yearOption === year}\n                    label={\n                      yearOption === year ? (\n                        <>\n                          <Icon name=\"check\" />\n                          {yearOption}\n                        </>\n                      ) : (\n                        yearOption\n                      )\n                    }\n                    onChange={this.selectYear}\n                    classes={{\n                      radio: 'calendar__radio',\n                      label: 'calendar__radio-label'\n                    }}\n                  />\n                </li>\n              ))}\n            </ul>\n          </PopoverWrapper>\n        </div>\n        <div className=\"calendar__month\">\n          <PopoverWrapper\n            isActive={isMonthsDropdownActive}\n            onButtonClick={this.toggleMonthsDropdown}\n            onOutsideClick={this.toggleMonthsDropdown}\n            alignInner=\"left\"\n            classes={{\n              wrapper: 'calendar__months-dropdown-wrapper',\n              popover: 'calendar__months-dropdown'\n            }}\n            buttonProps={{\n              className: `calendar__btn--months-dropdown ${\n                isMonthsDropdownActive ? 'is-active' : ''\n              }`,\n              children: (\n                <>\n                  {MONTHS[month].long}\n                  <Icon name=\"chevron-down\" />\n                </>\n              )\n            }}\n          >\n            <ul className=\"calendar__months-list\">\n              {MONTHS.map((monthOption, i) => (\n                <li className=\"calendar__months-item\" key={monthOption.long}>\n                  <Radio\n                    name=\"month\"\n                    id={monthOption.long}\n                    value={i}\n                    isChecked={i === month}\n                    label={\n                      i === month ? (\n                        <>\n                          <Icon name=\"check\" />\n                          {monthOption.long}\n                        </>\n                      ) : (\n                        monthOption.long\n                      )\n                    }\n                    onChange={this.selectMonth}\n                    classes={{\n                      radio: 'calendar__radio',\n                      label: 'calendar__radio-label'\n                    }}\n                  />\n                </li>\n              ))}\n            </ul>\n          </PopoverWrapper>\n          <div className=\"calendar__month--prev-next\">\n            <Button\n              type=\"button\"\n              className=\"calendar__btn--month calendar__btn--prev-month\"\n              size=\"sm\"\n              iconOnly\n              onClick={this.goToPrevMonth}\n            >\n              <Icon name=\"chevron-left\" />\n            </Button>\n            <Button\n              type=\"button\"\n              className=\"calendar__btn--month calendar__btn--next-month\"\n              size=\"sm\"\n              iconOnly\n              onClick={this.goToNextMonth}\n            >\n              <Icon name=\"chevron-right\" />\n            </Button>\n          </div>\n        </div>\n        <div className=\"calendar__week-days\">\n          {WEEK_DAYS.map(day => (\n            <div\n              key={day.long}\n              className={`calendar__week-day ${classes.weekDay}`}\n            >\n              {day.narrow}\n            </div>\n          ))}\n        </div>\n        <div className=\"calendar__days\">\n          {dates.map(date => {\n            const isToday =\n              date.day === today.day &&\n              date.month === today.month &&\n              date.year === today.year;\n            const isSelectedDate =\n              selectedDate &&\n              date.day === selectedDate.day &&\n              date.month === selectedDate.month &&\n              date.year === selectedDate.year;\n            return (\n              <div\n                key={`${date.month}--${date.day}`}\n                className={`calendar__day ${\n                  date.month !== month ? 'calendar__day--prev-next' : ''\n                } ${isToday ? 'is-today' : ''} ${\n                  isSelectedDate ? 'is-selected' : ''\n                } ${classes.day}`}\n              >\n                <Button\n                  type=\"button\"\n                  className=\"calendar__btn--day\"\n                  size=\"sm\"\n                  onClick={() => onDayClick(date)}\n                >\n                  {date.day}\n                </Button>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { userActions, userSelectors } from '../../ducks/users';\nimport { subtaskSelectors } from '../../ducks/subtasks';\nimport './Card.scss';\nimport { Tag } from '../Tag';\nimport { Icon } from '../Icon';\nimport { Avatar } from '../Avatar';\nimport { Button } from '../Button';\nimport { MONTHS, dateUtils } from '../Calendar';\n\nconst CardDetail = ({ icon, children, className = '' }) => (\n  <div className={`card__detail ${className}`}>\n    <Icon name={icon} />\n    {children}\n  </div>\n);\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.taskTags.indexOf(undefined) !== -1) {\n      return false;\n    }\n    return true;\n  }\n\n  handleCardClick = e => {\n    if (e.target.matches('button') || e.target.matches('a')) return;\n    const { taskId, onCardClick } = this.props;\n    onCardClick(taskId);\n  };\n\n  render() {\n    const {\n      name,\n      taskId,\n      taskIndex,\n      taskTags,\n      commentIds,\n      dueDate,\n      subtaskIds,\n      completedSubtasks,\n      taskMembers\n    } = this.props;\n\n    const dueDateStr = dueDate\n      ? dateUtils.toDateString(dueDate.toDate(), {\n          useRelative: true,\n          format: { month: 'short', day: 'numeric' }\n        })\n      : null;\n    const isDueToday = dueDateStr === 'Today';\n    const isDueTmrw = dueDateStr === 'Tomorrow';\n    const isPastDue = dueDate && dateUtils.isPriorDate(dueDate.toDate());\n    return (\n      <Draggable draggableId={taskId} index={taskIndex}>\n        {provided => (\n          <div\n            className=\"card\"\n            onClick={this.handleCardClick}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            style={{\n              ...provided.draggableProps.style,\n              backgroundColor: '#fff'\n            }}\n          >\n            <div className=\"card__header\" ref={el => (this.headerEl = el)}>\n              <div className=\"card__tags\">\n                {taskTags.map(taskTag => (\n                  <Tag\n                    key={taskTag.text}\n                    size=\"sm\"\n                    color={taskTag.color}\n                    variant=\"pill\"\n                    className=\"card__tag\"\n                  />\n                ))}\n              </div>\n              <h3 className=\"card__title\">{name}</h3>\n            </div>\n            <div className=\"card__body\">\n              {dueDate && (\n                <CardDetail\n                  icon=\"calendar\"\n                  className={`card__due-date ${\n                    isDueToday\n                      ? 'is-due-today'\n                      : isDueTmrw\n                      ? 'is-due-tmrw'\n                      : isPastDue\n                      ? 'is-past-due'\n                      : ''\n                  }\n                  `}\n                >\n                  {dueDateStr}\n                </CardDetail>\n              )}\n              {subtaskIds && subtaskIds.length > 0 && (\n                <CardDetail icon=\"check-square\">\n                  {completedSubtasks.length}/{subtaskIds.length}\n                </CardDetail>\n              )}\n              {commentIds && commentIds.length > 0 && (\n                <CardDetail icon=\"message-circle\">\n                  {commentIds.length}\n                </CardDetail>\n              )}\n            </div>\n            <div className=\"card__footer\">\n              {taskMembers && taskMembers.length > 0 && (\n                <div className=\"card__members-wrapper\">\n                  <div className=\"card__members\">\n                    {taskMembers.map(member => {\n                      const { name, photoURL, userId } = member;\n                      return (\n                        <Avatar\n                          classes={{\n                            avatar: 'card__avatar',\n                            placeholder: 'card__avatar-placeholder'\n                          }}\n                          fullName={name}\n                          size=\"sm\"\n                          variant=\"circle\"\n                          imgSrc={photoURL}\n                          key={userId}\n                        />\n                      );\n                    })}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    taskTags: taskSelectors.getTaskTags(state, ownProps),\n    completedSubtasks: subtaskSelectors.getCompletedSubtasks(\n      state,\n      ownProps.subtaskIds\n    ),\n    taskMembers: userSelectors.getMembersArray(state, ownProps.assignedTo)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Card);\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport './Checkbox.scss';\n\nconst Checkbox = ({\n  value,\n  id,\n  name,\n  isChecked,\n  onClick,\n  onChange,\n  className,\n  labelClass,\n  ...props\n}) => {\n  return (\n    <label\n      htmlFor={id}\n      onClick={onClick}\n      className={`checkbox__label ${labelClass}`}\n    >\n      {isChecked && <Icon name=\"check\" />}\n      <input\n        type=\"checkbox\"\n        id={id}\n        value={value}\n        name={name}\n        checked={isChecked}\n        className={`checkbox ${className}`}\n        onChange={onChange}\n        {...props}\n      />\n    </label>\n  );\n};\n\nCheckbox.defaultProps = {\n  className: '',\n  labelClass: ''\n};\n\nexport default Checkbox;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Checkbox } from '../Checkbox';\nimport { Textarea } from '../Textarea';\nimport { withFirebase } from '../Firebase';\nimport * as keys from '../../constants/keys';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport './Task.scss';\n\nclass Task extends Component {\n  state = {\n    isFocused: false,\n    name: this.props.name,\n    prevPropsName: this.props.name\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.name !== state.prevPropsName) {\n      return {\n        name: props.name,\n        prevPropsName: props.name\n      };\n    }\n    return null;\n  }\n\n  onFocus = () => {\n    this.setState({\n      isFocused: true\n    });\n  };\n\n  onChange = e => {\n    this.setState({\n      name: e.target.value\n    });\n  };\n\n  onBlur = () => {\n    const { name, firebase, taskId } = this.props;\n    const { name: newName } = this.state;\n    if (name !== newName) {\n      firebase.updateTask(taskId, {\n        name: newName\n      });\n    }\n    this.setState({\n      isFocused: false\n    });\n  };\n\n  deleteTask = e => {\n    if (e.target.value !== '' || e.key !== keys.BACKSPACE) return;\n    const { taskId, firebase, listId, assignedTo, folders } = this.props;\n    firebase.deleteTask({ taskId, listId, assignedTo, folders });\n  };\n\n  toggleCompleted = () => {\n    const { taskId, isCompleted, firebase } = this.props;\n    firebase.updateTask(taskId, {\n      isCompleted: !isCompleted,\n      completedAt: !isCompleted ? firebase.getTimestamp() : null\n    });\n  };\n\n  handleTaskClick = e => {\n    if (\n      e.target.matches('button') ||\n      e.target.matches('a') ||\n      e.target.matches('label') ||\n      e.target.matches('input[type=\"checkbox\"]')\n    )\n      return;\n    const { taskId, onTaskClick } = this.props;\n    onTaskClick(taskId);\n  };\n\n  render() {\n    const { taskId, isCompleted, innerRef, provided } = this.props;\n    const { isFocused, name } = this.state;\n    const draggableProps = provided\n      ? provided.draggableProps\n      : { style: { listStyle: 'none' } };\n    const dragHandleProps = provided\n      ? provided.dragHandleProps\n      : { style: { listStyle: 'none' } };\n\n    return (\n      <li\n        className={`task ${isFocused ? 'is-focused' : ''}`}\n        onClick={this.handleTaskClick}\n        ref={innerRef}\n        {...draggableProps}\n        {...dragHandleProps}\n      >\n        <Checkbox\n          id={`cb-${taskId}`}\n          value={taskId}\n          name={taskId}\n          isChecked={isCompleted}\n          onChange={this.toggleCompleted}\n          className=\"task__checkbox\"\n          labelClass=\"task__checkbox-label\"\n        />\n        <Textarea\n          value={name}\n          onFocus={this.onFocus}\n          onChange={this.onChange}\n          onBlur={this.onBlur}\n          name={taskId}\n          className=\"task__textarea\"\n          onKeyDown={this.deleteTask}\n        />\n      </li>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userId: currentUserSelectors.getCurrentUserId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Task)\n);\n","import React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport Task from './Task';\n\nconst DraggableTask = ({\n  taskId,\n  index,\n  onTaskClick,\n  listId,\n  folderId,\n  task\n}) => (\n  <Draggable draggableId={taskId} index={index}>\n    {(provided, snapshot) => (\n      <Task\n        innerRef={provided.innerRef}\n        provided={provided}\n        onTaskClick={onTaskClick}\n        listId={listId}\n        folderId={folderId}\n        {...task}\n      />\n    )}\n  </Draggable>\n);\n\nexport default DraggableTask;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { Card } from '../Card';\nimport { DraggableTask } from '../Task';\n\nexport default class Tasks extends Component {\n  /*\n\n  shouldComponentUpdate(nextProps) {\n    if (this.props.cards === nextProps.cards) {\n      return false;\n    }\n    return true;\n  }\n*/\n  componentDidUpdate(prevProps) {\n    if (this.props.tasks.length > prevProps.tasks.length) {\n      this.scrollToBottom();\n    }\n  }\n\n  scrollToBottom = () => {\n    if (!this.listEnd) return;\n    this.listEnd.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  render() {\n    const { listId, tasks, onTaskClick, folderId, view } = this.props;\n    const isBoardView = view === 'board';\n\n    const inner = tasks.map((task, taskIndex) => {\n      return isBoardView ? (\n        <Card\n          key={task.taskId}\n          taskIndex={taskIndex}\n          onCardClick={onTaskClick}\n          {...task}\n        />\n      ) : (\n        <DraggableTask\n          key={task.taskId}\n          index={taskIndex}\n          onTaskClick={onTaskClick}\n          listId={listId}\n          folderId={folderId}\n          taskId={task.taskId}\n          task={task}\n        />\n      );\n    });\n\n    return (\n      <Droppable droppableId={listId || folderId} type={droppableTypes.TASK}>\n        {(provided, snapshot) =>\n          isBoardView ? (\n            <div\n              className=\"list__cards\"\n              ref={provided.innerRef}\n              style={{ minHeight: snapshot.isDraggingOver ? 80 : 16 }}\n              {...provided.droppableProps}\n            >\n              {inner}\n              {provided.placeholder}\n              <div\n                style={{ float: 'left', clear: 'both' }}\n                ref={el => (this.listEnd = el)}\n              />\n            </div>\n          ) : (\n            <ul\n              className=\"list__tasks\"\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {inner}\n              {provided.placeholder}\n            </ul>\n          )\n        }\n      </Droppable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { projectSelectors } from '../../ducks/projects';\nimport { TaskComposer } from '../TaskComposer';\nimport { CardComposer } from '../CardComposer';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\nimport { Input } from '../Input';\nimport { Tasks } from '../Tasks';\nimport './List.scss';\n\nclass List extends Component {\n  static defaultProps = {\n    isRestricted: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.name\n    };\n  }\n\n  handleListDelete = e => {\n    e.preventDefault();\n    const { listId, projectId, firebase } = this.props;\n    firebase.deleteList({ listId, projectId });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onBlur = e => {\n    const { name, listId, firebase } = this.props;\n    const { name: newName } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newName !== name) {\n      firebase.updateListName({ listId, name: newName });\n      console.log('updated list name!');\n    }\n  };\n\n  render() {\n    const {\n      tasks,\n      name: listName,\n      onTaskClick,\n      listId,\n      listIndex,\n      isFetchingTasks,\n      isRestricted,\n      projectId,\n      projectName,\n      view\n    } = this.props;\n    if (isFetchingTasks) return null;\n\n    const isBoardView = view === 'board';\n\n    const { name } = this.state;\n\n    return (\n      <Draggable draggableId={listId} index={listIndex}>\n        {provided => (\n          <>\n            <section\n              className={`list is-${view}-view`}\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <header className=\"list__header\">\n                <Input\n                  className=\"list__input--title\"\n                  name=\"name\"\n                  type=\"text\"\n                  value={name}\n                  onChange={this.onChange}\n                  required={!isRestricted}\n                  hideLabel\n                  isReadOnly={isRestricted}\n                  onBlur={this.onBlur}\n                />\n                <PopoverWrapper\n                  classes={{\n                    wrapper: 'list__popover-wrapper',\n                    popover: 'list__popover'\n                  }}\n                  alignInner={isBoardView ? 'left' : 'right'}\n                  buttonProps={{\n                    size: 'medium',\n                    iconOnly: true,\n                    className: 'list__btn--more-actions',\n                    children: <Icon name=\"more-vertical\" />\n                  }}\n                >\n                  <Menu>\n                    <MenuItem>\n                      {!isRestricted && (\n                        <a href=\"\" onClick={this.handleListDelete}>\n                          Delete\n                        </a>\n                      )}\n                    </MenuItem>\n                  </Menu>\n                </PopoverWrapper>\n              </header>\n              <div className=\"list__content\">\n                <Tasks\n                  tasks={tasks}\n                  listId={listId}\n                  onTaskClick={onTaskClick}\n                  view={view}\n                />\n              </div>\n              {provided.placeholder}\n              {isBoardView ? (\n                <CardComposer\n                  listId={listId}\n                  listName={listName}\n                  projectId={projectId}\n                  projectName={projectName}\n                />\n              ) : (\n                <TaskComposer\n                  listId={listId}\n                  listName={listName}\n                  projectId={projectId}\n                  projectName={projectName}\n                />\n              )}\n            </section>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    tasks: taskSelectors.getListTasks(state, ownProps.taskIds),\n    projectName: projectSelectors.getProjectName(state, ownProps.projectId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(List)\n);\n","import * as types from './types';\nimport firebase from '../../store/firebase';\n\nexport const loadCommentsById = commentsById => {\n  return {\n    type: types.LOAD_COMMENTS_BY_ID,\n    commentsById\n  };\n};\n\nexport const fetchCommentsById = () => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateCommentsById = comment => {\n  return {\n    type: types.UPDATE_COMMENTS_BY_ID,\n    comment\n  };\n};\n\nexport const fetchTaskComments = taskId => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .where('taskId', '==', taskId)\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const fetchUserComments = userId => {\n  return async dispatch => {\n    try {\n      const commentsById = await firebase.db\n        .collection('comments')\n        .where('to', 'array-contains', userId)\n        .get()\n        .then(snapshot => {\n          const comments = {};\n          snapshot.forEach(doc => {\n            comments[doc.id] = {\n              commentId: doc.id,\n              ...doc.data()\n            };\n          });\n          return comments;\n        });\n      dispatch(loadCommentsById(commentsById));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addComment = ({ commentId, commentData }) => {\n  return {\n    type: types.ADD_COMMENT,\n    commentId,\n    commentData\n  };\n};\n\nexport const deleteComment = commentId => {\n  return {\n    type: types.DELETE_COMMENT,\n    commentId\n  };\n};\n\nexport const updateComment = ({ commentId, commentData }) => {\n  return {\n    type: types.UPDATE_COMMENT,\n    commentId,\n    commentData\n  };\n};\n","export const LOAD_COMMENTS_BY_ID = 'LOAD_COMMENTS_BY_ID';\nexport const FETCH_COMMENTS_BY_ID = 'FETCH_COMMENTS_BY_ID';\nexport const UPDATE_COMMENTS_BY_ID = 'UPDATE_COMMENTS_BY_ID';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const UPDATE_COMMENT = 'UPDATE_COMMENT';\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\n","export const getCommentsById = state => {\n  const { commentsById } = state;\n  return commentsById;\n};\n\nexport const getCommentsArray = (state, commentIds) => {\n  const { commentsById } = state;\n  if (!commentIds) return [];\n  return commentIds.map(commentId => {\n    return commentsById[commentId];\n  });\n};\n","import * as types from './types';\n\nconst commentsById = (state = {}, action) => {\n  switch (action.type) {\n    case types.LOAD_COMMENTS_BY_ID: {\n      const { commentsById } = action;\n      return {\n        ...state,\n        ...commentsById\n      };\n    }\n    case types.ADD_COMMENT: {\n      const { commentId, commentData } = action;\n      return {\n        ...state,\n        [commentId]: {\n          commentId,\n          ...commentData\n        }\n      };\n    }\n    case types.DELETE_COMMENT: {\n      const { commentId } = action;\n      const { [commentId]: deletedComment, ...restOfComments } = state;\n      return restOfComments;\n    }\n    case types.UPDATE_COMMENT: {\n      const { commentId, commentData } = action;\n      return {\n        ...state,\n        [commentId]: {\n          ...state[commentId],\n          ...commentData\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default commentsById;\n","import React from 'react';\nimport './Toolbar.scss';\n\nconst Toolbar = ({ className, children, ...props }) => (\n  <div className={`toolbar ${className}`} {...props}>\n    {children}\n  </div>\n);\n\nToolbar.defaultProps = {\n  className: ''\n};\n\nexport default Toolbar;\n","import React, { Component } from 'react';\nimport { Icon } from '../Icon';\nimport { PopoverWrapper } from '../Popover';\n\nexport default class TaskEditorAssignMember extends Component {\n  render() {\n    const { children } = this.props;\n\n    return (\n      <PopoverWrapper\n        classes={{\n          wrapper: \"task-editor__popover-wrapper task-editor__member-search-popover-wrapper\",\n          popover: \"task-editor__popover task-editor__member-search-popover\"\n        }}\n        alignOuter=\"left\"\n        alignInner=\"left\"\n        buttonProps={{\n          size: 'md',\n          iconOnly: true,\n          className: 'task-editor__toolbar-btn',\n          children: <Icon name=\"users\" />,\n          buttonRef: this.props.buttonRef\n        }}\n      >\n        {children}\n      </PopoverWrapper>\n    );\n  }\n}\n","import React from 'react';\n\nconst TaskEditorSection = ({ size, children }) => (\n  <div className={`task-editor__section${size === 'sm' ? '--sm' : ''}`}>{children}</div>\n);\n\nTaskEditorSection.defaultProps = {\n  size: 'default'\n};\n\nexport default TaskEditorSection;\n","import React, { Component } from 'react';\n\nimport { Input } from '../Input';\nimport { Avatar } from '../Avatar';\nimport { Icon } from '../Icon';\nimport * as keys from '../../constants/keys';\nimport './MemberSearch.scss';\n\nexport default class MemberSearch extends Component {\n  state = {\n    query: '',\n    isActive: false,\n    isTouchEnabled: false,\n    selectedMember: '',\n    selectedIndex: null,\n    filteredList: this.props.users\n  };\n\n  componentDidMount() {\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick, false);\n    this.inputEl.focus();\n  }\n\n  handleOutsideClick = e => {\n    if (this.state.query !== '') return;\n    if (!this.memberSearchEl.contains(e.target)) {\n      this.setState({\n        isActive: false\n      });\n    }\n  };\n\n  handleTouch = () => {\n    this.setState({\n      isTouchEnabled: true\n    });\n    // remove touch handler to prevent unnecessary refires\n    document.removeEventListener('touchstart', this.handleTouch);\n    // remove outside click handler from click events\n    document.removeEventListener('click', this.handleOutsideClick);\n    // reattach outside click handler to touchstart events\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  matchUser = (user, query) => {\n    const { name, email, username } = user;\n    const regExp = new RegExp(query, 'i');\n    return regExp.test(name) || regExp.test(email) || regExp.test(username);\n  };\n\n  onFocus = e => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onReset = e => {\n    this.setState({\n      query: '',\n      isActive: false,\n      isTouchEnabled: false,\n      selectedMember: '',\n      selectedIndex: null,\n      filteredList: this.props.users\n    });\n  };\n\n  onChange = e => {\n    const { users } = this.props;\n    const { selectedMember, selectedIndex } = this.state;\n    const query = e.target.value;\n    const filteredList = users.filter(user => this.matchUser(user, query));\n    const newIndex = filteredList.indexOf(selectedMember);\n    const persistSelectedMember = newIndex !== -1;\n\n    this.setState({\n      selectedMember: persistSelectedMember\n        ? selectedMember\n        : filteredList.length > 0\n        ? filteredList[0].userId\n        : '',\n      selectedIndex: persistSelectedMember ? newIndex : 0,\n      query,\n      filteredList\n    });\n  };\n\n  onKeyDown = e => {\n    if (\n      e.key !== keys.TAB &&\n      e.key !== keys.ARROW_DOWN &&\n      e.key !== keys.ARROW_UP &&\n      e.key !== keys.ENTER\n    )\n      return;\n\n    const { filteredList, selectedIndex, selectedMember } = this.state;\n    const { onMemberClick } = this.props;\n    const nextIndex =\n      selectedIndex === filteredList.length - 1 ? 0 : selectedIndex + 1;\n    const prevIndex =\n      selectedIndex === 0 ? filteredList.length - 1 : selectedIndex - 1;\n\n    // eslint-disable-next-line default-case\n    switch (e.key) {\n      case keys.ARROW_DOWN:\n      // eslint-disable-next-line no-fallthrough\n      case keys.TAB: {\n        this.setState({\n          selectedMember: filteredList[nextIndex].userId,\n          selectedIndex: nextIndex\n        });\n        break;\n      }\n      case keys.ARROW_UP: {\n        this.setState({\n          selectedMember: filteredList[prevIndex].userId,\n          selectedIndex: prevIndex\n        });\n        break;\n      }\n      case keys.ENTER: {\n        if (selectedMember === '') return;\n        onMemberClick(selectedMember);\n        break;\n      }\n    }\n\n    e.preventDefault();\n  };\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  render() {\n    const { users, onMemberClick, assignedMembers } = this.props;\n    const { query, isActive, filteredList, selectedMember } = this.state;\n\n    return (\n      <div\n        className=\"member-search__wrapper\"\n        ref={el => (this.memberSearchEl = el)}\n      >\n        <Input\n          name=\"query\"\n          className=\"member-search\"\n          onChange={this.onChange}\n          value={query}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          type=\"text\"\n          autoComplete=\"off\"\n          hideLabel\n          placeholder=\"Assign or remove member\"\n          onKeyDown={this.onKeyDown}\n          inputRef={el => (this.inputEl = el)}\n        />\n        {isActive && (\n          <ul className=\"member-search__list\">\n            {filteredList.length > 0 ? (\n              filteredList.map((user, i) => {\n                const { name, photoURL, email, username, userId } = user;\n                const isAssigned =\n                  assignedMembers && assignedMembers.indexOf(userId) !== -1;\n                return (\n                  <li\n                    className={`member-search__item ${\n                      selectedMember === userId ? 'is-selected' : ''\n                    }`}\n                    onClick={() => onMemberClick(userId)}\n                    key={userId}\n                    id={userId}\n                  >\n                    <Icon name={isAssigned ? 'user-minus' : 'user-plus'} />\n                    <Avatar\n                      classes={{\n                        avatar: 'member-search__avatar--sm',\n                        placeholder: 'member-search__avatar-placeholder--sm'\n                      }}\n                      fullName={name}\n                      size=\"sm\"\n                      variant=\"circle\"\n                      imgSrc={photoURL}\n                    />\n                    <span className=\"member-search__info member-search__name\">\n                      {name}\n                    </span>\n                    <span className=\"member-search__info member-search__username\">\n                      {username}\n                    </span>\n                    <span className=\"member-search__info member-search__email\">\n                      {email}\n                    </span>\n                  </li>\n                );\n              })\n            ) : (\n              <li className=\"member-search__item\">\n                <span className=\"member-search__no-match\">\n                  No matches found\n                </span>\n              </li>\n            )}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\n\nconst TaskEditorMoreActions = ({ onMenuClick }) => (\n  <PopoverWrapper\n    classes={{\n      wrapper: 'task-editor__popover-wrapper',\n      popover: 'task-editor__popover'\n    }}\n    alignOuter=\"right\"\n    alignInner=\"right\"\n    buttonProps={{\n      size: 'md',\n      iconOnly: true,\n      className: 'task-editor__toolbar-btn',\n      children: <Icon name=\"more-horizontal\" />\n    }}\n  >\n    <Menu onClick={onMenuClick}>\n      <MenuItem>\n        <a href=\"\" data-action=\"delete\">\n          Delete task\n        </a>\n      </MenuItem>\n    </Menu>\n  </PopoverWrapper>\n);\n\nexport default TaskEditorMoreActions;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Checkbox } from '../Checkbox';\nimport { Textarea } from '../Textarea';\nimport { withFirebase } from '../Firebase';\nimport * as keys from '../../constants/keys';\nimport './Subtask.scss';\n\nconst appRoot = document.getElementById('root');\n\nclass Subtask extends Component {\n  constructor(props) {\n    super(props);\n    this.portal = document.createElement('div');\n    this.state = {\n      name: this.props.name\n    }\n  }\n\n  componentDidMount() {\n    appRoot.appendChild(this.portal);\n  }\n\n  onDragStart = e => {\n    console.log('dragstart');\n    this.setState({\n      isReadOnly: true\n    });\n  };\n\n  onChange = e => {\n    this.setState({\n      name: e.target.value\n    });\n  };\n\n  onBlur = () => {\n    const { name, firebase, subtaskId } = this.props;\n    const { name: newName } = this.state;\n    if (name !== newName) {\n      firebase.updateSubtask(subtaskId, {\n        name: newName\n      });\n    }\n  };\n\n  deleteSubtask = e => {\n    if (e.target.value !== '' || e.key !== keys.BACKSPACE) return;\n    const { subtaskId, taskId, firebase } = this.props;\n    firebase.deleteSubtask({ subtaskId, taskId });\n  };\n\n  toggleCompleted = () => {\n    const { subtaskId, isCompleted, firebase } = this.props;\n    firebase.updateSubtask(subtaskId, {\n      isCompleted: !isCompleted,\n      completedAt: !isCompleted ? firebase.getTimestamp() : null\n    });\n  };\n\n  componentWillUnmount() {\n    appRoot.removeChild(this.portal);\n  }\n\n  render() {\n    const {\n      subtaskId,\n      index,\n      isCompleted\n    } = this.props;\n\n    const { name } = this.state;\n\n    return (\n      <Draggable draggableId={subtaskId} index={index}>\n        {(provided, snapshot) => {\n          const inner = (\n            <li\n              className=\"subtask\"\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <Checkbox\n                id={`cb-${subtaskId}`}\n                value={subtaskId}\n                name={subtaskId}\n                isChecked={isCompleted}\n                onChange={this.toggleCompleted}\n                className=\"subtask__checkbox\"\n                labelClass=\"subtask__checkbox-label\"\n              />\n              <Textarea\n                value={name}\n                onChange={this.onChange}\n                onBlur={this.onBlur}\n                name={subtaskId}\n                className=\"subtask__textarea\"\n                onKeyDown={this.deleteSubtask}\n                onDragStart={this.onDragStart}\n              />\n            </li>\n          );\n          return snapshot.isDragging\n            ? ReactDOM.createPortal(inner, this.portal)\n            : inner;\n        }}\n      </Draggable>\n    );\n  }\n}\n\nexport default withFirebase(Subtask);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { withFirebase } from '../Firebase';\nimport { Subtask } from '../Subtask';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { subtaskActions, subtaskSelectors } from '../../ducks/subtasks';\nimport { getSelectedProjectId } from '../../ducks/selectedProject';\nimport './Subtasks.scss';\n\nclass Subtasks extends Component {\n  state = {\n    isFetching: !this.props.selectedProjectId || !this.props.projectId\n  };\n\n  componentDidMount() {\n    const {\n      firebase,\n      fetchTaskSubtasks,\n      addSubtask,\n      updateSubtask,\n      deleteSubtask,\n      taskId,\n      projectId,\n      selectedProjectId\n    } = this.props;\n    if (!selectedProjectId || !projectId) {\n      fetchTaskSubtasks(taskId).then(() => {\n        this.setState({\n          isFetching: false\n        });\n      });\n    }\n    this.subtaskObserver = firebase.db\n      .collection('subtasks')\n      .where('taskId', '==', taskId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const subtaskId = change.doc.id;\n          const subtaskData = change.doc.data();\n          if (change.type === 'added') {\n            addSubtask({ subtaskId, subtaskData });\n          }\n          if (change.type === 'modified') {\n            updateSubtask({ subtaskId, subtaskData });\n          }\n          if (change.type === 'removed') {\n            deleteSubtask(subtaskId);\n          }\n        });\n      });\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.subtasks.includes(undefined)) {\n      return false;\n    }\n    return true;\n  }\n\n  moveSubtask = ({ destination, draggableId, source }) => {\n    if (!destination) return;\n    if (destination.index === source.index) return;\n    const { firebase, subtaskIds } = this.props;\n    const updatedSubtaskIds = [...subtaskIds];\n    updatedSubtaskIds.splice(source.index, 1);\n    updatedSubtaskIds.splice(destination.index, 0, draggableId);\n    firebase.updateTask(source.droppableId, {\n      subtaskIds: updatedSubtaskIds\n    });\n  };\n\n  componentWillUnmount() {\n    this.subtaskObserver();\n  }\n\n  render() {\n    const { taskId, subtasks } = this.props;\n    const { isFetching } = this.state;\n    return (\n      <DragDropContext onDragEnd={this.moveSubtask}>\n        <Droppable droppableId={taskId} type={droppableTypes.SUBTASK}>\n          {provided => (\n            <ul\n              className=\"subtasks\"\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {!isFetching &&\n                subtasks.map((subtask, index) => {\n                  return (\n                    <Subtask\n                      subtaskId={subtask.subtaskId}\n                      taskId={taskId}\n                      index={index}\n                      name={subtask.name}\n                      isCompleted={subtask.isCompleted}\n                      key={subtask.subtaskId}\n                    />\n                  );\n                })}\n              {provided.placeholder}\n            </ul>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    subtasks: subtaskSelectors.getSubtasksArray(state, ownProps.subtaskIds),\n    selectedProjectId: getSelectedProjectId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchTaskSubtasks: taskId =>\n      dispatch(subtaskActions.fetchTaskSubtasks(taskId)),\n    addSubtask: ({ subtaskId, subtaskData }) =>\n      dispatch(subtaskActions.addSubtask({ subtaskId, subtaskData })),\n    deleteSubtask: subtaskId =>\n      dispatch(subtaskActions.deleteSubtask(subtaskId)),\n    updateSubtask: ({ subtaskId, subtaskData }) =>\n      dispatch(subtaskActions.updateSubtask({ subtaskId, subtaskData }))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Subtasks)\n);\n","/* eslint-disable no-nested-ternary */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport { userActions, userSelectors } from '../../ducks/users';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { commentActions, commentSelectors } from '../../ducks/comments';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { Avatar } from '../Avatar';\nimport { dateUtils } from '../Calendar';\nimport './TaskEditorComment.scss';\n\nclass TaskEditorComment extends Component {\n  state = {\n    secondsElapsed: 0\n  };\n\n  componentDidMount() {\n    const { createdAt } = this.props.comment;\n    const secondsSinceCreation =\n      Math.floor(Date.now() / 1000) -\n      Math.floor(createdAt.toDate().getTime() / 1000);\n\n    this.setState({\n      secondsElapsed: secondsSinceCreation\n    });\n\n    this.interval = setInterval(this.tick, 1000);\n  }\n\n  tick = () => {\n    this.setState(prevState => ({\n      secondsElapsed: prevState.secondsElapsed + 1\n    }));\n  };\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  handleLikeClick = () => {\n    const { handleLike, comment } = this.props;\n    const { commentId } = comment;\n    handleLike(commentId);\n  };\n\n  render() {\n    const { user, comment } = this.props;\n    const { secondsElapsed } = this.state;\n    const { name, photoURL } = user;\n    const {\n      content,\n      createdAt,\n      lastUpdatedAt,\n      likes,\n      to,\n      from,\n      isPinned\n    } = comment;\n    if (!createdAt) return null;\n    const dateCreated = createdAt.toDate();\n    const timeCreated = dateCreated.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true\n    });\n    const dateCreatedString = dateUtils.toDateString(dateCreated, {\n      useRelative: true,\n      format: {\n        weekday: 'short',\n        month: 'short',\n        day: 'numeric',\n        year: '2-digit'\n      }\n    });\n    return (\n      <div\n        className={`task-editor__comment-wrapper ${\n          isPinned ? 'is-pinned' : ''\n        }`}\n      >\n        <Avatar\n          classes={{\n            avatar: 'task-editor__comment-avatar',\n            placeholder: 'task-editor__comment-avatar-placeholder'\n          }}\n          fullName={name}\n          size=\"sm\"\n          variant=\"circle\"\n          imgSrc={photoURL}\n        />\n        <div className=\"task-editor__comment\">\n          <div className=\"task-editor__comment-header\">\n            <div className=\"task-editor__comment-details\">\n              <span className=\"task-editor__name\">{name}</span>\n              <span className=\"task-editor__timestamp\">\n                {secondsElapsed < 60 // less than one minute\n                  ? 'Just now'\n                  : secondsElapsed < 120 // less than 2 minutes\n                  ? '1 minute ago'\n                  : secondsElapsed < 3600 // less than 1 hour\n                  ? `${Math.floor(secondsElapsed / 60)} minutes ago`\n                  : secondsElapsed < 7200 // less than 2 hours\n                  ? '1 hour ago'\n                  : secondsElapsed < 21600 // less than 6 hours\n                  ? `${Math.floor(secondsElapsed / 3600)} hours ago`\n                  : `${dateCreatedString} at ${timeCreated}`}\n              </span>\n            </div>\n            <Button\n              className=\"task-editor__likes\"\n              onClick={this.handleLikeClick}\n              size=\"sm\"\n            >\n              <Icon name=\"thumbs-up\" />\n              <span className=\"task-editor__likes-counter\">\n                {likes.length > 0 ? likes.length : ''}\n              </span>\n            </Button>\n          </div>\n          <div className=\"task-editor__comment-body\">{content}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: userSelectors.getUserData(state, ownProps.comment.from)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateTasksById: task => dispatch(taskActions.updateTasksById(task)),\n    fetchTaskComments: taskId =>\n      dispatch(commentActions.fetchTaskComments(taskId)),\n    addComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.addComment({ commentId, commentData })),\n    deleteComment: commentId =>\n      dispatch(commentActions.deleteComment(commentId)),\n    updateComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.updateComment({ commentId, commentData }))\n  };\n};\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TaskEditorComment)\n);\n","import React, { Component } from 'react';\nimport { Radio } from '../Radio';\nimport './ColorPicker.scss';\n\nexport default class ColorPicker extends Component {\n  state = {\n    selectedColor: 'default'\n  };\n\n  handleColorChange = e => {\n    const { selectColor } = this.props;\n    this.setState({\n      selectedColor: e.target.value\n    });\n    selectColor(e.target.value);\n  };\n\n  render() {\n    const { style } = this.props;\n    const { selectedColor } = this.state;\n    return (\n      <div className=\"color-picker\" style={style}>\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--default'\n          }}\n          name=\"tagColor\"\n          id=\"colorDefault\"\n          value=\"default\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'default'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--red'\n          }}\n          name=\"tagColor\"\n          id=\"colorRed\"\n          value=\"red\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'red'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--pink'\n          }}\n          name=\"tagColor\"\n          id=\"colorPink\"\n          value=\"pink\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'pink'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--grape'\n          }}\n          name=\"tagColor\"\n          id=\"colorGrape\"\n          value=\"grape\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'grape'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--violet'\n          }}\n          name=\"tagColor\"\n          id=\"colorViolet\"\n          value=\"violet\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'violet'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--indigo'\n          }}\n          name=\"tagColor\"\n          id=\"colorIndigo\"\n          value=\"indigo\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'indigo'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--blue'\n          }}\n          name=\"tagColor\"\n          id=\"colorBlue\"\n          value=\"blue\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'blue'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--cyan'\n          }}\n          name=\"tagColor\"\n          id=\"colorCyan\"\n          value=\"cyan\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'cyan'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--teal'\n          }}\n          name=\"tagColor\"\n          id=\"colorTeal\"\n          value=\"teal\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'teal'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--green'\n          }}\n          name=\"tagColor\"\n          id=\"colorGreen\"\n          value=\"green\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'green'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--yellow'\n          }}\n          name=\"tagColor\"\n          id=\"colorYellow\"\n          value=\"yellow\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'yellow'}\n        />\n        <Radio\n          classes={{\n            radio: 'color-picker__radio',\n            label: 'color-picker__swatch bg--orange'\n          }}\n          name=\"tagColor\"\n          id=\"colorOrange\"\n          value=\"orange\"\n          onChange={this.handleColorChange}\n          isChecked={selectedColor === 'orange'}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Tag } from '../Tag';\nimport { Input } from '../Input';\nimport { ColorPicker } from '../ColorPicker';\nimport * as keys from '../../constants/keys';\nimport './TagsInput.scss';\n\nexport default class TagsInput extends Component {\n  state = {\n    value: '',\n    isActive: false,\n    isTouchEnabled: false,\n    selectedTag: '',\n    focusedTag: '',\n    selectedIndex: null,\n    hasExactMatch: null,\n    filteredList: []\n  };\n\n  componentDidMount() {\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick, false);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.assignedTags.indexOf(undefined) !== -1) {\n      return false;\n    }\n    return true;\n  }\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  onFocus = () => {\n    this.setState({\n      isActive: true\n    });\n  };\n\n  onBlur = () => {\n    this.setState({\n      selectedTag: '',\n      selectedIndex: null\n    });\n  };\n\n  resetForm = () => {\n    this.setState({\n      value: '',\n      selectedTag: '',\n      selectedIndex: null,\n      hasExactMatch: null,\n      focusedTag: '',\n      filteredList: []\n    });\n  };\n\n  matchTag = (tag, value) => {\n    const { text } = tag;\n    const regExp = new RegExp(value, 'i');\n    return regExp.test(text);\n  };\n\n  onChange = e => {\n    const { tagSuggestions } = this.props;\n    const { selectedTag, selectedIndex } = this.state;\n    const { value } = e.target;\n    const filteredList = tagSuggestions.filter(tag =>\n      this.matchTag(tag, value)\n    );\n    const hasExactMatch =\n      filteredList.findIndex(item => item.text === value) !== -1;\n    const newIndex = filteredList.indexOf(selectedTag);\n    const persistSelectedTag = newIndex !== -1;\n\n    this.setState({\n      selectedTag: persistSelectedTag\n        ? selectedTag\n        : filteredList.length > 0\n        ? filteredList[0].text\n        : '',\n      selectedIndex: persistSelectedTag ? newIndex : 0,\n      value,\n      filteredList: hasExactMatch\n        ? filteredList\n        : [...filteredList, { text: value, color: 'default' }],\n      hasExactMatch\n    });\n  };\n\n  onKeyDown = e => {\n    if (\n      e.key !== keys.TAB &&\n      e.key !== keys.ARROW_DOWN &&\n      e.key !== keys.ARROW_UP &&\n      e.key !== keys.ENTER &&\n      e.key !== keys.BACKSPACE\n    )\n      return;\n\n    const { filteredList, selectedIndex, selectedTag, value, focusedTag } = this.state;\n    const { addTag, removeTag, assignedTags } = this.props;\n    const nextIndex =\n      selectedIndex === filteredList.length - 1 || selectedIndex === null\n        ? 0\n        : selectedIndex + 1;\n    const prevIndex =\n      selectedIndex === 0 ? filteredList.length - 1 : selectedIndex - 1;\n\n    // eslint-disable-next-line default-case\n    switch (e.key) {\n      case keys.ARROW_DOWN:\n      // eslint-disable-next-line no-fallthrough\n      case keys.TAB: {\n        this.setState({\n          selectedTag: filteredList[nextIndex].text,\n          selectedIndex: nextIndex\n        });\n        break;\n      }\n      case keys.ARROW_UP: {\n        this.setState({\n          selectedTag: filteredList[prevIndex].text,\n          selectedIndex: prevIndex\n        });\n        break;\n      }\n      case keys.ENTER: {\n        if (selectedTag === '' && value === '') return;\n        this.resetForm();\n        addTag(selectedTag === '' ? value : selectedTag);\n        break;\n      }\n      case keys.BACKSPACE: {\n        if (value !== '') return;\n        if (focusedTag === '') {\n        this.setState({\n          focusedTag: assignedTags[assignedTags.length - 1].text\n        });\n      } else {\n        this.resetForm();\n        removeTag(focusedTag);\n      }\n      }\n    }\n    e.preventDefault();\n  };\n\n  handleOutsideClick = e => {\n    if (this.el.contains(e.target)) return;\n\n    this.setState({\n      isActive: false\n    });\n  };\n\n  handleTouch = () => {\n    this.setState({\n      isTouchEnabled: true\n    });\n    // remove touch handler to prevent unnecessary refires\n    document.removeEventListener('touchstart', this.handleTouch);\n    // remove outside click handler from click events\n    document.removeEventListener('click', this.handleOutsideClick);\n    // reattach outside click handler to touchstart events\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  handleTagDelete = tag => {\n    const { removeTag } = this.props;\n    this.resetForm();\n    removeTag(tag);\n  };\n\n  render() {\n    const {\n      isColorPickerActive,\n      assignedTags,\n      setTagColor,\n      currentTag,\n      removeTag\n    } = this.props;\n    const {\n      value,\n      isActive,\n      filteredList,\n      selectedTag,\n      hasExactMatch,\n      focusedTag\n    } = this.state;\n\n    const hasTags = assignedTags && assignedTags.length > 0;\n\n    const colorPickerStyle = {};\n    if (this.currentTagEl) {\n      const {\n        offsetLeft,\n        offsetWidth,\n        offsetTop,\n        offsetHeight\n      } = this.currentTagEl;\n      colorPickerStyle.left = offsetLeft + offsetWidth / 2 - 74; // 74 = 1/2 colorPicker width\n      colorPickerStyle.top = offsetTop + offsetHeight + 9; // 9 = colorPicker arrow height\n    }\n\n    return (\n      <div className={`tags__container ${isActive ? 'is-active' : ''} ${!hasTags ? 'no-tags' : ''}`} ref={el => (this.el = el)}>\n        {assignedTags.map(tag => (\n          <Tag\n            key={tag.text}\n            color={tag.color}\n            size=\"md\"\n            text={tag.text}\n            onDelete={() => this.handleTagDelete(tag.text)}\n            className={focusedTag === tag.text ? 'is-focused' : ''}\n            tagRef={\n              currentTag === tag.text ? el => (this.currentTagEl = el) : null\n            }\n          />\n        ))}\n        <div className=\"tags-input__wrapper\">\n          <Input\n            className=\"tags-input\"\n            onChange={this.onChange}\n            onBlur={this.onBlur}\n            value={value}\n            onFocus={this.onFocus}\n            type=\"text\"\n            autoComplete=\"off\"\n            onKeyDown={this.onKeyDown}\n            hideLabel\n          />\n          {isActive && (\n            <ul className=\"tags-input__list\">\n              {filteredList.map((item, i) => {\n                return (\n                  <li\n                    key={item.text}\n                    className={`tags-input__item ${\n                      selectedTag === item.text ? 'is-selected' : ''\n                    } ${\n                      !hasExactMatch && i === filteredList.length - 1\n                        ? 'tags-input__item--new'\n                        : ''\n                    }`}\n                  >\n                    {!hasExactMatch && i === filteredList.length - 1 ? (\n                      <>\n                        <h4 className=\"tags-input__item--heading\">New Tag</h4>\n                        <span className=\"tags-input__item--text\">\n                          {item.text}\n                        </span>\n                      </>\n                    ) : (\n                      <Tag text={item.text} color={item.color} size=\"sm\" />\n                    )}\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n        </div>\n        {isActive && isColorPickerActive && (\n          <ColorPicker\n            isActive={isColorPickerActive}\n            selectColor={setTagColor}\n            style={colorPickerStyle}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Calendar, dateUtils } from '../Calendar';\nimport { Button } from '../Button';\nimport { Input } from '../Input';\nimport './DatePicker.scss';\n\nexport default class DatePicker extends Component {\n  state = {\n    today: {\n      day: new Date().getDate(),\n      month: new Date().getMonth(),\n      year: new Date().getFullYear()\n    },\n    selectedDate: this.props.selectedDate,\n    currentMonth: this.props.currentMonth,\n    currentYear: this.props.currentYear,\n    dateString: dateUtils.toSimpleDateString(this.props.selectedDate) || ''\n  };\n\n  componentDidMount() {}\n\n  selectDate = date => {\n    if (typeof date === 'string') {\n      const newDate = dateUtils.toSimpleDateObj(date);\n      const { month, year } = newDate;\n      const { currentMonth, currentYear } = this.state;\n      this.setState({\n        selectedDate: newDate\n      });\n      if (month !== currentMonth || year !== currentYear) {\n        this.setCurrentMonth({ month, year });\n      }\n    } else {\n      this.setState({\n        selectedDate: date,\n        dateString: dateUtils.toSimpleDateString(date)\n      });\n    }\n  };\n\n  setCurrentMonth = ({ month, year }) => {\n    this.setState({\n      currentMonth: month,\n      currentYear: year\n    });\n  };\n\n  setCurrentYear = year => {\n    this.setState({\n      currentYear: year\n    });\n  };\n\n  updateDateString = e => {\n    const { value } = e.target;\n    this.setState({\n      dateString: value\n    });\n    if (dateUtils.isSDSFormat(value)) {\n      this.selectDate(value);\n    }\n  };\n\n  setDate = () => {\n    const { selectedDate: currentDueDate, selectDate, onClose } = this.props;\n    const { selectedDate } = this.state;\n    if (\n      !(currentDueDate === null && selectedDate === null) &&\n      !dateUtils.isSameDate(currentDueDate, selectedDate)\n    ) {\n      const { day, month, year } = selectedDate;\n      const date = new Date(year, month, day);\n      selectDate(date);\n    }\n    onClose();\n  };\n\n  clearDueDate = () => {\n    const { selectedDate, selectDate } = this.props;\n    this.selectDate(null);\n    if (selectedDate !== null) {\n      selectDate(null);\n    }\n  };\n\n  render() {\n    const { onClose, isActive, innerRef } = this.props;\n    const {\n      today,\n      selectedDate,\n      currentMonth,\n      currentYear,\n      dateString\n    } = this.state;\n    return (\n      <div className=\"date-picker\" ref={innerRef} style={{display: !isActive ? 'none' : 'block'}}>\n        <div className=\"date-picker__header\">\n          <div className=\"date-picker__due-date-wrapper\">\n            <Input\n              name=\"dueDate\"\n              type=\"text\"\n              label=\"Due Date\"\n              value={dateString}\n              onChange={this.updateDateString}\n              className=\"date-picker__input--due-date\"\n              labelClass=\"date-picker__label--due-date\"\n              placeholder=\"mm-dd-yy\"\n              maxLength={8}\n            />\n          </div>\n        </div>\n        <Calendar\n          classes={{\n            calendar: 'date-picker__calendar',\n            weekDay: 'date-picker__week-day'\n          }}\n          month={currentMonth}\n          year={currentYear}\n          selectedDate={selectedDate}\n          today={today}\n          onDayClick={this.selectDate}\n          onMonthClick={this.setCurrentMonth}\n          onYearClick={this.setCurrentYear}\n        />\n        <div className=\"date-picker__footer\">\n          <Button\n            size=\"sm\"\n            variant=\"text\"\n            color=\"neutral\"\n            className=\"date-picker__btn--clear\"\n            onClick={this.clearDueDate}\n          >\n            Clear\n          </Button>\n          <Button\n            size=\"sm\"\n            variant=\"contained\"\n            color=\"primary\"\n            className=\"date-picker__btn--set-due-date\"\n            onClick={this.setDate}\n          >\n            Done\n          </Button>\n          <Button\n            size=\"sm\"\n            variant=\"text\"\n            color=\"neutral\"\n            className=\"date-picker__btn--cancel\"\n            onClick={onClose}\n          >\n            Cancel\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport './TaskEditorPane.scss';\n\nconst TaskEditorPane = ({ onClose, onClick, children }) => (\n  <div className=\"task-editor-pane\" onClick={onClick}>\n    <Button\n      type=\"button\"\n      className=\"task-editor-pane__btn--close\"\n      onClick={onClose}\n      iconOnly\n    >\n      <Icon name=\"x\" />\n  </Button>\n  { children }\n  </div>\n);\n\nexport default TaskEditorPane;","import React from 'react';\nimport './ProjectIcon.scss';\n\nconst ProjectIcon = ({className, color}) => (\n  <span className={`project-icon bg--${color} ${className}`} />\n);\n\nProjectIcon.defaultProps = {\n  className: '',\n  color: 'default'\n};\n\nexport default ProjectIcon;","/* eslint-disable no-nested-ternary */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withFirebase } from '../Firebase';\nimport {\n  currentUserActions,\n  currentUserSelectors\n} from '../../ducks/currentUser';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { subtaskActions, subtaskSelectors } from '../../ducks/subtasks';\nimport { userSelectors } from '../../ducks/users';\nimport { commentActions, commentSelectors } from '../../ducks/comments';\nimport { Textarea } from '../Textarea';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { Modal } from '../Modal';\nimport { Toolbar } from '../Toolbar';\nimport { Avatar } from '../Avatar';\nimport TaskEditorAssignMember from './TaskEditorAssignMember';\nimport TaskEditorSection from './TaskEditorSection';\nimport { MemberSearch } from '../MemberSearch';\nimport TaskEditorMoreActions from './TaskEditorMoreActions';\nimport * as keys from '../../constants/keys';\nimport { Subtasks } from '../Subtasks';\nimport TaskEditorComment from './TaskEditorComment';\nimport { TagsInput } from '../TagsInput';\nimport './TaskEditor.scss';\nimport { projectSelectors } from '../../ducks/projects';\nimport { DatePicker } from '../DatePicker';\nimport { dateUtils } from '../Calendar';\nimport TaskEditorPane from './TaskEditorPane';\nimport { ProjectIcon } from '../ProjectIcon';\n\nconst TaskEditorWrapper = ({\n  view,\n  handleTaskEditorClose,\n  handleClick,\n  children\n}) => {\n  return view === 'board' ? (\n    <Modal\n      onModalClose={handleTaskEditorClose}\n      classes={{ content: 'task-editor', button: 'task-editor__btn--close' }}\n      onModalClick={handleClick}\n      size=\"lg\"\n      id=\"taskEditor\"\n    >\n      {children}\n    </Modal>\n  ) : (\n    <TaskEditorPane onClose={handleTaskEditorClose} onClick={handleClick}>\n      {children}\n    </TaskEditorPane>\n  );\n};\n\n/*\n  TODO: Break up logic in child components\n  */\n\nclass TaskEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: this.props.commentIds && this.props.commentIds.length > 0,\n      name: this.props.name,\n      notes: this.props.notes,\n      newSubtask: '',\n      newComment: '',\n      currentFocus: null,\n      isColorPickerActive: false,\n      currentTag: null,\n      isDatePickerActive: false,\n      prevProps: {\n        name: this.props.name,\n        notes: this.props.notes\n      }\n    };\n    this.membersListButton = React.createRef();\n  }\n\n  componentDidMount() {\n    const {\n      taskId,\n      firebase,\n      fetchTaskComments,\n      addComment,\n      deleteComment,\n      updateComment\n    } = this.props;\n\n    console.log(taskId);\n    fetchTaskComments(taskId).then(() => {\n      this.setState({\n        isFetching: false\n      });\n    });\n\n    this.commentObserver = firebase.db\n      .collection('comments')\n      .where('taskId', '==', taskId)\n      .onSnapshot(snapshot => {\n        snapshot.docChanges().forEach(change => {\n          const commentId = change.doc.id;\n          const commentData = change.doc.data();\n          if (change.type === 'added') {\n            addComment({ commentId, commentData });\n          }\n          if (change.type === 'modified') {\n            updateComment({ commentId, commentData });\n          }\n          if (change.type === 'removed') {\n            deleteComment(commentId);\n          }\n        });\n      });\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.name !== state.prevProps.name) {\n      return {\n        name: props.name,\n        prevProps: {\n          ...state.prevProps,\n          name: props.name\n        }\n      };\n    }\n    if (props.notes !== state.prevProps.notes) {\n      return {\n        notes: props.notes,\n        prevProps: {\n          ...state.prevProps,\n          notes: props.notes\n        }\n      };\n    }\n    return null;\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  deleteTask = () => {\n    const {\n      taskId,\n      listId,\n      assignedTo,\n      folders,\n      firebase,\n      handleTaskEditorClose\n    } = this.props;\n    firebase.deleteTask({ taskId, listId, assignedTo, folders });\n    handleTaskEditorClose();\n  };\n\n  onBlur = e => {\n    const { [taskKey]: currentValue, taskId, firebase } = this.props;\n    const taskKey = e.target.name;\n    const { [taskKey]: updatedValue } = this.state;\n\n    // When field loses focus, update task if change is detected\n\n    if (updatedValue !== currentValue) {\n      firebase.updateTask(taskId, {\n        [taskKey]: updatedValue\n      });\n      console.log('updated task!');\n    }\n\n    this.setState({\n      currentFocus: null\n    });\n  };\n\n  addComment = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { userId, firebase, taskId, projectId } = this.props;\n    const { newComment: content } = this.state;\n    firebase.addComment({ userId, content, taskId, projectId });\n    this.resetForm('newComment');\n    e.preventDefault();\n  };\n\n  resetForm = key => {\n    this.setState({\n      [key]: ''\n    });\n  };\n\n  onFocus = e => {\n    this.setState({\n      currentFocus: e.target.name\n    });\n  };\n\n  handleClick = e => {\n    const { currentFocus } = this.state;\n    if (\n      (currentFocus === 'newComment' &&\n        !this.commentFormEl.contains(e.target)) ||\n      (currentFocus === 'newSubtask' &&\n        !this.newSubtaskFormEl.contains(e.target))\n    ) {\n      this.setState({\n        currentFocus: null\n      });\n    }\n  };\n\n  handleMoreActions = e => {\n    if (!e.target.matches('a')) return;\n    const { action } = e.target.dataset;\n    switch (action) {\n      case 'delete':\n        this.deleteTask();\n        break;\n    }\n    e.preventDefault(); // prevents page reload\n  };\n\n  handleCommentLike = commentId => {\n    const { firebase, userId, commentsById } = this.props;\n    const { likes } = commentsById[commentId];\n\n    if (likes.indexOf(userId) === -1) {\n      firebase.updateComment(commentId, {\n        likes: firebase.addToArray(userId)\n      });\n    } else {\n      firebase.updateComment(commentId, {\n        likes: firebase.removeFromArray(userId)\n      });\n    }\n  };\n\n  assignMember = userId => {\n    const { taskId, projectId, assignedTo, firebase } = this.props;\n\n    if (assignedTo.includes(userId)) {\n      if (!projectId) return;\n      const folderId = this.props.folders[userId];\n      firebase.removeAssignee({ taskId, userId, folderId });\n    } else {\n      firebase.addAssignee({ taskId, projectId, userId });\n    }\n  };\n\n  toggleColorPicker = value => {\n    this.setState({\n      isColorPickerActive: value\n    });\n  };\n\n  addTag = text => {\n    console.log(text);\n    const {\n      firebase,\n      currentUser,\n      projectTags,\n      taskId,\n      projectId,\n      addTag\n    } = this.props;\n    const { userId, tags: userTags } = currentUser;\n    const isProjectTag = projectTags && text in projectTags;\n    const isUserTag = userTags && text in userTags;\n    const tagData = isProjectTag\n      ? projectTags[text]\n      : isUserTag\n      ? userTags[text]\n      : { projectId, text };\n\n    firebase\n      .addTag({\n        userId,\n        taskId,\n        projectId,\n        ...tagData\n      })\n      .then(() => {\n        if (!isUserTag && !isProjectTag) {\n          this.setState({\n            currentTag: text\n          });\n          this.toggleColorPicker(true);\n        }\n      });\n  };\n\n  setTagColor = color => {\n    const { userId, projectId, firebase } = this.props;\n    const { currentTag: tag } = this.state;\n    firebase.setTagColor({ userId, projectId, tag, color });\n  };\n\n  removeTag = tag => {\n    const { taskId, firebase } = this.props;\n    firebase.removeTag({ taskId, tag });\n    this.toggleColorPicker(false);\n  };\n\n  setDueDate = date => {\n    const { firebase, taskId } = this.props;\n\n    firebase.updateTask(taskId, {\n      dueDate: date\n    });\n  };\n\n  toggleDatePicker = () => {\n    this.setState(prevState => ({\n      isDatePickerActive: !prevState.isDatePickerActive\n    }));\n  };\n\n  addSubtask = e => {\n    if (e.type === 'keydown' && e.key !== keys.ENTER) return;\n    const { userId, firebase, taskId, projectId } = this.props;\n    console.log({ userId, projectId });\n    const { newSubtask: name } = this.state;\n    firebase.addSubtask({ userId, name, taskId, projectId });\n    this.resetForm('newSubtask');\n    e.preventDefault();\n  };\n\n  componentWillUnmount() {\n    this.commentObserver();\n  }\n\n  render() {\n    const {\n      handleTaskEditorClose,\n      taskId,\n      commentIds,\n      assignedTo,\n      commentsArray,\n      usersArray,\n      membersArray,\n      currentUser,\n      taskTags,\n      mergedTags,\n      dueDate,\n      subtaskIds,\n      projectId,\n      completedSubtasks,\n      view,\n      projectName,\n      listName,\n      projectColor\n    } = this.props;\n    const {\n      name,\n      notes,\n      newComment,\n      currentFocus,\n      newSubtask,\n      subtasks,\n      isFetching,\n      isColorPickerActive,\n      isDatePickerActive,\n      currentTag\n    } = this.state;\n    const hasSubtasks = subtaskIds && subtaskIds.length > 0;\n    const hasComments = commentIds && commentIds.length > 0;\n    const isAssigned = !!assignedTo && assignedTo.length > 0;\n    const isNewCommentInvalid = newComment === '';\n    const isNewSubtaskInvalid = newSubtask === '';\n    const commentFormIsFocused = currentFocus === 'newComment';\n    const newSubtaskFormIsFocused = currentFocus === 'newSubtask';\n    const taskDueDate = dueDate\n      ? dateUtils.getSimpleDate(dueDate.toDate())\n      : dateUtils.getSimpleDate(new Date());\n    const dueDateStr = dueDate\n      ? dateUtils.toDateString(dueDate.toDate(), {\n          useRelative: true,\n          format: { month: 'short', day: 'numeric' }\n        })\n      : null;\n    const isDueToday = dueDateStr === 'Today';\n    const isDueTmrw = dueDateStr === 'Tomorrow';\n    const isPastDue = dueDate && dateUtils.isPriorDate(dueDate.toDate());\n\n    return (\n      <TaskEditorWrapper\n        handleTaskEditorClose={handleTaskEditorClose}\n        handleClick={this.handleClick}\n        view={view}\n      >\n        <Toolbar className={`task-editor__toolbar`}>\n          {projectId && (\n            <TaskEditorAssignMember buttonRef={this.membersListButton}>\n              <MemberSearch\n                users={usersArray}\n                assignedMembers={assignedTo}\n                onMemberClick={this.assignMember}\n              />\n            </TaskEditorAssignMember>\n          )}\n          <TaskEditorMoreActions onMenuClick={this.handleMoreActions} />\n        </Toolbar>\n        <form\n          name=\"editTaskForm\"\n          onFocus={this.onFocus}\n          className=\"task-editor__edit-task-form\"\n        >\n          <Textarea\n            className=\"task-editor__textarea--title\"\n            name=\"name\"\n            value={name}\n            onChange={this.onChange}\n            required\n            onBlur={this.onBlur}\n            onFocus={this.onFocus}\n          />\n          {projectId && (\n            <TaskEditorSection>\n              <div className=\"task-editor__project-name\">\n                <ProjectIcon\n                  color={projectColor}\n                  className=\"task-editor__project-icon\"\n                />\n                {projectName}\n              </div>\n              <div className=\"task-editor__list-name\">\n                <Icon name=\"chevron-right\" />\n                {listName}\n              </div>\n            </TaskEditorSection>\n          )}\n          <TaskEditorSection>\n            <Button\n              onClick={this.toggleDatePicker}\n              type=\"button\"\n              className={`task-editor__btn--due-date ${\n                isDatePickerActive ? 'is-active' : ''\n              }`}\n            >\n              <span className=\"task-editor__due-date-icon\">\n                <Icon name=\"calendar\" />\n              </span>\n              <span className=\"task-editor__due-date-wrapper\">\n                {!dueDate ? (\n                  <span className=\"task-editor__no-due-date\">Set due date</span>\n                ) : (\n                  <>\n                    <span className=\"task-editor__section-title--sm\">\n                      Due Date\n                    </span>\n                    <span\n                      className={`task-editor__due-date ${\n                        isDueToday\n                          ? 'is-due-today'\n                          : isDueTmrw\n                          ? 'is-due-tmrw'\n                          : isPastDue\n                          ? 'is-past-due'\n                          : ''\n                      }`}\n                    >\n                      {dueDateStr}\n                    </span>\n                  </>\n                )}\n              </span>\n            </Button>\n            <DatePicker\n              innerRef={el => (this.datePickerEl = el)}\n              onClose={this.toggleDatePicker}\n              selectedDate={dueDate ? taskDueDate : null}\n              currentMonth={taskDueDate.month}\n              currentYear={taskDueDate.year}\n              selectDate={this.setDueDate}\n              isActive={isDatePickerActive}\n            />\n          </TaskEditorSection>\n          <TaskEditorSection>\n            <div className=\"task-editor__section-icon\">\n              <Icon name=\"user\" />\n            </div>\n            {isAssigned && (\n              <div className=\"task-editor__members\">\n                {membersArray.map(member => {\n                  const { name, photoURL, userId } = member;\n                  return (\n                    <Avatar\n                      classes={{\n                        avatar: 'task-editor__avatar',\n                        placeholder: 'task-editor__avatar-placeholder'\n                      }}\n                      fullName={name}\n                      size=\"sm\"\n                      variant=\"circle\"\n                      imgSrc={photoURL}\n                      key={userId}\n                    />\n                  );\n                })}\n              </div>\n            )}\n            {projectId && (\n              <Button\n                type=\"button\"\n                className=\"task-editor__btn--add-member\"\n                onClick={() => this.membersListButton.current.click()}\n              >\n                <Icon name=\"plus\" />\n              </Button>\n            )}\n          </TaskEditorSection>\n          <TaskEditorSection>\n            <div className=\"task-editor__section-icon\">\n              <Icon name=\"tag\" />\n            </div>\n            <TagsInput\n              addTag={this.addTag}\n              tagSuggestions={mergedTags}\n              assignedTags={taskTags}\n              isColorPickerActive={isColorPickerActive}\n              setTagColor={this.setTagColor}\n              removeTag={this.removeTag}\n              currentTag={currentTag}\n            />\n          </TaskEditorSection>\n          <TaskEditorSection>\n            <div className=\"task-editor__section-icon\">\n              <Icon name=\"edit-3\" />\n            </div>\n            <Textarea\n              className=\"task-editor__textarea task-editor__textarea--description\"\n              name=\"notes\"\n              value={notes}\n              onChange={this.onChange}\n              placeholder=\"Add a description\"\n              onBlur={this.onBlur}\n              onFocus={this.onFocus}\n            />\n          </TaskEditorSection>\n        </form>\n        <TaskEditorSection>\n          <div className=\"task-editor__section-header\">\n            <div className=\"task-editor__section-icon\">\n              <Icon name=\"check-square\" />\n            </div>\n            <h3 className=\"task-editor__section-title\">\n              {hasSubtasks && (\n                <span className=\"task-editor__section-detail\">\n                  {completedSubtasks.length}/{subtaskIds.length}\n                </span>\n              )}\n              Subtasks\n            </h3>\n            <hr className=\"task-editor__hr\" />\n          </div>\n          {hasSubtasks && (\n            <Subtasks\n              taskId={taskId}\n              subtaskIds={subtaskIds}\n              projectId={projectId}\n            />\n          )}\n          <div className=\"task-editor__section-icon\">\n            {newSubtaskFormIsFocused ? (\n              <div className=\"task-editor__checkbox\" />\n            ) : (\n              <Icon name=\"plus-circle\" />\n            )}\n          </div>\n          <form\n            name=\"newSubtaskForm\"\n            className={`task-editor__new-subtask-form ${\n              currentFocus === 'newSubtask' ? 'is-focused' : ''\n            }`}\n            ref={el => (this.newSubtaskFormEl = el)}\n            onSubmit={this.addSubtask}\n          >\n            <Textarea\n              className=\"task-editor__textarea task-editor__textarea--new-subtask\"\n              name=\"newSubtask\"\n              value={newSubtask}\n              onChange={this.onChange}\n              placeholder=\"Add a subtask\"\n              onFocus={this.onFocus}\n              onKeyDown={this.addSubtask}\n            />\n            {currentFocus === 'newSubtask' && (\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isNewSubtaskInvalid}\n                onClick={this.addSubtask}\n                className=\"task-editor__btn--add-subtask\"\n              >\n                Add subtask\n              </Button>\n            )}\n          </form>\n        </TaskEditorSection>\n        <TaskEditorSection>\n          <div className=\"task-editor__section-header\">\n            <div className=\"task-editor__section-icon\">\n              <Icon name=\"message-circle\" />\n            </div>\n            <h3 className=\"task-editor__section-title\">\n              {hasComments && (\n                <span className=\"task-editor__section-detail\">\n                  {commentIds.length}\n                </span>\n              )}\n              {hasComments && commentIds.length === 1 ? 'Comment' : 'Comments'}\n            </h3>\n            <hr className=\"task-editor__hr\" />\n          </div>\n\n          {!isFetching && hasComments && (\n            <div className=\"task-editor__comments\">\n              {commentsArray.map(comment => {\n                const { commentId } = comment;\n                return (\n                  <TaskEditorComment\n                    key={commentId}\n                    comment={comment}\n                    handleLike={this.handleCommentLike}\n                  />\n                );\n              })}\n            </div>\n          )}\n          <Avatar\n            classes={{\n              avatar: 'task-editor__avatar',\n              placeholder: 'task-editor__avatar-placeholder'\n            }}\n            fullName={currentUser.name}\n            size=\"sm\"\n            variant=\"circle\"\n            imgSrc={currentUser.photoURL}\n          />\n          <form\n            name=\"commentForm\"\n            className={`task-editor__comment-form ${\n              commentFormIsFocused ? 'is-focused' : ''\n            }`}\n            ref={el => (this.commentFormEl = el)}\n            onSubmit={this.addComment}\n          >\n            <Textarea\n              className=\"task-editor__textarea task-editor__textarea--comment\"\n              name=\"newComment\"\n              value={newComment}\n              onChange={this.onChange}\n              placeholder=\"Write a comment...\"\n              onFocus={this.onFocus}\n              onKeyDown={this.addComment}\n            />\n            {commentFormIsFocused && (\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                size=\"small\"\n                variant=\"contained\"\n                disabled={isNewCommentInvalid}\n                onClick={this.addComment}\n                name=\"newCommentSubmit\"\n                className=\"task-editor__btn--submit-comment\"\n              >\n                Send\n              </Button>\n            )}\n          </form>\n        </TaskEditorSection>\n      </TaskEditorWrapper>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentUser: currentUserSelectors.getCurrentUser(state),\n    commentsArray: commentSelectors.getCommentsArray(\n      state,\n      ownProps.commentIds\n    ),\n    commentsById: commentSelectors.getCommentsById(state),\n    usersArray: userSelectors.getUsersArray(state),\n    membersArray: userSelectors.getMembersArray(state, ownProps.assignedTo),\n    taskTags: taskSelectors.getTaskTags(state, ownProps),\n    mergedTags: currentUserSelectors.getMergedTags(state),\n    projectTags: projectSelectors.getProjectTags(state, ownProps.projectId),\n    completedSubtasks: subtaskSelectors.getCompletedSubtasks(\n      state,\n      ownProps.subtaskIds\n    ),\n    projectColor: projectSelectors.getProjectColor(state, ownProps.projectId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchTaskComments: taskId =>\n      dispatch(commentActions.fetchTaskComments(taskId)),\n    syncTaskComments: taskId =>\n      dispatch(commentActions.syncTaskComments(taskId)),\n    addComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.addComment({ commentId, commentData })),\n    deleteComment: commentId =>\n      dispatch(commentActions.deleteComment(commentId)),\n    updateComment: ({ commentId, commentData }) =>\n      dispatch(commentActions.updateComment({ commentId, commentData })),\n    addTag: (taskId, tag) => dispatch(taskActions.addTag(taskId, tag))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TaskEditor)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { withFirebase } from '../Firebase';\nimport { projectActions, projectSelectors } from '../../ducks/projects';\nimport {\n  selectTask as selectTaskAction,\n  getSelectedTaskId\n} from '../../ducks/selectedTask';\nimport {\n  selectProject as selectProjectAction,\n  getSelectedProjectId\n} from '../../ducks/selectedProject';\nimport { listActions, listSelectors } from '../../ducks/lists';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { subtaskActions, subtaskSelectors } from '../../ducks/subtasks';\nimport Board from './Board';\nimport { Input } from '../Input';\nimport { List } from '../List';\nimport { TaskEditor } from '../TaskEditor';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { utils } from '../../utils';\nimport './Board.scss';\n\nclass BoardContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: true,\n      isTaskEditorOpen: false,\n      projectName: this.props.projectName\n    };\n  }\n\n  componentDidMount() {\n    const {\n      fetchListsById,\n      fetchProjectTasks,\n      fetchProjectSubtasks,\n      firebase,\n      updateProject,\n      addTask,\n      deleteTask,\n      updateTask,\n      updateProjectTags,\n      projectId,\n      project,\n      updateListIds,\n      addSubtask,\n      updateSubtask,\n      deleteSubtask,\n      selectProject,\n      selectedProjectId,\n      fetchProjectContent\n    } = this.props;\n\n    if (selectedProjectId !== projectId) {\n      selectProject(projectId);\n    }\n    /*\n    fetchListsById(projectId);\n    fetchProjectTasks(projectId);\n    fetchProjectSubtasks(projectId)\n    */\n    fetchProjectContent(projectId).then(() => {\n      this.setState({\n        isFetching: false\n      });\n\n      const { tasksById, subtasksById } = this.props;\n\n      this.listObserver = this.props.handleListSubscription(projectId);\n\n      this.projectObserver = firebase\n        .getProjectDoc(projectId)\n        .onSnapshot(snapshot => {\n          const updatedProject = snapshot.data();\n          if (!utils.isEqual(updatedProject.listIds, project.listIds)) {\n            updateListIds(projectId, updatedProject.listIds);\n          } else if (!utils.isEqual(updatedProject.tags, project.tags)) {\n            updateProjectTags(projectId, updatedProject.tags);\n          } else {\n            updateProject(projectId, updatedProject);\n          }\n        });\n\n      this.subtaskObserver = firebase.db\n        .collection('subtasks')\n        .where('projectId', '==', projectId)\n        .onSnapshot(querySnapshot => {\n          querySnapshot.docChanges().forEach(change => {\n            const subtaskId = change.doc.id;\n            const subtaskData = change.doc.data();\n            if (change.type === 'added') {\n              if (subtaskId in subtasksById) return;\n              addSubtask({ subtaskId, subtaskData });\n            }\n            if (change.type === 'modified') {\n              updateSubtask({ subtaskId, subtaskData });\n            }\n            if (change.type === 'removed') {\n              deleteSubtask(subtaskId);\n            }\n          });\n        });\n\n      this.taskObserver = firebase.db\n        .collection('tasks')\n        .where('projectId', '==', projectId)\n        .onSnapshot(querySnapshot => {\n          querySnapshot.docChanges().forEach(change => {\n            const taskId = change.doc.id;\n            const taskData = change.doc.data();\n            if (change.type === 'added') {\n              if (tasksById && taskId in tasksById) return;\n              console.log(`task added: ${taskId}`);\n              addTask({ taskId, taskData });\n            } else if (change.type === 'removed') {\n              deleteTask(taskId);\n            } else {\n              updateTask({ taskId, taskData });\n            }\n          });\n        });\n    });\n    console.log('mounted');\n  }\n\n  componentWillUnmount() {\n    const { selectProject } = this.props;\n    selectProject(null);\n    this.projectObserver();\n    this.listObserver();\n    this.taskObserver();\n    this.subtaskObserver();\n  }\n\n  onDragStart = () => {\n    this.setState({\n      isDragging: true\n    });\n  };\n\n  onDragEnd = ({ destination, draggableId, source, type }) => {\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    const { firebase } = this.props;\n    if (type === droppableTypes.TASK) {\n      const { listsById } = this.props;\n      const isMovedWithinList = source.droppableId === destination.droppableId;\n      const updatedTaskIds = [...listsById[destination.droppableId].taskIds];\n      if (isMovedWithinList) {\n        updatedTaskIds.splice(source.index, 1);\n        updatedTaskIds.splice(destination.index, 0, draggableId);\n        firebase.updateList(source.droppableId, {\n          taskIds: updatedTaskIds\n        });\n      } else {\n        updatedTaskIds.splice(destination.index, 0, draggableId);\n        firebase.moveTaskToList({\n          taskId: draggableId,\n          origListId: source.droppableId,\n          newListId: destination.droppableId,\n          updatedTaskIds\n        });\n      }\n    }\n\n    if (type === droppableTypes.LIST) {\n      const { projectsById, projectId, reorderLists } = this.props;\n      const updatedListIds = [...projectsById[projectId].listIds];\n      updatedListIds.splice(source.index, 1);\n      updatedListIds.splice(destination.index, 0, draggableId);\n      firebase.updateProject(projectId, {\n        listIds: updatedListIds\n      });\n      reorderLists(projectId, updatedListIds);\n    }\n  };\n\n  toggleTaskEditor = () => {\n    const { isTaskEditorOpen } = this.state;\n    if (isTaskEditorOpen) {\n      const { selectTask } = this.props;\n      selectTask(null);\n    }\n    this.setState(prevState => ({\n      isTaskEditorOpen: !prevState.isTaskEditorOpen\n    }));\n  };\n\n  handleTaskClick = taskId => {\n    const { selectTask } = this.props;\n    selectTask(taskId);\n    this.toggleTaskEditor();\n  };\n\n  onNameChange = e => {\n    this.setState({\n      projectName: e.target.value\n    });\n  };\n\n  onNameBlur = e => {\n    const { projectName, projectId, firebase } = this.props;\n    const { projectName: newProjectName } = this.state;\n\n    // When field loses focus, update list title if change is detected\n\n    if (newProjectName !== projectName) {\n      firebase.updateProjectName({ projectId, name: newProjectName });\n      console.log('updated project name!');\n    }\n  };\n\n  render() {\n    const { isFetching, isTaskEditorOpen, projectName } = this.state;\n    const { lists, tasksById, projectId, userId, selectedTaskId } = this.props;\n    if (isFetching) return null;\n    return (\n      <main className=\"board-container\">\n        <Input\n          className=\"board__input--title\"\n          name=\"projectName\"\n          type=\"text\"\n          value={projectName}\n          onChange={this.onNameChange}\n          required\n          hideLabel\n          onBlur={this.onNameBlur}\n        />\n        <DragDropContext\n          onDragEnd={this.onDragEnd}\n          onDragStart={this.onDragStart}\n        >\n          <Board projectId={projectId}>\n            {lists.map((list, listIndex) => {\n              const { listId, name: listName, taskIds } = list;\n              return (\n                <List\n                  listId={listId}\n                  key={listId}\n                  listIndex={listIndex}\n                  name={listName}\n                  taskIds={taskIds}\n                  isFetchingTasks={isFetching}\n                  onTaskClick={this.handleTaskClick}\n                  projectId={projectId}\n                  view=\"board\"\n                  isRestricted={false}\n                />\n              );\n            })}\n          </Board>\n        </DragDropContext>\n        {isTaskEditorOpen && (\n          <TaskEditor\n            {...tasksById[selectedTaskId]}\n            handleTaskEditorClose={this.toggleTaskEditor}\n            userId={userId}\n            view=\"board\"\n          />\n        )}\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    projectsById: projectSelectors.getProjectsById(state),\n    selectedProjectId: getSelectedProjectId(state),\n    selectedTaskId: getSelectedTaskId(state),\n    listsById: listSelectors.getListsById(state),\n    lists: listSelectors.getSelectedProjectLists(state),\n    subtasksById: subtaskSelectors.getSubtasksById(state),\n    tasksById: taskSelectors.getTasksById(state),\n    project: projectSelectors.getProject(state, ownProps.projectId)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchProjectContent: projectId =>\n      dispatch(projectActions.fetchProjectContent(projectId)),\n    updateProject: (projectId, projectData) =>\n      dispatch(projectActions.updateProject(projectId, projectData)),\n    selectProject: projectId => dispatch(selectProjectAction(projectId)),\n    selectTask: taskId => dispatch(selectTaskAction(taskId)),\n    fetchListsById: projectId =>\n      dispatch(listActions.fetchListsById(projectId)),\n    updateList: ({ listId, listData }) =>\n      dispatch(listActions.updateList(listId, listData)),\n    addList: ({ listId, listData }) =>\n      dispatch(listActions.addList({ listId, listData })),\n    deleteList: listId => dispatch(listActions.deleteList(listId)),\n    fetchProjectTasks: projectId =>\n      dispatch(taskActions.fetchProjectTasks(projectId)),\n    fetchProjectSubtasks: projectId =>\n      dispatch(subtaskActions.fetchProjectSubtasks(projectId)),\n    reorderLists: (projectId, listIds) =>\n      dispatch(projectActions.reorderLists(projectId, listIds)),\n    updateListIds: (projectId, listIds) =>\n      dispatch(projectActions.updateListIds(projectId, listIds)),\n    updateProjectTags: (projectId, tags) =>\n      dispatch(projectActions.updateProjectTags(projectId, tags)),\n    addTask: ({ taskId, taskData }) =>\n      dispatch(taskActions.addTask({ taskId, taskData })),\n    updateTask: ({ taskId, taskData }) =>\n      dispatch(taskActions.updateTask({ taskId, taskData })),\n    deleteTask: taskId => dispatch(taskActions.deleteTask(taskId)),\n    addSubtask: ({ subtaskId, subtaskData }) =>\n      dispatch(subtaskActions.addSubtask({ subtaskId, subtaskData })),\n    deleteSubtask: subtaskId =>\n      dispatch(subtaskActions.deleteSubtask(subtaskId)),\n    updateSubtask: ({ subtaskId, subtaskData }) =>\n      dispatch(subtaskActions.updateSubtask({ subtaskId, subtaskData })),\n    handleListSubscription: projectId =>\n      dispatch(listActions.handleListSubscription(projectId))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(BoardContainer)\n);\n","import React from 'react';\nimport './Main.scss';\n\nconst Main = ({ classes, children, title }) => (\n  <main className={`main ${classes.main || ''}`}>\n    <h1 className={`main__title ${classes.title || ''}`}>{title}</h1>\n    {children}\n  </main>\n);\n\nMain.defaultProps = {\n  classes: {\n    main: '',\n    title: ''\n  }\n};\n\nexport default Main;\n","import React from 'react';\nimport { Icon } from '../Icon';\n\nconst DashboardPanel = ({ name, icon, children, size }) => (\n  <section className={`dashboard__section dashboard__section--${size}`}>\n    <h2 className=\"dashboard__section-header\">\n      <Icon name={icon} className=\"dashboard__section-icon\" />\n      {name}\n    </h2>\n    {children}\n  </section>\n);\n\nDashboardPanel.defaultProps = {\n  size: 'lg'\n};\n\nexport default DashboardPanel;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withFirebase } from '../Firebase';\nimport DashboardPanel from './DashboardPanel';\nimport { Task } from '../Task';\nimport {\n  currentUserActions,\n  currentUserSelectors\n} from '../../ducks/currentUser';\n\nclass TasksDueSoon extends Component {\n  state = {\n    isFetching: true\n  };\n\n  componentDidMount() {\n    const {\n      currentUserId,\n      fetchTasksDueWithinDays,\n      addTaskDueSoon,\n      deleteTaskDueSoon,\n      updateTaskDueSoon,\n      firebase\n    } = this.props;\n    fetchTasksDueWithinDays(currentUserId, 7).then(() => {\n      this.setState({\n        isFetching: false\n      });\n    });\n\n    const startingDate = new Date();\n    const timeStart = startingDate.setHours(0, 0, 0, 0);\n    const endingDate = new Date(startingDate);\n    const timeEnd = endingDate.setDate(endingDate.getDate() + 7);\n\n    this.taskObserver = firebase.db\n      .collection('tasks')\n      .where('assignedTo', 'array-contains', currentUserId)\n      .where('dueDate', '<=', timeEnd)\n      .orderBy('dueDate', 'asc')\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const taskId = change.doc.id;\n          const taskData = change.doc.data();\n          if (change.type === 'added') {\n            console.log('added task');\n            addTaskDueSoon({ taskId, taskData });\n          } else if (change.type === 'removed') {\n            deleteTaskDueSoon(taskId);\n          } else {\n            updateTaskDueSoon({ taskId, taskData });\n          }\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.taskObserver();\n  }\n\n  render() {\n    const { isFetching } = this.state;\n    const { tasksDueSoon, onTaskClick } = this.props;\n    if (isFetching) return null;\n    return (\n      <DashboardPanel icon=\"check-square\" size=\"md\" name=\"Tasks Due Soon\">\n        {tasksDueSoon.map((task, i) => (\n          <Task\n            index={i}\n            key={task.taskId}\n            onTaskClick={onTaskClick}\n            {...task}\n          />\n        ))}\n      </DashboardPanel>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentUserId: currentUserSelectors.getCurrentUserId(state),\n    tasksDueSoon: currentUserSelectors.getTasksDueSoonArr(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchTasksDueWithinDays: (userId, days) =>\n      dispatch(currentUserActions.fetchTasksDueWithinDays(userId, days)),\n    addTaskDueSoon: ({ taskId, taskData }) =>\n      dispatch(currentUserActions.addTaskDueSoon({ taskId, taskData })),\n    updateTaskDueSoon: ({ taskId, taskData }) =>\n      dispatch(currentUserActions.updateTaskDueSoon({ taskId, taskData })),\n    deleteTaskDueSoon: taskId =>\n      dispatch(currentUserActions.deleteTaskDueSoon(taskId))\n  };\n};\n\nexport default withFirebase(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TasksDueSoon)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../Session';\nimport {\n  selectTask as selectTaskAction,\n  getSelectedTaskId\n} from '../../ducks/selectedTask';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport { ProjectGridContainer } from '../ProjectGrid';\nimport TasksDueSoon from './TasksDueSoon';\nimport DashboardPanel from './DashboardPanel';\nimport { TaskEditor } from '../TaskEditor';\nimport './Dashboard.scss';\n\nclass Dashboard extends Component {\n  state = {\n    isTaskEditorOpen: false\n  };\n\n  toggleTaskEditor = () => {\n    const { isTaskEditorOpen } = this.state;\n    if (isTaskEditorOpen) {\n      const { selectTask } = this.props;\n      selectTask(null);\n    }\n    this.setState(prevState => ({\n      isTaskEditorOpen: !prevState.isTaskEditorOpen\n    }));\n  };\n\n  handleTaskClick = taskId => {\n    const { selectTask } = this.props;\n    selectTask(taskId);\n    this.toggleTaskEditor();\n  };\n\n  render() {\n    const {\n      tasksDueSoon,\n      toggleProjectComposer,\n      userId,\n      selectedTaskId\n    } = this.props;\n    const { isTaskEditorOpen } = this.state;\n    return (\n      <main className=\"dashboard\">\n        <h1 className=\"dashboard__header\">Home</h1>\n        <TasksDueSoon onTaskClick={this.handleTaskClick} />\n        <DashboardPanel name=\"Notifications\" icon=\"bell\" size=\"sm\" />\n        <DashboardPanel name=\"Projects\" icon=\"grid\">\n          <ProjectGridContainer openProjectComposer={toggleProjectComposer} />\n        </DashboardPanel>\n        {isTaskEditorOpen && (\n          <TaskEditor\n            {...tasksDueSoon[selectedTaskId]}\n            handleTaskEditorClose={this.toggleTaskEditor}\n            userId={userId}\n            view=\"board\"\n          />\n        )}\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    selectedTaskId: getSelectedTaskId(state),\n    tasksDueSoon: currentUserSelectors.getTasksDueSoonById(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectTask: taskId => dispatch(selectTaskAction(taskId))\n  };\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Dashboard)\n);\n","import React from 'react';\n\nconst ExpansionPanelHeader = ({ children, className, onClick }) => {\n  return (\n    <div>\n      <div\n        className={`expansion-panel__header ${className}`}\n        role=\"button\"\n        onClick={onClick}\n        tabIndex={0}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n\nExpansionPanelHeader.defaultProps = {\n  className: ''\n};\n\nexport default ExpansionPanelHeader;\n","import React from 'react';\n\nconst ExpansionPanelContent = ({ className, children }) => {\n  return <div className={className}>{children}</div>;\n};\n\nExpansionPanelContent.defaultProps = {\n  className: ''\n};\n\nexport default ExpansionPanelContent;\n","import React, { Component } from 'react';\nimport ExpansionPanelHeader from './ExpansionPanelHeader';\nimport ExpansionPanelContent from './ExpansionPanelContent';\n\nexport default class ExpansionPanel extends Component {\n  static defaultProps = {\n    classes: {\n      panel: '',\n      header: '',\n      content: ''\n    },\n    isExpanded: null,\n    onChange: null,\n    id: null\n  };\n\n  state = {\n    isExpanded: false\n  };\n\n  toggleContent = () => {\n    const { onChange, id } = this.props;\n\n    if (!onChange) {\n      this.setState(prevProps => ({\n        isExpanded: !prevProps.isExpanded\n      }));\n    } else {\n      onChange(id);\n    }\n  };\n\n  render() {\n    const { classes, header, content, isExpanded: propsIsExpanded } = this.props;\n    const isExpanded = propsIsExpanded !== null ? propsIsExpanded : this.state.isExpanded;\n\n    return (\n      <div\n        className={`accordion-panel ${classes.panel || ''}`}\n        aria-expanded={isExpanded}\n      >\n        <ExpansionPanelHeader onClick={this.toggleContent} className={classes.header || ''}>\n          {header}\n        </ExpansionPanelHeader>\n        {isExpanded && (\n          <ExpansionPanelContent className={classes.content || ''}>\n            {content}\n          </ExpansionPanelContent>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { taskActions, taskSelectors } from '../../ducks/tasks';\nimport { TaskComposer } from '../TaskComposer';\nimport { Icon } from '../Icon';\nimport { Menu, MenuItem } from '../Menu';\nimport { PopoverWrapper } from '../Popover';\nimport { Input } from '../Input';\nimport { Tasks } from '../Tasks';\nimport { ExpansionPanel } from '../ExpansionPanel';\nimport './Folder.scss';\n\nclass Folder extends Component {\n  state = {\n    name: this.props.name\n  };\n\n  render() {\n    const { tasks, onTaskClick, folderId, index, isRestricted } = this.props;\n    const { name } = this.state;\n    return (\n      <Draggable\n        draggableId={folderId}\n        index={index}\n        isDragDisabled={isRestricted}\n      >\n        {provided => (\n          <>\n            <section\n              className=\"folder\"\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <header className=\"folder__header\">\n                <Input\n                  className=\"folder__input--title\"\n                  name=\"name\"\n                  type=\"text\"\n                  value={name}\n                  onChange={this.onChange}\n                  required={!isRestricted}\n                  hideLabel\n                  isReadOnly={isRestricted}\n                  onBlur={this.onBlur}\n                />\n                <PopoverWrapper\n                  classes={{\n                    wrapper: 'folder__popover-wrapper',\n                    popover: 'folder__popover'\n                  }}\n                  alignInner=\"right\"\n                  buttonProps={{\n                    size: 'medium',\n                    iconOnly: true,\n                    className: 'folder__btn--more-actions',\n                    children: <Icon name=\"more-vertical\" />\n                  }}\n                >\n                  <Menu>\n                    <MenuItem />\n                  </Menu>\n                </PopoverWrapper>\n              </header>\n              <div className=\"folder__content\">\n                <Tasks\n                  tasks={tasks}\n                  listId={null}\n                  folderId={folderId}\n                  onTaskClick={onTaskClick}\n                  view=\"list\"\n                />\n              </div>\n              {provided.placeholder}\n              <TaskComposer\n                listId={null}\n                listName={null}\n                projectId={null}\n                projectName={null}\n                folderId={folderId}\n              />\n            </section>\n            {provided.placeholder}\n          </>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    tasks: taskSelectors.getFolderTasks(state, ownProps.taskIds)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Folder);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { withAuthorization } from '../Session';\nimport {\n  currentUserActions,\n  currentUserSelectors\n} from '../../ducks/currentUser';\nimport { taskSelectors, taskActions } from '../../ducks/tasks';\nimport { selectTask as selectTaskAction, getSelectedTaskId } from '../../ducks/selectedTask';\nimport * as droppableTypes from '../../constants/droppableTypes';\nimport { Folder } from '../Folder';\nimport { Main } from '../Main';\nimport { TaskEditor } from '../TaskEditor';\nimport './UserTasks.scss';\n\nclass UserTasks extends Component {\n  state = {\n    isFetching: true,\n    isTaskEditorOpen: false\n  };\n\n  componentDidMount() {\n    const {\n      userId,\n      fetchFolders,\n      fetchUserTasks,\n      addTask,\n      updateTask,\n      deleteTask,\n      addFolder,\n      updateFolder,\n      deleteFolder,\n      firebase\n    } = this.props;\n    fetchFolders(userId);\n    fetchUserTasks(userId).then(() => {\n      this.setState({\n        isFetching: false\n      });\n    });\n\n    this.taskObserver = firebase.db\n      .collection('tasks')\n      .where('assignedTo', 'array-contains', userId)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const taskId = change.doc.id;\n          const taskData = change.doc.data();\n          if (change.type === 'added') {\n            console.log('added task');\n            addTask({ taskId, taskData });\n          } else if (change.type === 'removed') {\n            deleteTask(taskId);\n          } else {\n            updateTask({ taskId, taskData });\n          }\n        });\n      });\n\n    this.folderObserver = firebase\n      .getDocRef(`users/${userId}`)\n      .collection('folders')\n      .onSnapshot(querySnapshot => {\n        querySnapshot.docChanges().forEach(change => {\n          const folderId = change.doc.id;\n          const folderData = change.doc.data();\n          if (change.type === 'added') {\n            addFolder({ folderId, folderData });\n          } else if (change.type === 'removed') {\n            deleteFolder(folderId);\n          } else {\n            updateFolder({ folderId, folderData });\n          }\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.taskObserver();\n    this.folderObserver();\n  }\n\n  toggleTaskEditor = () => {\n    const { isTaskEditorOpen } = this.state;\n    const { selectTask } = this.props;\n\n    if (isTaskEditorOpen) {\n      selectTask(null);\n    }\n\n    this.setState(prevState => ({\n      isTaskEditorOpen: !prevState.isTaskEditorOpen\n    }));\n  };\n\n  handleTaskClick = taskId => {\n    const { selectTask } = this.props;\n    const { isTaskEditorOpen } = this.state;\n    selectTask(taskId);\n    if (!isTaskEditorOpen) {\n      this.toggleTaskEditor();\n    }\n  };\n\n  onDragEnd = ({ destination, draggableId, source, type }) => {\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    const { firebase, currentUserId } = this.props;\n    if (type === droppableTypes.TASK) {\n      const { foldersById } = this.props;\n      const { droppableId: origFolderId, index: origIndex } = source;\n      const { droppableId: newFolderId, index: newIndex } = destination;\n      const isMovedWithinFolder = origFolderId === newFolderId;\n      const updatedTaskIds = [...foldersById[newFolderId].taskIds];\n      if (isMovedWithinFolder) {\n        updatedTaskIds.splice(origIndex, 1);\n        updatedTaskIds.splice(newIndex, 0, draggableId);\n        firebase.updateDoc(`users/${currentUserId}/folders/${newFolderId}`, {\n          taskIds: updatedTaskIds\n        });\n      } else {\n        updatedTaskIds.splice(newIndex, 0, draggableId);\n        firebase.moveTaskToFolder({\n          userId: currentUserId,\n          taskId: draggableId,\n          origFolderId,\n          newFolderId,\n          updatedTaskIds\n        });\n      }\n    }\n\n    if (type === droppableTypes.FOLDER) {\n      const { folderIds, reorderFolders } = this.props;\n      const updatedFolderIds = [...folderIds];\n      updatedFolderIds.splice(source.index, 1);\n      updatedFolderIds.splice(destination.index, 0, draggableId);\n      firebase.updateDoc(`users/${currentUserId}`, {\n        folderIds: updatedFolderIds\n      });\n      reorderFolders(currentUserId, updatedFolderIds);\n    }\n  };\n\n  onDragStart = () => {\n    this.setState({\n      isDragging: true\n    });\n  };\n\n  render() {\n    const { filters, userId, selectedTaskId, tasksById, folders } = this.props;\n    const { isFetching, isTaskEditorOpen } = this.state;\n    if (isFetching) return null;\n    return (\n      <Main title=\"All Tasks\">\n        <div\n          className={`user-tasks__wrapper ${\n            isTaskEditorOpen ? 'show-task-editor' : ''\n          }`}\n        >\n          <DragDropContext\n            onDragEnd={this.onDragEnd}\n            onDragStart={this.onDragStart}\n          >\n            <Droppable droppableId={userId} type={droppableTypes.FOLDER}>\n              {provided => (\n                <div\n                  className=\"user-tasks\"\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                >\n                  {folders.map((folder, i) => (\n                    <Folder\n                      key={folder.folderId}\n                      userId={userId}\n                      folderId={folder.folderId}\n                      index={i}\n                      name={folder.name}\n                      taskIds={folder.taskIds}\n                      onTaskClick={this.handleTaskClick}\n                      isRestricted={folder.isDefault}\n                    />\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n          {isTaskEditorOpen && (\n            <TaskEditor\n              {...tasksById[selectedTaskId]}\n              handleTaskEditorClose={this.toggleTaskEditor}\n              userId={userId}\n              view=\"list\"\n              key={selectedTaskId}\n            />\n          )}\n        </div>\n      </Main>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUserId: currentUserSelectors.getCurrentUserId(state),\n    foldersById: currentUserSelectors.getFolders(state),\n    folders: currentUserSelectors.getFoldersArray(state),\n    folderIds: currentUserSelectors.getFolderIds(state),\n    tasksById: taskSelectors.getTasksById(state),\n    selectedTaskId: getSelectedTaskId(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectTask: taskId => dispatch(selectTaskAction(taskId)),\n    syncUserTasks: userId => dispatch(taskActions.syncUserTasks(userId)),\n    fetchFolders: userId => dispatch(currentUserActions.fetchFolders(userId)),\n    fetchUserTasks: userId => dispatch(taskActions.fetchUserTasks(userId)),\n    addTask: ({ taskId, taskData }) =>\n      dispatch(taskActions.addTask({ taskId, taskData })),\n    updateTask: ({ taskId, taskData }) =>\n      dispatch(taskActions.updateTask({ taskId, taskData })),\n    deleteTask: taskId => dispatch(taskActions.deleteTask(taskId)),\n    addFolder: ({ folderId, folderData }) =>\n      dispatch(currentUserActions.addFolder({ folderId, folderData })),\n    updateFolder: ({ folderId, folderData }) =>\n      dispatch(currentUserActions.updateFolder({ folderId, folderData })),\n    deleteFolder: folderId =>\n      dispatch(currentUserActions.deleteFolder(folderId)),\n    reorderFolders: (userId, folderIds) =>\n      dispatch(currentUserActions.reorderFolders(userId, folderIds))\n  };\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(UserTasks)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { withAuthorization } from '../../components/Session';\nimport * as ROUTES from '../../constants/routes';\nimport { userActions } from '../../ducks/users';\nimport { ProjectGridContainer } from '../../components/ProjectGrid';\nimport { ProjectComposer } from '../../components/ProjectComposer';\nimport { BoardContainer } from '../../components/Board';\nimport { projectActions, projectSelectors } from '../../ducks/projects';\nimport { Main } from '../../components/Main';\nimport { Dashboard } from '../../components/Dashboard';\nimport { UserTasks } from '../../components/UserTasks';\nimport './Home.scss';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isProjectComposerOpen: false,\n      isFetching: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      fetchUsersById,\n      fetchProjectsById,\n      updateUser,\n      userId,\n      firebase\n    } = this.props;\n    console.log('mounted home');\n    fetchUsersById()\n      .then(() => fetchProjectsById(userId))\n      .then(() =>\n        this.setState({\n          isFetching: false\n        })\n      );\n    this.userObserver = firebase.getUserDoc(userId).onSnapshot(snapshot => {\n      const userData = snapshot.data();\n      updateUser({ userId, userData });\n    });\n  }\n\n  toggleProjectComposer = () => {\n    this.setState(prevState => ({\n      isProjectComposerOpen: !prevState.isProjectComposerOpen\n    }));\n  };\n\n  createProject = name => {\n    const { userId, firebase } = this.props;\n    firebase.addProject({ userId, name });\n  };\n\n  render() {\n    const { isProjectComposerOpen, isFetching } = this.state;\n    if (isFetching) return null;\n    const { userId, projectsById } = this.props;\n    return (\n      <>\n        {isProjectComposerOpen && (\n          <ProjectComposer\n            onClose={this.toggleProjectComposer}\n            handleSubmit={this.createProject}\n          />\n        )}\n        <Switch>\n          <Route\n            exact\n            path={ROUTES.HOME}\n            render={props => (\n              <Dashboard\n                toggleProjectComposer={this.toggleProjectComposer}\n                {...props}\n              />\n            )}\n          />\n          <Route\n            path={ROUTES.PROJECT}\n            render={props => (\n              <BoardContainer\n                userId={userId}\n                projectId={props.match.params.id}\n                projectName={projectsById[props.match.params.id].name}\n                {...props}\n              />\n            )}\n          />\n          <Route\n            path={ROUTES.USER_PROJECTS}\n            render={props => (\n              <Main title=\"Projects\">\n                <ProjectGridContainer\n                  userId={userId}\n                  openProjectComposer={this.toggleProjectComposer}\n                  {...props}\n                />\n              </Main>\n            )}\n          />\n          <Route\n            path={ROUTES.USER_TASKS}\n            render={props => <UserTasks userId={userId} {...props} />}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    projectsById: projectSelectors.getProjectsById(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUser: ({ userId, userData }) =>\n      dispatch(userActions.updateUser({ userId, userData })),\n    fetchUsersById: () => dispatch(userActions.fetchUsersById()),\n    fetchProjectsById: userId =>\n      dispatch(projectActions.fetchProjectsById(userId))\n  };\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(HomePage)\n);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../../components/Firebase';\nimport { Input } from '../../components/Input';\nimport { Button } from '../../components/Button';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = e => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .passwordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    e.preventDefault();\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n    const isInvalid = passwordOne === '' || passwordOne !== passwordTwo;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"user-form\">\n        <Input\n          name=\"passwordOne\"\n          label=\"New Password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          label=\"Confirm New Password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          className=\"user-form__input\"\n        />\n        <Button\n          disabled={isInvalid}\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.onSubmit}\n        >\n          Change My Password\n        </Button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React from 'react';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport { PasswordChangeForm } from '../PasswordChange';\nimport { AuthUserContext, withAuthorization } from '../../components/Session';\nimport './Account.scss';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <main className=\"account\">\n        <h1>Account: {authUser.email}</h1>\n        <section className=\"account__section\">\n        <h2>Forgot your password?</h2>\n          <PasswordForgetForm />\n        </section>\n        <section className=\"account__section\">\n        <h2>Change your password.</h2>\n          <PasswordChangeForm />\n        </section>\n      </main>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(AccountPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withAuthorization } from '../../components/Session';\nimport { userActions, userSelectors } from '../../ducks/users';\nimport './Admin.scss';\n\nclass AdminPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      users: {}\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    /*\n    this.props.firebase.users().on('value', snapshot => {\n      this.setState({\n        users: snapshot.val(),\n        loading: false\n      });\n    });\n    */\n  }\n\n  componentWillUnmount() {\n    /*\n    this.props.firebase.users().off();\n    */\n  }\n\n  render() {\n    return (\n      <main className=\"admin\">\n        <h1>Admin</h1>\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentUser: userSelectors.getCurrentUserData(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsersById: () => dispatch(userActions.fetchUsersById())\n  };\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(AdminPage)\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { Icon } from '../Icon';\nimport './Logo.scss';\n\nconst Logo = ({ size, className, onClick }) => {\n  return (\n    <div className={`logo logo--${size} ${className}`}>\n      <Link className=\"logo__link\" to={ROUTES.LANDING} onClick={onClick}>\n        <span className=\"logo__text\">workflow</span>\n      </Link>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React, { Component } from 'react';\nimport './Navbar.scss';\nimport { Logo } from '../Logo';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\n\nexport default class Navbar extends Component {\n  static defaultProps = {\n    minWidth: 768,\n    classes: {\n      navbar: '',\n      links: ''\n    }\n  };\n\n  state = {\n    viewportWidth: window.innerWidth,\n    isMobileNavVisible: false,\n    isTouchEnabled: false\n  };\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    document.addEventListener('touchstart', this.handleTouch);\n    document.addEventListener('click', this.handleOutsideClick);\n  }\n\n  handleResize = () => {\n    this.setState({\n      viewportWidth: window.innerWidth\n    });\n  };\n\n  toggleMobileNavVisibility = () => {\n    this.setState(prevState => ({\n      isMobileNavVisible: !prevState.isMobileNavVisible\n    }));\n  };\n\n  handleClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    if (!isMobileView) return;\n    if (e.target.matches('button') || e.target.matches('a')) {\n      this.toggleMobileNavVisibility();\n    }\n  };\n\n  componentWillUnmount() {\n    const { isTouchEnabled } = this.state;\n    window.removeEventListener('resize', this.handleResize);\n\n    if (isTouchEnabled) {\n      document.removeEventListener('touchstart', this.handleOutsideClick);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick);\n      document.removeEventListener('touchstart', this.handleTouch);\n    }\n  }\n\n  handleOutsideClick = e => {\n    const { viewportWidth } = this.state;\n    const { minWidth } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n    if (\n      !isMobileView ||\n      this.navLinksEl.contains(e.target) ||\n      e.target.matches('button') ||\n      e.target.matches('a')\n    )\n      return;\n    this.setState({\n      isMobileNavVisible: false\n    });\n  };\n\n  handleTouch = () => {\n    const { isTouchEnabled } = this.state;\n    if (isTouchEnabled === true) return;\n    this.setState({\n      isTouchEnabled: true\n    });\n    document.removeEventListener('touchstart', this.handleTouch);\n    document.removeEventListener('click', this.handleOutsideClick);\n    document.addEventListener('touchstart', this.handleOutsideClick);\n  };\n\n  render() {\n    const { viewportWidth, isMobileNavVisible } = this.state;\n    const { minWidth, classes, children } = this.props;\n    const isMobileView = viewportWidth < minWidth;\n\n    return (\n      <nav\n        className={`navbar ${isMobileView ? 'is-collapsed' : ''} ${\n          isMobileView && isMobileNavVisible ? 'show-links' : ''\n        } ${classes.navbar}`}\n        ref={el => (this.navEl = el)}\n      >\n        <Logo className=\"navbar__logo\" onClick={this.handleClick} />\n        {isMobileView && (\n          <Button\n            type=\"button\"\n            color=\"primary\"\n            onClick={this.toggleMobileNavVisibility}\n            iconOnly\n          >\n            <Icon name=\"menu\" />\n          </Button>\n        )}\n        <ul\n          className={`navbar__links ${classes.links}`}\n          onClick={this.handleClick}\n          ref={el => (this.navLinksEl = el)}\n        >\n          {children}\n        </ul>\n      </nav>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Logo } from '../Logo';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport './Sidebar.scss';\n\nexport const SidebarIcon = ({ name }) => {\n  return <Icon name={name} className=\"sidebar__icon\" />;\n};\n\nexport default class Sidebar extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { onToggle, children } = this.props;\n    return (\n      <div className=\"sidebar__canvas\">\n        <Button\n          type=\"button\"\n          onClick={onToggle}\n          className=\"sidebar__btn--toggle\"\n          size=\"sm\"\n          iconOnly\n        >\n          <Icon name=\"bar-chart-2\" />\n        </Button>\n        <div className=\"sidebar\">\n          <nav className=\"sidebar__nav\">\n            <div className=\"sidebar__logo\">\n              <Logo size=\"sm\" />\n            </div>\n            <ul className=\"sidebar__list\">{children}</ul>\n          </nav>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { SidebarIcon } from './Sidebar';\n\nexport const NavLinksNonAuth = ({onClick}) => (\n  <>\n    <li>\n      <NavLink onClick={onClick} to={ROUTES.SIGN_IN}>Log In</NavLink>\n    </li>\n    <li>\n      <NavLink onClick={onClick} to={ROUTES.SIGN_UP}>Get Started</NavLink>\n    </li>\n  </>\n);\n\nexport const NavLinksAuth = ({ userId, onClick }) => (\n  <>\n    <li className=\"sidebar__item\">\n      <NavLink onClick={onClick} className=\"sidebar__link\" to={`/0/home/${userId}`}>\n        <SidebarIcon name=\"home\" />\n        <span className=\"sidebar__section-name\">Home</span>\n      </NavLink>\n    </li>\n    <li className=\"sidebar__item\">\n      <NavLink onClick={onClick} className=\"sidebar__link\" to={`/0/${userId}/projects`}>\n        <SidebarIcon name=\"grid\" />\n        <span className=\"sidebar__section-name\">Projects</span>\n      </NavLink>\n    </li>\n    <li className=\"sidebar__item\">\n      <NavLink onClick={onClick} className=\"sidebar__link\" to={`/0/${userId}/tasks`}>\n        <SidebarIcon name=\"check-square\" />\n        <span className=\"sidebar__section-name\">Tasks</span>\n      </NavLink>\n    </li>\n    <li className=\"sidebar__item\">\n      <NavLink onClick={onClick} className=\"sidebar__link\" to={ROUTES.ADMIN}>\n        <SidebarIcon name=\"settings\" />\n        <span className=\"sidebar__section-name\">Admin</span>\n      </NavLink>\n    </li>\n  </>\n);\n","import React from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Button } from '../Button';\n\nconst SignOutButton = ({ firebase, className }) => (\n  <Button\n    type=\"button\"\n    onClick={firebase.signOut}\n    className={className}\n    color=\"primary\"\n  >\n    Log Out\n  </Button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React, { Component, createRef } from 'react';\nimport { Button } from '../Button';\nimport { Input } from '../Input';\nimport { Icon } from '../Icon';\nimport './SearchBar.scss';\n\nexport default class SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false,\n      query: ''\n    };\n    this.inputEl = createRef();\n  }\n\n  handleClick = e => {\n    const { query } = this.state;\n    const { name } = e.target;\n    e.stopPropagation();\n    if (name === 'search' || query !== '') return;\n    if (name === 'toggle') {\n      this.inputEl.current.focus();\n    }\n    this.setState(state => ({\n      isExpanded: !state.isExpanded\n    }));\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  render() {\n    return (\n      <div\n        onClick={this.handleClick}\n        className={`search-bar${this.state.isExpanded ? ' is-expanded' : ''}`}\n      >\n        <form className=\"search-form\" onSubmit={this.handleSubmit}>\n          <Input\n            name=\"search\"\n            className=\"search-form__input\"\n            type=\"text\"\n            inputRef={this.inputEl}\n            hideLabel\n          />\n          <Input\n            name=\"submit\"\n            className=\"search-form__submit\"\n            type=\"submit\"\n            hideLabel\n          />\n          <Button\n            type=\"button\"\n            onClick={this.handleClick}\n            className=\"search-form__btn\"\n            name=\"toggle\"\n            iconOnly\n          >\n            <Icon name=\"search\" />\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { currentUserSelectors } from '../../ducks/currentUser';\nimport { PopoverWrapper } from '../Popover';\nimport { Avatar } from '../Avatar';\nimport { Menu, MenuItem } from '../Menu';\nimport { SignOutButton } from '../SignOutButton';\nimport { SearchBar } from '../SearchBar';\nimport * as ROUTES from '../../constants/routes';\nimport './Topbar.scss';\n\nclass Topbar extends Component {\n  render() {\n    const { currentUser } = this.props;\n    return (\n      <div className=\"topbar\">\n        <SearchBar />\n        {currentUser && (\n          <PopoverWrapper\n            classes={{\n              wrapper: 'topbar__user-actions-wrapper',\n              popover: 'topbar__user-actions'\n            }}\n            alignOuter=\"right\"\n            alignInner=\"right\"\n            buttonProps={{\n              size: 'sm',\n              iconOnly: true,\n              className: 'topbar__btn--user-actions',\n              children: (\n                <Avatar\n                  classes={{\n                    avatar: 'topbar__avatar',\n                    placeholder: 'topbar__avatar-placeholder'\n                  }}\n                  fullName={currentUser.name}\n                  size=\"sm\"\n                  variant=\"circle\"\n                  imgSrc={currentUser.photoURL}\n                />\n              )\n            }}\n          >\n            <Menu>\n              <MenuItem>\n                <NavLink className=\"topbar__link\" to={ROUTES.ACCOUNT}>\n                  My Account\n                </NavLink>\n              </MenuItem>\n              <MenuItem>\n                <SignOutButton className=\"topbar__link\" />\n              </MenuItem>\n            </Menu>\n          </PopoverWrapper>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentUser: currentUserSelectors.getCurrentUser(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Topbar);\n","import React, { Component } from 'react';\nimport { AuthUserContext } from '../Session';\nimport { Navbar, NavLinksAuth, NavLinksNonAuth, Sidebar } from '../Nav';\nimport { Avatar } from '../Avatar';\nimport { Topbar } from '../Topbar';\nimport './Header.scss';\n\nexport default class Header extends Component {\n  state = {\n    isNavExpanded: false\n  };\n\n  toggleNav = () => {\n    this.setState(prevState => ({\n      isNavExpanded: !prevState.isNavExpanded\n    }));\n  };\n\n  handleClick = e => {\n    this.setState(state => ({\n      isNavExpanded: false\n    }));\n  };\n\n  render() {\n    const { isNavExpanded } = this.state;\n    return (\n      <header className={`header ${isNavExpanded ? 'expand-nav' : ''}`}>\n        <AuthUserContext.Consumer>\n          {authUser =>\n            authUser ? (\n              <>\n                <Sidebar onToggle={this.toggleNav}>\n                  <NavLinksAuth onClick={this.toggleNav} userId={authUser.uid} />\n                </Sidebar>\n                <Topbar />\n              </>\n            ) : (\n              <Navbar>\n                <NavLinksNonAuth />\n              </Navbar>\n            )\n          }\n        </AuthUserContext.Consumer>\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { LandingPage } from '../Landing';\nimport { SignUpPage } from '../SignUp';\nimport { SignInPage } from '../SignIn';\nimport { PasswordForgetPage } from '../PasswordForget';\nimport { HomePage } from '../Home';\nimport { AccountPage } from '../Account';\nimport { AdminPage } from '../Admin';\nimport { withAuthentication } from '../../components/Session';\nimport { Header } from '../../components/Header';\nimport './App.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Header />\n        <Switch>\n          <Route exact path={ROUTES.LANDING} component={LandingPage} />\n          <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n          <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n          <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n          <Route path={ROUTES.APP} render={props => <HomePage {...props} />} />\n          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n          <Route path={ROUTES.ADMIN} component={AdminPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { projectsById } from '../ducks/projects';\nimport { tasksById } from '../ducks/tasks';\nimport { listsById } from '../ducks/lists';\nimport { usersById } from '../ducks/users';\nimport { subtasksById } from '../ducks/subtasks';\nimport { commentsById } from '../ducks/comments';\nimport { currentUser } from '../ducks/currentUser';\nimport { selectedTask } from '../ducks/selectedTask';\nimport { selectedProject } from '../ducks/selectedProject';\n\nexport default combineReducers({\n  currentUser,\n  projectsById,\n  tasksById,\n  listsById,\n  usersById,\n  subtasksById,\n  commentsById,\n  selectedTask,\n  selectedProject\n});\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\n\nexport default history;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport 'normalize.css';\nimport './index.scss';\nimport { App } from './pages/App';\nimport * as serviceWorker from './serviceWorker';\nimport { FirebaseContext } from './components/Firebase';\nimport reducers from './store/reducers';\nimport firebase from './store/firebase';\nimport history from './store/history';\n\nconst store = createStore(reducers, {}, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <FirebaseContext.Provider value={firebase}>\n      <Router basename={process.env.PUBLIC_URL} history={history}>\n        <App />\n      </Router>\n    </FirebaseContext.Provider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}